[
    {
        "content": "<p>I have a proof goal in the form of: <code>g A B (λx. f A B (h x)) C D = foo</code> and a theorem like: <code>f ?A ?B (h ?x) ?y = bar ?x ?y</code> that I want to use as an unfold rule. But the rule does not do anything because I need to eta-expand the lambda in my proof goal. How would I do that? (alternatively, getting rid of the <code>?y</code> in the theorem would work too)</p>",
        "id": 266628543,
        "sender_full_name": "Jan van Brügge",
        "timestamp": 1641150764
    },
    {
        "content": "<p>The <code>abs_def</code> attribute performs contraction of theorems of the form <code>?f ?x = ?g ?x</code>. So you can just do <code>my_unfold_rule[abs_def]</code>.</p>",
        "id": 266630123,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1641153263
    },
    {
        "content": "<p>Thanks, that's exactly what I needed.</p>",
        "id": 266630274,
        "sender_full_name": "Jan van Brügge",
        "timestamp": 1641153502
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"392255\">Jan van Brügge</span> has marked this topic as resolved.</p>",
        "id": 266630277,
        "sender_full_name": "Notification Bot",
        "timestamp": 1641153506
    }
]