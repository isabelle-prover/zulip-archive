[
    {
        "content": "<p>Is there a definition for the limit superior operator in one of the sessions distributed with Isabelle? At least for <code>lim sup X ≤ x</code>, I could write something like <code>max X (λ_. x) ⇢ x</code>, but maybe there’s also a dedicated function <code>lim_sup</code> or so.</p>",
        "id": 262942090,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1638124795
    },
    {
        "content": "<p>Yes! There is <code>Limsup :: 'a filter ⇒ ('a ⇒ 'b) ⇒ 'b</code> in <code>HOL-Library.Liminf_Limsup</code>, although it may be better to just import <code>HOL-Analysis.Analysis</code> (and set the session to <code>HOL-Analysis</code> by running JEdit with <code>-l HOL-Analysis</code>) since there may be more useful topological results that are in <code>HOL-Analysis</code> but not in <code>HOL-Library.Liminf_Limsup</code>.</p>",
        "id": 262944458,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1638128123
    },
    {
        "content": "<p>Thanks a lot for the pointers.</p>\n<p>Is <code>HOL-Analysis</code> pre-built, so that I can derive a session from <code>HOL-Analysis</code> instead of <code>HOL</code>, thus saving build time?</p>",
        "id": 262946190,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1638130697
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"423655\">Wolfgang Jeltsch</span> <a href=\"#narrow/stream/202961-General/topic/Limit.20superior/near/262946190\">said</a>:</p>\n<blockquote>\n<p>Thanks a lot for the pointers.</p>\n<p>Is <code>HOL-Analysis</code> pre-built, so that I can derive a session from <code>HOL-Analysis</code> instead of <code>HOL</code>, thus saving build time?</p>\n</blockquote>\n<p>Yes.</p>",
        "id": 262946223,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1638130756
    },
    {
        "content": "<p>The first time you use the <code>HOL-Analysis</code> session, e.g. by running <code>isabelle jedit -l HOL-Analysis</code>, Isabelle will build a heap image and save it for future use.</p>",
        "id": 262946294,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1638130831
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233155\">Lukas Stevens</span> <a href=\"#narrow/stream/202961-General/topic/Limit.20superior/near/262946223\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"423655\">Wolfgang Jeltsch</span> <a href=\"#narrow/stream/202961-General/topic/Limit.20superior/near/262946190\">said</a>:</p>\n<blockquote>\n<p>Thanks a lot for the pointers.</p>\n<p>Is <code>HOL-Analysis</code> pre-built, so that I can derive a session from <code>HOL-Analysis</code> instead of <code>HOL</code>, thus saving build time?</p>\n</blockquote>\n<p>Yes.</p>\n</blockquote>\n<p>Well, no, according to Manuel’s statement and the experience I meanwhile gathered myself. <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span></p>",
        "id": 262946697,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1638131420
    },
    {
        "content": "<p>I mean it will be prebuilt much in the same way as the HOL image is. You need to still build it once.</p>",
        "id": 262946773,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1638131527
    },
    {
        "content": "<p>No, <code>HOL</code> is already built. It wasn’t in older releases, but in Isabelle2021 it is.</p>",
        "id": 262946780,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1638131560
    },
    {
        "content": "<p>Interesting, that isn't the case on NixOS.</p>",
        "id": 262946791,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1638131598
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232736\">Manuel Eberl</span> <a href=\"#narrow/stream/202961-General/topic/Limit.20superior/near/262946294\">said</a>:</p>\n<blockquote>\n<p>The first time you use the <code>HOL-Analysis</code> session, e.g. by running <code>isabelle jedit -l HOL-Analysis</code>, Isabelle will build a heap image and save it for future use.</p>\n</blockquote>\n<p>It’s just doing that for me. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> However, this means I won’t be able to readily use <code>HOL-Analysis</code> in automated builds on GitHub. Well, perhaps I need only few or even no bits from it in my (small) development.</p>",
        "id": 262946797,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1638131627
    },
    {
        "content": "<p>If you use docker, you could create an image that builds HOL-Analysis first, or cache the relevant directory where the images are located.</p>",
        "id": 262946886,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1638131725
    },
    {
        "content": "<p>Yes, I would use GitHub’s caching mechanism, which I’m actually already using, as I’m using the TeX Live Docker image and download and unpack Isabelle into it (the Isabelle Docker image doesn’t contain TeX). However, I would have to separately trigger the building of the <code>HOL-Analyis</code> heap image.</p>",
        "id": 262946955,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1638131835
    },
    {
        "content": "<p>On a related note, do I have to import <code>Main</code> when importing <code>HOL-Analysis.Analysis</code>, or is it perhaps guaranteed that <code>HOL-Analysis</code> imports Main itself such that my development gets access to it as well?</p>",
        "id": 262946960,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1638131848
    },
    {
        "content": "<p>And is it normal that, when building the <code>HOL-Analysis</code> session, Isabelle processes the various theories in relatively quick succession but then spends ages on <code>HOL-Analysis.Analysis</code>, consuming lots of CPU power?</p>",
        "id": 262947279,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1638132350
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"423655\">Wolfgang Jeltsch</span> <a href=\"#narrow/stream/202961-General/topic/Limit.20superior/near/262947279\">said</a>:</p>\n<blockquote>\n<p>And is it normal that, when building the <code>HOL-Analysis</code> session, Isabelle processes the various theories in relatively quick succession but then spends ages on <code>HOL-Analysis.Analysis</code>, consuming lots of CPU power?</p>\n</blockquote>\n<p>That is normal.</p>",
        "id": 262947324,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1638132383
    },
    {
        "content": "<p>Okay, this build has finished now, but it took almost half an hour.</p>",
        "id": 262947325,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1638132401
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"423655\">Wolfgang Jeltsch</span> <a href=\"#narrow/stream/202961-General/topic/Limit.20superior/near/262946960\">said</a>:</p>\n<blockquote>\n<p>On a related note, do I have to import <code>Main</code> when importing <code>HOL-Analysis.Analysis</code>, or is it perhaps guaranteed that <code>HOL-Analysis</code> imports Main itself such that my development gets access to it as well?</p>\n</blockquote>\n<p>I think so.</p>",
        "id": 262947327,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1638132403
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"423655\">Wolfgang Jeltsch</span> <a href=\"#narrow/stream/202961-General/topic/Limit.20superior/near/262947325\">said</a>:</p>\n<blockquote>\n<p>Okay, this build has finished now, but it took almost half an hour.</p>\n</blockquote>\n<p>If I recall correctly HOL-Analysis benefits quite a bit from more memory. How much do you have?</p>",
        "id": 262947344,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1638132460
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233155\">Lukas Stevens</span> <a href=\"#narrow/stream/202961-General/topic/Limit.20superior/near/262947327\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"423655\">Wolfgang Jeltsch</span> <a href=\"#narrow/stream/202961-General/topic/Limit.20superior/near/262946960\">said</a>:</p>\n<blockquote>\n<p>On a related note, do I have to import <code>Main</code> when importing <code>HOL-Analysis.Analysis</code>, or is it perhaps guaranteed that <code>HOL-Analysis</code> imports Main itself such that my development gets access to it as well?</p>\n</blockquote>\n<p>I think so.</p>\n</blockquote>\n<p>Which one, the first (I have to import <code>Main</code>) or the second (it is guaranteed to be provided).</p>",
        "id": 262947352,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1638132480
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233155\">Lukas Stevens</span> <a href=\"#narrow/stream/202961-General/topic/Limit.20superior/near/262947344\">said</a>:</p>\n<blockquote>\n<p>If I recall correctly HOL-Analysis benefits quite a bit from more memory. How much do you have?</p>\n</blockquote>\n<p>8 GB. But why does it spend about 80 % of its time on the last theory? Or didn’t it spend it on the last theory, but on some postprocessing, which, despite being the longest part, isn’t mentioned in the output?</p>",
        "id": 262947401,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1638132567
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"423655\">Wolfgang Jeltsch</span> <a href=\"#narrow/stream/202961-General/topic/Limit.20superior/near/262947352\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"233155\">Lukas Stevens</span> <a href=\"#narrow/stream/202961-General/topic/Limit.20superior/near/262947327\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"423655\">Wolfgang Jeltsch</span> <a href=\"#narrow/stream/202961-General/topic/Limit.20superior/near/262946960\">said</a>:</p>\n<blockquote>\n<p>On a related note, do I have to import <code>Main</code> when importing <code>HOL-Analysis.Analysis</code>, or is it perhaps guaranteed that <code>HOL-Analysis</code> imports Main itself such that my development gets access to it as well?</p>\n</blockquote>\n<p>I think so.</p>\n</blockquote>\n<p>Which one, the first (I have to import <code>Main</code>) or the second (it is guaranteed to be provided).</p>\n</blockquote>\n<p>Sorry. HOL-Analysis should import Main already.</p>",
        "id": 262947404,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1638132598
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"423655\">Wolfgang Jeltsch</span> <a href=\"#narrow/stream/202961-General/topic/Limit.20superior/near/262947401\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"233155\">Lukas Stevens</span> <a href=\"#narrow/stream/202961-General/topic/Limit.20superior/near/262947344\">said</a>:</p>\n<blockquote>\n<p>If I recall correctly HOL-Analysis benefits quite a bit from more memory. How much do you have?</p>\n</blockquote>\n<p>8 GB. But why does it spend about 80 % of its time on the last theory? Or didn’t it spend it on the last theory, but on some postprocessing, which, despite being the longest part, isn’t mentioned in the output?</p>\n</blockquote>\n<p>It launches into processing a lot of files and therefore proofs. And then does them all in parallel. This is why you get quickly to all files but it takes a while to finish them.</p>",
        "id": 262947454,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1638132654
    },
    {
        "content": "<p>Proofs are using futures so you assume that you will get a proof at some point but you can process the rest of the proof (and file) already.</p>",
        "id": 262947529,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1638132772
    },
    {
        "content": "<p><code>HOL-Analysis</code> is a bit of a beast. On my machine, it takes something like 3.5 minutes, but I have a pretty beefy 24-core machine with 64 GB of RAM. Not sure whether CPU or memory is more of a bottleneck, but I think it definitely benefits from more cores. You might get away with just using <code>HOL-Library.Liminf_Limsup</code> though depending on what you need.</p>",
        "id": 262947679,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1638133030
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"423655\">Wolfgang Jeltsch</span> has marked this topic as resolved.</p>",
        "id": 262948110,
        "sender_full_name": "Notification Bot",
        "timestamp": 1638133515
    }
]