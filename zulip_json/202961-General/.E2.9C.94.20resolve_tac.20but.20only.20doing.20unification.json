[
    {
        "content": "<p>Is there a tactic that works like <code>resolve_tac</code>, but only does the unification and not solve the goal yet? The rule I want to resolve with has variables in the assumptions that are not part of the conclusion and I want to instantiate them with <code>id</code>. To do that I would first need to fix all variables that are used in the goal (i.e. do unification). If I don't do this I end up with a goal like <code>prems ==&gt; bij (?f3 &lt;all forall bound variables&gt;)</code> which isabelle refuses to unify with <code>id</code> if i try to apply <code>bij_id</code></p>",
        "id": 274833521,
        "sender_full_name": "Jan van Br端gge",
        "timestamp": 1646918629
    },
    {
        "content": "<p>If bij_id is not applicable to this goal, then the type of ?f3 must not unify with ?'a =&gt; ?'a.</p>",
        "id": 274840824,
        "sender_full_name": "Dmitriy Traytel",
        "timestamp": 1646922026
    },
    {
        "content": "<p>To some extend using <code>supply [[unify_trace_failure]]</code> gives an error message that helps finding out why goals do not unify</p>",
        "id": 274840946,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1646922097
    },
    {
        "content": "<p>I am not sure why, but replacing <code>TRYALL (resolve_tac ctxt @{thms bij_id} ORELSE' assume_tac ctxt)</code> with <code>REPEAT_DETERM (resolve_tac ctxt @{thms bij_id} 1 ORELSE assume_tac ctxt 1)</code> works? Wat?</p>",
        "id": 274841330,
        "sender_full_name": "Jan van Br端gge",
        "timestamp": 1646922252
    },
    {
        "content": "<p><code>TRYALL</code> starts with the last subgoal, whereas <code>REPEAT_DETERM</code> with the first. Since you have schematic variables in your goals, the order can matter.</p>",
        "id": 274841934,
        "sender_full_name": "Dmitriy Traytel",
        "timestamp": 1646922559
    },
    {
        "content": "<p>Ah, yes there were two kinds of goals that were still schematic and the <code>bij</code> goal just happend to be the one that failed. Adding more theorems to the resolve tac to cover the other kinds, makes it work with <code>TRYALL</code> too.</p>",
        "id": 274842187,
        "sender_full_name": "Jan van Br端gge",
        "timestamp": 1646922689
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"392255\">Jan van Br端gge</span> has marked this topic as resolved.</p>",
        "id": 274842193,
        "sender_full_name": "Notification Bot",
        "timestamp": 1646922692
    }
]