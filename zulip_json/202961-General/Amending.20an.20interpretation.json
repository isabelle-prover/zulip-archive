[
    {
        "content": "<p>Say I have a locale <code>A</code> and a locale <code>B</code> that imports it (extends it). When I interpret locale <code>A</code>, I have to provide concrete parameters, which can be complex expressions. When I want to extend the interpretation to <code>B</code>, I have to repeat these parameters it seems. How can I avoid that?</p>\n<p>I think I could interpret <code>A</code> and <code>B</code> together by technically just interpreting <code>B</code>. However, my use case is actually more complex: It features a locale <code>C</code> that upon interpretation automatically interprets <code>A</code> via <code>sublocale</code>; so the “complex expressions” for the parameters of <code>A</code> are provided once and for all, and I don’t want to write them again and again when interpreting <code>C</code>.</p>",
        "id": 381011814,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1690977739
    },
    {
        "content": "<p>create definitions?</p>",
        "id": 381032479,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1690981530
    },
    {
        "content": "<p>You mean definitions that repeat the parameters?</p>\n<p>It always puzzled me that concrete locale parameters of interpretations aren’t accessible, when concrete instances of locale assumptions are, as is everything you define and proof within the locale context.</p>",
        "id": 381041279,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1690983139
    },
    {
        "content": "<p>Ideally, I’d like to not have to write anything. Writing just underscores comes close, but this doesn’t do what I want (it tries to instantiate locale parameters with constants of the same names from the theory context, which usually is not what you want, I guess).</p>",
        "id": 381041582,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1690983200
    },
    {
        "content": "<p>yeah but usually you want to have make the parameters opaque for the simplifier</p>",
        "id": 381048579,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1690984447
    },
    {
        "content": "<p>it gets really annoying when simplifier decides that one of your parameters can be simplified (because they are always there, just hidden)</p>",
        "id": 381048752,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1690984486
    }
]