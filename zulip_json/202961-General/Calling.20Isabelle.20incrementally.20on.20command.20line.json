[
    {
        "content": "<p>Hi all,</p>\n<p>Suppose I have a .thy file F and would like to interact with Isabelle via the command line. I want to send Isabelle a small snippet P, say a lemma, a definition or a function.<br>\nIs there a way to set F as the \"context\" and ask Isabelle to give the output it normally gives when you type P in jedit?<br>\nThis way you can use Isabelle without the limitation of typing speed and try out many examples via some parameterised script.</p>\n<p>A simple-minded minimal example:<br>\nLet's say F is called CommandLineIsabelle.thy:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">theory</span><span class=\"w\"> </span><span class=\"n\">CommandLineIsabelle</span><span class=\"w\"> </span><span class=\"kp\">imports</span><span class=\"w\"> </span><span class=\"n\">Main</span>\n<span class=\"k\">begin</span>\n\n<span class=\"k\">datatype</span><span class=\"w\"> </span><span class=\"n\">Counter</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"w\"> </span><span class=\"n\">int</span>\n\n<span class=\"k\">inductive</span>\n<span class=\"w\">  </span><span class=\"n\">nextC</span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"Counter ⇒ Counter ⇒ bool\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_ ↝ _\"</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">100</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">100</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">100</span><span class=\"o\">)</span>\n<span class=\"kp\">where</span>\n<span class=\"w\">  </span><span class=\"n\">inc</span><span class=\"o\">[</span><span class=\"n\">intro</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">simp</span><span class=\"o\">]:</span><span class=\"s\">\"C n ↝ C (n + 1)\"</span>\n<span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">dec</span><span class=\"o\">[</span><span class=\"n\">intro</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">simp</span><span class=\"o\">]:</span><span class=\"w\"> </span><span class=\"s\">\"C n ↝ C (n - 1)\"</span>\n\n<span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">c_goes_to_everywhere</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"(rtranclp nextC) (C n)  (C m)\"</span>\n\n<span class=\"w\">  </span><span class=\"gr\">oops</span>\n\n\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>and P is the snippet</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">c_goes_to_everywhere</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"(rtranclp nextC) (C 0)  (C 9)\"</span>\n<span class=\"w\">  </span><span class=\"kt\">sledgehammer</span>\n<span class=\"w\">  </span><span class=\"gr\">oops</span>\n</code></pre></div>\n<p>Is there something like a command line <code>isabelle F P </code><br>\nsuch that the output would be the same as if the output pane of jedit <br>\nif you insert P into F just before the <code>end</code> keyword, like this?</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">theory</span><span class=\"w\"> </span><span class=\"n\">CommandLineIsabelle</span><span class=\"w\"> </span><span class=\"kp\">imports</span><span class=\"w\"> </span><span class=\"n\">Main</span>\n<span class=\"k\">begin</span>\n\n<span class=\"k\">datatype</span><span class=\"w\"> </span><span class=\"n\">Counter</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"w\"> </span><span class=\"n\">int</span>\n\n<span class=\"k\">inductive</span>\n<span class=\"w\">  </span><span class=\"n\">nextC</span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"Counter ⇒ Counter ⇒ bool\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_ ↝ _\"</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">100</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">100</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">100</span><span class=\"o\">)</span>\n<span class=\"kp\">where</span>\n<span class=\"w\">  </span><span class=\"n\">inc</span><span class=\"o\">[</span><span class=\"n\">intro</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">simp</span><span class=\"o\">]:</span><span class=\"s\">\"C n ↝ C (n + 1)\"</span>\n<span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">dec</span><span class=\"o\">[</span><span class=\"n\">intro</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">simp</span><span class=\"o\">]:</span><span class=\"w\"> </span><span class=\"s\">\"C n ↝ C (n - 1)\"</span>\n\n<span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">c_goes_to_everywhere</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"(rtranclp nextC) (C n)  (C m)\"</span>\n\n<span class=\"w\">  </span><span class=\"gr\">oops</span>\n\n<span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">c_goes_to_everywhere</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"(rtranclp nextC) (C 0)  (C 9)\"</span>\n<span class=\"w\">  </span><span class=\"kt\">sledgehammer</span>\n<span class=\"w\">  </span><span class=\"gr\">oops</span>\n<span class=\"c\">(*cursor position *)</span>\n\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>This way, Isabelle can be used as a testing oracle for an in-development formalisation.</p>\n<p>Thanks a lot!</p>",
        "id": 389042783,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1693856196
    },
    {
        "content": "<p>As far as I know there is a single project using the isabelle server: <a href=\"https://www.tu.berlin/mtv/forschung/projekte/beweisassistenten-in-der-lehre\">https://www.tu.berlin/mtv/forschung/projekte/beweisassistenten-in-der-lehre</a></p>",
        "id": 389046086,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1693858740
    },
    {
        "content": "<p>and they relied on help from makarius to get that done</p>",
        "id": 389046142,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1693858788
    },
    {
        "content": "<p>There could also be an alternative relying on the LSP protocol; that could allow for the same thing (but providing less control)</p>",
        "id": 389046253,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1693858872
    },
    {
        "content": "<p>But in short: no, nothing exist</p>",
        "id": 389046276,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1693858890
    },
    {
        "content": "<p>and Isabelle/jEdit remains the official way to interact with Isabelle</p>",
        "id": 389046291,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1693858907
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/202961-General/topic/Calling.20Isabelle.20incrementally.20on.20command.20line/near/389046086\">said</a>:</p>\n<blockquote>\n<p>As far as I know there is a single project using the isabelle server: <a href=\"https://www.tu.berlin/mtv/forschung/projekte/beweisassistenten-in-der-lehre\">https://www.tu.berlin/mtv/forschung/projekte/beweisassistenten-in-der-lehre</a></p>\n</blockquote>\n<p>Thanks Mathias!<br>\nI was wondering if you can use command line <em>at all</em> to ask Isabelle to interpret things and give answers.<br>\nSomething like calling isabelle and ask it to check a .thy file(i.e. needs not be incremental).<br>\nI know that you can generate PDFs automatically invoking isabelle command line, but not sure about other usages.</p>",
        "id": 389170172,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1693914501
    },
    {
        "content": "<p>with a session (the ROOT file) and <code>isabelle build MySessionName</code></p>",
        "id": 389170337,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1693914568
    },
    {
        "content": "<p>Dominique's <a href=\"https://github.com/dominique-unruh/scala-isabelle\">scala-isabelle</a> could be relevant here, though it is not official by Makarius standard :-)</p>",
        "id": 389189943,
        "sender_full_name": "Wenda Li",
        "timestamp": 1693920511
    },
    {
        "content": "<p>I have similar needs and I have been trying to look at scala-isabelle for it but it doesn't seem to provide a interface to build a theory/session and get structured feedback about how that went. It provides types for the various components but not specific methods, is the case that you need to know what Isabelle/ML functions to call to do something like that?</p>",
        "id": 389864287,
        "sender_full_name": "Andrea Vezzosi",
        "timestamp": 1694173010
    }
]