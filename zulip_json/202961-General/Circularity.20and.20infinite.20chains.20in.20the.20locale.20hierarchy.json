[
    {
        "content": "<p>Section 5.7.3 Locale interpretation in the Isar Reference Manual says:</p>\n<blockquote>\n<p>Circular sublocale declarations are allowed as long as they do not lead to infinite chains.</p>\n</blockquote>\n<p>How a circular, sublocale A &lt; B, sublocale B &lt; A declaration does <em>not</em> lead to an infinite chain?</p>\n<p>And, what declarations do lead to an infinite chain?</p>\n<p>This works:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">locale</span><span class=\"w\"> </span><span class=\"n\">partial_order</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">le</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'a ⇒ 'a ⇒ bool\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"kp\">infixl</span><span class=\"w\"> </span><span class=\"s\">\"⊑\"</span><span class=\"w\"> </span><span class=\"n\">50</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"n\">reflexivity</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">intro</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">simp</span><span class=\"o\">]:</span><span class=\"w\"> </span><span class=\"s\">\"x ⊑ x\"</span>\n<span class=\"w\">      </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"n\">antisymmetry</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">intro</span><span class=\"o\">]:</span><span class=\"w\"> </span><span class=\"s\">\"x ⊑ y ⟹ y ⊑ x ⟹ x = y\"</span>\n<span class=\"w\">      </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"n\">transitivity</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">trans</span><span class=\"o\">]:</span><span class=\"w\"> </span><span class=\"s\">\"x ⊑ y ⟹ y ⊑ z ⟹ x ⊑ z\"</span>\n<span class=\"k\">begin</span><span class=\"w\"> </span><span class=\"k\">end</span>\n\n<span class=\"k\">locale</span><span class=\"w\"> </span><span class=\"n\">po</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">partial_order</span>\n\n<span class=\"kn\">sublocale</span><span class=\"w\"> </span><span class=\"n\">po</span><span class=\"w\"> </span><span class=\"n\">&lt;</span><span class=\"w\"> </span><span class=\"n\">partial_order</span><span class=\"w\"> </span><span class=\"ow\">..</span>\n\n<span class=\"kn\">sublocale</span><span class=\"w\"> </span><span class=\"n\">partial_order</span><span class=\"w\"> </span><span class=\"n\">&lt;</span><span class=\"w\"> </span><span class=\"n\">po</span><span class=\"w\"> </span><span class=\"kt\">sledgehammer</span>\n<span class=\"w\">  </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">partial_order_axioms</span><span class=\"w\"> </span><span class=\"n\">po_def</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">blast</span>\n</code></pre></div>",
        "id": 539523228,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1757933643
    },
    {
        "content": "<p>You have to be careful, some locale errors only happens when you instantiate them</p>",
        "id": 539599067,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1757952454
    },
    {
        "content": "<p>because it is only at the instantiation time, that the theorems are generated</p>",
        "id": 539599170,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1757952481
    },
    {
        "content": "<p>I think if you reach the exact same locale interpretation again in the chain that you already have then that's fine; it just terminates at that point. That's how e.g. the \"dual\" sublocales in the order locales work. But all the term parameters have to be exactly the same terms for that to work. I'm sure that's documented somewhere...</p>",
        "id": 539991531,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1758109117
    }
]