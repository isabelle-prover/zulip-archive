[
    {
        "content": "<p>Does anyone have any experience setting up CI for Isabelle with GitHub?</p>",
        "id": 203372254,
        "sender_full_name": "Josh Chen",
        "timestamp": 1594291847
    },
    {
        "content": "<p>I vaguely seem to recall that Lars Hupel tried it once, but found that GitHub's free CI is not beefy enough for Isabelle.</p>",
        "id": 203372576,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594292252
    },
    {
        "content": "<p>Might depend on what you're trying to build exactly though.</p>",
        "id": 203372583,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594292264
    },
    {
        "content": "<p>Oh I just want to set up CI for the Isabelle/HoTT logic and theories. As a non-CS person by training it's new to me :D</p>",
        "id": 203372783,
        "sender_full_name": "Josh Chen",
        "timestamp": 1594292455
    },
    {
        "content": "<p>I found <a href=\"https://github.com/isabelle-prover/admin\">https://github.com/isabelle-prover/admin</a>, but I can't yet make sense of it.</p>",
        "id": 203372905,
        "sender_full_name": "Josh Chen",
        "timestamp": 1594292572
    },
    {
        "content": "<p>I would recommend to just as Lars Hupel. He knows about this kind of stuff.</p>",
        "id": 203373076,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594292698
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232736\">@Manuel Eberl</span> What do you mean by not beefy? Lean / Mathlib uses it + Bors and we managed to process a whole lot of PRs while making sure everything builds</p>",
        "id": 203380645,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1594298815
    },
    {
        "content": "<p>I think he said something like there's a time and/or memory limit and it's just not enough to build reasonably-sized Isabelle sessions. Although I don't quite remember what he said; maybe the basic HOL session was still okay, but something like HOL-Analysis probably not. That one can take something like 60 CPU minutes. In any case, I might be mistaken altogether – I think this was a conversation we had some 3 years ago or so.</p>",
        "id": 203399879,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594308239
    },
    {
        "content": "<p>For Isabelle distribution + AFP CI on every push, we have a 64 core, 512 GB build server. And that even excludes some of the ‘very slow’ sessions; these are built on some TUM VMs every night. And then there's the macOS tests on some old Macbooks and the testboard for experimental changes on another pretty big (but older) build server.</p>",
        "id": 203400354,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594308414
    },
    {
        "content": "<p>Isabelle + AFP is /really/ big. But yeah Isabelle/HoTT is probably much more feasible.</p>",
        "id": 203400396,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594308435
    },
    {
        "content": "<p>So, Lars helped me do this once for my repository: <a href=\"https://github.com/wimmers/munta/blob/master/.travis.yml\">https://github.com/wimmers/munta/blob/master/.travis.yml</a></p>",
        "id": 203958271,
        "sender_full_name": "Simon Wimmer",
        "timestamp": 1594821425
    },
    {
        "content": "<p>The timeout is like 20 min on a single core, and that's just not enough time to finish building the HOL image, then some sessions from the AFP, and any session of this project on top.</p>",
        "id": 203958476,
        "sender_full_name": "Simon Wimmer",
        "timestamp": 1594821538
    },
    {
        "content": "<p>For your project, I could however imagine if it still works because you do not need much underlying material, right?</p>",
        "id": 203958577,
        "sender_full_name": "Simon Wimmer",
        "timestamp": 1594821594
    },
    {
        "content": "<p>Also, Travis is just the simplest way. You can also have the Github CI on your own hardware, and then it's a different story of course.</p>",
        "id": 203958679,
        "sender_full_name": "Simon Wimmer",
        "timestamp": 1594821626
    },
    {
        "content": "<p>This actually downloads Isabelle anew every time the CI is run, right?</p>",
        "id": 203961946,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594823132
    },
    {
        "content": "<p>Or is there some kind of persistency?</p>",
        "id": 203961969,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594823146
    },
    {
        "content": "<p>With Travis, we managed to get the timeout up to 50 min. 20 min is the maximum without response but you can pretend to be responsive every minute</p>",
        "id": 203961977,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1594823151
    },
    {
        "content": "<p>With Travis, you can cache the setup</p>",
        "id": 203962043,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1594823172
    },
    {
        "content": "<p>I think the Isabelle process emits random text to stdout frequently enough.</p>",
        "id": 203962740,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594823499
    },
    {
        "content": "<p>You should be able to go up to 50 min then. Actually, with staged builds, we managed to get about 4x 50  minutes</p>",
        "id": 203963069,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1594823652
    },
    {
        "content": "<p>It does download it anew every time. So, yeah, it's not very good :D</p>",
        "id": 203963194,
        "sender_full_name": "Simon Wimmer",
        "timestamp": 1594823734
    },
    {
        "content": "<p>But that sounds interesting, Simon. Maybe I should give it another shot.</p>",
        "id": 203963314,
        "sender_full_name": "Simon Wimmer",
        "timestamp": 1594823786
    },
    {
        "content": "<p>There's a lot that we managed to do with Travis but, disclaimer, we started feeling constrained in the  last 6 months and moved to Github CI. There, we met new challenges as we had multiple PRs everyday that we needed to build and the build taking over an hour, it took a long time before entering the queue and getting a build machine. So we started batching the builds using a tool called bors</p>",
        "id": 203963654,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1594823933
    },
    {
        "content": "<p>I say we but I was mostly hands off in that process</p>",
        "id": 203963706,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1594823960
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"234947\">@Rob Lewis</span> did a lot of heavy lifting, if I'm not mistaken</p>",
        "id": 203963747,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1594823987
    },
    {
        "content": "<p>Interesting. The setup that Lars did for Isabelle is also quite involved. And builds are not triggered from Github but Mercurial repositories, of course ;)</p>",
        "id": 203964230,
        "sender_full_name": "Simon Wimmer",
        "timestamp": 1594824240
    },
    {
        "content": "<p>Shows what I know! I wasn't even aware that Mercurial was preferred in Isabelle projectts</p>",
        "id": 203964861,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1594824498
    },
    {
        "content": "<p>Depends on what you mean by \"Isabelle projects\". There's the Isabelle distribution and the AFP, each in its own Mercurial repository. We thought about switching the AFP to Git when Bitbucket kicked out Mercurial, but ultimately decided against it.</p>",
        "id": 203964972,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594824560
    },
    {
        "content": "<p>For most of us, Mercurial over Git has historic reasons only. Makarius, however, is very adamant about Mercurial being the superior system and I don't think anyone cares enough about the whole Git vs. Mercurial discussion to go against him, since he's the one who makes things work behind the scenes at the end of the day.</p>",
        "id": 203965121,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594824647
    },
    {
        "content": "<p>That's fair. I also don't know enough about the difference to pass judgement. Git is getting ubiquitous so I usually default to git.</p>",
        "id": 203965620,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1594824869
    },
    {
        "content": "<p>Yeah me, too. I am equally incompetent at using both systems, so I don't really care.</p>",
        "id": 203965785,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594824948
    },
    {
        "content": "<p>Gabriel Ebner did more heavy lifting than I did in moving mathlib from Travis to GH Actions. But from my perspective, Actions has been a lot more pleasant to deal with than Travis was. And using Bors would have been necessary either way; Actions wasn't slower than Travis, if anything I think it was a bit faster. Of course, this is all irrelevant to you guys if you're not using GitHub!</p>",
        "id": 203991967,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1594836727
    },
    {
        "content": "<p>I just want to drop the idea to use Gitlab CI with a VM hosted at TUM. I found it really easy to set up and you won't have resource problems once properly set up.</p>",
        "id": 203992145,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1594836809
    },
    {
        "content": "<p>Gitlab CI supports caching</p>",
        "id": 203992516,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1594836971
    },
    {
        "content": "<p>Does the LRZ Gitlab support CI?</p>",
        "id": 203996822,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594839026
    },
    {
        "content": "<p>You could also add your stuff to the distribution, then you also get CI for free. ;)</p>",
        "id": 203996871,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594839052
    },
    {
        "content": "<p>I'd rather urge people to get stuff out of the distribution :D</p>",
        "id": 203997035,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1594839135
    },
    {
        "content": "<p>You just have to install the gitlab CI runner on the VM and register it with the LRZ Gitlab</p>",
        "id": 203997090,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1594839175
    },
    {
        "content": "<p>but any Gitlab instance would work. One can probably also mirror a Github repository on Gitlab and still run the CI on the Gitlab mirror if you want to have your project on Github</p>",
        "id": 203997171,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1594839222
    },
    {
        "content": "<blockquote>\n<p>I'd rather urge people to get stuff out of the distribution :D</p>\n</blockquote>\n<p>“The standard library is where modules go to die.”  -- Kenneth Reitz</p>",
        "id": 203997451,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1594839347
    },
    {
        "content": "<p>Well, something like an entirely new logic definitely fits into the distribution.</p>",
        "id": 203998574,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594839844
    },
    {
        "content": "<p>In the context of Isabelle, I'd argue that \"outside the distribution/AFP is where developments go to die\".</p>",
        "id": 203998634,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594839874
    },
    {
        "content": "<p>In the long term that is probably true.</p>",
        "id": 203998665,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1594839893
    },
    {
        "content": "<p>How many Isabelle developments older than 5 years outside the distribution + AFP do you know that are still actively developed? How many of them still work with Isabelle2020?</p>",
        "id": 203998680,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594839903
    },
    {
        "content": "<p>auto2 only still lives because Kevin fixed it. If it had been inactive for a few years more than that, the effort to fix it could have been so big it might not have been worth it.</p>",
        "id": 203998746,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594839943
    },
    {
        "content": "<p>Some major developments like Avigad's Prime Number Theorem have already succumbed to bit rot indefinitely.</p>",
        "id": 203998783,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594839961
    },
    {
        "content": "<p>But yeah there's a lot of ancient crap in the distribution that really shouldn't be there.</p>",
        "id": 203999014,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594840077
    },
    {
        "content": "<p>Some people (including me) have suggested moving that into the AFP, but that was rejected on the basis that this stuff is actually not in a good enough state to go to the AFP (and never will be).</p>",
        "id": 203999105,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594840106
    },
    {
        "content": "<p>These things date back to times when there was no AFP.</p>",
        "id": 203999114,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594840113
    },
    {
        "content": "<p>Then at some point, I hope they also will not be good enough for the distro anymore ^^</p>",
        "id": 203999320,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1594840212
    },
    {
        "content": "<p>I fear they might be of too much historic interest for that.</p>",
        "id": 203999484,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594840314
    },
    {
        "content": "<p>(aka \"nostalgia\")</p>",
        "id": 203999536,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594840324
    },
    {
        "content": "<p>Show some respect, some of these developments are probably older than you. :P</p>",
        "id": 203999576,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594840347
    },
    {
        "content": "<p>I played around with Github Actions this week. Now I let my heap images be built by github instead of straining my precious iMac :D<br>\n<a href=\"https://github.com/ammbauer/mirror-afp-2020/tree/9b95659af13b5fdbea1dc7a7a27ab90762865a1c/.github/workflows\">https://github.com/ammbauer/mirror-afp-2020/tree/9b95659af13b5fdbea1dc7a7a27ab90762865a1c/.github/workflows</a><br>\n<a href=\"https://github.com/ammbauer/mirror-afp-2020/actions/runs/172340567\">https://github.com/ammbauer/mirror-afp-2020/actions/runs/172340567</a></p>",
        "id": 204292938,
        "sender_full_name": "Max W. Haslbeck",
        "timestamp": 1595064022
    },
    {
        "content": "<p>Cool, that's nice! :) That's also what the lean people do for mathlib btw. When you checkout a version, it downloads the pre-built object files so you can start proving straight away. Would be nice to have this for the AFP too</p>",
        "id": 204297392,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1595072597
    },
    {
        "content": "<p>NIce! I got something working too. Is the <code>upload-artifact</code> action in your workflow for caching the heap images?</p>",
        "id": 204313497,
        "sender_full_name": "Josh Chen",
        "timestamp": 1595099048
    },
    {
        "content": "<p>I think it declares the heap image as a build artifact. You can download it here <a href=\"https://github.com/ammbauer/mirror-afp-2020/actions/runs/172340567\">https://github.com/ammbauer/mirror-afp-2020/actions/runs/172340567</a></p>",
        "id": 204341123,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1595151163
    },
    {
        "content": "<p>Under build artifacts and then click on skip_list_heaps</p>",
        "id": 204341143,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1595151214
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233154\">Kevin Kappelmann</span> <a href=\"#narrow/stream/202961-general/topic/Continuous.20integration/near/204297392\">said</a>:</p>\n<blockquote>\n<p>Cool, that's nice! :) That's also what the lean people do for mathlib btw. When you checkout a version, it downloads the pre-built object files so you can start proving straight away. Would be nice to have this for the AFP too</p>\n</blockquote>\n<p>At least at the time we set it up, there was no API to map a git commit hash to the corresponding Actions artifact. So our CI script uploads the build somewhere else with a URL completely determined by the hash. It is (was?) an annoying limitation of the Actions setup, but IIRC changing it was on their to-do list.</p>",
        "id": 204345618,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1595158892
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"228839\">Josh Chen</span> <a href=\"#narrow/stream/202961-general/topic/Continuous.20integration/near/204313497\">said</a>:</p>\n<blockquote>\n<p>NIce! I got something working too. Is the <code>upload-artifact</code> action in your workflow for caching the heap images?</p>\n</blockquote>\n<p>I used it to test if I can download and use the heap images. In this <a href=\"https://github.com/ammbauer/mirror-afp-2020/actions/runs/175419050\">action</a> I use the <code>.isabelle/Isabelle2020/etc/settings</code> file that I also have on my macs. I can then download the heap images, copy them to <code>.isabelle/Isabelle2020/heaps/</code> and directly use them with <code>isabelle jedit -l Skip_Lists</code>.</p>",
        "id": 204523151,
        "sender_full_name": "Max W. Haslbeck",
        "timestamp": 1595320401
    },
    {
        "content": "<p>Hi! I was looking for a CI solution for an Isabelle project and finally managed to create an Isabelle GitHub Action with heap cache enabled: <a href=\"https://github.com/pandaman64/isabelle-action\">https://github.com/pandaman64/isabelle-action</a><br>\nExample workflow: <a href=\"https://github.com/pandaman64/sabi/blob/master/.github/workflows/build.yml\">https://github.com/pandaman64/sabi/blob/master/.github/workflows/build.yml</a><br>\nThis <code>build.yml</code> builds heap images of your sessions and caches dependencies on rebuild.</p>\n<p>I hope this helps!</p>",
        "id": 210701362,
        "sender_full_name": "pandaman",
        "timestamp": 1600663705
    }
]