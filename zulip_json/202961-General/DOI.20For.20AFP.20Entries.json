[
    {
        "content": "<p>I'm not sure if this is the right place to ask, but I was wondering if there were any plans for AFP entries to have a DOI? I understand that the AFP entries change over time as new Isabelle versions are released, but I was wondering if DOI versioning – like what Zenodo does – could be a potential way to go over this issue.</p>",
        "id": 323687889,
        "sender_full_name": "Seung Hoon Park",
        "timestamp": 1674730255
    },
    {
        "content": "<p>I wanted to do that at some point, but haven't gotten around to. If anyone is volunteering to build Isabelle/Scala tooling for that, they're welcome :)</p>",
        "id": 323736754,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1674744262
    },
    {
        "content": "<p>Where would you mint those? All the services I am aware of charge pretty exorbitant fees for it. Plus, the AFP model runs counter to what DOIs are about. The idea is that behind every DOI there is one unique document with its own landing page and that document never changes. One could, in principle, mint one new DOI for every entry for every new release, and one meta-DOI that links to all of them. But that would 1. be much more work, 2. we would have to generate lots and lots of landing pages, and 3. it is hard to guarantee that we will be able to keep minting these indefinitely in the future.</p>",
        "id": 323822193,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1674761659
    },
    {
        "content": "<p>There are other services that aim to provide long-term resolvable identifiers similar to DOIs, e.g. the NBNs (a collaboration of a few European countries/institutions). There is also something called \"Permanent URL\", which I think is currently run by the Internet Archive.</p>",
        "id": 323823069,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1674761914
    },
    {
        "content": "<p>Right – thanks for the response. I was just curious if minting DOIs was a feasible option, and I wasn't aware of the costs that would be put into minting DOIs (or the enormous continuous effort required to get this going).</p>\n<p>I was thinking it would be nice if the entries did have this. For some venues, having DOIs for the purpose of artifact evaluation seems to be beneficial, though I guess this never has been an issue.</p>",
        "id": 324013760,
        "sender_full_name": "Seung Hoon Park",
        "timestamp": 1674815695
    },
    {
        "content": "<p>A solution to this is a DOI per entry that just references the concept and then one per AFP release and entry with the content (which we could generate that out once, and not change it). As for cost of minting, that's the real problem, but there are some providers which do that for free for research projects.</p>",
        "id": 324014327,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1674815866
    },
    {
        "content": "<p>Okay. I researched this many years ago and we actually did have one of those free providers for a year or so, but then they switched to a paid model. I was not able to find any more free ones after that, and you can never be sure that they will stay free.</p>",
        "id": 324017561,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1674816778
    },
    {
        "content": "<p>The TUM university library can mint DOIs in principle, but I did ask them and basically they will not mint DOIs for us unless we host stuff with them.</p>",
        "id": 324017646,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1674816810
    },
    {
        "content": "<p>(in the scope of their existing research data publication service)</p>",
        "id": 324017682,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1674816823
    },
    {
        "content": "<p>Generating a bunch of static landing pages for every entry on every release and minting a corresponding DOI is of course possible, but it means that we cannot change these in a meaningful way after the fact (e.g. design changes). Not a huge problem, probably, but still.</p>",
        "id": 324017866,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1674816879
    },
    {
        "content": "<p>And the main obstacle so far was simply that we do not have infrastructure for this yet.</p>",
        "id": 324017939,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1674816902
    },
    {
        "content": "<p>The NBN/Permanent URL might be a less rigid thing one could do – either people can do this themselves whenever they need a link like that or we could also try to automatically create those for each entry.</p>",
        "id": 324018111,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1674816960
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232736\">Manuel Eberl</span> <a href=\"#narrow/stream/202961-General/topic/DOI.20For.20AFP.20Entries/near/324017866\">said</a>:</p>\n<blockquote>\n<p>Generating a bunch of static landing pages for every entry on every release and minting a corresponding DOI is of course possible, but it means that we cannot change these in a meaningful way after the fact (e.g. design changes). Not a huge problem, probably, but still.</p>\n</blockquote>\n<p>Yes, I would keep it separate as plain HTML.</p>",
        "id": 324023702,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1674818690
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232736\">Manuel Eberl</span> <a href=\"#narrow/stream/202961-General/topic/DOI.20For.20AFP.20Entries/near/324018111\">said</a>:</p>\n<blockquote>\n<p>The NBN/Permanent URL might be a less rigid thing one could do – either people can do this themselves whenever they need a link like that or we could also try to automatically create those for each entry.</p>\n</blockquote>\n<p>Possible, but DOIs are far more popular, so I think they are a better solution.</p>",
        "id": 324024313,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1674818871
    }
]