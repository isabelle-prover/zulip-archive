[
    {
        "content": "<p>When I have</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"w\">    </span><span class=\"o\">(</span><span class=\"w\"> </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"n\">ltl</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">of</span>\n<span class=\"w\">                                  </span><span class=\"n\">LNil</span><span class=\"w\"> </span><span class=\"n\">⇒</span><span class=\"w\"> </span><span class=\"n\">s</span>\n<span class=\"w\">                                </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">tail</span><span class=\"w\"> </span><span class=\"n\">⇒</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">⦇</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"n\">tail</span><span class=\"w\"> </span><span class=\"n\">⦈</span>\n<span class=\"w\">     </span><span class=\"o\">)</span>\n</code></pre></div>\n<p>for a coinductive list, I get</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">Undefined</span><span class=\"w\"> </span><span class=\"kp\">constant</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"input_update\"</span>\n</code></pre></div>\n<p>where my datatype record definition is</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">datatype</span><span class=\"w\"> </span><span class=\"n\">state</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">State</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">funs</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"dec list\"</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">clock</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">nat</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">input</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"char llist\"</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"output\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"char list\"</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>I got the record update syntax from <code>src/HOL/ex/Datatype_Record_Examples.thy</code></p>\n<p>Am I doing something wrong or this is a bug in the datatype package?</p>",
        "id": 351080899,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1681917731
    },
    {
        "content": "<p>To use the infrastructure from HOL-Library.Datatype_Record, you need to use the command datatype_record explicitly (as the example file shows) instead of the datatype command.</p>",
        "id": 351088951,
        "sender_full_name": "Dmitriy Traytel",
        "timestamp": 1681919404
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"361271\">@Dmitriy Traytel</span> . Now I got an ambigous parse tree error:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"o\">---</span><span class=\"w\"> </span><span class=\"n\">parsetree1.txt</span><span class=\"w\">  </span><span class=\"n\">2023</span><span class=\"o\">-</span><span class=\"n\">04</span><span class=\"o\">-</span><span class=\"n\">20</span><span class=\"w\"> </span><span class=\"n\">09</span><span class=\"o\">:</span><span class=\"n\">47</span><span class=\"o\">:</span><span class=\"n\">12.084782007</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"n\">0100</span>\n<span class=\"o\">+++</span><span class=\"w\"> </span><span class=\"n\">parsetree2.txt</span><span class=\"w\">  </span><span class=\"n\">2023</span><span class=\"o\">-</span><span class=\"n\">04</span><span class=\"o\">-</span><span class=\"n\">20</span><span class=\"w\"> </span><span class=\"n\">09</span><span class=\"o\">:</span><span class=\"n\">47</span><span class=\"o\">:</span><span class=\"n\">31.740761144</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"n\">0100</span>\n<span class=\"n\">@@</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">25</span><span class=\"o\">,</span><span class=\"n\">4</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"n\">25</span><span class=\"o\">,</span><span class=\"n\">4</span><span class=\"w\"> </span><span class=\"n\">@@</span>\n<span class=\"w\">                         </span><span class=\"o\">(</span><span class=\"s\">\"_cargs\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_applC\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_position\"</span><span class=\"w\"> </span><span class=\"n\">next_char</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_applC\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_position\"</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_position\"</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"o\">)))</span>\n<span class=\"w\">                           </span><span class=\"o\">(</span><span class=\"s\">\"_case_syntax\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_applC\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_position\"</span><span class=\"w\"> </span><span class=\"n\">ltl</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_applC\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_position\"</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_position\"</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"o\">)))</span>\n<span class=\"w\">                             </span><span class=\"o\">(</span><span class=\"s\">\"_case2\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_case1\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_position\"</span><span class=\"w\"> </span><span class=\"n\">LNil</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_position\"</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"o\">))</span>\n<span class=\"o\">-</span><span class=\"w\">                              </span><span class=\"o\">(</span><span class=\"s\">\"_case1\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_position\"</span><span class=\"w\"> </span><span class=\"n\">tail</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_datatype_record_update\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_position\"</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_datatype_field_update\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_constify\"</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_position\"</span><span class=\"w\"> </span><span class=\"n\">tail</span><span class=\"o\">))))))))))))))))))</span>\n<span class=\"o\">+</span><span class=\"w\">                              </span><span class=\"o\">(</span><span class=\"s\">\"_case1\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_position\"</span><span class=\"w\"> </span><span class=\"n\">tail</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_record_update\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_position\"</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_field_update\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_constify\"</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_position\"</span><span class=\"w\"> </span><span class=\"n\">tail</span><span class=\"o\">))))))))))))))))))</span>\n</code></pre></div>\n<p>so Isabelle cannot differentiate between datatype record update and classical record update syntax: both are (| ... |) . How can I inform Isabelle that I use datatype record update? My function definition contains a type prescription what my record's type is, and it was defined through a datatype declaration. Is that not enough?</p>",
        "id": 351254069,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1681981161
    }
]