[
    {
        "content": "<p>What the real problem can be when I get a type error that seems not to be an error?</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">Type</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"kp\">in</span><span class=\"w\"> </span><span class=\"n\">application</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">incompatible</span><span class=\"w\"> </span><span class=\"n\">operand</span><span class=\"w\"> </span><span class=\"n\">type</span>\n\n<span class=\"n\">Operator</span><span class=\"o\">:</span><span class=\"w\">  </span><span class=\"o\">(</span><span class=\"n\">∘</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">tlr</span><span class=\"w\"> </span><span class=\"n\">fa</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"n\">⇒</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"n\">×</span><span class=\"w\"> </span><span class=\"n n-Type\">'log</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">⇒</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"n\">⇒</span><span class=\"w\"> </span><span class=\"n n-Type\">'b</span><span class=\"w\"> </span><span class=\"n\">×</span><span class=\"w\"> </span><span class=\"n n-Type\">'log</span>\n<span class=\"n\">Operand</span><span class=\"o\">:</span><span class=\"w\">   </span><span class=\"n\">rtf</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"n\">⇒</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"n\">×</span><span class=\"w\"> </span><span class=\"n n-Type\">'log</span>\n</code></pre></div>\n<p>The argument of the operator has the very same type as the operand. I really wonder about this.</p>",
        "id": 426368226,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1710344101
    },
    {
        "content": "<p>Maybe do a <code>declare [[show_sorts]]</code> before and check the sort constraints.</p>",
        "id": 426371398,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1710344993
    },
    {
        "content": "<p>Or you can do <code>declare [[unify_trace_failure]]</code> and try to read the trace of that. Although I'd recommend only doing that right before the error occurs; otherwise there is too much of an overhead.</p>",
        "id": 426371589,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1710345041
    },
    {
        "content": "<p>You can also do <code>note [[unify_trace]]</code> in an Isar proof or <code>using [[unify_trace]]</code> in a proof state.</p>",
        "id": 426371667,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1710345066
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232736\">Manuel Eberl</span> <a href=\"#narrow/stream/202961-General/topic/Dubious.20type.20error/near/426371398\">said</a>:</p>\n<blockquote>\n<p>Maybe do a <code>declare [[show_sorts]]</code> before and check the sort constraints.</p>\n</blockquote>\n<p>Yes that showed the problem and then I prescribed the type class constraint at some definitions and this cured the problem. Thanks.</p>",
        "id": 426371752,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1710345093
    },
    {
        "content": "<p>Out of curiosity: could there be an automatic switch to showing sorts or a hint message if the sortless types agree, but the sorts not?</p>",
        "id": 426372572,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1710345318
    }
]