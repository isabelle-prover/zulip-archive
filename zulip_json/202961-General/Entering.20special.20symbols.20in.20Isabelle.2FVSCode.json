[
    {
        "content": "<p>I just started using Isabelle/VSCode and quickly ran into my first problem: I often don’t know how to enter special symbols. Outside of terms, shortcuts that don’t start with a backslash, like <code>==&gt;</code> for <code>⟹</code> and <code>&lt;&lt;</code> for <code>‹</code> don’t work, and inside terms, not even those that start with a backslash work (a completion window just won’t pop up). Any hints on what to do about that?</p>",
        "id": 319503514,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1672883391
    },
    {
        "content": "<p>After quite a lot of trying and searching the web, I at least found that pressing Ctrl + Space will bring up the completion window also when entering terms. It’s certainly annoying having to press this key combination every time you enter a non-ASCII character in a term, but it makes it at least possible to use Isabelle/VSCode.</p>\n<p>What I still couldn’t get working is auto-completion of abbreviations like <code>==&gt;</code>, so that I’m currently forced to enter things like <code>\\L⟨Ctrl+Space⟩⟨Return⟩ongr</code> instead.</p>",
        "id": 319512111,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1672890959
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"429046\">@Denis Paluca</span>, I see you’re in this Zulip space as well. Based on <a href=\"https://www21.in.tum.de/students/past/vscode_plugin_improvements/assets/Isabelle_VSCode_Thesis.pdf\">your bachelor thesis</a>, I understand that you’ve implemented the current completion technology. If you could help me getting it working, I’d be <em>extremely</em> thankful. <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 319512465,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1672891238
    },
    {
        "content": "<p>Hi Wolfgang, you can use <a href=\"https://code.visualstudio.com/docs/editor/userdefinedsnippets\">Snippets</a> to configure such - and much more complex - shortcuts. It is worth taking a couple of minutes to read the website I linked. For example, here are some snippets that I use for Isabelle: </p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"w\">    </span><span class=\"nt\">\"Long right arrow\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">\"prefix\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"==&gt;\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"Long right arrow\"</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">\"body\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"⟹\"</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">\"description\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Long right arrow\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"ML\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">\"prefix\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"ML\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"ml\"</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">\"body\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"ML‹\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"\\t$0\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"›\"</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">\"description\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Open ML environment\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"cartouches\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">\"prefix\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"cartouches\"</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">\"body\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"‹$1› $0\"</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">\"description\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Open cartouches\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"subscripts\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">\"prefix\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"subscripts\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"_\"</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">\"body\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"⇘$1⇙ $0\"</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">\"description\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Open subscripts\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Note that <code>$&lt;number&gt;</code> can be used for jump markers. Triggering a snippet will move your cursor to the first jump marker. Pressing <code>&lt;tab&gt;</code> will move the cursor to the next jump marker.</p>",
        "id": 320164456,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1673250584
    },
    {
        "content": "<p>Talking about special characters, completion, etc., here are some user settings of mine that may further improve your user experience. (the first line is deliberately disabled)</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"c1\">// \"editor.fontFamily\": \"'Isabelle DejaVu Sans Mono\",</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"editor.unicodeHighlight.ambiguousCharacters\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"terminal.integrated.fontFamily\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"monospace\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"editor.tabSize\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"editor.minimap.enabled\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"files.trimTrailingWhitespace\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"workbench.panel.defaultLocation\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"right\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"editor.acceptSuggestionOnEnter\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"off\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"editor.suggestOnTriggerCharacters\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"editor.suggestSelection\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"recentlyUsedByPrefix\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"editor.quickSuggestions\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">\"other\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">\"comments\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">\"strings\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"editor.wordBasedSuggestions\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"editor.tabCompletion\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"on\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"workbench.editor.tabSizing\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"shrink\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"explorer.confirmDragAndDrop\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"explorer.autoReveal\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"editor.renderWhitespace\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"none\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"search.seedOnFocus\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 320165584,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1673251104
    },
    {
        "content": "<p>Thanks a lot for these elaborate answers, at which I have to take a deeper look later.</p>\n<p>Regarding snippets, did I get this correctly that snippets are a VS Code feature, independent of Isabelle, and the problem I’m experiencing is because just no Isabelle-specific snippets are pre-configured?</p>\n<p>Regarding the problem of completion lists not popping up in terms, is the source of the problem that such popups are not configured via <code>editor.quickSuggestions</code> for terms, which VS Code mistakes for strings, when appearing between quotation marks, and perhaps comments, when appearing between cartouches?</p>\n<p>All in all, I interpret your answer that Isabelle/VSCode <em>is</em> capable of doing what I expected it to do, but is just not configured to do that by default. I wonder why that is. Is there a good reason for not enabling automatic completion popups in terms or not having the typical replacements pre-configured as snippets? I mean, Isabelle/jEdit does have the corresponding features out of the box. Is it because the bare VS Code is configured in a certain way by default? But this is not a vanilla VS Code, but a VS Code bundled with Isabelle; so it should have all that configuration out of the box.</p>\n<p>Who should be asked for fixes for these things? Who is actually maintaining Isabelle/VSCode? Makarius? <span class=\"user-mention\" data-user-id=\"348400\">@Fabian Huch</span>? <span class=\"user-mention\" data-user-id=\"429046\">@Denis Paluca</span>?</p>\n<p>To give interested people the view of an Isabelle/VSCode newcomer: This behavior can really be a showstopper. With virtually no documentation of Isabelle/VSCode (the only “documentation” I found was the command line to start it mentioned in the <code>NEWS</code> (!) file) and nothing on the web about these issues, you are more or less lost immediately. What kept me using Isabelle/VSCode was only that I use the Neo keyboard layout, which already provides a lot of the necessary special characters, and my ability to craft and use a custom X compose table for adding a few more such characters, combined with my eagerness to not touch jEdit again, because VS Code just looks so much nicer. I can vividly imagine that many other newcomers to Isabelle/VSCode will throw it away quickly after having figured out that in its default configuration it is essentially unusable. I’m not writing this to annoy people, but to provide those who are perhaps in some inner circles and therefore know all the tricks with the perspective of a newbie without access to the coffee room of the Logic and Verification Chair of TUM, in the hope that it helps making Isabelle/VSCode also usable for these users.</p>",
        "id": 320582488,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1673405269
    },
    {
        "content": "<p>I think that Makarius considers VSCode as \"use it at your own risk\" and that the lack on documentation is on purpose to avoid getting bugs</p>",
        "id": 320602586,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1673415248
    },
    {
        "content": "<p>(BTW: my old snippet extension <a href=\"https://marketplace.visualstudio.com/items?itemName=mfleury.isabelle-snippets\">https://marketplace.visualstudio.com/items?itemName=mfleury.isabelle-snippets</a> might still work and provide the replacement from ==&gt; <a href=\"https://github.com/m-fleury/isabelle-snippets/blob/master/snippets/snippets.json#L93\">https://github.com/m-fleury/isabelle-snippets/blob/master/snippets/snippets.json#L93</a>, but I have not tried it)</p>",
        "id": 320603169,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1673415492
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/202961-General/topic/Entering.20special.20symbols.20in.20Isabelle.2FVSCode/near/320602586\">said</a>:</p>\n<blockquote>\n<p>I think that Makarius considers VSCode as \"use it at your own risk\" and that the lack on documentation is on purpose to avoid getting bugs</p>\n</blockquote>\n<p>Well, the bugs we already have. Maybe he avoids getting bug <em>reports</em> this way.</p>\n<p>What’s considered the future of Isabelle/VSCode? My understanding so far has been that it is supposed to replace Isabelle/jEdit in the middle run. Is this the case, or is Isabelle/VSCode only considered a sort of alternative solution for freaks?</p>\n<p>Is there anyone maintaining Isabelle/VSCode? What if someone has fixes for bugs or deficiencies, like the apparent lack of certain out-of-the-box input support? Will anyone accept patches, or will they be dismissed, because nobody wants to spend time on changing the official version?</p>",
        "id": 320723525,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1673449286
    },
    {
        "content": "<p>Hmm, one thing I’ve started wondering about is whether snippets are really the “official” way of getting Isabelle symbols from sequences like <code>==&gt;</code>. After all, Isabelle/VSCode is supposed to have this replacement feature described in <span class=\"user-mention\" data-user-id=\"429046\">@Denis Paluca</span>’s thesis. This feature is apparently somehow present in the current Isabelle/VSCode version, given that it has a setting <code>Isabelle: Replacement</code>, where you can chose which unique abbreviations should be replaced (none, non-alphanumeric, or all).</p>\n<p>The presence of this feature would explain why Isabelle/VSCode doesn’t come with a snippet configuration for special symbols: the intended way would be to not use snippets but this Isabelle replacement. <span class=\"user-mention\" data-user-id=\"233154\">@Kevin Kappelmann</span>, did you configure snippets only because the Isabelle replacement feature didn’t work? And is anyone aware of a way to make the replacement feature work?</p>",
        "id": 320726740,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1673450062
    },
    {
        "content": "<p>I remember that at some point, we had the automatic replacement of symbols like <code>=&gt;</code>. But there were some problems (e.g. it also replaced <code>=&gt;</code> in ML files) and I suppose it was thus later removed. </p>\n<p><span class=\"user-mention\" data-user-id=\"348400\">@Fabian Huch</span> probably remembers what happened to the replacement mechanism</p>",
        "id": 320737966,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1673453004
    },
    {
        "content": "<p>Hmm, that would explain it. I mean it would be good to have a replacement feature that queries the Isabelle symbol database, so that you don’t have to configure your symbol replacements manually, but messing up ML code is probably a showstopper. <span class=\"user-mention\" data-user-id=\"348400\">@Fabian Huch</span>, do you know whether there are plans to revive this feature in a corrected form at some point?</p>",
        "id": 320743039,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1673454296
    },
    {
        "content": "<p>Isabelle/VSCode is mostly an experiment that is <strong>not</strong> on par with Isabelle/jEdit. Its main use is accessibility, as the VSCode platform provides interfaces e.g. for blind Mathematicians.<br>\nWe did have better Symbol replacement back when Isabelle/VSCode was a VSCode plugin; you'll have to ask Makarius (or view the history) what got stripped again and why when VSCode was integrated into the Isabelle platform.<br>\nAs for further development, I currently can't dedicate any resources to that, but if one is willing to contribute to VSCode then I'd be happy to incorporate that into the distribution.</p>",
        "id": 320890060,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1673515826
    },
    {
        "content": "<p>Just out of curiosity: how is Isabelle/VSCode different from a VSCode plugin? The only thing that I am sure is that VSCodium uses a different licence from the normal VSCode, hence some plugins are not available.</p>",
        "id": 320892015,
        "sender_full_name": "Zixuan Fan",
        "timestamp": 1673516443
    },
    {
        "content": "<p>The VSCode plugin interface is not rich enough for seamless Isabelle integration, e.g., you can't create custom encodings. Hence Isabelle/VSCode is a patched VSCode version.</p>",
        "id": 320896765,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1673517814
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"348400\">Fabian Huch</span> <a href=\"#narrow/stream/202961-General/topic/Entering.20special.20symbols.20in.20Isabelle.2FVSCode/near/320896765\">said</a>:</p>\n<blockquote>\n<p>The VSCode plugin interface is not rich enough for seamless Isabelle integration, e.g., you can't create custom encodings. Hence Isabelle/VSCode is a patched VSCode version.</p>\n</blockquote>\n<p>Oh, it’s not just a language server, but a language server plus VS Code patches? Interesting! I didn’t know that.</p>\n<p>I had hopes that with Isabelle/VSCode being available, it would be rather easy to create Isabelle support for Vim and Neovim, which support language server integration. Would that be possible in case it is possible to configure custom encodings for these editors, or is there more needed?</p>",
        "id": 321228651,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1673634499
    }
]