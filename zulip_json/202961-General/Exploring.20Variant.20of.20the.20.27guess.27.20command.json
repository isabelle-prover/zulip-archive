[
    {
        "content": "<p>As you might have heard, Makarius is phasing out <code>guess</code> for Isabelle 2021-1. It now resides in <code>Pure-ex.Guess</code>.<br>\nWhile I agree that <code>guess</code> should not show up in Isar proofs, I think it has some use for \"exploration\" in an Isar proof.<br>\nIn that spirit, I made <a href=\"https://github.com/wimmers/explore-subgoal/blob/main/Guess_Explore.thy\">a modified version</a> that outputs a completion hint at 'qed' such that one can more easily turn the whole thing into a proper <code>obtain</code> statement.</p>\n<p>Example:<br>\nOne types</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">from</span> <span class=\"n\">foo</span><span class=\"o\">[</span><span class=\"n\">of</span> <span class=\"n\">z</span><span class=\"o\">]</span> <span class=\"k\">guess</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"ow\">.</span>\n</code></pre></div>\n<p>Now, at the output of <code>.</code> one can click the completion hint and gets:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">from</span> <span class=\"n\">foo</span><span class=\"o\">[</span><span class=\"n\">of</span> <span class=\"n\">z</span><span class=\"o\">]</span> <span class=\"k\">guess</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"kp\">where</span>\n  <span class=\"s\">\"z = x + y\"</span>\n  <span class=\"s\">\"P x y\"</span>\n</code></pre></div>\n<p>This is not exactly what I would imagine it to be like. Ideally one would get</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">from</span> <span class=\"n\">foo</span><span class=\"o\">[</span><span class=\"n\">of</span> <span class=\"n\">z</span><span class=\"o\">]</span> <span class=\"k\">obtain</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"kp\">where</span>\n  <span class=\"s\">\"z = x + y\"</span>\n  <span class=\"s\">\"P x y\"</span>\n  <span class=\"ow\">.</span>\n</code></pre></div>\n<p>but I do not know how to achieve this.<br>\nNevertheless, I find this useful for converting old proofs and \"exploration\" as mentioned.</p>\n<p>Is anyone else still using <code>guess</code>?</p>",
        "id": 262700455,
        "sender_full_name": "Simon Wimmer",
        "timestamp": 1637843785
    },
    {
        "content": "<p>I used it a lot in the past. I've forced myself to stop doing it. But I think it is extremely useful when you have an elimination rule that gives you a lot of long facts all at once. Something like your version of <code>guess</code> seems really useful. I think you ought to replace the one in <code>HOL-Library</code> with yours. And perhaps ask Makarius if something can be done to replace the <code>guess</code> with <code>obtain</code> by clicking on active markup.</p>",
        "id": 262701134,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1637844270
    },
    {
        "content": "<p>It would also be possible to implement this as a lint (use obtain instead of guess) in the linter that Yecine (and we) are developing.</p>",
        "id": 262702520,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1637845129
    },
    {
        "content": "<p>However, the direct route within the guess command would be better. <del>In principle it should not be hard to get the right active markup using the functions in <code>~/src/Pure/PIDE/active.ML</code>.</del> The functionality in Isabelle/ML for replacing stuff in the buffer with active markup does not exist yet. But maybe we can put it in permanently when we pull the linter into the distribution.</p>",
        "id": 262703920,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1637846022
    },
    {
        "content": "<p>You can do this with Isabelle/Scale. See here: <a href=\"https://github.com/isabelle-prover/isabelle-linter/blob/master/jedit_linter/src/jedit_extension.scala\">https://github.com/isabelle-prover/isabelle-linter/blob/master/jedit_linter/src/jedit_extension.scala</a></p>",
        "id": 262704241,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1637846231
    },
    {
        "content": "<p>The relevant function is in the <code>Handler</code>.</p>",
        "id": 262704262,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1637846251
    },
    {
        "content": "<p>Is something like this possible in e.g. VSCode as well?</p>",
        "id": 262706474,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1637847600
    },
    {
        "content": "<p>In principle that is of course possible; however, the current state is that the markup (basically an XML tree) isn't even transmitted to VSCode. So the information gets lost and we can't implement a handler for active markup in VSCode.</p>",
        "id": 262708664,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1637848781
    },
    {
        "content": "<p>Ah ok, thanks for the pointers, Lukas.<br>\nI will tinker with it a bit more and contact Makarius eventually (after the current release).</p>",
        "id": 262710527,
        "sender_full_name": "Simon Wimmer",
        "timestamp": 1637849785
    },
    {
        "content": "<p>(and keep please keep me in the loop when things from the linter are moved to the distribution)</p>",
        "id": 262711663,
        "sender_full_name": "Simon Wimmer",
        "timestamp": 1637850413
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233187\">Simon Wimmer</span> <a href=\"#narrow/stream/202961-General/topic/Exploring.20Variant.20of.20the.20'guess'.20command/near/262711663\">said</a>:</p>\n<blockquote>\n<p>(and keep please keep me in the loop when things from the linter are moved to the distribution)</p>\n</blockquote>\n<p>We will certainly announce it on the mailing list  <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 262712373,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1637850789
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233187\">Simon Wimmer</span> <a href=\"#narrow/stream/202961-General/topic/Exploring.20Variant.20of.20the.20'guess'.20command/near/262710527\">said</a>:</p>\n<blockquote>\n<p>Ah ok, thanks for the pointers, Lukas.<br>\nI will tinker with it a bit more and contact Makarius eventually (after the current release).</p>\n</blockquote>\n<p>I did already send Makarius a patch to enable sendback markup for ranges, but he did not want to put it in as nothing uses that yet. So if you have  a use-case with <code>guess</code> then you could probably just ask him to put my changes in.</p>",
        "id": 262733194,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1637865301
    },
    {
        "content": "<p>Ah nice! I'll ask him about it.</p>",
        "id": 262744558,
        "sender_full_name": "Simon Wimmer",
        "timestamp": 1637878888
    }
]