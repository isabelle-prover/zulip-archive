[
    {
        "content": "<p>After reading  <a href=\"https://lawrencecpaulson.github.io/2022/03/23/Locales.html\">class vs locale</a><br>\nI try to modify my code (cf  <a href=\"https://www.isa-afp.org/entries/IsaGeoCoq.html\">IsaGeoCoq</a> AFP)</p>\n<p>My first difficulty is the definition of \"surj_cong\": i.e. to introduce the locales in the definition. <br>\nI have other difficulties but this one is blocking me.<br>\nAny help is welcome. </p>\n<p>Here is an idea, I have of course reduced the local conditions for the example. <br>\nIn order not to get lost, the main interest is the <strong>Test2</strong>'s lemma and the definition <strong>surj_conj</strong><br>\nThis last definition is not correct.</p>\n<p><a href=\"/user_uploads/14278/IbNi3y_-OYy-XgJ8bch5vATg/TestG.thy\">TestG.thy</a></p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">theory</span><span class=\"w\"> </span><span class=\"n\">TestG</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">imports</span><span class=\"w\"> </span><span class=\"n\">Main</span><span class=\"w\"></span>\n<span class=\"k\">begin</span><span class=\"w\"></span>\n\n<span class=\"gu\">section</span><span class=\"w\"> </span><span class=\"s\">\"First\"</span><span class=\"w\"></span>\n\n<span class=\"k\">typedecl</span><span class=\"w\"> </span><span class=\"n\">TPoint</span><span class=\"w\"></span>\n<span class=\"k\">locale</span><span class=\"w\"> </span><span class=\"n\">Tarski_neutral_dimensionless_First</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">Bet</span><span class=\"w\">  </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"TPoint ⇒ TPoint ⇒ TPoint ⇒ bool\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">Cong</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"TPoint ⇒ TPoint ⇒ TPoint ⇒ TPoint ⇒ bool\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">TPA</span><span class=\"w\"> </span><span class=\"n\">TPB</span><span class=\"w\"> </span><span class=\"n\">TPC</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"n\">TPoint</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"n\">cong_pseudo_reflexivity</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"∀ a b.  Cong a b b a\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"n\">cong_inner_transitivity</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"∀ a b p q r s.</span>\n<span class=\"s\">Cong a b p q ∧ Cong a b r s ⟶ Cong p q r s\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"n\">cong_identity</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"∀ a b c. Cong a b c c ⟶ a = b\"</span><span class=\"w\"></span>\n\n<span class=\"k\">context</span><span class=\"w\"> </span><span class=\"n\">Tarski_neutral_dimensionless_First</span><span class=\"w\"></span>\n\n<span class=\"k\">begin</span><span class=\"w\"></span>\n\n<span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">cong_reflexivity_v1</span><span class=\"o\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">shows</span><span class=\"w\"> </span><span class=\"s\">\"Cong A B A B\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">cong_inner_transitivity</span><span class=\"w\"> </span><span class=\"n\">cong_pseudo_reflexivity</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">blast</span><span class=\"w\"></span>\n\n<span class=\"k\">end</span><span class=\"w\"></span>\n\n<span class=\"gu\">section</span><span class=\"w\"> </span><span class=\"s\">\"Second\"</span><span class=\"w\"></span>\n\n<span class=\"k\">locale</span><span class=\"w\"> </span><span class=\"n\">Tarski_neutral_dimensionless_Second</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">M</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'a set\"</span><span class=\"w\"> </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"n\">Cong</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"n\">cong_pseudo_reflexivity</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"⟦ a ∈ M; b ∈ M⟧ ⟹ Cong a b b a\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"n\">cong_inner_transitivity</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"⟦ a ∈ M; b ∈ M;p ∈ M;q ∈ M;r ∈ M;s ∈ M;</span>\n<span class=\"s\">Cong a b p q ; Cong a b r s⟧ ⟹ Cong p q r s\"</span><span class=\"w\"></span>\n\n<span class=\"k\">locale</span><span class=\"w\"> </span><span class=\"n\">Tarski_neutral_dimensionless_Third</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Tarski_neutral_dimensionless_Second</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"n\">cong_pseudo_reflexivity</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"⟦ a ∈ M; b ∈ M⟧ ⟹ Cong a b b a\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"n\">cong_inner_transitivity</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"⟦ a ∈ M; b ∈ M;p ∈ M;q ∈ M;r ∈ M;s ∈ M;</span>\n<span class=\"s\">Cong a b p q ; Cong a b r s⟧ ⟹ Cong p q r s\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"n\">cong_identity</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"⟦ a ∈ M; b ∈ M;c ∈ M;Cong a b c c⟧ ⟹ a = b\"</span><span class=\"w\"></span>\n\n<span class=\"k\">context</span><span class=\"w\"> </span><span class=\"n\">Tarski_neutral_dimensionless_Second</span><span class=\"w\"></span>\n\n<span class=\"k\">begin</span><span class=\"w\"></span>\n\n<span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">cong_reflexivity_v2_1</span><span class=\"o\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"A ∈ M\"</span><span class=\"w\"> </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"s\">\"B ∈ M\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">shows</span><span class=\"w\"> </span><span class=\"s\">\"Cong A B A B\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">meson</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"o\">(</span><span class=\"n\">1</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"o\">(</span><span class=\"n\">2</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">cong_inner_transitivity</span><span class=\"w\"> </span><span class=\"n\">cong_pseudo_reflexivity</span><span class=\"o\">)</span><span class=\"w\"></span>\n\n<span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">cong_reflexivity_v2_2</span><span class=\"o\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"Tarski_neutral_dimensionless_Second M Cong\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"A ∈ M\"</span><span class=\"w\"> </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"s\">\"B ∈ M\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">shows</span><span class=\"w\"> </span><span class=\"s\">\"Cong A B A B\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">meson</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"o\">(</span><span class=\"n\">2</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"o\">(</span><span class=\"n\">3</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">cong_inner_transitivity</span><span class=\"w\"> </span><span class=\"n\">cong_pseudo_reflexivity</span><span class=\"o\">)</span><span class=\"w\"></span>\n\n<span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">cong_reflexivity_v2_3</span><span class=\"o\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"Tarski_neutral_dimensionless_Second N Cong'\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"A ∈ N\"</span><span class=\"w\"> </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"s\">\"B ∈ N\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">shows</span><span class=\"w\"> </span><span class=\"s\">\"Cong' A B A B\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">metis</span><span class=\"w\"> </span><span class=\"n\">Tarski_neutral_dimensionless_Second.cong_inner_transitivity</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"n\">Tarski_neutral_dimensionless_Second.cong_pseudo_reflexivity</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"n\">assms</span><span class=\"o\">(</span><span class=\"n\">1</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"o\">(</span><span class=\"n\">2</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"o\">(</span><span class=\"n\">3</span><span class=\"o\">))</span><span class=\"w\"></span>\n\n<span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">Test1</span><span class=\"o\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">N1</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'a set\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">N2</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'b set\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'a ⇒ 'b\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"Tarski_neutral_dimensionless_Third N1 Cong1\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"s\">\"∀ A2. A2 ∈ N2 ⟶ (∃ A1 ∈ N1. (f A1) = A2)\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"s\">\"∀ A B C D. A ∈ N1 ∧ B ∈ N1 ∧ C ∈ N1 ∧ D ∈ N1 ∧ (Cong2 (f A)(f B)(f C)(f D)) ⟶ (Cong1 A B C D)\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">shows</span><span class=\"w\"> </span><span class=\"s\">\"∀ A B C. A ∈ N2 ∧ B ∈ N2 ∧ C ∈ N2 ∧ (Cong2 A B C C) ⟶ A = B\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">metis</span><span class=\"w\"> </span><span class=\"n\">Tarski_neutral_dimensionless_Third.cong_identity</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"o\">(</span><span class=\"n\">1</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"o\">(</span><span class=\"n\">2</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"o\">(</span><span class=\"n\">3</span><span class=\"o\">))</span><span class=\"w\"></span>\n\n<span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">Test2</span><span class=\"o\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">N1</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'a set\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">N2</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'b set\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'a ⇒ 'b\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"Tarski_neutral_dimensionless_Third N1 Cong1\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"s\">\"Tarski_neutral_dimensionless_Second N2 Cong2\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"s\">\"∀ A2. A2 ∈ N2 ⟶ (∃ A1 ∈ N1. (f A1) = A2)\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"s\">\"∀ A B C D. A ∈ N1 ∧ B ∈ N1 ∧ C ∈ N1 ∧ D ∈ N1 ∧ (Cong2 (f A)(f B)(f C)(f D)) ⟶ (Cong1 A B C D)\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">shows</span><span class=\"w\"> </span><span class=\"s\">\"∀ A B C. A ∈ N2 ∧ B ∈ N2 ∧ C ∈ N2 ∧ (Cong2 C C A B) ⟶ A = B\"</span><span class=\"w\"></span>\n<span class=\"k\">proof</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"s\">\"∀ A B C. A ∈ N2 ∧ B ∈ N2 ∧ C ∈ N2 ∧ (Cong2 A B C C) ⟶ A = B\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">metis</span><span class=\"w\"> </span><span class=\"n\">Tarski_neutral_dimensionless_Third.cong_identity</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"o\">(</span><span class=\"n\">1</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"o\">(</span><span class=\"n\">3</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"o\">(</span><span class=\"n\">4</span><span class=\"o\">))</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">thus</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">thesis</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">smt</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">verit</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">ccfv_SIG</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">Tarski_neutral_dimensionless_Second.cong_inner_transitivity</span><span class=\"w\"> </span><span class=\"n\">Tarski_neutral_dimensionless_Second.cong_pseudo_reflexivity</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"o\">(</span><span class=\"n\">2</span><span class=\"o\">))</span><span class=\"w\"></span>\n<span class=\"k\">qed</span><span class=\"w\"></span>\n\n<span class=\"k\">definition</span><span class=\"w\"> </span><span class=\"n\">surj_cong</span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"('a set ⇒ 'b set) ⇒ 'a set ⇒ ('a set ⇒'a set ⇒ 'a set ⇒'a set)</span>\n<span class=\"s\">⇒'b set ⇒ ('b set ⇒ 'b set ⇒ 'b set ⇒ 'b set) ⇒ bool\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">where</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"s\">\"(surj_cong f) N1 Cong1 N2 Cong2 ≡</span>\n<span class=\"s\">(Tarski_neutral_dimensionless_Third N1 Cong1) ∧</span>\n<span class=\"s\">(Tarski_neutral_dimensionless_Second N2 Cong2) ∧</span>\n<span class=\"s\">(∀ A2. A2 ∈ N2 ⟶ (∃ A1 ∈ N1. (f A1) = A2)) ∧</span>\n<span class=\"s\">(∀ A B C D. A ∈ N1 ∧ B ∈ N1 ∧ C ∈ N1 ∧ D ∈ N1 ∧ (Cong2 (f A)(f B)(f C)(f D)) ⟶ (Cong1 A B C D))\"</span><span class=\"w\"></span>\n\n\n<span class=\"k\">end</span><span class=\"w\"></span>\n<span class=\"k\">end</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 325313510,
        "sender_full_name": "Roland Coghetto",
        "timestamp": 1675310953
    },
    {
        "content": "<p>The error message has nothing to do with locales… Your types are wrong:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">definition</span><span class=\"w\"> </span><span class=\"n\">surj_cong</span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"('a set ⇒ 'b set) ⇒ 'a set set ⇒ ('a set ⇒ 'a set ⇒ 'a set ⇒ 'a set ⇒ bool)</span>\n<span class=\"s\">⇒'b set set ⇒ ('b set ⇒ 'b set ⇒ 'b set ⇒ 'b set ⇒ bool) ⇒ bool\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">where</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"s\">\"surj_cong f N1 Cong1 N2 Cong2 ≡</span>\n<span class=\"s\">(Tarski_neutral_dimensionless_Third N1 Cong1) ∧</span>\n<span class=\"s\">(Tarski_neutral_dimensionless_Second N2 Cong2) ∧</span>\n<span class=\"s\">(∀ A2. A2 ∈ N2 ⟶ (∃ A1 ∈ N1. f A1 = A2)) ∧</span>\n<span class=\"s\">(∀ A B C D. A ∈ N1 ∧ B ∈ N1 ∧ C ∈ N1 ∧ D ∈ N1 ∧ (Cong2 (f A)(f B)(f C)(f D)) ⟶ (Cong1 A B C D))\"</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 325321304,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1675317881
    },
    {
        "content": "<p>I have no idea what it means. But, I first saw:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">Type</span><span class=\"w\"> </span><span class=\"n\">unification</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"w\"></span>\n\n<span class=\"n\">Type</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"kp\">in</span><span class=\"w\"> </span><span class=\"n\">application</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">incompatible</span><span class=\"w\"> </span><span class=\"n\">operand</span><span class=\"w\"> </span><span class=\"n\">type</span><span class=\"w\"></span>\n\n<span class=\"n\">Operator</span><span class=\"o\">:</span><span class=\"w\">  </span><span class=\"n\">Tarski_neutral_dimensionless_Third</span><span class=\"w\"> </span><span class=\"n\">N1</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"n\">⇒</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"n\">⇒</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"n\">⇒</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"n\">⇒</span><span class=\"w\"> </span><span class=\"n\">bool</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">⇒</span><span class=\"w\"> </span><span class=\"n\">bool</span><span class=\"w\"></span>\n<span class=\"n\">Operand</span><span class=\"o\">:</span><span class=\"w\">   </span><span class=\"n\">Cong1</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">⇒</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">⇒</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">⇒</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"n\">set</span><span class=\"w\"></span>\n</code></pre></div>\n<p>So I replace the type of Cong1 by <code>_</code></p>",
        "id": 325321386,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1675317947
    },
    {
        "content": "<p>So I got:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">definition</span><span class=\"w\"> </span><span class=\"n\">surj_cong</span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"('a set ⇒ 'b set) ⇒ 'a set ⇒ _</span>\n<span class=\"s\">⇒'b set ⇒ _ ⇒ bool\"</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Then the error message becomes:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">Type</span><span class=\"w\"> </span><span class=\"n\">unification</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"w\"></span>\n\n<span class=\"n\">Type</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"kp\">in</span><span class=\"w\"> </span><span class=\"n\">application</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">incompatible</span><span class=\"w\"> </span><span class=\"n\">operand</span><span class=\"w\"> </span><span class=\"n\">type</span><span class=\"w\"></span>\n\n<span class=\"n\">Operator</span><span class=\"o\">:</span><span class=\"w\">  </span><span class=\"o\">(=)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"n\">A1</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"n n-Type\">'b</span><span class=\"w\"> </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">⇒</span><span class=\"w\"> </span><span class=\"n\">bool</span><span class=\"w\"></span>\n<span class=\"n\">Operand</span><span class=\"o\">:</span><span class=\"w\">   </span><span class=\"n\">A2</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"n n-Type\">'b</span><span class=\"w\"></span>\n</code></pre></div>\n<p>so A2 is an element instead of a set</p>",
        "id": 325321547,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1675318043
    },
    {
        "content": "<p>BTW, you should not use <code>typedecl TPoint</code> for quantifying over types. I have heard that it has worked in the past, but now you should put the type in the locale</p>",
        "id": 325321724,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1675318132
    },
    {
        "content": "<p>I have rewritten my problem completely differently:</p>\n<p>locale func =<br>\nTarski_neutral_dimensionless_Second M Cong1 +<br>\nTarski_neutral_dimensionless_Second N Cong2 <br>\nfor M    :: \"'a set\"<br>\nand Cong1 :: \"'a ⇒'a ⇒'a ⇒ 'a ⇒bool\" (\"_ , _  ≅⇩M _ , _ \" [99,99,99,99] 50)<br>\nand N    :: \"'b set\"<br>\nand Cong2 :: \"'b⇒'b⇒'b⇒'b⇒bool\"(\"_ , _  ≅⇩N _ , _ \" [99,99,99,99] 50) +<br>\nfixes f :: \"'a ⇒ 'b\" <br>\nassumes surj : \"∀ A2. A2 ∈ N2 ⟶ (∃ A1 ∈ N1. f A1 = A2)\"<br>\nand cong_pres : \"∀ A B C D. A ∈ N1 ∧ B ∈ N1 ∧ C ∈ N1 ∧ D ∈ N1 ∧ <br>\n(f A),(f B)≅⇩N(f C),(f D) ⟶ ( A, B ≅⇩M C, D)\"</p>\n<p>I test to see if I get the desired results.</p>",
        "id": 325854254,
        "sender_full_name": "Roland Coghetto",
        "timestamp": 1675528384
    },
    {
        "content": "<p>It seems to work:</p>\n<p>lemma Test3:<br>\n  assumes \"Tarski_neutral_dimensionless_Third M Cong1\"<br>\n  shows \"∀ A B C. A ∈ N ∧ B ∈ N ∧ C ∈ N ∧ (C, C ≅⇩N A, B) ⟶ A = B\" <br>\nproof -<br>\n  have \"∀ A B C. A ∈ N ∧ B ∈ N ∧ C ∈ N ∧ (A, B ≅⇩N C, C) ⟶ A = B\"<br>\n    by (metis Tarski_neutral_dimensionless_Third.cong_identity assms cong_pres surj)<br>\n    thus ?thesis <br>\n      by (metis cong_inner_transitivity cong_reflexivity_v2_1)<br>\nqed</p>\n<p>Sorry for the inconvenience</p>",
        "id": 325856233,
        "sender_full_name": "Roland Coghetto",
        "timestamp": 1675529186
    }
]