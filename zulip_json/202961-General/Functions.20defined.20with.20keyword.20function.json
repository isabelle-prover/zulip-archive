[
    {
        "content": "<p>It is clear that <code>fun</code> is for functions whose termination or totality is automatically proved.</p>\n<p>For <code>function</code>-defined functions, the user should provide the measure function and the proof.</p>\n<p>But: is there a difference between proving properties of <code>fun</code> and <code>function</code> functions?</p>\n<p>It seems that Isabelle produces the same generated theorems: <code>.cases</code>, <code>.elims</code>, <code>.psimps</code>, <code>.induct</code>, <code>.pelims</code>, <code>.pinduct</code>, <code>.simps</code> .</p>\n<p>Is there something special about <code>function</code>-defined functions?</p>",
        "id": 393054814,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1695658147
    },
    {
        "content": "<p>I thought the <code>fun</code> keyword does not derive <code>psimps</code>?</p>",
        "id": 393119529,
        "sender_full_name": "Yutaka Nagashima",
        "timestamp": 1695679619
    },
    {
        "content": "<p>That’s what I thought too. After all, you can’t have partially defined functions with <code>fun</code>, can you?</p>",
        "id": 393121837,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1695680490
    },
    {
        "content": "<p>As far as I know, <code>fun</code> is <code>function</code> with an automatic termination proof, with an automatically derived termination measure.</p>\n<p>The <code>psimps</code>, <code>pinduct</code>, <code>pelims</code> rules are derived by the <code>function</code> command. The <code>termination</code> command, after the termination proof is completed, then discharges the termination assumption from these partial rules and registers them as <code>simps</code>, <code>induct</code>, <code>elims</code> and hides the <code>psimps</code>, <code>pinduct</code>, <code>pelims</code> rules.</p>",
        "id": 393205990,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1695724490
    },
    {
        "content": "<p>Since <code>fun</code> does <code>function</code> + <code>termination</code>, you don't ever see the <code>psimps</code> etc. if you use <code>fun</code>.</p>",
        "id": 393206064,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1695724524
    },
    {
        "content": "<p>Thanks, <span class=\"user-mention\" data-user-id=\"644411\">@Yutaka Nagashima</span> <span class=\"user-mention\" data-user-id=\"423655\">@Wolfgang Jeltsch</span> and <span class=\"user-mention\" data-user-id=\"232736\">@Manuel Eberl</span></p>",
        "id": 393225384,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1695732259
    },
    {
        "content": "<p>This is explained in the <a href=\"https://isabelle.in.tum.de/dist/Isabelle2023/doc/functions.pdf\">function manual</a> BTW.<br>\n<a href=\"/user_uploads/14278/b0elWbPiIgd5-eU78Wb9IZOv/20230926_15h10m12s_grim.png\">20230926_15h10m12s_grim.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/b0elWbPiIgd5-eU78Wb9IZOv/20230926_15h10m12s_grim.png\" title=\"20230926_15h10m12s_grim.png\"><img src=\"/user_uploads/14278/b0elWbPiIgd5-eU78Wb9IZOv/20230926_15h10m12s_grim.png\"></a></div>",
        "id": 393230216,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1695733851
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"233155\">@Lukas Stevens</span> If I was not clear: I am not interested in the termination of <code>function</code>-defined functions, but proving other properties of such a function.</p>",
        "id": 393757024,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1695916719
    }
]