[
    {
        "content": "<p>Consider the locale <code>comp_fun_commute</code>: it fixes <code>f</code> and assumes <code>f x o f y = f y o f x</code>.What I want to have is <code>comp_fun_commute_on</code> that fixes <code>f</code> and <code>A</code> and assumes <code>x ∈ A ⟹ y ∈ A ⟹ f y ∘ f x = f x ∘ f y</code>. Is there a trick to generalise the first locale to the second one, without changing all the theorems and proofs?</p>",
        "id": 206791677,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1597307585
    },
    {
        "content": "<p>Yeah that's what types-to-sets does</p>",
        "id": 206793849,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1597309444
    },
    {
        "content": "<p>probably not worth it in this case though</p>",
        "id": 206793853,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1597309451
    },
    {
        "content": "<p>you might be able to do some trickery like artificially defining a new f relativised to A that returns some dummy value for everything not in A, perhaps, and thus fulfils the equality on the entire type</p>",
        "id": 206793906,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1597309502
    },
    {
        "content": "<p>Is <code>Types_To_Sets</code> something you could use in the distribution?</p>",
        "id": 206798258,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1597313196
    },
    {
        "content": "<p>Asking because it introduces additional axioms</p>",
        "id": 206798282,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1597313224
    },
    {
        "content": "<p>I think the jury is still out on that.</p>",
        "id": 206803801,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1597318137
    },
    {
        "content": "<p>But I think there probably wouldn't be too much opposition to it</p>",
        "id": 206803820,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1597318165
    },
    {
        "content": "<p>regardless, I doubt it's worth it for your example</p>",
        "id": 206803844,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1597318194
    },
    {
        "content": "<p>the proofs are probably pretty simple</p>",
        "id": 206803890,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1597318210
    },
    {
        "content": "<p>and you'd probably have to restate the theorems in their relativised form anyway if you wanted to lift them over with types-to-sets, so that still involves significant boilerplate</p>",
        "id": 206803903,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1597318236
    },
    {
        "content": "<p>The most annoying thing in my example is that you have to duplicate most theorems since you need to generalise the carrier <code>A</code> to <code>A'</code> and assume <code>A' ⊆ A</code> every time the theorem is proved by induction.</p>",
        "id": 206805703,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1597319696
    },
    {
        "content": "<p>Use types to sets is really a lot more elegant in this case (provided I can get the setup to work <span aria-label=\"laughter tears\" class=\"emoji emoji-1f602\" role=\"img\" title=\"laughter tears\">:laughter_tears:</span>).</p>",
        "id": 206805857,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1597319834
    },
    {
        "content": "<p>I don't think you want to open that can of worms</p>",
        "id": 206806263,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1597320155
    },
    {
        "content": "<p>I remember a person saying that it is a bit worrying that there is (barely) anyone left knowing how to use types to sets - do not discourage the volunteer <span aria-label=\"laughter tears\" class=\"emoji emoji-1f602\" role=\"img\" title=\"laughter tears\">:laughter_tears:</span></p>",
        "id": 206806528,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1597320360
    },
    {
        "content": "<p>I said we should have people who know how to use it, I didn't say we /should/ actually use it. :P</p>",
        "id": 206806717,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1597320477
    },
    {
        "content": "<p>I think you can't have both at the same time :D</p>",
        "id": 206806785,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1597320508
    },
    {
        "content": "<p>Well, feel free to play around with it. But I'm pretty sure it is not worth the effort for your use case, even if there were not the additional obstacle of you having to learn how to use it first.</p>",
        "id": 206806827,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1597320545
    },
    {
        "content": "<p>I'm curious what Mikhail Chekhov is up to with types-to-sets…</p>",
        "id": 206806857,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1597320579
    }
]