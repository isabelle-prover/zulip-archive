[
    {
        "content": "<p>I need a generalized version of <code>tendsto_exp_limit_at_top: \"((λy. (1 + x / y) powr y) ⤏ exp x) at_top\"</code>, where a constant <code>c</code> is added to the denominator (I actually only need the case <code>c=1</code>, but I figured might as well):</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span> <span class=\"s\">\"((λy. (1 + x / (y+c)) powr y) ⤏ exp x) at_top\"</span>\n</code></pre></div>\n<p>Is anyone aware if such a lemma already exists? Or can someone give me pointers on how to prove it myself? I tried to look into the proof for the original lemma (to be specific into <code>tendsto_exp_limit_at_right</code>), but to my understanding that depends on the fact that we have a nice derivative at 0 there, which doesn't work in the general case.</p>",
        "id": 283311434,
        "sender_full_name": "Christoph Madlener",
        "timestamp": 1653309133
    },
    {
        "content": "<p>Your goal as stated does not restrict the types of <code>x,y,...</code> to <code>real</code>. If you add this constraint (as present in the original tendsto_exp_limit_at_top), Manuel Eberl's <code>real_asymp</code> method (in <code>HOL-Real_Asymp.Real_Asymp</code>) can solve the goal automatically.</p>",
        "id": 283313541,
        "sender_full_name": "Simon Roßkopf",
        "timestamp": 1653310239
    },
    {
        "content": "<p>Just through <code>real_asymp</code> at everything you have and ask me if you run into any problems.</p>",
        "id": 283320797,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1653313555
    },
    {
        "content": "<p>There's documentation as well in <code>~~/src/HOL/Real_Asymp/Manual/</code>.</p>",
        "id": 283320914,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1653313607
    },
    {
        "content": "<p>Ah, nice. I had the type constraint in the lemma, just forgot to copy it. But thanks a lot for the pointer to <code>real_asymp</code>, it works a treat!</p>",
        "id": 283325321,
        "sender_full_name": "Christoph Madlener",
        "timestamp": 1653315542
    },
    {
        "content": "<p>If you publish a paper on whatever it is you're doing, please consider citing this article if it <code>real_asymp</code> ends up being useful: <a href=\"https://doi.org/10.1145/3326229.3326240\">https://doi.org/10.1145/3326229.3326240</a></p>",
        "id": 283327147,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1653316323
    }
]