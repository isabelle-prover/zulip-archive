[
    {
        "content": "<p>Is there a way to make <code>simp</code> ignore specific premises, both for (a) use during simplification of other premises / goal, (b) simplification of the premise itself?</p>\n<p>I considered adding a wrapper <code>IGNORE x == x</code>, and have a trivial <code>cong</code> rule <code>IGNORE x = IGNORE x</code> (in fact, there's already the in-built <code>ASSUMPTION</code> which is very similar), but that solves only (b) I think -- at any rate, the long running <code>simp</code> calls I'm trying to speedup this way don't get noticably any faster with this technique.</p>",
        "id": 440658510,
        "sender_full_name": "Hanno Becker",
        "timestamp": 1716665221
    },
    {
        "content": "<p>Extending the idea above, one can introduce a wrapper around <code>P ==&gt; Q</code>, say <code>IGNORE_imp P Q == P ==&gt; Q</code>, and wrap to-be-ignored assumptions into that. I think that should be OK for the simplifier, but sadly not for <code>clarsimp</code>, which no longer recognizes introduction rules once the goal is wrapped in <code>IGNORE_imp</code>.</p>",
        "id": 440735160,
        "sender_full_name": "Hanno Becker",
        "timestamp": 1716752436
    },
    {
        "content": "<p>The best seems to be a way to hook into the simplifier and add a filter deciding whether a premise enters the simplification process or not...</p>",
        "id": 440735214,
        "sender_full_name": "Hanno Becker",
        "timestamp": 1716752506
    }
]