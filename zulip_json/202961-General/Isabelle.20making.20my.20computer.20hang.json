[
    {
        "content": "<p>When I run <code>isabelle build</code> on a non-trivial project, Isabelle tends to virtually take over my system, making other work difficult. It’s particularly bad when having a video call running concurrently. In this situation, the build typically takes much longer than usual and the video call effectively stops (basically no audio and video transmission anymore) and is finally dropped because of some timeout.</p>\n<p>Initially, I thought that perhaps the scheduler assigns almost all CPU time to Isabelle’s threads, because Isabelle apparently wants to perform a lot of computation. However, this would be a bit stupid, and I find it hard to believe that Linux, which I’m using, can’t do a better scheduling job after 30 years of development. Recently, a colleague suggested that the problem I’m experiencing might have to do with RAM shortage instead.</p>\n<p>In any case, are others here experiencing the same issue, and does someone know what the cause of this issue might be?</p>",
        "id": 314691353,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1670510659
    },
    {
        "content": "<p>I would also guess RAM, Linux then has to start swapping to disk which is slow. You could try to use cgroups or containers (aka cgroups in disguise) to limit the RAM that isabelle has access to, e.g.:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">cgcreate</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">g</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"o\">:</span><span class=\"n\">isabelle</span><span class=\"w\"></span>\n<span class=\"n\">echo</span><span class=\"w\"> </span><span class=\"n\">500M</span><span class=\"w\"> </span><span class=\"n\">&gt;</span><span class=\"w\"> </span><span class=\"n\">/sys/fs/cgroup/memory/isabelle/memory.limit_in_bytes</span><span class=\"w\"></span>\n<span class=\"n\">cgexec</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">g</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"o\">:</span><span class=\"n\">isabelle</span><span class=\"w\"> </span><span class=\"n\">isabelle</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"></span>\n</code></pre></div>\n<p>(Adjust the 500M to a more suitable value ofc). Might need to install a package, on Ubuntu <code>cgroup-tools</code></p>",
        "id": 314913375,
        "sender_full_name": "Jan van Brügge",
        "timestamp": 1670598016
    },
    {
        "content": "<p>Otherwise systemd makes this a bit easier: <code>systemd-run --scope -p MemoryMax=500M --user isabelle build</code></p>",
        "id": 314913802,
        "sender_full_name": "Jan van Brügge",
        "timestamp": 1670598123
    },
    {
        "content": "<p>Thanks a lot. This seems to be helpful indeed.</p>\n<p>Did I get this correctly that your solution boils down to letting Isabelle suffer from swapping more, while having other software, like the one for your video calls, suffer from swapping less or not at all?</p>",
        "id": 314956408,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1670610706
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"423655\">Wolfgang Jeltsch</span> has marked this topic as resolved.</p>",
        "id": 315007224,
        "sender_full_name": "Notification Bot",
        "timestamp": 1670632092
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"423655\">Wolfgang Jeltsch</span> has marked this topic as unresolved.</p>",
        "id": 315007264,
        "sender_full_name": "Notification Bot",
        "timestamp": 1670632135
    },
    {
        "content": "<p>Theoretically yes, but in practice it should just run the garbage collection more often</p>",
        "id": 315057979,
        "sender_full_name": "Jan van Brügge",
        "timestamp": 1670669926
    }
]