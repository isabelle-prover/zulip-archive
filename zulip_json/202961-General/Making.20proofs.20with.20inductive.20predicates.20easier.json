[
    {
        "content": "<p>Hi, I have a set of mutually recursive inductive predicates that define a well-formedness condition for a language. I often need to prove well-formedness for various forms of terms in the language. These proofs are easy if I break them down into the consituent subgoals either using apply style or Isar style but they are getting tedious to do. If I throw all of the intros at sledgehammer,sledgehammer doesn't find a proof even though it seems 'obvious' to me. If I limit the set of facts to the facts I used to prove the wf condition by hand then sledgehammer finds the proof. Any suggestions on how I can prove these wf facts easily and in a general way?</p>",
        "id": 204073607,
        "sender_full_name": "Mark Wassell",
        "timestamp": 1594900857
    },
    {
        "content": "<p>auto/force with suitable simp/intro/dest/elim rules doesn't do it?</p>",
        "id": 204076011,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594902693
    },
    {
        "content": "<p>Metis with all of the intros for the wf predicates + extras sometimes works. Sometimes a more refined set of intros is needed. In cases where these don't work a few steps of apply to break it up into simpler subgoals and then the above works.</p>",
        "id": 204078866,
        "sender_full_name": "Mark Wassell",
        "timestamp": 1594904283
    },
    {
        "content": "<p>I have noticed that the structure of the rules for the inductive predicate might be a problem. One of the predicate rules is not syntax directed and if I do apply(rule+) it leads me to a subgoal that is not provable. I wonder if the automatic methods are going down the same path and get stuck. I will see if I can fix the rule.</p>",
        "id": 204079977,
        "sender_full_name": "Mark Wassell",
        "timestamp": 1594904843
    },
    {
        "content": "<p>Sledgehammer is also not great with higher-order stuff, I think. In case your rules are higher-order.</p>",
        "id": 204080740,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1594905191
    },
    {
        "content": "<p>auto/force/fastforce will go down a similar path with <code>intro</code> rules as <code>rule+</code>. But there will be backtracking and intermediate simplifications. If they need to go down a \"deep\" path, the whole thing will likely explode and they will not succeed. Also note that the search depth of <code>auto</code> per default is highly limited.</p>",
        "id": 204092895,
        "sender_full_name": "Simon Wimmer",
        "timestamp": 1594910537
    },
    {
        "content": "<p>Also note: the search depth for auto is configurable; it could be helpful to change it for experimenting or understanding why the automation fails in your case.</p>",
        "id": 204186042,
        "sender_full_name": "Mohammad Abdulaziz",
        "timestamp": 1594977402
    }
]