[
    {
        "content": "<p>Hi all,</p>\n<p>I got the error message <code>Metis: The assumptions are inconsistent</code> while proving subgoals with metis of a lemma of the following form:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"P T ∧ Q T∧ R T\"</span>\n<span class=\"w\">  </span><span class=\"kp\">shows</span><span class=\"w\"> </span><span class=\"s\">\"P T'\"</span>\n</code></pre></div>\n<p>I presume that means <code>\"P T ∧ Q T∧ R T\"</code> is <code>False</code>.<br>\nHow do I get a witness from metis that the assumption is indeed inconsistent?<br>\n(I have removed all <code>sorry</code> before that lemma, and introduced no new axioms).<br>\n Please see lin 340 of the file <code>SimpleDeviceIIAGO_WritePull.thy</code> for the specific issue.</p>\n<p>Best,<br>\nChengsong<br>\n<a href=\"/user_uploads/14278/xPwZtlsIzc73fBroMoRpzLTg/SimpleDeviceIIAGO_WritePull.thy\">SimpleDeviceIIAGO_WritePull.thy</a><br>\n<a href=\"/user_uploads/14278/sJwDNN5qzx8FlOauZZxIf63d/Transposed.thy\">Transposed.thy</a><br>\n<a href=\"/user_uploads/14278/NkkK2tsJ4Bb9gcycbU5k8Bih/BasicInvariants.thy\">BasicInvariants.thy</a><br>\n<a href=\"/user_uploads/14278/ZvUMB80aUwlFHb5LsQdACWeS/BuggyRules.thy\">BuggyRules.thy</a><br>\n<a href=\"/user_uploads/14278/2y4V0KUtLyYMezC3SUncM2uR/CoherenceProperties.thy\">CoherenceProperties.thy</a></p>",
        "id": 426338012,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1710335957
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"w\">    </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">i204</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">False</span>\n<span class=\"w\">      </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"w\"> </span><span class=\"n\">i617</span><span class=\"w\"> </span><span class=\"n\">nextReqRespIs.simps</span><span class=\"o\">(</span><span class=\"n\">1</span><span class=\"o\">)[</span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"o\">_]</span><span class=\"w\"> </span><span class=\"k\">unfolding</span><span class=\"w\"> </span><span class=\"n\">nextGOPendingIs_def</span>\n<span class=\"w\">      </span><span class=\"n\">supply</span><span class=\"w\"> </span><span class=\"o\">[[</span><span class=\"n\">metis_trace</span><span class=\"o\">]]</span>\n<span class=\"w\">      </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">metis</span>\n</code></pre></div>",
        "id": 426339022,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1710336233
    },
    {
        "content": "<p>With this is is clear:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"w\">    </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">i204</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">False</span>\n<span class=\"w\">      </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"w\"> </span><span class=\"n\">i617</span><span class=\"w\"> </span><span class=\"n\">nextReqRespIs.simps</span><span class=\"o\">(</span><span class=\"n\">1</span><span class=\"o\">)[</span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"s\">‹GO_WritePull›</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"k\">unfolding</span><span class=\"w\"> </span><span class=\"n\">nextGOPendingIs_def</span><span class=\"w\"> </span><span class=\"n\">simp_thms</span>\n<span class=\"w\">        </span><span class=\"n\">if_True</span>\n</code></pre></div>",
        "id": 426339619,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1710336400
    },
    {
        "content": "<p>(look at the proof state)</p>",
        "id": 426339637,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1710336408
    },
    {
        "content": "<p>(I did this per hand)</p>",
        "id": 426339786,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1710336450
    },
    {
        "content": "<p>Thanks a lot, Mathias!<br>\nDoing a <code>have \"False\" try</code> also yields the conflicting facts, but how did you come up with the <br>\n<code>using assms i617 nextReqRespIs.simps(1)[of ‹GO_WritePull›] unfolding nextGOPendingIs_def simp_thms</code> bit?</p>\n<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/202961-General/topic/Metis.3A.20The.20assumptions.20are.20inconsistent/near/426339022\">said</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"w\">    </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">i204</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">False</span>\n<span class=\"w\">      </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"w\"> </span><span class=\"n\">i617</span><span class=\"w\"> </span><span class=\"n\">nextReqRespIs.simps</span><span class=\"o\">(</span><span class=\"n\">1</span><span class=\"o\">)[</span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"o\">_]</span><span class=\"w\"> </span><span class=\"k\">unfolding</span><span class=\"w\"> </span><span class=\"n\">nextGOPendingIs_def</span>\n<span class=\"w\">      </span><span class=\"n\">supply</span><span class=\"w\"> </span><span class=\"o\">[[</span><span class=\"n\">metis_trace</span><span class=\"o\">]]</span>\n<span class=\"w\">      </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">metis</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 426340677,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1710336718
    },
    {
        "content": "<p>I first transformed the proof into:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">have</span><span class=\"w\">  </span><span class=\"n\">False</span>\n<span class=\"w\">   </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">XXXX</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">metis</span>\n</code></pre></div>",
        "id": 426342175,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1710337129
    },
    {
        "content": "<p>Then I looked at the facts and saw some definition. So I applied it, yielding:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">have</span><span class=\"w\">  </span><span class=\"n\">False</span>\n<span class=\"w\">   </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">XXXX</span><span class=\"w\">  </span><span class=\"k\">unfolding</span><span class=\"w\"> </span><span class=\"n\">YYY</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">metis</span>\n</code></pre></div>\n<p>After the unfolding there was a \"if 0 = 0 then ... else ...\" which I wanted to remove</p>",
        "id": 426342334,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1710337186
    },
    {
        "content": "<p>ho, and there was a single fact <code> nextReqRespIs.simps</code> that required instantiation. I looked at the context and there was a single matching term.</p>",
        "id": 426345897,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1710338215
    }
]