[
    {
        "content": "<p>When defining an inductive predicate, Isabelle turns rules of the form</p>\n<div class=\"codehilite\"><pre><span></span>a: A ⟹ B ⟹ C\n</pre></div>\n\n\n<p>into </p>\n<div class=\"codehilite\"><pre><span></span>A ∧ B ⟹ C\n</pre></div>\n\n\n<p>which is inconvenient when trying to typeset the rules with the antiquotation</p>\n<div class=\"codehilite\"><pre><span></span>@{thm[mode=Rule] a}\n</pre></div>\n\n\n<p>since the assumptions are connected by a conjunction.<br>\nHow can I control that behaviour or change the shape of the rule before typesetting?</p>",
        "id": 173018203,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1565612277
    },
    {
        "content": "<p>Inductive should normally not do this. When does this happen to you?</p>",
        "id": 173019614,
        "sender_full_name": "Alexander Krauss",
        "timestamp": 1565613747
    },
    {
        "content": "<p>I am not doing anything special. Isabelle version is August 2018. My inductive predicate looks like follows:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">inductive</span> <span class=\"n\">proves</span> <span class=\"o\">::</span> <span class=\"s\">&quot;literal set ⇒ literal ⇒ bool&quot;</span> <span class=\"o\">(</span><span class=\"kp\">infix</span> <span class=\"s\">&quot;⊢⇩P&quot;</span> <span class=\"n\">60</span><span class=\"o\">)</span> <span class=\"kp\">where</span>\n<span class=\"n\">assm</span><span class=\"o\">:</span> <span class=\"s\">&quot;⟦ l ∈ A; is_EQ_or_LEQ l ⟧ ⟹ A ⊢⇩P l&quot;</span>\n<span class=\"ow\">...</span>\n</pre></div>",
        "id": 173019843,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1565613977
    },
    {
        "content": "<p>And now <code>assm</code> comes out with a conjunction? This is unexpected as far as I know. Can you produce a self-contained runnable example?</p>\n<p>As a workaround/hack for presentation, you might try <code>assm[OF conjI]</code>.</p>",
        "id": 173020211,
        "sender_full_name": "Alexander Krauss",
        "timestamp": 1565614353
    },
    {
        "content": "<p>I just noticed that</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kt\">thm</span> <span class=\"s\">&quot;proves.assm&quot;</span>\n</pre></div>\n\n\n<p>gives the correct output when used directly after the definition, but not in <em>Thesis.thy</em> which I use for writing the document.<br>\nThis is my setup:<br>\nThe root directory contains the directory <em>src</em> and the directory <em>thesis</em>.<br>\nIn <em>src</em>, I have all my theory files that constitute my proofs. It has the following ROOT file:</p>\n<div class=\"codehilite\"><pre><span></span>session Order = HOL +\n  theories\n    Order_Semantics\n    Partial_Order\n    Partial_Order_Proofs\n    Partial_Order_Impl\n    Total_Order\n</pre></div>\n\n\n<p>In <em>thesis</em>, I have a file <em>Thesis.thy</em> with which I typeset my thesis. The ROOT file looks like follows:</p>\n<div class=\"codehilite\"><pre><span></span>session Thesis_Base = HOL +\n  sessions\n    &quot;HOL-Library&quot;\n    Order\n  theories\n    &quot;HOL-Library.LaTeXsugar&quot;\n\nsession Thesis = Thesis_Base +\n  options [document = pdf, show_question_marks = false, names_short = true,\n    document_output = &quot;build&quot;]\n  theories\n    Thesis\n  document_files\n    &quot;root.tex&quot;\n    &quot;settings.tex&quot;\n    &quot;sources.bib&quot;\n    &quot;pages/abstract.tex&quot;\n    &quot;pages/acknowledgements.tex&quot;\n    &quot;pages/cover.tex&quot;\n    &quot;pages/disclaimer.tex&quot;\n    &quot;pages/title.tex&quot;\n    &quot;build&quot;\n</pre></div>\n\n\n<p>I open the file <em>Thesis.thy</em> with the command <em>isabelle jedit -d ../src Thesis.thy &amp;</em> in the directory <em>thesis</em>.<br>\nWhen I type <em>thm proves.assm</em>, the output has the conjunction.</p>",
        "id": 173020574,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1565614730
    },
    {
        "content": "<p><em>assm[OF conjI]</em> results in an ML exception because there are no unifiers.</p>",
        "id": 173020752,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1565614875
    },
    {
        "content": "<p>Ah, I found the culprit, it was my bad. I included <em>OptionalSugar.thy</em> which performs this syntax translation.</p>",
        "id": 173021768,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1565615575
    }
]