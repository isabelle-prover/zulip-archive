[
    {
        "content": "<p>Hi,<br>\nas part of a larger proof for something I'm working on, I need to prove something like the following...</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">div_pow2_le_mono</span><span class=\"o\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">shows</span><span class=\"w\"> </span><span class=\"s\">\"(reg::nat) ≤ n ⟶ (reg div (2^d)) ≤ (n div (2^d))\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">simp</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">div_le_mono</span><span class=\"o\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>This works as expected for the nat type, but I specifically want to use <code>8 word</code> instead of <code>nat</code> (this is modelling a right bit shift on a byte register)<br>\nso I am trying to prove something like the following, which uses <code>drop_bit</code> on <code>word</code> types:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">shows</span><span class=\"w\"> </span><span class=\"s\">\"(reg :: 8 word) ≤ a ⟶ (drop_bit k reg) ≤ a div 2^k\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"n\">transfer</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">simp</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">div_le_mono</span><span class=\"w\"> </span><span class=\"n\">div_pow2_le_mono</span><span class=\"o\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"ow\">...</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I had hoped that with <code>transfer</code> I would be able to prove this for words in much the same way as with nats, but it appears not to work.<br>\nAm I missing something? Is there an easy way to do this? If not then how best to prove this lemma?<br>\nThanks :)</p>",
        "id": 324069136,
        "sender_full_name": "Lex Bailey",
        "timestamp": 1674830875
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"s\">\"(reg :: 8 word) ≤ a ⟶ (drop_bit k reg) ≤ a div 2^k\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">simp</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">drop_bit_eq_div</span><span class=\"w\"> </span><span class=\"n\">word_le_nat_alt</span><span class=\"w\"> </span><span class=\"n\">unat_div_distrib</span><span class=\"w\"> </span><span class=\"n\">div_le_mono</span><span class=\"o\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Unfolding the definition of leq for words lets you prove the same fact on naturals</p>",
        "id": 324120346,
        "sender_full_name": "Christian Pardillo Laursen",
        "timestamp": 1674842513
    },
    {
        "content": "<p>ah! awesome, thanks :)</p>",
        "id": 324374567,
        "sender_full_name": "Lex Bailey",
        "timestamp": 1674960720
    }
]