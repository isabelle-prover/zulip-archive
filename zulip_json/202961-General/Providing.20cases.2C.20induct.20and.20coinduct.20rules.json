[
    {
        "content": "<p>Section <a href=\"https://isabelle.in.tum.de/doc/isar-ref.pdf#page=172\">6.5.3 Declaring rules</a> of the Isabelle/Isar Reference Manual says that one can define custom cases, induction and coinduction rules.</p>\n<p>Is there any checking that they satisfy the properties of cases, induction and coinduction?</p>\n<p>And, when can I say that a rule is a cases, induction or coinduction rule? Where can I read about this?</p>",
        "id": 393753071,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1695915520
    },
    {
        "content": "<p>You can pass elimination, induction, and coinduction rules to the <code>cases</code>, <code>induction</code>, and <code>coinduction</code> methods respectively via a <code>rule</code> argument (that is, after a <code>rule:</code>). If a rule so passed doesnâ€™t have the right structure, the method will find out upon invocation.</p>\n<p>At least for <code>cases</code> and <code>induction</code>, this should be mentioned in the <code>prog-prove</code> tutorial, and in general this should also be discussed in the section of the Isabelle/Isar Reference Manual that discusses <code>cases</code>, <code>induction</code>, and <code>coinduction</code>.</p>",
        "id": 393765092,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1695919275
    }
]