[
    {
        "content": "<p><a href=\"#narrow/stream/202961-General/topic/tools.20to.20automatically.20adopt.20sledgehammer.20proofs.20into.20theory\">https://isabelle.zulipchat.com/#narrow/stream/202961-General/topic/tools.20to.20automatically.20adopt.20sledgehammer.20proofs.20into.20theory</a></p>\n<p>Perhaps a minimal solution to the core of the question above, can we redirect the one-liner proofs outputted by sledgehammer to a file while jedit/isabelle build session tools are checking the file?</p>",
        "id": 437509442,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1715107333
    },
    {
        "content": "<p>try mirabelle</p>",
        "id": 437582367,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1715148103
    },
    {
        "content": "<p>that prints a log file with that information (except that you do not even need to have sledgehammer calls, it will run every goal with sledgehammer)</p>",
        "id": 437582509,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1715148156
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/202961-General/topic/Redirecting.20sledgehammer.20output.20to.20file.20instead/near/437582367\">said</a>:</p>\n<blockquote>\n<p>try mirabelle</p>\n</blockquote>\n<p>Hi Mathias,<br>\nHave you used mirabelle? Does it accept thy files at all (rather than session names)?<br>\nI have tried using </p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">isabelle</span><span class=\"w\"> </span><span class=\"n\">mirabelle</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">O</span><span class=\"w\"> </span><span class=\"kp\">output</span><span class=\"w\"> </span><span class=\"n\">\\</span>\n<span class=\"o\">-</span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"s\">\"slegehammer[provers = cvc4, timeout = 30]\"</span><span class=\"w\"> </span><span class=\"n\">\\</span>\n<span class=\"o\">-</span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"n\">myTheoryName</span>\n</code></pre></div>\n<p>with or without the <code>.thy</code> extension for <code>myTheoryName</code>, but I always got</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">Building</span><span class=\"w\"> </span><span class=\"n\">required</span><span class=\"w\"> </span><span class=\"n\">heaps</span><span class=\"w\"> </span><span class=\"ow\">...</span>\n\n<span class=\"n\">###</span><span class=\"w\"> </span><span class=\"n\">Nothing</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">build</span>\n\n<span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"n\">Mirabelle</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">Isabelle/007e6af8a020</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">Isabelle2024</span><span class=\"o\">-</span><span class=\"n\">RC3</span><span class=\"o\">)</span><span class=\"ow\">...</span>\n\n<span class=\"n\">###</span><span class=\"w\"> </span><span class=\"n\">Nothing</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">build</span>\n\n<span class=\"n\">0</span><span class=\"o\">:</span><span class=\"n\">00</span><span class=\"o\">:</span><span class=\"n\">01</span><span class=\"w\"> </span><span class=\"n\">elapsed</span><span class=\"w\"> </span><span class=\"n\">time</span>\n</code></pre></div>\n<p>Is there anything I am missing? The relevant chapter in the manual does not help as its examples always assumes the existence of an AFP session, like this:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">isabelle</span><span class=\"w\"> </span><span class=\"n\">mirabelle</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"n\">$AFP</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">O</span><span class=\"w\"> </span><span class=\"kp\">output</span><span class=\"w\"> </span><span class=\"n\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"n\">Semantics</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"n\">Compiler</span><span class=\"w\"> </span><span class=\"n\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"s\">\"sledgehammer[prover=e, prover_timeout=30]\"</span><span class=\"w\"> </span><span class=\"n\">\\</span>\n<span class=\"w\">  </span><span class=\"n\">VeriComp</span>\n</code></pre></div>",
        "id": 437598796,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1715155382
    },
    {
        "content": "<p>I have used mirabelle</p>",
        "id": 437624549,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1715165344
    },
    {
        "content": "<p>Why not create a session for your theory?</p>",
        "id": 437624607,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1715165368
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/202961-General/topic/Redirecting.20sledgehammer.20output.20to.20file.20instead/near/437624607\">said</a>:</p>\n<blockquote>\n<p>Why not create a session for your theory?</p>\n</blockquote>\n<p>I did, but did not succeed, so with command</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">isabelle</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">quick_and_dirty</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">D</span><span class=\"w\"> </span><span class=\"ow\">.</span>\n</code></pre></div>\n<p>I got the error message:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">Building</span><span class=\"w\"> </span><span class=\"n\">HOL</span><span class=\"w\"> </span><span class=\"ow\">...</span>\n<span class=\"n\">HOL</span><span class=\"w\"> </span><span class=\"n\">FAILED</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">see</span><span class=\"w\"> </span><span class=\"k\">also</span><span class=\"w\"> </span><span class=\"s\">\"isabelle build_log -H Error HOL\"</span><span class=\"o\">)</span>\n<span class=\"ow\">...</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">timeout</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Time.time</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"kt\">try0</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">bool</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">type_enc</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">option</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">uncurried_aliases</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">bool</span><span class=\"w\"> </span><span class=\"n\">option</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">verbose</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">bool</span><span class=\"ow\">}</span>\n<span class=\"n\">***</span><span class=\"w\">    </span><span class=\"n\">Argument</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Normal</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">mode</span>\n<span class=\"n\">***</span><span class=\"w\">    </span><span class=\"n\">Reason</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Value</span><span class=\"w\"> </span><span class=\"n\">being</span><span class=\"w\"> </span><span class=\"n\">applied</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"kn\">function</span><span class=\"w\"> </span><span class=\"n\">type</span>\n<span class=\"n\">***</span><span class=\"w\"> </span><span class=\"k\">ML</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"n\">377</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"s\">\"~~/src/HOL/Tools/Sledgehammer/sledgehammer_commands.ML\"</span><span class=\"o\">):</span>\n<span class=\"n\">***</span><span class=\"w\"> </span><span class=\"n\">Type</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"kp\">in</span><span class=\"w\"> </span><span class=\"kn\">function</span><span class=\"w\"> </span><span class=\"n\">application.</span>\n<span class=\"n\">***</span><span class=\"w\">    </span><span class=\"n\">Function</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">get_params</span><span class=\"w\"> </span><span class=\"n\">mode</span><span class=\"w\"> </span><span class=\"n\">thy</span><span class=\"w\"> </span><span class=\"o\">[])</span><span class=\"w\"> </span><span class=\"o\">:</span>\n<span class=\"n\">***</span><span class=\"w\">       </span><span class=\"ow\">{</span><span class=\"n\">abduce</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">option</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">compress</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">real</span><span class=\"w\"> </span><span class=\"n\">option</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">debug</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">bool</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">expect</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">fact_filter</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">option</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">fact_thresholds</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">real</span><span class=\"w\"> </span><span class=\"n\">*</span><span class=\"w\"> </span><span class=\"n\">real</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">falsify</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">bool</span><span class=\"w\"> </span><span class=\"n\">option</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">induction_rules</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">induction_rules</span><span class=\"w\"> </span><span class=\"n\">option</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">isar_proofs</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">bool</span><span class=\"w\"> </span><span class=\"n\">option</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">lam_trans</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">option</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">learn</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">bool</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">max_facts</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">option</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">max_mono_iters</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">option</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">max_new_mono_instances</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">option</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">max_proofs</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">minimize</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">bool</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">overlord</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">bool</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">preplay_timeout</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Time.time</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">provers</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">list</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">slices</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">smt_proofs</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">bool</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">spy</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">bool</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">strict</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">bool</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">timeout</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Time.time</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"kt\">try0</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">bool</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">type_enc</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">option</span><span class=\"o\">,</span>\n<span class=\"n\">***</span><span class=\"w\">        </span><span class=\"n\">uncurried_aliases</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">bool</span><span class=\"w\"> </span><span class=\"n\">option</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">verbose</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">bool</span><span class=\"ow\">}</span>\n<span class=\"n\">***</span><span class=\"w\">    </span><span class=\"n\">Argument</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">mode</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">mode</span>\n<span class=\"n\">***</span><span class=\"w\">    </span><span class=\"n\">Reason</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Value</span><span class=\"w\"> </span><span class=\"n\">being</span><span class=\"w\"> </span><span class=\"n\">applied</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"kn\">function</span><span class=\"w\"> </span><span class=\"n\">type</span>\n<span class=\"n\">***</span>\n<span class=\"n\">***</span><span class=\"w\"> </span><span class=\"n\">At</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"w\"> </span><span class=\"s\">\"ML_file\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"n\">35</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"s\">\"~~/src/HOL/Sledgehammer.thy\"</span><span class=\"o\">)</span>\n<span class=\"n\">My_Session</span><span class=\"w\"> </span><span class=\"n\">CANCELLED</span>\n<span class=\"n\">Unfinished</span><span class=\"w\"> </span><span class=\"n\">session</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">):</span><span class=\"w\"> </span><span class=\"n\">HOL</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">My_Session</span>\n<span class=\"n\">0</span><span class=\"o\">:</span><span class=\"n\">02</span><span class=\"o\">:</span><span class=\"n\">13</span><span class=\"w\"> </span><span class=\"n\">elapsed</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">0</span><span class=\"o\">:</span><span class=\"n\">06</span><span class=\"o\">:</span><span class=\"n\">09</span><span class=\"w\"> </span><span class=\"n\">cpu</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">factor</span><span class=\"w\"> </span><span class=\"n\">2.77</span>\n</code></pre></div>\n<p>Any ideas?</p>",
        "id": 437680475,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1715184040
    },
    {
        "content": "<p>Cannot reproduce, which Isabelle version are you using? Did you change any ML as part of your other experiments?</p>",
        "id": 437773067,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1715234287
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/202961-General/topic/Redirecting.20sledgehammer.20output.20to.20file.20instead/near/437773067\">said</a>:</p>\n<blockquote>\n<p>Cannot reproduce, which Isabelle version are you using? Did you change any ML as part of your other experiments?</p>\n</blockquote>\n<p>I'm using Isabelle2023, here are the files I have been building with:</p>\n<p><a href=\"/user_uploads/14278/E6doFP10Ag-H14meecBWclXS/BasicInvariants.thy\">BasicInvariants.thy</a><br>\n<a href=\"/user_uploads/14278/eFCtcpPw7ub8_Y2K1CrZ3OkJ/CoherenceProperties.thy\">CoherenceProperties.thy</a><br>\n<a href=\"/user_uploads/14278/2YrfikxAYAc5hLCLJQ7gLqIU/BuggyRules.thy\">BuggyRules.thy</a><br>\n<a href=\"/user_uploads/14278/rZHgKTZ66Ek5ONYHN9bVHmPf/NewSharedRdOwn.thy\">NewSharedRdOwn.thy</a><br>\n<a href=\"/user_uploads/14278/vl3-xXQjMlgxqZmCSbDDJmXS/Transposed.thy\">Transposed.thy</a><br>\n<a href=\"/user_uploads/14278/LItrCdzwXHpv_vtqA9NRsk2U/ROOT\">ROOT</a></p>",
        "id": 437796939,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1715249707
    },
    {
        "content": "<p>And I haven't written anything yet tot he .ML files while I was trying to build things.</p>",
        "id": 437797032,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1715249759
    },
    {
        "content": "<p>First fix your stuff such that <code>$ isabelle build -d \\$AFP -D .</code> works…</p>",
        "id": 437810130,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1715257226
    },
    {
        "content": "<p>At the very least, you need to import </p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">$</span><span class=\"w\"> </span><span class=\"n\">cat</span><span class=\"w\"> </span><span class=\"n\">ROOT</span>\n<span class=\"n\">session</span><span class=\"w\"> </span><span class=\"s\">\"My_Session\"</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">HOL</span><span class=\"w\"> </span><span class=\"o\">+</span>\n<span class=\"w\">  </span><span class=\"n\">sessions</span>\n<span class=\"w\">    </span><span class=\"n\">Eisbach</span>\n<span class=\"w\">    </span><span class=\"n\">PSL</span>\n<span class=\"w\">  </span><span class=\"n\">theories</span>\n<span class=\"w\">    </span><span class=\"n\">BasicInvariants</span>\n<span class=\"w\">    </span><span class=\"n\">BuggyRules</span>\n<span class=\"w\">    </span><span class=\"n\">CoherenceProperties</span>\n<span class=\"w\">    </span><span class=\"n\">NewSharedRdOwn</span>\n<span class=\"w\">    </span><span class=\"n\">Transposed</span>\n</code></pre></div>",
        "id": 437810313,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1715257327
    },
    {
        "content": "<p>Import <code>\"Eisbach.Eisbach\"</code> instead of putting the path</p>",
        "id": 437810353,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1715257350
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/202961-General/topic/Redirecting.20sledgehammer.20output.20to.20file.20instead/near/437810313\">said</a>:</p>\n<blockquote>\n<p>At the very least, you need to import </p>\n<p><div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">$</span><span class=\"w\"> </span><span class=\"n\">cat</span><span class=\"w\"> </span><span class=\"n\">ROOT</span>\n<span class=\"n\">session</span><span class=\"w\"> </span><span class=\"s\">\"My_Session\"</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">HOL</span><span class=\"w\"> </span><span class=\"o\">+</span>\n<span class=\"w\">  </span><span class=\"n\">sessions</span>\n<span class=\"w\">    </span><span class=\"n\">Eisbach</span>\n<span class=\"w\">    </span><span class=\"n\">PSL</span>\n<span class=\"w\">  </span><span class=\"n\">theories</span>\n<span class=\"w\">    </span><span class=\"n\">BasicInvariants</span>\n<span class=\"w\">    </span><span class=\"n\">BuggyRules</span>\n<span class=\"w\">    </span><span class=\"n\">CoherenceProperties</span>\n<span class=\"w\">    </span><span class=\"n\">NewSharedRdOwn</span>\n<span class=\"w\">    </span><span class=\"n\">Transposed</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Hi,</p>\n<p>I have removed the Eisbach/PSL bit. I just realised the Isabelle I was using was Isabelle2024-RC3. Could that be an issue? I will now try switching to a different version of isabelle to see if anything changes.</p>",
        "id": 437834031,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1715266804
    },
    {
        "content": "<p>No that will not make a difference… if your ROOT file is not correct, mirabelle will not work</p>",
        "id": 437840308,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1715269097
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/202961-General/topic/Redirecting.20sledgehammer.20output.20to.20file.20instead/near/437840308\">said</a>:</p>\n<blockquote>\n<p>No that will not make a difference… if your ROOT file is not correct, mirabelle will not work</p>\n</blockquote>\n<p>Thanks Mathias! I have now set up correctly my ROOT and thy files so sessions can be built. Is there an option to set in mirabelle to only run sledgehammer on subgoals that actually have a \"sledgehammer\" command keyword in them? Right now in a single file I have ~400 subgoals. If each subgoal takes on average 1 minute to finish then that runs forever.</p>",
        "id": 437857009,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1715275501
    },
    {
        "content": "<p>No mirabelle is intended to run sledgehammer on all steps</p>",
        "id": 437857493,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1715275717
    },
    {
        "content": "<p>But it running sledgehammer can easily be done in parallel. So use bigger machine before lunch break or something?</p>",
        "id": 437857583,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1715275765
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/202961-General/topic/Redirecting.20sledgehammer.20output.20to.20file.20instead/near/437857583\">said</a>:</p>\n<blockquote>\n<p>But it running sledgehammer can easily be done in parallel. So use bigger machine before lunch break or something?</p>\n</blockquote>\n<p>Ok then I suppose building my own mini-tool that does the redirection would be more efficient. So if I want to set up a purely command-line tool that checks thy files as if running through them by jedit inspection, what command should be used? Right now using <code>./isabelle jedit -l Pure</code> and then opening my thy files via jedit does the job, but is there a purely command-line approach that does not need to hover through the text?</p>",
        "id": 437859470,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1715276598
    },
    {
        "content": "<p>I see two options: a new tool (as you have already been told on the mailing-list). Or: you script jedit by adding a plugin that scrolls for you, extract the text from the panel and insert it</p>",
        "id": 437860361,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1715276969
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/202961-General/topic/Redirecting.20sledgehammer.20output.20to.20file.20instead/near/437860361\">said</a>:</p>\n<blockquote>\n<p>I see two options: a new tool (as you have already been told on the mailing-list). Or: you script jedit by adding a plugin that scrolls for you, extract the text from the panel and insert it</p>\n</blockquote>\n<p>I forgot to say, I have already been successful at redirecting the outputs to a file (instead of proof panel), so now I can extract multiple sledgehammer calls' results from a thy file in batches and process them. So there really isn't any tool that says: \"go through this thy file as if someone went through them in jedit\"? That's surprising to me.</p>",
        "id": 437861289,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1715277333
    },
    {
        "content": "<p>why would it?</p>",
        "id": 437861590,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1715277473
    },
    {
        "content": "<p>there is a tool to interact with isabelle (isabelle server)</p>",
        "id": 437861690,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1715277494
    },
    {
        "content": "<p>there is a tool to act like a text editor (vscode using a LSP server)</p>",
        "id": 437861738,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1715277518
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/202961-General/topic/Redirecting.20sledgehammer.20output.20to.20file.20instead/near/437861690\">said</a>:</p>\n<blockquote>\n<p>there is a tool to interact with isabelle (isabelle server)</p>\n</blockquote>\n<p>What's the functionality/use case of isabelle server?</p>",
        "id": 437873688,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1715282789
    },
    {
        "content": "<p>My understanding: basically create a new UI that needs more control than LSP gives.</p>",
        "id": 437923978,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1715316819
    },
    {
        "content": "<p>This is a <em>lot</em> of work and I know of only one application</p>",
        "id": 437924032,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1715316850
    },
    {
        "content": "<p>The isabelle interface of <a href=\"https://arxiv.org/abs/2308.06970\">https://arxiv.org/abs/2308.06970</a></p>",
        "id": 437924058,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1715316882
    }
]