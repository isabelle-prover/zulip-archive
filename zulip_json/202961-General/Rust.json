[
    {
        "content": "<p>Is there any planned support for generating rust code, or for developing a theory that models rust?</p>",
        "id": 388387041,
        "sender_full_name": "Matthew Pocock",
        "timestamp": 1693507740
    },
    {
        "content": "<p>As far as I know only F# is planned</p>",
        "id": 388390183,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1693508970
    },
    {
        "content": "<p>but I am not convinced that rust modelisation is possible (or even useful)</p>",
        "id": 388390214,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1693508988
    },
    {
        "content": "<p>Close is Peter Lammich's  Isabelle/LLVM that models the LLVM IR semantics (the target of the rust front-end) and you can generate imperative code</p>",
        "id": 388390333,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1693509038
    },
    {
        "content": "<p>but Sepref and co have a significant overhead in learning and implementing</p>",
        "id": 388390439,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1693509099
    },
    {
        "content": "<p>(besides the fact that it is only for imperative non-functional code)</p>",
        "id": 388390523,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1693509126
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/202961-General/topic/Rust/near/388390214\">said</a>:</p>\n<blockquote>\n<p>but I am not convinced that rust modelisation is possible (or even useful)</p>\n</blockquote>\n<p>It would be nice to be able to prove that rust code is correct. I realise it isn't functional in the haskel sense, but the borrow checker does recover a lot of the safeness of purely functional languages. The rust semantics are quite a bit more constrained than LLVM IR, obviously, so there will be things to be said about rust code (or the sanitised version of it in the compiler) that can't be said about the LLVM IR.</p>",
        "id": 388399771,
        "sender_full_name": "Matthew Pocock",
        "timestamp": 1693513192
    }
]