[
    {
        "content": "<p>I'm trying to use <code>apply(intro transI relcompI)</code> on a goal of the form <code>trans (r O s)</code> but this gives me schematic variables in the goal. How can I avoid this?</p>",
        "id": 193159121,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1586250930
    },
    {
        "content": "<p>Huh? \"intro\" shouldn't introduce any schematic variables ever.</p>",
        "id": 193161168,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1586252154
    },
    {
        "content": "<p>But it does :O</p>",
        "id": 193161669,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1586252462
    },
    {
        "content": "<p>can you show a minimal example</p>",
        "id": 193161810,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1586252544
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>lemma &quot;trans (r O s)&quot;\n  apply(intro transI relcompI)\n</pre></div>",
        "id": 193161880,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1586252587
    },
    {
        "content": "<p>For me, it produces:</p>\n<div class=\"codehilite\"><pre><span></span>proof (prove)\ngoal (2 subgoals):\n 1. ⋀x y z. ⟦(x, y) ∈ r O s; (y, z) ∈ r O s⟧ ⟹ (x, ?b1 x y z) ∈ r\n 2. ⋀x y z. ⟦(x, y) ∈ r O s; (y, z) ∈ r O s⟧ ⟹ (?b1 x y z, z) ∈ s\n</pre></div>",
        "id": 193162019,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1586252657
    },
    {
        "content": "<p>I can try to investigate later. I thought \"intro\" wasn't supposed to produce schematic variables.</p>",
        "id": 193162655,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1586253034
    },
    {
        "content": "<p>I would just use \"rule\" and \"assumption\" by hand, or \"rule\" and \"erule\"</p>",
        "id": 193162692,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1586253059
    },
    {
        "content": "<p>apply (rule transI) apply (erule (1) relcompI)</p>",
        "id": 193162717,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1586253074
    },
    {
        "content": "<p>err no</p>",
        "id": 193162750,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1586253093
    },
    {
        "content": "<p>you'll first have to eliminate the \"o\" in the assumptions</p>",
        "id": 193162780,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1586253107
    },
    {
        "content": "<p>apply (elim relcompE), probably. And then \"erule (2) relcompI\"</p>",
        "id": 193162819,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1586253122
    }
]