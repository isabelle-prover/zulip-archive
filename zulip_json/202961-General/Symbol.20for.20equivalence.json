[
    {
        "content": "<p>Since ≡ is already taken, what would be the canonical symbol to use for equivalence (specifically a conversion)?</p>",
        "id": 190965060,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1584529363
    },
    {
        "content": "<p>equivalence of what?</p>",
        "id": 190965477,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1584529664
    },
    {
        "content": "<p>Equivalence of two terms in propositional logic.</p>",
        "id": 190965724,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1584529857
    },
    {
        "content": "<p>Is there a specific context? Rewriting? Logical equivalence? Some arbitrary equivalence relation?</p>",
        "id": 190965916,
        "sender_full_name": "Josh Chen",
        "timestamp": 1584530021
    },
    {
        "content": "<p>It's rewriting based. I want to represent Isabelle/ML conversions in HOL.</p>",
        "id": 190965977,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1584530054
    },
    {
        "content": "<p>First of all, you should think about whether you need notation for this at all</p>",
        "id": 190966059,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1584530143
    },
    {
        "content": "<p>if you do, I guess you could do something like ≡ with an aptly chosen index</p>",
        "id": 190966124,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1584530167
    },
    {
        "content": "<p>Ah right, I forgot about indexing. I do think that it is necessary because I also need a proof system (with proof terms that are a HOL datatype) that certifies those conversions.</p>",
        "id": 190966300,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1584530295
    },
    {
        "content": "<p>So?</p>",
        "id": 190966361,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1584530368
    },
    {
        "content": "<p>Sorry, I misunderstood you. The notation is of course not necessary. But it is nice for presentation.</p>",
        "id": 190966525,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1584530467
    },
    {
        "content": "<p>Then consider deleting it after you're done</p>",
        "id": 190966978,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1584530842
    },
    {
        "content": "<p>or making it optionally possible to enable/disable it with bundles</p>",
        "id": 190966997,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1584530860
    },
    {
        "content": "<p>syntax is global and in my opinion people tend to overuse custom syntax</p>",
        "id": 190967070,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1584530893
    },
    {
        "content": "<p>that's okay if your stuff is unlikely to ever be used by other developments, but otherwise it can be problematic</p>",
        "id": 190967098,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1584530925
    },
    {
        "content": "<p>e.g. there are about three different theories in Isabelle that use \"$\" as a binary operator</p>",
        "id": 190967117,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1584530942
    },
    {
        "content": "<p>if you import more than one of them at the same time, all hell breaks loose</p>",
        "id": 190967132,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1584530956
    },
    {
        "content": "<p>Thanks, I will definitely keep that in mind for when it comes to that point :D</p>",
        "id": 190969059,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1584532298
    }
]