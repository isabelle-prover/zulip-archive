[
    {
        "content": "<p>Say I’d like to introduce a concise notation for partial functions, represented by total functions of type <code>'a ⇒ 'b option</code>. I want users to be able to write <code>π⟨pattern⟩. ⟨expression⟩</code> and have this translated to <code>λx. case x of ⟨pattern⟩ ⇒ Some ⟨expression⟩ | _ ⇒ None</code>. I’ve tried to do this with <code>syntax</code> and <code>translations</code>, but this doesn’t seem to be possible, because I have to introduce the new, probably fresh, variable <code>x</code> on the right-hand side. How can I implement syntax translations that introduce bound variables like in this example?</p>",
        "id": 379485133,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1690547041
    },
    {
        "content": "<p>So you do not like <code>map_option</code>?</p>",
        "id": 380123725,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1690747656
    },
    {
        "content": "<p>I don’t see how <code>map_option</code> would help here. Can you please enlighten me?</p>\n<p>Also, what I actually want to implement is a bit more complex.</p>",
        "id": 380316844,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1690805598
    },
    {
        "content": "<p>You are trying to do:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">map_option</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">%x.</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">\\pi</span>\n</code></pre></div>\n<p>so do you really need a new syntax for it?</p>",
        "id": 380318474,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1690805902
    },
    {
        "content": "<p>wait you want to do something even weirder</p>",
        "id": 380318720,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1690805946
    },
    {
        "content": "<p>It’s not weird. I want to write a partial function.</p>",
        "id": 380318791,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1690805960
    },
    {
        "content": "<p>Why not use do notation?</p>",
        "id": 384214407,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1691835497
    },
    {
        "content": "<p>My actual use case is more complex. Above, I just used a sort of minimal example to explain the technical problem. It’s a solution to this technical problem I’m seeking, not recommendations how to do things differently.</p>",
        "id": 384255596,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1691844568
    }
]