[
    {
        "content": "<p>Is there any way to rewrite top level term strings, e.g. in a similar way to how attributes can be used to rewrite theorems?<br>\nI'd like to have something like:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"s\">\"(Î»x. snd x) (''a'',0)\"</span><span class=\"o\">[</span><span class=\"n\">simplified</span><span class=\"o\">]</span> <span class=\"c\">(*becomes the term \"0\"*)</span>\n<span class=\"s\">\"[1,0,1,0,0,1]\"</span><span class=\"o\">[</span><span class=\"n\">drop_zero</span><span class=\"o\">]</span><span class=\"c\">(*becomes the term \"[1,1,1]\"*)</span>\n</code></pre></div>\n<p>These steps can be easily done with ML functions, but I don't know how to apply these to top level terms.</p>\n<p>Background: I'm currently working on automation techniques based on Eisbach methods. Some of these methods take a user defined term string, which can for example be used as a pattern by a method that applies the frame rule of separation logic to all subterms that match the pattern. For this it would be quite handy (and for some ideas even necessary) to rewrite the term inputs in a specific way. I suspect the best way to do this would be with a custom <code>parse_translation</code>, yet I'd prefer a less \"hacky\" solution.</p>",
        "id": 275099029,
        "sender_full_name": "Florian Sextl",
        "timestamp": 1647094443
    }
]