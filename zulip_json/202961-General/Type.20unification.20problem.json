[
    {
        "content": "<p>I get this type unification problem:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">Operator</span><span class=\"o\">:</span><span class=\"w\">  </span><span class=\"o\">(</span><span class=\"n\">∘</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">CONSTRUCTION.rtf</span><span class=\"w\"> </span><span class=\"o\">::</span>\n<span class=\"w\">  </span><span class=\"o\">(</span><span class=\"n n-Type\">'a</span><span class=\"o\">::</span><span class=\"n\">type</span><span class=\"w\"> </span><span class=\"n\">M</span><span class=\"w\"> </span><span class=\"n\">N</span><span class=\"w\"> </span><span class=\"n\">M</span><span class=\"w\"> </span><span class=\"n\">⇒</span><span class=\"w\"> </span><span class=\"o\">??</span><span class=\"n n-Type\">'a</span><span class=\"o\">::</span><span class=\"n\">type</span><span class=\"w\"> </span><span class=\"n\">CONSTRUCTION.M</span><span class=\"w\"> </span><span class=\"n\">CONSTRUCTION.N</span><span class=\"w\"> </span><span class=\"n\">CONSTRUCTION.M</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"n\">⇒</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"o\">::</span><span class=\"n\">type</span><span class=\"w\"> </span><span class=\"n\">M</span><span class=\"w\"> </span><span class=\"n\">N</span><span class=\"w\"> </span><span class=\"n\">M</span><span class=\"w\"> </span><span class=\"n\">⇒</span><span class=\"w\"> </span><span class=\"o\">??</span><span class=\"n n-Type\">'a</span><span class=\"o\">::</span><span class=\"n\">type</span><span class=\"w\"> </span><span class=\"n\">CONSTRUCTION.N</span><span class=\"w\"> </span><span class=\"n\">CONSTRUCTION.M</span>\n<span class=\"n\">Operand</span><span class=\"o\">:</span><span class=\"w\">   </span><span class=\"n\">expr</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"o\">::</span><span class=\"n\">type</span><span class=\"w\"> </span><span class=\"n\">M</span><span class=\"w\"> </span><span class=\"n\">N</span><span class=\"w\"> </span><span class=\"n\">M</span><span class=\"w\"> </span><span class=\"n\">⇒</span><span class=\"w\"> </span><span class=\"n n-Type\">'b</span><span class=\"o\">::</span><span class=\"n\">type</span><span class=\"w\"> </span><span class=\"n\">M</span><span class=\"w\"> </span><span class=\"n\">N</span><span class=\"w\"> </span><span class=\"n\">M</span>\n</code></pre></div>\n<p>I wonder why ??'a in the Operator type cannot be unified with 'b in the Operand type. Isn't ??'a a schematic type variable that could be unified with 'b?</p>",
        "id": 427769046,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1710866960
    },
    {
        "content": "<p>Given the error message, I suspect that <code>CONSTRUCTION.M</code> and <code>M</code> are distinct</p>",
        "id": 427769504,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1710867103
    },
    {
        "content": "<p>By definition, they are equal, and so are</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">CONSTRUCTION.N</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">N</span>\n</code></pre></div>",
        "id": 427769667,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1710867156
    },
    {
        "content": "<p>Tthe error message is mixing both and <code>type_synonym</code> is introducing a synonym that is expanded in the error message. So how are you doing the \"by definition they are equal\"?</p>",
        "id": 427770036,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1710867274
    }
]