[
    {
        "content": "<p>I have a concern regarding our current main probability formalisation in the library, and want to check I'm not missing something obvious.  Say we have a set of events <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> and event $A$. And we want to show a certain level of independence (which we should be able to based on other assumptions): </p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"w\"> </span><span class=\"n\">prob</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"n\">∩</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">⋂</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"o\">))</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">prob</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"n\">*</span><span class=\"w\"> </span><span class=\"n\">prob</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">⋂T</span><span class=\"o\">)</span><span class=\"s\">\"</span>\n</code></pre></div>\n<p>But this  doesn't work for the base case where <code>T = {}</code> as <code>(⋂{}) = UNIV</code> and in our formalisation <code> prob UNIV = 0 </code> unless you can prove that UNIV is a subset or equal to the space which is often not the case (as the \"space\" definition is not necessarily the same as UNIV with how we go about setting up probability spaces up typically in Isabelle currently). On paper,  however, UNIV is typically considered the space so this fact does clearly hold (as P(U) = 1). This seems to pose a rather notable problem that I'm currently getting around by adding in what should be unnecessary assumptions and using base cases of sets of size 1. As far I can see it does not appear to be a problem in other probability formalisations I've seen in other proof assistants. I'd be curious if anyone has any thoughts as to why the formalisation works this way currently/how best to work with it/if something needs to be changed?</p>",
        "id": 341855965,
        "sender_full_name": "Chelsea Edmonds",
        "timestamp": 1678813381
    },
    {
        "content": "<p>That does look like an issue. I haven't worked with this library in a while – is <code>T = {}</code> an important case? It does seem that me that this is kind of a boring case that one can simply work around.</p>\n<p>But yes, it would probably have been better to add an additional <code>∩ space M</code>. Perhaps we still should.</p>",
        "id": 345349490,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1680083823
    }
]