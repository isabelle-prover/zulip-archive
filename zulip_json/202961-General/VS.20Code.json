[
    {
        "content": "<p>In a nutshell, does someone know the current state of using Isabelle with VS Code? Is the setup easy? Is it usable in practice? Would I need to use <a href=\"https://marketplace.visualstudio.com/items?itemName=makarius.isabelle\" target=\"_blank\" title=\"https://marketplace.visualstudio.com/items?itemName=makarius.isabelle\">this</a> or <a href=\"https://marketplace.visualstudio.com/items?itemName=makarius.Isabelle2019\" target=\"_blank\" title=\"https://marketplace.visualstudio.com/items?itemName=makarius.Isabelle2019\">this</a> plugin for the latest Isabelle release? etc.</p>",
        "id": 172118691,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1564572600
    },
    {
        "content": "<p>So... regarding the plugins, the first should be for the dev version, and the second is for Isabelle2019</p>",
        "id": 172123377,
        "sender_full_name": "Simon Wimmer",
        "timestamp": 1564577191
    },
    {
        "content": "<p>I've used it for a few months about a year ago. In vanilla state is not very practical to use.<br>\nBut if you do a few customizations (specifically if you setup your own abbreviations), one can be productive with it.<br>\nSee <a href=\"https://github.com/m-fleury/isabelle-snippets\" target=\"_blank\" title=\"https://github.com/m-fleury/isabelle-snippets\">https://github.com/m-fleury/isabelle-snippets</a><br>\nHowever, it's clearly not as comfortable as Isabelle/jEdit at this point.</p>",
        "id": 172123699,
        "sender_full_name": "Simon Wimmer",
        "timestamp": 1564577422
    },
    {
        "content": "<p>Some specific problems that come to mind:<br>\n- It relies on <a href=\"https://marketplace.visualstudio.com/items?itemName=siegebell.prettify-symbols-mode\" target=\"_blank\" title=\"https://marketplace.visualstudio.com/items?itemName=siegebell.prettify-symbols-mode\">https://marketplace.visualstudio.com/items?itemName=siegebell.prettify-symbols-mode</a>, which has annoying bugs<br>\n- State output does not have highlighting<br>\n- Panels for e.g. search and sledgehammer do not exist<br>\n- No clickable code templates<br>\n- Cursor positions are not tracked as precisely as in jEdit, which can be annoying and sometimes run you in performance problems</p>",
        "id": 172123982,
        "sender_full_name": "Simon Wimmer",
        "timestamp": 1564577623
    },
    {
        "content": "<p>Note that all this info is from my experience from a year ago. The best person to answer this would be Mathias Fleury because to my knowledge he's the only real power user of it.</p>",
        "id": 172124075,
        "sender_full_name": "Simon Wimmer",
        "timestamp": 1564577674
    },
    {
        "content": "<p>Alright, that's a good starting point - thanks! :)</p>",
        "id": 172126817,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1564579533
    },
    {
        "content": "<p>I have actually stopped using VSCode (in favour of emacs), because of prettify-symbols-mode that is unmaintained and a huge hack (at least, this was the case last time I checked). I had developed a version of prettify-symbols-mode that fixed some of the performance problems, however.</p>",
        "id": 172130992,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564582520
    },
    {
        "content": "<p>So what are you using for Isabelle now then? Presumably not emacs?</p>",
        "id": 172131035,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1564582551
    },
    {
        "content": "<p>emacs + LSP</p>",
        "id": 172131210,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564582681
    },
    {
        "content": "<p>It has the same limitations as the VSCode stuff (in particular, no colours in the output panel). But it does not crash twice a day</p>",
        "id": 172131331,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564582751
    },
    {
        "content": "<p>Interesting, I didn't know that that works.</p>",
        "id": 172131454,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1564582825
    },
    {
        "content": "<p>The last time I used the VSCode integration I found it absolutely unusable, but that was quite some time ago (and before your integration efforts, I think)</p>",
        "id": 172131480,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1564582848
    },
    {
        "content": "<p>I still wistfully remember ProofGeneral. I was probably one of the last people who still used it even when it became more and more broken.</p>",
        "id": 172131561,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1564582912
    },
    {
        "content": "<p>I have strange issues with jEdit to the point that it crashes even when I prepared exercises for my version of the concrete semantics course</p>",
        "id": 172131861,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564583131
    },
    {
        "content": "<p>Odd. What kinds of crashes? And what OS?</p>",
        "id": 172132011,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1564583200
    },
    {
        "content": "<p>Both Linux (archlinux) and macOS</p>",
        "id": 172132194,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564583314
    },
    {
        "content": "<p>jEdit becomes completely unresponsive.</p>",
        "id": 172132235,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564583344
    },
    {
        "content": "<p>Sometimes typing one character takes 20s  to be registered</p>",
        "id": 172132279,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564583376
    },
    {
        "content": "<p>It happens to me all the time too. Both the being total unresponsive and the getting really slow thing. I use Linux.</p>",
        "id": 172132399,
        "sender_full_name": "Hanna Lachnitt",
        "timestamp": 1564583438
    },
    {
        "content": "<p>I believe it is a problem in the GC of polyml, because only one thread is running.</p>",
        "id": 172132435,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564583466
    },
    {
        "content": "<p>calling sledgehammer makes the problem more likely to happen</p>",
        "id": 172132541,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564583538
    },
    {
        "content": "<p>Now to be clear, there is no reason that this would be better with Isabelle/VSCode or emacs. I find it better, but I might just call sledgehammer less often</p>",
        "id": 172132651,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564583625
    },
    {
        "content": "<p>How much memory do you have?</p>",
        "id": 172133362,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1564584046
    },
    {
        "content": "<p>I very occasionally experience jEdit to be a bit unresponsive, but that usually happens when I leave it running for an extremely long time or load a very large number of theories without using a session image.</p>",
        "id": 172133422,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1564584103
    },
    {
        "content": "<p>And I have 16 GB on my laptop and 32 GB on my desktop.</p>",
        "id": 172133505,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1564584142
    },
    {
        "content": "<p>Same RAM.</p>",
        "id": 172133757,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564584339
    },
    {
        "content": "<p>My theories are huge (Peter Lammich style of theories), and I have one session that takes 30 minutes to build and cannot be split in something smaller that would be meaningful.</p>",
        "id": 172133985,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564584489
    },
    {
        "content": "<p>That might explain it. :D</p>",
        "id": 172133998,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1564584502
    },
    {
        "content": "<p>I also use sledgehammer very rarely (although I cannot see why sledgehammer would cause such huge memory leaks)</p>",
        "id": 172134028,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1564584532
    },
    {
        "content": "<p>But my problem for the concrete semantics happened while importing only theories from HOL-IMP</p>",
        "id": 172134036,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564584541
    },
    {
        "content": "<p>Sledgehammer creates a lot of terms...</p>",
        "id": 172134064,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564584569
    },
    {
        "content": "<p>I switched to a server recently (750GB RAM, 32 cores). Very smooth experience. No need to restart ever morning and wait for 10 minutes. Very nice experience.</p>",
        "id": 172134250,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564584712
    },
    {
        "content": "<blockquote>\n<p>750GB RAM, 32 cores. Very smooth experience. </p>\n</blockquote>\n<p>\"Minimum requirements\" <span aria-label=\"computer\" class=\"emoji emoji-1f4bb\" role=\"img\" title=\"computer\">:computer:</span></p>",
        "id": 172135670,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1564585615
    },
    {
        "content": "<p>Don't give Makarius any ideas.</p>",
        "id": 172136208,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1564585974
    },
    {
        "content": "<p>I'm currently waiting for AMD to get their act together and finally deliver those juicy 16 cores in the 3900X so I can upgrade my machine at home.</p>",
        "id": 172136252,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1564586010
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>750GB RAM, 32 cores. Very smooth experience. </p>\n</blockquote>\n<p>\"Minimum requirements\" <span aria-label=\"computer\" class=\"emoji emoji-1f4bb\" role=\"img\" title=\"computer\">:computer:</span></p>\n</blockquote>\n<p>Works on my machine</p>",
        "id": 172136342,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1564586056
    },
    {
        "content": "<p>JEdit does not provide a smooth experience with the same machine, but this is due to X-forwarding.</p>",
        "id": 172137911,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564587221
    },
    {
        "content": "<blockquote>\n<p>And I have 16 GB on my laptop and 32 GB on my desktop.</p>\n</blockquote>\n<p>16 GB is certainly not enough. After a few days on my machine, it somehow occupies more than 21GB of memory.</p>\n<p>Mohammad</p>",
        "id": 172141717,
        "sender_full_name": "Mohammad Abdulaziz",
        "timestamp": 1564590209
    },
    {
        "content": "<p>Polyml uses as much memory as possible (I have seen it using &gt;60GB on the server)</p>",
        "id": 172145310,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564593102
    },
    {
        "content": "<p>Yeah, how much memory it \"occupies\" doesn't really tell you all that much. The air in an air-tight container also occupies the entire container, no matter how big the container is. ;)</p>",
        "id": 172197977,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1564644361
    },
    {
        "content": "<p>It's still surprising to me that so many people seem to have such significant problems with jEdit.<br>\nI've been a Mac user for the last 4 years and while in the beginning, I encountered these problems very frequently, things have improved for me over the last few versions. My machines were also never extremely powerful (2 cores and 8 gigs, now 4 cores and 16 gigs).</p>\n<p>What got better, in particular, was the perceived amount of memory leaking on the jEdit side. So I think Mathias' analysis is right that nowadays problems are mainly on the Poly side. I still recommend giving both ML, and Java sufficient amounts of initial memory. The defaults are still rather low (I think). Also, it helps to put as many things in the session image as possible.</p>",
        "id": 172294853,
        "sender_full_name": "Simon Wimmer",
        "timestamp": 1564737581
    },
    {
        "content": "<p>Sad to here you also had to give up on VS Code Mathias.</p>",
        "id": 172294907,
        "sender_full_name": "Simon Wimmer",
        "timestamp": 1564737613
    },
    {
        "content": "<p>I think for many people (myself included) the problem with jEdit is not necessarily its stability, but rather that it is a poor text editor.</p>",
        "id": 172307475,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1564751971
    },
    {
        "content": "<p>Let me expand a bit on the problem of VSCode. There are two main problems:<br>\n1. Understanding the actual PIDE code.<br>\n2. Printing symbols.</p>",
        "id": 172308868,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564753026
    },
    {
        "content": "<p>Issue 1 is nearly impossible to solve. I now basically understand the LSP interface, but it relies on so many levels of PIDE and Isabelle internals, that it is impossible to understand what is happening how and where.</p>",
        "id": 172309030,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564753159
    },
    {
        "content": "<p>Issue 2 is the most critical one. There are two solutions for it:<br>\nA. The jEdit way: the file is stored twice: once as it is one the hard drive and once with the nice utf8 characters. Only the latter  is shown. This explains why pasted symbols (e.g., \\forall) are not replaced: the paste happens in the wrong buffer. This mechanism is extremely intrusive and requires patches over the original editor.<br>\nB. The Other way: replace the symbols while printing them. This is for example done for ligatures, except that the length is kept (“==“ will be replaced by a longer equal of length 2 characters). This mechanism is not sufficient for Isabelle (the forall symbol and \\forall have a very different length). However, some editors provide a way to this without patching them.</p>",
        "id": 172309691,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564753616
    },
    {
        "content": "<p>In VSCode, prettify-symbols-Mode does the following: it hides the symbol (e.g., \\forall) and prints instead the symbol. This requires to capture ever call to left and right arrow to make sure, the user does not end in the middle of an invisible symbol. Hiding symbols is a hack and capturing the arrow symbols is too slow sometimes.</p>",
        "id": 172309928,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564753791
    },
    {
        "content": "<p>Naive question: How horrible would it be to change Isabelle such that UTF8 symbols like ∀, ヨ. etc. are natively supported in the source files?</p>",
        "id": 172310204,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1564753991
    },
    {
        "content": "<p>Implementing A in VSCode is not easy (this whole thread <a href=\"https://github.com/Microsoft/vscode/issues/2402#issuecomment-230427921\" target=\"_blank\" title=\"https://github.com/Microsoft/vscode/issues/2402#issuecomment-230427921\">https://github.com/Microsoft/vscode/issues/2402#issuecomment-230427921</a> talks about solving the problem) and requires more time than I want to spend on it.</p>",
        "id": 172310266,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564754032
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"233187\">@Simon Wimmer</span> AFAIK, the only problem about more theory is that the PIDE part is supposedly asynchronous and therefore should never slow down jEdit.</p>",
        "id": 172310397,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564754121
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"233154\">@Kevin Kappelmann</span>  actually it already works, except that “Isabelle build” does not support it. It took me forever to debug that issue.</p>",
        "id": 172310487,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564754182
    },
    {
        "content": "<p>(Just imagine: jEdit works and prints the right thing, but Isabelle build mysteriously fails...)</p>",
        "id": 172310548,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564754228
    },
    {
        "content": "<p>Oh, so wouldn't the obvious thing then be to make Isabelle build work with UTF-8 symbols?</p>",
        "id": 172310608,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1564754281
    },
    {
        "content": "<p>I have never tried, but I guess that it would work with the “pide” Option of Isabelle build (I don’t remember how it is called)</p>",
        "id": 172310805,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564754411
    },
    {
        "content": "<p>I don’t want to have a strange version of Isabelle (as a reviewer, would you trust that?) and Makarius does not believe in utf8 for files</p>",
        "id": 172310977,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564754546
    },
    {
        "content": "<blockquote>\n<p>I don’t want to have a strange version of Isabelle (as a reviewer, would you trust that?) and Makarius does not believe in utf8 for files</p>\n</blockquote>\n<p>Uff, I mean, just have a look at, for example, <a href=\"https://competition.isabelle.systems/competitions/contest/11/tasks/1/\" target=\"_blank\" title=\"https://competition.isabelle.systems/competitions/contest/11/tasks/1/\">this</a> and compare the isabelle and lean version. so much nicer with utf8; no weird text transformations need to be done by your editor.</p>",
        "id": 172311156,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1564754706
    },
    {
        "content": "<p>I agree. No need to convince me ;) But I don’t want to fight for including that in Isabelle.</p>",
        "id": 172311252,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564754783
    },
    {
        "content": "<p>haha, just dropping it here; maybe some people read it and eventually, it's gonna happen <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>",
        "id": 172311320,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1564754840
    },
    {
        "content": "<p>But actually I could try to make a git hook that replaces all the utf8 when committing and replaces them back when pulling.</p>",
        "id": 172312046,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564755390
    },
    {
        "content": "<p>But basically, I think it is faster to wait for Makarius to retire from Isabelle that convincing him of anything. Except that then the PIDE stuff is dead</p>",
        "id": 172312142,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1564755474
    },
    {
        "content": "<p>I have no idea how LSP works, but would it not be possible to just have a hook that replaces all Isabelle symbols with UTF-8 on loading the file and the other way round upon saving?</p>",
        "id": 172513161,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1565018998
    },
    {
        "content": "<p>(Sorry for the late answer. I am on vacation)<br>\nThat should be handled mostly by the editor, not so much by the LSP protocol. But that could work.</p>\n<p>I see a few drawbacks: a crash of the editor leaves the file in UTF–8 (not so nice); it becomes impossible to use git within the editor; and it will to very fun to debug (saving in LSP can be interesting and weird).</p>\n<p>But I am not sure that I will ever implement it. If there are volunteers out there that understand JavaScript/Typescript and VSCode...</p>",
        "id": 172568529,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1565079239
    },
    {
        "content": "<p>This also has the drawback that one needs to implement this for each editor. Ideally, we shouldn't force anyone to use a specific text editor.</p>",
        "id": 172583531,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1565094743
    },
    {
        "content": "<p>The LSP needs several extensions to work with Isabelle anyway. Work per editor is required anyway (e.g., syntax highlighting is very different from programming)</p>",
        "id": 172589780,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1565099328
    },
    {
        "content": "<p>Adding my vote: I'm waiting for the day UTF8 finally comes to Isabelle too. Having been just recently introduced to Agda, I think these anachronistic features of Isabelle could contribute to it eventually getting left in the dust.</p>",
        "id": 172973067,
        "sender_full_name": "Josh Chen",
        "timestamp": 1565537831
    },
    {
        "content": "<p>I tried to install the VSCode extension (I am using Ubuntu), but opening the state panel returns an exception in the output console:</p>\n<div class=\"codehilite\"><pre><span></span>*** Consumer thread failure: <span class=\"s2\">&quot;Session.dispatcher&quot;</span>\n*** Consumer failed: <span class=\"s2\">&quot;isabelle.vscode.State_Panel&quot;</span>\n*** java.util.NoSuchElementException: key not found: IsabelleDejaVuSans.ttf\n</pre></div>\n\n\n<p>I installed the Isabelle Deja Vu Sans font on my system (I can select it in other programs). Any idea how to fix this? Do I need to add some additional settings in VSCode?</p>",
        "id": 176104265,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1568902946
    },
    {
        "content": "<p>Does the font show up when executing <code>fc-list | grep IsabelleDejaVuSans.ttf</code>?</p>",
        "id": 176104663,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1568903177
    },
    {
        "content": "<p>yep <a href=\"/user_uploads/14278/Dl9l8AdRRPCkJrK26Ugr7hoA/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/Dl9l8AdRRPCkJrK26Ugr7hoA/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/14278/Dl9l8AdRRPCkJrK26Ugr7hoA/pasted_image.png\"></a></div>",
        "id": 176104727,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1568903231
    },
    {
        "content": "<p>There is a bullet point in \"Known limitations\" of the isabelle VSCode plugin:</p>\n<blockquote>\n<p>Lack of specific support for the Isabelle fonts: these need to be manually installed on the system and configured for VSCode (see also $ISABELLE_FONTS within the Isabelle environment).</p>\n<p>Note: As the Isabelle fonts continue to evolve, installed versions need to be updated according to each new Isabelle version.</p>\n</blockquote>\n<p>But it does not mention how to configure it for VSCode <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 176104878,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1568903336
    },
    {
        "content": "<p>If I add <code>\"editor.fontFamily\": \"'Isabelle DejaVu Sans'\"</code> to my settings, VSCode is even picking up the font, but the state panel still errors</p>",
        "id": 176105504,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1568903737
    },
    {
        "content": "<p>that looks like the font problem Lars talked about on the mailing-list</p>",
        "id": 176168161,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1568960636
    },
    {
        "content": "<p>Ah no sorry (<a href=\"https://github.com/AdoptOpenJDK/openjdk-build/issues/693\" target=\"_blank\" title=\"https://github.com/AdoptOpenJDK/openjdk-build/issues/693\">https://github.com/AdoptOpenJDK/openjdk-build/issues/693</a> was the error on the java side)</p>",
        "id": 176168290,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1568960780
    },
    {
        "content": "<p>FYI Makarius patched that issue - but it seems that there are some more issues showing up now. See <a href=\"https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2019-September/msg00063.html\" target=\"_blank\" title=\"https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2019-September/msg00063.html\">this e-mail here</a></p>",
        "id": 176323672,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1569181465
    }
]