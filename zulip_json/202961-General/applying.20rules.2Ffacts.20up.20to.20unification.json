[
    {
        "content": "<p>Hey, is there some way to apply a rule/fact such that terms not matching by unification will be spit out as a new subgoal? For example, consider this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">definition</span> <span class=\"s\">&quot;myProp s ≡ s = {}&quot;</span>\n\n<span class=\"c\">(* some proof *)</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">myProof</span><span class=\"o\">:</span> <span class=\"s\">&quot;myProp {}&quot;</span>\n  <span class=\"k\">unfolding</span> <span class=\"n\">myProp_def</span> <span class=\"k\">by</span> <span class=\"n\">safe</span>\n\n<span class=\"c\">(* some very similar proof that only needs to rewrite {} ∪ {} to {} *)</span>\n<span class=\"c\">(* this is the best I could come up with *)</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">myProof&#39;</span><span class=\"o\">:</span> <span class=\"s\">&quot;myProp ({} ∪ {})&quot;</span>\n<span class=\"k\">proof</span> <span class=\"o\">-</span>\n  <span class=\"k\">have</span> <span class=\"n\">1</span><span class=\"o\">:</span> <span class=\"s\">&quot;{} ∪ {} = {}&quot;</span> <span class=\"k\">by</span> <span class=\"n\">safe</span>\n  <span class=\"k\">show</span> <span class=\"o\">?</span><span class=\"n\">thesis</span> <span class=\"k\">by</span> <span class=\"o\">(</span><span class=\"n\">subst</span> <span class=\"n\">1</span><span class=\"o\">,</span> <span class=\"n\">fact</span> <span class=\"n\">myProof</span><span class=\"o\">)</span>\n<span class=\"k\">qed</span>\n\n<span class=\"c\">(* The next thing is what I would like to have *)</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">myProof&#39;&#39;</span><span class=\"o\">:</span> <span class=\"s\">&quot;myProp ({} ∪ {})&quot;</span>\n<span class=\"k\">proof</span> <span class=\"o\">(</span><span class=\"n\">fact</span> <span class=\"n\">myProof</span><span class=\"o\">)</span>\n  <span class=\"k\">show</span> <span class=\"s\">&quot;{} ∪ {} = {}&quot;</span> <span class=\"k\">by</span> <span class=\"n\">safe</span>\n<span class=\"k\">qed</span>\n</pre></div>",
        "id": 190975113,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1584535948
    },
    {
        "content": "<p>I'm not aware of such a method, which I think generally runs into the usual problem of multiple possible unifiers.<br>\nBut if you're happy with a basic heuristic, try this: <a href=\"user_uploads/14278/YSJ4EtPdP10sgwk0qiVjs6nG/Unify.thy\" target=\"_blank\" title=\"user_uploads/14278/YSJ4EtPdP10sgwk0qiVjs6nG/Unify.thy\">Unify.thy</a></p>\n<p>I hacked it together as an exercise and  I'll probably need something like it soon myself, so I'd appreciate knowing if you find places where it breaks.</p>",
        "id": 191195725,
        "sender_full_name": "Josh Chen",
        "timestamp": 1584668714
    },
    {
        "content": "<p>Cool thanks! I'll give it a go on the actual example leading to that question later</p>",
        "id": 191218363,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1584696729
    },
    {
        "content": "<p>(deleted, accidental post)</p>",
        "id": 191468187,
        "sender_full_name": "Josh Chen",
        "timestamp": 1584968083
    },
    {
        "content": "<p>if anyone is curious, Josh and I applied above linked tactic to the problem I was facing, but it needs more tuning</p>",
        "id": 191475277,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1584971528
    }
]