[
    {
        "content": "<p>What are the differences between tagging an unconditional equality fact <code>A = B</code> with <code>simp</code> or <code>intro</code>? I get different behaviours when trying to prove another lemma based on whether I tag such lemmas with <code>simp</code> or <code>intro</code> (the latter works, the former results in a timeout).</p>",
        "id": 203833995,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1594733994
    },
    {
        "content": "<p>Is <code>A</code> a subterm of <code>B</code>?</p>",
        "id": 203834872,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1594734512
    },
    {
        "content": "<p>Nope: <code>powerset {} = {{}}\"</code></p>",
        "id": 203835074,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1594734617
    },
    {
        "content": "<p>I mean, putting the non-termination issue of mine aside: all of the following should be <code>simp</code> lemmas, no?</p>\n<ol>\n<li><code>{} ⊆ A</code></li>\n<li><code>powerset {} = {{}}</code></li>\n<li><code>{x} ≠ x</code></li>\n<li><code>A ∈ powerset A</code></li>\n</ol>\n<p>etc. Or is there some reason to tag them as <code>intro</code> instead?</p>",
        "id": 203835594,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1594734898
    },
    {
        "content": "<p>The third one is definitely not a good intro lemma since it is equivalent to <code>... ==&gt; False</code>.</p>",
        "id": 203835743,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1594734964
    },
    {
        "content": "<p>Therefore, it would always be applied if the current subgoal is <code>False</code>.</p>",
        "id": 203835866,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1594735026
    },
    {
        "content": "<p><del>Are you sure? <code>Not</code> is not an abbreviation</del><br>\nNevermind, I thought you said <code>simp</code> lemma</p>",
        "id": 203835970,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1594735074
    },
    {
        "content": "<p>My suspicion is that the rule <code>powerset {} = {{}}</code> is not the problem. Adding the rule just exposes that there is already a problematic rule in the simpset.</p>",
        "id": 203836513,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1594735298
    },
    {
        "content": "<p>What does the goal look like? If you have a goal that causes the simplifier to loop when you label the lemma with simp, then that label is no good. Maybe you have a recursive definition that automatically unfolds in a way that loops when \"powerset {} ={{}}\" is simp.</p>",
        "id": 203836791,
        "sender_full_name": "Mohammad Abdulaziz",
        "timestamp": 1594735432
    },
    {
        "content": "<p>I do not quite get why it was timing out, but I added a more easier to reason about rule that solves my problem <code>[iff]: \"x ∈ powerset {} ⟷ x = {}\"</code></p>",
        "id": 203842412,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1594738262
    },
    {
        "content": "<p>Julian likes these <code>[iff]</code> declarations a lot I think. Personally, I am always a bit suspicious about them and never use them :D But anyway it seems very odd to me that you had to do this and the simp lemma does not do it for you...</p>",
        "id": 203959343,
        "sender_full_name": "Simon Wimmer",
        "timestamp": 1594821921
    },
    {
        "content": "<p>Yeah they can get you into trouble really quickly as <a href=\"https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2010-September/msg00059.html\">they add intro!</a> tags.</p>",
        "id": 203960152,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1594822345
    }
]