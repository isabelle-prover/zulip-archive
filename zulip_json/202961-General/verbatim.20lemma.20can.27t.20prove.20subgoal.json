[
    {
        "content": "<p>Hi all,</p>\n<p>A bit curious but potentially due to scalability issues,<br>\nI copy-pasted a subgoal from a theorem into a lemma preceding that theorem and marked that lemma with sorry.<br>\nNow proving that subgoal for that theorem seems not viable for some reason, even if there's an identical lemma proven just before it.<br>\nsledgehammer is not able to find a proof, and I tried giving it hints such as <code>using subgoal_lemma</code> and still got no luck.<br>\nI was wondering why this happens and how to solve it? Did I make an error or it is a limitation of Isabelle? If the latter I guess the workaround would be to simplify that subgoal into smaller bits in that theorem and prove it directly there.</p>\n<p>Best wishes,<br>\nChengsong</p>\n<p>Attathed file: </p>\n<p><a href=\"/user_uploads/14278/kM-MylXpVy0v4_TUYv5ypn6X/Transposed.thy\">Transposed.thy</a><br>\n(<br>\nsee line marked with (<strong>Here</strong>)  (line 1871)<br>\n)</p>",
        "id": 399674354,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1698824439
    },
    {
        "content": "<p>This works:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"w\">         </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"n\">subgoal1_simplified_form;</span><span class=\"w\"> </span><span class=\"n\">assumption</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 399676913,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1698825739
    },
    {
        "content": "<p>Sledgehammer works for me with  <code>sledgehammer(add:subgoal1_simplified_form)</code></p>",
        "id": 399677034,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1698825805
    },
    {
        "content": "<p>I did not check what metis is doing, but it should be able to solve the goal</p>",
        "id": 399677143,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1698825848
    },
    {
        "content": "<p>but there could some let problems here</p>",
        "id": 399677292,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1698825926
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/202961-General/topic/verbatim.20lemma.20can't.20prove.20subgoal/near/399676913\">said</a>:</p>\n<blockquote>\n<p>This works:</p>\n<p><div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"w\">         </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"n\">subgoal1_simplified_form;</span><span class=\"w\"> </span><span class=\"n\">assumption</span><span class=\"o\">)</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Thank you! This works like a charm.<br>\nWhat does the command <code>assumption</code> mean?</p>",
        "id": 399678658,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1698826650
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/202961-General/topic/verbatim.20lemma.20can't.20prove.20subgoal/near/399677292\">said</a>:</p>\n<blockquote>\n<p>but there could some let problems here</p>\n</blockquote>\n<p>What is a let problem?</p>",
        "id": 399678684,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1698826666
    },
    {
        "content": "<p>assumption means to unify with one the assumptions in the goal</p>",
        "id": 399706692,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1698838206
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"241231\">Chengsong Tan</span> <a href=\"#narrow/stream/202961-General/topic/verbatim.20lemma.20can't.20prove.20subgoal/near/399678684\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/202961-General/topic/verbatim.20lemma.20can't.20prove.20subgoal/near/399677292\">said</a>:</p>\n<blockquote>\n<p>but there could some let problems here</p>\n</blockquote>\n<p>What is a let problem?</p>\n</blockquote>\n<p>I never remember if let is unfolded when passed to metis. This kind of things can make the term much bigger and much harder to recognize</p>",
        "id": 399706813,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1698838266
    }
]