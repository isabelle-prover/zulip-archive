[
    {
        "content": "<p>I am confused about the behaviour of <code>Unify.unifiers</code> in the following situation:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">ML</span><span class=\"err\">‹</span>\n  <span class=\"n\">val</span> <span class=\"n\">t</span> <span class=\"o\">=</span>\n    <span class=\"n\">Var</span> <span class=\"o\">((</span><span class=\"s\">\"v\"</span><span class=\"o\">,</span> <span class=\"n\">0</span><span class=\"o\">),</span> <span class=\"n\">TFree</span> <span class=\"o\">(</span><span class=\"s\">\"'a\"</span><span class=\"o\">,</span> <span class=\"o\">[])</span> <span class=\"o\">--</span><span class=\"err\">&gt;</span> <span class=\"n\">TFree</span> <span class=\"o\">(</span><span class=\"s\">\"'b\"</span><span class=\"o\">,</span> <span class=\"o\">[]))</span> <span class=\"err\">$</span>\n      <span class=\"n\">Var</span> <span class=\"o\">((</span><span class=\"s\">\"w\"</span><span class=\"o\">,</span> <span class=\"n\">0</span><span class=\"o\">),</span> <span class=\"n\">TFree</span> <span class=\"o\">(</span><span class=\"s\">\"'a\"</span><span class=\"o\">,</span> <span class=\"o\">[]))</span>\n  <span class=\"n\">val</span> <span class=\"n\">s</span> <span class=\"o\">=</span>\n    <span class=\"n\">Var</span> <span class=\"o\">((</span><span class=\"s\">\"x\"</span><span class=\"o\">,</span> <span class=\"n\">0</span><span class=\"o\">),</span> <span class=\"n\">TFree</span> <span class=\"o\">(</span><span class=\"s\">\"'a\"</span><span class=\"o\">,</span> <span class=\"o\">[])</span> <span class=\"o\">--</span><span class=\"err\">&gt;</span> <span class=\"n\">TFree</span> <span class=\"o\">(</span><span class=\"s\">\"'b\"</span><span class=\"o\">,</span> <span class=\"o\">[]))</span> <span class=\"err\">$</span>\n      <span class=\"n\">Var</span> <span class=\"o\">((</span><span class=\"s\">\"y\"</span><span class=\"o\">,</span> <span class=\"n\">0</span><span class=\"o\">),</span> <span class=\"n\">TFree</span> <span class=\"o\">(</span><span class=\"s\">\"'a\"</span><span class=\"o\">,</span> <span class=\"o\">[]))</span>\n  <span class=\"c\">(*returns empty environment and no unification error (unifying (t, s))*)</span>\n  <span class=\"n\">val</span> <span class=\"n\">env</span> <span class=\"o\">=</span>\n    <span class=\"n\">Unify.unifiers</span> <span class=\"o\">((</span><span class=\"n\">Context.the_generic_context</span> <span class=\"o\">()),</span> <span class=\"n\">Envir.init</span><span class=\"o\">,</span> <span class=\"o\">[(</span><span class=\"n\">t</span><span class=\"o\">,</span><span class=\"n\">s</span><span class=\"o\">)])</span> <span class=\"o\">|</span><span class=\"err\">&gt;</span> <span class=\"n\">Seq.hd</span> <span class=\"o\">|</span><span class=\"err\">&gt;</span> <span class=\"n\">fst</span>\n\n  <span class=\"c\">(*returns correct unifier for (t, s')*)</span>\n  <span class=\"n\">val</span> <span class=\"n\">s'</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"n\">Var</span> <span class=\"o\">((</span><span class=\"s\">\"x\"</span><span class=\"o\">,</span> <span class=\"n\">0</span><span class=\"o\">),</span> <span class=\"n\">TFree</span> <span class=\"o\">(</span><span class=\"s\">\"'b\"</span><span class=\"o\">,</span> <span class=\"o\">[])))</span>\n  <span class=\"n\">val</span> <span class=\"n\">env'</span> <span class=\"o\">=</span>\n    <span class=\"n\">Unify.unifiers</span> <span class=\"o\">((</span><span class=\"n\">Context.the_generic_context</span> <span class=\"o\">()),</span> <span class=\"n\">Envir.init</span><span class=\"o\">,</span> <span class=\"o\">[(</span><span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">s'</span><span class=\"o\">)])</span> <span class=\"o\">|</span><span class=\"err\">&gt;</span> <span class=\"n\">Seq.hd</span> <span class=\"o\">|</span><span class=\"err\">&gt;</span> <span class=\"n\">fst</span>\n<span class=\"err\">›</span>\n</code></pre></div>\n<p>how come that in the first case, an empty environment is returned?</p>",
        "id": 250775271,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1629986020
    },
    {
        "content": "<p>Nevermind - I misinterpreted the way <code>unifiers</code>works. I thought it returns a sequence of environments including instantiations for flex-flex pairs, but indeed it returns a sequence of environments including instantiations only for non-flex-flex cases and all remaining flex-flex instances in a separate list.</p>",
        "id": 251554965,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1630501891
    }
]