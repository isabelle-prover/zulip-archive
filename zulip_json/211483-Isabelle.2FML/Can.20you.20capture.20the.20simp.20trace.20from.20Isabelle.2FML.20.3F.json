[
    {
        "content": "<p>Hi, I am using <code>Goal.prove_common</code> to prove a goal with auto_tac and I would like to report which lemmas were used during simplifcation, I figured if I enabled <code>simp_trace</code> there might be a way to collect it and I could parse the info from there?</p>",
        "id": 498824265,
        "sender_full_name": "Andrea Vezzosi",
        "timestamp": 1739209601
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"620991\">@Andrea Vezzosi</span> ,</p>\n<p>I don't really know much about <code>simp_trace</code>.<br>\nBut the usual step would be something like </p>\n<ul>\n<li>1: check the ML source code of the command,</li>\n<li>2: find the relevant ML functions, and </li>\n<li>3: run them. </li>\n</ul>\n<p>I've done this loads of times over the past 10 years, and it's always been great fun! <br>\n<span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 499127023,
        "sender_full_name": "Yutaka Nagashima",
        "timestamp": 1739323060
    },
    {
        "content": "<p>Oh, sure! Btw the solution was to hijack the <code>tracing_fn</code> mutable reference that controls where <code>tracing</code> output goes.<br>\n<code>Unsynchronized.setmp Private_Output.tracing_fn &lt;fun writing input to ref&gt; &lt;do the proving, read trace from ref&gt; ()</code></p>",
        "id": 500427767,
        "sender_full_name": "Andrea Vezzosi",
        "timestamp": 1739892260
    },
    {
        "content": "<p>Stay safe from concurrency. <span aria-label=\"bird\" class=\"emoji emoji-1f426\" role=\"img\" title=\"bird\">:bird:</span></p>",
        "id": 501163308,
        "sender_full_name": "Yutaka Nagashima",
        "timestamp": 1740162606
    }
]