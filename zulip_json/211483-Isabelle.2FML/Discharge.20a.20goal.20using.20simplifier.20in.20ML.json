[
    {
        "content": "<p>Hi, I am trying to write a tactic that does the following:</p>\n<ol>\n<li>find an expression of some commutative monoid in a proof goal, call it <code>original</code></li>\n<li>compute a rearranged expression, call it <code>new</code></li>\n<li>replace <code>original</code> with <code>new</code>; since <code>original = new</code>, I suppose the simplifier can just prove it</li>\n<li>remove the premise <code>original = new</code> from the premises.</li>\n</ol>\n<p>so my question is, how do I achieve step 3 and 4? I asked previously so people say that the simplifier is complete in solving commutative monoid. A few pointers leading me to the right direction would be appreciated.</p>",
        "id": 298081835,
        "sender_full_name": "Jason Hu",
        "timestamp": 1662780560
    },
    {
        "content": "<p>Do you know either where in the goal <code>original</code> will appear or what <code>original</code> will be? Otherwise this will be really hard</p>",
        "id": 298113465,
        "sender_full_name": "Jan van Brügge",
        "timestamp": 1662804822
    },
    {
        "content": "<p>yes I know its type and it's in a fixed position (more or less). In general, finding <code>original</code> shouldn't be difficult and deriving <code>new</code> is dead easy</p>",
        "id": 298146915,
        "sender_full_name": "Jason Hu",
        "timestamp": 1662821831
    },
    {
        "content": "<p>or in a big picture, I want to replace the goal <code>P original</code> with <code>P new</code> without adding anything to the context</p>",
        "id": 298147095,
        "sender_full_name": "Jason Hu",
        "timestamp": 1662821895
    },
    {
        "content": "<p>You will have to create the term <code>original = new</code> and prove that separately. Then you can use <code>unfold_thms_tac</code> to replace all occurrences of <code>original</code> by <code>new</code>.</p>",
        "id": 298150211,
        "sender_full_name": "Jan van Brügge",
        "timestamp": 1662823661
    }
]