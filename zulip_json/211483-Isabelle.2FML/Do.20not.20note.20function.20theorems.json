[
    {
        "content": "<p>Is it possible to prevent <code>Function.add_function</code> from noting the theorems about the function? I define one that is purely internal and only want to give the user some higher level theorems, not what is generated. (ie the function is an implementation detail that should not leak)</p>",
        "id": 298810611,
        "sender_full_name": "Jan van Br√ºgge",
        "timestamp": 1663174553
    },
    {
        "content": "<p>I don't think you can completely hide it. I see this code in <code>bnf_gfp_grec_sugar</code></p>\n<div class=\"codehilite\" data-code-language=\"Standard ML\"><pre><span></span><code><span class=\"kr\">fun</span> <span class=\"nf\">add_function</span> <span class=\"n\">binding</span> <span class=\"n\">parsed_eq</span> <span class=\"n\">lthy</span> <span class=\"p\">=</span>\n  <span class=\"kr\">let</span>\n    <span class=\"kr\">fun</span> <span class=\"nf\">pat_completeness_auto</span> <span class=\"n\">ctxt</span> <span class=\"p\">=</span>\n      <span class=\"nn\">Pat_Completeness</span><span class=\"p\">.</span><span class=\"n\">pat_completeness_tac</span> <span class=\"n\">ctxt</span> <span class=\"mi\">1</span> <span class=\"n\">THEN</span> <span class=\"n\">auto_tac</span> <span class=\"n\">ctxt</span><span class=\"p\">;</span>\n\n    <span class=\"kr\">val</span> <span class=\"p\">(</span><span class=\"err\">{</span><span class=\"n\">defname</span><span class=\"p\">,</span> <span class=\"n\">pelims</span> <span class=\"n\">=</span> <span class=\"err\">[[</span><span class=\"n\">pelim</span><span class=\"err\">]]</span><span class=\"p\">,</span> <span class=\"n\">pinducts</span> <span class=\"n\">=</span> <span class=\"err\">[</span><span class=\"n\">pinduct</span><span class=\"err\">]</span><span class=\"p\">,</span> <span class=\"n\">psimps</span> <span class=\"n\">=</span> <span class=\"err\">[</span><span class=\"n\">psimp</span><span class=\"err\">]</span><span class=\"p\">,</span> <span class=\"err\">...}</span><span class=\"p\">,</span> <span class=\"n\">lthy'</span><span class=\"p\">)</span> <span class=\"nv\">=</span>\n      <span class=\"nn\">Function</span><span class=\"p\">.</span><span class=\"n\">add_function</span> <span class=\"p\">[(</span><span class=\"nn\">Binding</span><span class=\"p\">.</span><span class=\"n\">concealed</span> <span class=\"n\">binding</span><span class=\"p\">,</span> <span class=\"n\">NONE</span><span class=\"p\">,</span> <span class=\"n\">NoSyn</span><span class=\"p\">)]</span>\n        <span class=\"p\">[(((</span><span class=\"nn\">Binding</span><span class=\"p\">.</span><span class=\"n\">concealed</span> <span class=\"nn\">Binding</span><span class=\"p\">.</span><span class=\"n\">empty</span><span class=\"p\">,</span> <span class=\"p\">[]),</span> <span class=\"n\">parsed_eq</span><span class=\"p\">),</span> <span class=\"p\">[],</span> <span class=\"p\">[])]</span>\n        <span class=\"nn\">Function_Common</span><span class=\"p\">.</span><span class=\"n\">default_config</span> <span class=\"n\">pat_completeness_auto</span> <span class=\"n\">lthy</span><span class=\"p\">;</span>\n  <span class=\"kr\">in</span>\n    <span class=\"p\">((</span><span class=\"n\">defname</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">pelim</span><span class=\"p\">,</span> <span class=\"n\">pinduct</span><span class=\"p\">,</span> <span class=\"n\">psimp</span><span class=\"p\">)),</span> <span class=\"n\">lthy'</span><span class=\"p\">)</span>\n  <span class=\"kr\">end</span><span class=\"p\">;</span>\n</code></pre></div>\n<p>Making the bindings \"concealed\" should hide them from end users (e.g., via find_theorems) and from ATPs (via Sledgehammer). But I guess, if you know the function name you can still find its simps.</p>",
        "id": 299318061,
        "sender_full_name": "Dmitriy Traytel",
        "timestamp": 1663419353
    }
]