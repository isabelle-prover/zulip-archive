[
    {
        "content": "<p>I spent way too much time on this now. How does one get the full name off a binding? I tried <code>Local_Theory.full_name</code>, but not only does it prepend the theory I am working from, it also is not consistent:</p>\n<div class=\"codehilite\"><pre><span></span><code>local_setup ‹\n  fn lthy =&gt; let\n    val SOME deadid = BNF_Def.bnf_of lthy &quot;BNF_Composition.DEADID&quot;\n    val SOME sum = BNF_Def.bnf_of lthy &quot;Sum_Type.sum&quot;\n    val f = Local_Theory.full_name lthy (BNF_Def.name_of_bnf deadid)\n    val g = Local_Theory.full_name lthy (BNF_Def.name_of_bnf sum)\n    val _ = (writeln f; writeln g)\n  in lthy end\n›\n</code></pre></div>\n<p>This writes (<code>Composition</code> is the name of the theory the ML snippet is in):</p>\n<div class=\"codehilite\"><pre><span></span><code>Composition.DEADID\nComposition.Sum_Type.sum\n</code></pre></div>\n<p>I want:</p>\n<div class=\"codehilite\"><pre><span></span><code>BNF_Composition.DEADID\nSum_Type.sum\n</code></pre></div>\n<p>(The two bnfs are only examples, the actual code could get any BNF, so <code>name_of_bnf</code> it has to be)</p>",
        "id": 260180681,
        "sender_full_name": "Jan van Brügge",
        "timestamp": 1635965756
    },
    {
        "content": "<p>You should avoid having to do this. The more low-level variant of Local_Theory.full_name is Name_Space.full_name, but there are not many usages in HOL, which shows that this is not the canonical way to do things.</p>\n<p>Getting BNF_Composition.DEADID from the DEADID binding is not realistic: the theory name is not in the qualified path of the binding (Binding.path_of). The theory name is of course stored in the position (Binding.pos_of), but you certainly don't want to fish it from there. I think DEADID and ID will always need to be treated as special cases.</p>\n<p>For BNFs corresponding to proper types, you can get the type name from the type (T_of_bnf).</p>",
        "id": 260192603,
        "sender_full_name": "Dmitriy Traytel",
        "timestamp": 1635971060
    },
    {
        "content": "<p>ok, then i will special case the two</p>",
        "id": 260195035,
        "sender_full_name": "Jan van Brügge",
        "timestamp": 1635972247
    }
]