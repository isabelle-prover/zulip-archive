[
    {
        "content": "<p>Hi everyone,</p>\n<p>I have a file MY_TOOL.thy. I am trying to add a new variable $MY_TOOL_HOME that contains the directory of MY_TOOL without hardcoding it. </p>\n<p>I see two ways: </p>\n<ol>\n<li>I looked up how ISABELLE_HOME is handled:</li>\n</ol>\n<p><code>ISABELLE_HOME=\"$(cd \"$(dirname \"$0\")\"; cd \"$(pwd -P)/../..\"; pwd)\"</code></p>\n<p>is set in build_release.scala. I have not worked with scala before and am not sure how to connect it to my current theory. </p>\n<ol start=\"2\">\n<li>To have a separate settings file for my project folder such as .isabelle/etc/settings for my project and add the variable there (how do I do that dynamically?). I looked at getenv but am not completely sure how to access my new settings file. </li>\n</ol>\n<p>Can anyone explain to me what the best way is and how to get to my goal?</p>",
        "id": 397872149,
        "sender_full_name": "Hanna Lachnitt",
        "timestamp": 1697915719
    },
    {
        "content": "<p>Where are you planning to use the variable <code>$MY_TOOL_HOME</code>? In independent shell scripts?</p>",
        "id": 397873526,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1697917231
    },
    {
        "content": "<p>In the theory itself. As an argument to a command I wrote.</p>",
        "id": 397883166,
        "sender_full_name": "Hanna Lachnitt",
        "timestamp": 1697929506
    },
    {
        "content": "<p>In ML I can write <code>OS.FileSys.getDir()</code> to get the current directory (the one isabelle is started in) and I am sure that there is a way to get the one of the current file. But then, when I want to use the variable that contains that directory I would need to write a <code>keywords</code> for it which does not seem right for a path variable like this</p>",
        "id": 397883280,
        "sender_full_name": "Hanna Lachnitt",
        "timestamp": 1697929648
    },
    {
        "content": "<p>You could try passing ML code that retrieves the directory to the command that you wrote. The command can then evaluate the code to get the directory.</p>",
        "id": 397883370,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1697929774
    },
    {
        "content": "<p>Thanks, that sounds great! How do I do that? They way I know to do something like this is to define a new keyword </p>\n<p><code> keywords \"my_new_command\" :: diag</code></p>\n<p>and then do something like this:</p>\n<p><code>val _ =  Outer_Syntax.local_theory \\&lt;^command_keyword&gt;‹my_new_command›  ... </code></p>",
        "id": 397883564,
        "sender_full_name": "Hanna Lachnitt",
        "timestamp": 1697930000
    },
    {
        "content": "<p><del>I don't know if it is the best example but <span class=\"user-mention\" data-user-id=\"233154\">@Kevin Kappelmann</span> <a href=\"https://www.isa-afp.org/browser_info/current/AFP/ML_Unification/AFP/ML_Unification/Logger/logging_antiquotation.ML.html\">logger antiquotation</a> parses ML code and evaluates it to determine log levels.</del> looking at the <code>ML</code> command is easier.</p>",
        "id": 397883830,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1697930313
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"477368\">Hanna Lachnitt</span> <a href=\"#narrow/stream/211483-Isabelle.2FML/topic/New.20Environment.20Variable/near/397883564\">said</a>:</p>\n<blockquote>\n<p>Thanks, that sounds great! How do I do that? They way I know to do something like this is to define a new keyword </p>\n<p><code> keywords \"my_new_command\" :: diag</code></p>\n<p>and then do something like this:</p>\n<p><code>val _ =  Outer_Syntax.local_theory \\&lt;^command_keyword&gt;‹my_new_command›  ... </code></p>\n</blockquote>\n<p>The approach is the same. You just use <code>Parse.embedded</code>or <code>Parse.ML_source</code> to parse ML code and then other functions (not an expert there) to evaluate the code.</p>",
        "id": 397883942,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1697930473
    },
    {
        "content": "<p>Perhaps it is easier to look at the implementation of the <code>ML</code> command</p>",
        "id": 397883948,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1697930488
    },
    {
        "content": "<p>Thanks, I'll look into it! It's not super critical but it would be a nice feature for my tool</p>",
        "id": 397884037,
        "sender_full_name": "Hanna Lachnitt",
        "timestamp": 1697930604
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"477368\">Hanna Lachnitt</span> <a href=\"#narrow/stream/211483-Isabelle.2FML/topic/New.20Environment.20Variable/near/397883280\">said</a>:</p>\n<blockquote>\n<p>In ML I can write <code>OS.FileSys.getDir()</code> to get the current directory (the one isabelle is started in) and I am sure that there is a way to get the one of the current file. But then, when I want to use the variable that contains that directory I would need to write a <code>keywords</code> for it which does not seem right for a path variable like this</p>\n</blockquote>\n<p>Do you really need to pass the directory as an argument to the command or is it that you always pass the same argument (i.e. the directory of your tool) to the command anyway?<br>\nIn the latter case, just get rid of the argument and use ML to retrieve the directory.<br>\nIn the former, you can use <a href=\"https://www.isa-afp.org/browser_info/current/AFP/ML_Unification/AFP/ML_Unification/ML_Utils/ML_Attributes/ml_attribute.ML.html\">this</a> to evaluate parsed ML code as an attribute, and <a href=\"https://www.isa-afp.org/browser_info/current/AFP/ML_Unification/AFP/ML_Unification/ML_Utils/Parsing/parse_util.ML.html\">here, at <code>ML_int</code>,</a> you can see how one might use this attribute evaluation to obtain a primitive value from the parsed ML code. Beware: it is kind of a hack because it requires the invariant that the name of the ML structure that evaluates  your code won't be shadowed in the future (which you cannot guarantee in general). Only use this if you know what you are doing <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 398021813,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1698043918
    }
]