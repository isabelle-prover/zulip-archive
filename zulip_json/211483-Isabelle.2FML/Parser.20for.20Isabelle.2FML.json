[
    {
        "content": "<p>Hi all,</p>\n<p>I want to parse some Isabelle/ML files, is there any parser of Isabelle/ML? It seems that Isabelle/ML is a superset of Standard ML, and PolyML's parser cannot handle some features of Isabelle/ML.</p>",
        "id": 426242548,
        "sender_full_name": "Xiaokun Luan",
        "timestamp": 1710294204
    },
    {
        "content": "<p>This might be tricky due to the presence of antiquotations, which can run arbitrary ML code and depend on the Isabelle context in which they appear…</p>",
        "id": 426309259,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1710327211
    },
    {
        "content": "<p>The real question is why you would want that parsing of SML…</p>",
        "id": 426329351,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1710333938
    },
    {
        "content": "<p>What exactly would you like to do? If it's about ML arguments (as in <code>apply (tactic &lt;{TACTIC&gt;)</code>, where <code>{TACTIC}</code> is any ML expression of type <code>tactic</code>), one can do that</p>",
        "id": 436615038,
        "sender_full_name": "Hanno Becker",
        "timestamp": 1714624421
    },
    {
        "content": "<p>Thanks for your replies, and sorry for my late reply.<br>\nI noticed that many ML functions are changed during the version update of Isabelle, and I want to develop a tool to auto diff the Isabelle/ML source code to generate a list of changed ML functions/values, such as renamed, moved, deleted, or changes in the signature. (Maybe this could be complementary to those breaking changes in the release notes?)<br>\nMy current workaround is to write a simple parser using parser generator to handle part of the ML code. It can produce a summary of some breaking changes made to ML code, but I suppose that it can miss a lot of such changes because it cannot parse all ML code.</p>",
        "id": 440792088,
        "sender_full_name": "Xiaokun Luan",
        "timestamp": 1716794863
    },
    {
        "content": "<p>how do you define \"breaking changes\"? every rename is a breaking change if you are using the function</p>",
        "id": 440792449,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1716794992
    },
    {
        "content": "<p>Otherwise I would suggest the very stupid <code>git diff --word-diff -no-index isabelle2023 isabelle2024</code> to see what changed…</p>",
        "id": 440792586,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1716795027
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/211483-Isabelle.2FML/topic/Parser.20for.20Isabelle.2FML/near/440792586\">said</a>:</p>\n<blockquote>\n<p>Otherwise I would suggest the very stupid <code>git diff --word-diff -no-index isabelle2023 isabelle2024</code> to see what changed…</p>\n</blockquote>\n<p>I think at least rename, move, deletion, and change of signatures should be considered as breaking changes. What I want is more like generating a summary from the diff results, just  like those in the release notes, like Context.theory_name ~&gt; Context.theory_base_name. Of course we can do this manually, but it is always good to have some automation, right?</p>",
        "id": 440821367,
        "sender_full_name": "Xiaokun Luan",
        "timestamp": 1716804468
    },
    {
        "content": "<p>the more complicated question: is it an oversight that it is not documented. Or is it on purpose, because you are not supposed to use it?</p>",
        "id": 440881810,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1716825458
    },
    {
        "content": "<p>I understand that most users don't need to use ML functions in their formalization and proofs, so it is reasonable to not to document these things.</p>\n<p>However, based on my own experience and observation, there are some situations that dealing with Isabelle's ML functions is the only way we can take. I will provide two examples.<br>\n(1) There are more than 400 ML/sml files in AFP entries, thought maybe not all of them are using ML APIs, it is true that some people built their systems based on them, such as Proof_Strategy_Language, and Context.theory_name (what I mentioned before)  is actually used by some of them.<br>\n(2) The Scala library scala-isabelle (<a href=\"https://github.com/dominique-unruh/scala-isabelle\">https://github.com/dominique-unruh/scala-isabelle</a>) relies on ML APIs. In fact, because the API \"Mutex.mutex\" now has to be referenced as \"Thread.Mutex.mutex\", it does not work on Isabelle2024. <a href=\"https://github.com/dominique-unruh/qrhl-tool\">qrhl-tool</a> relies on this library, and some AI-based theorem proving systems also rely on this library to interact with Isabelle.</p>\n<p>I'm not asking to add these changes in any official documentation. I just want to have a little  automation for myself to save some efforts. I'm still relatively new to ML, so if there are some better ways to do this, I'm all ears.</p>",
        "id": 440968101,
        "sender_full_name": "Xiaokun Luan",
        "timestamp": 1716875293
    }
]