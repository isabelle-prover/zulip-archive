[
    {
        "content": "<p>I want to modify the datatype which is now defined as below.</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">datatype</span><span class=\"w\"> </span><span class=\"n\">assn</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Aemp</span><span class=\"w\">                                           </span><span class=\"c\">(*r Empty heap *)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Apointsto</span><span class=\"w\"> </span><span class=\"n\">exp</span><span class=\"w\"> </span><span class=\"n\">exp</span><span class=\"w\">    </span><span class=\"o\">(</span><span class=\"kp\">infixl</span><span class=\"w\"> </span><span class=\"s\">\"⟼\"</span><span class=\"w\"> </span><span class=\"n\">200</span><span class=\"o\">)</span><span class=\"w\">        </span><span class=\"c\">(*r Singleton heap *)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Astar</span><span class=\"w\"> </span><span class=\"n\">assn</span><span class=\"w\"> </span><span class=\"n\">assn</span><span class=\"w\">      </span><span class=\"o\">(</span><span class=\"kp\">infixl</span><span class=\"w\"> </span><span class=\"s\">\"**\"</span><span class=\"w\"> </span><span class=\"n\">100</span><span class=\"o\">)</span><span class=\"w\">         </span><span class=\"c\">(*r Separating conjunction *)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Awand</span><span class=\"w\"> </span><span class=\"n\">assn</span><span class=\"w\"> </span><span class=\"n\">assn</span><span class=\"w\">                                </span><span class=\"c\">(*r Separating implication *)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Apure</span><span class=\"w\"> </span><span class=\"n\">bexp</span><span class=\"w\">                                     </span><span class=\"c\">(*r Pure assertion *)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Aconj</span><span class=\"w\"> </span><span class=\"n\">assn</span><span class=\"w\"> </span><span class=\"n\">assn</span><span class=\"w\">                                </span><span class=\"c\">(*r Conjunction *)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Adisj</span><span class=\"w\"> </span><span class=\"n\">assn</span><span class=\"w\"> </span><span class=\"n\">assn</span><span class=\"w\">                                </span><span class=\"c\">(*r Disjunction *)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Aex</span><span class=\"w\"> </span><span class=\"s\">\"(nat ⇒ assn)\"</span><span class=\"w\">                            </span><span class=\"c\">(*r Existential quantification *)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I want to modify the last line to allow a more flexible existence definition, something like<code>Aex \"('a ⇒ assn)\"</code>, however, the ide notice me with the error message <code> Extra type variables on right-hand side: \"'a\"  </code>.  By the way,  I can write <code>  Aex (A: Type) (pp: A -&gt; assn).</code> in Coq. Therefore, I wonder wether I can do it in Isabelle and how?</p>",
        "id": 312763624,
        "sender_full_name": "HuanSun",
        "timestamp": 1669694959
    },
    {
        "content": "<p>In Isabelle you need to specify every extra type variable as a parameter of the type:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">datatype</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"n\">assn</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"ow\">...</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 312769702,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1669699580
    },
    {
        "content": "<p>And if you had more, you would have:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">datatype</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n n-Type\">'a</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n n-Type\">'b</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n n-Type\">'c</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n n-Type\">'d</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">assn</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"ow\">...</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 312769736,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1669699615
    }
]