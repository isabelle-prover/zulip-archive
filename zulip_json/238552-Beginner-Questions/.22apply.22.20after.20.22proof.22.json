[
    {
        "content": "<p>Relevant definitions:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">inductive</span><span class=\"w\"> </span><span class=\"n\">KGproof</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"form set ⇒ form list ⇒ bool\"</span><span class=\"w\"> </span><span class=\"kp\">where</span>\n<span class=\"w\">   </span><span class=\"s\">\"KGproof G []\"</span>\n<span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"s\">\"KGproof G p ∧ List.member p (IMP f1 f2) ∧ List.member p f1 ⟹ KGproof G (p @ [f2])\"</span>\n<span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"s\">\"KGproof G p ∧ List.member p f ⟹ KGproof G (p @ [subst σ f])\"</span>\n<span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"s\">\"KGproof G p ∧ List.member p f ⟹ KGproof G (p @ [BOX f])\"</span>\n<span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"s\">\"KGproof G p ⟹ KGproof G (p @ [IMP (DIAM form) (NOT (BOX (NOT form)))])\"</span>\n<span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"s\">\"KGproof G p ∧ ptaut f ⟹ KGproof G (p @ [f])\"</span>\n<span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"s\">\"KGproof G p ∧ f ∈ G ⟹ KGproof G (p @ [f])\"</span>\n\n<span class=\"k\">definition</span><span class=\"w\"> </span><span class=\"n\">KG_provable_def</span><span class=\"w\"> </span><span class=\"o\">:</span>\n<span class=\"s\">\"KG_provable Γ form ≡ ∃p. KGproof Γ p ∧ KGproof Γ (p @ [form])\"</span>\n\n<span class=\"k\">definition</span><span class=\"w\"> </span><span class=\"n\">is_NML_def</span><span class=\"w\"> </span><span class=\"o\">:</span>\n<span class=\"w\"> </span><span class=\"s\">\"is_NML s =</span>\n<span class=\"s\">  (∀ A B p q f form.</span>\n<span class=\"s\">  (ptaut form ⟶ form ∈ s) ∧</span>\n<span class=\"s\">  (IMP (BOX (IMP p q)) (IMP (BOX p) (BOX q))) ∈ s ∧</span>\n<span class=\"s\">  (IMP (DIAM p) (NOT (BOX (NOT p)))) ∈ s ∧</span>\n<span class=\"s\">  (IMP (NOT (BOX (NOT p))) (DIAM p)) ∈ s ∧</span>\n<span class=\"s\">  (A ∈ s ⟶ (subst f A) ∈ s) ∧</span>\n<span class=\"s\">  (A ∈ s ⟶ (BOX A) ∈ s) ∧</span>\n<span class=\"s\">  ((IMP A B) ∈ s ∧ A ∈ s ⟶ B ∈ s))\"</span>\n\n<span class=\"k\">definition</span><span class=\"w\"> </span><span class=\"n\">NMLG_def</span><span class=\"o\">:</span>\n<span class=\"w\"> </span><span class=\"s\">\"NMLG Γ = ⋂ {A. ((is_NML A) ∧ (subset_eq Γ A))}\"</span>\n</code></pre></div>\n<p>Problem on proving:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">exercise_1_6_6_d2</span><span class=\"o\">:</span>\n<span class=\"s\">\"f ∈ NMLG Γ ⟶ f ∈ { phi. KG_provable Γ phi }\"</span>\n<span class=\"k\">proof</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"n\">NMLG_ind</span><span class=\"o\">)</span>\n\n<span class=\"k\">qed</span>\n</code></pre></div>",
        "id": 470976052,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1726578947
    },
    {
        "content": "<p>After \"rule NMLG_ind\" , it gives me something of the pattern I like, looks like:<br>\n<a href=\"/user_uploads/14278/mHEd3GB1laj_lNolfujliIt8/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/mHEd3GB1laj_lNolfujliIt8/image.png\" title=\"image.png\"><img data-original-dimensions=\"2138x972\" src=\"/user_uploads/thumbnail/14278/mHEd3GB1laj_lNolfujliIt8/image.png/840x560.webp\"></a></div>",
        "id": 470976406,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1726579014
    },
    {
        "content": "<p>From here, I want to:<br>\n1.expand the definition of KG_provable.<br>\n2.use the definition collection to eliminate the \"{}\".</p>",
        "id": 470976716,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1726579089
    },
    {
        "content": "<p>1 itself can be done by unfolding before the apply. But it will give me the following:<br>\n<a href=\"/user_uploads/14278/y47kzzHXrGm8yTpM8y8iBgoU/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/y47kzzHXrGm8yTpM8y8iBgoU/image.png\" title=\"image.png\"><img data-original-dimensions=\"2138x972\" src=\"/user_uploads/thumbnail/14278/y47kzzHXrGm8yTpM8y8iBgoU/image.png/840x560.webp\"></a></div>",
        "id": 470976903,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1726579141
    },
    {
        "content": "<p>There leaves a \"{}\" which I do not know how to get rid of simultaneously on all the subgoals.</p>",
        "id": 470977005,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1726579169
    },
    {
        "content": "<p>How can I achieve these two?</p>",
        "id": 470977058,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1726579184
    }
]