[
    {
        "content": "<p>Hi! I've bumped into a situation where <code>apply(simp add: foo_thms)</code> fails while <code>apply(simp only:foo_thms)</code> succeeds, with <code>foo_thms</code> a list of theorems. How is that possible? My impression was that <code>simp</code> succeeds if and only if at least one simplification was successfully applied.</p>",
        "id": 319866028,
        "sender_full_name": "Hanno Becker",
        "timestamp": 1673040291
    },
    {
        "content": "<p>That does sound odd. Hard to pinpoint what's going on there without being able to reproduce the exact situation, maybe run the simp trace.</p>",
        "id": 319872416,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1673043348
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"570503\">@Hanno Becker</span>, by “fails”, do you mean the proof method really fails, in the sense that it can’t perform any rewrites and an error is reported, or do you mean that it just can’t solve the goal completely, while the version with <code>only:</code> can. If you meant the latter, there would be a simple explanation: the rules from the simpset, which are additionally considered when not using <code>only:</code>, cause some rewrite that destroys a subterm that could be rewritten using <code>foo_thms</code>.</p>",
        "id": 319885600,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1673050884
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"423655\">@Wolfgang Jeltsch</span> The method _fails_, which I interpret as no suitable rewrite being found, which is quite odd given that <code>simp</code> has more rules at its disposal in the <code>simp add: ...</code> variant than the <code>simp only: ...</code> variant. Or is there some kind of threshold being applied to the number of rules that <code>simp</code> will consider?</p>",
        "id": 319917455,
        "sender_full_name": "Hanno Becker",
        "timestamp": 1673078291
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232736\">@Manuel Eberl</span> How do I get the simp trace?</p>",
        "id": 319917508,
        "sender_full_name": "Hanno Becker",
        "timestamp": 1673078390
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"423655\">Wolfgang Jeltsch</span> The method <em>fails</em>, which I interpret as no suitable rewrite being found, which is quite odd given that <code>simp</code> has more rules at its disposal in the <code>simp add: ...</code> variant than the <code>simp only: ...</code> variant.</p>\n</blockquote>\n<p>A real failure of the <code>add:</code> variant is odd indeed.</p>\n<blockquote>\n<p>Or is there some kind of threshold being applied to the number of rules that <code>simp</code> will consider?</p>\n</blockquote>\n<p>Not to my knowledge, at least.</p>",
        "id": 319981882,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1673109004
    },
    {
        "content": "<blockquote>\n<p>How do I get the simp trace?</p>\n</blockquote>\n<p>You can globally enable simp traces by putting <code>declare [[simp_trace]]</code> into your code and locally by putting <code>using [[simp_trace]]</code> before your <code>apply</code> or <code>by</code> that invokes <code>simp</code>.</p>",
        "id": 319982206,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1673109214
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"423655\">@Wolfgang Jeltsch</span> , I will give that a go and see if it sheds any light on what's going on.</p>",
        "id": 319997255,
        "sender_full_name": "Hanno Becker",
        "timestamp": 1673118388
    }
]