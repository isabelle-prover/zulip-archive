[
    {
        "content": "<p>As an example,</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span> <span class=\"s\">\"∀x. Q x\"</span> <span class=\"kp\">for</span> <span class=\"n\">Q</span> <span class=\"o\">::</span> <span class=\"s\">\"('a × 'b) ⇒ bool\"</span>\n  <span class=\"kp\">apply</span> <span class=\"n\">clarify</span>\n</code></pre></div>\n<p>which results in <code>⋀a b. Q (a, b)</code>,<br>\nhow to prevent the method <code>clarify</code> splitting the pair to let it result in <code>⋀x. Q x</code>?<br>\nI have removed the simplification rule <code>split_paired_All</code>, but it hasn't worked yet. I guess there are other things I haven't disabled but I cannot figure them out.</p>",
        "id": 263250322,
        "sender_full_name": "Qiyuan Xu",
        "timestamp": 1638340903
    },
    {
        "content": "<p>I don't recommend it, but:</p>\n<div class=\"codehilite\"><pre><span></span><code>setup \\&lt;open&gt;map_theory_claset (fn ctxt =&gt; ctxt delSWrapper (&quot;split_all_tac&quot;))\\&lt;close&gt;\n</code></pre></div>",
        "id": 263250567,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1638341222
    },
    {
        "content": "<p>The problem is that this is not _local_ to a call, but it is a global change to the theory.</p>",
        "id": 263250585,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1638341255
    },
    {
        "content": "<p>I find it easier to normalize goals with <code>intro allI impI</code> and elimination of <code>exE</code> (for existential quantifier in the assumptions)</p>",
        "id": 263250678,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1638341380
    },
    {
        "content": "<p>For exE, I use <code>normalize_goal+</code> where:</p>\n<div class=\"codehilite\"><pre><span></span><code>method normalize_goal =\n  (match premises in\n    J[thin]: \\&lt;open&gt;\\&lt;exists&gt;x. _\\&lt;close&gt; \\&lt;Rightarrow&gt; \\&lt;open&gt;rule exE[OF J]\\&lt;close&gt;\n  \\&lt;bar&gt; J[thin]: \\&lt;open&gt;_ \\&lt;and&gt; _\\&lt;close&gt; \\&lt;Rightarrow&gt; \\&lt;open&gt;rule conjE[OF J]\\&lt;close&gt;\n  )\n</code></pre></div>\n<p>(I never have ∀ in goals), but you can easily extend the method to also do <code>rule impI allI conjI</code></p>",
        "id": 263250755,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1638341461
    },
    {
        "content": "<p>great idea</p>",
        "id": 263250765,
        "sender_full_name": "Qiyuan Xu",
        "timestamp": 1638341479
    }
]