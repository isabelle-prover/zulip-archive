[
    {
        "content": "<p>I have a lemma</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span> <span class=\"o\">(</span><span class=\"kp\">in</span> <span class=\"n\">th2</span><span class=\"o\">)</span> <span class=\"n\">addMeaningF_2</span><span class=\"o\">:</span> <span class=\"s\">\"∀m. m ≤ n ⟹ (m = (len x + len y) ⟹ (evalBinNum_1 (addBinNum x y) = plus (evalBinNum_1 x) (evalBinNum_1 y)))\"</span>\n</code></pre></div>\n<p>evalBinNum and addBinNum are recursive functions.<br>\nEverytime I apply(induct n) Isabelle prompts that it is unable to figure out the induct rule. Why does this happen?</p>",
        "id": 290159676,
        "sender_full_name": "Lekhani Ray",
        "timestamp": 1658264318
    },
    {
        "content": "<p>In your statement, <code>m</code> is only bound locally in the first premise, it is free in the second one.<br>\nThus the bound <code>m</code> in the first premise is not forced to be of type <code>nat</code>, and therefore also <code>n::'a::ord</code>.<br>\nSince there is no general induction rule for orders, the induct method fails.</p>",
        "id": 290200161,
        "sender_full_name": "Maximilian Schaeffeler",
        "timestamp": 1658300281
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"433149\">Maximilian Schaeffeler</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Induction.20rule.20error/near/290200161\">said</a>:</p>\n<blockquote>\n<p>In your statement, <code>m</code> is only bound locally in the first premise, it is free in the second one.<br>\nThus the bound <code>m</code> in the first premise is not forced to be of type <code>nat</code>, and therefore also <code>n::'a::ord</code>.<br>\nSince there is no general induction rule for orders, the induct method fails.</p>\n</blockquote>\n<p>Thank you!<br>\nIf I try to bind m over the whole expression (by simple enclosing everything after ∀m. within brackets) I get a parsing error. I was wondering if I'm missing something?</p>",
        "id": 290328769,
        "sender_full_name": "Lekhani Ray",
        "timestamp": 1658374059
    },
    {
        "content": "<p>Either <code>!!m. ... ⟹ ...</code> or <code>\"∀m. (... --&gt; ...)</code></p>",
        "id": 290333492,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1658379365
    },
    {
        "content": "<p>The more natural version being no quantifiers and <code>apply (induct n arbitrary: m)</code></p>",
        "id": 290333504,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1658379392
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Induction.20rule.20error/near/290333504\">said</a>:</p>\n<blockquote>\n<p>The more natural version being no quantifiers and <code>apply (induct n arbitrary: m)</code></p>\n</blockquote>\n<p>It cannot quite recognize m in this case. Is it because it is bound?</p>",
        "id": 290366182,
        "sender_full_name": "Lekhani Ray",
        "timestamp": 1658404851
    },
    {
        "content": "<p>yes, you have to remove the !!</p>",
        "id": 290366274,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1658404913
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"511667\">Lekhani Ray</span> has marked this topic as resolved.</p>",
        "id": 290368152,
        "sender_full_name": "Notification Bot",
        "timestamp": 1658406196
    }
]