[
    {
        "content": "<p>I am trying to solve a rather simple proof goal with a ML tactic. My goal has the form:</p>\n<div class=\"codehilite\"><pre><span></span><code>⋀x f1 f2 g1 g2. (⋀z1. z1 ∈ set1_sum2 x ⟹ f1 z1 = g1 z1) ⟹ (⋀z2. z2 ∈ set2_sum2 x ⟹ f2 z2 = g2 z2) ⟹ map_sum2 f1 f2 x = map_sum2 g1 g2 x\n</code></pre></div>\n<p>and I have a theorem of the form</p>\n<div class=\"codehilite\"><pre><span></span><code>(⋀z1. z1 ∈ set1_sum2 ?x ⟹ ?f1.0 z1 = ?g1.0 z1) ⟹ (⋀z2. z2 ∈ set2_sum2 ?x ⟹ ?f2.0 z2 = ?g2.0 z2) ⟹ map_sum2 ?f1.0 ?f2.0 ?x = map_sum2 ?g1.0 ?g2.0 ?x\n</code></pre></div>\n<p>So I need to instanciate the schematic variables of the theorem with the forall bound variables of the goal. I can get the bound variables with <code>Subgoal.SUBPROOF</code>, but I have no idea what the ML equivalent of the lowercase <code>of</code> is</p>",
        "id": 249829666,
        "sender_full_name": "Jan van Brügge",
        "timestamp": 1629281617
    },
    {
        "content": "<p>In this case, just resolving (resolve_tac) with the theorem should instantiate the schematic variables correctly.</p>",
        "id": 249832492,
        "sender_full_name": "Dmitriy Traytel",
        "timestamp": 1629283824
    },
    {
        "content": "<p>After the resolution step, Goal.assume_rule_tac  (which is different from assume_tac in that it follows ==&gt; recursively) should be able to solve the remaining subgoals.</p>",
        "id": 249832742,
        "sender_full_name": "Dmitriy Traytel",
        "timestamp": 1629284011
    },
    {
        "content": "<p>To answer you actual question: <code>infer_instantiate</code> is an equivalent of <code>where</code> and <code>infer_instantiate'</code> of <code>of</code>.</p>",
        "id": 249833064,
        "sender_full_name": "Dmitriy Traytel",
        "timestamp": 1629284256
    },
    {
        "content": "<p>Indeed, this works:</p>\n<div class=\"codehilite\"><pre><span></span><code>apply (tactic ‹resolve_tac @{context} [BNF_Def.map_cong0_of_bnf a] 1\n      THEN REPEAT (Goal.assume_rule_tac @{context} 1)›)\n</code></pre></div>",
        "id": 249833595,
        "sender_full_name": "Jan van Brügge",
        "timestamp": 1629284572
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"392255\">Jan van Brügge</span> has marked this topic as resolved.</p>",
        "id": 249833604,
        "sender_full_name": "Notification Bot",
        "timestamp": 1629284576
    }
]