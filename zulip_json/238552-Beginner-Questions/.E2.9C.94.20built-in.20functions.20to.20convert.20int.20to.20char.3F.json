[
    {
        "content": "<p>Hi all,</p>\n<p>Is there some nice built-in support in Isabelle for converting a <code>nat</code> to a <code> char</code>?<br>\nI am writing a function to enumerate all possible char values in isabelle:</p>\n<div class=\"codehilite\"><pre><span></span><code>fun all_chars :: &quot;nat ⇒ char list&quot;\n  where\n&quot;all_chars 0 = [char_of 0]&quot;\n|&quot;all_chars (Suc i) = (char_of (Suc i)) # (all_chars i)&quot;\n</code></pre></div>\n<p>I went through this answer<br>\n<a href=\"https://stackoverflow.com/questions/33393926/isabelle-character-and-string-literal-support\">https://stackoverflow.com/questions/33393926/isabelle-character-and-string-literal-support</a><br>\nand somehow functions <code>nat_of_char</code> and <code>char_of_nat</code> wasn't there in the String.thy file.<br>\nI did find something called char_of, but somehow isabelle complains about it,</p>\n<p>saying that</p>\n<div class=\"codehilite\"><pre><span></span><code>Additional type variable(s) in specification of &quot;all_chars_graph&quot;: &#39;a\nExtra type variables on rhs: &quot;&#39;a&quot;\nThe error(s) above occurred in definition &quot;all_chars_sumC_def&quot;:\n  &quot;all_chars_sumC ≡ λx. THE_default undefined (all_chars_graph TYPE(&#39;a) x)&quot;\n</code></pre></div>\n<p>How can I fix this? If I need to write one on my own, how should char_of_nat defined to be simple?</p>\n<p>Thanks a lot,<br>\nChengsong</p>",
        "id": 271249824,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1644399045
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>fun all_chars :: &quot;nat ⇒ char list&quot;\n  where\n&quot;all_chars 0 = [CHR 0x00]&quot;\n|&quot;all_chars (Suc i) = (char_of (Suc i)) # (all_chars i)&quot;\n</code></pre></div>\n<p>Somehow this does the trick.<br>\nCan someone explain, please?</p>",
        "id": 271250706,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1644399577
    },
    {
        "content": "<p><code>of_char</code> has the polymorphic type  <code>'a =&gt; nat</code>, thus in the expression <code>of_char 0</code> the type of <code>0</code>is also <code>'a</code> (an additional type variable, that cannot be deduced from the function arguments). In the second equation (<code>Suc</code> case), the type of <code>of_char</code> can be specialized to <code>nat =&gt; char</code>, as <code>Suc i</code> has type <code>nat</code>.</p>\n<p>A simpler definition would be:</p>\n<div class=\"codehilite\"><pre><span></span><code>definition all_chars :: &quot;nat ⇒ char list&quot; where\n&quot;all_chars n = map char_of [0..n]&quot;\n</code></pre></div>",
        "id": 271263275,
        "sender_full_name": "Maximilian Schaeffeler",
        "timestamp": 1644406189
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"433149\">Maximilian Schaeffeler</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/built-in.20functions.20to.20convert.20int.20to.20char.3F/near/271263275\">said</a>:</p>\n<blockquote>\n<p><code>of_char</code> has the polymorphic type  <code>'a =&gt; nat</code>, thus in the expression <code>of_char 0</code> the type of <code>0</code>is also <code>'a</code> (an additional type variable, that cannot be deduced from the function arguments). In the second equation (<code>Suc</code> case), the type of <code>of_char</code> can be specialized to <code>nat =&gt; char</code>, as <code>Suc i</code> has type <code>nat</code>.</p>\n<p>A simpler definition would be:</p>\n<p><div class=\"codehilite\"><pre><span></span><code>definition all_chars :: &quot;nat ⇒ char list&quot; where\n&quot;all_chars n = map char_of [0..n]&quot;\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Thanks a lot! That's a nice definition, except you need [0..n] needs n to be an int (which sounds weird to me as upto means \"up to a positive number \" right?</p>",
        "id": 271327827,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1644432257
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"241231\">Chengsong Tan</span> has marked this topic as resolved.</p>",
        "id": 271334974,
        "sender_full_name": "Notification Bot",
        "timestamp": 1644435330
    },
    {
        "content": "<p>No, <code>n</code> is of type <code>nat</code> not <code>int</code> in this definition.<br>\nThere's also a version of this syntax that does not include <code>n</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>definition &quot;all_chars n = map char_of [0..&lt;n]&quot;\n</code></pre></div>",
        "id": 271398699,
        "sender_full_name": "Maximilian Schaeffeler",
        "timestamp": 1644480885
    }
]