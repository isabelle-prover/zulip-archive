[
    {
        "content": "<p>I'm defining the class:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"n\">countably_infinite</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"infinite (UNIV :: 'a set)\"</span>\n</code></pre></div>\n<p>and the output includes the following warning:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">Additional</span><span class=\"w\"> </span><span class=\"n\">type</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"kp\">in</span><span class=\"w\"> </span><span class=\"k\">locale</span><span class=\"w\"> </span><span class=\"kn\">specification</span><span class=\"w\"> </span><span class=\"s\">\"countably_infinite\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span>\n<span class=\"k\">class</span><span class=\"w\"> </span><span class=\"n\">countably_infinite</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">type</span><span class=\"w\"> </span><span class=\"o\">+</span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"infinite UNIV\"</span>\n</code></pre></div>\n<p>I saw the same warning in <code>HOL-Library.Countable</code>, is there a general way of overcoming it or is it always ignored?</p>",
        "id": 396025628,
        "sender_full_name": "Robert Soeldner",
        "timestamp": 1697008715
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"403618\">Robert Soeldner</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Additional.20type.20variable.28s.29.20in.20locale.20specification/near/396025628\">said</a>:</p>\n<blockquote>\n<p>I'm defining the class:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"n\">countably_infinite</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"infinite (UNIV :: 'a set)\"</span>\n</code></pre></div>\n<p>and the output includes the following warning:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">Additional</span><span class=\"w\"> </span><span class=\"n\">type</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"kp\">in</span><span class=\"w\"> </span><span class=\"k\">locale</span><span class=\"w\"> </span><span class=\"kn\">specification</span><span class=\"w\"> </span><span class=\"s\">\"countably_infinite\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span>\n<span class=\"k\">class</span><span class=\"w\"> </span><span class=\"n\">countably_infinite</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">type</span><span class=\"w\"> </span><span class=\"o\">+</span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"infinite UNIV\"</span>\n</code></pre></div>\n<p>I saw the same warning in <code>HOL-Library.Countable</code>, is there a general way of overcoming it or is it always ignored?</p>\n</blockquote>\n<p><em>bump</em></p>",
        "id": 436876615,
        "sender_full_name": "Tobias Heindel (Heliax GmbH)",
        "timestamp": 1714740568
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"n\">countably_infinite</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">ty_p</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'a itself\"</span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"infinite (UNIV :: 'a set)\"</span>\n</code></pre></div>\n<p>For explicit instantiations you can then use <code>TYPE('a)</code></p>",
        "id": 436877745,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1714740970
    }
]