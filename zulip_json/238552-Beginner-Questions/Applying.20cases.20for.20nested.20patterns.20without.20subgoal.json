[
    {
        "content": "<p>When a function is defined over pattern matching its argument, I often have to apply <em>cases</em> in a proof.<br>\nBut when the definition additionally does pattern matching over the components, can I just apply <em>cases</em> over both patterns at once?</p>\n<p>For example:<br>\n<code>fun my_fun where \"my_fun (a, MyType x y) = ...\"</code><br>\nTo prove  a property of <code>my_fun c</code> I often do</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">cases</span><span class=\"w\">  </span><span class=\"n\">c</span><span class=\"o\">)</span>\n<span class=\"n\">subgoal</span><span class=\"w\"> </span><span class=\"kp\">for</span><span class=\"w\"> </span><span class=\"o\">_</span><span class=\"w\"> </span><span class=\"n\">b</span>\n<span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">cases</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"o\">)</span>\n<span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">simp</span>\n</code></pre></div>\n<p>Can I just simplify this into one line?</p>",
        "id": 492948239,
        "sender_full_name": "Maximilian Vollath",
        "timestamp": 1736514967
    },
    {
        "content": "<p>Like this? <code>by (cases rule: my_fun.cases[of c]) simp</code></p>",
        "id": 492949611,
        "sender_full_name": "Maximilian Sch√§ffeler",
        "timestamp": 1736515416
    },
    {
        "content": "<p>Yes exactly like that, thanks!</p>",
        "id": 493000548,
        "sender_full_name": "Maximilian Vollath",
        "timestamp": 1736532374
    }
]