[
    {
        "content": "<p>Hi <br>\n   Previously I have used a locale to define Galois connections different ways so they are not completely unknown to me.  But I am trying to define one language ZOL (propositional logic) as a sub language to another language FOL and not getting very far!</p>\n<p>Slowly moving forward but  I have been using  value \" power   .... \" to debug  my  power functions. This works outside of the local but when the functions and value are in a locale  I get     \"No code equations for local.power\"  <br>\nAny ideas what I am doing wrong?</p>",
        "id": 262889289,
        "sender_full_name": "david streader",
        "timestamp": 1638041908
    },
    {
        "content": "<p>Defining functions inside a locale has the unfortunate side effect that the equations of the function then depend on the locale assumptions. Since the code generator cannot deal with conditional equations you will see the error you mentioned when using <code>value</code>. The remedy is to define functions outside the locale. If the locale depends on some constants that you want to use inside the function, you can use an anonymous context that resembles the locale to make the function easier to define. Example:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">locale</span> <span class=\"n\">foo</span> <span class=\"o\">=</span>\n  <span class=\"kp\">fixes</span> <span class=\"n\">a</span> <span class=\"o\">::</span> <span class=\"n n-Type\">'a</span>\n<span class=\"k\">begin</span>\n<span class=\"k\">end</span>\n\n<span class=\"k\">context</span>\n  <span class=\"kp\">fixes</span> <span class=\"n\">a</span> <span class=\"o\">::</span> <span class=\"n n-Type\">'a</span>\n<span class=\"k\">begin</span>\n<span class=\"k\">fun</span> <span class=\"n\">f</span> <span class=\"kp\">where</span> <span class=\"s\">\"f x = a\"</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
        "id": 262926716,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1638103180
    }
]