[
    {
        "content": "<p>I would like to preface this by saying that, I am aware <strong>this is probably a bad idea</strong></p>\n<p>I would like to export some code where some branches are not computable/exportable, but where I have blocked them off using <code>Code.abort</code></p>\n<p>Small example:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">definition</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"s\">\" nat ⇒ real\"</span>\n<span class=\"kp\">where</span><span class=\"w\"> </span><span class=\"s\">\"</span>\n<span class=\"s\">  foo n = (</span>\n<span class=\"s\">  if n = 0</span>\n<span class=\"s\">  then 0</span>\n<span class=\"s\">  else Code.abort (STR ''foo'') (λ_. ln n))\"</span>\n\n<span class=\"k\">export_code</span>\n<span class=\"w\">  </span><span class=\"n\">foo</span>\n<span class=\"w\">  </span><span class=\"kp\">in</span><span class=\"w\"> </span><span class=\"n\">SML</span>\n<span class=\"w\">  </span><span class=\"n\">file_prefix</span><span class=\"w\"> </span><span class=\"s\">\"foo\"</span>\n</code></pre></div>\n<p>The above export call results in a well-sortedness error when trying to export <code>ln</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">Wellsortedness</span><span class=\"w\"> </span><span class=\"n\">error</span>\n<span class=\"o\">(</span><span class=\"kp\">in</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"w\"> </span><span class=\"n\">equation</span><span class=\"w\"> </span><span class=\"n\">ln_real_inst.ln_real</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">≡</span>\n<span class=\"w\">                  </span><span class=\"n\">THE</span><span class=\"w\"> </span><span class=\"n\">u.</span><span class=\"w\"> </span><span class=\"n\">equal_real_inst.equal_real</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">exp</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">x</span><span class=\"o\">,</span>\n<span class=\"k\">with</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"s\">\"foo\"</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">&gt;</span><span class=\"w\"> </span><span class=\"s\">\"ln [real]\"</span><span class=\"o\">):</span>\n<span class=\"n\">Type</span><span class=\"w\"> </span><span class=\"n\">real</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">sort</span><span class=\"w\"> </span><span class=\"n\">enum</span>\n<span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">type</span><span class=\"w\"> </span><span class=\"n\">arity</span><span class=\"w\"> </span><span class=\"n\">real</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"n\">enum</span>\n</code></pre></div>\n<p>Note that <code>ln</code> here is just an example. My question is whether one can make the code exporter ignore things behind <code>Code.abort</code>?</p>\n<p>(In my specific use case, I know how to work around this, but it's annoying)</p>",
        "id": 391825188,
        "sender_full_name": "Yong Kiam",
        "timestamp": 1695097353
    },
    {
        "content": "<p>Have you considered using <code>declare [[code abort: function_to_be_ignored]]</code>? page 13 in <a href=\"https://isabelle.in.tum.de/doc/codegen.pdf\">https://isabelle.in.tum.de/doc/codegen.pdf</a></p>",
        "id": 392647226,
        "sender_full_name": "Hanno Becker",
        "timestamp": 1695446777
    },
    {
        "content": "<p>ah, that's right, I think I can make it work with this by defining a dummy function that wraps around that branch and then using <code>code abort</code> on it. I wanted something more granular, where I can block off a branch directly, but this will work for my use case, thank you.</p>",
        "id": 392660002,
        "sender_full_name": "Yong Kiam",
        "timestamp": 1695456847
    }
]