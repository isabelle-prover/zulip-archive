[
    {
        "content": "<p>I am to type in the monoid with left neutral element definition from the Type Class Tutorial:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"n\">monoidl</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">semigroup</span><span class=\"w\"> </span><span class=\"o\">+</span>\n<span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">neutral</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"n\">Œ±</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">1</span><span class=\"o\">)</span>\n<span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"n\">neutl</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">1</span><span class=\"w\"> </span><span class=\"n\">‚äó</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">x</span>\n</code></pre></div>\n<p>with the special  \"one\" symbol from Symbols -&gt; Digit in jEdit. I used</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"n\">monoidleft</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">semigroup</span><span class=\"w\"> </span><span class=\"o\">+</span>\n<span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">neutral</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'a\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">ùü≠</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"n\">neutrality_left</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"ùü≠ ‚äó x = x\"</span>\n</code></pre></div>\n<p>but this resulted in </p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">Outer</span><span class=\"w\"> </span><span class=\"k\">syntax</span><span class=\"w\"> </span><span class=\"n\">error‚åÇ</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">keyword</span><span class=\"w\"> </span><span class=\"s\">\"infix\"</span><span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"o\">,</span>\n<span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">symbolic</span><span class=\"w\"> </span><span class=\"kp\">identifier</span><span class=\"w\"> </span><span class=\"n\">ùü≠‚åÇ</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">found</span>\n</code></pre></div>\n<p>What is the correct concrete syntax for introducing a special symbol for a scalar, i.e. not an infix operator?</p>",
        "id": 380720482,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1690899878
    },
    {
        "content": "<p>The answer is</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"n\">monoidleft</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">semigroup</span><span class=\"w\"> </span><span class=\"o\">+</span>\n<span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">neutral</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'a\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"ùü≠\"</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"n\">neutrality_left</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"ùü≠ ‚äó x = x\"</span>\n</code></pre></div>\n<p>so using quotes <em>inside</em> the parentheses.</p>",
        "id": 380722650,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1690900229
    },
    {
        "content": "<p>Yes, it‚Äôs inner syntax (the syntax for terms and types); so you have to delimit it. This can be done by quotation marks or by cartouches.</p>",
        "id": 380730204,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1690901409
    },
    {
        "content": "<p>How about this one?</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"n\">group</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">monoid</span><span class=\"w\"> </span><span class=\"o\">+</span>\n<span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">inverse</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'a ‚áí 'a\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_√∑\"</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"n\">inverse_left</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"x√∑ ‚äó x = ùü≠\"</span>\n</code></pre></div>\n<p>works but the Type Class Tutorial would give</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"w\"> </span><span class=\"o\">((_</span><span class=\"n\">√∑</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">1000</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">999</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>for precedences but I cannot find a concrete syntax for it. Is there one?</p>",
        "id": 380738820,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1690902705
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"423655\">@Wolfgang Jeltsch</span> do you ask your question for this topic? It is not clear for me how could I add <code>[1000] 999</code> as the precedence for the left inverse in the above example.</p>",
        "id": 380743704,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1690903462
    },
    {
        "content": "<p>Yes, my question referred to your question regarding concrete syntax. It wasn‚Äôt clear to me whether you talked about concrete syntax for group inverses or concrete syntax for defining such concrete syntax.</p>",
        "id": 380744702,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1690903597
    },
    {
        "content": "<p>Oh, I see: wrong thread. Maybe some new question sneaked in while I was typing or whatever.</p>",
        "id": 380745020,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1690903645
    },
    {
        "content": "<p>This kind of syntax definitions is described in the Isabelle/Isar Reference Manual in Section¬†8.2: <em>Mixfix annotations</em>.</p>",
        "id": 380746347,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1690903812
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"423655\">@Wolfgang Jeltsch</span> </p>\n<p>The Isabelle/Isar Reference Manual is complicated, but searching for examples in Isabelle/src resulted in working examples:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">Isabelle2022/src/HOL/Groups.thy</span><span class=\"o\">:</span><span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">uminus</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'a </span><span class=\"ss\">\\&lt;Rightarrow&gt;</span><span class=\"s\"> 'a\"</span><span class=\"w\">  </span><span class=\"o\">(</span><span class=\"s\">\"- _\"</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">81</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">80</span><span class=\"o\">)</span>\n<span class=\"n\">Isabelle2022/src/HOL/Complete_Lattices.thy</span><span class=\"o\">:</span><span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">Inf</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'a set </span><span class=\"ss\">\\&lt;Rightarrow&gt;</span><span class=\"s\"> 'a\"</span><span class=\"w\">  </span><span class=\"o\">(</span><span class=\"s\">\"</span><span class=\"ss\">\\&lt;Sqinter&gt;</span><span class=\"s\"> _\"</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">900</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">900</span><span class=\"o\">)</span>\n<span class=\"n\">Isabelle2022/src/HOL/Complete_Lattices.thy</span><span class=\"o\">:</span><span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">Sup</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'a set </span><span class=\"ss\">\\&lt;Rightarrow&gt;</span><span class=\"s\"> 'a\"</span><span class=\"w\">  </span><span class=\"o\">(</span><span class=\"s\">\"</span><span class=\"ss\">\\&lt;Squnion&gt;</span><span class=\"s\"> _\"</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">900</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">900</span><span class=\"o\">)</span>\n<span class=\"n\">Isabelle2022/src/HOL/Boolean_Algebras.thy</span><span class=\"o\">:</span><span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">compl</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"ss\">\\&lt;open&gt;</span><span class=\"s\">'a </span><span class=\"ss\">\\&lt;Rightarrow&gt;</span><span class=\"s\"> 'a</span><span class=\"ss\">\\&lt;close&gt;</span><span class=\"w\">  </span><span class=\"o\">(</span><span class=\"ss\">\\&lt;open&gt;\\&lt;^bold&gt;</span><span class=\"s\">- _</span><span class=\"ss\">\\&lt;close&gt;</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">81</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">80</span><span class=\"o\">)</span>\n<span class=\"n\">Isabelle2022/src/Doc/Tutorial/Types/Axioms.thy</span><span class=\"o\">:</span><span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">inv</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'a </span><span class=\"ss\">\\&lt;Rightarrow&gt;</span><span class=\"s\"> 'a\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"</span><span class=\"ss\">\\&lt;div&gt;</span><span class=\"s\"> _\"</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">81</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">80</span><span class=\"o\">)</span>\n<span class=\"n\">Isabelle2022/src/Doc/Classes/Classes.thy</span><span class=\"o\">:</span><span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">inverse</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"ss\">\\&lt;alpha&gt;</span><span class=\"s\"> </span><span class=\"ss\">\\&lt;Rightarrow&gt;</span><span class=\"s\"> </span><span class=\"ss\">\\&lt;alpha&gt;</span><span class=\"s\">\"</span><span class=\"w\">    </span><span class=\"o\">(</span><span class=\"s\">\"(_</span><span class=\"ss\">\\&lt;div&gt;</span><span class=\"s\">)\"</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">1000</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">999</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>which instructed me to omit the inner parentheses:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">inverse</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'a ‚áí 'a\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_ √∑\"</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">1000</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">999</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>The Type Class Tutorial has it wrong:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"w\"> </span><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"n\">group</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">monoidl</span><span class=\"w\"> </span><span class=\"o\">+</span>\n<span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">inverse</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"n\">Œ±</span><span class=\"w\"> </span><span class=\"n\">‚áí</span><span class=\"w\"> </span><span class=\"n\">Œ±</span><span class=\"w\"> </span><span class=\"o\">((-</span><span class=\"n\">√∑</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">1000</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">999</span><span class=\"o\">)</span>\n<span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"n\">invl</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">x√∑</span><span class=\"w\"> </span><span class=\"n\">‚äó</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">1</span>\n</code></pre></div>\n<p>How should I report this typo?</p>",
        "id": 380956018,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1690966936
    },
    {
        "content": "<blockquote>\n<p>The Type Class Tutorial has it wrong: [‚Ä¶]</p>\n</blockquote>\n<p>Yes, I guess the inner parentheses should be quotation marks or cartouches.</p>\n<p>Maybe report it directly to the authors by e-mail.</p>",
        "id": 381008857,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1690977157
    }
]