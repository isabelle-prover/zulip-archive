[
    {
        "content": "<p>I have many \"by auto\"-proofs that use up a lot of memory. As soon as ML reaches about 8GB (I have 16GB RAM), a \"ML cleanup\" is performed after every single line in my theory, which in total takes up far more time than the actual proofs. Is there a way to adjust the memory limits or GC frequency?</p>",
        "id": 231271992,
        "sender_full_name": "Alex",
        "timestamp": 1616398486
    },
    {
        "content": "<p>In theory, you can adjust the min-heap of PolyML. Add to <code>$ISABELLE_HOME/etc/settings</code></p>\n<div class=\"codehilite\"><pre><span></span><code>ML_OPTIONS=&quot;--minheap 10G&quot;\n</code></pre></div>\n<p>restart Isabelle, and try. That could backfire however (GCs become slower)</p>",
        "id": 231272465,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1616398940
    },
    {
        "content": "<p>Not sure if that helps though</p>",
        "id": 231272474,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1616398967
    },
    {
        "content": "<p>Other alternatives are splitting the file or changing the proofs…</p>",
        "id": 231272585,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1616399055
    },
    {
        "content": "<p>More generally, I always found that the garbage collector behave strangely in SML (both PolyML and  MLton): Not eager enough to allocate memory past 50% of memory (including cases where GC will take up most of the runtime…), but also not eager enough to deallocate memory for low memory usage (in percentage again: Isabelle/polyml can use 50GB if the server has 1TB RAM… completely useless)</p>",
        "id": 231273211,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1616399566
    },
    {
        "content": "<p>Thank you! Adjusting the limit this way worked. And, just as you said, raising it too much backfires immediately. I will experiment with different values to find what works best in my case.</p>",
        "id": 231274324,
        "sender_full_name": "Alex",
        "timestamp": 1616400432
    }
]