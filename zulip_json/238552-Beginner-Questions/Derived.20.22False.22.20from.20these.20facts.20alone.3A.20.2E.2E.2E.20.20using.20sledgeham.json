[
    {
        "content": "<p>How bad is it that I get this error while using sledgehammer to do proofs? Is it a sign that my  assumptions are contradictory?</p>",
        "id": 428387328,
        "sender_full_name": "ee",
        "timestamp": 1711131744
    },
    {
        "content": "<p>It depends</p>",
        "id": 428393650,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1711134356
    },
    {
        "content": "<p>It can indicate that:</p>\n<p>1. the used solver is incorrect (in which case the reconstruction will fail). For example, this:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">False</span><span class=\"w\"> </span><span class=\"c\">(*example from https://github.com/m-fleury/isabelle-emacs/issues/86*)</span>\n<span class=\"w\">  </span><span class=\"kt\">sledgehammer</span><span class=\"o\">[</span><span class=\"n\">spass</span><span class=\"o\">,</span><span class=\"n\">debug</span><span class=\"o\">](</span><span class=\"n\">Unity_def</span><span class=\"w\"> </span><span class=\"n\">old.unit.exhaust</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"gr\">oops</span>\n</code></pre></div>\n<p>2. Your assumptions are contradictory (which can happen in a proof by contradiction indicating that the solver found a faster way to derive false)<br>\n  3. There is an issue in Sledgehammer because it fails to understand the proof (for example, Sledgehammer removed accidentally some part of the proofs during parsing)</p>",
        "id": 428394243,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1711134616
    },
    {
        "content": "<p>1 is annoying especially since Sledgehammer does ML it will learn and use the incorrect claim. But it is not bad, it just makes sledgehammer worse</p>",
        "id": 428394518,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1711134749
    },
    {
        "content": "<p>2 is bad (for your formalization)</p>",
        "id": 428394557,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1711134770
    },
    {
        "content": "<p>3 is annoying again, but a correctness problem</p>",
        "id": 428394599,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1711134794
    },
    {
        "content": "<p>Some rule of thumb: take the facts and pass them to sledgehammer:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kt\">sledgehammer</span><span class=\"o\">(</span><span class=\"n\">the</span><span class=\"o\">-</span><span class=\"n\">facts</span><span class=\"o\">-</span><span class=\"n\">that</span><span class=\"o\">-</span><span class=\"n\">lead</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">false</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>If several solvers find a proof: it is very unlikely that it is 1 or 3</p>",
        "id": 428395125,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1711135024
    },
    {
        "content": "<p>and if one solver is (cvc4|verit|z3) and another is (spass|vampire|e|zipperposition) then it is nearly impossible to be 1 or 3</p>",
        "id": 428395291,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1711135111
    },
    {
        "content": "<p>(because the solvers  work differently, take a different input format, and produce a different proof format)</p>",
        "id": 428395346,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1711135143
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Derived.20.22False.22.20from.20these.20facts.20alone.3A.20.2E.2E.2E.20.20using.20sledgeham/near/428395125\">said</a>:</p>\n<blockquote>\n<p><code>sledgehammer(the-facts-that-lead-to-false)</code></p>\n</blockquote>\n<p>Sorry I'm not sure how to do this</p>",
        "id": 429054686,
        "sender_full_name": "ee",
        "timestamp": 1711174686
    },
    {
        "content": "<p>In the output of sledgehammer you have something like:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"w\">   </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">metis</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"o\">-</span><span class=\"n\">facts</span><span class=\"o\">-</span><span class=\"n\">that</span><span class=\"o\">-</span><span class=\"n\">lead</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">false</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">&gt;1s</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>So you insert in your theory:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kt\">sledgehammer</span><span class=\"o\">(</span><span class=\"n\">the</span><span class=\"o\">-</span><span class=\"n\">facts</span><span class=\"o\">-</span><span class=\"n\">that</span><span class=\"o\">-</span><span class=\"n\">lead</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">false</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 429054952,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1711174991
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Derived.20.22False.22.20from.20these.20facts.20alone.3A.20.2E.2E.2E.20.20using.20sledgeham/near/428395291\">said</a>:</p>\n<blockquote>\n<p>and if one solver is (cvc4|verit|z3) and another is (spass|vampire|e|zipperposition) then it is nearly impossible to be 1 or 3</p>\n</blockquote>\n<p>this is a very cool heuristic, I've never thought about using sledgehammer in this way!</p>",
        "id": 429084644,
        "sender_full_name": "Yong Kiam",
        "timestamp": 1711203470
    }
]