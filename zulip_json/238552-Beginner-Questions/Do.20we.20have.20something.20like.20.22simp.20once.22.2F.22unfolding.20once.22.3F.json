[
    {
        "content": "<p>For some iff thms generated from induction, it will obviously loop when we expend it, say:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">height_le</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">Op</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">R</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">a1.0</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">a2.0</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"o\">(?</span><span class=\"n\">a1.0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"n\">∧</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">a2.0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">0</span><span class=\"w\"> </span><span class=\"n\">∨</span>\n<span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">∃w</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"n\">vl</span><span class=\"w\"> </span><span class=\"n\">v.</span>\n<span class=\"w\">     </span><span class=\"o\">?</span><span class=\"n\">a1.0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"n\">∧</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">a2.0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">1</span><span class=\"w\"> </span><span class=\"n\">∧</span><span class=\"w\"> </span><span class=\"n\">height_le</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">Op</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">R</span><span class=\"w\"> </span><span class=\"n\">w</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"n\">∧</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"n\">∈</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">Op</span><span class=\"w\"> </span><span class=\"n\">∧</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">R</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">w</span><span class=\"w\"> </span><span class=\"n\">#</span><span class=\"w\"> </span><span class=\"n\">vl</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">∧</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"n\">∈</span><span class=\"w\"> </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">vl</span><span class=\"o\">))</span>\n</code></pre></div>",
        "id": 489002931,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1734189762
    },
    {
        "content": "<p>But sometimes I would still want to expand it only once to see how the goal looks like. Is there anything that only apply the unfolding/rw only once?</p>",
        "id": 489002970,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1734189797
    },
    {
        "content": "<p><code>apply (subst ...)</code> (possibly with position specification like <code>subst (asm)(4)</code>) or <code>apply (rewrite ....)</code>(possibly with <code>rewrite at ... in ...</code>)</p>",
        "id": 489005374,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1734191846
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/channel/238552-Beginner-Questions/topic/Do.20we.20have.20something.20like.20.22simp.20once.22.2F.22unfolding.20once.22.3F/near/489005374\">said</a>:</p>\n<blockquote>\n<p><code>apply (subst ...)</code> (possibly with position specification like <code>subst (asm)(4)</code>) or <code>apply (rewrite ....)</code>(possibly with <code>rewrite at ... in ...</code>)</p>\n</blockquote>\n<p>subst works for me in the sense that</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"ow\">...</span>\n<span class=\"w\"> </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">hle_v_suc_n</span><span class=\"o\">:</span><span class=\"s\">\"height_le r τ R v (n + 1)\"</span>\n<span class=\"w\">    </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">subst</span><span class=\"w\"> </span><span class=\"n\">height_le.simps</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>gives</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"w\"> </span><span class=\"n\">w</span><span class=\"w\"> </span><span class=\"n\">∈</span><span class=\"w\"> </span><span class=\"n\">generated_set</span><span class=\"w\"> </span><span class=\"n\">τ</span><span class=\"w\"> </span><span class=\"n\">R</span><span class=\"w\"> </span><span class=\"ow\">{</span><span class=\"n\">r</span><span class=\"ow\">}</span><span class=\"w\"> </span><span class=\"n\">⟹</span>\n<span class=\"w\">    </span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"n\">∧</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">0</span><span class=\"w\"> </span><span class=\"n\">∨</span>\n<span class=\"w\">    </span><span class=\"o\">(</span><span class=\"n\">∃w</span><span class=\"w\"> </span><span class=\"n\">na</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"n\">vl</span><span class=\"w\"> </span><span class=\"n\">va.</span>\n<span class=\"w\">        </span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">va</span><span class=\"w\"> </span><span class=\"n\">∧</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">na</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">1</span><span class=\"w\"> </span><span class=\"n\">∧</span><span class=\"w\"> </span><span class=\"n\">height_le</span><span class=\"w\"> </span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"n\">τ</span><span class=\"w\"> </span><span class=\"n\">R</span><span class=\"w\"> </span><span class=\"n\">w</span><span class=\"w\"> </span><span class=\"n\">na</span><span class=\"w\"> </span><span class=\"n\">∧</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"n\">∈</span><span class=\"w\"> </span><span class=\"n\">τ</span><span class=\"w\"> </span><span class=\"n\">∧</span><span class=\"w\"> </span><span class=\"n\">R</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">w</span><span class=\"w\"> </span><span class=\"n\">#</span><span class=\"w\"> </span><span class=\"n\">vl</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">∧</span><span class=\"w\"> </span><span class=\"n\">va</span><span class=\"w\"> </span><span class=\"n\">∈</span><span class=\"w\"> </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">vl</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 489005534,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1734191990
    },
    {
        "content": "<p>rewrite reports error</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">Undefined</span><span class=\"w\"> </span><span class=\"n\">method</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"rewrite\"</span><span class=\"n\">⌂</span>\n</code></pre></div>",
        "id": 489005638,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1734192038
    },
    {
        "content": "<p>Oh maybe imports...</p>",
        "id": 489005645,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1734192045
    },
    {
        "content": "<p>yeah rewrite is somewhere</p>",
        "id": 489005687,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1734192090
    },
    {
        "content": "<p><a href=\"https://isabelle.in.tum.de/website-Isabelle2020/dist/library/HOL/HOL-ex/Rewrite_Examples.html\">https://isabelle.in.tum.de/website-Isabelle2020/dist/library/HOL/HOL-ex/Rewrite_Examples.html</a></p>",
        "id": 489005703,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1734192101
    },
    {
        "content": "<p>Great! Thanks!</p>",
        "id": 489005718,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1734192119
    },
    {
        "content": "<p><code>HOL-Library.Rewrite</code> and the link is the tutorial</p>",
        "id": 489005783,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1734192151
    },
    {
        "content": "<p>Nice to see it exists!</p>",
        "id": 489005817,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1734192181
    }
]