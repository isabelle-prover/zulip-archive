[
    {
        "content": "<p>I have following definition in my theory</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">definition</span><span class=\"w\"> </span><span class=\"n\">bits</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"nat ⇒ nat ⇒ nat ⇒ nat\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"_[[_:_]]\"</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">100</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">50</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">50</span><span class=\"o\">])</span><span class=\"w\"> </span><span class=\"kp\">where</span>\n<span class=\"w\">  </span><span class=\"s\">\"bits x i j ≡ nat (drop_bit j (take_bit (i+1) x))\"</span>\n</code></pre></div>\n<p>I am noticing that the following computation never completes for me, and the polyml process consumes enormous amount of system resources.</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kt\">value</span><span class=\"w\"> </span><span class=\"s\">\"(2::rat) powi (0x3f800000[[30:23]] - 127)\"</span>\n</code></pre></div>\n<p>However, this theorem is proved within a second:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">theorem</span><span class=\"w\"> </span><span class=\"s\">\"(2::rat) powi (0x3f800000[[30:23]] - 127) = 1\"</span>\n<span class=\"w\">  </span><span class=\"kp\">apply</span><span class=\"o\">(</span><span class=\"n\">simp</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">bits_def</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"k\">done</span>\n</code></pre></div>\n<p>What is going on here? What can I do to quickly evaluate and test a new definition?</p>",
        "id": 449208082,
        "sender_full_name": "Mayank Manjrekar",
        "timestamp": 1720151278
    },
    {
        "content": "<p>the easiest way is to generate the code with <code>export_code bits in SML</code> and have a look</p>",
        "id": 449219823,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1720156461
    },
    {
        "content": "<p>my guess without having any idea of your imports: you are using the Peano representation of integers instead of an efficient representation (which does not sound like a good idea for <code>0x3f800000</code>)</p>",
        "id": 449219884,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1720156527
    },
    {
        "content": "<p><del> from a bit of messing around, it looks like <code>value \"0x3f800000\"</code> by itself will loop </del></p>\n<p>my bad, I had [[simp_trace]] enabled, this isn't true</p>",
        "id": 449317267,
        "sender_full_name": "Yong Kiam",
        "timestamp": 1720187259
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Evaluation.20speed/near/449219884\">said</a>:</p>\n<blockquote>\n<p>my guess without having any idea of your imports: you are using the Peano representation of integers instead of an efficient representation (which does not sound like a good idea for <code>0x3f800000</code>)</p>\n</blockquote>\n<p>I am importing <code>Complex_Main</code>. Is that okay?</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">theory</span><span class=\"w\"> </span><span class=\"n\">Bits</span>\n<span class=\"w\">  </span><span class=\"kp\">imports</span><span class=\"w\"> </span><span class=\"n\">Complex_Main</span>\n<span class=\"k\">begin</span>\n</code></pre></div>",
        "id": 449346708,
        "sender_full_name": "Mayank Manjrekar",
        "timestamp": 1720195865
    },
    {
        "content": "<p>Add <code>\"HOL-Library.Code_Target_Nat\"</code> for native integers instead of the binary version of Peano…</p>",
        "id": 449369085,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1720202706
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">command</span><span class=\"w\"> </span><span class=\"s\">\"value\"</span>\n<span class=\"n\">0.185s</span><span class=\"w\"> </span><span class=\"n\">elapsed</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">0.334s</span><span class=\"w\"> </span><span class=\"n\">cpu</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">0.000s</span><span class=\"w\"> </span><span class=\"n\">GC</span><span class=\"w\"> </span><span class=\"n\">time</span>\n</code></pre></div>",
        "id": 449369126,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1720202717
    },
    {
        "content": "<p>Thank you. Could you please also tell me how to profile the \"value\" command, as you have done here?</p>",
        "id": 449391413,
        "sender_full_name": "Mayank Manjrekar",
        "timestamp": 1720210785
    },
    {
        "content": "<p>hovering with the mouse over the keyword <code>value</code></p>",
        "id": 449391892,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1720210963
    },
    {
        "content": "<p>That is not working for me in Jedit -- I only see that the output <code>1 :: rat</code> in the tooltip. But, nevermind, I discovered the Timing panel. Thank you!</p>",
        "id": 449394284,
        "sender_full_name": "Mayank Manjrekar",
        "timestamp": 1720212056
    },
    {
        "content": "<p>Control - hover, sorry</p>",
        "id": 449789767,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1720422312
    },
    {
        "content": "<p>Note that a significant part of that time will just be code generation and compilation.</p>",
        "id": 450554544,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1720642476
    }
]