[
    {
        "content": "<p>Hello,</p>\n<p>I am trying to export code to destinations relative to the session root after modifying them with <code>compile_generated_files</code>. I am calling <code>cp -r *</code> in the <code>where</code> block. Is there a way to avoid this?</p>\n<p>Thanks,</p>\n<p>David</p>\n<p>More info:</p>\n<p>The folder structure:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"ow\">..</span>\n<span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">&lt;session</span><span class=\"w\"> </span><span class=\"n\">root&gt;</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">ROOT</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">F1.thy</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">F2.thy</span>\n</code></pre></div>\n<p>The files:</p>\n<p><code>ROOT</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">session</span><span class=\"w\"> </span><span class=\"n\">Scratch</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">HOL</span><span class=\"w\"> </span><span class=\"o\">+</span>\n<span class=\"w\">  </span><span class=\"n\">options</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">document</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">pdf</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">document_output</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"output\"</span><span class=\"o\">]</span>\n<span class=\"w\">  </span><span class=\"n\">theories</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">document</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">false</span><span class=\"o\">]</span>\n<span class=\"w\">    </span><span class=\"n\">F1</span>\n<span class=\"w\">  </span><span class=\"n\">theories</span>\n<span class=\"w\">    </span><span class=\"n\">F2</span>\n<span class=\"w\">  </span><span class=\"n\">document_files</span>\n<span class=\"w\">    </span><span class=\"s\">\"root.tex\"</span>\n</code></pre></div>\n<p><code>F1</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">theory</span><span class=\"w\"> </span><span class=\"n\">F1</span>\n<span class=\"w\">  </span><span class=\"kp\">imports</span><span class=\"w\"> </span><span class=\"n\">Main</span>\n<span class=\"k\">begin</span>\n<span class=\"k\">definition</span><span class=\"w\"> </span><span class=\"s\">\"test x ≡ STR ''123''\"</span>\n\n<span class=\"k\">export_code</span><span class=\"w\"> </span><span class=\"n\">test</span>\n<span class=\"kp\">in</span><span class=\"w\"> </span><span class=\"n\">Eval</span><span class=\"w\"> </span><span class=\"kp\">module_name</span><span class=\"w\"> </span><span class=\"n\">Scratch</span><span class=\"w\"> </span><span class=\"n\">file_prefix</span><span class=\"w\"> </span><span class=\"s\">\"out\"</span>\n\n<span class=\"k\">end</span>\n</code></pre></div>\n<p><code>F2</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">theory</span><span class=\"w\"> </span><span class=\"n\">F2</span>\n<span class=\"w\">  </span><span class=\"kp\">imports</span><span class=\"w\"> </span><span class=\"n\">F1</span>\n<span class=\"k\">begin</span>\n\n<span class=\"n\">compile_generated_files</span><span class=\"w\"> </span><span class=\"s\">\"code/out.ML\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"kp\">in</span><span class=\"w\"> </span><span class=\"s\">\"F1\"</span><span class=\"o\">)</span>\n<span class=\"n\">export_files</span><span class=\"w\"> </span><span class=\"s\">‹code/out.ML›</span><span class=\"w\"> </span><span class=\"s\">‹text.txt›</span>\n<span class=\"n\">export_prefix</span><span class=\"w\"> </span><span class=\"s\">\"d\"</span>\n<span class=\"kp\">where</span><span class=\"w\">  </span><span class=\"s\">‹fn dir =&gt;</span>\n<span class=\"s\">    let</span>\n<span class=\"s\">      val exec = Generated_Files.execute dir;</span>\n<span class=\"s\">      val _ = exec ‹Modify› (\"echo 'println \\\"here\\\"' &gt;&gt; code/out.ML\");</span>\n\n<span class=\"s\">      val _  = exec ‹Make file› \"touch text.txt\";</span>\n\n<span class=\"s\">      val _ = exec ‹Move outside› (\"cp -r * \" ^ (Path.current |&gt; File.absolute_path |&gt; Path.implode));</span>\n<span class=\"s\">    in ()</span>\n<span class=\"s\">    end</span>\n<span class=\"s\">›</span>\n\n<span class=\"k\">end</span>\n</code></pre></div>",
        "id": 540256615,
        "sender_full_name": "David Wang",
        "timestamp": 1758207740
    }
]