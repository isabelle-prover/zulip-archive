[
    {
        "content": "<p>Firstly, code:</p>\n<p>Background:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">datatype</span><span class=\"w\"> </span><span class=\"n\">form</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">VAR</span><span class=\"w\"> </span><span class=\"s\">\"num\"</span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">FALSE</span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">DISJ</span><span class=\"w\"> </span><span class=\"s\">\"form\"</span><span class=\"w\"> </span><span class=\"s\">\"form\"</span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">NOT</span><span class=\"w\"> </span><span class=\"s\">\"form\"</span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">DIAM</span><span class=\"w\"> </span><span class=\"s\">\"form\"</span>\n\n<span class=\"k\">record</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"n\">frame</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">  </span><span class=\"n\">world</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'a ⇒ bool\"</span>\n<span class=\"w\">  </span><span class=\"n\">rel</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'a ⇒ 'a ⇒ bool\"</span>\n\n\n<span class=\"k\">record</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"n\">model</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"'a frame\"</span><span class=\"w\"> </span><span class=\"o\">+</span>\n<span class=\"w\">  </span><span class=\"n\">valt</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"num ⇒ 'a ⇒ bool\"</span>\n\n<span class=\"k\">fun</span><span class=\"w\"> </span><span class=\"n\">satis</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'a model ⇒ 'a ⇒ form ⇒ bool\"</span>\n<span class=\"kp\">where</span>\n<span class=\"s\">\"satis M w (VAR p) ⟷ (valt M p w ∧ world M w)\"</span>\n<span class=\"o\">|</span><span class=\"w\"> </span><span class=\"s\">\"satis M w FALSE ⟷ False\"</span>\n<span class=\"o\">|</span><span class=\"w\"> </span><span class=\"s\">\"satis M w (NOT f) ⟷ world M w ∧ ¬ satis M w f\"</span>\n<span class=\"o\">|</span><span class=\"w\"> </span><span class=\"s\">\"satis M w (DISJ f1 f2) ⟷ satis M w f1 ∨ satis M w f2\"</span>\n<span class=\"o\">|</span><span class=\"w\"> </span><span class=\"s\">\"satis M w (DIAM f) ⟷ world M w ∧ (∃ v. rel M w v ∧ world M v ∧ satis M v f)\"</span>\n</code></pre></div>",
        "id": 469734439,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1726161478
    },
    {
        "content": "<p>And the problem arises when I am attempting to translate this piece of HOL4 definition:</p>",
        "id": 469734517,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1726161504
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">val</span><span class=\"w\"> </span><span class=\"n\">valid_frame_state_def</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Define`</span>\n<span class=\"w\">    </span><span class=\"n\">valid_frame_state</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"n\">w</span><span class=\"w\"> </span><span class=\"n\">form</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"n\">M.</span><span class=\"w\"> </span><span class=\"n\">M.frame</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"n\">&gt;</span><span class=\"w\"> </span><span class=\"n\">satis</span><span class=\"w\"> </span><span class=\"n\">M</span><span class=\"w\"> </span><span class=\"n\">w</span><span class=\"w\"> </span><span class=\"n\">form`;</span>\n</code></pre></div>",
        "id": 469734565,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1726161525
    },
    {
        "content": "<p>The difference is: in HOL4, a \"frame\" is a \"field\" of a term of the record type \"model\". Like this:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">Datatype</span><span class=\"o\">:</span>\n<span class=\"w\">  </span><span class=\"n\">frame</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">&lt;</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">world</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">;</span>\n<span class=\"w\">             </span><span class=\"n\">rel</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">&gt;</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">&gt;</span><span class=\"w\"> </span><span class=\"n\">bool</span>\n<span class=\"w\">          </span><span class=\"o\">|</span><span class=\"n\">&gt;</span>\n<span class=\"n\">End</span>\n\n<span class=\"n\">Datatype</span><span class=\"o\">:</span>\n<span class=\"w\">  </span><span class=\"n\">model</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">&lt;</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">frame</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"n\">frame;</span>\n<span class=\"w\">             </span><span class=\"n\">valt</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">num</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">&gt;</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">&gt;</span><span class=\"w\"> </span><span class=\"n\">bool</span>\n<span class=\"w\">          </span><span class=\"o\">|</span><span class=\"n\">&gt;</span>\n<span class=\"n\">End</span>\n</code></pre></div>",
        "id": 469734788,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1726161623
    },
    {
        "content": "<p>However, now I cannot write <code>frame M</code> to extract the frame of a model as a field.</p>",
        "id": 469734851,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1726161648
    },
    {
        "content": "<p>So the naive guess </p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">definition</span><span class=\"w\"> </span><span class=\"n\">valid_frame_state_def</span><span class=\"o\">:</span>\n<span class=\"s\">\"valid_frame_state Fr w phi ≡ (⋀M. frame M = Fr ⟹ satis M w phi)\"</span>\n</code></pre></div>\n<p>will not work.</p>",
        "id": 469734908,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1726161670
    },
    {
        "content": "<p>The definition \"valid_frame_state\" says \"a modal formula phi is satisfied in a world w in a frame Fr iff for every model based on this frame, whatever the valuation of propositional letters are, the formula phi is satisfied at w\".</p>",
        "id": 469735135,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1726161758
    },
    {
        "content": "<p>How can I state that? Maybe it would be possible to re-assemble each component? But sound very not neat.</p>",
        "id": 469735228,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1726161805
    },
    {
        "content": "<p>I just realized that there exists the option of let a frame be a field of M, and not to use the \"+\". But I think the canonical Isabelle treatment in the code above would look (and possibly work?) better.</p>",
        "id": 469735733,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1726161986
    },
    {
        "content": "<p><a href=\"https://isabelle.in.tum.de/library/Doc/Tutorial/Records.html\">https://isabelle.in.tum.de/library/Doc/Tutorial/Records.html</a></p>",
        "id": 469737928,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1726162651
    },
    {
        "content": "<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>what to search for</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>search for truncate</p>\n</div></div>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>how to fix it</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p><code>\ndefinition valid_frame_state_def:\n\"valid_frame_state (Fr) w phi ≡ (⋀M. frame.truncate M =  Fr ⟹ satis M w phi)\"\n</code></p>\n</div></div>",
        "id": 469738247,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1726162761
    },
    {
        "content": "<p>That's a nice feature. Thank you! It is quickly fixed.</p>",
        "id": 469738876,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1726162939
    }
]