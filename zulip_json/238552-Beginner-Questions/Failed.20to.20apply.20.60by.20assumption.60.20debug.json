[
    {
        "content": "<p>Is there a way to debug, why <code>by assumption</code> fails?<br>\nI see a strange error while trying to prove a statement which <em>is</em> also an assumption:<br>\n<a href=\"/user_uploads/14278/dMOHXIQmDsNX-g9cLHMkhexD/image.png\">image.png</a><br>\n<a href=\"/user_uploads/14278/tjLwCXxaUIQ6AzFq0f02gFyo/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/dMOHXIQmDsNX-g9cLHMkhexD/image.png\" title=\"image.png\"><img src=\"/user_uploads/14278/dMOHXIQmDsNX-g9cLHMkhexD/image.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/14278/tjLwCXxaUIQ6AzFq0f02gFyo/image.png\" title=\"image.png\"><img src=\"/user_uploads/14278/tjLwCXxaUIQ6AzFq0f02gFyo/image.png\"></a></div>",
        "id": 318647865,
        "sender_full_name": "Robert Soeldner",
        "timestamp": 1672430440
    },
    {
        "content": "<p>You can try <code>supply [[unify_trace_failure]] by assumption</code>. This is probably because a type is not fixed correctly</p>",
        "id": 318882034,
        "sender_full_name": "Jan van Brügge",
        "timestamp": 1672591806
    },
    {
        "content": "<p>Indeed, you are right:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">The</span><span class=\"w\"> </span><span class=\"n\">following</span><span class=\"w\"> </span><span class=\"n\">types</span><span class=\"w\"> </span><span class=\"n\">do</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">unify</span><span class=\"o\">:</span><span class=\"w\"></span>\n<span class=\"o\">(</span><span class=\"n n-Type\">'x</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n n-Type\">'x</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n n-Type\">'y</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n n-Type\">'y</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">pre_morph</span><span class=\"w\"> </span><span class=\"n\">⇒</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">nat</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">nat</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">nat</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">nat</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">pre_morph</span><span class=\"w\"></span>\n<span class=\"o\">(</span><span class=\"n n-Type\">'ab</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n n-Type\">'ab</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n n-Type\">'ac</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n n-Type\">'ac</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">pre_morph</span><span class=\"w\"> </span><span class=\"n\">⇒</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">nat</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">nat</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">nat</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">nat</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">pre_morph</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Still, this was copy\\paste of an assumption. Why does it behave like this? It took me significant time until I've add type annotations ^^</p>",
        "id": 318888983,
        "sender_full_name": "Robert Soeldner",
        "timestamp": 1672595581
    },
    {
        "content": "<p>Additionally, where can I find the docs of <code>unify_trace_failure</code> ? <code>Isar-ref</code> does not list it.</p>",
        "id": 318890085,
        "sender_full_name": "Robert Soeldner",
        "timestamp": 1672596140
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"403618\">Robert Soeldner</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Failed.20to.20apply.20.60by.20assumption.60.20debug/near/318888983\">said</a>:</p>\n<blockquote>\n<p>Indeed, you are right:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">The</span><span class=\"w\"> </span><span class=\"n\">following</span><span class=\"w\"> </span><span class=\"n\">types</span><span class=\"w\"> </span><span class=\"n\">do</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">unify</span><span class=\"o\">:</span><span class=\"w\"></span>\n<span class=\"o\">(</span><span class=\"n n-Type\">'x</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n n-Type\">'x</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n n-Type\">'y</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n n-Type\">'y</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">pre_morph</span><span class=\"w\"> </span><span class=\"n\">⇒</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">nat</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">nat</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">nat</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">nat</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">pre_morph</span><span class=\"w\"></span>\n<span class=\"o\">(</span><span class=\"n n-Type\">'ab</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n n-Type\">'ab</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n n-Type\">'ac</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n n-Type\">'ac</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">pre_morph</span><span class=\"w\"> </span><span class=\"n\">⇒</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">nat</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">nat</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">nat</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">nat</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">pre_morph</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Still, this was copy\\paste of an assumption. Why does it behave like this? It took me significant time until I've add type annotations ^^</p>\n</blockquote>\n<p>why it behaves like this: Isabelle tries to find the most general possible type, so it does not restrict type to appear in the current goal</p>",
        "id": 318942394,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1672642943
    },
    {
        "content": "<p>Unification is mentioned in 5.8 of <a href=\"https://isabelle.in.tum.de/dist/Isabelle2022/doc/tutorial.pdf\">https://isabelle.in.tum.de/dist/Isabelle2022/doc/tutorial.pdf</a>, but the name of the flag is not given</p>",
        "id": 318942461,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1672643000
    },
    {
        "content": "<p>By the way, Isar applies <code>assumption</code> automatically if there are goals left (that’s at least roughly how it is); so you should be able to replace <code>by assumption</code> by the trivial <code>.</code>-proof.</p>",
        "id": 319503851,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1672883687
    }
]