[
    {
        "content": "<p>Hi, I am trying to solve a goal involving existentials. The proofs is provable by metis, but for what I want to do I need to do it without any fancy proof methods, only unfolding/rule/erule/etc. I simply fail to solve it. The goal in question is this:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">using</span> <span class=\"n\">this</span><span class=\"o\">:</span>\n  <span class=\"err\">∃</span><span class=\"n\">u.</span> <span class=\"n\">bij</span> <span class=\"n\">u</span> <span class=\"err\">∧</span> <span class=\"o\">|</span><span class=\"n\">supp</span> <span class=\"n\">u</span><span class=\"o\">|</span> <span class=\"err\">&lt;</span><span class=\"n\">o</span> <span class=\"o\">|</span><span class=\"n\">UNIV</span><span class=\"o\">|</span> <span class=\"err\">∧</span> <span class=\"n\">imsupp</span> <span class=\"n\">u</span> <span class=\"err\">∩</span> <span class=\"o\">(</span><span class=\"n\">FFVars_τ</span> <span class=\"o\">(</span><span class=\"n\">τ_ctor</span> <span class=\"o\">?</span><span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"err\">∪</span> <span class=\"n\">imsupp</span> <span class=\"o\">(</span><span class=\"n\">Rep_ssfun</span> <span class=\"o\">?</span><span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"err\">∪</span> <span class=\"ow\">{}</span> <span class=\"o\">-</span> <span class=\"n\">set2_τ_pre</span> <span class=\"o\">?</span><span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">=</span> <span class=\"ow\">{}</span> <span class=\"err\">∧</span> <span class=\"n\">u</span> <span class=\"sx\">` set2_τ_pre ?x ∩ (FFVars_τ (τ_ctor ?x) ∪ imsupp (Rep_ssfun ?p) ∪ {}) = {}</span>\n\n<span class=\"sx\">goal (1 subgoal):</span>\n<span class=\"sx\"> 1. ∃pick.</span>\n<span class=\"sx\">       ∀x p. bij (pick x p) ∧</span>\n<span class=\"sx\">             |supp (pick x p)| &lt;o |UNIV| ∧</span>\n<span class=\"sx\">             imsupp (pick x p) ∩ (FFVars_τ (τ_ctor x) ∪ imsupp (Rep_ssfun p) ∪ {} - set2_τ_pre x) = {} ∧ pick x p `</span> <span class=\"n\">set2_τ_pre</span> <span class=\"n\">x</span> <span class=\"err\">∩</span> <span class=\"o\">(</span><span class=\"n\">FFVars_τ</span> <span class=\"o\">(</span><span class=\"n\">τ_ctor</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"err\">∪</span> <span class=\"n\">imsupp</span> <span class=\"o\">(</span><span class=\"n\">Rep_ssfun</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"err\">∪</span> <span class=\"ow\">{}</span><span class=\"o\">)</span> <span class=\"o\">=</span> <span class=\"ow\">{}</span>\n</code></pre></div>\n<p>What am I doing wrong?</p>",
        "id": 290890617,
        "sender_full_name": "Jan van Brügge",
        "timestamp": 1658842265
    }
]