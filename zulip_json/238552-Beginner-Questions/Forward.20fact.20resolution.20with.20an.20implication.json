[
    {
        "content": "<p>Hi :)</p>\n<p>Assume I have some lemma <code>a</code>, which states that some implication holds, and a lemma <code>b</code> that shows some conclusion under the assumption that such an implication is satisfied, e.g.:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">theory</span><span class=\"w\"> </span><span class=\"n\">Scratch</span>\n<span class=\"w\">  </span><span class=\"kp\">imports</span><span class=\"w\"> </span><span class=\"n\">Main</span>\n<span class=\"k\">begin</span>\n\n<span class=\"k\">definition</span><span class=\"w\"> </span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"kp\">where</span><span class=\"w\"> </span><span class=\"s\">\"P ≡ undefined\"</span>\n<span class=\"k\">definition</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"kp\">where</span><span class=\"w\"> </span><span class=\"s\">\"f ≡ undefined\"</span>\n\n<span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"P a ⟹ P b ⟹ P (f a b)\"</span>\n<span class=\"w\">  </span><span class=\"gr\">sorry</span>\n<span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"o\">:</span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"⋀a b. (Q a ⟹ Q b ⟹ Q (g a b))\"</span>\n<span class=\"w\">  </span><span class=\"kp\">shows</span><span class=\"w\"> </span><span class=\"s\">\"∀a ∈ set as. Q a ⟹ ∀b ∈ set bs. Q b ⟹ ∀c ∈ set (map2 g as bs). Q c\"</span>\n<span class=\"w\">  </span><span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Now, I would like to resolve the assumption of <code>b</code> with <code>OF a</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kt\">thm</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"o\">[</span><span class=\"n\">OF</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>However, this does not work and produces the following exception, which I don't understand:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">exception</span><span class=\"w\"> </span><span class=\"n\">THM</span><span class=\"w\"> </span><span class=\"n\">0</span><span class=\"w\"> </span><span class=\"n\">raised</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"n\">313</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"s\">\"drule.ML\"</span><span class=\"o\">):</span>\n<span class=\"w\">  </span><span class=\"n\">OF</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">multiple</span><span class=\"w\"> </span><span class=\"n\">unifiers</span>\n<span class=\"w\">  </span><span class=\"o\">(</span><span class=\"n\">⋀a</span><span class=\"w\"> </span><span class=\"n\">b.</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">Q</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">⟹</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">Q</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">⟹</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">Q</span><span class=\"w\"> </span><span class=\"o\">(?</span><span class=\"n\">g</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"o\">))</span><span class=\"w\"> </span><span class=\"n\">⟹</span>\n<span class=\"w\">  </span><span class=\"n\">∀a∈set</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">as.</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">Q</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">⟹</span>\n<span class=\"w\">  </span><span class=\"n\">∀b∈set</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">bs.</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">Q</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">⟹</span><span class=\"w\"> </span><span class=\"n\">∀c∈set</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">map2</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">g</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">as</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">bs</span><span class=\"o\">)</span><span class=\"ow\">.</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">Q</span><span class=\"w\"> </span><span class=\"n\">c</span>\n<span class=\"w\">  </span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">⟹</span><span class=\"w\"> </span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">⟹</span><span class=\"w\"> </span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">b</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>However, the following works:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kt\">thm</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"o\">[</span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">OF</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>...although it introduces some trivial assumptions:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"o\">(</span><span class=\"n\">⋀a</span><span class=\"w\"> </span><span class=\"n\">b.</span><span class=\"w\"> </span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">⟹</span><span class=\"w\"> </span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">⟹</span><span class=\"w\"> </span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">⟹</span>\n<span class=\"o\">(</span><span class=\"n\">⋀a</span><span class=\"w\"> </span><span class=\"n\">b.</span><span class=\"w\"> </span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">⟹</span><span class=\"w\"> </span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">⟹</span><span class=\"w\"> </span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">⟹</span>\n<span class=\"n\">∀a∈set</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">as.</span><span class=\"w\"> </span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">⟹</span><span class=\"w\"> </span><span class=\"n\">∀b∈set</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">bs.</span><span class=\"w\"> </span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">⟹</span><span class=\"w\"> </span><span class=\"n\">∀c∈set</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">map2</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">as</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">bs</span><span class=\"o\">)</span><span class=\"ow\">.</span><span class=\"w\"> </span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"n\">c</span>\n</code></pre></div>\n<p>Does anyone have a tip on how to approach this situation? :)</p>",
        "id": 390685006,
        "sender_full_name": "Jakob Schulz",
        "timestamp": 1694598197
    },
    {
        "content": "<p>As for why the first attempt does not work: <code>OF</code> doesn’t just use its argument as the premise of the manipulated fact but only the conclusion of its argument, inserting the premises of its argument as new premises into the manipulated fact.</p>",
        "id": 390698643,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1694603216
    },
    {
        "content": "<p>Your <code>P</code> is polymorphic. In your theorem <code>a</code>, the first argument of <code>P</code> has type <code>'a</code> and the second argument has type <code>'b</code>. You have to specify these types to help the unification algorithm. Try <code>thm b[of \"P :: 'b ⇒ bool\" f, OF a[of \"_ :: 'b\" \"_ :: 'b\"]] </code>. You can look at the types by ctrl/cmnd + hovering over a term in Isabelle jedit or by typing <code>declare [[show_types]]\n</code> before your lemmas. In general, it is unorthodox to unify higher-order terms (which you do when you try to match the hypothesis with the implication <code>⟹</code>).</p>",
        "id": 390698985,
        "sender_full_name": "Jonathan Julian Huerta y Munive",
        "timestamp": 1694603339
    },
    {
        "content": "<p>Hmm, maybe what <em>I</em> described was more the reason for <span class=\"user-mention\" data-user-id=\"422558\">@Jakob Schulz</span>’s second problem instead of his first.</p>",
        "id": 390699192,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1694603420
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"422558\">Jakob Schulz</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Forward.20fact.20resolution.20with.20an.20implication/near/390685006\">said</a>:</p>\n<blockquote>\n<p>Now, I would like to resolve the assumption of <code>b</code> with <code>OF a</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kt\">thm</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"o\">[</span><span class=\"n\">OF</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>However, this does not work and produces the following exception, which I don't understand:</p>\n</blockquote>\n<p>The problem is what the error message says: There isn't a unique solution when unifying the conclusion of <code>a</code> with the conclusion of the first subgoal of <code>b</code> and <code>OF</code>, rather than succeeding with some solution, is programmed to fail in such circumstances.</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"ow\">...</span><span class=\"n\">although</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">introduces</span><span class=\"w\"> </span><span class=\"n\">some</span><span class=\"w\"> </span><span class=\"n\">trivial</span><span class=\"w\"> </span><span class=\"n\">assumptions</span><span class=\"o\">:</span>\n</code></pre></div>\n<p>That's because <code>b[OF a]</code>does discharge the first premise of <code>b</code> with <code>a</code> but rather, as mentioned above, resolves the conclusion of the first subgoal of <code>b</code> with the conclusion of <code>a</code>. It is like you would use <code>apply (rule a)</code> on subgoal 1 of <code>b</code>.</p>",
        "id": 390703740,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1694605166
    },
    {
        "content": "<p>The solution is to pre-instantiate the theorems to obtain a unique unification result, as you did above in <code>thm b[of P f, OF a]</code>.<br>\nAs an alternative, I wrote <a href=\"https://github.com/kappelmann/ml-unification-isabelle\">some tools</a> that will hopefully be published in the AFP soon, which, among other things, let you write <code>b[uOF a]</code> to obtain the result that you expected (shameless plug).</p>",
        "id": 390704481,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1694605423
    },
    {
        "content": "<p>Please replace <code>uOF</code> by a better name. This bare mix of lower and upper case letters is completely against established Isabelle conventions.</p>",
        "id": 390720120,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1694610603
    },
    {
        "content": "<p>There's also <code>urule</code>, <code>ufact</code>, <code>uassm</code>, etc. The <code>u</code> stands for \"unification\", since these methods correspond to the known ones from the standard distribution but additionally allow the specification of a unifier. I don't know whether <code>UOF</code> would be an improvement over <code>uOF</code> from that perspective. But I'm open to suggestions.</p>",
        "id": 390724127,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1694611855
    }
]