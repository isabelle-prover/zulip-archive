[
    {
        "content": "<p>I remember there are some functions that manipulates on theorems, say, give an iff thm, it turns <code>A \\equiv B</code> into <code>A ==&gt;B</code> or <code>B ==&gt;A</code>. And there is also a function, maybe called <code>conjunction1</code> <code>conjunction2</code> or something like that, that takes a <code>A /\\ B</code> into <code>A</code> and <code>B</code>.</p>\n<p>I like them, but forgot their names, are they documented somewhere?</p>",
        "id": 488114844,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1733928158
    },
    {
        "content": "<p>iffD1 and iffD2</p>",
        "id": 488114988,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1733928203
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kt\">find_theorems</span><span class=\"w\"> </span><span class=\"s\">\"?A = ?B ⟹ ?A ⟹ ?B\"</span>\n</code></pre></div>",
        "id": 488115267,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1733928272
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/channel/238552-Beginner-Questions/topic/Functions.20that.20applies.20to.20theorems/near/488114988\">said</a>:</p>\n<blockquote>\n<p>iffD1 and iffD2</p>\n</blockquote>\n<p>Thanks! Is iffD1[OF sth] the only thing to do here? I saw somewhere it is possible to write sth[... a function] to take one direction of the sth.</p>",
        "id": 488124916,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1733930735
    },
    {
        "content": "<p>Oh I found it in my old files.<br>\nsth[unfolded sth_def, THEN conjunct2,THEN conjunct2,THEN conjunct2,<br>\n        THEN conjunct2]</p>",
        "id": 488126021,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1733931010
    },
    {
        "content": "<p>And I can also do [THEN iffD1].</p>",
        "id": 488126133,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1733931043
    },
    {
        "content": "<p>Note that these things like <code>OF</code>, <code>of</code>, <code>THEN</code>, <code>symmetric</code> etc. are called <em>attributes</em>. In this form they typically transform one or more theorems in some way.</p>",
        "id": 490033018,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1734635941
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232736\">Manuel Eberl</span> <a href=\"#narrow/channel/238552-Beginner-Questions/topic/Functions.20that.20applies.20to.20theorems/near/490033018\">said</a>:</p>\n<blockquote>\n<p>Note that these things like <code>OF</code>, <code>of</code>, <code>THEN</code>, <code>symmetric</code> etc. are called <em>attributes</em>. In this form they typically transform one or more theorems in some way.</p>\n</blockquote>\n<p>Thank you for the terminology! I asked an expert to look up these things, and the conclusion is that this is documented in <br>\n<a href=\"https://isabelle.in.tum.de/dist/Isabelle2024/doc/isar-ref.pdf\">https://isabelle.in.tum.de/dist/Isabelle2024/doc/isar-ref.pdf</a><br>\non page 323. There are very little of them and is not such flexible. I am then taught that unlike in HOL4, Isabelle intends to let the user write things out, and the community does not appreciate that style. (That is a bit sad for me, but I will live with it.)</p>",
        "id": 490043625,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1734639804
    },
    {
        "content": "<p>Btw, is there a way to use, e.g. THEN, to split a rule into multiple conclusions?</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">conj3</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"A ∧ B ∧ C\"</span><span class=\"w\"> </span><span class=\"kp\">shows</span><span class=\"w\"> </span><span class=\"s\">\"A\"</span><span class=\"w\"> </span><span class=\"s\">\"B\"</span><span class=\"w\"> </span><span class=\"s\">\"C\"</span><span class=\"w\"> </span><span class=\"gr\">sorry</span>\n<span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"(0::nat) &lt; 3 ∧ (0::nat) &lt; 6 ∧ (0::nat) &lt; 9\"</span><span class=\"w\"> </span><span class=\"gr\">sorry</span>\n<span class=\"kt\">thm</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"o\">[</span><span class=\"n\">THEN</span><span class=\"w\"> </span><span class=\"n\">conj3</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"c\">(* Error: Expected singleton fact \"conj3\" (length 3) *)</span>\n</code></pre></div>",
        "id": 490149230,
        "sender_full_name": "Maximilian Vollath",
        "timestamp": 1734696660
    },
    {
        "content": "<p>How about <code>conj3[OF a]</code>?</p>",
        "id": 490156402,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1734699591
    },
    {
        "content": "<p>Oops <span aria-label=\"laughter tears\" class=\"emoji emoji-1f602\" role=\"img\" title=\"laughter tears\">:laughter_tears:</span> Yep that's exactly what I wanted</p>",
        "id": 490157645,
        "sender_full_name": "Maximilian Vollath",
        "timestamp": 1734700044
    },
    {
        "content": "<p>Nice! That is helpful as well!</p>",
        "id": 490216876,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1734722014
    }
]