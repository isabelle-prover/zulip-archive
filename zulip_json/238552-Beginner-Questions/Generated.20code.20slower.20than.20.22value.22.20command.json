[
    {
        "content": "<p>Hi all,</p>\n<p>I've written an Isabelle algorithm and exported it to Scala. It seems that the Scala code runs much slower than when using the \"value\" command within Isabelle, even when I compile the Scala with -opt:inline:**.</p>\n<p>I thought the \"value\" command uses Scala behind the scenes, so I expected the performance of the generated code to match the performance of \"value\". What can I do to get the performance of my generated code, whether in Scala or another language, to match the \"value\" command's performance?</p>\n<p>Thanks</p>",
        "id": 455033434,
        "sender_full_name": "Sage Binder",
        "timestamp": 1722318097
    },
    {
        "content": "<p>eval is using Standard ML (more precisely the PolyML compiler)</p>",
        "id": 455074831,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1722330586
    },
    {
        "content": "<p>Without knowing exactly what you did it is hard to know where the problem comes from. But: </p>\n<ul>\n<li>Scala and java do not immediately JIT compile the code there are using. </li>\n<li>for better code performance you want the native integers instead of the default Peano representation</li>\n<li>(rather unlikely but depends on your code) when using native 32-bit uint, scala suffers from the encoding as there are no unsigned in java</li>\n</ul>",
        "id": 455076170,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1722330852
    },
    {
        "content": "<p>Wasn't there also an issue about curried functions being slow in scala or has that been resolved?</p>",
        "id": 455471263,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1722455565
    },
    {
        "content": "<p>I am not aware of an issue, but I though that the generated code was uncurried in scala by default?</p>",
        "id": 455591081,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1722501661
    }
]