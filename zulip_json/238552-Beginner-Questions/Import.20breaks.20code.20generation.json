[
    {
        "content": "<p>Hi all, I am trying to write some executable code, but am running into an issue when importing certain files.  In particular, I want to be able to import some files that depend on \"Containers.Set_Impl\",  but importing \"Containers.Set_Impl\" changes which definitions are executable.  It looks like Containers.Set_Impl uses \"code drop\", which might be contributing to or causing the problem.  In any case, I have attached MWEs for two of the definitions that are executable until loading this file.  Any thoughts on what exactly is causing the issue and how I can fix it would be greatly appreciated.</p>\n<p><a href=\"/user_uploads/14278/5LygfOJkzqUUU1OHluroUipw/Test1.thy\">Test1.thy</a><br>\n<a href=\"/user_uploads/14278/5DEHgQUpoBzYKnEj9OURpAb7/Test.thy\">Test.thy</a></p>",
        "id": 417484965,
        "sender_full_name": "Katherine Kosaian",
        "timestamp": 1706027921
    },
    {
        "content": "<p>So, the idea of <code>Containers.Set_Impl</code> is to implement a more efficient replacement for sets (assuming that some type classes are there).</p>\n<p>Solution 1: you actually do not care about the more efficient efficient. Then remove the import.</p>\n<p>Solution 2: you want the more efficient implementation. Then you actually need to get the right type-classes. There are already various instantiation in <code>Factor_Algebraic_Polynomial</code>, so either you use <code>derive</code> too or you import those theories</p>",
        "id": 417530184,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1706044658
    },
    {
        "content": "<p>By copy-pasting and doing a lot of grep:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">derive</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">eq</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">ceq</span><span class=\"w\"> </span><span class=\"n\">poly_mapping</span>\n<span class=\"n\">derive</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">no</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">ccompare</span><span class=\"w\"> </span><span class=\"n\">poly_mapping</span>\n<span class=\"n\">derive</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">dlist</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">set_impl</span><span class=\"w\"> </span><span class=\"n\">poly_mapping</span>\n\n\n<span class=\"n\">derive</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">eq</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">ceq</span><span class=\"w\"> </span><span class=\"n\">real</span>\n<span class=\"n\">derive</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">compare</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">ccompare</span><span class=\"w\"> </span><span class=\"n\">real</span>\n<span class=\"n\">derive</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">dlist</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">set_impl</span><span class=\"w\"> </span><span class=\"n\">complex</span><span class=\"w\"> </span><span class=\"n\">real</span>\n\n<span class=\"c\">(* This is executable without loading Containers.Set_Impl*)</span>\n<span class=\"kt\">value</span><span class=\"w\"> </span><span class=\"s\">\"vars (Var 0::real mpoly)\"</span>\n</code></pre></div>",
        "id": 417530518,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1706044801
    },
    {
        "content": "<p>For Test1 the problem is different and due to a faulty code equation. You can remove the code equation <code>lemmas [code del] = prod.set_conv_list</code>, but then there is no equation to execute the code.</p>",
        "id": 417531089,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1706045018
    },
    {
        "content": "<p>I think that this would require to extend Set_impl properly to support the product operation</p>",
        "id": 417531332,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1706045102
    },
    {
        "content": "<p>This was very useful; thank you!!</p>",
        "id": 418075504,
        "sender_full_name": "Katherine Kosaian",
        "timestamp": 1706188008
    }
]