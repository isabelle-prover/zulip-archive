[
    {
        "content": "<p>I tried to inspect the context with</p>\n<p>theorem \"A ⟹ A\"<br>\nproof -<br>\nML ‹ val foo = @{context} ›</p>\n<p>but the system pointed to the problem that</p>\n<p>\"Bad context for command \"ML\"⌂ -- using reset state \"</p>\n<p>What is wrong here with my ML code?</p>",
        "id": 207248816,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1597750651
    },
    {
        "content": "<p>The ML command works at the same level as 'lemma'.</p>",
        "id": 207248956,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1597750773
    },
    {
        "content": "<p>So ML does not work inside proofs, but I don't know how to call ML inside proofs...</p>",
        "id": 207249037,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1597750826
    },
    {
        "content": "<p>I see, thanks.</p>",
        "id": 207249061,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1597750845
    },
    {
        "content": "<p><code>ML_prf</code></p>",
        "id": 207249082,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1597750861
    },
    {
        "content": "<p>Indeed, <span class=\"user-mention\" data-user-id=\"232736\">@Manuel Eberl</span> . Next question: Proof.context seems to be an abstract data type. Is there a function that shows its contents? I did not find one in the Isabelle Cookbook.</p>",
        "id": 207249189,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1597750958
    },
    {
        "content": "<p>ML_val works, but Manuel was faster</p>",
        "id": 207249250,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1597751035
    },
    {
        "content": "<p><code>ML_val</code>should be stateless though.</p>",
        "id": 207249305,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1597751065
    },
    {
        "content": "<p>Looks like a proof context is basically just a theory plus some extra generic data</p>",
        "id": 207249483,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1597751207
    },
    {
        "content": "<p>don't think you can access that extra data directly</p>",
        "id": 207249492,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1597751221
    },
    {
        "content": "<p>I am not convinced looking inside a context is a good idea. ASFAIK contexts are a nightmare that no-one really understands.</p>",
        "id": 207249503,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1597751231
    },
    {
        "content": "<p>I see, <span class=\"user-mention\" data-user-id=\"233198\">@Mathias Fleury</span></p>",
        "id": 207249615,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1597751318
    },
    {
        "content": "<p>Basically, whenever I try manipulating contexts, I try to either (i) find an example somewhere in the ML files or (ii) find a email from Makarius where (he rants that whoever asks is doing it wrong and) gives the \"correct\" way to do it</p>",
        "id": 207249845,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1597751500
    },
    {
        "content": "<p>But maybe Manuel knows a better way...</p>",
        "id": 207249904,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1597751540
    },
    {
        "content": "<p>What do you mean by \"manipulating contexts\"?</p>",
        "id": 207250198,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1597751779
    },
    {
        "content": "<p>But yeah I haven't really understood how to work with contexts myself. There are still many things about them that I have no idea how to do because I never needed to do them, fortunately.</p>",
        "id": 207250235,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1597751825
    },
    {
        "content": "<p>Context manipulation I did:</p>\n<ul>\n<li>At some point I tried to localise some simprocs</li>\n<li>Declaring assumptions, variables (currently extending Isabelle smt tactic to supports veriT)</li>\n</ul>",
        "id": 207250282,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1597751882
    },
    {
        "content": "<p>My, probably failed idea was to understand better basic Isar primitives by looking at the Isar Virtual Machine state transitions. From your contribution it seems that this is not a doable way. I digged into the Isar codebase but it is hard to understand what is going on.</p>",
        "id": 207250385,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1597751975
    },
    {
        "content": "<p>That is way beyond what I ever tried to understand. I cannot really help you for that.</p>",
        "id": 207250504,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1597752050
    },
    {
        "content": "<p>I mean you can do <code>print_context</code> in Isar and that will at least show you the fixed variables and assumptions, I think…</p>",
        "id": 207250608,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1597752130
    },
    {
        "content": "<p>Jasmin once told me that Isar is basically mapping everything to the corresponding tactic (<code>subgoal_tac</code>) and hiding it nicely via keywords</p>",
        "id": 207250637,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1597752167
    }
]