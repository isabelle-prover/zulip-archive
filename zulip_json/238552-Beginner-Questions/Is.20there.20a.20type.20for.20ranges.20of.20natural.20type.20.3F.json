[
    {
        "content": "<p>Hi, <br>\nIf I have a domain of functions where input is {1..n} and output is {1..m},  can I express this as type?</p>",
        "id": 400286185,
        "sender_full_name": "Ruslan Shevchenko",
        "timestamp": 1699094660
    },
    {
        "content": "<p>Can you express this as a type? Yes, this is similar to the setup for words in HOL-Library.Word</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">typedef</span><span class=\"w\">  </span><span class=\"o\">(</span><span class=\"kp\">overloaded</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"n\">bound</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"{n. n ≤ LENGTH('a::len0)}\"</span>\n<span class=\"w\">  </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">auto</span>\n\n<span class=\"k\">definition</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">‹3 bound ⇒ 5 bound›</span><span class=\"w\"> </span><span class=\"kp\">where</span>\n<span class=\"s\">‹test = undefined›</span>\n</code></pre></div>\n<p>Should you do it? I do not think so. Typelifting and co is not really easy to use and very annoying. It will be a lot easier to have an precondition on the function.</p>",
        "id": 400290259,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1699096757
    },
    {
        "content": "<p>Thanks,  will recheck.</p>",
        "id": 400297724,
        "sender_full_name": "Ruslan Shevchenko",
        "timestamp": 1699103842
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Is.20there.20a.20type.20for.20ranges.20of.20natural.20type.20.3F/near/400290259\">said</a>:</p>\n<blockquote>\n<p>Can you express this as a type? Yes, this is similar to the setup for words in HOL-Library.Word</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">typedef</span><span class=\"w\">  </span><span class=\"o\">(</span><span class=\"kp\">overloaded</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"n\">bound</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"{n. n ≤ LENGTH('a::len0)}\"</span>\n<span class=\"w\">  </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">auto</span>\n\n<span class=\"k\">definition</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">‹3 bound ⇒ 5 bound›</span><span class=\"w\"> </span><span class=\"kp\">where</span>\n<span class=\"s\">‹test = undefined›</span>\n</code></pre></div>\n<p>Should you do it? I do not think so. Typelifting and co is not really easy to use and very annoying. It will be a lot easier to have an precondition on the function.</p>\n</blockquote>\n<p>This is very interesting. I’ve never head of <code>LENGTH</code> and <code>len0</code>. Where is this introduced, and where is this documented? Is this about type-level natural numbers? Also, what is the difference between <code>len0</code> and <code>len</code>, which the <code>Word</code> theory uses?</p>",
        "id": 402719741,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1700234244
    },
    {
        "content": "<p>len0 is the same as len but non-zero</p>",
        "id": 402720516,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1700234427
    },
    {
        "content": "<p>Mostly because words of length 0 are weird</p>",
        "id": 402720617,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1700234456
    },
    {
        "content": "<p>I see. Is there any documentation of <code>LENGTH</code>, <code>len</code>, and <code>len0</code> somewhere? At the moment, I’m not sure what these exactly are and how to use them.</p>",
        "id": 402721129,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1700234589
    },
    {
        "content": "<p>I don't think that there is much besides the point where this is defined (<a href=\"https://www.isa-afp.org/browser_info/devel/HOL/HOL-Word/Type_Length.html\">https://www.isa-afp.org/browser_info/devel/HOL/HOL-Word/Type_Length.html</a>)</p>",
        "id": 402724111,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1700235379
    },
    {
        "content": "<p>Well, that’s certainly pretty illuminating.</p>",
        "id": 402731104,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1700237496
    }
]