[
    {
        "content": "<p>I want to embed LaTeX into the main formalization file to explain and highlight the important proofs and explain design decisions. So unnecessary proofs will be hidden in the rendered pdf.</p>\n<p>Now I am wondering how I can have an Appendix with the full formalization without copying the whole file twice and removing the embedded LaTeX and remove the comments to make the other parts non hidden</p>",
        "id": 305111357,
        "sender_full_name": "waynee95",
        "timestamp": 1666258377
    },
    {
        "content": "<p>I've seen that you can \"tag\" certain Isabelle commands and use those tags to generate the .pdf in a customised way. For instance, if you use tags <code>%exercise</code> and <code>%solution</code> as shown below:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">text_raw</span><span class=\"w\"> </span><span class=\"n\">%exercise</span><span class=\"w\"> </span><span class=\"s\">‹ \\pagebreak[3] ›</span><span class=\"w\"></span>\n\n<span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">%solution</span><span class=\"w\"> </span><span class=\"s\">\"a * b = b * (a :: nat)\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">simp</span><span class=\"w\"></span>\n\n<span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"s\">\"add n 0 = n\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"n\">%solution</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">induction</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">)</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"n\">simp_all</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">done</span><span class=\"w\"></span>\n</code></pre></div>\n<p>and if your <code>ROOT</code> file contains something like:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">session</span><span class=\"w\"> </span><span class=\"s\">\"session_name\"</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Main</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">options</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">document</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">pdf</span><span class=\"o\">,</span><span class=\"w\">  </span><span class=\"n\">document_output</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"output\"</span><span class=\"o\">,</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"n\">document_variants</span><span class=\"o\">=</span><span class=\"s\">\"exercise_pdf_name=+exercise,-solution:solution_pdf_name=+solution,-exercise\"</span><span class=\"o\">]</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">theories</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">theory_name</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">document_files</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"kp\">in</span><span class=\"w\"> </span><span class=\"s\">\"../document\"</span><span class=\"o\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"s\">\"root.tex\"</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Then there will be two generated pdfs. One called <code>exercise_pdf_name</code> showing things tagged with <code>%exercise</code> but not with <code>%solution</code> (notice the <code>+</code> and the <code>-</code>), and one called <code>solution_pdf_name</code> showing those tagged with <code>%solution</code> but not with <code>%exercise</code>.</p>\n<p>There is also the <code>%invisible</code> tag that seems to be automatically skipped in the .pdf generation process. My knowledge on this is only practical, so if anyone can complement with the correct description of how tagging works, I would gladly learn more. I hope this is useful.</p>",
        "id": 305137820,
        "sender_full_name": "Jonathan Julian Huerta y Munive",
        "timestamp": 1666268539
    },
    {
        "content": "<p>Is there a convention for referencing certain facts/definitions in already submitted AFP entries in another publication:</p>\n<p>I usually write something like \"lemma left_id~\\cite[Sect. 1]{Hello_World-AFP}\" which then becomes:<br>\nlemma left_id [Sect. 1,xy]</p>\n<p>Here: Hello_World-AFP is the bibtex entry from the AFP.</p>\n<p>The problem with this solution is that it requires multiple steps for someone to actually find the corresponding lemma, when looking it up. (Open the outline, look for the right section, find the corresponding lemma.)</p>\n<p>It would technically be possible to use a hyperref to directly link to it, i.e. something like:<br>\n\\href{https://www.isa-afp.org/theories/hello_world/#IO.html#IO.left_id|fact}{lemma left_id}</p>\n<p>However, I am worried the latter may fail after possible changes on the website, i.e. it doesn't seem to be a permalink.<br>\nWhat is the best approach, here?</p>",
        "id": 350773648,
        "sender_full_name": "Emin Karayel",
        "timestamp": 1681822870
    },
    {
        "content": "<p>What is the result if you use document antiquotations such as <code>@{thm left_id}</code>? This requires you to import the entry, though.</p>",
        "id": 350777790,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1681823716
    },
    {
        "content": "<p>Thanks, though in this case I don't have an isabelle theory to cite from. I want to reference an entity from a paper (that is not an Isabelle document). </p>\n<p>For example, when you cite a lemma from a paper in a different paper, you would usually write:<br>\n\\cite[Lemma 2.1]{agrawal2004}</p>\n<p>I would like to do the same thing from a paper into a lemma in an AFP Entry.</p>",
        "id": 350782638,
        "sender_full_name": "Emin Karayel",
        "timestamp": 1681824700
    },
    {
        "content": "<p>IMHO the best option currently is to cite the entry (the AFP is a dblp-indexed journal after all) and the definition/lemma number in that entry, which you can define and keep consistent yourself (assuming you are the entry author). All other options are not stable.</p>",
        "id": 350815535,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1681831775
    }
]