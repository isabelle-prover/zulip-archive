[
    {
        "content": "<p>My goal looks like:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">⋀x</span><span class=\"w\"> </span><span class=\"n\">vl.</span>\n<span class=\"w\">       </span><span class=\"n\">cwff</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">τ</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">Φ</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">cBOX</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"n\">fl</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">⟹</span>\n<span class=\"w\">       </span><span class=\"n\">∀m</span><span class=\"w\"> </span><span class=\"n\">wl.</span><span class=\"w\"> </span><span class=\"n\">R</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"n\">wl</span><span class=\"w\"> </span><span class=\"n\">⟶</span><span class=\"w\"> </span><span class=\"n\">length</span><span class=\"w\"> </span><span class=\"n\">wl</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Suc</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">snd</span><span class=\"w\"> </span><span class=\"n\">τ</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">⟹</span>\n<span class=\"w\">       </span><span class=\"n\">∀m</span><span class=\"w\"> </span><span class=\"n\">wl.</span><span class=\"w\"> </span><span class=\"n\">R</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"n\">wl</span><span class=\"w\"> </span><span class=\"n\">⟶</span><span class=\"w\"> </span><span class=\"n\">list_all</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">λw.</span><span class=\"w\"> </span><span class=\"n\">w</span><span class=\"w\"> </span><span class=\"n\">∈</span><span class=\"w\"> </span><span class=\"n\">W</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">wl</span><span class=\"w\"> </span><span class=\"n\">⟹</span>\n<span class=\"w\">       </span><span class=\"n\">∀m.</span><span class=\"w\"> </span><span class=\"n\">Ex</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">⟶</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"n\">∈</span><span class=\"w\"> </span><span class=\"n\">fst</span><span class=\"w\"> </span><span class=\"n\">τ</span><span class=\"w\"> </span><span class=\"n\">⟹</span>\n<span class=\"w\">       </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">∈</span><span class=\"w\"> </span><span class=\"n\">W</span><span class=\"w\"> </span><span class=\"n\">⟹</span>\n<span class=\"w\">       </span><span class=\"n\">csatis</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">τ</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">Φ</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">W</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">R</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">V</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">w</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">cBOX</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"n\">fl</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">⟹</span>\n<span class=\"w\">       </span><span class=\"n\">length</span><span class=\"w\"> </span><span class=\"n\">vl</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">length</span><span class=\"w\"> </span><span class=\"n\">fl</span><span class=\"w\"> </span><span class=\"n\">⟹</span>\n<span class=\"w\">       </span><span class=\"n\">R</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">w</span><span class=\"w\"> </span><span class=\"n\">#</span><span class=\"w\"> </span><span class=\"n\">vl</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">⟹</span>\n<span class=\"w\">       </span><span class=\"n\">∃i&lt;length</span><span class=\"w\"> </span><span class=\"n\">fl.</span>\n<span class=\"w\">          </span><span class=\"n\">csatis</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">τ</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">Φ</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">W</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">R</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">V</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">vl</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">fl</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 476493089,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1728708974
    },
    {
        "content": "<p>I would like to write in the format</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">fix</span><span class=\"w\"> </span><span class=\"n\">w</span><span class=\"w\"> </span><span class=\"n\">vl</span>\n<span class=\"k\">assume</span><span class=\"w\"> </span><span class=\"ow\">...</span>\n<span class=\"k\">show</span><span class=\"ow\">...</span>\n</code></pre></div>",
        "id": 476493110,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1728709014
    },
    {
        "content": "<p>I wrote:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"w\">  </span><span class=\"k\">fix</span><span class=\"w\"> </span><span class=\"n\">w</span><span class=\"w\"> </span><span class=\"n\">vl</span>\n<span class=\"w\">  </span><span class=\"k\">assume</span><span class=\"w\"> </span><span class=\"s\">\"length vl = length fl\"</span>\n<span class=\"w\"> </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"k\">show</span>\n<span class=\"w\">  </span><span class=\"s\">\"∃i&lt;length fl.</span>\n<span class=\"s\">          csatis (τ, Φ) (W, R, V) (vl ! i) (fl ! i)\"</span>\n</code></pre></div>",
        "id": 476493220,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1728709107
    },
    {
        "content": "<p>The color looks like:<br>\n<a href=\"/user_uploads/14278/PWDZbAKuf-aeQ85-Nq_l8JlR/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/PWDZbAKuf-aeQ85-Nq_l8JlR/image.png\" title=\"image.png\"><img data-original-dimensions=\"2624x1476\" src=\"/user_uploads/thumbnail/14278/PWDZbAKuf-aeQ85-Nq_l8JlR/image.png/840x560.webp\"></a></div>",
        "id": 476493266,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1728709164
    },
    {
        "content": "<p>I do not understand why is the type error. I think the fixed variables should automatically have the type that the goal wants. If I delete the assume... then, then the error goes away.</p>",
        "id": 476493404,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1728709244
    },
    {
        "content": "<p>May I please ask why is this type error, and how should I solve that?</p>",
        "id": 476493420,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1728709264
    },
    {
        "content": "<p>Add the types you need in the fix. Usually the type inference does the right thing, but not always.</p>",
        "id": 476496444,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1728712342
    },
    {
        "content": "<p>Sorry, what is the syntax?</p>\n<p>fix w \"vl::'b list\" does not seem to work.</p>",
        "id": 476496633,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1728712557
    },
    {
        "content": "<p>It says: Legacy feature! Bad name binding: \"vl::'d list\"⌂</p>",
        "id": 476496833,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1728712693
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">$</span><span class=\"w\"> </span><span class=\"n\">grep</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"k\">include</span><span class=\"w\"> </span><span class=\"n\">\\*.thy</span><span class=\"w\"> </span><span class=\"s\">\" fix \"</span><span class=\"w\"> </span><span class=\"n\">*</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">grep</span><span class=\"w\"> </span><span class=\"s\">\"::\"</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">head</span>\n<span class=\"n\">thys/WebAssembly/Wasm_Interpreter.thy</span><span class=\"o\">:</span><span class=\"w\">    </span><span class=\"k\">fix</span><span class=\"w\"> </span><span class=\"n\">xs</span><span class=\"o\">::</span><span class=\"s\">\"e list\"</span><span class=\"w\"> </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"n\">as</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">bs</span>\n<span class=\"n\">thys/Physical_Quantities/ISQ_Dimensions.thy</span><span class=\"o\">:</span><span class=\"w\">  </span><span class=\"k\">fix</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'n list\"</span>\n<span class=\"n\">thys/Multitape_To_Singletape_TM/STM_Renaming.thy</span><span class=\"o\">:</span><span class=\"w\">    </span><span class=\"k\">fix</span><span class=\"w\"> </span><span class=\"n\">trans</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"('q </span><span class=\"ss\">\\&lt;times&gt;</span><span class=\"s\"> 'a </span><span class=\"ss\">\\&lt;times&gt;</span><span class=\"s\"> 'q </span><span class=\"ss\">\\&lt;times&gt;</span><span class=\"s\"> 'a </span><span class=\"ss\">\\&lt;times&gt;</span><span class=\"s\"> dir)\"</span>\n<span class=\"n\">thys/Multitape_To_Singletape_TM/Multi_Single_TM_Translation.thy</span><span class=\"o\">:</span><span class=\"w\">  </span><span class=\"k\">fix</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"('a, 'k) st_tape_symbol list\"</span>\n<span class=\"n\">thys/Multitape_To_Singletape_TM/Multi_Single_TM_Translation.thy</span><span class=\"o\">:</span><span class=\"w\">  </span><span class=\"k\">fix</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"('a, 'k) st_tape_symbol list\"</span>\n<span class=\"n\">thys/Nullstellensatz/Univariate_PM.thy</span><span class=\"o\">:</span><span class=\"w\">  </span><span class=\"k\">fix</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"o\">::</span><span class=\"n n-Type\">'x</span><span class=\"w\"> </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"o\">::</span><span class=\"s\">\"'a poly\"</span>\n<span class=\"n\">thys/Nullstellensatz/Nullstellensatz.thy</span><span class=\"o\">:</span><span class=\"w\">  </span><span class=\"k\">fix</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"('x </span><span class=\"ss\">\\&lt;Rightarrow&gt;</span><span class=\"s\"> 'a) set\"</span>\n<span class=\"n\">thys/Nullstellensatz/Nullstellensatz.thy</span><span class=\"o\">:</span><span class=\"w\">  </span><span class=\"k\">fix</span><span class=\"w\"> </span><span class=\"n\">F</span><span class=\"w\"> </span><span class=\"n\">G</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"(('x </span><span class=\"ss\">\\&lt;Rightarrow&gt;\\&lt;^sub&gt;</span><span class=\"s\">0 nat) </span><span class=\"ss\">\\&lt;Rightarrow&gt;\\&lt;^sub&gt;</span><span class=\"s\">0 'a) set\"</span>\n<span class=\"n\">thys/Nullstellensatz/Nullstellensatz.thy</span><span class=\"o\">:</span><span class=\"w\">    </span><span class=\"k\">fix</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"o\">::</span><span class=\"s\">\"'x </span><span class=\"ss\">\\&lt;Rightarrow&gt;</span><span class=\"s\"> 'a\"</span>\n<span class=\"n\">thys/LambdaAuth/FMap_Lemmas.thy</span><span class=\"o\">:</span><span class=\"w\">  </span><span class=\"k\">fix</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'a </span><span class=\"ss\">\\&lt;rightharpoonup&gt;</span><span class=\"s\"> 'b\"</span>\n</code></pre></div>",
        "id": 476496970,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1728712812
    },
    {
        "content": "<p>When something does not work, look at how others are doing it</p>",
        "id": 476497020,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1728712835
    },
    {
        "content": "<p>Thanks a lot for always attempting to teaching me how to fishing instead of just giving me the fish!</p>",
        "id": 476497233,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1728712971
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"754515\">Yiming Xu</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Isabelle.20cannot.20recognize.20the.20type.20of.20.22fix.22/near/476496833\">said</a>:</p>\n<blockquote>\n<p>It says: Legacy feature! Bad name binding: \"vl::'d list\"⌂</p>\n</blockquote>\n<p>BTW: this warning means that you gave the name <code>vl::'d list</code> to a single constant (yes the full thing). It is legacy since I am using Isabelle and it is feature you never want.</p>",
        "id": 476497535,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1728713270
    },
    {
        "content": "<p>By \"the full thing\", may I please confirm that Isabelle thinks \"`vl::'d list\" is a <strong>name</strong>, not a type-annotated term?</p>",
        "id": 476497639,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1728713382
    },
    {
        "content": "<p>Exactly</p>",
        "id": 476497648,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1728713395
    },
    {
        "content": "<p>Yes indeed I never want this, very surprising. Thank you!</p>",
        "id": 476497716,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1728713458
    },
    {
        "content": "<p>Isabelle 2024 does not seem to accept that at all anymore</p>",
        "id": 476497812,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1728713573
    },
    {
        "content": "<p>I am using Isabelle 2024. I still see this error. I will be careful with that.</p>",
        "id": 476497833,
        "sender_full_name": "Yiming Xu",
        "timestamp": 1728713615
    }
]