[
    {
        "content": "<p>Hey everyone, I have an isar question. Is a structure as follows possible?</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"s\">\"P \\/ Q \\/ R\"</span><span class=\"w\"> </span><span class=\"gr\">sorry</span>\n<span class=\"k\">then</span><span class=\"w\"> </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">thesis</span>\n<span class=\"k\">proof</span>\n<span class=\"w\">  </span><span class=\"k\">assume</span><span class=\"w\"> </span><span class=\"s\">\"P\"</span><span class=\"w\"> </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"gr\">sorry</span>\n<span class=\"k\">next</span>\n<span class=\"w\">  </span><span class=\"k\">assume</span><span class=\"w\"> </span><span class=\"s\">\"Q\"</span><span class=\"w\"> </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"gr\">sorry</span>\n<span class=\"k\">next</span>\n<span class=\"w\">  </span><span class=\"k\">assume</span><span class=\"w\"> </span><span class=\"s\">\"R\"</span><span class=\"w\"> </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"gr\">sorry</span>\n<span class=\"k\">qed</span>\n</code></pre></div>\n<p>When I tried it it only allowed two disjunctive cases, so after proving P I had to split Q \\/ R apart again using <code>assume Q \\/ R then show ?case proof ...</code>. Works fine but I'd like to avoid the extra nesting.</p>",
        "id": 355059769,
        "sender_full_name": "Bob Rubbens",
        "timestamp": 1683013744
    },
    {
        "content": "<p>I did not google hard enough, the answer is yes, this is possible. Discussed here: <a href=\"https://stackoverflow.com/questions/15901570/proof-rule-disje-for-nested-disjunction\">https://stackoverflow.com/questions/15901570/proof-rule-disje-for-nested-disjunction</a></p>",
        "id": 355065997,
        "sender_full_name": "Bob Rubbens",
        "timestamp": 1683015143
    },
    {
        "content": "<p>I agree to using <code>consider</code> command.</p>",
        "id": 355084157,
        "sender_full_name": "Yosuke Ito",
        "timestamp": 1683019065
    },
    {
        "content": "<p>Besides syntax preference, what factors are there to choose \"consider\" over the other options in the SO post?</p>",
        "id": 355122279,
        "sender_full_name": "Bob Rubbens",
        "timestamp": 1683027666
    },
    {
        "content": "<p>Maybe it's just my preference, but <code>consider</code> is especially used for case analysis, so the proof by exhaustion would be easy to read.</p>",
        "id": 355135317,
        "sender_full_name": "Yosuke Ito",
        "timestamp": 1683030618
    },
    {
        "content": "<p>Well, with just disjunctions, it is trivial to relate the three parts of the proof to the subformulas; so you might want to not use <code>consider</code> here.</p>\n<p>I haven’t checked the StackOverflow thread, but I just want to remark that the problem with the original example is that the automatically invoked <code>standard</code> method, which should perform <code>rule disjE</code> here, is only applied once. Something like <code>proof standard+</code> or <code>proof (elim disjE)</code> might do the trick.</p>",
        "id": 355562149,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1683134345
    },
    {
        "content": "<p>Thanks, Wolfgang. Let me confirm your opinion.<br>\nWhen you use <code>consider</code>, you are to prove that the cases exhaust all the patterns. In this case however, the hypothesis is already written in disjunction, so <code>consider</code> requires the extra task to prove the completness. That makes the proof less efficient.<br>\nIs that what you are saying?</p>",
        "id": 355624627,
        "sender_full_name": "Yosuke Ito",
        "timestamp": 1683156612
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"s\">\"P ∨ Q ∨ R\"</span><span class=\"w\"> </span><span class=\"gr\">sorry</span>\n<span class=\"k\">then</span><span class=\"w\"> </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">G</span>\n<span class=\"k\">proof</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">elim</span><span class=\"w\"> </span><span class=\"n\">disjE</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"k\">assume</span><span class=\"w\"> </span><span class=\"s\">\"P\"</span><span class=\"w\"> </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"n\">G</span><span class=\"w\"> </span><span class=\"gr\">sorry</span>\n<span class=\"k\">next</span>\n<span class=\"w\">  </span><span class=\"k\">assume</span><span class=\"w\"> </span><span class=\"s\">\"Q\"</span><span class=\"w\"> </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"n\">G</span><span class=\"w\"> </span><span class=\"gr\">sorry</span>\n<span class=\"k\">next</span>\n<span class=\"w\">  </span><span class=\"k\">assume</span><span class=\"w\"> </span><span class=\"s\">\"R\"</span><span class=\"w\"> </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"n\">G</span><span class=\"w\"> </span><span class=\"gr\">sorry</span>\n<span class=\"k\">qed</span>\n</code></pre></div>",
        "id": 355658409,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1683176615
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"428627\">Yosuke Ito</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Isar.20proof.20by.203.20disjunctive.20cases/near/355624627\">said</a>:</p>\n<blockquote>\n<p>Thanks, Wolfgang. Let me confirm your opinion.<br>\nWhen you use <code>consider</code>, you are to prove that the cases exhaust all the patterns. In this case however, the hypothesis is already written in disjunction, so <code>consider</code> requires the extra task to prove the completness. That makes the proof less efficient.<br>\nIs that what you are saying?</p>\n</blockquote>\n<p>Yes, that’s basically what I wanted to say, although I might not use the term “efficiency”. I always strive to write Isar proofs that are close to ordinary pen-and-paper proofs. It’s all about being intelligible for the reader. When making a non-trivial case distinction, you want to state what your cases actually are, but when distinguishing three cases already explicitly stated via a disjunction it would produce unnecessary boilerplate to essentially restate these three cases.</p>",
        "id": 356071833,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1683295854
    },
    {
        "content": "<p>Looking at the example code <span class=\"user-mention\" data-user-id=\"233198\">@Mathias Fleury</span> posted, I realize that with this style you even do restate the cases as assumptions; so there is really no need to be even more explicit and restate them via <code>consider</code> here.</p>",
        "id": 356072238,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1683295935
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"423655\">@Wolfgang Jeltsch</span> I definitely agree with you. I appreciate your detail explanation.<br>\n<span class=\"user-mention\" data-user-id=\"613529\">@Bob Rubbens</span> Please follow Wolfgang's advice. Sorry for confusing you, but I learned a lot from your question.</p>",
        "id": 356172203,
        "sender_full_name": "Yosuke Ito",
        "timestamp": 1683324179
    },
    {
        "content": "<p>No problem, I also learned a lot :)</p>",
        "id": 356247521,
        "sender_full_name": "Bob Rubbens",
        "timestamp": 1683364381
    }
]