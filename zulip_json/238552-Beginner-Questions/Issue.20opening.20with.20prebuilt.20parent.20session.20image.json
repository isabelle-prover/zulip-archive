[
    {
        "content": "<p>When I was trying to open an AFP entry (Automated Stateful Protocol Verification) by: </p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">isa23</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"ow\">.</span><span class=\"n\">/afp</span><span class=\"o\">-</span><span class=\"n\">2023/thys/Automated_Stateful_Protocol_Verification</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">l</span><span class=\"w\"> </span><span class=\"n\">HOL</span><span class=\"o\">-</span><span class=\"n\">Eisbach</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">l</span><span class=\"w\"> </span><span class=\"n\">Stateful_Protocol_Composition_and_Typing</span><span class=\"w\"> </span><span class=\"ow\">.</span><span class=\"n\">/afp</span><span class=\"o\">-</span><span class=\"n\">2023/thys/Automated_Stateful_Protocol_Verification/Eisbach_Protocol_Verification.thy</span>\n</code></pre></div>\n<p>Although I have already built the heap image for both HOL-Eisbach and Stateful_Protocol_Composition_and_Typing, both of them appear in </p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">~/.isabelle/Isabelle2023/heaps/polyml</span><span class=\"o\">-</span><span class=\"n\">5.9_x86_64_32</span><span class=\"o\">-</span><span class=\"n\">linux/</span>\n</code></pre></div>\n<p>There was still a message saying \"Bad parent session \"Stateful_Protocol_Composition_and_Typing\" for \"Automated_Stateful_Protocol_Verification\" \".<br>\nI am wondering why is it the case, and what is the correct way to open a session with a prebuilt parent session image like this? I am using Ubuntu 22.04 if that helps.</p>",
        "id": 420249790,
        "sender_full_name": "Minh D",
        "timestamp": 1707311918
    },
    {
        "content": "<ol>\n<li>You can only have one base logic - specifying <code>-l</code> twice just overwrites the first again</li>\n<li>You need to add the sessions to your namespace. using <code> -A:</code> does that for all AFP sessions.</li>\n</ol>",
        "id": 420250588,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1707312177
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"348400\">Fabian Huch</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Issue.20opening.20with.20prebuilt.20parent.20session.20image/near/420250588\">said</a>:</p>\n<blockquote>\n<ol>\n<li>You can only have one base logic - specifying <code>-l</code> twice just overwrites the first again</li>\n<li>You need to add the sessions to your namespace. using <code> -A:</code> does that for all AFP sessions.</li>\n</ol>\n</blockquote>\n<p>In the above command, I was specifying -l for Stateful_Protocol_Composition_and_Typing after the HOL-Eisbach, so according to overwriting rule, shouldn't the message be for HOL-Eisbach instead?<br>\nAlso when I try remove one of them (remove the <code>-l HOL-Eisbach</code>) and use <code>-A:</code><br>\n, the problem is still there.</p>",
        "id": 420251968,
        "sender_full_name": "Minh D",
        "timestamp": 1707312584
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"348400\">Fabian Huch</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Issue.20opening.20with.20prebuilt.20parent.20session.20image/near/420250588\">said</a>:</p>\n<blockquote>\n<ol>\n<li>You can only have one base logic - specifying <code>-l</code> twice just overwrites the first again</li>\n<li>You need to add the sessions to your namespace. using <code> -A:</code> does that for all AFP sessions.</li>\n</ol>\n</blockquote>\n<p>Oh I was missing something, I used <code>isabelle jedit</code>, not <code>isabelle build</code></p>",
        "id": 420256191,
        "sender_full_name": "Minh D",
        "timestamp": 1707313888
    },
    {
        "content": "<p><code>Stateful_Protocol_Composition_and_Typing</code> is in the AFP, but not in any path you have added with <code>-d</code></p>",
        "id": 420256446,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1707313972
    },
    {
        "content": "<p>Please install the AFP with the instruction from <a href=\"https://www.isa-afp.org/help/\">https://www.isa-afp.org/help/</a> then there is no -d problem anymore</p>",
        "id": 420256603,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1707314017
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Issue.20opening.20with.20prebuilt.20parent.20session.20image/near/420256446\">said</a>:</p>\n<blockquote>\n<p><code>Stateful_Protocol_Composition_and_Typing</code> is in the AFP, but not in any path you have added with <code>-d</code></p>\n</blockquote>\n<p>I have the heap image for <code>Stateful_Protocol_Composition_and_Typing</code> in my <code>~/.isabelle/Isabelle2023/heaps/polyml-5.9_x86_64_32-linux/</code>, would that make any difference?</p>",
        "id": 420256774,
        "sender_full_name": "Minh D",
        "timestamp": 1707314063
    },
    {
        "content": "<p>No.</p>",
        "id": 420258072,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1707314415
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"348400\">Fabian Huch</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Issue.20opening.20with.20prebuilt.20parent.20session.20image/near/420250588\">said</a>:</p>\n<blockquote>\n<ol>\n<li>You can only have one base logic - specifying <code>-l</code> twice just overwrites the first again<br>\n<del>2. You need to add the sessions to your namespace. using <code> -A:</code> does that for all AFP sessions.</del> Since this appears to be <code>isabelle jedit</code>, you simply need to install the AFP as stated on the help page. </li>\n</ol>\n</blockquote>",
        "id": 420261414,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1707315413
    },
    {
        "content": "<p>I got it to run, thank you both. By the way, what should be the right process to build the image for parent sessions, and then open jedit, with the already built image so that I don't have to load all parent sessions' theory files again every time I open the theory?</p>",
        "id": 420272037,
        "sender_full_name": "Minh D",
        "timestamp": 1707318165
    },
    {
        "content": "<p>Isabelle/jEdit caches the built imageâ€¦</p>",
        "id": 420272748,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1707318340
    },
    {
        "content": "<p>You simply need to start jEdit with the right base logic (<code>-l</code>). However, you can only have a single base logic, so you need to decide on one and re-load all needed theory files from the other. In your case, using <code>Stateful_Protocol_Composition_and_Typing</code> as a base logic should be fast (<code>HOL-Eisbach</code> is tiny so loading those theory files in should not take long).</p>",
        "id": 420274107,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1707318705
    },
    {
        "content": "<p>If you depend on multiple larger sessions then I would create a single parent session that depends on all of them and build a heap image for that parent session.</p>",
        "id": 420274311,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1707318754
    },
    {
        "content": "<p>Thanks, that teaches me a lot on how to use Isabelle</p>",
        "id": 420357843,
        "sender_full_name": "Minh D",
        "timestamp": 1707346907
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"348400\">Fabian Huch</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Issue.20opening.20with.20prebuilt.20parent.20session.20image/near/420274311\">said</a>:</p>\n<blockquote>\n<p>If you depend on multiple larger sessions then I would create a single parent session that depends on all of them and build a heap image for that parent session.</p>\n</blockquote>\n<p>That is not necessary anymore I think. You have a root file for your current project and put the sessions to import as \"sessions\" in the ROOT file, then they are already included.</p>",
        "id": 420409298,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1707381399
    },
    {
        "content": "<p>may I know how you produce a heap with this approach? do you just <code>-l</code> the ROOT for your current project?</p>",
        "id": 420409657,
        "sender_full_name": "Yong Kiam",
        "timestamp": 1707381570
    },
    {
        "content": "<p>I just -l ROOT it</p>",
        "id": 420410702,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1707381987
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Issue.20opening.20with.20prebuilt.20parent.20session.20image/near/420409298\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"348400\">Fabian Huch</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Issue.20opening.20with.20prebuilt.20parent.20session.20image/near/420274311\">said</a>:</p>\n<blockquote>\n<p>If you depend on multiple larger sessions then I would create a single parent session that depends on all of them and build a heap image for that parent session.</p>\n</blockquote>\n<p>That is not necessary anymore I think. You have a root file for your current project and put the sessions to import as \"sessions\" in the ROOT file, then they are already included.</p>\n</blockquote>\n<p>What do you mean with 'included'? If I have two large sessions A and B and want to work on C that needs both, which heap image can I build so I don't have to re-load any theories from A and B while working on C?</p>",
        "id": 420412333,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1707382632
    },
    {
        "content": "<p>Isabelle/jEdit -l MyProject will compile all required imports, but I do not know how it works internally</p>",
        "id": 420449978,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1707396591
    },
    {
        "content": "<p>If you build the logic image for the whole project (here <code>-l C</code>) then that image contains everything, but then you can't edit C. Or am I missing something?</p>",
        "id": 420456526,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1707398717
    },
    {
        "content": "<p>Maybe we were talking past each other here.</p>",
        "id": 420456815,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1707398801
    },
    {
        "content": "<p>Ahh no you are right: I meant <code>Isabelle/jEdit -R MyProject </code></p>",
        "id": 420468913,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1707402313
    },
    {
        "content": "<p>Ah yes that actually works, great - I didn't know it did this automatically!</p>",
        "id": 420472975,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1707403537
    }
]