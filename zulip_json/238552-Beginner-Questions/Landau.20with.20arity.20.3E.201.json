[
    {
        "content": "<p>Hi,<br>\nI am trying to work with <code>Landau_Symbols</code> to argue about functions that take more than a single argument.<br>\nWhen doing something like </p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">fun</span><span class=\"w\"> </span><span class=\"n\">f1</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"nat =&gt; nat\"</span><span class=\"w\"> </span><span class=\"kp\">where</span><span class=\"w\"></span>\n<span class=\"s\">\"f1 x = 2 * x\"</span><span class=\"w\"></span>\n\n<span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"s\">\"f1 ∈ O(λx. x)\"</span><span class=\"w\"></span>\n<span class=\"c\">(* some proof here *)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>everything works as expected. </p>\n<p>However, when I try:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">fun</span><span class=\"w\"> </span><span class=\"n\">f2</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"nat =&gt; nat =&gt; nat\"</span><span class=\"w\"> </span><span class=\"kp\">where</span><span class=\"w\"></span>\n<span class=\"s\">\"f2 x y = 2 * (x + y)\"</span><span class=\"w\"></span>\n\n<span class=\"c\">(* will not work *)</span><span class=\"w\"></span>\n<span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"s\">\"f2 ∈ O(λx y. x + y)\"</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I cannot proceed because <code>No type arity fun :: real_normed_field</code>. I've tired uncurrying and similar workarounds but I was not<br>\nsuccessful. After looking into the source, I am starting to fear that what I'm trying to do is not possible... :(<br>\nThus my question: Is it possible to use <code>Landau_Symbols</code> to argue about functions taking multiple arguments and if so, how? <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 312850463,
        "sender_full_name": "Marco Haucke",
        "timestamp": 1669730862
    },
    {
        "content": "<p>I don't think Landau with arity &gt; 1 will work with the current Isabelle setup. Nevertheless, what would be the definition of Big-O on a multivariate function?</p>",
        "id": 312860787,
        "sender_full_name": "Wenda Li",
        "timestamp": 1669733760
    },
    {
        "content": "<p>The definition itself is not a problem, see for example: <a href=\"https://en.wikipedia.org/wiki/Big_O_notation#Multiple_variables\">https://en.wikipedia.org/wiki/Big_O_notation#Multiple_variables</a><br>\nThe only option I can see right now is actually uncurrying the functions and defining some ordering (<code>order</code>) on the tuples that makes sense. I'm not sure about that atm. I'll update the topic as I get more results :)</p>",
        "id": 312879294,
        "sender_full_name": "Marco Haucke",
        "timestamp": 1669738805
    },
    {
        "content": "<p>I have a solution using tuples, (courtesy of <span class=\"user-mention\" data-user-id=\"232736\">@Manuel Eberl</span> , thanks again) using the Product-Filter <code>×⇩F</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"s\">\"(λ(x, y). f2 x y) ∈ O[at_top ×⇩F at_top](λ(x, y). x + y)\"</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 313168111,
        "sender_full_name": "Marco Haucke",
        "timestamp": 1669846837
    }
]