[
    {
        "content": "<p>Hi, I wrote this lemma</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">assign_seats_not_winner_mantains_seats</span><span class=\"o\">:</span>\n<span class=\"w\">  </span><span class=\"kp\">fixes</span>\n<span class=\"w\">  </span><span class=\"n\">rec</span><span class=\"o\">::</span><span class=\"s\">\"('a::linorder, 'b) Divisor_Module\"</span>\n<span class=\"w\">  </span><span class=\"kp\">defines</span><span class=\"w\"> </span><span class=\"s\">\"winners ≡ get_winners (fv rec) (p rec)\"</span>\n<span class=\"w\">  </span><span class=\"kp\">defines</span><span class=\"w\"> </span><span class=\"s\">\"i1 ≡ get_index_upd (hd winners) (p rec)\"</span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"i1 ≠ i2\"</span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"i2 &lt; length (sl rec)\"</span>\n<span class=\"w\">  </span><span class=\"kp\">shows</span><span class=\"w\"> </span><span class=\"s\">\"(sl rec) ! i2 = (sl (assign_seats rec)) ! i2\"</span>\n</code></pre></div>\n<p>and I used it in another lemma</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">assign_seats_concordant</span><span class=\"o\">:</span>\n<span class=\"w\">  </span><span class=\"kp\">fixes</span>\n<span class=\"w\">  </span><span class=\"n\">rec</span><span class=\"o\">::</span><span class=\"s\">\"('a::linorder, 'b) Divisor_Module\"</span><span class=\"w\"> </span><span class=\"kp\">and</span>\n<span class=\"w\">  </span><span class=\"n\">party1</span><span class=\"o\">::</span><span class=\"s\">\"'b\"</span><span class=\"w\"> </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"n\">party2</span><span class=\"o\">::</span><span class=\"s\">\"'b\"</span><span class=\"w\"> </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"n\">parties</span><span class=\"o\">::</span><span class=\"s\">\"'b Parties\"</span>\n<span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"v1 &gt; v2\"</span>\n<span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"party1 ≠ party2\"</span>\n<span class=\"w\">  </span><span class=\"kp\">defines</span><span class=\"w\"> </span><span class=\"s\">\"i1 ≡ get_index_upd party1 (p rec)\"</span>\n<span class=\"w\">  </span><span class=\"kp\">defines</span><span class=\"w\"> </span><span class=\"s\">\"i2 ≡ get_index_upd party2 (p rec)\"</span>\n<span class=\"w\">  </span><span class=\"kp\">defines</span><span class=\"w\"> </span><span class=\"s\">\"winners ≡ get_winners (fv rec) (p rec)\"</span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"sl rec ! i1 ≥ sl rec ! i2\"</span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"i1 ≠ i2\"</span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"i1 &lt; length (sl rec)\"</span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"i2 &lt; length (sl rec)\"</span>\n<span class=\"kp\">shows</span><span class=\"w\"> </span><span class=\"s\">\"sl (assign_seats rec) ! i1 ≥ sl (assign_seats rec) ! i2\"</span>\n<span class=\"k\">proof</span><span class=\"o\">(</span><span class=\"n\">cases</span><span class=\"w\"> </span><span class=\"s\">\"length winners ≤ ns rec\"</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"n\">True</span>\n<span class=\"w\">  </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">thesis</span>\n<span class=\"w\">      </span><span class=\"k\">proof</span><span class=\"o\">(</span><span class=\"n\">cases</span><span class=\"w\"> </span><span class=\"s\">\"party1 = hd winners\"</span><span class=\"o\">)</span>\n<span class=\"w\">        </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"n\">True</span>\n<span class=\"w\">             </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"s\">\"sl (assign_seats rec) ! i1 = (sl rec) ! i1 + 1\"</span>\n<span class=\"w\">             </span><span class=\"k\">using</span><span class=\"w\">  </span><span class=\"s\">‹length winners ≤ ns rec›</span><span class=\"w\"> </span><span class=\"n\">True</span><span class=\"w\"> </span><span class=\"n\">assign_seats_seats_increased</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"o\">(</span><span class=\"n\">8</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"o\">(</span><span class=\"n\">11</span><span class=\"o\">)</span>\n<span class=\"w\">                           </span><span class=\"n\">i1_def</span><span class=\"w\"> </span><span class=\"n\">winners_def</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">blast</span>\n<span class=\"w\">           </span><span class=\"k\">also</span><span class=\"w\"> </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"s\">\"sl (assign_seats rec) ! i2 = (sl rec) ! i2\"</span>\n<span class=\"w\">           </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">True</span><span class=\"w\"> </span><span class=\"n\">assign_seats_not_winner_mantains_seats</span><span class=\"w\"> </span><span class=\"n\">assms</span>\n<span class=\"w\">                         </span><span class=\"n\">i1_def</span><span class=\"w\"> </span><span class=\"n\">winners_def</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">metis</span><span class=\"w\">  </span><span class=\"n\">&lt;</span><span class=\"o\">-------</span>\n<span class=\"w\">              </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">thesis</span>\n<span class=\"w\">              </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"o\">(</span><span class=\"n\">8</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">calculation</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">linarith</span>\n<span class=\"w\">      </span><span class=\"k\">next</span>\n<span class=\"w\">        </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"n\">False</span>\n<span class=\"w\">        </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">thesis</span>\n<span class=\"w\">        </span><span class=\"k\">proof</span><span class=\"o\">(</span><span class=\"n\">cases</span><span class=\"w\"> </span><span class=\"s\">\"party2 = hd winners\"</span><span class=\"o\">)</span>\n<span class=\"w\">          </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"n\">True</span>\n<span class=\"w\">          </span><span class=\"ow\">...</span>\n<span class=\"w\">        </span><span class=\"k\">next</span>\n<span class=\"w\">          </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"n\">False</span>\n<span class=\"w\">          </span><span class=\"k\">obtain</span><span class=\"w\"> </span><span class=\"n\">partyW</span><span class=\"w\"> </span><span class=\"n\">iW</span><span class=\"w\"> </span><span class=\"kp\">where</span><span class=\"w\"> </span><span class=\"s\">\"partyW = hd winners\"</span>\n<span class=\"w\">          </span><span class=\"s\">\"iW = get_index_upd partyW (p rec)\"</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">simp</span>\n<span class=\"w\">          </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"s\">\"party2 ≠ partyW\"</span>\n<span class=\"w\">            </span><span class=\"k\">using</span><span class=\"w\">  </span><span class=\"s\">‹partyW = hd winners›</span><span class=\"w\"> </span><span class=\"n\">False</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">simp</span>\n<span class=\"w\">          </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"s\">\"i2 = get_index_upd party2 (p rec)\"</span>\n<span class=\"w\">            </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">simp</span>\n<span class=\"w\">          </span><span class=\"k\">also</span><span class=\"w\"> </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"s\">\"sl (assign_seats rec) ! i2 = (sl rec) ! i2\"</span>\n<span class=\"w\">            </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">False</span><span class=\"w\"> </span><span class=\"n\">assign_seats_not_winner_mantains_seats</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"w\"> </span><span class=\"n\">i2_def</span><span class=\"w\"> </span><span class=\"n\">i1_def</span>\n<span class=\"w\">                    </span><span class=\"n\">winners_def</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"> </span><span class=\"o\">?</span>\n<span class=\"w\">          </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">thesis</span><span class=\"w\"> </span><span class=\"gr\">sorry</span>\n<span class=\"w\">        </span><span class=\"k\">qed</span>\n<span class=\"w\">      </span><span class=\"k\">qed</span>\n<span class=\"k\">next</span>\n<span class=\"w\">  </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"n\">False</span>\n<span class=\"w\">  </span><span class=\"ow\">...</span>\n<span class=\"k\">qed</span>\n</code></pre></div>\n<p>but it is not working. I tried to introduce with obtains a \"winner\" different from party2 to help the first lemma but i don't know if it's helpful. <br>\nAs you can see, I used it earlier where there is the arrow but I cannot use it in later subcase (? ? ?), why if assumptions are (or at least looks) the same in both cases? </p>\n<p>P.S: Since it's all about assms and lemmas I don't think I should provide functions code, also sorry if I didn't manage to simplify the example.</p>",
        "id": 430016819,
        "sender_full_name": "Salvatore Francesco Rossetta",
        "timestamp": 1711614288
    },
    {
        "content": "<p>Usually in those cases I instantiate by hand with <code>assign_seats_not_winner_mantains_seats[of winners rec i2]</code> and <code>apply auto</code>. Usually the remaining (unproven) assumptions of the theorems shows what is wrong…</p>",
        "id": 430082861,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1711636814
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Lemma.20usage.20in.20other.20lemmas/near/430082861\">said</a>:</p>\n<blockquote>\n<p>Usually in those cases I instantiate by hand with <code>assign_seats_not_winner_mantains_seats[of winners rec i2]</code> and <code>apply auto</code>. Usually the remaining (unproven) assumptions of the theorems shows what is wrong…</p>\n</blockquote>\n<p>What do you mean \"instantiate by hand\"? Should I write this inside my proof or write it in another lemma and then use it? I tried something but it doesn't work, for example writing it</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"w\"> </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"n\">False</span>\n<span class=\"w\">          </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"s\">\"sl (assign_seats rec) ! i2 = (sl rec) ! i2\"</span>\n<span class=\"w\">            </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">False</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"w\"> </span><span class=\"n\">i2_def</span><span class=\"w\"> </span><span class=\"n\">i1_def</span>\n<span class=\"w\">                    </span><span class=\"n\">winners_def</span><span class=\"w\"> </span><span class=\"n\">assign_seats_not_winner_mantains_seats</span><span class=\"o\">[</span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">winners</span><span class=\"w\"> </span><span class=\"n\">rec</span><span class=\"w\"> </span><span class=\"n\">i2</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">simp</span>\n<span class=\"w\">          </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">thesis</span><span class=\"w\"> </span><span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 430948676,
        "sender_full_name": "Salvatore Francesco Rossetta",
        "timestamp": 1712133536
    },
    {
        "content": "<p>No I mean exactly that. The question is now why/what is not working</p>",
        "id": 430965356,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1712138213
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Lemma.20usage.20in.20other.20lemmas/near/430965356\">said</a>:</p>\n<blockquote>\n<p>No I mean exactly that. The question is now why/what is not working</p>\n</blockquote>\n<p>The error is <code>More instantiations than variables in theorem</code>, so I thought about removing \"winners\" because it is not in the thesis of the lemma i want to use (but maybe it's completely wrong step, just my idea)</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"w\">  </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">False</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"w\"> </span><span class=\"n\">i2_def</span><span class=\"w\"> </span><span class=\"n\">i1_def</span>\n<span class=\"w\">                    </span><span class=\"n\">winners_def</span><span class=\"w\"> </span><span class=\"n\">assign_seats_not_winner_mantains_seats</span><span class=\"o\">[</span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">rec</span><span class=\"w\"> </span><span class=\"n\">i2</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"n\">auto</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">simp</span>\n</code></pre></div>\n<p>and it is giving a failed subgoal, which is the same I get if I would not use the lemma at all.</p>",
        "id": 430970435,
        "sender_full_name": "Salvatore Francesco Rossetta",
        "timestamp": 1712139890
    },
    {
        "content": "<p>May it be because in my first lemma in the assumptions I explicitely wrote that i2 is different from the winner this way</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kp\">defines</span><span class=\"w\"> </span><span class=\"s\">\"i1 ≡ get_index_upd (hd winners) (p rec)\"</span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"i1 ≠ i2\"</span>\n</code></pre></div>\n<p>so I know that <code>i2 ≠ get_index_upd (hd winners) (p rec)</code></p>\n<p>while in my later lemma this is not explicitely an assumption but more a case to prove, something like this?</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"w\">          </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"s\">\"party2 ≠ hd winners\"</span><span class=\"w\"> </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">False</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">simp</span>\n<span class=\"w\">          </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"s\">\"i2 ≠ get_index_upd (hd winners) (p rec)\"</span><span class=\"w\"> </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"> </span><span class=\"o\">?</span>\n</code></pre></div>\n<p>and therefore I can use the lemma above because this assm is true?</p>",
        "id": 430972544,
        "sender_full_name": "Salvatore Francesco Rossetta",
        "timestamp": 1712140726
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"671670\">Salvatore Francesco Rossetta</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Lemma.20usage.20in.20other.20lemmas/near/430970435\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Lemma.20usage.20in.20other.20lemmas/near/430965356\">said</a>:</p>\n<blockquote>\n<p>No I mean exactly that. The question is now why/what is not working</p>\n</blockquote>\n<p>The error is <code>More instantiations than variables in theorem</code>, so I thought about removing \"winners\" because it is not in the thesis of the lemma i want to use (but maybe it's completely wrong step, just my idea)</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"w\">  </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">False</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"w\"> </span><span class=\"n\">i2_def</span><span class=\"w\"> </span><span class=\"n\">i1_def</span>\n<span class=\"w\">                    </span><span class=\"n\">winners_def</span><span class=\"w\"> </span><span class=\"n\">assign_seats_not_winner_mantains_seats</span><span class=\"o\">[</span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">rec</span><span class=\"w\"> </span><span class=\"n\">i2</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"n\">auto</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">simp</span>\n</code></pre></div>\n<p>and it is giving a failed subgoal, which is the same I get if I would not use the lemma at all.</p>\n</blockquote>\n<p>My guess is that the error comes from i1 being unfolded in the theorem version</p>",
        "id": 430988890,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1712146480
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Lemma.20usage.20in.20other.20lemmas/near/430988890\">said</a>:</p>\n<blockquote>\n<p>My guess is that the error comes from i1 being unfolded in the theorem version</p>\n</blockquote>\n<p>And how could I manage to solve this? By avoiding that i1 is unfolded?</p>",
        "id": 430989624,
        "sender_full_name": "Salvatore Francesco Rossetta",
        "timestamp": 1712146707
    },
    {
        "content": "<p>First get the instantiations right, trying <code>assign_seats_not_winner_mantains_seats[of rec]</code> , <code>assign_seats_not_winner_mantains_seats[of i2]</code> until all instantiations are done</p>",
        "id": 431120752,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1712158366
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Lemma.20usage.20in.20other.20lemmas/near/431120752\">said</a>:</p>\n<blockquote>\n<p>First get the instantiations right, trying <code>assign_seats_not_winner_mantains_seats[of rec]</code> , <code>assign_seats_not_winner_mantains_seats[of i2]</code> until all instantiations are done</p>\n</blockquote>\n<p>I had already tried earlier, the <code>[of rec]</code> one doesn't give any errors (but still i get subgoal error) and the <code>[of i2]</code> one gives a type mismatch because it's expecting rec, not i2</p>",
        "id": 431122415,
        "sender_full_name": "Salvatore Francesco Rossetta",
        "timestamp": 1712158824
    },
    {
        "content": "<p>So instantiate all variables. Then run <code>apply auto</code>. Then look at the goal. One of the assumptions should exactly be your lemma. It probably has some assumptions that auto cannot prove. Find it and try to find out why not</p>",
        "id": 431127207,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1712160224
    }
]