[
    {
        "content": "<p>Dear all,</p>\n<p>I would like to \"lift\" theorem from one typ to another, specifically, I have (very simplified) setup:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">record</span> <span class=\"o\">(</span><span class=\"n n-Type\">'a</span><span class=\"o\">,</span><span class=\"n n-Type\">'b</span><span class=\"o\">)</span> <span class=\"n\">obj</span> <span class=\"o\">=</span>\n  <span class=\"n\">param1</span> <span class=\"o\">::</span> <span class=\"n n-Type\">'a</span>\n  <span class=\"n\">param2</span> <span class=\"o\">::</span> <span class=\"n n-Type\">'b</span>\n\n<span class=\"k\">type_synonym</span> <span class=\"n\">nobj</span> <span class=\"o\">=</span> <span class=\"s\">\"(nat,nat) obj\"</span>\n\n<span class=\"k\">definition</span> <span class=\"n\">to_nobj</span> <span class=\"o\">::</span> <span class=\"s\">\"('a::countable,'b::countable) obj ⇒ nobj\"</span> <span class=\"kp\">where</span>\n<span class=\"s\">\"to_nobj x ≡ ⦇param1 = to_nat (param1 x), param2 = to_nat (param2 x)⦈\"</span>\n\n<span class=\"k\">definition</span> <span class=\"n\">from_nobj</span> <span class=\"o\">::</span> <span class=\"s\">\"nobj ⇒ ('a::countable,'b::countable) obj\"</span> <span class=\"kp\">where</span>\n<span class=\"s\">\"from_nobj x ≡ ⦇param1 = from_nat (param1 x), param2 = from_nat (param2 x)⦈\"</span>\n\n<span class=\"kn\">lemma</span> <span class=\"err\">‹</span><span class=\"n\">from_nobj</span> <span class=\"o\">(</span><span class=\"n\">to_nobj</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"err\">›</span>\n  <span class=\"k\">by</span> <span class=\"o\">(</span><span class=\"n\">simp</span> <span class=\"n\">add</span><span class=\"o\">:</span> <span class=\"n\">to_nobj_def</span> <span class=\"n\">from_nobj_def</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>Is there a way to automatically \"lift\" theorems containing <code>nobj</code> (back) into the parametric one (i.e. <code>('a,'b) obj</code>)?</p>",
        "id": 295123023,
        "sender_full_name": "Robert Soeldner",
        "timestamp": 1661373559
    },
    {
        "content": "<p>Without a deeper understanding of your code, my spontaneous idea is that “lifting” sounds a lot like a use for the Lifting package. Have you had a look at it? A word of warning: It’s all but trivial. You should have some idea about parametricity if you want to use it in more advanced ways.</p>",
        "id": 295321928,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1661467405
    }
]