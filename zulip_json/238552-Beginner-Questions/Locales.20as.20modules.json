[
    {
        "content": "<p>In SML and in Coq, it is possible to write a parameterised module, a functor in Standard ML parlance.</p>\n<p>Is the form</p>\n<div class=\"codehilite\"><pre><span></span><code> locale second = first +\n\n   assumes ...\n\n                 ...first.def2...\n</code></pre></div>\n\n\n<p>a functor in this sense?</p>\n<p>I have read that locales are limited contrasted to Coq modules --- what is the difference in expressiveness?</p>",
        "id": 206666663,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1597217350
    },
    {
        "content": "<p>I'd say the functor analogy is fine. The <a href=\"https://isabelle.in.tum.de/dist/Isabelle2020/doc/isar-ref.pdf\">isar ref</a> puts it as follows: <code>A locale is a functor that maps parameters (including implicit type param-eters) and a specification to a list of declarations</code></p>\n<p>I have no experience with Coq, so I cannot comment on the latter. Do you happen to have a reference to said text?</p>",
        "id": 206794226,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1597309799
    }
]