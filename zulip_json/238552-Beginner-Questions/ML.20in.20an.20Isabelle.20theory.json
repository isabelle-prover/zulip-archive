[
    {
        "content": "<p>I want to define a large set of structured values in my theory file. The size of the set can be quite large (in the thousands), so I would like to avoid copying or writing all of them directly into the <code>.thy</code> file to keep it clean and readable. I am trying to get these values automatically generated in a separate <code>.ML</code> file.  The values themselves are nested sets of tagged elements, something like: <code>{ {⟪label1, value1⟫, ⟪label2, value2⟫, ...}, {...}, ... }</code></p>\n<p>Ideally, I want to define something like:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">definition</span><span class=\"w\"> </span><span class=\"n\">generatorSet</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"o\">___</span><span class=\"w\"> </span><span class=\"kp\">where</span>\n<span class=\"w\">  </span><span class=\"s\">\"generatorSet = ...\"</span><span class=\"w\">  </span><span class=\"c\">(* value generated by ML *)</span>\n</code></pre></div>\n<p>I'm currently generating the values programmatically in an <code>.ML</code> file and including it in the theory using: <br>\n<code>ML_file \"generate_set.ML\"</code></p>\n<p>I am not sure if this is the correct approach.</p>\n<p>Is it possible to define the value of <code>generatorSet</code> entirely within the ML file, and have it behave like a regular constant that I can use throughout the theory later that can be used in proofs and other definitions?</p>\n<p>Or is the recommended approach to pre-generate a portion of the <code>.thy</code> file using ML before loading the theory?</p>\n<p>Any advice or code examples on how to bridge the ML and logic layers in Isabelle when working with large, structured, automatically-generated values would be great. Thank you.</p>",
        "id": 507122699,
        "sender_full_name": "Sana I.",
        "timestamp": 1742530086
    }
]