[
    {
        "content": "<p>During long editing sessions in JEdit the ML memory usage (as reported in the JEDIT Status bar) tends to go up until it fills up my whole RAM and terminates (gracefully). Even an explicit GC doesn't bring it down. However, if I restart JEdit and let it prove everything, the resulting memory usage is far lower. I guess I can't fix the leak itself, but I would like to try a workaround: Is there a way for me to tell Isabelle (or JEdit or whatever is responsible for that) to forget intermediate proof steps after a lemma is proved? This would free up a significant chunk of memory, I guess. I'm only interested in the intermediate steps within the lemma I'm currently working on. Or, as an alternative workaround: Can I tell Isabelle/JEdit to assume all statements in other theories are true, and only prove the current theory?</p>",
        "id": 228929036,
        "sender_full_name": "Alex",
        "timestamp": 1614939223
    },
    {
        "content": "<p>It is hard to know if anything can help besides investing money in a new computer... The most important: create a sessions, i.e., create a ROOT file for your theories. Combined with <code>isabelle jedit -R &lt;my_session&gt;</code> all base sessions are compiled. But you cannot edit them anymore.</p>",
        "id": 228981261,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1614961545
    },
    {
        "content": "<p>Also Isar proofs help. Avoid <code>apply X apply Y</code>. Prefer <code>by X Y</code>. Also better for parallelization.</p>",
        "id": 229070285,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1615010632
    },
    {
        "content": "<p>Ok, thank you. I'll definitely try using a session. This might already be sufficient to solve my problem. As for the proofs: I'm using \"subgoal\" and \"by\" quite furiously. But I'll take another look at Isar proofs in the hope of simplifying some long running proofs. Again, thanks!</p>",
        "id": 229089353,
        "sender_full_name": "Alex",
        "timestamp": 1615029129
    }
]