[
    {
        "content": "<p>I am trying to finish a proof of the following shape:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">mwe</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"⟦a = 1+1 ∧ b = 2+1 ∧ c = 3+1 ⟧ ⟹ a = 2 ∧ b = 3 ∧ c = 4\"</span>\n<span class=\"o\">(</span><span class=\"kp\">is</span><span class=\"w\"> </span><span class=\"s\">\"?asmps ⟹ ?concls\"</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"kp\">apply</span><span class=\"o\">(</span><span class=\"n\">elim</span><span class=\"w\"> </span><span class=\"n\">conjE</span><span class=\"o\">)</span>\n<span class=\"k\">proof</span><span class=\"o\">(</span><span class=\"n\">intro</span><span class=\"w\"> </span><span class=\"n\">conjI</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"s\">\"a = 2\"</span>\n<span class=\"w\">    </span><span class=\"gr\">sorry</span>\n<span class=\"k\">next</span>\n<span class=\"w\">  </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"s\">\"b = 3\"</span>\n<span class=\"w\">    </span><span class=\"gr\">sorry</span>\n<span class=\"k\">next</span>\n<span class=\"w\">  </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"s\">\"c = 4\"</span>\n<span class=\"w\">    </span><span class=\"gr\">sorry</span>\n<span class=\"k\">qed</span>\n</code></pre></div>\n<p>In each subgoal's proof the premises are all lost. How do I avoid that?<br>\nI know that the idiomatic way to use Isar is to use \"assumes...shows...\", however<br>\nin this proof I have a rather large conjunction (~100 conjuncts) as premise and therefore<br>\nwould like to not fully expand that in the lemma statement, but break that down later using<br>\n<code>apply(elim conjE)</code> so that individual clauses can be picked up as needed by ATPs later for individual subgoal proofs.</p>\n<p>Thanks a lot!</p>\n<p>Best wishes,<br>\nChengsong</p>",
        "id": 420455133,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1707398257
    },
    {
        "content": "<p>You said you don't wanna use \"assumes...shows...\", but wouldn't something like this exactly solve your problem?</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">mwe</span><span class=\"o\">:</span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"a = 1+1 ∧ b = 2+1 ∧ c = 3+1 \"</span>\n<span class=\"w\">  </span><span class=\"kp\">shows</span><span class=\"w\"> </span><span class=\"s\">\"a = 2 ∧ b = 3 ∧ c = 4\"</span>\n<span class=\"k\">proof</span><span class=\"o\">(</span><span class=\"n\">intro</span><span class=\"w\"> </span><span class=\"n\">conjI</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"s\">\"a = 2\"</span>\n<span class=\"w\">    </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">assms</span>\n<span class=\"w\">    </span><span class=\"kp\">apply</span><span class=\"o\">(</span><span class=\"n\">elim</span><span class=\"w\"> </span><span class=\"n\">conjE</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"gr\">sorry</span>\n<span class=\"k\">next</span>\n<span class=\"w\">  </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"s\">\"b = 3\"</span>\n<span class=\"w\">    </span><span class=\"gr\">sorry</span>\n<span class=\"k\">next</span>\n<span class=\"w\">  </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"s\">\"c = 4\"</span>\n<span class=\"w\">    </span><span class=\"gr\">sorry</span>\n<span class=\"k\">qed</span>\n</code></pre></div>",
        "id": 420461814,
        "sender_full_name": "Balazs Toth",
        "timestamp": 1707400262
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"659740\">Balazs Toth</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Making.20use.20of.20premises.20in.20Isar.20without.20.22assumes.22/near/420461814\">said</a>:</p>\n<blockquote>\n<p>You said you don't wanna use \"assumes...shows...\", but wouldn't something like this exactly solve your problem?</p>\n<p><div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">mwe</span><span class=\"o\">:</span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"a = 1+1 ∧ b = 2+1 ∧ c = 3+1 \"</span>\n<span class=\"w\">  </span><span class=\"kp\">shows</span><span class=\"w\"> </span><span class=\"s\">\"a = 2 ∧ b = 3 ∧ c = 4\"</span>\n<span class=\"k\">proof</span><span class=\"o\">(</span><span class=\"n\">intro</span><span class=\"w\"> </span><span class=\"n\">conjI</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"s\">\"a = 2\"</span>\n<span class=\"w\">    </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">assms</span>\n<span class=\"w\">    </span><span class=\"kp\">apply</span><span class=\"o\">(</span><span class=\"n\">elim</span><span class=\"w\"> </span><span class=\"n\">conjE</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"gr\">sorry</span>\n<span class=\"k\">next</span>\n<span class=\"w\">  </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"s\">\"b = 3\"</span>\n<span class=\"w\">    </span><span class=\"gr\">sorry</span>\n<span class=\"k\">next</span>\n<span class=\"w\">  </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"s\">\"c = 4\"</span>\n<span class=\"w\">    </span><span class=\"gr\">sorry</span>\n<span class=\"k\">qed</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Yes it does! Thanks for the nice solution!</p>",
        "id": 420469067,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1707402361
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"659740\">Balazs Toth</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Making.20use.20of.20premises.20in.20Isar.20without.20.22assumes.22/near/420461814\">said</a>:</p>\n<blockquote>\n<p>You said you don't wanna use \"assumes...shows...\", but wouldn't something like this exactly solve your problem?</p>\n<p><div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">mwe</span><span class=\"o\">:</span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"a = 1+1 ∧ b = 2+1 ∧ c = 3+1 \"</span>\n<span class=\"w\">  </span><span class=\"kp\">shows</span><span class=\"w\"> </span><span class=\"s\">\"a = 2 ∧ b = 3 ∧ c = 4\"</span>\n<span class=\"k\">proof</span><span class=\"o\">(</span><span class=\"n\">intro</span><span class=\"w\"> </span><span class=\"n\">conjI</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"s\">\"a = 2\"</span>\n<span class=\"w\">    </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">assms</span>\n<span class=\"w\">    </span><span class=\"kp\">apply</span><span class=\"o\">(</span><span class=\"n\">elim</span><span class=\"w\"> </span><span class=\"n\">conjE</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"gr\">sorry</span>\n<span class=\"k\">next</span>\n<span class=\"w\">  </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"s\">\"b = 3\"</span>\n<span class=\"w\">    </span><span class=\"gr\">sorry</span>\n<span class=\"k\">next</span>\n<span class=\"w\">  </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"s\">\"c = 4\"</span>\n<span class=\"w\">    </span><span class=\"gr\">sorry</span>\n<span class=\"k\">qed</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Something like this also works:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">mwe</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"⟦a = 1+1 ∧ b = 2+1 ∧ c = 3+1 ⟧ ⟹ a = 2 ∧ b = 3 ∧ c = 4\"</span>\n<span class=\"o\">(</span><span class=\"kp\">is</span><span class=\"w\"> </span><span class=\"s\">\"?asmps ⟹ ?concls\"</span><span class=\"o\">)</span>\n<span class=\"k\">proof</span><span class=\"o\">(</span><span class=\"n\">intro</span><span class=\"w\"> </span><span class=\"n\">conjI</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"k\">assume</span><span class=\"w\"> </span><span class=\"s\">\"?asmps\"</span>\n<span class=\"w\">  </span><span class=\"k\">thus</span><span class=\"w\"> </span><span class=\"s\">\"a = 2\"</span>\n<span class=\"w\">    </span><span class=\"kp\">apply</span><span class=\"o\">(</span><span class=\"n\">elim</span><span class=\"w\"> </span><span class=\"n\">conjE</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">simp</span>\n<span class=\"k\">next</span>\n<span class=\"w\">  </span><span class=\"k\">assume</span><span class=\"w\"> </span><span class=\"s\">\"?asmps\"</span>\n<span class=\"w\">  </span><span class=\"k\">thus</span><span class=\"w\"> </span><span class=\"s\">\"b = 3\"</span>\n<span class=\"w\">    </span><span class=\"kp\">apply</span><span class=\"o\">(</span><span class=\"n\">elim</span><span class=\"w\"> </span><span class=\"n\">conjE</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">simp</span>\n<span class=\"k\">next</span>\n<span class=\"w\">  </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"s\">\"c = 4\"</span>\n<span class=\"w\">    </span><span class=\"gr\">sorry</span>\n<span class=\"k\">qed</span>\n</code></pre></div>",
        "id": 420469947,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1707402623
    }
]