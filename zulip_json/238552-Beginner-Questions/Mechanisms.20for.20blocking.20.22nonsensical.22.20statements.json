[
    {
        "content": "<p>One of the common criticisms of set theory is that it permits \"nonsensical\" sentences like \"2 \\in 3\". <br>\nI would like to know what <em>superficial</em> features Isabelle has that block such things. Maybe one can use locales for this but I'm not yet experienced enough to see how one does this.<br>\nBy superficial, I mean not at the level of the logic, or with subtyping, but some kind of elementary guard at the user interface level to prevent the user from writing unintended / stupid things; perhaps toggleable.</p>\n<p>For example, suppose <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> is a type, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> is a subset of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>, and I have a binary relation <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> that is defined on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span>. For technical convenience I have defined <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>:</mo><mi>A</mi><mo>→</mo><mi>A</mi><mo>→</mo><mrow><mi mathvariant=\"sans-serif\">b</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">o</mi><mi mathvariant=\"sans-serif\">l</mi></mrow></mrow><annotation encoding=\"application/x-tex\">R : A \\to A\\to \\mathsf{bool}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">bool</span></span></span></span></span> but I only regard <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R(x,y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span>  as meaningful if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo>∈</mo><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">x,y\\in a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span>. I could form a true subtype from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> using typedef but this cannot be done if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> is variable rather than a constant closed term, I cannot apply theorems about all subsets of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span>, and so on. Are there any guards I could use that prevent me from writing <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R(x,y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span> unless there is a proof or assumption in the local context that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo>∈</mo><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">x,y\\in a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span>?</p>",
        "id": 356550887,
        "sender_full_name": "Patrick Nicodemus",
        "timestamp": 1683494834
    },
    {
        "content": "<p>I am interested in developing mathematics in ZFC drawing on the ZFC in HOL AFP article and this becomes particularly important there where you have many diverse mathematical objects inhabiting one type, you would want to overload symbols for different constant terms of that type, and so on. For example if I implement ordered pairs using Kuratowski pairs I can ask whether <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∈</mo><mrow><mo fence=\"true\">⟨</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo fence=\"true\">⟩</mo></mrow></mrow><annotation encoding=\"application/x-tex\">x\\in \\left\\langle x, y\\right\\rangle</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">⟨</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose delimcenter\" style=\"top:0em;\">⟩</span></span></span></span></span> but I'm looking for a way to stop myself from doing that in terms of rules at the user interface level without adding additional complexity to the underlying logic by working with the type of ordered pairs.</p>",
        "id": 356551311,
        "sender_full_name": "Patrick Nicodemus",
        "timestamp": 1683495154
    },
    {
        "content": "<p>I understand this is the whole point of type theory lol but it seems that (past a certain point?) the use of types tends to add complexity to automation.</p>",
        "id": 356551576,
        "sender_full_name": "Patrick Nicodemus",
        "timestamp": 1683495420
    },
    {
        "content": "<p>That $2 \\in 3$ is rather a bad example of a nonsensical statement in set theory. Of course in ZF for a natural number $n&gt;0$ one has $n = \\{0,1, ... n-1\\}$ , hence instead of writing $k \\in \\{0,1, ... , n-1\\}$ one can always write $k\\in n$ which is shorter and does not require special syntax for those three dots. I use that fact quite often in IsarMathLib, for example recently in the statement of the <a href=\"https://isarmathlib.org/Ring_Binomial_ZF.html#a_binomial_theorem\">binomial theorem</a>. One person's nonsensical statement can be another person's useful fact.</p>",
        "id": 356605732,
        "sender_full_name": "Sławomir Kołodyńaski",
        "timestamp": 1683527302
    },
    {
        "content": "<p>Yeah that's a stupid example. It's just the one everyone uses.</p>",
        "id": 356682980,
        "sender_full_name": "Patrick Nicodemus",
        "timestamp": 1683547718
    },
    {
        "content": "<p><a href=\"https://mathoverflow.net/questions/90820/set-theories-without-junk-theorems/90945#90945\">https://mathoverflow.net/questions/90820/set-theories-without-junk-theorems/90945#90945</a></p>",
        "id": 356683091,
        "sender_full_name": "Patrick Nicodemus",
        "timestamp": 1683547737
    },
    {
        "content": "<p>how about just <code>apply f x</code> where <code>f</code> is a function and we want <code>x</code> to be in the domain of <code>f</code></p>",
        "id": 356683416,
        "sender_full_name": "Patrick Nicodemus",
        "timestamp": 1683547805
    },
    {
        "content": "<p>The only related mechanism that comes to my mind is that in Isabelle/Isar definitions can have premises (see <a href=\"https://github.com/SKolodynski/IsarMathLib/blob/736356bbb76665cf18a8a7c8afcd1a51c039ae6f/IsarMathLib/UniformSpace_ZF_1.thy#L46\">this</a> as an example). Using such definition requires the premises to hold in the local context. This feature is orthogonal to the sets vs. types question and is not at the user interface (syntax) level. This <a href=\"https://math.stackexchange.com/questions/4441454/is-frac10-frac10-true-or-false/4446675#4446675\">answer</a> suggests that the mechanism you ask about is rather difficult to  implement, at least in FOL.</p>",
        "id": 357377079,
        "sender_full_name": "Sławomir Kołodyńaski",
        "timestamp": 1683744046
    }
]