[
    {
        "content": "<p>Hello dear friends,</p>\n<p>I'm looking for some <strong>method</strong> or <strong>tactic</strong> (instead of some Isar statements) that can instantiate schematic variables in a goal. Is anyone ever heard that?</p>\n<p>Thank you!</p>",
        "id": 346789404,
        "sender_full_name": "Qiyuan Xu",
        "timestamp": 1680601449
    },
    {
        "content": "<p>I think the usual approach is to either instantiate them indirectly with e.g. resolution (<code>rule</code> etc.) or to make sure that you don't even get schematic variables in the first place. I don't know of a tactic.</p>",
        "id": 346843449,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1680613353
    },
    {
        "content": "<p>I did once make one for existentials. One could probably do something similar for schematic variables without too much effort…</p>",
        "id": 346843582,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1680613382
    },
    {
        "content": "<p>Depends on whether you want to instantiate the schematic variables with particular terms or with some freshly created variables. I don’t know proof methods for these things, but there are attributes: <code>of</code> and <code>where</code> for the former, <code>no_vars</code> for the latter.</p>",
        "id": 346893804,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1680622252
    },
    {
        "content": "<p>Yeah, i made the method version of the <code>of</code> and <code>where</code> by myself, by copying and modifying the implementation in Eisbach. Actually I just modified the final declaration of the attributes and added the declaration of methods. The attributes originally apply on theorems and now as methods they apply on the state sequent of the proof. That is all, in only 10 lines of change. So I think, maybe it would be interesting to add the <code>of</code> and <code>where</code> method in Eisbach, adding 10 lines and giving good features?</p>",
        "id": 347022949,
        "sender_full_name": "Qiyuan Xu",
        "timestamp": 1680671579
    },
    {
        "content": "<p>Not sure. I have to say that I never missed such methods. Maybe you’re using a heavily tactics-based style, while my style is focused on Isar. With Isar, you often have to write things more explicitly, but that’s a feature: it makes the proofs more intelligible for the human reader.</p>",
        "id": 347091709,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1680690312
    }
]