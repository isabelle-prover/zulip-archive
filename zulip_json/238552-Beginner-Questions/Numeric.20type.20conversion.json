[
    {
        "content": "<p>I am trying to write a quick abbreviation, as follows:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">abbreviation</span> <span class=\"n\">threshold</span> <span class=\"o\">::</span> <span class=\"s\">\"nat ⇒ rat\"</span>  <span class=\"kp\">where</span>\n<span class=\"s\">\"threshold n ≡ of_int (floor ((of_nat n) / 2) + 1)\"</span>\n</code></pre></div>\n<p>However, that already gives me a warning which I don't understand: <code>Additional type variable(s) in specification of \"threshold\": 'a</code>, since I have no type variables in that abbreviation?</p>\n<p>Then, using that abbreviation...</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">definition</span> <span class=\"n\">my_def</span> <span class=\"o\">::</span> <span class=\"s\">\"bool\"</span> <span class=\"kp\">where</span>\n<span class=\"s\">\"my_def ≡ ∀p. 123 &gt; threshold (length p)\"</span>\n</code></pre></div>\n<p>...I get an error:</p>",
        "id": 227775212,
        "sender_full_name": "Max Nowak",
        "timestamp": 1614263384
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>Operator:  threshold :: ??&#39;a itself ⇒ nat ⇒ rat\nOperand:   length p :: nat\n</code></pre></div>\n<p>And I don't understand where <code>??'a itself</code> comes from.</p>",
        "id": 227775324,
        "sender_full_name": "Max Nowak",
        "timestamp": 1614263427
    },
    {
        "content": "<p>The warning tells you that some constants in your abbreviation can have multiple types, so they've been assigned a type variable</p>",
        "id": 227777189,
        "sender_full_name": "Jakub Kądziołka",
        "timestamp": 1614264118
    },
    {
        "content": "<p>If you ctrl+hover over <code>floor</code>, <code>of_nat</code> and <code>2</code>, you'll see that their inferred types are <code>'a =&gt; int</code>, <code>nat =&gt; 'a</code> and <code>'a</code> respectively</p>",
        "id": 227777417,
        "sender_full_name": "Jakub Kądziołka",
        "timestamp": 1614264216
    },
    {
        "content": "<p>Ah, yeah disambiguating with <code>(of_nat n)::rat</code> helped. Glad the solution was so simple, thank you!</p>",
        "id": 227777447,
        "sender_full_name": "Max Nowak",
        "timestamp": 1614264229
    },
    {
        "content": "<p>you could also use the name <code>rat_of_nat</code></p>",
        "id": 227777562,
        "sender_full_name": "Jakub Kądziołka",
        "timestamp": 1614264263
    },
    {
        "content": "<p>Ahhhh, TIL you can ctrl-hover!</p>",
        "id": 227777571,
        "sender_full_name": "Max Nowak",
        "timestamp": 1614264266
    },
    {
        "content": "<p>there's also <code>n div 2</code>, which is floored divison</p>",
        "id": 227777604,
        "sender_full_name": "Jakub Kądziołka",
        "timestamp": 1614264282
    },
    {
        "content": "<p>Oh yeah that simplifies it further, thank you :)</p>",
        "id": 227777802,
        "sender_full_name": "Max Nowak",
        "timestamp": 1614264361
    },
    {
        "content": "<p>When you do want to use <code>floor</code>, there's the syntax <code>⌊a⌋</code> (which you can type with <code>[.</code> <code>.]</code> and selecting between floor and ceiling in the autocompletion menu)</p>",
        "id": 227778082,
        "sender_full_name": "Jakub Kądziołka",
        "timestamp": 1614264450
    },
    {
        "content": "<p>The reason your <code>threshold</code> abbreviation got a <code>'a itself</code> parameter is that the actual value of the abbreviation depends on which type you choose. You can think of <code>'a itself</code> as a witness that tells you which type to actually use</p>",
        "id": 227778908,
        "sender_full_name": "Jakub Kądziołka",
        "timestamp": 1614264789
    },
    {
        "content": "<p>so, if you actually wanted to parametrize your <code>threshold</code> by what type is used for intermediate computation, you could invoke it with <code>threshold TYPE(rat) (length p)</code></p>",
        "id": 227778989,
        "sender_full_name": "Jakub Kądziołka",
        "timestamp": 1614264821
    },
    {
        "content": "<p>Huh, that is neat actually, but not necessary for what I'm doing.</p>",
        "id": 227779111,
        "sender_full_name": "Max Nowak",
        "timestamp": 1614264856
    },
    {
        "content": "<p>Yeah you basically almost never want that.</p>",
        "id": 227859562,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1614297036
    },
    {
        "content": "<p><code>'a itself</code> is a singleton type, just so that you've heard the term. (They are also used in functional programming)</p>",
        "id": 227859641,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1614297100
    }
]