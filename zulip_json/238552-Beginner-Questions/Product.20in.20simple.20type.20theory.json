[
    {
        "content": "<p>Up to now I used to think that dependent types were only those types such as Pi or Sigma types that require an indexed family of types. However, I was just reminded by a Lean tutorial (if I understood correctly at least) that a dependent type is any type that depends on another type, and lists and products are also dependent types in calculus of constructions. So how does a product work in Isabelle exactly? I guess it still cannot be considered a dependent type from any point of view?</p>",
        "id": 252655372,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1631205102
    },
    {
        "content": "<p>A dependent type is a type that depends on a term, not another type.</p>",
        "id": 252655594,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1631205199
    },
    {
        "content": "<p>Ok thanks I'd guess my question still holds with this correction doesn't it?</p>",
        "id": 252656123,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1631205410
    },
    {
        "content": "<p>You can construct types that depend on other types in isabelle. Those are just type constructors.</p>",
        "id": 252656874,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1631205734
    },
    {
        "content": "<p>Isabelle does not have dependent types. It uses classical logic vs dependent type theory</p>",
        "id": 253100525,
        "sender_full_name": "Eric Bond",
        "timestamp": 1631543931
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"404050\">Eric Bond</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Product.20in.20simple.20type.20theory/near/253100525\">said</a>:</p>\n<blockquote>\n<p>Isabelle does not have dependent types. It uses classical logic vs dependent type theory</p>\n</blockquote>\n<p>It is based on a simply typed lambda calculus, not classical logic. You can just as well work with non-constructive logics in Isabelle.</p>",
        "id": 253288001,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1631639793
    },
    {
        "content": "<p>The meta-logic Isabelle/Pure is a simply-typed λ-calculus with a rudimentary intuitionistic logic. Using this meta-logic, multiple object logics can be implemented. Several such object logics are part of the Isabelle distribution. The most famous of them is Isabelle/HOL, which is a classical logic. Thus, Kevin is right with respect to Isabelle/Pure, and Eric is right with respect to Isabelle/HOL.</p>",
        "id": 253300999,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1631644645
    }
]