[
    {
        "content": "<p>I have a datatype that looks something like this</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">datatype</span> <span class=\"n\">t</span> <span class=\"o\">=</span>\n  <span class=\"n\">A</span>\n  <span class=\"o\">|</span> <span class=\"n\">B</span>\n  <span class=\"o\">|</span> <span class=\"n\">C</span> <span class=\"n\">t</span>\n  <span class=\"o\">|</span> <span class=\"n\">D</span> <span class=\"n\">t</span> <span class=\"n\">t</span>\n  <span class=\"o\">|</span> <span class=\"n\">E</span> <span class=\"n\">t</span> <span class=\"n\">x</span>\n  <span class=\"o\">|</span> <span class=\"n\">F</span> <span class=\"n\">t</span> <span class=\"n\">x</span>\n</code></pre></div>\n<p>I want to prove </p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span> <span class=\"s\">\"f t = g t\"</span>\n</code></pre></div>\n<p>but only for <code>t</code> equal to<code>A</code> to <code>D</code>. This shall be an auxiliary lemma for a bigger proof that involves all the cases for <code>t</code>.  </p>\n<p>Is there a way to do this in a neat fashion or do I need to write multiple lemmas where <code>t</code> is hardcoded to be <code>A</code> etc.</p>",
        "id": 292594103,
        "sender_full_name": "waynee95",
        "timestamp": 1660056937
    },
    {
        "content": "<p>I don't think this works with a list of lemmas, since <code>t</code> appears recursively.<br>\nDepending on the situation, I might either introduce a new, restricted datatype or add a predicate that only allows <code>A</code> to <code>D</code> as an assumption.</p>",
        "id": 292722222,
        "sender_full_name": "Maximilian Schaeffeler",
        "timestamp": 1660124351
    }
]