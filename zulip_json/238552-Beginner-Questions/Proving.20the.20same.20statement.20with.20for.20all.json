[
    {
        "content": "<p>Given <code>have \"⟦i ∈ {0..m-1}; j ∈ {0..m-1}; (f i) mod m = (f j) mod m⟧ ⟹ i = j\"</code>, how can I show</p>\n<p><code> \"∀i ∈ {0..m-1}. ∀j ∈ {0..m-1}. (f i) mod m = (f j) mod m ⟶ i = j\"</code>?</p>",
        "id": 372972062,
        "sender_full_name": "Kevin Lee",
        "timestamp": 1688664005
    },
    {
        "content": "<p>By using the introduction rules for <code>∀</code> and <code>→</code>, which are named something like <code>allI</code> and <code>impI</code>. The <code>standard</code> method is doing that for <code>∀</code> and <code>→</code>; so something like <code>standard+</code> might work (but could apply <code>standard</code> too often).</p>\n<p>In general it’s advisable to stay away from object logic counterparts of meta-logic connectors as much as possible, as Isar and the proof methods are tailored towards the meta-logic (and are to a large degree not specific to HOL). So avoid <code>∀</code>, <code>→</code>, and <code>∧</code> where you can, as long as it doesn’t create really unreasonable situations. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> In definitions of predicates, for example, you still need them, because you need to construct booleans, which don’t exist on the meta-level, but statements like yours above should be made using the meta-logic and thus rather be treated as logical derivation rules instead of single logical statements.</p>",
        "id": 372979252,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1688665860
    },
    {
        "content": "<p>In this case you would need <code>ballI</code> not <code>allI</code> because of forall _ in _. But yeah, don't use HOL quantifiers in theorems if you don't have to</p>",
        "id": 373103633,
        "sender_full_name": "Jan van Brügge",
        "timestamp": 1688714161
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 373265779,
        "sender_full_name": "Kevin Lee",
        "timestamp": 1688746520
    }
]