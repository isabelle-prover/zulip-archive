[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">theory</span><span class=\"w\"> </span><span class=\"n\">Regular_Exp</span>\n<span class=\"kp\">imports</span><span class=\"w\"> </span><span class=\"n\">Regular_Set</span>\n<span class=\"k\">begin</span>\n\n<span class=\"k\">datatype</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">atoms</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">rexp</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">  </span><span class=\"n\">is_Zero</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Zero</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"w\">  </span><span class=\"n\">is_One</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">One</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"w\">  </span><span class=\"n\">Atom</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"w\">  </span><span class=\"n\">Plus</span><span class=\"w\"> </span><span class=\"s\">\"('a rexp)\"</span><span class=\"w\"> </span><span class=\"s\">\"('a rexp)\"</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"w\">  </span><span class=\"n\">Times</span><span class=\"w\"> </span><span class=\"s\">\"('a rexp)\"</span><span class=\"w\"> </span><span class=\"s\">\"('a rexp)\"</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"w\">  </span><span class=\"n\">Star</span><span class=\"w\"> </span><span class=\"s\">\"('a rexp)\"</span>\n\n\n<span class=\"k\">instantiation</span><span class=\"w\"> </span><span class=\"n\">rexp</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">order</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"s\">\"{order}\"</span>\n<span class=\"k\">begin</span>\n<span class=\"ow\">...</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>For the code above, I have several misunderstanding. </p>\n<ol>\n<li>why atoms in datatype could return a set, in the tutorial the parameter just means the variable.</li>\n<li>What is the role of first and second order in the class instantiation.</li>\n</ol>",
        "id": 375707529,
        "sender_full_name": "Hongjian Jiang",
        "timestamp": 1689499284
    },
    {
        "content": "<p>any helps would be appreciated</p>",
        "id": 375744453,
        "sender_full_name": "Hongjian Jiang",
        "timestamp": 1689510443
    },
    {
        "content": "<p>I have no clue what you are talking about. In</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">instantiation</span><span class=\"w\"> </span><span class=\"n\">rexp</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">order</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"s\">\"order\"</span>\n</code></pre></div>\n<p>If you think about applying it to <code>'a rexp</code>: The first <code>(order)</code> is a constraint about <code>'a</code> (in this case, <code>'a</code> must be equipped with an order) and the second <code>order</code> is the constraint you add to <code>rexp</code>. In this case if the case type has an order, then rexp also has an order</p>",
        "id": 375745913,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1689510906
    },
    {
        "content": "<p>Thank you very much. You mean every rexp here is type order now like Zero is an order, One is an order. </p>\n<p>And rexp is a name of order class. </p>\n<p>What is the function of is_Zero, is_One and atoms play in the datatype.</p>",
        "id": 375753212,
        "sender_full_name": "Hongjian Jiang",
        "timestamp": 1689513110
    },
    {
        "content": "<p>No, this is not what I meanâ€¦</p>",
        "id": 375753770,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1689513262
    },
    {
        "content": "<p><code>Zero</code> and <code>One</code> are elements of a type called <code>rexp</code> parametrized by another type</p>",
        "id": 375753862,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1689513292
    },
    {
        "content": "<p>and <code>is_Zero</code> and <code>is_One</code> are discriminators (see <a href=\"https://isabelle.in.tum.de/dist/Isabelle2022/doc/datatypes.pdf\">here</a>)</p>",
        "id": 375754193,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1689513384
    },
    {
        "content": "<p>and atoms returns the set of all atoms in the rexp formula</p>",
        "id": 375754396,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1689513465
    }
]