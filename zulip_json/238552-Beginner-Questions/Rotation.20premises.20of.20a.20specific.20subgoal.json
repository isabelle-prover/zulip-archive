[
    {
        "content": "<p>Hi! Is there a tactic/conversion in the stdlib to rotate the pure assumptions of a subgoal? (Motivation: I'd like to have an index-based version of <code>thin_tac</code> and want to rotate the premise-to-be-removed to the front first, and then drop it via <code>Pure.thin_rl</code>) The kernel has a helper for rotating subgoals themselves, but I don't see how to get from there to rotating the premises of a subgoal.</p>",
        "id": 351900217,
        "sender_full_name": "Hanno Becker",
        "timestamp": 1682177285
    },
    {
        "content": "<p>You are looking for <code>rotate_tac</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">ML</span><span class=\"s\">‹</span>\n<span class=\"s\">  fun thin_tac i = rotate_tac i THEN' eresolve0_tac [thin_rl] THEN' rotate_tac (~i)</span>\n<span class=\"s\">›</span>\n\n<span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"s\">\"P x ⟹ Q x ⟹ C\"</span><span class=\"w\"> </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"s\">\"⋀x. P' x ⟹ Q' x ⟹ C'\"</span>\n<span class=\"w\">  </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"o\">-</span>\n<span class=\"w\">  </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">tactic</span><span class=\"w\"> </span><span class=\"s\">‹rotate_tac 1 1›</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"c\">(*works*)</span>\n<span class=\"w\">  </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">tactic</span><span class=\"w\"> </span><span class=\"s\">‹rotate_tac 1 2›</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"c\">(*works*)</span>\n<span class=\"w\">  </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">tactic</span><span class=\"w\"> </span><span class=\"s\">‹thin_tac 0 1›</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"c\">(*works*)</span>\n<span class=\"w\">  </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">tactic</span><span class=\"w\"> </span><span class=\"s\">‹thin_tac 1 2›</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"c\">(*works*)</span>\n<span class=\"w\">  </span><span class=\"gr\">oops</span>\n</code></pre></div>",
        "id": 351918441,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1682184627
    },
    {
        "content": "<p>There’s also the <code>rotated</code> attribute. Not sure how relevant this is to you use case.</p>",
        "id": 351918668,
        "sender_full_name": "Wolfgang Jeltsch",
        "timestamp": 1682184688
    },
    {
        "content": "<p>Ah, great. Not sure how I missed that <span aria-label=\"rolling eyes\" class=\"emoji emoji-1f644\" role=\"img\" title=\"rolling eyes\">:rolling_eyes:</span>  Thank you!</p>",
        "id": 351930748,
        "sender_full_name": "Hanno Becker",
        "timestamp": 1682187725
    }
]