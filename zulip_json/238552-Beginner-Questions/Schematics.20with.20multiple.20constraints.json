[
    {
        "content": "<p>Hi! This is a follow-up and hopefully clarifying generalization of the \"Ignoring subgoals with too many schematics\" question.</p>\n<p>In the context of largely automated reasoning, what is the 'idiomatic' way to deal with introduction rules introducing a schematic variable with multiple constraints, _some_ of which are simple (something like a bound) but some of which are truly constraining?</p>\n<p>When applying such a rule, one is left with one subgoal per constraint. If, by bad luck, one happens to look at one of the trivial goals first, tactics are likely going to instantiate the schematic incorrectly. </p>\n<p>How could one force Isabelle to solve the 'hard' subgoals first?</p>",
        "id": 329218624,
        "sender_full_name": "Hanno Becker",
        "timestamp": 1676993101
    },
    {
        "content": "<p>I normally just try to avoid such situations by instantiating the theorems.</p>",
        "id": 329221751,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1676993758
    },
    {
        "content": "<p>What you would need, more generally speaking, is a way to annotate theorems in order to guide auto towards the right subgoal to solve first. But that is not possible at the moment.</p>",
        "id": 329222199,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1676993848
    },
    {
        "content": "<p>Ok. Thank you for your reply Lukas!</p>",
        "id": 329715021,
        "sender_full_name": "Hanno Becker",
        "timestamp": 1677158036
    }
]