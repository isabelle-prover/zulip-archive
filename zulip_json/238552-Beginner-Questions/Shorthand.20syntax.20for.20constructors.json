[
    {
        "content": "<p>Is there a more concise way to express </p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"s\">\"interp_c (I d ic ir) (All r c) = (let int = (I d ic ir)</span>\n<span class=\"s\">  in  &lt;something that uses int as well as its inner values&gt;\"</span><span class=\"w\"></span>\n</code></pre></div>\n<p>? Can I somehow abbreviate the (I d ic ir) constructor without a let binding, like the Haskell <code>xxs@(x:xs)</code> syntax?</p>",
        "id": 316372590,
        "sender_full_name": "Christian Zimmerer",
        "timestamp": 1671229964
    },
    {
        "content": "<p>There is <code>HOL-Library.Pattern_Aliases</code>.  After importing it and <code>unbundle pattern_aliases</code> you can write something like <code>(I d ic ir =: i)</code>. There are some more examples and explanation in the <code>Pattern_Aliases</code> theory. I have, however, never used this in \"production\", so I do not know how well this works.</p>",
        "id": 316378310,
        "sender_full_name": "Simon Ro√ükopf",
        "timestamp": 1671232824
    }
]