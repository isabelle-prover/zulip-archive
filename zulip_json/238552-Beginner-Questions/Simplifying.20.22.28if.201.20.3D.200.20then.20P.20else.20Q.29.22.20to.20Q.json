[
    {
        "content": "<p>Hi,</p>\n<p>I was trying to prove a lemma with a subgoal whose conclusion is of the form <code>(if 1 = 0 then P else Q)</code>,<br>\nwhere P and Q are some (computable but) huge boolean predicates. I would like to convert that goal into just <code>Q</code>.<br>\nI am not sure what's the neatest way to do that single change on the goal state.<br>\nI tried to prove some lemma like </p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">if_simp1</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kp\">shows</span><span class=\"w\"> </span><span class=\"s\">\"(if 1 = 0 then P else Q) = Q\"</span>\n<span class=\"w\">  </span><span class=\"gr\">oops</span>\n</code></pre></div>\n<p>and then use <code>apply (subst if_simp1)</code> to do that rewriting,<br>\nbut apparently that does not hold since P/Q might not terminate etc.<br>\nHow do I restrict the lemma to the terminating case?<br>\nAlternatively, how can I do a single step rewriting <code>(if 1 = 0 then P else Q) ----&gt; Q</code>?</p>\n<p>Here's a (contrived) MWE:<br>\n<a href=\"/user_uploads/14278/RqMYi48qSISlyAgB9-AKlZVV/IfExample.thy\">IfExample.thy</a></p>\n<p>Best wishes,<br>\nChengsong</p>",
        "id": 402024955,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1699979802
    },
    {
        "content": "<p>How about <code>apply (subst if_not_P)</code>?</p>",
        "id": 402026782,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1699980370
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233155\">Lukas Stevens</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Simplifying.20.22.28if.201.20.3D.200.20then.20P.20else.20Q.29.22.20to.20Q/near/402026782\">said</a>:</p>\n<blockquote>\n<p>How about <code>apply (subst if_not_P)</code>?</p>\n</blockquote>\n<p>Thank you!</p>\n<p>Inspired by your answer I also realised that <br>\n<code>  find_theorems \"if False then _ else _  \" </code><br>\ngives me the desired theorem.</p>",
        "id": 402030485,
        "sender_full_name": "Chengsong Tan",
        "timestamp": 1699981538
    }
]