[
    {
        "content": "<p>In HOL-Algebra.Group, early on we have</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">record</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"n\">monoid</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\">  </span><span class=\"s\">\"'a partial_object\"</span><span class=\"w\"> </span><span class=\"o\">+</span>\n<span class=\"w\">  </span><span class=\"n\">mult</span><span class=\"w\">    </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"['a, 'a] ⇒ 'a\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"kp\">infixl</span><span class=\"w\"> </span><span class=\"s\">‹⊗ı›</span><span class=\"w\"> </span><span class=\"n\">70</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"n\">one</span><span class=\"w\">     </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">‹𝟭ı›</span><span class=\"o\">)</span>\n\n<span class=\"k\">definition</span><span class=\"w\"> </span><span class=\"n\">m_inv</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"('a, 'b) monoid_scheme =&gt; 'a =&gt; 'a\"</span>\n<span class=\"w\">  </span><span class=\"kp\">where</span><span class=\"w\"> </span><span class=\"s\">\"m_inv G x = (THE y. y ∈ carrier G ∧ x ⊗⇘G⇙ y = 𝟭⇘G⇙ ∧ y ⊗⇘G⇙ x = 𝟭⇘G⇙)\"</span>\n</code></pre></div>\n<p>Cmd-clicking on <code>monoid_scheme</code> jumps to the record definition a few lines above.  I figured it might be something automatically generated when the record was created, so I made a Scratch file containing this:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">theory</span><span class=\"w\"> </span><span class=\"n\">Scratch</span>\n<span class=\"w\">  </span><span class=\"kp\">imports</span><span class=\"w\"> </span><span class=\"n\">Main</span><span class=\"w\"> </span><span class=\"s\">\"HOL-Algebra.Congruence\"</span><span class=\"w\"> </span><span class=\"s\">\"HOL-Library.FuncSet\"</span>\n<span class=\"k\">begin</span>\n<span class=\"k\">record</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"n\">zonoid</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\">  </span><span class=\"s\">\"'a partial_object\"</span><span class=\"w\"> </span><span class=\"o\">+</span>\n<span class=\"w\">  </span><span class=\"n\">mult</span><span class=\"w\">    </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"['a, 'a] ⇒ 'a\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"kp\">infixl</span><span class=\"w\"> </span><span class=\"s\">‹⊗ı›</span><span class=\"w\"> </span><span class=\"n\">70</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"n\">one</span><span class=\"w\">     </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">‹𝟭ı›</span><span class=\"o\">)</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>A query with <code>name: zonoid</code> then yielded many many things, but not <code>zonoid_scheme</code>. I also grepped through the HOL sources for <code>monoid_scheme</code> and saw it used a lot, but nothing that looked like a definition. </p>\n<p>As I'm trying to define a notion of isomorphism for affine and projective planes (locales that I've definied), I was hoping to mimic the definition of <code>hom</code> from the Algebra theories, but go stuck here. Can someone tell me where <code>monoid_scheme</code> came from, and what it means?</p>",
        "id": 509457131,
        "sender_full_name": "John  Hughes",
        "timestamp": 1743515304
    },
    {
        "content": "<p>monoid is a record and monoid_scheme is the definition generated by the record package</p>",
        "id": 509466617,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1743517544
    },
    {
        "content": "<p>So why, in my scratch example, does \"zonoid_scheme\" not show up in the search?</p>",
        "id": 509483722,
        "sender_full_name": "John  Hughes",
        "timestamp": 1743521301
    },
    {
        "content": "<p>It is a type, not a term</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kt\">typ</span><span class=\"w\"> </span><span class=\"s\">‹('a, 'b) zonoid_scheme›</span>\n</code></pre></div>",
        "id": 509485956,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1743521809
    },
    {
        "content": "<p>You can search for <code>‹_ :: (_, _) zonoid_scheme›</code> however</p>",
        "id": 509486019,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1743521824
    }
]