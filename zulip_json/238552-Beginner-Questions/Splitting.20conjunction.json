[
    {
        "content": "<p>If I have a theorem foos_conjunction \"P1 ∧ P2 ∧ .. ∧ Pn\" and want to split it into an indexable theorem list, how do I do this? My goal is to write foos(3) for P3 etc. - I can do it in the top-level with this:</p>\n<p>ML ‹ML_Thms.bind_thms (\"foos\", BNF_FP_Util.split_conj_thm @{thm foos_conjunction})›</p>\n<p>However, ML‹...› doesn't work in an Isar-proof. Is there another way? I feel like I am overcomplicating things here (I tried playing around with atomize_conj too). Of course, I could write foos_conjunction[THEN conjunct1] for P1 but for accessing Pn it will get messy real quick.</p>",
        "id": 270989497,
        "sender_full_name": "cai",
        "timestamp": 1644245810
    },
    {
        "content": "<p>why not split foos_conjunction directly?</p>",
        "id": 270993500,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1644247299
    },
    {
        "content": "<p>Can you elaborate please? Do you mean to repeatedly eliminate with conjE? I have theorems where I want to do thm1[OF P2 P3 P4] or thm2[OF P1 P5] and so on in that Isar proof. So I want to reference them within multiple sub-proofs.</p>",
        "id": 270996517,
        "sender_full_name": "cai",
        "timestamp": 1644248472
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>lemma foo_conjunctions:\n   &quot;P1&quot; &quot;P2&quot; &quot;P3&quot; ...\n</code></pre></div>",
        "id": 270999589,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1644249621
    },
    {
        "content": "<p>Ah, yes but it coming from an entry in AFP that I have no control over. I could copy it and modify accordingly actually.</p>",
        "id": 271001015,
        "sender_full_name": "cai",
        "timestamp": 1644250147
    }
]