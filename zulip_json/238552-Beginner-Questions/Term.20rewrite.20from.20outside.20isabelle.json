[
    {
        "content": "<p>Hi!, we have a small language formalized in Isabelle, and we wanted to add some hints in a LSP to let the user know of some possible optimizations (for example showing that <code>ValueAdd (Constant 1) (Constant 2) == Constant 3</code>). Is it possible to access Isabelle rewrite capabilities from outside of Isabelle?. We are already generating Haskell code from our proofs, so it would be great if we could also generate the rewrite logic.</p>",
        "id": 303648521,
        "sender_full_name": "Hernán Rajchert",
        "timestamp": 1665585232
    },
    {
        "content": "<p>Easily? No. But I think that the <a href=\"https://isabelle.in.tum.de/library/Doc/System/Server.html\">Isabelle server</a> can be used for such cases.</p>",
        "id": 303664966,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1665588703
    },
    {
        "content": "<p>(basic idea: you generate the command <code>value \"ValueAdd (Constant 1) (Constant 2)\"</code> and parse the result. For more complex things, <code>lemma ... apply auto</code> or along these lines)</p>",
        "id": 303665532,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1665588871
    },
    {
        "content": "<p>There's also <code>libisabelle</code> which has been used for such things in the past, but its status is less official than that of the Isabelle server and I do not know what its current state is.</p>",
        "id": 303668118,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1665589720
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 304662455,
        "sender_full_name": "Hernán Rajchert",
        "timestamp": 1666094172
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"233198\">@Mathias Fleury</span> , I'm trying the Isabelle server approach, but I don't see a way to pass commands like <code>value expr</code>. </p>\n<p>If I use the <code>help</code> command I see the following options</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"cancel\"</span><span class=\"p\">,</span><span class=\"s2\">\"echo\"</span><span class=\"p\">,</span><span class=\"s2\">\"help\"</span><span class=\"p\">,</span><span class=\"s2\">\"purge_theories\"</span><span class=\"p\">,</span><span class=\"s2\">\"session_build\"</span><span class=\"p\">,</span><span class=\"s2\">\"session_start\"</span><span class=\"p\">,</span><span class=\"s2\">\"session_stop\"</span><span class=\"p\">,</span><span class=\"s2\">\"shutdown\"</span><span class=\"p\">,</span><span class=\"s2\">\"use_theories\"</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>I was able to start a session using my ROOT file, but I don't know how to send a particular command.</p>",
        "id": 353378201,
        "sender_full_name": "Hernán Rajchert",
        "timestamp": 1682612331
    },
    {
        "content": "<p>I have never used it, so I don't really know. But from the linked documentation, it seems that you need to start a session (with session_start), and then, I am not sure.  You might have to write a temporary file however</p>",
        "id": 353644671,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1682658507
    },
    {
        "content": "<p>best ask those questions on the mailing list</p>",
        "id": 353644837,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1682658535
    },
    {
        "content": "<p>where Makarius (the developer and probably the only person who ever used it) reads and answers</p>",
        "id": 353645017,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1682658563
    },
    {
        "content": "<p>Thanks! will do</p>",
        "id": 353888924,
        "sender_full_name": "Hernán Rajchert",
        "timestamp": 1682690747
    },
    {
        "content": "<p>I got the same impression, the only way available seems to be to write a custom file</p>",
        "id": 353889229,
        "sender_full_name": "Hernán Rajchert",
        "timestamp": 1682690771
    }
]