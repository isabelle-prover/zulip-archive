[
    {
        "content": "<p>Hi everyone, </p>\n<p>we have a typedecl in an old theory we found:</p>\n<p><code>typedecl mytype</code></p>\n<p>As far as we understand this means that we know nothing about mytype except that there is at least one element of this type. We read in some old documentation that it is only possible to introduce properties about mytype with an axiomatization which is not recommended. It also sounded like other theories could \"instantiate\" a typedecl but we found out that this is not the case. </p>\n<p>We are interested in creating refinements of this type with additional assumptions while automatically having all theorems on the original mytype.  </p>\n<p>We thought we could use a locale for this and then interpret the type differently. How would we fix a type inside of our locale?</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">locale</span><span class=\"w\"> </span><span class=\"n\">MyLocale</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">mytype</span><span class=\"o\">::</span><span class=\"s\">\"'a\"</span><span class=\"w\"></span>\n</code></pre></div>\n<p>But then mytype is a variable, is that right? Could we just fix 'a and best give it a nicer name?</p>",
        "id": 310491923,
        "sender_full_name": "Hanna Lachnitt",
        "timestamp": 1668629164
    },
    {
        "content": "<p>the trick is to instantiate the variable with <code>TYPE('a)</code></p>",
        "id": 310501448,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1668632655
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">locale</span><span class=\"w\"> </span><span class=\"n\">MyLocale</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">mytype</span><span class=\"o\">::</span><span class=\"s\">\"'a itself\"</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 310501543,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1668632705
    },
    {
        "content": "<p>it is not different from what you are saying, but it looks nicer when instantiating</p>",
        "id": 310501596,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1668632740
    },
    {
        "content": "<p>You could use any name instead of <code>'a</code></p>",
        "id": 310501626,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1668632754
    },
    {
        "content": "<p>although this will have some conquences on the inferred types on theorems (the default name being 'a)</p>",
        "id": 310501748,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1668632787
    }
]