[
    {
        "content": "<p>Hello everyone,<br>\nI am trying to implement a pluraity voting system and i have problem when adding the ballots...<br>\nI have the isabelle code below with which I want to take a sorted Preference-List (most favoured at top, least at bottom) and add a 1 which was encrypted with aencrypt from \"Game_Based_Crypto.Elgamal\" to another list. The other list has Pairs which consist of one element like the ones in the Preference-List and a second one which holds the encrypted numeric value of how many times someone voted for it:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">theory</span><span class=\"w\"> </span><span class=\"n\">verifyPlurality</span><span class=\"w\"> </span><span class=\"kp\">imports</span>\n<span class=\"s\">\"Game_Based_Crypto.Elgamal\"</span>\n<span class=\"s\">\"...lot of folders.../Preference_List\"</span>\n<span class=\"k\">begin</span>\n<span class=\"k\">context</span><span class=\"w\"> </span><span class=\"n\">elgamal_base</span>\n<span class=\"k\">begin</span>\n\n<span class=\"c\">(*The Preference_List is already encrypted,</span>\n<span class=\"c\"> this function takes the encrypted Preference_List finds its first element in</span>\n<span class=\"c\"> the Pair-List representing the Ballot where the votes are accumulated and adds 1</span>\n<span class=\"c\"> (encrypted 1 because of the homomorphic adding)*)</span>\n<span class=\"k\">fun</span><span class=\"w\"> </span><span class=\"n\">add_plurality_ballot</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'grp pub_key ⇒'a Preference_List ⇒ ('a × 'b) list ⇒ ('a × 'b) list\"</span>\n<span class=\"w\">    </span><span class=\"kp\">where</span>\n<span class=\"w\">    </span><span class=\"s\">\"add_plurality_ballot _ [] (s) = s\"</span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"s\">\"add_plurality_ballot pk (x # xs) (s) =</span>\n<span class=\"s\">    (case find (λ(y,c). (x = y)) s of</span>\n<span class=\"s\">      None ⇒ add_plurality_ballot pk xs (s) |</span>\n<span class=\"s\">      Some (y, c) ⇒ (y,c + (aencrypt pk 1)) # remove1 (λ(a,_).a = y) s)\"</span>\n\n<span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>A Preference_List is just this with some functions: <code>type_synonym 'a Preference_List = \" 'a list\"</code><br>\nI get this error:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">Type</span><span class=\"w\"> </span><span class=\"n\">unification</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Variable</span><span class=\"w\"> </span><span class=\"n n-Type\">'grp</span><span class=\"o\">::</span><span class=\"n\">type</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">sort</span><span class=\"w\"> </span><span class=\"n\">one</span>\n\n<span class=\"n\">Type</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"kp\">in</span><span class=\"w\"> </span><span class=\"n\">application</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">incompatible</span><span class=\"w\"> </span><span class=\"n\">operand</span><span class=\"w\"> </span><span class=\"n\">type</span>\n\n<span class=\"n\">Operator</span><span class=\"o\">:</span><span class=\"w\">  </span><span class=\"n\">aencrypt</span><span class=\"w\"> </span><span class=\"n\">pk</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"n n-Type\">'grp</span><span class=\"w\"> </span><span class=\"n\">⇒</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n n-Type\">'grp</span><span class=\"w\"> </span><span class=\"n\">×</span><span class=\"w\"> </span><span class=\"n n-Type\">'grp</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">spmf</span>\n<span class=\"n\">Operand</span><span class=\"o\">:</span><span class=\"w\">   </span><span class=\"n\">1</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"o\">??</span><span class=\"n n-Type\">'a</span>\n\n<span class=\"n\">Coercion</span><span class=\"w\"> </span><span class=\"n\">Inference</span><span class=\"o\">:</span>\n\n<span class=\"n\">Local</span><span class=\"w\"> </span><span class=\"n\">coercion</span><span class=\"w\"> </span><span class=\"n\">insertion</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">operand</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"o\">:</span>\n<span class=\"n\">Variable</span><span class=\"w\"> </span><span class=\"n n-Type\">'grp</span><span class=\"o\">::</span><span class=\"n\">type</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">sort</span><span class=\"w\"> </span><span class=\"n\">one</span>\n\n<span class=\"n\">Now</span><span class=\"w\"> </span><span class=\"n\">trying</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">infer</span><span class=\"w\"> </span><span class=\"n\">coercions</span><span class=\"w\"> </span><span class=\"n\">globally.</span>\n\n<span class=\"n\">Coercion</span><span class=\"w\"> </span><span class=\"n\">inference</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"o\">:</span>\n<span class=\"n\">weak</span><span class=\"w\"> </span><span class=\"n\">unification</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">subtype</span><span class=\"w\"> </span><span class=\"n\">constraints</span><span class=\"w\"> </span><span class=\"n\">fails</span>\n<span class=\"n\">Clash</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">types</span><span class=\"w\"> </span><span class=\"s\">\"_ × _\"</span><span class=\"w\"> </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"s\">\"_ ⇒ _\"</span>\n</code></pre></div>\n<p>I mean, I get these are not the same types but is there a way to convert one or is there an altogether different/better solution?</p>\n<p>Thank you for the help :)</p>",
        "id": 438161907,
        "sender_full_name": "Jamie",
        "timestamp": 1715495216
    },
    {
        "content": "<p>I haven't looked deeply, but the comment says \"Preference_List\" is already encrypted, so shouldn't your type variable <code>'a</code> be <code>'grp</code> ?</p>",
        "id": 438167204,
        "sender_full_name": "Yong Kiam",
        "timestamp": 1715501165
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"234226\">Yong Kiam</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Unification.20for.20encrypting.20.28elgamal.2C.20game.20based.20crypto.29.201/near/438167204\">schrieb</a>:</p>\n<blockquote>\n<p>I haven't looked deeply, but the comment says \"Preference_List\" is already encrypted, so shouldn't your type variable <code>'a</code> be <code>'grp</code> ?</p>\n</blockquote>\n<p>Thank you! You are right I just fixed it up, but i still have the same problem. I don't know how I can encrypt the numer 1 with aencrypt, even if I only write this functrion:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">fun</span><span class=\"w\"> </span><span class=\"n\">encrypt1</span><span class=\"o\">::</span><span class=\"s\">\"'grp pub_key ⇒ nat ⇒ 'grp ⇒ 'grp cipher spmf\"</span><span class=\"w\"> </span><span class=\"kp\">where</span>\n<span class=\"s\">\"encrypt1 = aencrypt pk 1\"</span>\n</code></pre></div>\n<p>I get the same error as above. I don't know how I can make the 1 fit in.</p>",
        "id": 438179676,
        "sender_full_name": "Jamie",
        "timestamp": 1715514754
    },
    {
        "content": "<p>I think you want either:</p>\n<p>term \"aencrypt pk 𝟭\"</p>\n<p>term \"aencrypt pk (one 𝒢)\"</p>",
        "id": 438185642,
        "sender_full_name": "Yong Kiam",
        "timestamp": 1715521378
    },
    {
        "content": "<p>I don't know why but that entry is using groups from HOL-Algebra <del>which is older(?),</del> probably there's a reason for it and someone else would be able to answer better, but the unit is written as I've typed above (\\&lt;one&gt;)</p>\n<p>edit: I believe I have it the other way around in terms of age ^</p>",
        "id": 438185924,
        "sender_full_name": "Yong Kiam",
        "timestamp": 1715521647
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"234226\">Yong Kiam</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Unification.20for.20encrypting.20.28elgamal.2C.20game.20based.20crypto.29.201/near/438185642\">schrieb</a>:</p>\n<blockquote>\n<p>I think you want either:</p>\n<p>term \"aencrypt pk 𝟭\"</p>\n<p>term \"aencrypt pk (one 𝒢)\"</p>\n</blockquote>\n<p>This worked, thank you very much :)<br>\nUnfortunately now I have the problem that \"+\" does not add two elements of type \"('grp × 'grp) spmf\" (or even only type 'grp) like i thought it would with homomorphically encrypted.<br>\nIf you (or someone else) had a solution for this I would be very grateful :)</p>",
        "id": 438195867,
        "sender_full_name": "Jamie",
        "timestamp": 1715531527
    },
    {
        "content": "<p>you want ⊗</p>",
        "id": 438220881,
        "sender_full_name": "Yong Kiam",
        "timestamp": 1715557866
    },
    {
        "content": "<p>in general, it'd be good to look up the HOL-Algebra libraries, e.g.:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">record</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"n\">monoid</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\">  </span><span class=\"s\">\"'a partial_object\"</span><span class=\"w\"> </span><span class=\"o\">+</span>\n<span class=\"w\">  </span><span class=\"n\">mult</span><span class=\"w\">    </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"['a, 'a] ⇒ 'a\"</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"kp\">infixl</span><span class=\"w\"> </span><span class=\"s\">\"⊗ı\"</span><span class=\"w\"> </span><span class=\"n\">70</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"n\">one</span><span class=\"w\">     </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"n n-Type\">'a</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"s\">\"𝟭ı\"</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 438220909,
        "sender_full_name": "Yong Kiam",
        "timestamp": 1715557917
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"234226\">Yong Kiam</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Unification.20for.20encrypting.20.28elgamal.2C.20game.20based.20crypto.29.201/near/438220881\">schrieb</a>:</p>\n<blockquote>\n<p>you want ⊗</p>\n</blockquote>\n<p>Thank you! :D<br>\nI tried that one before but apparently had some other issue and it didn't work then, but now it does <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 438355040,
        "sender_full_name": "Jamie",
        "timestamp": 1715604938
    },
    {
        "content": "<p>In case anyone has a similar problem in the future, here is my solution:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">definition</span><span class=\"w\"> </span><span class=\"n\">add_pair</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"('grp × 'grp) spmf ⇒ ('grp × 'grp) spmf ⇒ ('grp × 'grp) spmf\"</span><span class=\"w\"> </span><span class=\"kp\">where</span>\n<span class=\"s\">\"add_pair x_spmf y_spmf = do {</span>\n<span class=\"s\">    (x1, x2) ← x_spmf;</span>\n<span class=\"s\">    (y1, y2) ← y_spmf;</span>\n<span class=\"s\">    return_spmf (x1 ⊗ y1, x2 ⊗ y2)</span>\n<span class=\"s\">}\"</span>\n</code></pre></div>\n<p>And thanks again for the help :)</p>",
        "id": 438356043,
        "sender_full_name": "Jamie",
        "timestamp": 1715605207
    },
    {
        "content": "<p>no worries, do note that you can write this using <code>map_spmf</code> and <code>pair_spmf</code></p>",
        "id": 438378273,
        "sender_full_name": "Yong Kiam",
        "timestamp": 1715610918
    }
]