[
    {
        "content": "<p>I'd like to automatically check if a theorem in my theory is solveable by try/sledgehammer or other tactics.<br>\nIs there a way to do this?</p>\n<p>I've tried the mirabelle tool, but to my knowledge that requires a proof to already be present.</p>",
        "id": 430265257,
        "sender_full_name": "Nils Buchholz",
        "timestamp": 1711722952
    },
    {
        "content": "<p>The mirabelle sledgehammer action does not really require a proof, but it looks for a <code>by</code>. So what you can do is axiomatize your lemma with the attribute <code>[no_atp]</code> (so it doesn't get used by sledgehammer), and \"prove\" it with <code>by (rule your_axiomatized_lemma)</code>.</p>",
        "id": 432676558,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1712832301
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"348400\">Fabian Huch</span> <a href=\"#narrow/stream/238552-Beginner-Questions/topic/Using.20Isabelle.20as.20an.20automated.20testing.20tool/near/432676558\">said</a>:</p>\n<blockquote>\n<p>The mirabelle sledgehammer action does not really require a proof, but it looks for a <code>by</code>. So what you can do is axiomatize your lemma with the attribute <code>[no_atp]</code> (so it doesn't get used by sledgehammer), and \"prove\" it with <code>by (rule your_axiomatized_lemma)</code>.</p>\n</blockquote>\n<p>Is there a <code>[no_atp]</code> option for theorems inside locales?<br>\nWhen I prove my theorem in the context of a locale, sledgehammer still uses the axiomatized version.</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">locale</span><span class=\"w\"> </span><span class=\"n\">varsAndFunctions</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">var_p</span><span class=\"o\">::</span><span class=\"s\">\"bool\"</span>\n<span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">var_q</span><span class=\"o\">::</span><span class=\"s\">\"bool\"</span>\n<span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"True\"</span>\n\n<span class=\"kn\">theorem</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"kp\">in</span><span class=\"w\"> </span><span class=\"n\">varsAndFunctions</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">solve_stub</span><span class=\"o\">[</span><span class=\"n\">no_atp</span><span class=\"o\">]:</span><span class=\"s\">\"False\"</span>\n<span class=\"w\">  </span><span class=\"gr\">sorry</span>\n\n<span class=\"kn\">theorem</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"kp\">in</span><span class=\"w\"> </span><span class=\"n\">varsAndFunctions</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">solve</span><span class=\"o\">:</span><span class=\"s\">\"False\"</span>\n<span class=\"w\">  </span><span class=\"kt\">sledgehammer</span>\n</code></pre></div>",
        "id": 432694925,
        "sender_full_name": "Nils Buchholz",
        "timestamp": 1712838642
    }
]