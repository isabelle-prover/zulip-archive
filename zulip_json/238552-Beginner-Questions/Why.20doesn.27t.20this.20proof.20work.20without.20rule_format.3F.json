[
    {
        "content": "<p>I'm trying to understand the proof structure of one of the lemmas in <a href=\"https://isabelle.in.tum.de/exercises/lists/sum-tail/sol.thy\">this file</a>, namely</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]:</span><span class=\"w\"> </span><span class=\"s\">\"ListSumT (x#xs) = x + ListSumT xs\"</span>\n<span class=\"w\">  </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">auto</span><span class=\"w\"> </span><span class=\"n\">simp</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ListSumT_def</span><span class=\"w\"> </span><span class=\"n\">ListSumTAux_add</span><span class=\"o\">[</span><span class=\"n\">THEN</span><span class=\"w\"> </span><span class=\"n\">sym</span><span class=\"o\">])</span>\n</code></pre></div>\n<p>The lemma <code>ListSumTAux_add</code> is used to help prove the goal</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">ListSumTAux</span><span class=\"w\"> </span><span class=\"n\">xs</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">ListSumTAux</span><span class=\"w\"> </span><span class=\"n\">xs</span><span class=\"w\"> </span><span class=\"n\">0</span>\n</code></pre></div>\n<p>for reference it looks like:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">ListSumTAux_add</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">rule_format</span><span class=\"o\">]:</span><span class=\"w\"> </span><span class=\"s\">\"âˆ€a b. ListSumTAux xs (a+b) = a + ListSumTAux xs b\"</span>\n<span class=\"w\">  </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">induct</span><span class=\"w\"> </span><span class=\"n\">xs</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">auto</span>\n</code></pre></div>\n<p>Why doesn't the proof work if I remove the <code>[rule_format]</code> tag from the lemma and the <code>[THEN sym]</code> tag from the apply command? Is it because the structure of the goal does not exactly match that of <code>ListSumTAux_add</code> - that is, isabelle cannot deduce on its own that <code>ListSumTAux xs x = ListSumTAux xs (x + 0)</code> and proceed from there?</p>\n<p>Furthermore, what is <code>[THEN sym]</code> and what does it do?</p>",
        "id": 488102104,
        "sender_full_name": "o7",
        "timestamp": 1733924706
    },
    {
        "content": "<p>Like every theorem, print it:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kt\">thm</span><span class=\"w\"> </span><span class=\"n\">ListSumTAux_add</span><span class=\"o\">[</span><span class=\"n\">THEN</span><span class=\"w\"> </span><span class=\"n\">sym</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>and Control-click on <code>sym</code> to see what it is</p>",
        "id": 488110270,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1733927019
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kt\">thm</span><span class=\"w\"> </span><span class=\"n\">ListSumTAux_add</span><span class=\"o\">[</span><span class=\"n\">rule_format</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">ListSumTAux_add</span>\n</code></pre></div>",
        "id": 488110457,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1733927061
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">ListSumTAux</span><span class=\"w\"> </span><span class=\"n\">xs</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ListSumTAux</span><span class=\"w\"> </span><span class=\"n\">xs</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">0</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>The simplifier only rewrites to make terms easier and this is in the wrong direction</p>",
        "id": 488111045,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1733927187
    },
    {
        "content": "<p>So in that case, was the proof trying to modify the RHS of the goal, not the LHS?</p>",
        "id": 488111868,
        "sender_full_name": "o7",
        "timestamp": 1733927398
    },
    {
        "content": "<p>It is modifying both</p>",
        "id": 488112031,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1733927425
    },
    {
        "content": "<p>And <code>ListSumTAux xs (x + 0) -&gt; ListSumTAux xs x</code> due to x+0=x</p>",
        "id": 488112163,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1733927466
    },
    {
        "content": "<p>very interesting. If it was modifying both sides I would have thought that the ordering of the sides in <code>ListSumTAux_add</code> shouldn't matter</p>",
        "id": 488112248,
        "sender_full_name": "o7",
        "timestamp": 1733927487
    },
    {
        "content": "<p>so I would expect that <code>[THEN sym]</code> doesn't need to be there, yet it is</p>",
        "id": 488112427,
        "sender_full_name": "o7",
        "timestamp": 1733927526
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"233198\">Mathias Fleury</span> <a href=\"#narrow/channel/238552-Beginner-Questions/topic/Why.20doesn't.20this.20proof.20work.20without.20rule_format.3F/near/488111045\">said</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">ListSumTAux</span><span class=\"w\"> </span><span class=\"n\">xs</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ListSumTAux</span><span class=\"w\"> </span><span class=\"n\">xs</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">0</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>The simplifier only rewrites to make terms easier and this is in the wrong direction</p>\n</blockquote>\n<p>just to make sure I fully understand, why is this in the wrong direction?</p>",
        "id": 488112895,
        "sender_full_name": "o7",
        "timestamp": 1733927643
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"w\"> </span><span class=\"kt\">thm</span><span class=\"w\"> </span><span class=\"n\">ListSumTAux_add</span>\n<span class=\"w\">  </span><span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]:</span><span class=\"w\"> </span><span class=\"s\">\"ListSumT (x#xs) = x + ListSumT xs\"</span>\n<span class=\"w\">    </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">auto</span><span class=\"w\"> </span><span class=\"n\">simp</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">ListSumT_def</span><span class=\"w\"> </span><span class=\"n\">ListSumTAux_add</span><span class=\"o\">)</span>\n<span class=\"c\">(*</span>\n<span class=\"c\">proof (prove)</span>\n<span class=\"c\">goal (1 subgoal):</span>\n<span class=\"c\"> 1. ListSumTAux xs x = x + ListSumTAux xs 0</span>\n<span class=\"c\">*)</span>\n</code></pre></div>",
        "id": 488113026,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1733927674
    },
    {
        "content": "<p>It is clear why ListSumTAux_add[THEN sym] applies here</p>",
        "id": 488113093,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1733927695
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"802231\">o7</span> <a href=\"#narrow/channel/238552-Beginner-Questions/topic/Why.20doesn't.20this.20proof.20work.20without.20rule_format.3F/near/488112895\">said</a>:</p>\n<blockquote>\n<p><code>ListSumTAux xs x = ListSumTAux xs (x + 0)</code></p>\n</blockquote>\n<p>ListSumTAux xs x ~&gt; ListSumTAux xs (x + 0)</p>\n<p>Which term is more complicated? Rewriting simplifies the term</p>",
        "id": 488113239,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1733927746
    },
    {
        "content": "<p>RHS looks more obvious to simplify</p>",
        "id": 488113379,
        "sender_full_name": "o7",
        "timestamp": 1733927780
    },
    {
        "content": "<p>oh, so lemmas involving equality are like left to right applications.<br>\nWhen applying one to prove a goal, you want to make sure that the LHS of the lemma matches with either of the sides of the goal, which will then be transformed into the RHS of the applied lemma.</p>\n<p>Is my understanding correct?</p>",
        "id": 488114421,
        "sender_full_name": "o7",
        "timestamp": 1733928051
    }
]