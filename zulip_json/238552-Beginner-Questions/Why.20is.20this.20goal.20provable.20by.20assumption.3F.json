[
    {
        "content": "<p>I have the following subgoal</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">goal</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">1</span><span class=\"w\"> </span><span class=\"n\">subgoal</span><span class=\"o\">):</span>\n<span class=\"w\"> </span><span class=\"n\">1.</span><span class=\"w\"> </span><span class=\"n\">⋀x</span><span class=\"w\"> </span><span class=\"n\">y.</span><span class=\"w\"> </span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">(?</span><span class=\"n\">y6</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">⟹</span><span class=\"w\"> </span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"o\">(?</span><span class=\"n\">x8</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">y</span>\n</code></pre></div>\n<p>Apparently this can be proven by <code>assumption</code>. Why is this? The left side of the implication doesn't look anything like right right hand side.</p>\n<p>This goal comes from the following lemma with proof</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"s\">\"(∃x. ∀y. P x y) ⟶ (∀y. ∃x. P x y)\"</span>\n<span class=\"w\">  </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"n\">impI</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">erule</span><span class=\"w\"> </span><span class=\"n\">exE</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"n\">allI</span><span class=\"o\">)</span>\n<span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">erule</span><span class=\"w\"> </span><span class=\"n\">allE</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"n\">exI</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"n\">assumption</span>\n<span class=\"w\">  </span><span class=\"k\">done</span>\n</code></pre></div>",
        "id": 489805810,
        "sender_full_name": "o7",
        "timestamp": 1734542213
    },
    {
        "content": "<p><code>?y6 x y</code> are variable that you can pick</p>",
        "id": 489812996,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1734544706
    },
    {
        "content": "<p>they are left-overs from the unification algorithm</p>",
        "id": 489813034,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1734544725
    },
    {
        "content": "<p>So you can pick <code>?y6 := y</code> and <code>?x8 := x</code> and the assumption and goal become the same</p>",
        "id": 489813521,
        "sender_full_name": "Jan van Brügge",
        "timestamp": 1734544897
    },
    {
        "content": "<p>If you want to play with such goals, you can use <code>schematic_goal</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">schematic_goal</span><span class=\"w\"> </span><span class=\"s\">‹P 0 ⟹ P ?a ∧ Q ?a›</span>\n<span class=\"w\">  </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"n\">conjI</span><span class=\"o\">)</span>\n<span class=\"w\">   </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"n\">assumption</span>\n<span class=\"c\">(*</span>\n<span class=\"c\">goal instantiation:</span>\n<span class=\"c\">    ?a ↝ 0</span>\n<span class=\"c\">*)</span>\n<span class=\"w\">  </span><span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 489814558,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1734545277
    }
]