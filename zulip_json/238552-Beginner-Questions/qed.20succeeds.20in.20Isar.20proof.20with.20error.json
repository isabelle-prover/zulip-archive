[
    {
        "content": "<p>The first question would be, is a theorem considered proven when a <code>theorem</code> definition is listed in the output?</p>\n<p>I ran into this in a more complicated example, but here's a simplified one:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">theorem</span> <span class=\"n\">contradiction</span><span class=\"o\">:</span> <span class=\"s\">\"n = Suc n\"</span>\n<span class=\"k\">proof</span><span class=\"o\">(</span><span class=\"n\">induction</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n  <span class=\"k\">case</span> <span class=\"n\">0</span>\n  <span class=\"k\">then</span> <span class=\"k\">show</span> <span class=\"o\">?</span><span class=\"k\">case</span> <span class=\"k\">by</span> <span class=\"n\">auto</span>\n<span class=\"k\">next</span>\n  <span class=\"k\">case</span> <span class=\"o\">(</span><span class=\"n\">Suc</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n  <span class=\"k\">then</span> <span class=\"k\">show</span> <span class=\"o\">?</span><span class=\"k\">case</span> <span class=\"k\">by</span> <span class=\"n\">auto</span>\n<span class=\"k\">qed</span>\n</code></pre></div>\n<p>Obviously this is not true, and the 0 case fails to get marked as proven. However, when my cursor is over the <code>qed</code>, I see the following output:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">theorem</span> <span class=\"o\">?</span><span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">Suc</span> <span class=\"o\">?</span><span class=\"n\">n</span>\n</code></pre></div>\n<p>And the theorem is output when I use the <code>thm</code> command as well. I thought this output is only produced when the proof is actually proven? There's also no error shown on the final <code>qed</code>, just in the bad case. Is this expected?</p>",
        "id": 297117885,
        "sender_full_name": "Alex Weisberger",
        "timestamp": 1662308494
    },
    {
        "content": "<p>Isabelle is optimistic (which is necessary in order to be able to do stuff in parallel): it assumes that the proof steps above finished (so no purple running forever tactics) and were error-free</p>",
        "id": 297161387,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1662352022
    },
    {
        "content": "<p>Thanks. The error is obvious in this case, though it is a little scary for larger proofs since it’s easier for those errors to get lost. </p>\n<p>I wonder if there’s a setting to control that, for example to prevent publishing a theory with an error that someone else consumes.</p>",
        "id": 297242676,
        "sender_full_name": "Alex Weisberger",
        "timestamp": 1662391121
    },
    {
        "content": "<p>If you build your session with <code>isabelle build</code>, the build will fail.</p>",
        "id": 297243094,
        "sender_full_name": "Lukas Stevens",
        "timestamp": 1662391328
    }
]