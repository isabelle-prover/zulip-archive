[
    {
        "content": "<p>What is the difference between split and cases? Both are doing case splitting.</p>",
        "id": 223614841,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1611304636
    },
    {
        "content": "<p>Not really. <code>split</code> looks at the structure of the goal while <code>cases</code> looks for terms to split on. Hence, this fails:</p>\n<div class=\"codehilite\"><pre><span></span><code>lemma&quot;P xs&quot; for xs :: &quot;nat list&quot;\n  apply(split list.split)\n</code></pre></div>",
        "id": 223615363,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1611305123
    },
    {
        "content": "<p>I have never used split in my life... only as argument for simp/auto. I don't believe it is really useful.</p>",
        "id": 223615446,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1611305196
    },
    {
        "content": "<p>Concrete Semantics recommends it feeding a .split rule for a datatype:</p>\n<div class=\"codehilite\"><pre><span></span><code>type_synonym vname = string\ndatatype aexp = N int | V vname | Plus aexp aexp\n\ntype_synonym val = int\ntype_synonym state = &quot;vname ⇒ val&quot;\n\nfun aval :: &quot;aexp ⇒ state ⇒ val&quot; where\n&quot;aval (N n) s = n&quot; |\n&quot;aval (V x ) s = s x&quot; |\n&quot;aval (Plus a1 a2 ) s = aval a1 s + aval a2 s&quot;\n\nfun asimp_const :: &quot;aexp ⇒ aexp&quot; where\n  &quot;asimp_const (N n) = N n&quot;\n| &quot;asimp_const (V x ) = V x&quot;\n| &quot;asimp_const (Plus a1 a2 ) =\n     (case (asimp_const a1 , asimp_const a2 ) of\n           (N n1, N n2) ⇒ N (n1+n2)\n         | (b1, b2)     ⇒ Plus b1 b2)&quot;\n\nlemma &quot;aval (asimp_const a) s = aval a s&quot;\n  by (induction a) (auto split: aexp.split)\n</code></pre></div>",
        "id": 223615779,
        "sender_full_name": "Gergely Buday",
        "timestamp": 1611305513
    },
    {
        "content": "<p>list is a datatype...  The theorem <code>if_split</code> can be useful as argument for split.</p>",
        "id": 223615901,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1611305643
    },
    {
        "content": "<p>The <code>split</code> rules for <code>simp</code>/<code>auto</code> automatically perform case distinctions whenever there is a certain matching expression in the goal. This mostly concerns <code>if</code> and <code>case</code> expressions.</p>\n<p>The <code>cases</code> tactic, on the other hand, allows you to do case distinctions on specific terms manually.</p>",
        "id": 223616098,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1611305822
    },
    {
        "content": "<p>The <code>split</code> tactic that Mathias mentioned is unrelated (but also uses <code>split</code> rules, I think) and indeed I've never seen anyone use it. But that's probably not what you meant.</p>",
        "id": 223616124,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1611305853
    }
]