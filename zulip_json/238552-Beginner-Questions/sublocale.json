[
    {
        "content": "<p>how can I specifiy <code>is_open:: 'a =&gt; bool</code> when I want to prove something like:<code>sublocal real_vector_normed_space </code><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊆</mo></mrow><annotation encoding=\"application/x-tex\">\\subseteq</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mrel\">⊆</span></span></span></span> <code>topological_space</code></p>",
        "id": 235521207,
        "sender_full_name": "zibo yang",
        "timestamp": 1619015913
    },
    {
        "content": "<p>I'm afraid I don't understand your question at all.</p>",
        "id": 235522877,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1619016540
    },
    {
        "content": "<p>Use the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span> notation.</p>",
        "id": 235522912,
        "sender_full_name": "Anthony Bordg",
        "timestamp": 1619016552
    },
    {
        "content": "<p>Ah, I only realised now that you're talking about that new AFP entry on schemes…</p>",
        "id": 235523411,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1619016744
    },
    {
        "content": "<p>I thought you were talking about the corresponding notions from the standard library.</p>",
        "id": 235523431,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1619016753
    },
    {
        "content": "<p>but I fail to make it when I code like<br>\n'''sublocale real_normed_vector_space ⊆ topological_space<br>\n  where \"is_open ≡ λ a::'a set.0\"<br>\n'''</p>",
        "id": 235523740,
        "sender_full_name": "zibo yang",
        "timestamp": 1619016870
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"381107\">@zibo yang</span> 0 is not a boolean.</p>",
        "id": 235523921,
        "sender_full_name": "Anthony Bordg",
        "timestamp": 1619016943
    },
    {
        "content": "<p>sorry but it fails again when I change it to true</p>",
        "id": 235524147,
        "sender_full_name": "zibo yang",
        "timestamp": 1619017015
    },
    {
        "content": "<p>actually I succeed proving:<br>\nsublocale real_normed_vector_space ⊆ sub: topological_space \"is_open_space\"<br>\nafter I specify is_open_space in the context of real_normed_vector_space</p>",
        "id": 235524537,
        "sender_full_name": "zibo yang",
        "timestamp": 1619017141
    },
    {
        "content": "<p>but I always fail to define is_open when facing <br>\nsublocale real_normed_vector_space ⊆ topological_space</p>",
        "id": 235525067,
        "sender_full_name": "zibo yang",
        "timestamp": 1619017245
    },
    {
        "content": "<p>what causes my confusion is that: I code:</p>\n<div class=\"codehilite\" data-code-language=\"sublocale\"><pre><span></span><code>proof(unfold_locales)```\nthen I get the proof state:\n</code></pre></div>\n<p>proof (state)<br>\ngoal (3 subgoals):</p>\n<ol>\n<li>open UNIV</li>\n<li>\n<p>⋀S T. open S ⟹<br>\n           open T ⟹<br>\n           open<br>\n(S ∩ T)</p>\n</li>\n<li>\n<p>⋀K. ∀S∈K.<br>\nopen S ⟹<br>\n         open (⋃ K)</p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>I am confused about:1. I don&#39;t see any function named &quot;open&quot;, there is only &quot;is_open&quot;\n2. I get failure when I print &quot;using open_def&quot; to get the definition of &quot;open&quot;\n3. I cannot define it like\n</code></pre></div>\n<p>where \"open = is_open_space\"</p>\n<div class=\"codehilite\"><pre><span></span><code>\n</code></pre></div>",
        "id": 235529857,
        "sender_full_name": "zibo yang",
        "timestamp": 1619018350
    },
    {
        "content": "<p>what causes my confusion is that: I code:</p>\n<div class=\"codehilite\"><pre><span></span><code>sublocale real_normed_vector_space ⊆ topological_space\nproof(unfold_locales)\n</code></pre></div>\n<p>then I get the proof state:</p>\n<div class=\"codehilite\"><pre><span></span><code>proof (state)\ngoal (3 subgoals):\n 1. open UNIV\n 2. ⋀S T. open S ⟹\n           open T ⟹\n           open\n(S ∩ T)\n 3. ⋀K. ∀S∈K.\nopen S ⟹\n         open (⋃ K)\n</code></pre></div>\n<p>I am confused about:1. I don't see any function named \"open\", there is only \"is_open\"</p>\n<ol start=\"2\">\n<li>I get failure when I print \"using open_def\" to get the definition of \"open\"</li>\n<li>I cannot define it like </li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>where &quot;open = is_open_space&quot;\n</code></pre></div>",
        "id": 235530300,
        "sender_full_name": "zibo yang",
        "timestamp": 1619018521
    },
    {
        "content": "<p>so I guess the only way to define \"is_open\" is just to specify it after the name\"topological_space\" like:</p>\n<div class=\"codehilite\"><pre><span></span><code>sublocale real_normed_vector_space ⊆ sub: topological_space &quot;is_open_space&quot;\n</code></pre></div>",
        "id": 235531272,
        "sender_full_name": "zibo yang",
        "timestamp": 1619018827
    },
    {
        "content": "<p>am I right?</p>",
        "id": 235531609,
        "sender_full_name": "zibo yang",
        "timestamp": 1619018939
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"381107\">@zibo yang</span>  It seems like your topological spaces are the ones from the standard library, not the ones from the development on schemes. So, you may have to use a prefix to disambiguate. If your problem persists, I propose to continue the discussion elsewhere, since it's not a question on sublocales per se.</p>",
        "id": 235537282,
        "sender_full_name": "Anthony Bordg",
        "timestamp": 1619021122
    }
]