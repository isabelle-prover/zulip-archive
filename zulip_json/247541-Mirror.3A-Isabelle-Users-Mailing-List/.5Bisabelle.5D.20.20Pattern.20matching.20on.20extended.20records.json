[
    {
        "content": "<p>From: Rebecca Ghidini &lt;<a href=\"mailto:ghidini@in.tum.de\">ghidini@in.tum.de</a>&gt;<br>\nHello,</p>\n<p>I'm trying to write a function which uses pattern matching on an <br>\nextended record.</p>\n<p>For example, if I define the following record:</p>\n<p>record normal_record =<br>\nt1 :: nat<br>\nt2 ::  nat</p>\n<p>I can define functions with pattern matching on the fields of the <br>\nrecord:</p>\n<p>fun test1 :: \"normal_record =&gt; nat\"<br>\n   where<br>\n\"test1 ((|t1 = a, t2 = b|)) = b\"</p>\n<p>Then I define an extended record:</p>\n<p>record extended_record = normal_record +<br>\nt3 :: nat</p>\n<p>But when I try to define a function in the same way as before, I get an <br>\nerror:</p>\n<p>fun test2 :: \"extended_record =&gt; nat\"<br>\n   where<br>\n\"test2 ((|t1 = a, t2 = b, t3 = c|)) = b + c\"</p>\n<p>This is the error:</p>\n<p>exception THM 0 raised (line 755 of \"drule.ML\"):<br>\n   infer_instantiate_types: type ?'z extended_record_scheme of variable <br>\n?r<br>\n   cannot be unified with type (|t3 :: nat|) of term _av4<br>\n   (⋀t1 t2 t3 more. ?r = (|t1 = t1, t2 = t2, t3 = t3, … = more|) ⟹ ?C) ⟹ <br>\n?C</p>\n<p>I tried to define the function in different ways, for example using \"'a <br>\nextended_record_scheme\"<br>\ninstead of \"extended_record\" or adding the \"more\" field explicitly, but <br>\nI always get the same error.<br>\nI also tried pattern matching with \"case … of\", but it doesn't work, <br>\nbecause record is not a datatype constructor.</p>\n<p>Obviously I could define the function like this:</p>\n<p>fun test4 :: \"extended_record =&gt; nat\"<br>\n  where<br>\n     \"test4 rec = t2 rec + t3 rec\"</p>\n<p>But given that I am working with larger records and more complicated <br>\nfunctions, I was wondering if there is a more<br>\nelegant way to write this function, by using pattern matching.</p>\n<p>Thank you,<br>\nRebecca</p>",
        "id": 322541075,
        "sender_full_name": "Email Gateway",
        "timestamp": 1674228550
    }
]