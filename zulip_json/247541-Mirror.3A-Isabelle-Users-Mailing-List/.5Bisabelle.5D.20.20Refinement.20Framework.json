[
    {
        "content": "<p>From: Valentin Springsklee &lt;<a href=\"mailto:uidpn@student.kit.edu\">uidpn@student.kit.edu</a>&gt;<br>\nHello,</p>\n<p>I want to proof total correctness of a monadic program using the <br>\nIsabelle Refinement Framework.</p>\n<p>I have a program that iterates over a list an and computes a conditional <br>\nsum. I have already shown partial correctness relative to the <br>\nspecification and used the Isabelle code generation. I used <br>\ntheRefine_Monadic_Userguide as a reference <br>\n(<a href=\"https://www.isa-afp.org/browser_info/current/AFP/Collections/Refine_Monadic_Userguide.html\">https://www.isa-afp.org/browser_info/current/AFP/Collections/Refine_Monadic_Userguide.html</a>)</p>\n<p>My function looks like this. The While loop iterates over p, a list if <br>\nRelations and accumulates the entries that fulfill that a is the top of <br>\nthe relation.</p>\n<p>definition \"wc_spec p a = SPEC (λac. ac = card {i::nat. i &lt; length p ∧ <br>\nabove (p!i) a = {a}})\"</p>\n<p>definition \"wc_invar p0 a ≡ λ(r,ac).<br>\n   r ≤ length p0<br>\n   ∧ ac = card{i::nat. i &lt; r ∧ above (p0!i) a = {a}}\"</p>\n<p>definition win_count_mon :: \"'a Profile ⇒ 'a ⇒ nat nres\" where<br>\n\"win_count_mon p a ≡ do {<br>\n   (r, ac) ← WHILEI/T (wc_invar p a) (λ(r, _). r &lt; length p) (λ(r, ac). do {<br>\n     ASSERT (r &lt; length p);<br>\n     let ac = ac + (if (above (p!r) a = {a}) then 1 else 0);<br>\n     RETURN (r + 1, ac)<br>\n   })(0,0);<br>\n   RETURN ac<br>\n}\"</p>\n<p>I believe that in order to show total correctness, I need to use the <br>\nvariant that (length p - r) decreases for each iteration. Do I also have <br>\nto provide that p is finite? The WHILET Rule with refine_vcg opens a <br>\ngoal to prove well-foundedness of some relation. How do I instantiate it <br>\nwith the appropriate variant of the while loop?</p>\n<p>I hope, my question is somewhat understandable. I am happy to clarify <br>\nand provide further information.</p>\n<p>Thank you,</p>\n<p>Valentin Springsklee</p>",
        "id": 287746806,
        "sender_full_name": "Email Gateway",
        "timestamp": 1656436040
    }
]