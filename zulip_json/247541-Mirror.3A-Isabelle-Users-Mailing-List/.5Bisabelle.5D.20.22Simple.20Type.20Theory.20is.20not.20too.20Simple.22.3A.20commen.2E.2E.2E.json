[
    {
        "content": "<p>From: Mikhail Chekhov &lt;<a href=\"mailto:mikhail.chekhov.w@gmail.com\">mikhail.chekhov.w@gmail.com</a>&gt;<br>\nDear All,</p>\n<p>I noticed that the recent AFP entry on Grothendieck's Schemes (<br>\n<a href=\"https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2021-April/msg00016.html\">https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2021-April/msg00016.html</a>)<br>\n[0] also has an article associated with it (<a href=\"http://arxiv.org\">arxiv.org</a>:<br>\n<a href=\"https://arxiv.org/abs/2104.09366\">https://arxiv.org/abs/2104.09366</a>) [1].</p>\n<p>I hope it would not be inappropriate of me to ask a few questions about<br>\ncertain elements of the content of [1] and provide several remarks on<br>\ncertain aspects of the development that is described in the article.</p>\n<hr>\n<p>Section 1 contains the following passage:</p>\n<blockquote>\n<p>In particular, the present work makes a triple contribution to<br>\nIsabelle/HOL: a first building block towards a new topology library, a new<br>\nbuilding block towards a library for abstract algebra and finally a<br>\nformalization of schemes.</p>\n</blockquote>\n<p>Given that the information about the \"new topology/abstract algebra\"<br>\nlibraries is now not only in the public domain, but a part of an official<br>\npublication, I would like to kindly ask the authors whether it would be<br>\npossible to provide more information about these new developments? Are the<br>\nexisting HOL-Algebra/HOL-Analysis libraries meant to be refactored in a<br>\nnon-backward compatible manner? Will this new development affect the<br>\ntopology library that is currently a part of the main library of<br>\nIsabelle/HOL? Is this topology library also going to be<br>\nreplaced/deprecated? I believe that all of the existing users of these<br>\nlibraries deserve to know about their future :-).</p>\n<hr>\n<p>Section 2 contains the following passage:</p>\n<blockquote>\n<p>Even using locales, we can still go wrong. The root of the problems in<br>\nHOL-Algebra is the desire to refer to a structure such as a group with its<br>\ncomponents using a single variable, as a record data structure. The new (at<br>\nthe time) extensible records seemed perfect for the task. But they led to<br>\nsome peculiarities: notably, the locale abelian_group (in Theory Ring)<br>\nwhich presents the odd twist of requiring a ring structure. The lack of<br>\nmultiple inheritance for records seems to have required the awkward use of<br>\nthe ring record for abelian groups. However, Clemens Ballarin recently<br>\nconducted an experiment [...] showing that locales, without records, allow<br>\nfor a smooth handling of basic algebraic structures in Isabelle such as<br>\nmonoids, groups and rings. We decided to base our formal development on<br>\nthis experiment.</p>\n</blockquote>\n<p>Furthermore, section 3 describes the \"new topology library\":</p>\n<blockquote>\n<p>Our new topology library is entirely built on locales without using type<br>\nclasses or type declarations (via the typedef command). In particular, our<br>\ntopological spaces have explicit carrier sets as part of their data instead<br>\nof using UNIV, the set of all elements of some type, or having to define it<br>\nlater as the union of all the open sets.</p>\n</blockquote>\n<p>From these passages and the comments above, my guess is that there is an<br>\nintention to develop the new algebra/topology libraries for Isabelle/HOL<br>\nbased on this pattern.</p>\n<p>In this context, I would like to mention that, in a certain sense, I have<br>\nalready achieved a certain degree success (and failures) in this direction<br>\n(and I was not the first one), albeit in connection with my work on<br>\nTypes-To-Sets, and I thought that it may be relevant to share my experience<br>\nhere and one of the main conclusions of my own attempts.</p>\n<p>Generally, (what I call) the <em>design pattern</em> that was used in [2] in the<br>\ncontext of algebra, in my opinion, is very similar to the design pattern<br>\nthat was originally proposed by Ond≈ôej Kunƒçar and Andrei Popescu in their<br>\nwork on Types-To-Sets [3] in the context of both algebra and topology (I am<br>\nreferring, primarily, to the examples associated with the article and not<br>\nthe article itself) and later developed further into a part of a small case<br>\nstudy by Fabian Immler and Bohua Zhan [4]. Thus, for example, the locale<br>\nfor the definition of a semigroup from [4] looks like</p>\n<p>locale semigroup_add_on_with =<br>\n  fixes S::\"'a set\" and pls::\"'a‚áí'a‚áí'a\"<br>\n  assumes add_assoc: \"a ‚àà S ‚üπ b ‚àà S ‚üπ c ‚àà S ‚üπ pls (pls a b) c = pls a (pls<br>\nb c)\"<br>\n  assumes add_mem: \"a ‚àà S ‚üπ b ‚àà S ‚üπ pls a b ‚àà S\"</p>\n<p>I have continued this work and developed several small libraries that are<br>\nmeant to showcase different design patterns that can be used for the<br>\ndevelopment of libraries in Isabelle/HOL based around the same idea in 2019<br>\nand 2020. Fundamentally, all of these libraries use a very similar design<br>\npattern based on explicit locale parameters with explicitly fixed<br>\ncarrier/underlying sets for modeling all possible mathematical structures<br>\n(I use the term mathematical structure informally). The current iteration<br>\nis available here: <a href=\"https://gitlab.com/user9716869/tts_examples\">https://gitlab.com/user9716869/tts_examples</a>. For<br>\nexample, the definition of (e.g.) topological space in [1] is based on the<br>\nsame idea as in that library (<br>\n<a href=\"https://mailman46.in.tum.de/pipermail/isabelle-dev/2019-April/016894.html\">https://mailman46.in.tum.de/pipermail/isabelle-dev/2019-April/016894.html</a>).<br>\nCompare:</p>\n<p>(from <a href=\"https://gitlab.com/user9716869/tts_examples\">https://gitlab.com/user9716869/tts_examples</a>)<br>\nlocale topological_space_ow = fixes ùîò :: \"'at set\" and œÑ :: \"'at set ‚áí<br>\nbool\"<br>\nassumes open_UNIV[simp, intro]: \"œÑ ùîò\"<br>\nassumes open_Int[intro]: \"‚ü¶ S ‚äÜ ùîò; T ‚äÜ ùîò; œÑ S; œÑ T ‚üß ‚üπ œÑ (S ‚à© T)\"<br>\nassumes open_Union[intro]: \"‚ü¶ K ‚äÜ Pow ùîò; ‚àÄS‚ààK. œÑ S ‚üß ‚üπ œÑ (‚ãÉK)\"</p>\n<p>(from [1])<br>\nlocale topological_space = fixes S :: \"'a set\" and is_open :: \"'a set ‚áí<br>\nbool\"<br>\n  assumes open_space [simp, intro]: \"is_open S\" and open_empty [simp,<br>\nintro]: \"is_open {}\"<br>\n    and open_imp_subset: \"is_open U ‚üπ U ‚äÜ S\"<br>\n    and open_inter [intro]: \"‚ü¶is_open U; is_open V‚üß ‚üπ is_open (U ‚à© V)\"<br>\n    and open_union [intro]: \"‚ãÄF::('a set) set. (‚ãÄx. x ‚àà F ‚üπ is_open x) ‚üπ<br>\nis_open (‚ãÉx‚ààF. x)\"</p>\n<p>I hope that the remarks above will suffice to give my further claims a<br>\ncertain degree of credibility, as it seems that the ideas (albeit, not<br>\nentirely my own ideas) that I was trying to promote in 2019 are beginning<br>\nto be adapted by the community :-). By the way, it might be appropriate to<br>\nadd references to (at least) [3], [4] and the aforementioned post by Fabian<br>\nImmler (if not my own repository), in connection with the design pattern<br>\nbeing used, given that it seems to be one of the matters emphasized in [1].<br>\nI would like to be very clear, however, that I have little concern about<br>\nwhat decision will be made with regard to this matter and this is very far<br>\nfrom being the main issue that I would like to discuss in this post.</p>\n<p>I have already summarised some of my concerns about the design pattern<br>\nbeing used in [1] in the following post on the mailing list:<br>\n<a href=\"https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2019-August/msg00006.html\">https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2019-August/msg00006.html</a>.<br>\nHowever, since then, I developed further concerns about it. Unfortunately,<br>\nin my experience, using explicit parameters for the definition of<br>\nmathematical structures makes it difficult to talk about the interplay<br>\nbetween different structures, e.g. using tools and techniques from category<br>\ntheory or similar. Furthermore, carrying around dramatically large lists of<br>\nexplicitly stated parameters can become unwieldy very quickly as the<br>\nstructures become more complex (see my remarks in<br>\n<a href=\"https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2019-August/msg00006.html\">https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2019-August/msg00006.html</a><br>\nfor further information).</p>\n<p>Finally, I converged on the opinion that there has to exist a canonical<br>\nmethodology for representing any mathematical structure as a term of some<br>\ntype (e.g. by using product types or similar). If this is so, then why<br>\nwould one wish to define such structures using explicitly stated locale<br>\nparameters?</p>\n<p>Once again, from [1],</p>\n<blockquote>\n<p>The new (at the time) extensible records seemed perfect for the task. But<br>\nthey led to some peculiarities: notably, the locale abelian_group (in<br>\nTheory Ring) which presents the odd twist of requiring a ring structure.</p>\n</blockquote>\n<p>My opinion is that this is the only problem of the record + locale<br>\napproach, and it is not insurmountable. That is, the problem is that the<br>\nrecords lack a mechanism for multiple inheritance. Perhaps, the key to its<br>\nsolution lies in the following comments made by Andreas Lochbihler in reply<br>\nto one of my questions:<br>\n<a href=\"https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2019-August/msg00017.html\">https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2019-August/msg00017.html</a>.<br>\nI believe that I have already solved the crux of the problem by following<br>\nup on one of the ideas expressed in the aforementioned post by Andreas<br>\nLochbihler and providing yet another design pattern that allows for<br>\nmimicking records with multiple inheritance. At the moment, this pattern is<br>\nquite unwieldy, but it can be fully automated, potentially (of course, this<br>\nwould require a considerable amount of programming effort).</p>\n<p>I describe it based on a close-to-minimal example that is provided as a<br>\ncopy at the end of the email in Appendix A. Hopefully, with the comments in<br>\nthe code, the example provides a self-sufficient explanation of the pattern<br>\n(however, this variant of the pattern is slightly outdated, as the pattern<br>\nhas been slightly improved since the example was developed). As such, the<br>\nexample does not showcase the use of multiple inheritance, as it would make<br>\nthe example too long. However, hopefully, it should be apparent to see that<br>\nmultiple inheritance is not an issue for the design pattern, as it is<br>\npossible to 'upcast' a 'multirecord' to any 'multirecord' with the 'parent<br>\nstructure' with ease (of course, privately, I have already developed use<br>\ncases for the demonstration of multiple inheritance). Overall, I used this<br>\ninheritance mechanism to define (and reason about) semifunctors,<br>\ncategories, functors, natural transformations, dagger<br>\ndigraphs/semicategories/categories, and several other concepts, not<br>\nnecessarily related to category theory (e.g. topological spaces). Moreover,<br>\nit is possible to combine the inheritance mechanism with the inheritance of<br>\nthe fields of the record. This is used, for example, to ensure that a<br>\nsemifunctor from one semicategory to another (stated as a locale) inherits<br>\nfrom the digraph homomorphism from one digraph to another in a canonical<br>\nmanner.</p>\n<p>At first sight, it may seem that using records+unrest<br>\n[message truncated]</p>",
        "id": 235397077,
        "sender_full_name": "Email Gateway",
        "timestamp": 1618945313
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nThe current HOL-Analysis library is huge. It has been refactored already and without doubt it will undergo further refactorings in the future. It is however in no way deprecated, nor even HOL-Algebra, although the latter deserves to be. To replace either would take an enormous amount of manpower, which we don‚Äôt have.</p>\n<p>What we can expect to see our series of experiments trying to push the boundaries of what we can formalise, with an eye in particular to further developing this locale methodology, which seems to work so well.</p>\n<p>Larry</p>",
        "id": 235489822,
        "sender_full_name": "Email Gateway",
        "timestamp": 1619002743
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nI think the Isabelle community as a whole welcomes all demonstrations of useful methodologies for formalising mathematics. This particular paper on schemes was in response to a challenge made by Kevin Buzzard concerning the expressiveness of simple type theory. Other methodologies could be demonstrated by tackling the same example. It is indeed a long series of definitions and proofs, but now that both the paper and the formal development are available, it should be easier for other groups to give it a try. I would be happy to see improvements to our own work.</p>\n<p>The AFP already contains many alternative formalisations of the same mathematical ideas, and there is no plan to impose any one approach.</p>\n<p>Larry</p>",
        "id": 235491998,
        "sender_full_name": "Email Gateway",
        "timestamp": 1619003879
    },
    {
        "content": "<p>From: Mikhail Chekhov &lt;<a href=\"mailto:mikhail.chekhov.w@gmail.com\">mikhail.chekhov.w@gmail.com</a>&gt;<br>\nDear Lawrence Paulson/All,</p>\n<p>Thank you for your replies. Also, I do apologize for starting such a long<br>\nand slightly chaotic thread yesterday. I will try to be more to the point<br>\ntoday.</p>\n<p>I would like to clarify that my thread was hardly about the entire<br>\nformalization study that is presented in [1], but, primarily, about the<br>\nproposal to develop a new library for topology based on the locale +<br>\nexplicit locale parameters/explicit carrier set approach. The pattern that<br>\nis proposed in [1] is the one that I advocated in the first half of 2019.<br>\nHowever, at the time, your reaction to this idea seemed to vary from<br>\npossibly mildly critical to tentatively inquisitive. Given that my own<br>\nexperience with formal methods and Isabelle was minimal at the time, I kept<br>\nworrying about whether I am, indeed, doing something wrong and how much my<br>\nwork would be criticized, if I was to make an attempt to publish it. The<br>\nonly person who seemed to be mildly supportive of this idea at the time was<br>\nFabian Immler (<br>\n<a href=\"https://mailman46.in.tum.de/pipermail/isabelle-dev/2019-April/016894.html\">https://mailman46.in.tum.de/pipermail/isabelle-dev/2019-April/016894.html</a>):<br>\nnot surprisingly, my own approach evolved from Fabian Immler and Bohua<br>\nZhan's approach to the formalization of elements of algebra in [2] and the<br>\nexamples associated with [3]. The support of Fabian Immler was sufficient<br>\nfor me to continue that work. However, to this date, I had some concerns<br>\nabout how it could be received, and my non-conventional approach to<br>\ntopology was one. of the contributing factors. Of course, I was very<br>\nsurprised to see that, in [1], nearly an entire section was dedicated to<br>\nadvocating the use of what I would consider being the same pattern that<br>\nseemed to lack your support at the time of its proposal. In any case, I<br>\nwelcome this event as good news, as it reinforces my self-esteem and my<br>\nbelief in my own ideas :-).</p>",
        "id": 235560231,
        "sender_full_name": "Email Gateway",
        "timestamp": 1619030284
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nThe HOL-Analysis library already contains a substantial development of abstract topology, which I ported from HOL Light some years ago, and which has none of the limitations connected with type classes. I this version is probably no worse than one defined using locales.</p>\n<p>But as for your own proposal in 2019, it looks like you were ahead of your time. It was not until 2020 that Clemens‚Äô paper appeared:</p>\n<p>Clemens Ballarin, Exploring the Structure of an Algebra Text with Locales <br>\nJournal of Automated Reasoning 64, pages 1093‚Äì1121 (2020)</p>\n<p>This was the inspiration for our development.</p>\n<p>Larry</p>",
        "id": 235647327,
        "sender_full_name": "Email Gateway",
        "timestamp": 1619084289
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nOn the topic of category theory: I know mine is a minority view, but category theorists need to come up with a consistent theory before they can expect formal reasoning in any system. Allow me to quote Pierre Cartier:</p>\n<p>\"Nowadays, one of the most interesting points in mathematics is that, although all categorical reasonings are formally contradictory, we use them and we never make a mistake. Grothendieck provided a partial solution in terms of universes but a revolution of the foundations similar to what Cauchy and Weierstrass did for analysis is still to arrive. In this respect, he was pragmatic: categories are useful and they give results so we do not have to look at subtle set theoretic questions if there is no need. Is today the moment to think about these problems? Maybe‚Ä¶‚Äù</p>\n<p>Larry</p>",
        "id": 235648195,
        "sender_full_name": "Email Gateway",
        "timestamp": 1619084758
    },
    {
        "content": "<p>From: Jason Gross &lt;<a href=\"mailto:jasongross9@gmail.com\">jasongross9@gmail.com</a>&gt;</p>\n<blockquote>\n<p>all categorical reasonings are formally contradictory</p>\n</blockquote>\n<p>From what I could find on Google (<a href=\"https://mathoverflow.net/a/23612/30462\">https://mathoverflow.net/a/23612/30462</a>)<br>\nthis is a quote from 2009, and Cartier goes on to propose formalizing<br>\ncategory theory in proof assistants.  In fact basic category theory has<br>\nbeen formalized in proof assistants many times now (I've personally made or<br>\ncontributed to formalizations in Coq, Agda, and Lean, and there are dozens<br>\nbesides me and at least one in Isabelle/HOL (<br>\n<a href=\"https://mathoverflow.net/questions/152497/formalizations-of-category-theory-in-proof-assistants\">https://mathoverflow.net/questions/152497/formalizations-of-category-theory-in-proof-assistants</a>)).<br>\nI've found that universe polymorphism, which Cartier seems to see as a bit<br>\nof a kludge, is in fact invaluable in formalizations of category theory, so<br>\nthat I can define category once and get a definition at all universe<br>\nlevels, whence I can easily apply any of my constructions to the (larger)<br>\ncategory of (smaller) categories, in a way that's parametric over the<br>\nparticular universes I'm using.  (Though in fact I've heard that three<br>\nuniverses is generally enough: we merely need to talk about small<br>\ncategories and about locally small categories, and then we can have the<br>\nlocally small category of all small categories.)</p>\n<p>Additionally, there's some recent work that gives a type theory for<br>\noo-categories (<a href=\"https://arxiv.org/abs/2007.08307\">https://arxiv.org/abs/2007.08307</a>) which I saw a lecture on<br>\njust yesterday, which seems to me to at least be in the direction of giving<br>\nsynthetic rules for category theory that don't lead to contradictions.</p>",
        "id": 235671560,
        "sender_full_name": "Email Gateway",
        "timestamp": 1619096235
    },
    {
        "content": "<p>From: Mikhail Chekhov &lt;<a href=\"mailto:mikhail.chekhov.w@gmail.com\">mikhail.chekhov.w@gmail.com</a>&gt;<br>\nDear Lawrence Paulson/Jason Gross/All,</p>\n<p>Thank you for your comments.</p>",
        "id": 235748377,
        "sender_full_name": "Email Gateway",
        "timestamp": 1619125620
    },
    {
        "content": "<p>From: \"Eugene W. Stark\" &lt;<a href=\"mailto:isabelle-users@starkeffect.com\">isabelle-users@starkeffect.com</a>&gt;<br>\nI have been following this thread and as the author of [3-5] I would like to chime in with a comment,<br>\nfor what it is worth, and also a question about the quoted text below.</p>\n<p>My comment is that although the inability of HOL to support the formalization of \"large\" categories certainly<br>\ndoes have some implications as regards the applicability of an HOL formalization of category theory<br>\n(e.g. one cannot construct in HOL a cartesian closed category, having objects that are sets and having homs<br>\nthat consist of all functions from their domain to their codomain, unless we only admit finite sets as<br>\nobjects), there are many applications of category theory for which the consideration of such large categories<br>\nis not required.  It just seems to be that some people are more focused on the foundational aspects of category<br>\ntheory and others on applications that only need to make use of \"small\" categories.  I tend to align more with<br>\nthe latter point of view, so I have not worried so much about the foundational aspects that could not be<br>\nadequately formalized.  I find that I care about having a category of all sets about as much (or as little)<br>\nas I care about having a type of all sets; mostly I don't worry about it.</p>\n<p>My question is that I would like to understand better something that was said in the quoted text below<br>\nregarding the supposed impossibility of treating the collections of all real numbers and all complex numbers<br>\nas two distinct objects in (for example) the category Top.  What I don't understand about this I don't see<br>\nwhat is stopping us from constructing a category, at least up to equivalence, of topological spaces whose<br>\nsets of points are bounded by some fixed cardinality.  For example, both the real numbers and the complex<br>\nnumbers have the cardinality of the continuum.  A topological space on either of these can be represented<br>\nas a certain collection of subsets of these sets with continuum-many elements.  We can then certainly form<br>\n(in HOL) a category having all such collections as its objects, and all continuous functions between such<br>\ncollections as its arrows.  The objects and arrows of the category would inhabit a somewhat higher type,<br>\nbut there is no problem in obtaining it. Unless I am missing something basic, I don't see the difficulty<br>\nin carrying out this construction, e.g. using the formalization in [3].  So perhaps something else was meant,<br>\nin which case I would like to understand what it was.</p>\n<p>Perhaps I have missed what was intended by the phrase \"so long as real numbers and complex numbers are<br>\nmodelled as two distinct types and not distinct terms of some other type\".  Does this mean that somehow<br>\nsome particular construction of \"the\" real numbers and \"the\" complex numbers are to be given special<br>\nstatus, and that to be useful, a category Top of topological space would have to contain as objects the<br>\nprecise results of these particular distinguished constructions, as opposed to merely having some<br>\nobjects R and C for which for which the induced topologies on hom(1, R) and hom(1, C) are homeomorphic<br>\nto the spaces of real numbers, and complex numbers, respectively?  I don't see why this would be of such<br>\ngreat importance.</p>",
        "id": 235775084,
        "sender_full_name": "Email Gateway",
        "timestamp": 1619142707
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nThanks for your comments. I look forward to seeing formalisations of schemes (and other challenging pieces of mathematics) from you and others, using a variety of techniques. Proof methodologies seem to be developing rapidly at the moment!</p>\n<p>Larry</p>",
        "id": 235821972,
        "sender_full_name": "Email Gateway",
        "timestamp": 1619175843
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nIt might be worth mentioning that the AFP development ZFC_in_HOL makes progress in this direction, establishing through the typecast system that a great number of types (including real and complex) are ‚Äúsmall‚Äù, which means they can be embedded into sets in the ZF universe. An ambitious person could do something with this.</p>\n<p>Larry</p>",
        "id": 235824862,
        "sender_full_name": "Email Gateway",
        "timestamp": 1619177364
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nI am not sure this helps, since from a set theoretic point of view, we have a proper class of one element groups, even though they are all isomorphic. The thing you want to limit is the rank of the carrier set, not the cardinality. Extremely small ranks are sufficient for doing quite large chunks of mathematics.</p>\n<p>To the best of my knowledge, we don‚Äôt have many useful tools for reasoning in the style of category theory within higher-order logic.</p>\n<p>Larry</p>",
        "id": 235825846,
        "sender_full_name": "Email Gateway",
        "timestamp": 1619177852
    },
    {
        "content": "<p>From: Mikhail Chekhov &lt;<a href=\"mailto:mikhail.chekhov.w@gmail.com\">mikhail.chekhov.w@gmail.com</a>&gt;<br>\nDear Eugene W. Stark/All,</p>\n<p>Thank you for your remarks.</p>\n<p>My criticism of Isabelle/HOL in connection with applied category theory was<br>\ntwofold:</p>\n<p>- Firstly, I claimed that the existing frameworks for doing category<br>\n   theory cannot be applied to the canonical constructions conveniently (this<br>\n   argument has little to do with what kind of categories we can construct in<br>\n   Isabelle/HOL: I provide more details below).</p>\n<p>- My second argument was related to the impossibility of the<br>\n   construction of certain large categories.</p>\n<p>It seems that we both agree that Isabelle/HOL's size limitations are quite<br>\nsevere, although, perhaps, they do not have a significant impact on your<br>\nown work. From my perspective, this is a very strong and rather objective<br>\nargument against Isabelle/HOL (please do remember that my arguments were<br>\naimed predominantly at the Isabelle/HOL, not any specific formalization of<br>\ncategory theory), merely because there exist formal systems that do not<br>\nhave these limitations; at least, they are less severe to the point of<br>\nmaking such systems suitable for performing the vast majority of<br>\nconstructions in the published literature, including almost anything that<br>\ninvolves reasonably large categories. From what I have seen, most commonly,<br>\nmathematics is exposed in systems that are equiconsistent with or stronger<br>\nthan ZFC (more specifically, most of the mathematics in the published<br>\nliterature seems to be exposed using some logic of the order higher or<br>\nequal than 1 + the axioms of ZFC or MK, or, if category theory is involved,<br>\neither TG or the one-universe axiomatization of Mac Lane, even if this is<br>\nnot always stated explicitly). It seems to me then that the consistency<br>\nstrength greater or equal to that of the ZFC is a prerequisite for any<br>\nformal system to be accepted as some general medium for the communication<br>\nand storage of mathematical knowledge. Whether or not a significant<br>\nfraction of the ideas that are expressed using such systems can also be<br>\nexpressed in Isabelle/HOL, I find slightly irrelevant. The question comes<br>\ndown to why would one wish to use Isabelle/HOL in favor of stronger systems<br>\n(at least, equiconsistent with the ZFC) that are already available.</p>\n<p>As a side note, in my opinion, the systems like ZFC in HOL and HOTG come<br>\nclosest to what is conventionally used for the exposition of mathematics.<br>\nPersonally, having tried formalizing mathematics in ZFC in HOL (e.g., see<br>\n<a href=\"https://gitlab.com/category-theory-for-zfc-in-hol\">https://gitlab.com/category-theory-for-zfc-in-hol</a>), I found that it is<br>\nalmost as easy and convenient as \"copying\" mathematics from textbooks.</p>\n<p>On 23 Apr 2021, Eugene W. Stark wrote</p>\n<blockquote>\n<p>My question is that I would like to understand better something that was<br>\nsaid in the quoted text below<br>\nregarding the supposed impossibility of treating the collections of all<br>\nreal numbers and all complex numbers<br>\nas two distinct objects in (for example) the category Top.</p>\n</blockquote>\n<p>Perhaps I have missed what was intended by the phrase \"so long as real</p>\n<blockquote>\n<p>numbers and complex numbers are<br>\nmodelled as two distinct types and not distinct terms of some other<br>\ntype\".  Does this mean that somehow<br>\nsome particular construction of \"the\" real numbers and \"the\" complex<br>\nnumbers are to be given special<br>\nstatus...</p>\n</blockquote>\n<blockquote>\n<p>a). My first argument was hardly concerned with the issues related to size<br>\n(this is covered by the second, more important, argument), but mere<br>\npractical convenience of using the results about specific categories<br>\nthat can be exposed in Isabelle/HOL. I am inclined to tentatively give a<br>\npositive answer to the question \"Does this mean that somehow some<br>\nparticular construction of \"the\" real numbers and \"the\" complex numbers are<br>\nto be given special status?\". At the moment, the transfer infrastructure of<br>\nIsabelle/HOL still has a number of limitations, so it is not that easy to<br>\ntransfer the results automatically from, e.g., an existing type real to its<br>\nisomorphic copy embedded in some other type and vice versa. At the very<br>\nleast, it requires some amount of tedious manual labor (also, if our copy<br>\nof the real numbers is no longer a type, we cannot even instantiate it as,<br>\ne.g., a canonical field from the standard library). Perhaps, in the future,<br>\nthe transfer infrastructure of Isabelle/HOL will be perfected to the point<br>\nthat I would no longer try to use such an argument. But this would, yet<br>\nagain, require a substantial amount of labor in a different direction.</p>\n</blockquote>\n<p>In essence, my first argument is slightly subjective and comes down to how<br>\nmuch one is prepared to sacrifice convenience and conventional<br>\nIsabelle/HOL's approach of treating distinct mathematical structures as<br>\ndistinct types in favor of being able to apply the tools of category theory<br>\nto them. Another problem is that similar issues seem to hardly exist in<br>\nmost of the other formal systems that I have tried thus far, or, somehow,<br>\nare easier to deal with, subjectively.</p>\n<p>b). As a side remark, the chosen name of the category in my last email is<br>\nmisleading, and, perhaps, led to an alternative interpretation of the<br>\nargument that I was trying to make. In my original email (<br>\n<a href=\"https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2021-April/msg00062.html\">https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2021-April/msg00062.html</a>)<br>\nI was more careful and stated \"something similar to the category Top<br>\n(whatever can be achieved taking into consideration the size limitation of<br>\nIsabelle/HOL).\". Indeed, I have not analyzed in detail as to how much<br>\nexactly can be done in this direction in Isabelle/HOL alone and exactly how<br>\nclose we can get: perhaps, you can provide an affirmative answer to this<br>\nquestion.</p>\n<p>Kind Regards,<br>\nMikhail Chekhov</p>",
        "id": 235926563,
        "sender_full_name": "Email Gateway",
        "timestamp": 1619223574
    },
    {
        "content": "<p>From: Mikhail Chekhov &lt;<a href=\"mailto:mikhail.chekhov.w@gmail.com\">mikhail.chekhov.w@gmail.com</a>&gt;<br>\nDear Lawrence Paulson/All,</p>\n<p>Thank you for your comments.</p>\n<p>Indeed, one ambitious person has already tried doing something similar in<br>\nIsabelle/ZF in 2010 [1]. Indeed, in Category2, the concept of a category is<br>\ndefined in arbitrary types, but it uses the type ZF for the development of<br>\nthe category Set, defining all related concepts via isomorphisms. I did<br>\nmodernize a large part of this development some time ago (this work is not<br>\npublicly available), adapting it to V from ZFC in HOL, but I have given up<br>\non this approach in favor of internalizing everything in V and simply<br>\ntreating HOL as (indeed) a logic, merely a better alternative to FOL (see<br>\n<a href=\"https://gitlab.com/category-theory-for-zfc-in-hol\">https://gitlab.com/category-theory-for-zfc-in-hol</a>). Nonetheless, I still<br>\nuse the mechanism that you mentioned for the transfer of some of the<br>\nrelevant properties exposed in HOL to the sets in V. For example, see my<br>\nexposition of the integer/rational/real numbers and finite sequences in<br>\n<a href=\"https://gitlab.com/category-theory-for-zfc-in-hol/czh_sets\">https://gitlab.com/category-theory-for-zfc-in-hol/czh_sets</a>: most of the<br>\nproperties were transferred automatically using the capabilities of<br>\ntransfer [2].</p>\n<p>Kind Regards,<br>\nMikhail Chekhov</p>\n<p>[1] Katovsky A. Category Theory. Archive of Formal Proofs. 2010;<br>\n[2] Huffman B, Kunƒçar O. Lifting and Transfer: A Modular Design for<br>\nQuotients in Isabelle/HOL. In: Gonthier G, Norrish M, editors. Certified<br>\nPrograms and Proofs. Heidelberg: Springer; 2013. p. 131‚Äì46.</p>",
        "id": 235927501,
        "sender_full_name": "Email Gateway",
        "timestamp": 1619224454
    },
    {
        "content": "<p>From: Mikhail Chekhov &lt;<a href=\"mailto:mikhail.chekhov.w@gmail.com\">mikhail.chekhov.w@gmail.com</a>&gt;<br>\nDear Eugene W. Stark/All,</p>\n<p>I would like to make a minor correction and provide a couple of side<br>\nremarks for the post attached after my signature.</p>\n<p><em>Correction</em></p>\n<p>The last sentence in my post in the attachment should not contain the word<br>\n\"affirmative\" :-).</p>\n<p><em>Side remarks</em></p>\n<p>I would like to add a couple of further arguments for clause a), hopefully<br>\nreinforcing the arguments already provided. In Isabelle/HOL, once one<br>\ndefines, for example, a type of real numbers, it is possible to instantiate<br>\nit as, e.g., a group or a topological space using type classes. Then, all<br>\ntheorems about groups/topological spaces become available for this type<br>\nautomatically. Ideally, in my view, an \"applicable category theory\"<br>\nframework would need to work exactly like this. Thus, if we have a few<br>\nspecific constructions defined in Isabelle/HOL and we notice that they form<br>\na category, we would like to simply prove the axioms of a category for<br>\nthese specific constructions and get the theorems for categories for free,<br>\ninstantiated for these specific constructions (this is exactly where the<br>\ndesire to single out some distinguished user-defined constructions comes<br>\nfrom). Unfortunately, in my view, many of the typical applications for<br>\nwhich such a framework could be useful would have categories whose<br>\nobjects/arrows span multiple types, provided that we do not attempt to move<br>\naway from the existing infrastructure that has already been developed for<br>\nIsabelle/HOL.</p>\n<p>Yet another side remark is that it is possible to do something similar to<br>\nwhat I describe above in Isabelle/HOL by the exploitation of schematic<br>\npolymorphism: see the screenshot attached to this email (this also appeared<br>\nin<br>\n<a href=\"https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2020-July/msg00050.html\">https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2020-July/msg00050.html</a>)<br>\nand please ignore everything that you see there apart from the idea for the<br>\nsoftware implementation. Unfortunately, I found this idea to be too<br>\nlabor-intensive to be practical: effectively, to provide such a framework<br>\nwe would need to \"hard-code\" all theorems (and their proofs) about<br>\ncategories in Isabelle/ML.</p>\n<p>Kind Regards,<br>\nMikhail Chekhov<br>\n<a href=\"/user_uploads/14278/PjL5pJveH1tuvXVzt9EivTvR/MCATS.png\">MCATS.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/PjL5pJveH1tuvXVzt9EivTvR/MCATS.png\" title=\"MCATS.png\"><img src=\"/user_uploads/14278/PjL5pJveH1tuvXVzt9EivTvR/MCATS.png\"></a></div>",
        "id": 236014049,
        "sender_full_name": "Email Gateway",
        "timestamp": 1619304111
    }
]