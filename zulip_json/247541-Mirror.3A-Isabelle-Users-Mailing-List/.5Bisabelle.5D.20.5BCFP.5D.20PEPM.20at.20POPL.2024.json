[
    {
        "content": "<p>From: KC Sivaramakrishnan &lt;<a href=\"mailto:kaycee.srk@gmail.com\">kaycee.srk@gmail.com</a>&gt;<br>\n(Apologies for any duplicate copies)</p>\n<hr>\n<p>**</p>\n<p>**    CALL FOR PAPERS</p>\n<p>**</p>\n<p>**    PEPM at POPL 2024</p>\n<p>**    Workshop on PARTIAL EVALUATION AND PROGRAM MANIPULATION</p>\n<p>**    16th of January 2024, London, United Kingdom</p>\n<p>**</p>\n<p>**    Submission Deadline:</p>\n<p>**    18 October 2023</p>\n<p>**</p>\n<p>**    <a href=\"https://popl24.sigplan.org/home/pepm-2024\">https://popl24.sigplan.org/home/pepm-2024</a></p>\n<p>**    <a href=\"https://easychair.org/conferences/?conf=pepm24\">https://easychair.org/conferences/?conf=pepm24</a></p>\n<p>**</p>\n<hr>\n<p>ACM SIGPLAN Workshop on PARTIAL EVALUATION AND PROGRAM MANIPULATION (PEPM)<br>\n2024</p>\n<p>===============================================================================</p>\n<p>* Website : <a href=\"https://popl24.sigplan.org/home/pepm-2024\">https://popl24.sigplan.org/home/pepm-2024</a></p>\n<p>* Time    : 16th January 2024</p>\n<p>* Place   : London, United Kingdom</p>\n<p>(co-located with POPL 2024)</p>\n<p>The ACM SIGPLAN Workshop on Partial Evaluation and Program</p>\n<p>Manipulation (PEPM) has a history going back to 1991 and has been</p>\n<p>co-located with POPL every year since 2006. It originated with the</p>\n<p>discoveries of useful automated techniques for evaluating</p>\n<p>programs with only partial input. Over the years, the scope of PEPM</p>\n<p>has expanded to include a variety of research areas centred around the</p>\n<p>theme of semantics-based program manipulation — the systematic</p>\n<p>exploitation of treating programs not only as subjects to black-box</p>\n<p>execution but also as data structures that can be generated,</p>\n<p>analysed, and transformed while establishing or maintaining important</p>\n<p>semantic properties.</p>\n<p>Scope</p>\n<hr>\n<p>In addition to the traditional PEPM topics (see below), PEPM 2024</p>\n<p>welcomes submissions in new domains, in particular:</p>\n<p>* Semantics-based and machine-learning-based program synthesis and</p>\n<p>program optimisation.</p>\n<p>* Modelling, analysis, and transformation techniques for distributed</p>\n<p>and concurrent protocols and programs, such as session types,</p>\n<p>linear types, and contract specifications.</p>\n<p>More generally, topics of interest for PEPM 2024 include, but are not</p>\n<p>limited to:</p>\n<p>* Program and model manipulation techniques such as:</p>\n<p>supercompilation, partial evaluation, fusion, on-the-fly program</p>\n<p>adaptation, active libraries, program inversion, slicing, symbolic</p>\n<p>execution, refactoring, decompilation, and obfuscation.</p>\n<p>* Techniques that treat programs/models as data objects including</p>\n<p>metaprogramming, generative programming, embedded domain-specific</p>\n<p>languages, program synthesis by sketching and inductive</p>\n<p>programming, staged computation, and model-driven program</p>\n<p>generation and transformation.</p>\n<p>* Program analysis techniques that are used to drive program/model</p>\n<p>manipulation such as: abstract interpretation, termination</p>\n<p>checking, binding-time analysis, constraint solving, type systems,</p>\n<p>automated testing and test case generation.</p>\n<p>* Application of the above techniques including case studies of</p>\n<p>program manipulation in real-world (industrial, open-source)</p>\n<p>projects and software development processes, descriptions of</p>\n<p>robust tools capable of effectively handling realistic</p>\n<p>applications, benchmarking. Examples of application domains</p>\n<p>include legacy program understanding and transformation, DSL</p>\n<p>implementations, visual languages and end-user programming,</p>\n<p>scientific computing, middleware frameworks and infrastructure</p>\n<p>needed for distributed and web-based applications, embedded and</p>\n<p>resource-limited computation, and security.</p>\n<p>This list of categories is not exhaustive, and we encourage</p>\n<p>submissions describing new theories and applications related to</p>\n<p>semantics-based program manipulation in general. If you have a</p>\n<p>question as to whether a potential submission is within the scope of</p>\n<p>the workshop, please contact the programme co-chairs, Gabriele Keller</p>\n<p>(<a href=\"mailto:g.k.keller@uu.nl\">g.k.keller@uu.nl</a>) and Meng Wang (<a href=\"mailto:meng.wang@bristol.ac.uk\">meng.wang@bristol.ac.uk</a>).</p>\n<p>Submission categories and guidelines</p>\n<hr>\n<p>Three kinds of submissions will be accepted:</p>\n<p>* Regular Research Papers should describe new results, and will be</p>\n<p>judged on originality, correctness, significance, and clarity.</p>\n<p>Regular research papers must not exceed 12 pages.</p>\n<p>* Short Papers may include tool demonstrations and presentations of</p>\n<p>exciting if not fully polished research, and of interesting</p>\n<p>academic, industrial, and open-source applications that are new or</p>\n<p>unfamiliar. Short papers must not exceed 6 pages.</p>\n<p>* Talk Proposals may propose lectures about topics of interest for PEPM,</p>\n<p>existing work representing relevant contributions, or promising</p>\n<p>contributions that are not mature enough to be proposed as papers of</p>\n<p>the other categories. Talk Proposals must not exceed 2 pages.</p>\n<p>References and appendices are not included in page limits. Appendices</p>\n<p>may not necessarily be read by reviewers. Both kinds of submissions should</p>\n<p>be typeset using the two-column ‘sigplan’ sub-format of the new ‘acmart’</p>\n<p>format available at:</p>\n<p><a href=\"http://sigplan.org/Resources/Author/\">http://sigplan.org/Resources/Author/</a></p>\n<p>and submitted electronically via EasyChair:</p>\n<p><a href=\"https://easychair.org/conferences/?conf=pepm24\">https://easychair.org/conferences/?conf=pepm24</a></p>\n<p>Reviewing will be single-blind.</p>\n<p>Submissions are welcome from PC members (except the two co-chairs).</p>\n<p>Accepted regular research papers will appear in formal proceedings</p>\n<p>published by ACM, and be included in the ACM Digital Library.</p>\n<p>Accepted short papers do not constitute formal publications and will</p>\n<p>not appear in the proceedings.</p>\n<p>At least one author of each accepted contribution must attend the</p>\n<p>workshop (physically or virtually) and present the work. In the case</p>\n<p>of tool demonstration papers, a live demonstration of the described</p>\n<p>tool is expected.</p>\n<p>Important dates</p>\n<hr>\n<p>* Paper submission deadline : <strong>Wednesday 18th October 2023 (AoE)</strong></p>\n<p>* Author notification       : <strong>Wednesday 15th November 2023 (AoE)</strong></p>\n<p>* Workshop                  : <strong>Tuesday 16th January 2024</strong></p>\n<p>Best paper award</p>\n<hr>\n<p>PEPM 2024 continues the tradition of the Best Paper award. The winner will<br>\nbe</p>\n<p>announced at the workshop.</p>\n<p>Programme committee</p>\n<hr>\n<ul>\n<li>Chairs: Gabriele Keller (Utrecht University, Netherlands)<p>Meng Wang (University of Bristol, UK)</p>\n</li>\n</ul>",
        "id": 390933849,
        "sender_full_name": "Email Gateway",
        "timestamp": 1694699065
    }
]