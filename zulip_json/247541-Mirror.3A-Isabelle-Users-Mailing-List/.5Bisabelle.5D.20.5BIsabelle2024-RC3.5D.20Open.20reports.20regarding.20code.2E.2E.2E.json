[
    {
        "content": "<p>From: <a href=\"mailto:hannobecker@posteo.de\">hannobecker@posteo.de</a><br>\nHi Makarius and community,</p>\n<p>There are a few outstanding reports of unexpected behaviour regarding <br>\ncode generation, adhoc overloading, and locales.</p>\n<p>Each report contains a minimal example to reproduce the behaviours, all <br>\nof which persist in Isabelle2024-RC3.</p>\n<p>The reports are:</p>\n<ul>\n<li>\n<p><a href=\"https://lists.cam.ac.uk/sympa/arc/cl-isabelle-users/2024-02/msg00053.html\">https://lists.cam.ac.uk/sympa/arc/cl-isabelle-users/2024-02/msg00053.html</a> <br>\n(Failure of <code>lift_definition</code> in the context of type classes.)</p>\n</li>\n<li>\n<p><a href=\"https://lists.cam.ac.uk/sympa/arc/cl-isabelle-users/2024-01/msg00079.html\">https://lists.cam.ac.uk/sympa/arc/cl-isabelle-users/2024-01/msg00079.html</a> <br>\n(Constant folding during code generation from locales and sublocales)</p>\n</li>\n<li>\n<p><a href=\"https://lists.cam.ac.uk/sympa/arc/cl-isabelle-users/2024-02/msg00015.html\">https://lists.cam.ac.uk/sympa/arc/cl-isabelle-users/2024-02/msg00015.html</a> <br>\n(Adhoc Overloading corrupted by unrelated definition)</p>\n</li>\n</ul>\n<p>These behaviours arise in a large-scale application of Isabelle making <br>\nextensive use of nested locales, code generation, and adhoc overloading. <br>\nWe are currently carrying ad-hoc (no pun intended) patches to <br>\nadhoc_overloading because of the last report.</p>\n<p>I appreciate that investigating these reports is time-consuming and, by <br>\nnow, not an option for Isabelle2024 anymore. Moving forward, however, <br>\nthoughts would be appreciated on how to explain/address them. If there <br>\nis a place where such open reports are gathered, that would also be <br>\nhelpful to know, so they cannot be forgotten.</p>\n<p>Thanks for the hard work,</p>\n<p>Regards,<br>\nHanno</p>",
        "id": 436819081,
        "sender_full_name": "Email Gateway",
        "timestamp": 1714713436
    },
    {
        "content": "<p>From: Kevin Kappelmann &lt;<a href=\"mailto:kevin.kappelmann@tum.de\">kevin.kappelmann@tum.de</a>&gt;<br>\nAttached you can find a patch for the third report. I leave it up to <br>\nMakarius whether this can still be included in Isabelle2024.</p>\n<p>The issue is that <code>variants_eq</code> in <code>adhoc_overloading.ML</code> checks <br>\nequality of types syntactically, but it has to check it up to renaming <br>\nof schematics.</p>\n<p>(In the example of the report, the types ?'a -&gt; ?'a and ?'a1 -&gt; ?'a1 <br>\nweren't identified)</p>\n<p>Best wishes,</p>\n<p>Kevin</p>\n<p><a href=\"/user_uploads/14278/TYdzdcTtKeS0XfN9DU0MQ2Yv/type_eq_adhocoverloading.patch\">type_eq_adhocoverloading.patch</a></p>",
        "id": 436846508,
        "sender_full_name": "Email Gateway",
        "timestamp": 1714727988
    }
]