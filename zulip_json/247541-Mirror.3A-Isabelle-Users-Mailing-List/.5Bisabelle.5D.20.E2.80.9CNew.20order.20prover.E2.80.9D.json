[
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nA “new order prover” is an advertised feature of Isabelle2021-1. But I don’t see a hint of documentation. Is there at least a brief description of it somewhere?</p>\n<p>Larry</p>",
        "id": 297000409,
        "sender_full_name": "Email Gateway",
        "timestamp": 1662215828
    },
    {
        "content": "<p>From: Lukas Stevens &lt;lukas.stevens+isabelle-users@in.tum.de&gt;<br>\nHi Larry,</p>\n<p>thanks for reminding me I was meaning to put some documentation into the <br>\nNEWS file but forgot about it. I will add it soon. Here is the description.</p>\n<p>The new order prover (~~/srcProvers/order_tac.ML) is work by Tobias and <br>\nme that replaces the old order prover (~~/src/Provers/order.ML) . It <br>\nimproves upon the old prover in several ways:</p>\n<ul>\n<li>\n<p>The completeness of the prover is verified in Isabelle (see the ATVA <br>\n2021 paper \"A Verified Decision Procedure for Orders in Isabelle/HOL\").</p>\n</li>\n<li>\n<p>The new prover is complete for partial orders.</p>\n</li>\n<li>\n<p>The interface to register new order provers was reworked in order to <br>\nreduce boilerplate.</p>\n</li>\n</ul>\n<p>The partial order defined by the order typeclass, for example, can be <br>\nregistered with the solver as follows:</p>\n<p>context order<br>\nbegin</p>\n<p>local_setup ‹<br>\n   HOL_Order_Tac.declare_order {<br>\n     ops = {eq = @{term ‹(=) :: 'a ⇒ 'a ⇒ bool›}, le = @{term ‹(≤)›}, lt <br>\n= @{term ‹(&lt;)›}},<br>\n     thms = {trans = @{thm order_trans}, refl = @{thm order_refl}, eqD1 <br>\n= @{thm eq_refl},<br>\n             eqD2 = @{thm eq_refl[OF sym]}, antisym = @{thm <br>\norder_antisym}, contr = @{thm notE}},<br>\n     conv_thms = {less_le = @{thm eq_reflection[OF less_le]},<br>\n                  nless_le = @{thm eq_reflection[OF nless_le]}}<br>\n   }<br>\n›<br>\nend</p>\n<p>The setup function for linear orders is similar. Since the solver <br>\nalready works with the order and linorder typeclasses, most users won't <br>\nneed to register new orders but should instantiate the appropriate <br>\ntypeclass instead.</p>\n<p>There are two configuration attributes that modify the behaviour of the <br>\nsolver:</p>\n<ul>\n<li>\n<p>order_trace (default: False): Enables tracing for the solver that <br>\nshows information such as the premises that were passed to the solver.</p>\n</li>\n<li>\n<p>order_split_limit (default: 8): Limits the number of order literals of <br>\nthe form ¬ x &lt; y that are passed to the solver since those literals <br>\nforce the solver to perform case splitting.</p>\n</li>\n</ul>",
        "id": 297336598,
        "sender_full_name": "Email Gateway",
        "timestamp": 1662458095
    }
]