[
    {
        "content": "<p>From: \"\\\"日月久照\\\"\" &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nI have revised the theory file as follows:</p>\n<p>theory FullTheory<br>\n&nbsp; imports \"CParser.CTranslation\" AutoCorres.AutoCorres<br>\nbegin</p>\n<p>lemma diff_signed_word_is_diff_pointer[simp]:<br>\n\"<br>\na ≠ b ⟶ ((PTR_COERCE(32 signed word → 32 word) a) ≠ (PTR_COERCE(32 signed word → 32 word) b))<br>\n\"<br>\n&nbsp; by (metis Ptr_ptr_val ptr_val_ptr_coerce)</p>\n<p>lemma \"<br>\nof_int (x + y) = of_int x + of_int y<br>\n\"<br>\n&nbsp; apply(auto)<br>\n&nbsp; done</p>\n<p>lemma can_not_eq_self:<br>\n\"∀(k::word32). y * k &lt; y ⟹ 0 &lt; y * k ⟹ x = y * k ⟹ False\"<br>\nproof (induct k)<br>\n&nbsp; case zero<br>\n&nbsp; then show ?case by auto<br>\nnext<br>\n&nbsp; case (suc k)<br>\n&nbsp; then show ?case<br>\n&nbsp; &nbsp; by (metis mult.right_neutral order_less_irrefl)<br>\nqed<br>\n&nbsp;&nbsp;<br>\n&nbsp;&nbsp;<br>\nlemma \"<br>\n(x::word32) &lt; y∧<br>\nx &gt; 0 ⟶<br>\n¬(y dvd x)<br>\n\"<br>\n&nbsp; apply(auto)<br>\n&nbsp; apply(simp add: dvd_def)<br>\n&nbsp; using can_not_eq_self<br>\n&nbsp; apply auto<br>\n&nbsp; sledgehammer</p>\n<hr>\n<p>But it didn’t work.&nbsp;The sledgehammer also can’t find any proof.<br>\nsubgoal is：</p>\n<p>proof (prove)<br>\ngoal (1 subgoal):<br>\n&nbsp;1. ⋀k. y * k &lt; y ⟹<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0 &lt; y * k ⟹<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(⋀y k x. ∀k. y * k &lt; y ⟹ 0 &lt; y * k ⟹ x = y * k ⟹ False) ⟹<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;x = y * k ⟹ False</p>\n<p>Thanks</p>\n<p>------------------&nbsp;原始邮件&nbsp;------------------<br>\n发件人:                                                                                                                        \"Lawrence Paulson\"                                                                                    &lt;lp15@cam.ac.uk&gt;;<br>\n发送时间:&nbsp;2024年3月31日(星期天) 晚上6:53<br>\n收件人:&nbsp;\"日月久照\"&lt;riyuejiuzhao@qq.com&gt;;\"isabelle-users\"&lt;isabelle-users@cl.cam.ac.uk&gt;;<br>\n抄送:&nbsp;\"Stepan Holub\"&lt;cl-isabelle-users@lists.cam.ac.uk&gt;;<br>\n主题:&nbsp;Re: [isabelle] Why is the subgoal still unable to be verified even when there is an existing lemma?</p>\n<p>Here you declare can_not_eq_self as [simp], but it does not have the form of a simplification rule: in particular, it depends on conditions such as y*k&lt;y, when those variables are not mentioned in the conclusion (which is just False). So [simp] has no useful effect. Arguably, a warning should be given in such cases. </p>\n<p>But anyway, get rid of [simp] and try</p>\n<p>using can_not_eq_self<br>\n    apply auto</p>\n<p>or instead simply try sledgehammer.</p>\n<p>Larry Paulson</p>\n<p>&gt;</p>",
        "id": 430482713,
        "sender_full_name": "Email Gateway",
        "timestamp": 1711897210
    },
    {
        "content": "<p>From: \"\\\"日月久照\\\"\" &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nThat works, thank you very much.</p>\n<p>------------------&nbsp;原始邮件&nbsp;------------------<br>\n发件人:                                                                                                                        \"Lawrence Paulson\"                                                                                    &lt;lp15@cam.ac.uk&gt;;<br>\n发送时间:&nbsp;2024年4月1日(星期一) 晚上6:17<br>\n收件人:&nbsp;\"日月久照\"&lt;riyuejiuzhao@qq.com&gt;;<br>\n抄送:&nbsp;\"isabelle-users\"&lt;isabelle-users@cl.cam.ac.uk&gt;;\"Stepan Holub\"&lt;cl-isabelle-users@lists.cam.ac.uk&gt;;<br>\n主题:&nbsp;Re: [isabelle] Why is the subgoal still unable to be verified even when there is an existing lemma?</p>\n<p>Your problem is here:</p>\n<p>&gt; lemma can_not_eq_self:<br>\n&gt; \"∀(k::word32). y * k &lt; y ⟹ 0 &lt; y * k ⟹ x = y * k ⟹ False\"</p>\n<p>The scope of ∀ is local to ∀(k::word32). y * k &lt; y, so in particular there’s no connection between the k in that formula and the other instances of k.</p>\n<p>It works if you write your lemma like this:</p>\n<p>lemma can_not_eq_self:<br>\n\"⋀(k::word32). y * k &lt; y ⟹ 0 &lt; y * k ⟹ x = y * k ⟹ False\"</p>\n<p>Or equivalently and more clearly,</p>\n<p>lemma can_not_eq_self:<br>\n&nbsp; fixes k::word32<br>\n&nbsp; assumes \"y * k &lt; y\" \"0 &lt; y * k\" \"x = y * k\"<br>\n&nbsp; shows \"False\"</p>",
        "id": 431343261,
        "sender_full_name": "Email Gateway",
        "timestamp": 1712245244
    }
]