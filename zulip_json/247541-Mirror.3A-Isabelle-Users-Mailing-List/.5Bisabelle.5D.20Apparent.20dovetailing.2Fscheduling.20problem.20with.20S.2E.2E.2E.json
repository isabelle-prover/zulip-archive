[
    {
        "content": "<p>From: \"Eugene W. Stark\" &lt;<a href=\"mailto:isabelle-users@starkeffect.com\">isabelle-users@starkeffect.com</a>&gt;<br>\nSince the release of Isabelle 2022 I have had relatively frequent situations in which I have<br>\nbeen using Sledgehammer, it reports \"No proof found\", but in fact the fact to be proved<br>\ncan easily be proved using auto or simp.  This tends to cause me to waste time because I end<br>\nup entering smaller and smaller proof steps but then I find I could have done the whole thing<br>\nwith auto or simp in the first place.</p>\n<p>I finally found a case that could be turned into a short example:</p>\n<hr>\n<p>theory Barf<br>\nimports Main<br>\nbegin</p>\n<p>locale X =<br>\n     fixes zero :: 'a and one :: 'a and two :: 'a and null :: 'a<br>\n   assumes distinct: \"null ≠ zero ∧ null ≠ one ∧ null ≠ two ∧<br>\n                      zero ≠ one ∧ zero ≠ two ∧ one ≠ two\"<br>\n   begin</p>\n<p>definition P<br>\n     where \"P x ⟷ (x = zero ∨ x = one ∨ x = two)\"</p>\n<p>lemma P_iff:<br>\n     shows \"P x ⟷ x = zero ∨ x = one ∨ x = two\"<br>\n       unfolding P_def by blast</p>\n<p>lemma<br>\n     shows \"Collect P = {zero, one, two}\"<br>\n       using P_iff<br>\n       (*<br>\n          HERE CLICK \"Apply\" in Sledgehammer panel.<br>\n          Sledgehammer with \"Provers: cvc4 z3 verit\", \"Isar proofs\" unchecked,<br>\n          \"Try methods\" checked, reports \"No proof found\" after about 40 seconds,<br>\n          but the lemma is provable by auto.<br>\n        *)<br>\n       by auto</p>\n<p>end</p>\n<hr>\n<p>It seems like it must be some kind of a problem with the way \"try methods\" is scheduled<br>\nwith respect to the SMT provers, but that is just speculation because I don't have a clue<br>\nas to how it really works.</p>\n<p>- Gene Stark</p>",
        "id": 340462726,
        "sender_full_name": "Email Gateway",
        "timestamp": 1678309036
    },
    {
        "content": "<p>From: \"Eugene W. Stark\" &lt;<a href=\"mailto:isabelle-users@starkeffect.com\">isabelle-users@starkeffect.com</a>&gt;<br>\n(Sorry for the spam -- I was lazy and inadvertently ended up adding the original posting to a<br>\n\"Call for Papers\" Thread, instead of a new thread.)</p>\n<p>Since the release of Isabelle 2022 I have had relatively frequent situations in which I have<br>\nbeen using Sledgehammer, it reports \"No proof found\", but in fact the fact to be proved<br>\ncan easily be proved using auto or simp.  This tends to cause me to waste time because I end<br>\nup entering smaller and smaller proof steps but then I find I could have done the whole thing<br>\nwith auto or simp in the first place.</p>\n<p>I finally found a case that could be turned into a short example:</p>\n<hr>\n<p>theory Barf<br>\nimports Main<br>\nbegin</p>\n<p>locale X =<br>\n     fixes zero :: 'a and one :: 'a and two :: 'a and null :: 'a<br>\n   assumes distinct: \"null ≠ zero ∧ null ≠ one ∧ null ≠ two ∧<br>\n                      zero ≠ one ∧ zero ≠ two ∧ one ≠ two\"<br>\n   begin</p>\n<p>definition P<br>\n     where \"P x ⟷ (x = zero ∨ x = one ∨ x = two)\"</p>\n<p>lemma P_iff:<br>\n     shows \"P x ⟷ x = zero ∨ x = one ∨ x = two\"<br>\n       unfolding P_def by blast</p>\n<p>lemma<br>\n     shows \"Collect P = {zero, one, two}\"<br>\n       using P_iff<br>\n       (*<br>\n          HERE CLICK \"Apply\" in Sledgehammer panel.<br>\n          Sledgehammer with \"Provers: cvc4 z3 verit\", \"Isar proofs\" unchecked,<br>\n          \"Try methods\" checked, reports \"No proof found\" after about 40 seconds,<br>\n          but the lemma is provable by auto.<br>\n        *)<br>\n       by auto</p>\n<p>end</p>\n<hr>\n<p>It seems like it must be some kind of a problem with the way \"try methods\" is scheduled<br>\nwith respect to the SMT provers, but that is just speculation because I don't have a clue<br>\nas to how it really works.</p>\n<p>- Gene Stark</p>",
        "id": 340479249,
        "sender_full_name": "Email Gateway",
        "timestamp": 1678315745
    },
    {
        "content": "<p>From: Mathias Fleury &lt;<a href=\"mailto:mathias.fleury12@gmail.com\">mathias.fleury12@gmail.com</a>&gt;<br>\nHi Eugene,</p>\n<p>Did you intend to use the command try (that calls Sledgehammer, try0, <br>\nnitpick) instead of Sledgehammer only? try0 tries auto/simp/blast/... to <br>\nsee if any tactic is able to prove the goal, whereas Sledgehammer does <br>\nnot. On your example try reports very fast that \"by blast\" is able to <br>\nprove the goal.</p>\n<p>It is not very surprising that proofs exists that auto can find, but <br>\nSledgehammer does not.</p>\n<p>Mathias</p>",
        "id": 340525486,
        "sender_full_name": "Email Gateway",
        "timestamp": 1678344810
    },
    {
        "content": "<p>From: \"Eugene W. Stark\" &lt;<a href=\"mailto:isabelle-users@starkeffect.com\">isabelle-users@starkeffect.com</a>&gt;<br>\nMy understanding was that the \"Try Methods\" checkbox in the Sledgehammer panel was supposed to enable trying<br>\nthe normal methods (simp, auto, blast, force, etc.) in addition to the SMT solvers.  If that is incorrect,<br>\nthen what is the purpose of that checkbox?</p>",
        "id": 340541688,
        "sender_full_name": "Email Gateway",
        "timestamp": 1678351210
    },
    {
        "content": "<p>From: Mathias Fleury &lt;<a href=\"mailto:mathias.fleury12@gmail.com\">mathias.fleury12@gmail.com</a>&gt;<br>\nAccording to the official documentation <br>\n<a href=\"https://isabelle.in.tum.de/doc/sledgehammer.pdf\">https://isabelle.in.tum.de/doc/sledgehammer.pdf</a>:</p>\n<p>try0[=〈bool〉]{true}(neg.:dont_try0)<br>\nSpecifies whether standard proof methods such asautoandblastshould<br>\nbe tried as alternatives tometisin Isar proofs. The collection of meth-<br>\nods is roughly the same as for thetry0command.</p>\n<p>Let's try it on your example:</p>\n<p>lemma P_iff:<br>\n      shows \"P x ⟷ x = zero ∨ x = one ∨ x = two\"</p>\n<p>With the option:<br>\n    cvc4: Try this: by (simp add: P_def) (0.8 ms)</p>\n<p>Without you get only metis steps:<br>\n   vampire: Try this: by (metis P_def) (199 ms)<br>\n   cvc4: Try this: by (smt (verit) P_def) (1.2 s)</p>\n<p>My guess is that this option is mostly there for historical reasons to <br>\nreduce the amount of computer CPU power required.</p>\n<p>Mathias</p>",
        "id": 340544083,
        "sender_full_name": "Email Gateway",
        "timestamp": 1678351847
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@ifi.lmu.de\">jasmin.blanchette@ifi.lmu.de</a>&gt;<br>\nIndeed. There was a time where this option was new and experimental, but nowadays is almost unthinkable to use Sledgehammer without it. There are nevertheless still a few rare cases where one wants to see exactly which lemmas were used by the prover, and the metis output is then more informative.</p>\n<p>Jasmin</p>",
        "id": 340546299,
        "sender_full_name": "Email Gateway",
        "timestamp": 1678352493
    },
    {
        "content": "<p>From: \"Eugene W. Stark\" &lt;<a href=\"mailto:isabelle-users@starkeffect.com\">isabelle-users@starkeffect.com</a>&gt;<br>\nAs I stated in my original posting, I get:</p>\n<p>With Provers: cvc4 z3 verit\", \"Isar proofs\" unchecked, \"Try methods\" checked,<br>\n\"No proof found\" reported after about 40 seconds when \"Apply\" in the Sledgehammer panel<br>\nis selected.</p>\n<p>Unchecking \"Try methods\" does not change the behavior.</p>\n<p>Yes, entering \"try\" in the buffer does quickly result in the suggestion \"by blast\",<br>\nbut that is not the issue that I was reporting.  I am reporting an issue with the<br>\nbehavior of the Sledgehammer panel.  Why is the behavior of the Sledgehammer panel<br>\nwith \"Try methods\" checked different than the behavior when \"try\" is entered into<br>\nthe editing buffer?</p>",
        "id": 340546357,
        "sender_full_name": "Email Gateway",
        "timestamp": 1678352510
    },
    {
        "content": "<p>From: Dominique Unruh &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;</p>\n<blockquote>\n<p>Indeed. There was a time where this option was new and experimental, <br>\nbut nowadays is almost unthinkable to use Sledgehammer without it. There <br>\nare nevertheless still a few rare cases where one wants to see exactly <br>\nwhich lemmas were used by the prover, and the metis output is then more <br>\ninformative.</p>\n</blockquote>\n<p>Maybe it would make sense to remove this option (at least from the UI) <br>\nas it is confusing, and instead add an option: \"show involved lemmas\" <br>\n(which would add an extra line after every suggested tactic, or maybe <br>\nfor compactness after every suggested tactic that isn't anyway a <br>\nmetis-call)?</p>\n<p>I think this would avoid the understandable confusion about the checkbox.</p>\n<p>Best wishes,<br>\nDominique.</p>",
        "id": 340547138,
        "sender_full_name": "Email Gateway",
        "timestamp": 1678352727
    },
    {
        "content": "<p>From: Mathias Fleury &lt;<a href=\"mailto:mathias.fleury12@gmail.com\">mathias.fleury12@gmail.com</a>&gt;<br>\nOn 3/9/23 10:01, Eugene W. Stark wrote:</p>\n<blockquote>\n<p>As I stated in my original posting, I get:</p>\n<p>With Provers: cvc4 z3 verit\", \"Isar proofs\" unchecked, \"Try methods\" <br>\nchecked,<br>\n\"No proof found\" reported after about 40 seconds when \"Apply\" in the <br>\nSledgehammer panel<br>\nis selected.</p>\n<p>Unchecking \"Try methods\" does not change the behavior.</p>\n</blockquote>\n<p>It does… if a proof a found. It is an option for the reconstruction of <br>\nthe proofs.</p>\n<blockquote>\n<p>Yes, entering \"try\" in the buffer does quickly result in the <br>\nsuggestion \"by blast\",<br>\nbut that is not the issue that I was reporting.  I am reporting an <br>\nissue with the<br>\nbehavior of the Sledgehammer panel.  Why is the behavior of the <br>\nSledgehammer panel<br>\nwith \"Try methods\" checked different than the behavior when \"try\" is <br>\nentered into<br>\nthe editing buffer?</p>\n</blockquote>\n<p>I mentioned \"try\" because it solves your problem. The \"try methods\" <br>\ncheckbox has nothing to do with the \"try\" tactic you can type in the <br>\nbuffer, except for the name:</p>\n<p>\"try\" is roughly equivalent to \"nitpick OR sledgehammer OR try0, <br>\nwhatever terminates first\".</p>\n<p>\"Try methods\" is equivalent to \"sledgehammer\" (when on) or <br>\n\"sledgehammer[dont_try0]\" (when off).</p>\n<p>Mathias</p>\n<blockquote>\n<p>On 3/9/23 03:50, Mathias Fleury wrote:</p>\n<blockquote>\n<p>According to the official documentation <br>\n<a href=\"https://isabelle.in.tum.de/doc/sledgehammer.pdf\">https://isabelle.in.tum.de/doc/sledgehammer.pdf</a>:</p>\n<p>try0[=〈bool〉]{true}(neg.:dont_try0)<br>\nSpecifies whether standard proof methods such asautoandblastshould<br>\nbe tried as alternatives tometisin Isar proofs. The collection of meth-<br>\nods is roughly the same as for thetry0command.</p>\n<p>Let's try it on your example:</p>\n<p>lemma P_iff:<br>\n      shows \"P x ⟷ x = zero ∨ x = one ∨ x = two\"</p>\n<p>With the option:<br>\n    cvc4: Try this: by (simp add: P_def) (0.8 ms)</p>\n<p>Without you get only metis steps:<br>\n   vampire: Try this: by (metis P_def) (199 ms)<br>\n   cvc4: Try this: by (smt (verit) P_def) (1.2 s)</p>\n<p>My guess is that this option is mostly there for historical reasons <br>\nto reduce the amount of computer CPU power required.</p>\n<p>Mathias</p>\n</blockquote>\n<p>On 3/9/23 09:39, Eugene W. Stark wrote:</p>\n<blockquote>\n<blockquote>\n<p>My understanding was that the \"Try Methods\" checkbox in the <br>\nSledgehammer panel was supposed to enable trying<br>\nthe normal methods (simp, auto, blast, force, etc.) in addition to <br>\nthe SMT solvers.  If that is incorrect,<br>\nthen what is the purpose of that checkbox?</p>\n</blockquote>\n<p>On 3/9/23 01:52, Mathias Fleury wrote:</p>\n<blockquote>\n<blockquote>\n<p>Hi Eugene,</p>\n<p>Did you intend to use the command try (that calls Sledgehammer, <br>\ntry0, nitpick) instead of Sledgehammer only? try0 tries <br>\nauto/simp/blast/... to see if any tactic is able to prove the goal, <br>\nwhereas Sledgehammer does not. On your example try reports very <br>\nfast that \"by blast\" is able to prove the goal.</p>\n<p>It is not very surprising that proofs exists that auto can find, <br>\nbut Sledgehammer does not.</p>\n<p>Mathias</p>\n</blockquote>\n<p>On 3/8/23 23:48, Eugene W. Stark wrote:</p>\n<blockquote>\n<blockquote>\n<p>(Sorry for the spam -- I was lazy and inadvertently ended up <br>\nadding the original posting to a<br>\n\"Call for Papers\" Thread, instead of a new thread.)</p>\n<p>Since the release of Isabelle 2022 I have had relatively frequent <br>\nsituations in which I have<br>\nbeen using Sledgehammer, it reports \"No proof found\", but in fact <br>\nthe fact to be proved<br>\ncan easily be proved using auto or simp.  This tends to cause me <br>\nto waste time because I end<br>\nup entering smaller and smaller proof steps but then I find I <br>\ncould have done the whole thing<br>\nwith auto or simp in the first place.</p>\n<p>I finally found a case that could be turned into a short example:</p>\n<hr>\n<p>theory Barf<br>\nimports Main<br>\nbegin</p>\n<p>locale X =<br>\n    fixes zero :: 'a and one :: 'a and two :: 'a and null :: 'a<br>\n  assumes distinct: \"null ≠ zero ∧ null ≠ one ∧ null ≠ two ∧<br>\n                     zero ≠ one ∧ zero ≠ two ∧ one ≠ two\"<br>\n  begin</p>\n<p>definition P<br>\n    where \"P x ⟷ (x = zero ∨ x = one ∨ x = two)\"</p>\n<p>lemma P_iff:<br>\n    shows \"P x ⟷ x = zero ∨ x = one ∨ x = two\"<br>\n      unfolding P_def by blast</p>\n<p>lemma<br>\n    shows \"Collect P = {zero, one, two}\"<br>\n      using P_iff<br>\n      (*<br>\n         HERE CLICK \"Apply\" in Sledgehammer panel.<br>\n         Sledgehammer with \"Provers: cvc4 z3 verit\", \"Isar proofs\" <br>\nunchecked,<br>\n         \"Try methods\" checked, reports \"No proof found\" after <br>\nabout 40 seconds,<br>\n         but the lemma is provable by auto.<br>\n       *)<br>\n      by auto</p>\n<p>end</p>\n<hr>\n<p>It seems like it must be some kind of a problem with the way \"try <br>\nmethods\" is scheduled<br>\nwith respect to the SMT provers, but that is just speculation <br>\nbecause I don't have a clue<br>\nas to how it really works.</p>\n<p>- Gene Stark</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>",
        "id": 340548723,
        "sender_full_name": "Email Gateway",
        "timestamp": 1678353159
    },
    {
        "content": "<p>From: Dominique Unruh &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nI would like to additionally mention try0. On my system, try gets the <br>\nsystem to its knees, while running sledgehammer and try0 together works <br>\nfine.</p>\n<p>I have created a keyboard shortcut that inserts \"sledgehammer try0 by -\" <br>\n(on separate lines), this allows me to already enter and possibly prove <br>\nthe next subgoal while slegehammer is still running.</p>\n<p>(Creating keyboard shortcuts in jEdit:  type \"sl Ctrl-;\", this opens a <br>\nconfig box to enter the lines. Next time, type \"sl Ctrl-;\" to insert <br>\nthose lines. xyz can be whatever you like.)</p>\n<p>Best wishes,<br>\nDominique.</p>",
        "id": 340561083,
        "sender_full_name": "Email Gateway",
        "timestamp": 1678356565
    }
]