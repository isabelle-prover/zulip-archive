[
    {
        "content": "<p>From: Zack Grannan &lt;<a href=\"mailto:zachary.grannan@imdea.org\">zachary.grannan@imdea.org</a>&gt;<br>\nHello everyone,</p>\n<p>Is there a benchmark suite that tests the rewriting tactic of Isabelle or some<br>\nreferences we can read how it works/performs?</p>\n<p>We are implementing a rewrite tactic for Liquid Haskell and it would be great<br>\nto compare it with Isabelle's.</p>\n<p>Thanks,</p>\n<p>Zack</p>",
        "id": 213533597,
        "sender_full_name": "Email Gateway",
        "timestamp": 1602837981
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI guess you mean the \"simp\" family of proof methods, or rather \"The<br>\nSimplifier\" behind it. The  isar-ref manual, section 9.3 has many explanations<br>\nabout it, but you probably need some practical experience with it to see the<br>\npoints.</p>\n<p>It might also help to study the sources:</p>\n<p><a href=\"https://isabelle.sketis.net/repos/isabelle/file/Isabelle2020/src/Pure/raw_simplifier.ML\">https://isabelle.sketis.net/repos/isabelle/file/Isabelle2020/src/Pure/raw_simplifier.ML</a><br>\n<a href=\"https://isabelle.sketis.net/repos/isabelle/file/Isabelle2020/src/Pure/simplifier.ML\">https://isabelle.sketis.net/repos/isabelle/file/Isabelle2020/src/Pure/simplifier.ML</a></p>\n<p>(You can read Isabelle/Pure sources in the Prover IDE by opening the central<br>\nROOT.ML, which is also in the Documentation panel.)</p>\n<p>Various people on this list can probably provide more concrete answers:<br>\nhigh-end users routinely tinker with the Simplifier setup.</p>\n<p>Makarius</p>",
        "id": 213805922,
        "sender_full_name": "Email Gateway",
        "timestamp": 1603122559
    }
]