[
    {
        "content": "<p>From: Thomas Sewell &lt;<a href=\"mailto:tals4@cam.ac.uk\">tals4@cam.ac.uk</a>&gt;<br>\nHi Isabelle users.</p>\n<p>I've been doing some proofs in Isabelle about operations of a CPU<br>\narchitecture lately[1]. Sometimes this just requires bit-blasting, i.e.<br>\nreduction of a word/bitvector problem to a boolean problem for <br>\nsat-solving.<br>\nI've got some satisfactory results using an adjusted version of the old<br>\nWord_Bitwise and the Argo prover. I don't think there's currently a <br>\nbetter<br>\napproach in Isabelle, since replay of SMT word/bitvector proofs was <br>\nnever<br>\nenabled. (Please tell me if I'm misinformed, I don't seem to be up to <br>\ndate<br>\nabout any of this, and there's a note about veriT and a session<br>\nHOL-Word-SMT_Examples in the Isabelle 2021 NEWS that I don't <br>\nunderstand.)</p>\n<p>I'll try to make an adjusted/improved Word_Bitwise available in the<br>\nfuture, but my version is still quite experimental.</p>\n<p>I have been pleasantly surprised how effective Argo was for SAT-like <br>\nproblems.<br>\nGiven that, I'd like to make some suggestions, mostly about <br>\ndocumentation.</p>\n<p>I think that some kind of note should be added to the SAT theory, or the<br>\nsat/satx methods and tactics, given that most users should just call <br>\nargo<br>\ndirectly. SAT is the logical place to look for a solver for sat-like <br>\nproblems,<br>\nand the provided default SAT/CDCL solver used by the sat/satx methods is<br>\njust not as good as the equivalent implemented within argo. Meanwhile <br>\nthere's<br>\nand unsolved problem with explosion of the problem size in satx <br>\npreprocessing.<br>\nIn principle an external solver might have power that an inbuilt one <br>\ndoesn't,<br>\nbut my quick investigation suggests that most of the supported external <br>\nSAT<br>\nsolvers are obscure or historical.</p>\n<p>Another minor documentation complaint is that Argo is pretty well <br>\ndocumented in<br>\nHOL/ex/Argo_Examples.thy, but it took me a while to think to look there. <br>\nIn<br>\nparticular, for medium-size SAT problems a user may have to increase <br>\nargo_timeout,<br>\nand it's not necessarily obvious where to find it. Perhaps a link to the <br>\nexamples<br>\nin Argo.thy itself?</p>\n<p>Finally, some practical issues. While argo generally performs well, in <br>\nsome<br>\nsituations I've seen a big difference between the speed of \"apply <br>\n(argo)\" and<br>\n\"apply (intro impI; argo)\". Note that I don't want to just apply <br>\nclarsimp or<br>\nsimilar here for various performance reasons, which is probably unusual.<br>\nAnyway I don't really understand why an SMT/SAT tool would perform so <br>\ndifferently<br>\nfor obviously similar goals. I've also discovered what is probably an <br>\noutright bug.<br>\nA particular kind of trivial premise seems to lead to ML exceptions of <br>\nthe form<br>\n\"Undeclared hyps: ...\" or \"forall_intr: variable .. free in <br>\nassumptions\". I think<br>\nthe second might be side-effect of the first. Again, simplification <br>\nprevents this<br>\nissue, but I have performance reasons to prefer to use the simplifier as <br>\nlittle as<br>\npossible.</p>\n<p>I've checked these issues still exists in Isabelle 2021, and I attach a <br>\ntheory which<br>\ndemonstrates them. Are there any experts who might be interested in <br>\nhelping me debug<br>\nthese?</p>\n<p>Cheers,<br>\n     Thomas.</p>",
        "id": 228944697,
        "sender_full_name": "Email Gateway",
        "timestamp": 1614947376
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThis rather old threads appears to be still open. It also looks like<br>\nattachments were missing.</p>\n<p>Makarius</p>",
        "id": 238980458,
        "sender_full_name": "Email Gateway",
        "timestamp": 1621173331
    },
    {
        "content": "<p>From: Thomas Sewell &lt;<a href=\"mailto:tals4@cam.ac.uk\">tals4@cam.ac.uk</a>&gt;<br>\nIndeed. I attach the missing example theory, given that I bothered to<br>\ngenerate it. Given that nobody else has replied, it's perhaps unlikely<br>\nat this point that anyone is interested in investigating.</p>\n<p>In the meanwhile, I've been taking another approach, and there are<br>\nworkarounds anyway, so it's unlikely that I'll be doing much <br>\ninvestigating<br>\nof possible improvements/fixes myself.</p>\n<p>Thanks for following up,<br>\n     Thomas.<br>\n<a href=\"/user_uploads/14278/4W7z2kNMBORslRu9Vh5NVo1o/Argo_Issues.thy\">Argo_Issues.thy</a></p>",
        "id": 239255655,
        "sender_full_name": "Email Gateway",
        "timestamp": 1621345393
    }
]