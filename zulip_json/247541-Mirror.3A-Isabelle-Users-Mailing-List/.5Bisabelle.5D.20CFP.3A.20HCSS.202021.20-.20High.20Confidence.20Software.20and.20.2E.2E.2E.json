[
    {
        "content": "<p>From: \"Dey, Katie\" &lt;<a href=\"mailto:katie.dey@vanderbilt.edu\">katie.dey@vanderbilt.edu</a>&gt;<br>\nCall for Presentations</p>\n<p>21st Annual High Confidence Software and Systems Conference</p>\n<p>Week of May 3, 2021</p>\n<p><a href=\"http://cps-hcss.org/\">http://cps-hcss.org/</a></p>\n<p>==============</p>\n<p>OVERVIEW</p>\n<p>The twenty-first annual High Confidence Software and Systems (HCSS) Conference will be held virtually the week of May 3, 2021. We solicit proposals to present talks at the conference.</p>\n<p>==============</p>\n<p>IMPORTANT DATES</p>\n<p>Abstracts Due: February 5, 2021</p>\n<p>Notification of Decisions: March 3, 2021</p>\n<p>HCSS Conference: Week of May 3, 2021</p>\n<p>Note on venue (virtual vs physical): One of the strengths of HCSS has been the networking opportunity among its participants. We aim to have HCSS be physically colocated again as soon as it will be safe to do so. HCSS 2021 will be held virtually, and we will make our best effort to explore all ways to make it as interactive as possible. Note that we will have provision for a small, limited presence in Annapolis for local people who would need it; please contact <a href=\"mailto:hcss@cps-vo.org\">hcss@cps-vo.org</a> to inquire about this option.</p>\n<p>==============</p>\n<p>BACKGROUND</p>\n<p>Our security, safety, privacy, and well-being increasingly depend upon the correctness, reliability, resilience, and integrity of software-intensive systems of all kinds, including cyber-physical systems (CPS). These systems must be capable of interacting correctly, safely, and securely with humans, with diverse other systems, and with the physical world even as they operate in changing, difficult-to-predict, and possibly malicious environments. New foundations in science, technology, and methodologies continue to be needed. Moreover, these methods and tools have to be transitioned into mainstream use to build and assure these systems—and to move towards more effective models for acceptance and certification.</p>\n<p>==============</p>\n<p>CONFERENCE SCOPE, GOALS, AND VISION</p>\n<p>The High Confidence Software and Systems (HCSS) Conference draws together researchers, practitioners, and management leaders from government, universities, non-profits, and industry. The conference provides a forum for dialogue centered upon the development of scientific foundations for the assured engineering of software-intensive complex computing systems and the transition of science into practice. The technical emphasis of the HCSS conference is on mathematically-based tools and techniques, scientific foundations supporting evidence creation, systems assurance, and security. The HCSS vision is one of engaging and growing a community—including researchers and skilled practitioners—that is focused around the creation of dependable systems that are capable, efficient, and responsive; that can work in dangerous or inaccessible environments; that can support large-scale, distributed coordination; that augment human capabilities; that can advance the mission of national security; and that enhance quality of life, safety, and security.</p>\n<p>==============</p>\n<p>CONFERENCE THEMES</p>\n<p>We invite submissions on any topic related to high-confidence software and systems that align with the conference scope and goals listed above. In addition, the 2021 HCSS Conference will highlight the following themes:</p>\n<p>Proof Robustness</p>\n<p>Modern software systems continuously evolve with new features, upgrades, and bug fixes. For correctness proofs about such systems to continue to hold, they must be robust to such changes. We solicit both theoretical research and experience reports in the area of proof robustness to ensure that proofs evolve with the system-under-proof. Here the term “proof” can be generalised to any evidence about the correctness of some code, where that evidence needs to be updated and maintained as the code evolves. This topic is intended to explore aspects related to proof robustness such as automated proof repair, proof explainability, and proof compositions. We are interested in both theoretical and practical aspects of proof robustness and proof engineering.</p>\n<p>Exploring Compositionality</p>\n<p>Building systems from compositional components is key to scaling assurance, but compositional systems arise in less predictable ways also. What kinds of things compose, and what kinds of composition are meaningful? Type systems provide one kind of theory of composition, but they tend to focus on composing functions end-to-end. The act of combining weird machine gadgets together to accomplish something is another form of composition. When we think more broadly, how can the behavior of compositional systems be predicted or assured? Or what kinds of functionality might emerge from unexpected compositions? And to what extent can composition theories benefit from being domain specific? Or what would compositional assurance look like in different kinds of domains?</p>\n<p>This topic is intended to explore moving towards a broad theory of compositionally. We are interested in examples of reasoning in domain-specific settings, in identifying places where unexpected functionality emerges out of complexity, in assuring rapidly reconfigurable systems with task- or mission-level adaptation. We are also interested in examples of composer operators, which may transform or adapt the things being composed in order to achieve a target functionality, performance, safety condition, or security guarantee. Finally, compositionality is often enabled by suitable interfaces; how these interfaces incorporate and/or support composable correctness arguments is also an area of interest for this theme.</p>\n<p>Continuous Development and Formal Methods</p>\n<p>Agile development and the special case of SaaS-focused DevSecOps have ushered in a revolution in how software is developed in industry. These approaches are starting to be augmented by the integration of formal methods-based software analysis that can enable high-tempo evolutionary development while adhering to high standards of security and quality. This topic explores how these modern iterative or \"pipeline\" practices can be extended with continuous modeling and reasoning, with a goal of creating bodies of evidence that co-evolve with systems to support continuous assessment to ensure that systems remain free of certain categories of defects and security vulnerabilities. Current examples of such practices, such as with organic development at firms like Amazon and Facebook, suggest a path forward. But there are many challenges, particularly when considering systems that have more complex supply chains including vendor, open source, and custom components. This topic centers around examples and case studies that can showcase the integration of tools directly into iterative processes, as well as addressing challenges of usability, scalability, and adoptability. Of particular interest are ideas that could be applied in the contexts of complex supply chains and framework-based software ecosystems. Also of interest are ideas related to the management and integration of evidence (models, proofs, analyses, argumentation, etc.) along with supporting tools that can support greater degrees of automation.</p>\n<p>Conference Presentations<br>\nThe conference program features invited speakers, panel discussions, poster presentations, and a technical track of contributed talks.</p>\n<p>Technical Track Presentations</p>\n<p>The technical track features two kinds of talks:</p>\n<p>Experience reports. These talks inform participants about how emerging HCSS and CPS techniques play out in real-world applications, focusing especially on lessons learned and insights gained. Although experience reports do not have to be highly technical, they should emphasize substantive and comprehensive reflection, building on data and direct experience. Experience reports focus on topics such as transitioning science into practice, architecture and requirements, use of advanced languages and tools, evaluation and assessment, team practice and tooling, supply-chain issues, etc.</p>\n<p>Technical talks. These talks highlight state-of-the-art techniques and methods for high-confidence software systems with an emphasis on how those techniques and methods can be used in practice. Presenters of these talks should strive to make their material accessible to the broader HCSS community even as they discuss deep technical results in areas as diverse as concurrency analysis, hybrid reasoning approaches, theorem proving, separation logic, analysis, synthesis, analytics, various modeling techniques, etc.</p>\n<p>If you are interested in offering a talk—or nominating someone else to be invited to do so—please upload an abstract of one page or less for your proposed talk or a one paragraph description of your nominee’s proposed talk by Friday, February 5, 2021 to <a href=\"https://cps-vo.org/hcss21/presentation/cfp\">https://cps-vo.org/hcss21/presentation/cfp</a>. Abstracts and nomination paragraphs should clearly indicate why the talk would be relevant to HCSS and which, if any, conference themes the talk would address. Notifications of accepted presentations will be made by Wednesday, March 3, 2021.</p>\n<p>==============</p>\n<p>Full details and submission instructions are on the website: <a href=\"https://cps-vo.org/group/hcss_conference/cfp\">https://cps-vo.org/group/hcss_conference/cfp</a>. Please send any questions about topics or submission requirements to hcss@cps-vo.org&lt;mailto:<a href=\"mailto:hcss@cps-vo.org\">hcss@cps-vo.org</a>&gt;.</p>\n<p>==============</p>\n<p>PLANNING COMMITTEE</p>\n<p>Co-Chairs:</p>\n<p>June Andronick, CSIRO's Data61 and UNSW</p>\n<p>Lee Pike, Amazon Web Services</p>\n<p>Steering Group:</p>\n<p>Perry Alexander, University of Kansas</p>\n<p>Kathleen Fisher, Tufts University</p>\n<p>John Hatcliff, Kansas State University</p>\n<p>John Launchbury, Galois, Inc.</p>\n<p>Stephen Magill, Muse Dev and Galois, Inc.</p>\n<p>Brad Martin, National Security Agency</p>\n<p>Ray Richards, DARPA</p>\n<p>Bill Scherlis, DARPA</p>\n<p>Eric Smith, Kestrel Institute</p>\n<p>Sean Weaver, National Security Agency</p>\n<p>Matt Wilding, Collins Aerospace</p>",
        "id": 223352883,
        "sender_full_name": "Email Gateway",
        "timestamp": 1611137477
    }
]