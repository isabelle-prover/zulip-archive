[
    {
        "content": "<p>From: Jan Bessai &lt;<a href=\"mailto:jan.bessai@uni-dortmund.de\">jan.bessai@uni-dortmund.de</a>&gt;<br>\n==================================================================<br>\n                  First Call for Papers</p>\n<p>Unsound:<br>\n    1st Workshop on Sources of Unsoundness in Verification<br>\n                    at SPLASH 2022<br>\n<a href=\"https://2022.splashcon.org/home/unsound-2022\">https://2022.splashcon.org/home/unsound-2022</a></p>\n<p>Software and proof verification has grown significantly in the last 15 <br>\nyears.<br>\nGrowth has come to the point where verification systems are complex and <br>\nmanually proving the soundness of those verification systems sometimes <br>\nexceeds what a single research group can understand and verify as <br>\ncorrect.</p>\n<p>Even formally defining soundness can be challenging and its definition <br>\nis varying from system to system. Specific research groups can have very <br>\nspecific notions of soundness they focus on, but those can diverge from <br>\nwhat the users expect, especially if the users come from a different <br>\nverification environment or they are approaching verification for the <br>\nfirst time.</p>\n<p>Participants to Unsound will be able to share their experience and <br>\nexploits on how different verification tools can either be broken or <br>\nexpose confusing behavior, likely to be unexpected by users.<br>\nWe think this would be greatly beneficial not only because it will help <br>\nall of us to iron out those unsoundnesses but also because it will <br>\nfacilitate understanding of the foundational differences between the <br>\nassumptions of the various research lines.</p>\n<p>The current academic environment encourages us to talk about the success <br>\ncase of our work. In this workshop we want to address and learn from <br>\nfailure cases and we want to reinforce the bedrock of our understanding.<br>\nIn practice, when we divert our focus to a specific aspect of <br>\nverification<br>\n  we may (understandably) be less precise.<br>\nFor example, a line of research focusing on aliasing control in OO may <br>\nbe less precise when considering the implication in other areas, like <br>\ntermination.<br>\nWe believe that learning from the issues of many verification projects <br>\ncan broaden the attention of researchers to topics which so far escaped <br>\ntheir focused area of research; e.g., from only type correctness to also <br>\navoiding stack overflows.</p>\n<p>We believe that this environment would be particularly beneficial for <br>\nyoung researchers that are in search of open questions in verification. <br>\nThis may provide a motivation to deep dive into the details of any <br>\nparticular tool, or to expand their individual area of expertise to get <br>\na wider and more objective and critical view of the whole area of <br>\nverification.</p>\n<p>We also wonder if in our fast expansion we accidentally glossed over <br>\nsome fundamental issue in verification, and if our mistake has now <br>\nbecome engraved into the established wisdom and it is sometimes <br>\nuncritically assumed as a valid reasoning stepping stone.</p>\n<p>We are particularly interested in sources of unsoundness that are <br>\naccidentally shared by many different unrelated research lines, and to <br>\ndevelop an understanding on why this is the case.</p>\n<p>The workshop would be its first instance and is meant to be welcoming<br>\nfor both people with strong theoretical skills, as well as people who<br>\njust like hacking things. We do not expect fully polished submissions<br>\nand we will not have formal proceedings. Students are especially welcome <br>\nto attend.</p>\n<h3>Examples for possible contributions would be:</h3>\n<ul>\n<li>\n<p>Definition of sound and unsound and how they can diverge between <br>\ntools.</p>\n</li>\n<li>\n<p>Divergences between user assumptions and actual definitions of <br>\nsoundness.</p>\n</li>\n<li>\n<p>Common sources of unsoundness and why they emerge.</p>\n</li>\n<li>\n<p>Bugs and unsoundnesses in the process of extracting a concrete program<br>\n    from a verified environment, e.g., from Coq to Haskell.</p>\n</li>\n<li>\n<p>Logic errors in the specification of a verification tool, e.g., <br>\nuniverse<br>\n   inconsistencies.</p>\n</li>\n<li>\n<p>Bugs in the implementation of proof checkers.</p>\n</li>\n<li>\n<p>Overconfident generalizations of sound subsystems to larger settings, <br>\ne.g., imperative techniques in OO settings.</p>\n</li>\n<li>\n<p>Disproving soundness statements in published papers about <br>\nverification.</p>\n</li>\n<li>\n<p>Finding statements proven in published literature that should no <br>\nlonger be trusted because they relied on a broken verification system.</p>\n</li>\n<li>\n<p>Simply proving False in a verification tool, in particular we are<br>\n   interested in practical ways to trick available tools to accept wrong<br>\n   statements.</p>\n</li>\n<li>\n<p>Breaking reasoning about programs with types by breaking the type<br>\n   system of the programming language in new and interesting ways.</p>\n</li>\n<li>\n<p>Bad interactions between axiomatic choices in libraries used in <br>\nproofs.</p>\n</li>\n<li>\n<p>Impacts of the false sense of security when the chain of trust is <br>\nbroken by<br>\n   subtle unsoundness in verification tools.</p>\n</li>\n</ul>\n<h3>Contributions:</h3>\n<p>Deadline: 2022-09-01 (23:59 AOE)<br>\nSubmissions should have 3 pages of text. Additional material <br>\n(bibliography, related work, and code examples) will not count toward <br>\nthis limit.<br>\nWe strongly encourage authors to include instructions to reproduce <br>\nresults or exploits.</p>\n<p>There will be a friendly peer review process, focusing on checking that <br>\nthe submitted material is appropriate for the workshop.</p>\n<h4>Publication</h4>\n<p>Informal proceedings will be made publicly available on the workshop web <br>\npage. However, presentation at Unsound does not count as prior <br>\npublication, and can later be published at a conference of the authors' <br>\nchoosing.</p>\n<h3>Instruction to Authors</h3>\n<h4>Submission</h4>\n<p>Authors should be aware of ACMâ€™s policies on plagiarism <br>\n(<a href=\"https://www.acm.org/publications/policies/plagiarism\">https://www.acm.org/publications/policies/plagiarism</a>).</p>\n<p>Program Committee members are allowed to submit papers.</p>\n<p>Papers must be submitted online at:<br>\n<a href=\"https://unsound2022.hotcrp.com/\">https://unsound2022.hotcrp.com/</a></p>\n<h4>Formatting:</h4>\n<p>Submitted papers should be in portable document format (PDF), formatted <br>\nusing the ACM SIGPLAN style guidelines. Authors should use the acmart <br>\nformat, with the acmsmall sub-format for ACM proceedings. For details, <br>\nsee:</p>\n<p><a href=\"http://www.sigplan.org/Resources/Author/#acmart-format\">http://www.sigplan.org/Resources/Author/#acmart-format</a></p>\n<p>It is recommended to use the review option when submitting a paper; this <br>\noption enables line numbers for easy reference in reviews.</p>",
        "id": 288134537,
        "sender_full_name": "Email Gateway",
        "timestamp": 1656662425
    },
    {
        "content": "<p>From: Jan Bessai &lt;<a href=\"mailto:jan.bessai@tu-dortmund.de\">jan.bessai@tu-dortmund.de</a>&gt;<br>\n==================================================================<br>\n                   Call for Papers</p>\n<p>Unsound:<br>\n    1st Workshop on Sources of Unsoundness in Verification<br>\n                    at SPLASH 2022<br>\n<a href=\"https://2022.splashcon.org/home/unsound-2022\">https://2022.splashcon.org/home/unsound-2022</a></p>\n<p>Software and proof verification has grown significantly in the last 15 <br>\nyears.<br>\nGrowth has come to the point where verification systems are complex and <br>\nmanually proving the soundness of those verification systems sometimes <br>\nexceeds what a single research group can understand and verify as <br>\ncorrect.</p>\n<p>Even formally defining soundness can be challenging and its definition <br>\nis varying from system to system. Specific research groups can have very <br>\nspecific notions of soundness they focus on, but those can diverge from <br>\nwhat the users expect, especially if the users come from a different <br>\nverification environment or they are approaching verification for the <br>\nfirst time.</p>\n<p>Participants to Unsound will be able to share their experience and <br>\nexploits on how different verification tools can either be broken or <br>\nexpose confusing behavior, likely to be unexpected by users.<br>\nWe think this would be greatly beneficial not only because it will help <br>\nall of us to iron out those unsoundnesses but also because it will <br>\nfacilitate understanding of the foundational differences between the <br>\nassumptions of the various research lines.</p>\n<p>The current academic environment encourages us to talk about the success <br>\ncase of our work. In this workshop we want to address and learn from <br>\nfailure cases and we want to reinforce the bedrock of our understanding.<br>\nIn practice, when we divert our focus to a specific aspect of <br>\nverification<br>\n  we may (understandably) be less precise.<br>\nFor example, a line of research focusing on aliasing control in OO may <br>\nbe less precise when considering the implication in other areas, like <br>\ntermination.<br>\nWe believe that learning from the issues of many verification projects <br>\ncan broaden the attention of researchers to topics which so far escaped <br>\ntheir focused area of research; e.g., from only type correctness to also <br>\navoiding stack overflows.</p>\n<p>We believe that this environment would be particularly beneficial for <br>\nyoung researchers that are in search of open questions in verification. <br>\nThis may provide a motivation to deep dive into the details of any <br>\nparticular tool, or to expand their individual area of expertise to get <br>\na wider and more objective and critical view of the whole area of <br>\nverification.</p>\n<p>We also wonder if in our fast expansion we accidentally glossed over <br>\nsome fundamental issue in verification, and if our mistake has now <br>\nbecome engraved into the established wisdom and it is sometimes <br>\nuncritically assumed as a valid reasoning stepping stone.</p>\n<p>We are particularly interested in sources of unsoundness that are <br>\naccidentally shared by many different unrelated research lines, and to <br>\ndevelop an understanding on why this is the case.</p>\n<p>The workshop would be its first instance and is meant to be welcoming<br>\nfor both people with strong theoretical skills, as well as people who<br>\njust like hacking things. We do not expect fully polished submissions<br>\nand we will not have formal proceedings. Students are especially welcome <br>\nto attend.</p>\n<h3>Examples for possible contributions would be:</h3>\n<ul>\n<li>\n<p>Definition of sound and unsound and how they can diverge between <br>\ntools.</p>\n</li>\n<li>\n<p>Divergences between user assumptions and actual definitions of <br>\nsoundness.</p>\n</li>\n<li>\n<p>Common sources of unsoundness and why they emerge.</p>\n</li>\n<li>\n<p>Bugs and unsoundnesses in the process of extracting a concrete program<br>\n    from a verified environment, e.g., from Coq to Haskell.</p>\n</li>\n<li>\n<p>Logic errors in the specification of a verification tool, e.g., <br>\nuniverse<br>\n   inconsistencies.</p>\n</li>\n<li>\n<p>Bugs in the implementation of proof checkers.</p>\n</li>\n<li>\n<p>Overconfident generalizations of sound subsystems to larger settings, <br>\ne.g., imperative techniques in OO settings.</p>\n</li>\n<li>\n<p>Disproving soundness statements in published papers about <br>\nverification.</p>\n</li>\n<li>\n<p>Finding statements proven in published literature that should no <br>\nlonger be trusted because they relied on a broken verification system.</p>\n</li>\n<li>\n<p>Simply proving False in a verification tool, in particular we are<br>\n   interested in practical ways to trick available tools to accept wrong<br>\n   statements.</p>\n</li>\n<li>\n<p>Breaking reasoning about programs with types by breaking the type<br>\n   system of the programming language in new and interesting ways.</p>\n</li>\n<li>\n<p>Bad interactions between axiomatic choices in libraries used in <br>\nproofs.</p>\n</li>\n<li>\n<p>Impacts of the false sense of security when the chain of trust is <br>\nbroken by<br>\n   subtle unsoundness in verification tools.</p>\n</li>\n</ul>\n<h3>Contributions:</h3>\n<p><em>Extended Deadline: 2022-09-16 (23:59 AOE)</em><br>\nSubmissions should have 3 pages of text. Additional material <br>\n(bibliography, related work, and code examples) will not count toward <br>\nthis limit.<br>\nWe strongly encourage authors to include instructions to reproduce <br>\nresults or exploits.</p>\n<p>There will be a friendly peer review process, focusing on checking that <br>\nthe submitted material is appropriate for the workshop.</p>\n<h4>Publication</h4>\n<p>Informal proceedings will be made publicly available on the workshop web <br>\npage. However, presentation at Unsound does not count as prior <br>\npublication, and can later be published at a conference of the authors' <br>\nchoosing.</p>\n<h3>Instruction to Authors</h3>\n<h4>Submission</h4>\n<p>Authors should be aware of ACMâ€™s policies on plagiarism <br>\n(<a href=\"https://www.acm.org/publications/policies/plagiarism\">https://www.acm.org/publications/policies/plagiarism</a>).</p>\n<p>Program Committee members are allowed to submit papers.</p>\n<p>Papers must be submitted online at:<br>\n<a href=\"https://unsound2022.hotcrp.com/\">https://unsound2022.hotcrp.com/</a></p>\n<h4>Formatting:</h4>\n<p>Submitted papers should be in portable document format (PDF), formatted <br>\nusing the ACM SIGPLAN style guidelines. Authors should use the acmart <br>\nformat, with the acmsmall sub-format for ACM proceedings. For details, <br>\nsee:</p>\n<p><a href=\"http://www.sigplan.org/Resources/Author/#acmart-format\">http://www.sigplan.org/Resources/Author/#acmart-format</a></p>\n<p>It is recommended to use the review option when submitting a paper; this <br>\noption enables line numbers for easy reference in reviews.</p>",
        "id": 296892591,
        "sender_full_name": "Email Gateway",
        "timestamp": 1662151426
    }
]