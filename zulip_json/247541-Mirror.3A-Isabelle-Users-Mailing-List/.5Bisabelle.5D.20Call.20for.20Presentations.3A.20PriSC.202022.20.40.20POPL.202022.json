[
    {
        "content": "<p>From: Jonathan Protzenko &lt;<a href=\"mailto:jonathan.protzenko@gmail.com\">jonathan.protzenko@gmail.com</a>&gt;<br>\nApologies if you're getting this email multiple times.</p>\n<p>All details are on the PriSC site<br>\n&lt;<a href=\"https://popl22.sigplan.org/home/prisc-2022\">https://popl22.sigplan.org/home/prisc-2022</a>&gt;.</p>\n<p>================================================<br>\nCall for Presentations: PriSC 2022 @ POPL 2022<br>\n================================================</p>\n<p>The emerging field of secure compilation aims to preserve security<br>\nproperties of programs when they have been compiled to low-level<br>\nlanguages such as assembly, where high-level abstractions don’t exist,<br>\nand unsafe, unexpected interactions with libraries, other programs,<br>\nthe operating system and even the hardware are possible. For unsafe<br>\nsource languages like C, secure compilation requires careful handling<br>\nof undefined source-language behavior (like buffer overflows and<br>\ndouble frees). Formally, secure compilation aims to protect high-level<br>\nlanguage abstractions in compiled code, even against adversarial<br>\nlow-level contexts, thus enabling sound reasoning about security in<br>\nthe source language. A complementary goal is to keep the compiled code<br>\nefficient, often leveraging new hardware security features and<br>\nadvances in compiler design. Other necessary components are<br>\nidentifying and formalizing properties that secure compilers must<br>\npossess, devising efficient security mechanisms (both software and<br>\nhardware), and developing effective verification and proof techniques.<br>\nResearch in the field thus puts together advances in compiler design,<br>\nprogramming languages, systems security, verification, and computer<br>\narchitecture.</p>\n<p>6th Workshop on Principles of Secure Compilation (PriSC 2022)<br>\n=============================================================</p>\n<p>The Workshop on Principles of Secure Compilation (PriSC) is a relatively<br>\nnew, informal 1-day workshop without any proceedings. The goal is to<br>\nbring together researchers interested in secure compilation and to<br>\nidentify interesting research directions and open challenges.  The 6th<br>\nedition of PriSC will be held on January 22, together with the ACM<br>\nSIGPLAN Symposium on Principles of Programming Languages (POPL), 2022.<br>\nWe hope to hold the workshop in person with for support for dial-in<br>\nattendees.</p>\n<p>Important Dates<br>\n===============</p>\n<ul>\n<li>Thu 28 Oct 2021: Submission Deadline</li>\n<li>Thu 18 Nov 2021: Acceptance Notification</li>\n<li>Sat 22 Jan 2022: Workshop</li>\n</ul>\n<p>Presentation Proposals and Attending the Workshop<br>\n=================================================</p>\n<p>Anyone interested in presenting at the workshop should submit an<br>\nextended abstract (up to 2 pages, details below) covering past,<br>\nongoing, or future work. Any topic that could be of interest to secure<br>\ncompilation is in scope. Secure compilation should be interpreted very<br>\nbroadly to include any work in security, programming languages,<br>\narchitecture, systems or their combination that can be leveraged to<br>\npreserve security properties of programs when they are compiled or to<br>\neliminate low-level vulnerabilities.  Presentations that provide a<br>\nuseful outside view or challenge the community are also welcome. This<br>\nincludes presentations on new attack vectors such as<br>\nmicroarchitectural side-channels, whose defenses could benefit from<br>\ncompiler techniques.</p>\n<p>Specific topics of interest include but are not limited to:</p>\n<ul>\n<li>Attacker models for secure compiler chains.</li>\n<li>\n<p>Secure compiler properties: fully abstract compilation and similar<br>\nproperties, memory safety, control-flow integrity, preservation of<br>\nsafety, information flow and other (hyper-)properties against<br>\nadversarial contexts, secure multi-language interoperability.</p>\n</li>\n<li>\n<p>Secure interaction between different programming languages: foreign<br>\nfunction interfaces, gradual types, securely combining different<br>\nmemory management strategies.</p>\n</li>\n<li>\n<p>Enforcement mechanisms and low-level security primitives: static<br>\nchecking, program verification, typed assembly languages, reference<br>\nmonitoring, program rewriting, software-based isolation/hiding<br>\ntechniques (SFI, crypto-based, randomization-based,<br>\nOS/hypervisor-based), security-oriented architectural features such as<br>\nIntel’s SGX, MPX and MPK, capability machines, side-channel defenses,<br>\nobject capabilities.</p>\n</li>\n<li>\n<p>Experimental evaluation and applications of secure compilers.</p>\n</li>\n<li>\n<p>Proof methods relevant to compilation: (bi)simulation, logical<br>\nrelations, game semantics, trace semantics, multi-language semantics,<br>\nembedded interpreters.</p>\n</li>\n<li>\n<p>Formal verification of secure compilation chains (protection<br>\nmechanisms, compilers, linkers, loaders), machine-checked proofs,<br>\ntranslation validation, property-based testing.</p>\n</li>\n</ul>\n<p>Guidelines for Submitting Extended Abstracts<br>\n============================================</p>\n<p>Extended abstracts should be submitted in PDF format and not exceed 2<br>\npages (references not including). They should be formatted in<br>\ntwo-column layout, 10pt font, and be printable on A4 and US Letter<br>\nsized paper. We recommend using the new acmart LaTeX style in sigplan<br>\nmode.</p>\n<p>Submissions are not anonymous and should provide sufficient detail to<br>\nbe assessed by the program committee. Presentation at the workshop<br>\ndoes not preclude publication elsewhere.</p>\n<p>Submission website: <a href=\"https://prisc22.hotcrp.com/\">https://prisc22.hotcrp.com/</a></p>\n<p>Program Committee<br>\n=================</p>\n<p>Owen Arden, UC Santa Cruz<br>\nArthur Azevedo de Amorim, Carnegie Mellon University<br>\nIulia Bastys, Chalmers University of Technology<br>\nRoberto Blanco, Max Planck Institute for Security and Privacy<br>\nTegan Brennan, Stevens Institute of Technology<br>\nMatteo Busi, Università di Pisa - Dipartimento di Informatica<br>\nSunjay Cauligi, University of California at San Diego<br>\nMarco Guarnieri, IMDEA Software Institute (co-chair)<br>\nArmaël Guéneau, Aarhus University<br>\nJohannes Kinder, Bundeswehr University Munich<br>\nAdrien Koutsos, INRIA Paris<br>\nElisavet Kozyri, Arctic University of Norway<br>\nScott Moore, Galois<br>\nToby Murray, University of Melbourne<br>\nAndrew C. Myers, Cornell University<br>\nDavid Pichardie, Facebook<br>\nJonathan Protzenko, Microsoft Research (co-chair)<br>\nChristine Rizkallah, UNSW Sydney<br>\nZhong Shao, Yale University<br>\nÉric Tanter, University of Chile<br>\nDanfeng Zhang, Pennsylvania State University</p>\n<p>Contact and More Information<br>\n============================</p>\n<p>You can find more information on the workshop website:<br>\n<a href=\"https://popl22.sigplan.org/home/prisc-2022\">https://popl22.sigplan.org/home/prisc-2022</a></p>\n<p>For questions please contact the workshop chairs, Jonathan Protzenko <br>\n&lt;<a href=\"mailto:jonathan.protzenko@gmail.com\">jonathan.protzenko@gmail.com</a>&gt; and Marco Guarnieri <br>\n&lt;<a href=\"mailto:marco.guarnieri@imdea.org\">marco.guarnieri@imdea.org</a>&gt;.</p>",
        "id": 253377937,
        "sender_full_name": "Email Gateway",
        "timestamp": 1631693723
    }
]