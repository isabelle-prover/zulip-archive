[
    {
        "content": "<p>From: David Kretzmer &lt;<a href=\"mailto:david.k@posteo.de\">david.k@posteo.de</a>&gt;<br>\nDear all,</p>\n<p>it seems that the special code generation setup for List.member in<br>\ntheory \"HOL-Library.Predicate_Compile_Alternative_Defs\" overwrites SML's<br>\nList structure, which means you cannot access any of the standard List<br>\nfunctions after including the generated code.</p>\n<p>Minimal code:</p>\n<div class=\"codehilite\"><pre><span></span><code>theory Scratch\n  imports Main &quot;HOL-Library.Predicate_Compile_Alternative_Defs&quot;\nbegin\n\ninductive is_member :: &quot;&#39;a list ⇒ &#39;a ⇒ bool&quot; where\n  &quot;List.member xs x ⟹ is_member xs x&quot;\n\ncode_pred is_member .\n\nexport_code is_member in SML\n\nend\n</code></pre></div>\n<p>My current fix is to assign the original List structure to another<br>\nstructure before importing the generated SML code.</p>\n<p>Best regards,<br>\nDavid Kretzmer</p>",
        "id": 216190902,
        "sender_full_name": "Email Gateway",
        "timestamp": 1605002473
    },
    {
        "content": "<p>From: David Kretzmer &lt;<a href=\"mailto:david.k@posteo.de\">david.k@posteo.de</a>&gt;<br>\nHi Florian,</p>\n<p>ah, you are right. I was a bit confused because the theory<br>\n\"HOL-Library.Predicate_Compile_Alternative_Defs\" already contains the<br>\nfollowing code_identifier:</p>\n<p>code_identifier constant member_i_i<br>\n   ⇀ (SML) \"List.member_i_i\"<br>\n  and (OCaml) \"List.member_i_i\"<br>\n  and (Haskell) \"List.member_i_i\"<br>\n  and (Scala) \"List.member_i_i\"</p>\n<p>Here, \"List.member_i_i\" for SML was the problem. But you are right, one<br>\ncan simply add another code_identifier later, which then overwrites the<br>\nprevious one.</p>\n<p>However, this feels more like a hack. Other List functions (fold etc)<br>\nare put into a \"Lista\" structure so as to not collide with the standard<br>\n\"List\" structure of SML. Why is this different for member_i_i?</p>\n<p>Anyway, thank you for this fix!</p>\n<p>Best regards,<br>\nDavid</p>",
        "id": 216265511,
        "sender_full_name": "Email Gateway",
        "timestamp": 1605038286
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi David,</p>\n<p>this seems to be a historic accident:</p>\n<p>String.thy contains a</p>\n<p>code_reserved SML string String Char List</p>\n<p>since the notoriously difficult conversions need <a href=\"http://List.map\">List.map</a>.</p>\n<p>This situation is not easily resolved.  But I will think further about it.</p>\n<p>Cheers,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/8EbidicSteenvzk32Syt3npn/signature.asc\">signature.asc</a></p>",
        "id": 216439324,
        "sender_full_name": "Email Gateway",
        "timestamp": 1605169689
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nFor the record,</p>\n<p>this issue is now addressed in rev. 1b812435a632</p>\n<p>Cheers,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/_XQ_zz6z_RnK8OsfIKccm7qR/OpenPGP_signature\">OpenPGP_signature</a></p>",
        "id": 291147783,
        "sender_full_name": "Email Gateway",
        "timestamp": 1658991854
    }
]