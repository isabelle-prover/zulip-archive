[
    {
        "content": "<p>From: Tjark Weber &lt;<a href=\"mailto:tjark.weber@it.uu.se\">tjark.weber@it.uu.se</a>&gt;<br>\nI have defined a quotient type</p>\n<p>quotient_type Q = ...</p>\n<p>This definition generates a theorem named abs_Q_def (among others).</p>\n<p>Next, I would like to make this type an instance of the class abs (from<br>\nGroups.thy). I tried to proceed as follows:</p>\n<p>instantiation Q :: abs<br>\n  begin</p>\n<p>definition abs_Q :: \"Q ⇒ Q\" where \"abs_Q ≡ ...\"</p>\n<p>instance ...</p>\n<p>end</p>\n<p>However, the definition fails with an error message</p>\n<p>Duplicate fact declaration \"Scratch.abs_Q_def\" vs.<br>\n\"Scratch.abs_Q_def\"</p>\n<p>Is there a workaround/solution?</p>\n<p>Best,<br>\nTjark</p>\n<p>När du har kontakt med oss på Uppsala universitet med e-post så innebär det att vi behandlar dina personuppgifter. För att läsa mer om hur vi gör det kan du läsa här: <a href=\"http://www.uu.se/om-uu/dataskydd-personuppgifter/\">http://www.uu.se/om-uu/dataskydd-personuppgifter/</a></p>\n<p>E-mailing Uppsala University means that we will process your personal data. For more information on how this is performed, please read here: <a href=\"http://www.uu.se/en/about-uu/data-protection-policy\">http://www.uu.se/en/about-uu/data-protection-policy</a></p>",
        "id": 357183966,
        "sender_full_name": "Email Gateway",
        "timestamp": 1683702885
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:manuel@pruvisto.org\">manuel@pruvisto.org</a>&gt;<br>\nThe problem here is really just the theorem names, not the constants <br>\nthemselves. I can think of three possible workarounds:</p>\n<ol>\n<li>give the definition theorem in the instance a different name:</li>\n</ol>\n<p>instantiation Q :: abs<br>\n     begin<br>\n     definition abs_Q :: \"Q ⇒ Q\" where<br>\n       abs_Q_def': \"abs_Q Q = Q\"<br>\n     instance ..<br>\n     end</p>\n<ol start=\"2\">\n<li>pick custom names for the abs/rep morphisms:</li>\n</ol>\n<p>quotient_type Q = \"int set\" / \"(=)\"<br>\n       morphisms foo bar<br>\n       sorry</p>\n<p>(curiously, this does not affect the \"real\" morphisms behind the scenes; <br>\nthose are still called Abs_Q/Rep_Q)</p>\n<ol start=\"3\">\n<li>do the instantiation in a different theory from the one that you are <br>\ndoing the typedef in. That way the fully-qualified names of the theorems <br>\nare different.</li>\n</ol>\n<p>Manuel</p>",
        "id": 357191523,
        "sender_full_name": "Email Gateway",
        "timestamp": 1683704879
    }
]