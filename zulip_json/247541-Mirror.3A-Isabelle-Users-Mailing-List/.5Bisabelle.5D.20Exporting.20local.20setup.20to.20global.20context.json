[
    {
        "content": "<p>From: Lukas Stevens &lt;lukas.stevens+isabelle-users@in.tum.de&gt;<br>\nHi,</p>\n<p>I want to add the constants of a type class as terms to Generic_Data <br>\ninside the context of the class. This can be achieved using local_setup <br>\n(see the code below).  Of course, the data inside the Generic_Data is <br>\nonly present in the context of the class. What I want, however, is that <br>\nthe data is also available in the global context with the associated <br>\ntype of the type class being abstracted to a schematic type that has a <br>\ntype class constraint. Apparently, this can be done using theorem <br>\nattributes (e.g. see src/HOL/Orderings.thy under the section \"Reasoning <br>\ntools setup\").</p>\n<p>Is it possible to achieve the same effect without using theorem attributes?</p>\n<p>Lukas</p>",
        "id": 205240396,
        "sender_full_name": "Email Gateway",
        "timestamp": 1595945571
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Lukas,</p>\n<p>there is the Isar command »declaration« which makes a declaration out of<br>\na snippet of Isabelle/ML code.  The snippet is provided a morphism<br>\nargument which allows to adapt formal entities according to the<br>\nparticular context situation.</p>\n<p>However I don't see why attributes should not be apt for your particular<br>\nexample.</p>\n<p>Please don't hesitate to ask if this sounds only like abstract nonsense.</p>\n<p>Cheers,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/WHw5BeIgq-cVo_P2LLNWnmUL/signature.asc\">signature.asc</a></p>",
        "id": 205762195,
        "sender_full_name": "Email Gateway",
        "timestamp": 1596434500
    },
    {
        "content": "<p>From: Lukas Stevens &lt;lukas.stevens+isabelle-users@in.tum.de&gt;<br>\nThanks, that is what I needed :)</p>",
        "id": 206004740,
        "sender_full_name": "Email Gateway",
        "timestamp": 1596621027
    }
]