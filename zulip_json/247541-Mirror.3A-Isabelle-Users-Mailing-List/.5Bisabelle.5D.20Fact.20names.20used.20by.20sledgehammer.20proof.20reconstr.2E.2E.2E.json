[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nDear list,</p>\n<p>Can I influence what name sledgehammer generated proofs use for a <br>\ntheorem that goes by different names.</p>\n<p>E.g., I have</p>\n<p>lemma my_op_assoc: \"...\"</p>\n<p>and further down the line, I have:</p>\n<p>lemmas prep_fri_simps = my_op_assoc</p>\n<p>The latter one is meant to be used for a specific task (and I expect <br>\nthat it might get expanded in the future).</p>\n<p>Now, sledgehammer's proof reconstruction seems to prefer the name <br>\nprep_fri_simps over my_op_assoc. Is there any way to tell sh to prefer <br>\nthe other name?</p>",
        "id": 424224442,
        "sender_full_name": "Email Gateway",
        "timestamp": 1709296073
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@ifi.lmu.de\">jasmin.blanchette@ifi.lmu.de</a>&gt;<br>\nHi Peter,</p>\n<p>There's no way unfortunately. I have some code that should make Sledgehammer prefer \"foo\" over \"bar(7)\", but somehow that code doesn't seem to work, as others have pointed out in the past. I need to look into this.</p>\n<p>Best,<br>\nJasmin</p>\n<p><a href=\"/user_uploads/14278/GiY5-c0bpw88lh20nPInfhoi/smime.p7s\">smime.p7s</a></p>",
        "id": 424241009,
        "sender_full_name": "Email Gateway",
        "timestamp": 1709301152
    },
    {
        "content": "<p>From: Martin Desharnais &lt;<a href=\"mailto:martin.desharnais@posteo.de\">martin.desharnais@posteo.de</a>&gt;<br>\nHi Peter,</p>\n<p>you may want to try the (undocumented?) no_atp attribute to blacklist <br>\nthe lemmas you do not want Sledgehammer to use.</p>\n<p>From the src/HOL/HOL.thy file, where no_atp is defined.</p>\n<blockquote>\n<p>Theorems blacklisted to Sledgehammer. These theorems typically <br>\nproduce clauses<br>\nthat are prolific (match too many equality or membership literals) <br>\nand relate to<br>\nseldom-used facts. Some duplicate other rules.</p>\n</blockquote>\n<p>Cheers,<br>\nMartin</p>",
        "id": 425180891,
        "sender_full_name": "Email Gateway",
        "timestamp": 1709760537
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nIf I understand correctly the noatp will blacklist the fact, under any name it<br>\ncomes with. I still want to use the fact, just with it's nice name.</p>\n<p>Peter</p>",
        "id": 425181773,
        "sender_full_name": "Email Gateway",
        "timestamp": 1709760924
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@ifi.lmu.de\">jasmin.blanchette@ifi.lmu.de</a>&gt;<br>\nPeter is right: no_atp kills the theorem, not just the name, unfortunately.</p>\n<p>Jasmin</p>\n<p><a href=\"/user_uploads/14278/l7fu-xc4AOem8AaoXlUK49og/smime.p7s\">smime.p7s</a></p>",
        "id": 425482437,
        "sender_full_name": "Email Gateway",
        "timestamp": 1709891107
    },
    {
        "content": "<p>From: Martin Desharnais &lt;<a href=\"mailto:martin.desharnais@posteo.de\">martin.desharnais@posteo.de</a>&gt;<br>\nAh, I did not realized that. That is unfortunate.</p>\n<p>An attribute to disable just the name should probably go on our <br>\nnice-to-have list. I also sometimes encounter situations similar to <br>\nPeter's one.</p>\n<p>One such example is when a named collection of lemmas is introduced. e.g.</p>\n<p>lemmas my_stuff_simps = foo_simp bar_simp baz_simp</p>\n<p>I think it would be good to have a way to ensure that Sledgehammer uses, <br>\ne.g., bar_simp instead of my_stuff_simps(2).</p>\n<p>Cheers,<br>\nMartin</p>",
        "id": 425484514,
        "sender_full_name": "Email Gateway",
        "timestamp": 1709891850
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Jasmin &amp;al.,</p>\n<blockquote>\n<p>Peter is right: no_atp kills the theorem, not just the name, unfortunately.</p>\n</blockquote>\n<p>good to learn about that, the official documentation in the source <br>\n<a href=\"https://isabelle-dev.sketis.net/source/isabelle/browse/default/src/HOL/HOL.thy$775\">https://isabelle-dev.sketis.net/source/isabelle/browse/default/src/HOL/HOL.thy$775</a> <br>\nconfirms that.</p>\n<p>In recent times, when sorting out lemma duplicates etc. I tended to use <br>\n[no_atp] with the misleading assumption that it would rule out a <br>\ndiscouraged name rather than a whole proposition.</p>\n<p>Is there any way to indicate to SH that some names are preferrable to <br>\nothers?</p>\n<p>Cheers,<br>\n    Florian</p>\n<p><a href=\"/user_uploads/14278/moBmNnRsjvoznw5HBmSwpZcb/OpenPGP_0xA707172232CFA4E9.asc\">OpenPGP_0xA707172232CFA4E9.asc</a><br>\n<a href=\"/user_uploads/14278/pWcFAg3R1IBNKtk5zABfWWBt/OpenPGP_signature.asc\">OpenPGP_signature.asc</a></p>",
        "id": 426402472,
        "sender_full_name": "Email Gateway",
        "timestamp": 1710354321
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nA not directly related remark – there are two quite creative proof <br>\nincantations relying on no_atp:</p>\n<p><a href=\"https://isabelle-dev.sketis.net/source/isabelle/browse/default/src/HOL/Algebra/Polynomial_Divisibility.thy$2085\">https://isabelle-dev.sketis.net/source/isabelle/browse/default/src/HOL/Algebra/Polynomial_Divisibility.thy$2085</a></p>\n<p><a href=\"https://isabelle-dev.sketis.net/source/isabelle/browse/default/src/HOL/Algebra/Polynomial_Divisibility.thy$2128\">https://isabelle-dev.sketis.net/source/isabelle/browse/default/src/HOL/Algebra/Polynomial_Divisibility.thy$2128</a></p>\n<p>reading</p>\n<p>proof (intro no_atp(10)[OF subsetI subsetI])<br>\n   …</p>\n<p>Cheers,<br>\n    Florian</p>\n<p><a href=\"/user_uploads/14278/NNjWsriZ3d5wlpFLw07Nm7eC/OpenPGP_0xA707172232CFA4E9.asc\">OpenPGP_0xA707172232CFA4E9.asc</a><br>\n<a href=\"/user_uploads/14278/BtN9RnF6SMSqXl7SSnoyK8qP/OpenPGP_signature.asc\">OpenPGP_signature.asc</a></p>",
        "id": 426403313,
        "sender_full_name": "Email Gateway",
        "timestamp": 1710354652
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nOh, nice... Find_theorem at it's best, from the old days when it didn't prefer<br>\nnice names?? Must be fixed, very fragile proof...</p>",
        "id": 426405209,
        "sender_full_name": "Email Gateway",
        "timestamp": 1710355347
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@ifi.lmu.de\">jasmin.blanchette@ifi.lmu.de</a>&gt;</p>\n<blockquote>\n<p>Is there any way to indicate to SH that some names are preferrable to others?</p>\n</blockquote>\n<p>Unfortunately, there is not. If somebody wants to design and implement such a scheme, I'd be happy to help them.</p>\n<p>Jasmin</p>\n<p><a href=\"/user_uploads/14278/jLAv0qTSx3YXE1XRLvjKXKDu/smime.p7s\">smime.p7s</a></p>",
        "id": 426558148,
        "sender_full_name": "Email Gateway",
        "timestamp": 1710427642
    }
]