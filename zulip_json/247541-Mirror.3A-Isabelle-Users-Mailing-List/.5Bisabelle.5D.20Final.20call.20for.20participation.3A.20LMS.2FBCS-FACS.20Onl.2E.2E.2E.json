[
    {
        "content": "<p>From: Andrei Popescu &lt;<a href=\"mailto:andrei.h.popescu@gmail.com\">andrei.h.popescu@gmail.com</a>&gt;<br>\nLMS/BCS-FACS Seminar 2025</p>\n<p>Wednesday 15 January 2025, from 19:00 (GMT)<br>\nOnline via Zoom</p>\n<p><a href=\"https://www.lms.ac.uk/events/lms-bcs-facs-seminar-2025\">https://www.lms.ac.uk/events/lms-bcs-facs-seminar-2025</a></p>\n<p>In association with the British Computer Society Formal Aspects of<br>\nComputing Science (BCS-FACS), the LMS hosts an annual online seminar on<br>\naspects of the computer scienceâ€“mathematics interface. These events are<br>\nfree to anyone who wishes to attend and have attracted high-quality<br>\nspeakers. We are happy to have this verification talk from a wonderful<br>\nspeaker just one day after World Logic Day.</p>\n<p>Speaker:</p>\n<p>Annabelle McIver (Macquarie University)</p>\n<p>Probabilistic Datatypes: automating verification for abstract probabilistic<br>\nreasoning</p>\n<p>Abstract:</p>\n<p>Datatypes - in which data is encapsulated together with methods that access<br>\nit - play an important role in the organisation of large software projects.<br>\nCorrectness of datatypes has traditionally been carried out using<br>\nsimulation relations to simplify the verification by separating concerns:<br>\nthe datatype can be verified independently from the programs that use it,<br>\nwhilst those programs themselves can be verified using the specifications<br>\nof the datatype's methods. Use of these principles enables complex programs<br>\nto be brought within reach of automated proof.</p>\n<p>When probabilistic choice is included, however, it turns out that obtaining<br>\nsimilar simplifications of the verification problem will require<br>\ndistinguishing between \"hidden\" and \"observable\" probabilistic behaviour -<br>\nif demonic choice is allowed in the surrounding program. And that is not<br>\nrequired in the non-probabilistic setting: the crucial issue is the<br>\npotential interaction of probabilistic- and demonic choice.</p>\n<p>In the main part of this talk I will use examples to explain why the<br>\ninteraction is problematic, and I will suggest how extension of existing<br>\npGCL-based automated reasoning-tools, will by taking that interaction into<br>\naccount, enable automated probabilistic abstract reasoning about \"hard to<br>\ncrack\" probabilistic programs.</p>\n<p>Registration:</p>\n<p>To attend remotely via Zoom, please complete the registration form here:</p>\n<p><a href=\"https://www.lms.ac.uk/civicrm/event/info?reset=1&amp;id=139\">https://www.lms.ac.uk/civicrm/event/info?reset=1&amp;id=139</a></p>\n<p>You will receive the link to the meeting upon registration, as well as an<br>\nautomated reminder email sent 24 hours before the event is scheduled to<br>\nstart.</p>\n<p>For all queries regarding the seminar, please contact<br>\n<a href=\"mailto:lmscomputerscience@lms.ac.uk\">lmscomputerscience@lms.ac.uk</a>.</p>",
        "id": 492611855,
        "sender_full_name": "Email Gateway",
        "timestamp": 1736385714
    }
]