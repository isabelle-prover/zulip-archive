[
    {
        "content": "<p>From: Pasquale Noce &lt;<a href=\"mailto:pasquale.noce.lavoro@gmail.com\">pasquale.noce.lavoro@gmail.com</a>&gt;<br>\nDear Isabelle users,</p>\n<p>I would have a question for you, as follows.<br>\nThe following command:</p>\n<p>value \"{0 :: nat} Un {1}\"</p>\n<p>outputs:</p>\n<p>\"{0, 1}\"<br>\n  :: \"nat set\"</p>\n<p>However, the following command:</p>\n<p>value \"{a :: nat} Un {b}\"</p>\n<p>outputs:</p>\n<p>\"set (List.insert a [b])\"<br>\n  :: \"nat set\"</p>\n<p>whereas the following command:</p>\n<p>value [simp] \"{a :: nat} Un {b}\"</p>\n<p>outputs:</p>\n<p>\"set (if b = a | a : {} then [b] else [a, b])\"<br>\n  :: \"nat set\"</p>\n<p>Upon using the value command, or the @{value} antiquotation, to compute a<br>\nfinite set such as {a :: nat} Un {b}, I wonder whether there is any way to<br>\nrather obtain an output in the same form as the one resulting from the first<br>\ncommand above, namely:</p>\n<p>\"{a, b}\"<br>\n  :: \"nat set\"</p>\n<p>Do you know whether this is possible, and how? For example, is it possible to<br>\npass an assumption such as \"a ~= b\" to the command or to the antiquotation, or<br>\nelse to tell them to allow for the possible presence of multiple occurrences<br>\nof the same element in their output?</p>\n<p>Thank you very much, best regards,<br>\nPasquale Noce</p>",
        "id": 514062504,
        "sender_full_name": "Email Gateway",
        "timestamp": 1745486329
    }
]