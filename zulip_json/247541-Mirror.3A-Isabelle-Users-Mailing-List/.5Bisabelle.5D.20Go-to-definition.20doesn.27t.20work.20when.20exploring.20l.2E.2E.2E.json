[
    {
        "content": "<p>From: Jakub Kądziołka &lt;<a href=\"mailto:kuba@kadziolka.net\">kuba@kadziolka.net</a>&gt;<br>\nDear Isabelle users,</p>\n<p>inside of jEdit, I can Ctrl+click to view the definition of anything I<br>\nuse in my theory. Sometimes, this will take me to a file inside<br>\n~~/src/HOL, and in those files, this mechanism doesn't work anymore.</p>\n<p>I suspect this has something to do with the error at the top of the<br>\ntheory file:</p>\n<p>Cannot update finished theory \"HOL.Rings\"</p>\n<p>Is this a misconfiguration on my part, or is it an unavoidable bug?</p>\n<p>Currently, I can cope by temporarily including the constant or type I'm<br>\ninterested in the theory I'm working on, but it's cumbersome and can<br>\neasily break if a name is defined in multiple places.</p>\n<p>I suppose another workaround would be to start jedit with the -l Pure<br>\noption, so that HOL gets reprocessed on startup instead of loading a<br>\nheap image. In my case, this is unworkable, as I'm actually interested<br>\nin following around the definitions in HOL-Analysis and HOL-Algebra,<br>\nwhich I include in a custom session to avoid re-checking these heavy<br>\nsessions every time I load them.</p>\n<p>I would be interested in any other workarounds or fixes.</p>\n<p>Kind regards,<br>\nJakub Kądziołka</p>",
        "id": 221478195,
        "sender_full_name": "Email Gateway",
        "timestamp": 1609718314
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nYou can also try <a href=\"https://search.isabelle.in.tum.de\">https://search.isabelle.in.tum.de</a> --- it is still somewhat<br>\nexperimental, but already quite usable.</p>\n<p>Your observation is correct that already loaded (or \"finished\") theories don't<br>\nget Prover IDE markup and thus no hyperlinks. This is neither a \"bug\" nor a<br>\n\"feature\": it is merely a limitation of the present approach (since approx.<br>\n2011). Many other high-end IDEs have similar limitation, but also add-on<br>\nmechanisms to overcome it (e.g. IntelliJ IDEA disassembles library jar modules<br>\non the spot).</p>\n<p>One happy day, the Isabelle Prover IDE will be able to do something similar,<br>\nbut it takes time to get there, and one must avoid applying too much force in<br>\n\"fixes\" that are apt to devastate a delicate eco-system.</p>\n<p>Makarius</p>",
        "id": 221518326,
        "sender_full_name": "Email Gateway",
        "timestamp": 1609763879
    }
]