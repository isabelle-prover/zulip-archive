[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nHi, I have a problem with debugging reflected code. Any help<br>\nappreciated.<br>\nHere is a minimal example:</p>\n<p>definition \"test xs ≡ hd xs\"<br>\n  code_reflect M functions test<br>\n  ML ‹M.test []›</p>\n<p>When I control-click on M.test, or the source of the raised exception<br>\nin the error output, jedit opens an empty buffer named \"generated code\"<br>\nin the current directory.</p>\n<p>How can I see the actual generated code, and see where the exception<br>\noccurs?</p>",
        "id": 271454241,
        "sender_full_name": "Email Gateway",
        "timestamp": 1644509683
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Peter,</p>\n<p>the old-school solution is to use something like</p>\n<p>declare [[code_runtime_trace]]</p>\n<p>I am not that familiar with PIPE to tell on the spot what would have to<br>\nbe done<br>\nto have point-and-click for generated code also.</p>\n<p>Cheers,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/kEzdcUsqDlEzLrFp8FFEwZzn/OpenPGP_signature\">OpenPGP_signature</a></p>",
        "id": 271674133,
        "sender_full_name": "Email Gateway",
        "timestamp": 1644649141
    }
]