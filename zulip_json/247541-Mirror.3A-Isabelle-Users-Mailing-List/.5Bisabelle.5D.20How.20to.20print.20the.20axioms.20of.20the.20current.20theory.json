[
    {
        "content": "<p>From: Miguel Pagano &lt;<a href=\"mailto:miguel.pagano@unc.edu.ar\">miguel.pagano@unc.edu.ar</a>&gt;<br>\nHi, is there some command to print only the axioms specified within an<br>\naxiomatization declaration?</p>\n<p>I know of Theory.all_axioms_of but it lists also the axioms added by<br>\ndefinitions.</p>\n<p>Having such a command (or better a document antiquotation) would permit to<br>\nshow the axioms assumed by a theory.</p>\n<p>Thanks in advance. Regards,<br>\nMiguel</p>",
        "id": 285119159,
        "sender_full_name": "Email Gateway",
        "timestamp": 1654525536
    },
    {
        "content": "<p>From: Miguel Pagano &lt;<a href=\"mailto:miguel.pagano@unc.edu.ar\">miguel.pagano@unc.edu.ar</a>&gt;<br>\nI could get the axioms by filtering out the definitions:<br>\nML\\&lt;open&gt;<br>\nlet<br>\n  val axioms = Theory.all_axioms_of @{theory}<br>\n  val defs = (map #2 o Defs.dest_constdefs []) (Theory.defs_of @{theory})<br>\n  fun not_in_defs ax = List.exists (fn ax' =&gt; ax' = (#1 ax)) defs<br>\n  val only_axioms = filter_out not_in_defs axioms<br>\nin<br>\n map (fn ax =&gt; (writeln o String.concat) [#1 ax,\": \",Syntax.string_of_term<br>\n@{context} ( #2 ax)]) only_axioms<br>\nend<br>\n\\&lt;close&gt;</p>\n<p>Regards,<br>\nM.</p>",
        "id": 287122172,
        "sender_full_name": "Email Gateway",
        "timestamp": 1655936881
    }
]