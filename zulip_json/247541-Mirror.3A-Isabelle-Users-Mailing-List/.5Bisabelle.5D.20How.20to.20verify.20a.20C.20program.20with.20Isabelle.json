[
    {
        "content": "<p>From: riyuejiuzhao &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nHello everyone</p>\n<p>I am a student who has just started to learn about program verification and<br>\nIsabelle. Recently, I have been studying how to use Isabelle to verify C<br>\nlanguage programs, but I am struggling to find easy-to-understand and<br>\nbeginner-friendly tutorials.</p>\n<p>Currently, I am facing a simple problem, but I don't know how to approach it.<br>\nFirst, I installed Isabelle/C and wrote the following code:</p>\n<p>theory CMyTest<br>\n  imports \"../main/C_Main\"<br>\nbegin</p>\n<p>C‹<br>\n  void swap(int *a,int *b){<br>\n    int c = b;<br>\n    int *b = *a;<br>\n    int *a = c;<br>\n  }<br>\n›<br>\nend</p>\n<p>Next, I want to prove that the swap function can exchange the values of a and<br>\nb, but I don't know how to write it. Can you please guide me on how to modify<br>\nthe code so that Isabelle can achieve my goal?</p>\n<p>Thank you very much for your help!</p>\n<p>Best regards,</p>\n<p>DongZe Su</p>",
        "id": 406086682,
        "sender_full_name": "Email Gateway",
        "timestamp": 1701791193
    },
    {
        "content": "<p>From: Alex Weisberger &lt;<a href=\"mailto:alex.m.weisberger@gmail.com\">alex.m.weisberger@gmail.com</a>&gt;<br>\nI'm not familiar with Isabelle/C. I have used Autocorres before, this post<br>\nhas a simple example theorem about destructive array updates in it:<br>\n<a href=\"https://concerningquality.com/quality-and-paradigm\">https://concerningquality.com/quality-and-paradigm</a>.</p>\n<p>At a high level though, what you want to do is to write a correctness<br>\nstatement in terms of the Isabelle definition that corresponds to your swap<br>\nfunction, and then prove that proposition. In Autocorres, if you have a C<br>\nfunction named \"swap\", then you can refer to it via an Isabelle definition<br>\nnamed: \"swap'.\" I'm assuming Isabelle/C has something similar, but again<br>\nnot sure.</p>\n<p>If you switch to Autocorres, you can just write a proposition using swap'.<br>\nI might try doing that.</p>",
        "id": 406145100,
        "sender_full_name": "Email Gateway",
        "timestamp": 1701804515
    },
    {
        "content": "<p>From: Yutaka Nagashima &lt;<a href=\"mailto:united.reasoning@gmail.com\">united.reasoning@gmail.com</a>&gt;<br>\nHi DongZe,</p>\n<p>Maybe this is the document you are looking for?<br>\n<a href=\"https://trustworthy.systems/projects/TS/autocorres/quickstart.pdf\">https://trustworthy.systems/projects/TS/autocorres/quickstart.pdf</a></p>\n<p>Regards,<br>\nYutaka</p>\n<p>Blog: <a href=\"https://unitedreasoning.com\">https://unitedreasoning.com</a><br>\nTwitter: <a href=\"https://twitter.com/YutakangE\">https://twitter.com/YutakangE</a><br>\nYouTube: <a href=\"https://www.youtube.com/@unitedreasoning6567\">https://www.youtube.com/@unitedreasoning6567</a><br>\nGitHub: <a href=\"https://github.com/yutakang\">https://github.com/yutakang</a></p>",
        "id": 406172724,
        "sender_full_name": "Email Gateway",
        "timestamp": 1701816768
    },
    {
        "content": "<p>From: Burkhart Wolff &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nHi,</p>\n<p>Isabelle/C is just a frontend - you will have to choose a backend.<br>\nThere are two choices: Clean or AutoCorres. For the type of program<br>\nyou are targeting, I suggest AutoCorres.</p>\n<p>If you want to use Isabelle/C/AutoCorres, you’ll best use <br>\nThe bundle  <a href=\"https://zenodo.org/records/6827097#.YwjXci0RqWY\">https://zenodo.org/records/6827097#.YwjXci0RqWY</a><br>\nIsabelle21-1 or 22. There is no more recent version of this bundle<br>\nAt present.</p>\n<p>However, there is a pure Isabelle/AutoCorres version (without the<br>\nFrontend) available for Isabelle 2023 from the AutoCorres developper page.</p>\n<p>Hope that helps,</p>\n<p>Burkhart</p>",
        "id": 406738893,
        "sender_full_name": "Email Gateway",
        "timestamp": 1702034446
    },
    {
        "content": "<p>From: Christine Rizkallah &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nHi all,</p>\n<p>What is that front end you speak of?</p>\n<p>Thanks for that, and here I was thinking the latest release version of Autocorres is for Isabelle2020.</p>\n<p>Are the later versions stable and are there any particular AutoCorres commits that could be released for later Isabelle versions?</p>\n<p>Thanks,<br>\nChristine</p>",
        "id": 407366514,
        "sender_full_name": "Email Gateway",
        "timestamp": 1702350112
    },
    {
        "content": "<p>From: Burkhart Wolff &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nHi</p>\n<p>Well, the C &lt; … &gt;  - command creates a completely new type of context (besides text-contexts, <br>\nML-contexts and term-contexts, Isabelle/C adds C-contexts to the Isabelle platform) in which<br>\nIsabelle behaves like a C-IDE with efficient parsing, high-lighting, and a very basic type-checking.<br>\nC-contexts have also their own form of antiquotations inside C-comments, which are user-programmable.</p>\n<p>See our FIDE Paper for more details…<br>\n<a href=\"https://www.lri.fr/~wolff/papers/conf/2019-fide-isabelle_c.pdf\">https://www.lri.fr/~wolff/papers/conf/2019-fide-isabelle_c.pdf</a> &lt;<a href=\"https://www.lri.fr/~wolff/papers/conf/2019-fide-isabelle_c.pdf\">https://www.lri.fr/~wolff/papers/conf/2019-fide-isabelle_c.pdf</a>&gt;<br>\n<a href=\"https://zenodo.org/records/6827097#.YwjXci0RqWY\">https://zenodo.org/records/6827097#.YwjXci0RqWY</a> &lt;<a href=\"https://zenodo.org/records/6827097#.YwjXci0RqWY\">https://zenodo.org/records/6827097#.YwjXci0RqWY</a>&gt;</p>\n<p>Isabelle/C produces internally a C11 AST from which semantic backends can encode<br>\na semantic representation in Isabelle/HOL.</p>\n<p>Hope that helps,</p>\n<p>Burkhart</p>\n<p><a href=\"/user_uploads/14278/vRFZa0ER7gToEu2udTU5H2uB/Screenshot-2023-12-12-at-04.16.52.png\">Screenshot 2023-12-12 at 04.16.52.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/vRFZa0ER7gToEu2udTU5H2uB/Screenshot-2023-12-12-at-04.16.52.png\" title=\"Screenshot 2023-12-12 at 04.16.52.png\"><img src=\"/user_uploads/14278/vRFZa0ER7gToEu2udTU5H2uB/Screenshot-2023-12-12-at-04.16.52.png\"></a></div>",
        "id": 407496309,
        "sender_full_name": "Email Gateway",
        "timestamp": 1702393193
    },
    {
        "content": "<p>From: Gerwin Klein &lt;<a href=\"mailto:gerwin.klein@proofcraft.systems\">gerwin.klein@proofcraft.systems</a>&gt;<br>\nWill leave the Isabelle/C frontend to Burkhart, but I can confirm that more recent AutoCorres releases are available on Github under <a href=\"https://github.com/seL4/l4v/releases\">https://github.com/seL4/l4v/releases</a> (including for Isabelle2023).</p>\n<p>The old website was out of date, I’ve updated it now to point there.</p>\n<p>Cheers,<br>\nGerwin</p>",
        "id": 407984638,
        "sender_full_name": "Email Gateway",
        "timestamp": 1702567577
    },
    {
        "content": "<p>From: \"\\\"DongZe Su\\\"\" &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nThanks very much for your help, I have successfully installed c-parser and<br>\nautocorres. But in the process of learning autocorres, I found that I did not<br>\nknow enough about the language used by Isabelle.<br>\nI can understand the structure of the examples in the documentation, but I<br>\ncan't quite understand the language details.<br>\nFor example:</p>\n<p>lemma n1: ‹((a::word32)≤b) = ((-1-a)≥(-1-b))›<br>\napply(subst word_le_def)+<br>\napply (subst word_n1_ge [simplified uint_minus_simple_alt])+<br>\napply arith<br>\ndone</p>\n<p>In the above example, I could guess that \"word32\" would correspond to the<br>\n\"unsigned int\" in c, and \"apply(subst word_le_def)\" would apply a theory, but<br>\nwhere these things, \"subst\" \"word_le_def\" \"uint_minus_simple_alt\" and \"arith\",<br>\nare defined? If I write the lemma myself, how am I going to find the theorems<br>\nthat I need?</p>\n<p>Where should I start learning next?</p>",
        "id": 409604726,
        "sender_full_name": "Email Gateway",
        "timestamp": 1703260678
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nI suggest that you go to the documentation panel and work through \"Programming and Proving in Isabelle/HOL”, which is the first item listed. (It can also be downloaded from the Isabelle website.)</p>\n<p>To look up individual tokens in your Isabelle theory (while in jEdit), hold down CTRL (CMD on Macs) and move your mouse over some token, then click.</p>\n<p>Larry Paulson</p>",
        "id": 410065916,
        "sender_full_name": "Email Gateway",
        "timestamp": 1703623908
    }
]