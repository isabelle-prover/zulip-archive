[
    {
        "content": "<p>From: Gebistorf  Cedric &lt;<a href=\"mailto:gecedric@student.ethz.ch\">gecedric@student.ethz.ch</a>&gt;<br>\nHello everyone,</p>\n<p>I am currently trying to automate some Isabelle/HOL theories using Isabelle/ML. These theories use the 'sublocale’-Command at some point. Unfortunately, I am stuck (and I have been that for a while now) on how to generate a sublocale in Isabelle/ML.</p>\n<p>Obviously I looked at the Isar-sublocale command and from there learned about the 'val sublocale_cmd: Expression.expression -&gt; string defines -&gt; local_theory -&gt; Proof.state' command in the interpretation.ML file. Unfortunately, I am unable to correctly generate the first two arguments so that it would work.</p>\n<p>Therefore my question: Could anyone give me a hint on how to generate a sublocale only in Isabelle/ML? Is the 'Interpretation.sublocale_cmd'  the right approach or are there other functions that one should use?</p>\n<p>More concretely, using an example from <a href=\"https://isabelle.in.tum.de/doc/locales.pdf\">https://isabelle.in.tum.de/doc/locales.pdf</a>): How would one generate the sublocale<br>\n'sublocale total_order ⊆ lattice<br>\n&lt;Proof&gt;'<br>\nusing Isabelle/ML?</p>\n<p>Cheers and thanks for your help,<br>\nCedric</p>",
        "id": 288587047,
        "sender_full_name": "Email Gateway",
        "timestamp": 1657052358
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Cedric,</p>\n<p>a few hints what might help:</p>\n<p>a) Note that the //⊆// is short for</p>\n<p>context sub<br>\nbegin</p>\n<p>sublocale sup &lt;proof&gt;</p>\n<p>end</p>\n<p>b) The corresponding Isabelle/ML structure is roughly</p>\n<p>setup ‹<br>\n  Named_Target.init [] \\&lt;^locale&gt;‹sub›<br>\n  #&gt; Interpretation.sublocale ([(\\&lt;^locale&gt;‹sup›, ((\"\", false),<br>\n(Expression.Positional [], [])))], []) []<br>\n  #&gt; Proof.global_skip_proof true<br>\n  #&gt; Local_Theory.exit_global<br>\n›</p>\n<p>I am at a loss to explain what has to be inserted in the<br>\n»Proof.global_skip_proof true hole«, but maybe the documentation or the<br>\nML source code is helpful.</p>\n<p>c) Aside: The _cmd-Interfaces are extern in the sense that they are<br>\nparametrized with fragments from raw Isar source (roughly speaking).<br>\nAlways use the proper interfaces when programming Isabelle/ML directly.</p>\n<p>d) It is often helpful to present the bigger context where a problem is<br>\nencountered – then a change of perspective can often eliminate the<br>\nsource of the problem entirely.</p>\n<p>Hope this helps,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/XQsAAMKi5hPlI6BtyoOc-aPV/OpenPGP_signature\">OpenPGP_signature</a></p>",
        "id": 288658433,
        "sender_full_name": "Email Gateway",
        "timestamp": 1657108523
    }
]