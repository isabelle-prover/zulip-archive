[
    {
        "content": "<p>From: Alex Meyer &lt;<a href=\"mailto:alex153@outlook.lv\">alex153@outlook.lv</a>&gt;<br>\nI have theory with 2 definitions and some 20 LOC including the usual boilerplate.</p>\n<p>I have completed mmt_import with Isabelle_MMT-20190611.exe from <a href=\"https://sketis.net/2019/mmt-as-component-for-isabelle2019\">https://sketis.net/2019/mmt-as-component-for-isabelle2019</a> . I used command:</p>\n<p>tomr@DESKTOP /cygdrive/c/Homes/Isabelle_MMT-20190611/Isabelle_MMT-20190611<br>\n$ isabelle mmt_import -D /cygdrive/c/Workspace-Algo<br>\nAdding archive C:\\Homes\\Isabelle_MMT-20190611\\Isabelle_MMT-20190611\\isabelle_test<br>\nLoading 3 sessions ...<br>\nProcessing theory Pure ...<br>\nStarting session Pure ...<br>\nLoading 112 theories ...<br>\nProcessing theory HOL.Code_Generator ...<br>\n...<br>\n...</p>\n<p>/cygdrive/c/Workspace-Algo is my theory session directory (with ROOT in it) and C:\\Homes\\Isabelle_MMT-20190611\\Isabelle_MMT-20190611\\isabelle_test is some test directory inside Isabelle-MMT-2019 combined installation, I don't know why mmt_import requires/works on it. For the sake of security I copied all the content from my theory session directory /cygdrive/c/Workspace-Algo to this C:\\Homes\\Isabelle_MMT-20190611\\Isabelle_MMT-20190611\\isabelle_test as well.</p>\n<p>All in all - mmt_import exported more than 100 theories and it took 45 minutes on Intel7/16GB RAM machine with almost total consumption of all awailable RAM.</p>\n<p>So, the questions:</p>\n<p>*   Is there a way to indicate that I would like to export only 1 theory and not the remaining theories which somehow (indirectly) can be required for export?<br>\n  *   Is there a way to ask not to export the base theories once more: e.g. indicate that base theories have already been exported and to provide path to exports and then the proper export of the propert single theory could be fast?<br>\n  *   Why RAM consumption, consumption of resources ir so large?<br>\n  *   Is it hard to upgrade mmt_import 2019 for Isabelle2021. What it takes? Maybe I can do it myself, but some quick guidance could be good?<br>\n  *   I guess - if I would like to improve mmt_import or dig deeper, then I should be very good at Isabelle/Scala implementation. I checked System manual and there is Chapter 5 about Isabelle/Scala systems programming - as I understand, that is all for Isabelle/Scala?<br>\n  *   As I understand - if I would like to form my own Isabelle textual commans and send programmatically them to Isabelle and recieve response etc. then I should use Isabelle/Scala interface, am I right on this point? There is nothing more appropriate? (We have already discussed this about theory export in JSON/XML and as I understood - then every export tool, every interaction tools boils down to Isabelle/Scala - so - it should be worth to lear it).</p>\n<p>And lastly - just quick question: I installed mmt-20190611.tar.gz (un-gzipped, un-tarred and installed) as components for Isabelle2021 and I tried to run - I got errors about isabelle_scala_tools:</p>\n<p>tomr@DESKTOP /cygdrive/c/Workspace-Algo<br>\n$ isabelle components -u /cygdrive/c/Homes/IsabelleMMT/mmt-20190611<br>\nAdded component \"/cygdrive/c/Homes/IsabelleMMT/mmt-20190611\"</p>\n<p>tomr@DESKTOP /cygdrive/c/Workspace-Algo<br>\n$ isabelle mmt_import<br>\n/cygdrive/c/Homes/IsabelleMMT/mmt-20190611/MMT-17.0.0/src/mmt-isabelle/etc/settings: line 11: isabelle_scala_tools: command not found<br>\nReturn code 127 from bash script: \"/cygdrive/c/Homes/IsabelleMMT/mmt-20190611/MMT-17.0.0/src/mmt-isabelle/etc/settings\"</p>\n<p>Well, I know that this is bad thing to do - documentation explicitly required total compatibility of releases between Isabelle-MMT and Isabelle and in this case I am violating it by 2 major version, but still - what could it take to upgrade mmt_import for Isabelle2021? Maybe I can somehow installa isabelle_scala_tools and all the remaining will work anyway?</p>\n<p>Well - and just one last question. I am trying to do externa manipulation (parsing, machine learning and generating) Isabelle code and see, how hard is this. Maybe someone have experience with Coq and Lean with the similar tasks - parsing, machine learning and generating? Maybe it is easier and why easier? Isabelle's large and ever growing AFP is the strongest case why I am so fond of Isabelle, but still...</p>\n<p>Thanks in advance!</p>\n<p>Alex</p>",
        "id": 232131796,
        "sender_full_name": "Email Gateway",
        "timestamp": 1616894855
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 28/03/2021 03:26, Alex Meyer wrote:</p>\n<blockquote>\n<p>I have completed mmt_import with Isabelle_MMT-20190611.exe from<br>\n<a href=\"https://sketis.net/2019/mmt-as-component-for-isabelle2019\">https://sketis.net/2019/mmt-as-component-for-isabelle2019</a></p>\n</blockquote>\n<p>That is a rather old blog entry on an ongoing project; it was later released<br>\nwith Isabelle2020 and published in<br>\n<a href=\"https://drops.dagstuhl.de/opus/volltexte/2020/13065\">https://drops.dagstuhl.de/opus/volltexte/2020/13065</a></p>\n<p>For Isabelle2021, I have updated the mmt-isabelle sources here:<br>\n<a href=\"https://github.com/UniFormal/MMT/commit/43fec2b39fba\">https://github.com/UniFormal/MMT/commit/43fec2b39fba</a> --- that is not a proper<br>\nrelease of MMT, but that project is somewhat experimental anyway.</p>\n<p>If you do want to continue with MMT, you should:</p>\n<p>* use its Scala libraries to access the XML/OMDoc content, not your own<br>\nhomegrown tools for this complex format;</p>\n<p>* get acquainted with how MMT is built and run: it should be fine on<br>\nWindows, because its main developer Florian Rabe is also on that platform;</p>\n<p>* get in touch with the MMT community and ask further questions over there.</p>\n<p>MMT might even help you to get both Isabelle and Coq on board of your project,<br>\nbut it is not \"for free\": it requires to work with the structures of MMT<br>\nsystematically, notable the LF (Logical Framework) meta-theory.</p>\n<p>An alternative is to harvest HTML presentations of Isabelle, Coq etc. Since AI<br>\nis inaccurate anyway, that could make sense: you get sources that are<br>\nannotation with the role of identifiers etc. (colors, maybe also links).</p>\n<p>In Isabelle2021, the standard HTML output merely produces colors, but you can<br>\nuse a little bit of Isabelle/Scala to access the Markup.ENTITY elements as<br>\nwell. Here is the entry point for \"isabelle build -P:\"<br>\n<a href=\"https://isabelle.sketis.net/repos/isabelle-release/file/Isabelle2021/src/Pure/Tools/build.scala#l494\">https://isabelle.sketis.net/repos/isabelle-release/file/Isabelle2021/src/Pure/Tools/build.scala#l494</a><br>\n(the build tool is described in the \"system\" manual).</p>\n<p>By using \"isabelle scala_project\" with Gradle and IntelliJ IDEA as described<br>\nin the same text, you can easily explore the specification written as Scala<br>\nsource text. (MMT is more complex and irregular, but I still managed rather<br>\nquickly to understand its main points with the help of IntelliJ IDEA.)</p>\n<blockquote>\n<p>All in all - mmt_import exported more than 100 theories and it took 45 minutes<br>\non Intel7/16GB RAM machine with almost total consumption of all awailable RAM.</p>\n</blockquote>\n<p>16GB is not much for full-scale Isabelle applications. Isabelle/MMT from 2019<br>\nrequires more than that, although in 2020 I improved that a lot.</p>\n<p>In 2021, I've built PIDE markup into regular \"isabelle build\" + \"isabelle<br>\nexport\", so the bulky \"isabelle dump\" (or Headless session in Isabelle/MMT) is<br>\nno longer required. Isabelle/MMT will eventually be updated in that respect,<br>\nbut I can't say when.</p>\n<blockquote>\n<p>* Is there a way to indicate that I would like to export only 1 theory and<br>\n    not the remaining theories which somehow (indirectly) can be required for<br>\n    export?<br>\n  * Is there a way to ask not to export the base theories once more: e.g.<br>\n    indicate that base theories have already been exported and to provide path<br>\n    to exports and then the proper export of the propert single theory could<br>\n    be fast?<br>\n  * Why RAM consumption, consumption of resources ir so large?<br>\n  * Is it hard to upgrade mmt_import 2019 for Isabelle2021. What it takes?<br>\n    Maybe I can do it myself, but some quick guidance could be good?<br>\n  * I guess - if I would like to improve mmt_import or dig deeper, then I<br>\n    should be very good at Isabelle/Scala implementation.</p>\n</blockquote>\n<p>These questions are only of historic interest. The proper answer is to ask<br>\ndifferent questions: How use Isabelle2021 with Isabelle/Scala properly?</p>\n<p>The \"system\" manual refers to \"isabelle scala_project\" + Gradle + IntellJ<br>\nIDEA: you should purchase 16 GB more RAM and use that.</p>\n<blockquote>\n<p>* As I understand - if I would like to form my own Isabelle textual commans<br>\n    and send programmatically them to Isabelle and recieve response etc. then<br>\n    I should use Isabelle/Scala interface, am I right on this point? There is<br>\n    nothing more appropriate? (We have already discussed this about theory<br>\n    export in JSON/XML and as I understood - then every export tool, every<br>\n    interaction tools boils down to Isabelle/Scala - so - it should be worth<br>\n    to lear it).</p>\n</blockquote>\n<p>Isabelle commands are defined in Isabelle/ML. Regular Isabelle/jEdit is the<br>\nmain IDE for that: just look a bit through the \"implementation\" manual or<br>\nbetter the sources: $ISABELLE_HOME/src/Doc/Implementation/Integration.thy it<br>\nhas a reference e.g. to<br>\n$ISABELLE_HOME/src/HOL/Examples/Commands.thy</p>\n<blockquote>\n<p>Well, I know that this is bad thing to do - documentation explicitly required<br>\ntotal compatibility of releases between Isabelle-MMT and Isabelle and in this<br>\ncase I am violating it by 2 major version, but still - what could it take to<br>\nupgrade mmt_import for Isabelle2021?</p>\n</blockquote>\n<p>Doing bad things is no good. The proper way is to use the already updated<br>\nIsabelle/MMT (see above), if you want to use it at all.</p>\n<blockquote>\n<p>Well - and just one last question. I am trying to do externa manipulation<br>\n(parsing, machine learning and generating) Isabelle code and see, how hard is<br>\nthis. Maybe someone have experience with Coq and Lean with the similar tasks -<br>\nparsing, machine learning and generating? Maybe it is easier and why easier?<br>\nIsabelle's large and ever growing AFP is the strongest case why I am so fond<br>\nof Isabelle, but still...</p>\n</blockquote>\n<p>Isbelle/AFP is indeed the greatest success of the prover community as a whole.<br>\nNo other proof assistant has gone as far yet, concerning both the technology<br>\nand the content.</p>\n<p>If you want to harvest just that, I would recommend a regular \"isabelle build<br>\n-d AFP/thys -a\" with some Isabelle/Scala tool to process the PIDE markup<br>\n(accessing not the raw YXML data, but using typed functions).</p>\n<p>To work with all of AFP, you should have 32-64 GB RAM, and as many CPU cores<br>\nas you can get.</p>\n<p>Makarius</p>",
        "id": 232167546,
        "sender_full_name": "Email Gateway",
        "timestamp": 1616938556
    }
]