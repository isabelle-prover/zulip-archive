[
    {
        "content": "<p>From: Dominique Unruh &lt;<a href=\"mailto:unruh@ut.ee\">unruh@ut.ee</a>&gt;<br>\nHi,</p>\n<p>when importing both HOL-Library.Numeral_Type (from Isabelle) and <br>\nContainers.Set_Impl (from AFP), then the code generation for computing <br>\nthe cardinality of \"UNIV::unit set\" (which should be 1) produces <br>\nnonterminating code.</p>\n<p>As shown in the attached theory, it defines a trivially diverging <br>\nrecursive function \"fun card A_ = card A_\".</p>\n<p>If only one of those two theories is included, the generated code <br>\nreturns 1 immediately.</p>\n<p>I don't understand where the recursive function comes from.</p>\n<p>(I don't need a hotfix because this problem occurred only during <br>\nexperimentation. But it might be good to understand where this comes <br>\nfrom and whether it relates to some deeper problem.)</p>\n<p>Best wishes,<br>\nDominique.<br>\n<a href=\"/user_uploads/14278/DKUc_r9-cgxPR6suWQne7VsI/Test.thy\">Test.thy</a></p>",
        "id": 225297212,
        "sender_full_name": "Email Gateway",
        "timestamp": 1612531278
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:mail@andreas-lochbihler.de\">mail@andreas-lochbihler.de</a>&gt;<br>\nHi Dominique,</p>\n<p>Sorry for taking so long to respond.</p>\n<p>HOL-Library.Numeral_Type imports HOL-Library.Cardinality, which installs some code setup <br>\nfor card that is incompatible with the code setup from Containers.Set_Impl. Basically, <br>\nHOL-Library.Cardinality adds a code_unfold equation, which Containers.Set_Impl replaces <br>\nwith another code_unfold equation. However, when both Numeral_Type and Set_Impl are <br>\nmerged, the declarations from both Cardinality and Set_Impl become active again so that <br>\nthe code generator now has two code_unfold equations that ultimately lead to this <br>\nsituation. This is a known limitation of theory merges that is not easy to remedy. In <br>\n<a href=\"https://isabelle.in.tum.de/repos/isabelle/rev/93ba8e3fdcdf\">https://isabelle.in.tum.de/repos/isabelle/rev/93ba8e3fdcdf</a>, I've now split off the code <br>\ngenerator setup from HOL-Library.Cardinality into a separate theory <br>\nHOL-Library.Code_Cardinality. This should avoid the problem with importing Numeral_Type <br>\nand Set_Impl.</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 244386232,
        "sender_full_name": "Email Gateway",
        "timestamp": 1625037954
    }
]