[
    {
        "content": "<p>From: Alexander Pach &lt;<a href=\"mailto:alexander.pach@tum.de\">alexander.pach@tum.de</a>&gt;<br>\nDear Users,</p>\n<p>during writing, I stumbled upon the following unexpected incomplete <br>\nabbreviation foldings:</p>\n<p>lemma test: \"monotone_on A P Q f\" sorry<br>\nthm test[of \"UNIV\" \"(≤)\" \"(≤)\"] (*Expected ‹mono ?f›, is ‹mono_on UNIV <br>\n?f› *)<br>\nthm test[of _ \"(≤)\" \"(≥)\"] (*Expected ‹antimono_on ?A ?f›, is <br>\n‹monotone_on ?A (≤) (λx y. y ≤ x) ?f› *)<br>\nthm test[of UNIV \"(≤)\" \"(≥)\"] (*Expected ‹antimono ?f›, is ‹monotone_on <br>\n?A (≤) (λx y. y ≤ x) ?f›*)<br>\nthm test[of UNIV \"(&lt;)\" \"(&lt;)\"] (*Expected ‹strict_mono ?f›, is <br>\n‹strict_mono_on UNIV ?f›*)<br>\nthm test[of _ \"(&lt;)\" \"(&gt;)\"] (*Expected ‹strict_antimono_on ?A ?f›, is <br>\n‹monotone_on ?A (&lt;) (λx y. y &lt; x) ?f›*)</p>\n<p>all other foldings were as expected.<br>\nMoreover,</p>\n<p>term ‹antimono_on›  (<em>is ‹\"λA. monotone_on A (≤) (λx y. y ≤ x)\"›</em>)<br>\nterm ‹strict_antimono_on› (*is ‹\"λA. monotone_on A (&lt;) (λx y. y &lt; x)\"› *)</p>\n<p>get expanded, while mono, mono_on, monotone, antimono, antimono_on, <br>\nstrict_mono, strict_mono_on don't.</p>\n<p>At last, i noticed that strict_antimono is not defined, is this intentional?</p>\n<p>This behaviour appears in Isabelle2024 as well as isabelle-dev (tested <br>\nwith bac9b067c768).</p>\n<p>Kind regards,<br>\nAlexander</p>\n<p><a href=\"/user_uploads/14278/TSDJQ847GCoAGvO9TESdOtuU/smime.p7s\">smime.p7s</a></p>",
        "id": 491189394,
        "sender_full_name": "Email Gateway",
        "timestamp": 1735490172
    }
]