[
    {
        "content": "<p>From: David Aspinall &lt;<a href=\"mailto:David.Aspinall@ed.ac.uk\">David.Aspinall@ed.ac.uk</a>&gt;</p>\n<h1>A Gentle Invitation into Theorem Proving towards Formal Hardware</h1>\n<p>Verification #</p>\n<p>What is the nature of human reasoning and problem solving? How can<br>\nmachines exploit the known skills of problems solving to solve new<br>\nproblems automatically? Is it possible to work out general patterns of<br>\ndiscovery and reasoning, such that machines can develop new methods and<br>\nsystems? We try to answer these problems and shrink the gap between<br>\nmachine learning and human wisdom.</p>\n<p>Mathematical discovery and reasoning is considered the most creative<br>\nactivity of human wisdom. Mathematicians have been investigating the<br>\nnature of human reasoning and problem solving since classical Greece.<br>\nEven if the development of interactive theorem provers provides rigorous<br>\ntools for people to formalise mathematics and to verify hardware and<br>\nsoftware designs, there is still a big gap between human reasoning and<br>\nmechanical theorem proving: precious human intelligence is wasted on<br>\nproving tedious and trivial lemmas, which are indispensable for machines<br>\nto check the correctness and the integrity of a proof, but are quite<br>\nobvious for well-educated mathematicians or computer scientists. Even<br>\nworse, it is hard to recover the original intentions by reading these<br>\nmechanical proofs.</p>\n<p>During the first year of this project, we will focus on developing an<br>\nautomated theorem prover towards human reasoning. Except the automation<br>\nof proof strategies and skills, the main planned innovation is: deriving<br>\ntheories automatically. We want to investigate and implement such a<br>\nmechanism: to generate conjectures from cases, concepts, proofs, and<br>\nknown theorems, then produce automatically human readable and machine<br>\ncheckable proofs. We also plan to design and implement the mechanism to<br>\ndiscover and exploit morphisms between algebraic structures, so as to<br>\nsimplify proofs by making use of abstract domains. It doesn't mean that<br>\nwe don't need human interference; on the contrary, we want to make use<br>\nof human experience whenever possible --- machines will learn from<br>\nhumans when, for example, they are stuck, the computation diverges, the<br>\nsolution space is too big, and so on. We believe that human skills of<br>\nproblem solving will enable machines to think like us and to make<br>\nplausible reasoning at the end.</p>\n<p>We will soon open the following positions for this project. There will<br>\nbe a competitive salary and benefits package in line with top tier<br>\nindustrial R&amp;D positions in UK.</p>\n<p>Work Location: Edinburgh UK</p>\n<ol>\n<li>\n<p>Two Full-Time Research Associates on Theoretical Computer Science. RA<br>\nis supposed to hold a PhD degree. RA is required to have strong computer<br>\nscience background and has to be familiar with all branches of computer<br>\nscience in general. Research experience of formal verification, theorem<br>\nprovers, machine learning, programming languages, or compilers is<br>\nnecessary. RA will be responsible for the design and implementation of<br>\nthe proposed automated theorem prover, and its applications in automated<br>\nformal verification of hardware and software designs.</p>\n</li>\n<li>\n<p>A Full-Time Senior Software Engineer. SE is supposed to hold a BSc or<br>\nMSc degree. SE is required to be familiar with the imperative<br>\nprogramming languages like Python, the functional programming languages<br>\nlike Haskell, and the web programming languages like JavaScript. The<br>\ndevelopment experience of programming languages is preferred. SE is<br>\nresponsible for the implementation, testing, and release of the proposed<br>\nautomated theorem prover.</p>\n</li>\n</ol>\n<p>Also, we are recruiting interns on mathematics or computer science. We<br>\nhope you can help create benchmarks or libraries, and improve the design<br>\nand implementation of the tool. You are required to have a strong<br>\nmathematical background. Basic programming skills of Haskell and Python<br>\nare necessary. Knowledge of recursive functions, Lambda calculus, formal<br>\nlogics, type theory, or category theory is preferred.</p>\n<p>You are very welcome to join us on this ambitious exploration journey.</p>\n<p>Informal enquiries on details of the project and these positions can be<br>\nmade to:</p>\n<p>Dr. Wei Chen<br>\n<a href=\"mailto:weichen8@huawei.com\">weichen8@huawei.com</a><br>\nResearch Scientist on Theoretical Computer Science<br>\nHisilicon Advanced Research Department<br>\nHuawei Edinburgh Research Centre<br>\nThe University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336. Is e buidheann carthannais a th’ ann an Oilthigh Dhùn Èideann, clàraichte an Alba, àireamh clàraidh SC005336.</p>",
        "id": 243243288,
        "sender_full_name": "Email Gateway",
        "timestamp": 1624099379
    }
]