[
    {
        "content": "<p>From: Sarah Tilscher &lt;<a href=\"mailto:sarah.tilscher@tum.de\">sarah.tilscher@tum.de</a>&gt;<br>\nDear isabelle developers,</p>\n<p>When defining a fixpoint algorithm using the function package and its <br>\ndomintros option, I get an Interrupt_Breakdown exception already after <br>\nproving the pattern completeness. I extracted the following small (but <br>\nnot anymore meaningful) example:</p>\n<p>theory Scratch<br>\n   imports Main<br>\nbegin</p>\n<p>definition lookup_default :: \"('x, nat) map ⇒ 'x ⇒ nat\" where<br>\n   \"lookup_default σ x ≡ case σ x of Some v ⇒ v | None ⇒ 0\"</p>\n<p>function (domintros)<br>\n   iterate :: \"'x ⇒ ('x, nat) map ⇒ nat\"<br>\n      where<br>\n   \"iterate x σ = (<br>\n     let d_new = lookup_default σ x in<br>\n     if lookup_default σ x = d_new then<br>\n       iterate x (σ(x ↦ lookup_default σ x))<br>\n     else 0)\"<br>\n    apply auto<br>\n   done (* Interrupt_Breakdown exception thrown *)</p>\n<p>end</p>\n<p>Does someone know why/where this exception is thrown? Any idea how to <br>\nfix or circumvent this?</p>\n<p>Thanks,<br>\nSarah</p>",
        "id": 483703143,
        "sender_full_name": "Email Gateway",
        "timestamp": 1732197484
    },
    {
        "content": "<p>From: Kevin Kappelmann &lt;<a href=\"mailto:kevin.kappelmann@tum.de\">kevin.kappelmann@tum.de</a>&gt;<br>\nI have no idea, but here is a shorter example:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">function</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">domintros</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'a ⇒ 'a\"</span><span class=\"w\"> </span><span class=\"kp\">where</span>\n<span class=\"w\">   </span><span class=\"s\">\"f x = (let x' = x in if x = x' then f x else x)\"</span>\n<span class=\"w\">    </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"n\">auto</span>\n<span class=\"w\">    </span><span class=\"k\">done</span>\n</code></pre></div>\n<p>On 21.11.24 14:50, Sarah Tilscher wrote:</p>\n<blockquote>\n<p>Dear isabelle developers,</p>\n<p>When defining a fixpoint algorithm using the function package and its <br>\ndomintros option, I get an Interrupt_Breakdown exception already after <br>\nproving the pattern completeness. I extracted the following small (but <br>\nnot anymore meaningful) example:</p>\n<p>theory Scratch<br>\n   imports Main<br>\nbegin</p>\n<p>definition lookup_default :: \"('x, nat) map ⇒ 'x ⇒ nat\" where<br>\n   \"lookup_default σ x ≡ case σ x of Some v ⇒ v | None ⇒ 0\"</p>\n<p>function (domintros)<br>\n   iterate :: \"'x ⇒ ('x, nat) map ⇒ nat\"<br>\n      where<br>\n   \"iterate x σ = (<br>\n     let d_new = lookup_default σ x in<br>\n     if lookup_default σ x = d_new then<br>\n       iterate x (σ(x ↦ lookup_default σ x))<br>\n     else 0)\"<br>\n    apply auto<br>\n   done (* Interrupt_Breakdown exception thrown *)</p>\n<p>end</p>\n<p>Does someone know why/where this exception is thrown? Any idea how to <br>\nfix or circumvent this?</p>\n<p>Thanks,<br>\nSarah</p>\n</blockquote>",
        "id": 483711791,
        "sender_full_name": "Email Gateway",
        "timestamp": 1732199578
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nHi Sarah,</p>\n<p>It it looks like something in the function definition command does not terminate <br>\n(and is forcefully terminated by the system, I suspect). Of course that <br>\nshouldn't happen. This particular example can be fixed by expanding the \"let\". <br>\n(you can always recover the original version later on as a lemma).</p>\n<p>Tobias</p>\n<p>On 21/11/2024 14:50, Sarah Tilscher wrote:</p>\n<blockquote>\n<p>Dear isabelle developers,</p>\n<p>When defining a fixpoint algorithm using the function package and its domintros <br>\noption, I get an Interrupt_Breakdown exception already after proving the pattern <br>\ncompleteness. I extracted the following small (but not anymore meaningful) example:</p>\n<p>theory Scratch<br>\n   imports Main<br>\nbegin</p>\n<p>definition lookup_default :: \"('x, nat) map ⇒ 'x ⇒ nat\" where<br>\n   \"lookup_default σ x ≡ case σ x of Some v ⇒ v | None ⇒ 0\"</p>\n<p>function (domintros)<br>\n   iterate :: \"'x ⇒ ('x, nat) map ⇒ nat\"<br>\n      where<br>\n   \"iterate x σ = (<br>\n     let d_new = lookup_default σ x in<br>\n     if lookup_default σ x = d_new then<br>\n       iterate x (σ(x ↦ lookup_default σ x))<br>\n     else 0)\"<br>\n    apply auto<br>\n   done (* Interrupt_Breakdown exception thrown *)</p>\n<p>end</p>\n<p>Does someone know why/where this exception is thrown? Any idea how to fix or <br>\ncircumvent this?</p>\n<p>Thanks,<br>\nSarah</p>\n</blockquote>\n<p><a href=\"/user_uploads/14278/HjmI1v6r7hwcBpY-T2r6-HAG/smime.p7s\">smime.p7s</a></p>",
        "id": 483712003,
        "sender_full_name": "Email Gateway",
        "timestamp": 1732199637
    },
    {
        "content": "<p>From: <a href=\"mailto:mohammad.abdulaziz8@gmail.com\">mohammad.abdulaziz8@gmail.com</a><br>\nHaving an equation and its flipped version causes the simplifier to not <br>\nterminate. The following works:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">function</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">domintros</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'a ⇒ 'a\"</span><span class=\"w\"> </span><span class=\"kp\">where</span>\n<span class=\"w\">    </span><span class=\"s\">\"f x = (let x' = x in if x' = x then f x else x)\"</span>\n<span class=\"w\">   </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">pat_completeness</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">auto</span>\n</code></pre></div>\n<p>Mohammad</p>\n<p>On 21/11/2024 14:27, Kevin Kappelmann wrote:</p>\n<blockquote>\n<p>I have no idea, but here is a shorter example:</p>\n<p><code>\nfunction (domintros) f :: \"'a ⇒ 'a\" where\n   \"f x = (let x' = x in if x = x' then f x else x)\"\n    apply auto\n    done\n</code></p>\n<p>On 21.11.24 14:50, Sarah Tilscher wrote:</p>\n<blockquote>\n<p>Dear isabelle developers,</p>\n<p>When defining a fixpoint algorithm using the function package and its <br>\ndomintros option, I get an Interrupt_Breakdown exception already after <br>\nproving the pattern completeness. I extracted the following small (but <br>\nnot anymore meaningful) example:</p>\n<p>theory Scratch<br>\n   imports Main<br>\nbegin</p>\n<p>definition lookup_default :: \"('x, nat) map ⇒ 'x ⇒ nat\" where<br>\n   \"lookup_default σ x ≡ case σ x of Some v ⇒ v | None ⇒ 0\"</p>\n<p>function (domintros)<br>\n   iterate :: \"'x ⇒ ('x, nat) map ⇒ nat\"<br>\n      where<br>\n   \"iterate x σ = (<br>\n     let d_new = lookup_default σ x in<br>\n     if lookup_default σ x = d_new then<br>\n       iterate x (σ(x ↦ lookup_default σ x))<br>\n     else 0)\"<br>\n    apply auto<br>\n   done (* Interrupt_Breakdown exception thrown *)</p>\n<p>end</p>\n<p>Does someone know why/where this exception is thrown? Any idea how to <br>\nfix or circumvent this?</p>\n<p>Thanks,<br>\nSarah</p>\n</blockquote>\n</blockquote>",
        "id": 483714653,
        "sender_full_name": "Email Gateway",
        "timestamp": 1732200344
    },
    {
        "content": "<p>From: Sarah Tilscher &lt;<a href=\"mailto:sarah.tilscher@tum.de\">sarah.tilscher@tum.de</a>&gt;<br>\nThank you for looking into this! I also just found out, that flipping <br>\nthe condition in the if-statement avoids the problem. This also works <br>\nfor my original definition. Inlining the let-definition is a bit more <br>\ncumbersome, because it is used in several places.</p>\n<p>Sarah</p>\n<p>On 21.11.24 15:45, <a href=\"mailto:mohammad.abdulaziz8@gmail.com\">mohammad.abdulaziz8@gmail.com</a> wrote:</p>\n<blockquote>\n<p>Having an equation and its flipped version causes the simplifier to not <br>\nterminate. The following works:</p>\n<p><code>\nfunction (domintros) f :: \"'a ⇒ 'a\" where\n    \"f x = (let x' = x in if x' = x then f x else x)\"\n   by (pat_completeness) auto\n</code></p>\n<p>Mohammad</p>\n<p>On 21/11/2024 14:27, Kevin Kappelmann wrote:</p>\n<blockquote>\n<p>I have no idea, but here is a shorter example:</p>\n<p><code>\nfunction (domintros) f :: \"'a ⇒ 'a\" where\n   \"f x = (let x' = x in if x = x' then f x else x)\"\n    apply auto\n    done\n</code></p>\n<p>On 21.11.24 14:50, Sarah Tilscher wrote:</p>\n<blockquote>\n<p>Dear isabelle developers,</p>\n<p>When defining a fixpoint algorithm using the function package and its <br>\ndomintros option, I get an Interrupt_Breakdown exception already <br>\nafter proving the pattern completeness. I extracted the following <br>\nsmall (but not anymore meaningful) example:</p>\n<p>theory Scratch<br>\n   imports Main<br>\nbegin</p>\n<p>definition lookup_default :: \"('x, nat) map ⇒ 'x ⇒ nat\" where<br>\n   \"lookup_default σ x ≡ case σ x of Some v ⇒ v | None ⇒ 0\"</p>\n<p>function (domintros)<br>\n   iterate :: \"'x ⇒ ('x, nat) map ⇒ nat\"<br>\n      where<br>\n   \"iterate x σ = (<br>\n     let d_new = lookup_default σ x in<br>\n     if lookup_default σ x = d_new then<br>\n       iterate x (σ(x ↦ lookup_default σ x))<br>\n     else 0)\"<br>\n    apply auto<br>\n   done (* Interrupt_Breakdown exception thrown *)</p>\n<p>end</p>\n<p>Does someone know why/where this exception is thrown? Any idea how to <br>\nfix or circumvent this?</p>\n<p>Thanks,<br>\nSarah</p>\n</blockquote>\n</blockquote>\n</blockquote>",
        "id": 483716182,
        "sender_full_name": "Email Gateway",
        "timestamp": 1732200728
    }
]