[
    {
        "content": "<p>From: \"\\\"Kohlen, Bram (UT-EEMCS)\\\"\" &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\n[Apologies if you receive this e-mail twice, I accidentally sent it to the wrong mailing list]</p>\n<p>Hello mailing list,</p>\n<p>I am currently trying out RC5 on a new laptop and found some unintuitive behaviour in isabelle components caused by the absence of \"curl\" on my Ubuntu 22.04 distribution. Adding the AFP (development branch) using \"./isabelle components -u &lt;path to afp-devel&gt;/thys\" initially seems to work, but upon inspection with \"./isabelle components -l\" I am getting the following:</p>\n<p>Available components:<br>\n....<br>\n  &lt;path to afp_devel&gt;/thys<br>\n  &lt;path to afp_devel&gt;</p>\n<p>Missing components:<br>\n  HOME/.isabelle/contrib/hugo-0.88.1<br>\n  HOME/.isabelle/contrib/ci-extras-2</p>\n<p>somehow the path to afp_devel is added twice, once with /thys and once without. Both were not there before running the initial command. Also there is some missing components (hugo and ci-extras) that my proofs don't seem to depend on as everything still runs smoothly. Furthermore, when I now thy to add another component (for debugging/reproducibility purposes, I use the 2023 branch of the isabelle_llvm project: <a href=\"https://github.com/lammich/isabelle_llvm\">https://github.com/lammich/isabelle_llvm</a>) using<br>\n\"./isabelle components -u &lt;path to isabelle_llvm&gt;/thys\" it will give the following message:</p>\n<h3>Missing Isabelle component: \"HOME/.isabelle/contrib/hugo-0.88.1\"</h3>\n<h3>Missing Isabelle component: \"HOME/.isabelle/contrib/ci-extras-2\"</h3>\n<p>*** Bad Isabelle environment variable: \"ISABELLE_CI_EXTRAS_JAR\"</p>\n<p>And it does not add the new component as shown by \"./isabelle components -l\"</p>\n<p>I have explored the following workarounds:</p>\n<p>*   adding Isabelle_LLVM before adding the AFP will work. It still produces the same error after adding the AFP but at least it will allow me to run my project flawlessly.<br>\n  *   installing \"curl\" will allow Isabelle to automatically download the requested packages (hugo and ci-extras) when adding the AFP.</p>\n<p>I also compared this behaviour to Isabelle2022, where this behaviour does not seem to occur (although the AFP is still added twice, once with the /thys and once without just like I observed in RC5).<br>\nI do think that this behaviour is unintentional. Especially not being able to add any new components after adding the AFP if one hasn't installed curl. I am also not sure what hugo and ci-extras are supposed to do here, for reference, ci-extras seems to consist mostly of .jar files. I am looking forward to read other opinions on this.</p>\n<p>Kind regards,<br>\nBram</p>",
        "id": 389862035,
        "sender_full_name": "Email Gateway",
        "timestamp": 1694172121
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 08/09/2023 13:16, \"Kohlen, Bram (UT-EEMCS)\" (via cl-isabelle-users Mailing <br>\nList) wrote:</p>\n<blockquote>\n<p>I am currently trying out RC5 on a new laptop and found some unintuitive <br>\nbehaviour in isabelle components caused by the absence of \"curl\" on my Ubuntu <br>\n22.04 distribution. Adding the AFP (development branch) using \"./isabelle <br>\ncomponents -u &lt;path to afp-devel&gt;/thys\" initially seems to work<br>\n[...]</p>\n</blockquote>\n<p>Thanks for the detailed experience report. We have indeed accumulated a bit <br>\ntoo much complexity in the Isabelle + AFP setup. It all needs to be sorted out <br>\nsoon in a coming release, and properly integrated into the Isabelle Prover IDE.</p>\n<p>(I will start discussions about that on the isabelle-dev mailing list: we do <br>\nneed to make clear which component dependencies for AFP are really necessary.)</p>\n<p>Back to your text: reading it twice, I first got worried about the state in <br>\nIsabelle2023, which will become final and unchangeable in a few days.</p>\n<p>Then I pretended to be a regular user of Isabelle2023-RC5 + AFP + <br>\nisabelle_llvm and managed to setup everything in half the time of reading + <br>\nworrying about the issue (of course, I know which diversions and pitfalls need <br>\nto be avoided).</p>\n<p>So here is my summary:</p>\n<p>* Isabelle releases like Isabelle2023-RC5 need the corresponding AFP <br>\nrelease: afp-2023 instead of afp-devel.</p>\n<p>* Repository versions of Isabelle + AFP do need the \"curl\" command, as <br>\nstated in Isabelle/README_REPOSITORY --- and you need to do invoke <br>\n\"Admin/init\" until all components are saturated.</p>\n<p>* Regular release versions of Isabelle + AFP neither need \"curl\" nor <br>\n\"Admin/init\". For Isabelle all required components are already built and <br>\nbundled. For AFP, components are suppressed, since they are \"administrative\" <br>\nonly. The main download afp-current.tar.gz from <br>\n<a href=\"https://www.isa-afp.org/download\">https://www.isa-afp.org/download</a> worked for me on the spot without problems.</p>\n<p>* Mixing release downloads with repository snapshots requires detailed <br>\nunderstanding of how things work. It is better to make a clear decision under <br>\nwhich regime you want to work: either release or repository.</p>\n<p>Some of these extra details are as follows:</p>\n<blockquote>\n<p>Available components:<br>\n....<br>\n   &lt;path to afp_devel&gt;/thys<br>\n   &lt;path to afp_devel&gt;</p>\n<p>somehow the path to afp_devel is added twice, once with /thys and once <br>\nwithout.</p>\n</blockquote>\n<p>That is because AFP repository clones provide two components, and there is <br>\nsome builtin smartness to add the second one automatically in certain situations.</p>\n<blockquote>\n<p>Also there is <br>\nsome missing components (hugo and ci-extras) that my proofs don't seem to <br>\ndepend on as everything still runs smoothly.</p>\n</blockquote>\n<p>\"hugo-0.88.1\" helps to produce the AFP websites: its absence or presence <br>\nnormally does not get into the way.</p>\n<p>\"ci-extras\" are a left-over from rather old times, and now I would say <br>\n\"experimental\" or even \"obsolete\". We need to find out how to put it into <br>\nproper form, or better eliminate it. (\"ci-extras-2\" introduces a reference to <br>\nsome $ISABELLE_CI_EXTRAS_JAR that is required for the Isabelle/Scala setup of <br>\nAFP: without that it won't build.)</p>\n<blockquote>\n<p>I have explored the following workarounds:</p>\n<p>* installing \"curl\" will allow Isabelle to automatically download the<br>\n    requested packages (hugo and ci-extras) when adding the AFP.</p>\n</blockquote>\n<p>That is not a workaround, but a regular requirement for Isabelle + AFP <br>\nrepository clones, to saturate components.</p>\n<p>It is sad that Ubuntu has discontinued \"curl\" as default --- as it seems for <br>\nno particular reason. Some years ago, \"curl\" was considered bread-and-butter <br>\nfor https access: I wonder what has happened there recently.</p>\n<blockquote>\n<p>I also compared this behaviour to Isabelle2022, where this behaviour does not <br>\nseem to occur (although the AFP is still added twice, once with the /thys and <br>\nonce without just like I observed in RC5).</p>\n</blockquote>\n<p>afp-2022 also depends on \"ci-extras\", but it is \"ci-extras-1\" with slightly <br>\ndifferent (non-canonical) setup. It happens to build, but the failure to <br>\naccess the required jar is postponed to runtime. (In Isabelle, everything is <br>\nas \"static\" as possible, instead of \"dynamic\" or untyped/unscoped.)</p>\n<blockquote>\n<p>I do think that this behaviour is unintentional. Especially not being able to <br>\nadd any new components after adding the AFP if one hasn't installed curl.</p>\n</blockquote>\n<p>The \"curl\" requirement is intentional. The rest is some overcomplexity that we <br>\nneed to sort out on our side, but not for Isabelle2023.</p>\n<p>Makarius</p>",
        "id": 390026258,
        "sender_full_name": "Email Gateway",
        "timestamp": 1694259106
    },
    {
        "content": "<p>From: Fabian Huch &lt;<a href=\"mailto:huch@in.tum.de\">huch@in.tum.de</a>&gt;<br>\nThe main problem here is that you are trying to compose a release <br>\nversion of Isabelle with a development version of the AFP. In principle <br>\nthis can work, but for development versions one does need to resolve <br>\ncomponents (for Isabelle as well when using devel).</p>\n<p>So most of the behaviour is expected, though I'll have to investigate <br>\nwhy both afp (in the devel version, this contains some tooling) and <br>\nafp/thys are added when you only added the afp/thys component - that <br>\ndoes not seem ideal.</p>\n<p>Fabian</p>",
        "id": 390048256,
        "sender_full_name": "Email Gateway",
        "timestamp": 1694276988
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nSee also this changeset</p>\n<p>changeset:   11878:3a9c2004b599<br>\nuser:        wenzelm<br>\ndate:        Sat Jun 05 20:44:59 2021 +0200<br>\nfiles:       ROOTS thys/etc/settings<br>\ndescription:<br>\nmore robust component setup for AFP/thys: support \"isabelle components -u\" and <br>\ninit $AFP_BASE on demand;<br>\nno ROOTS in $AFP_BASE: proper support for \"isabelle build -a\" with $AFP_BASE <br>\ncomponent, but without $AFP component;</p>\n<p>This needs to be understood in the context of the isabelle-users thread \"The <br>\ninstructions in AFP's \"Using Entries\" do not work\" from Jun-2021. E.g. see <br>\n<a href=\"https://lists.cam.ac.uk/sympa/arc/cl-isabelle-users/2021-06/msg00006.html\">https://lists.cam.ac.uk/sympa/arc/cl-isabelle-users/2021-06/msg00006.html</a></p>\n<p>Makarius</p>",
        "id": 390578799,
        "sender_full_name": "Email Gateway",
        "timestamp": 1694544933
    }
]