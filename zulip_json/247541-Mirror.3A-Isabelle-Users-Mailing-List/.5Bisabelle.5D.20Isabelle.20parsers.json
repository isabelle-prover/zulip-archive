[
    {
        "content": "<p>From: Talia Ringer &lt;<a href=\"mailto:tringer@cs.washington.edu\">tringer@cs.washington.edu</a>&gt;<br>\nHi all,</p>\n<p>I'm curious if there is an Isabelle/HOL parser available somewhere. I'm<br>\ntrying to do some data processing with Isabelle/HOL theories, and I think a<br>\nparser would make this much easier. I'm open to any language since this is<br>\njust data processing.</p>\n<p>Thanks!</p>\n<p>Talia</p>",
        "id": 284778571,
        "sender_full_name": "Email Gateway",
        "timestamp": 1654191401
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:manuel@pruvisto.org\">manuel@pruvisto.org</a>&gt;<br>\nHm, I think this might be tough. Others who are more knowledgeable may <br>\nsay more, but this is my understanding:</p>\n<p>The inner syntax (i.e. types, terms, etc) is highly extensible, and even <br>\nin the outer syntax It is possible to register new commands, and those <br>\ncommands (also proof methods) can have their own parsers (written in ML <br>\nwith parser combinators) as well.</p>\n<p>So there really isn't any way to properly parse Isabelle without, well, <br>\nrunning Isabelle. And you can't parse a single file in isolation either, <br>\nyou need to know the theories it depends on.</p>\n<p>That said, I think some approximation is possible. After all, <br>\nIsabelle/jEdit does reasonable things even when there are parse errors, <br>\nso there is probably some well-defined way to parse an Isabelle file <br>\napproximately even when you don't fully know what each command parser does.</p>\n<p>Manuel</p>",
        "id": 284787310,
        "sender_full_name": "Email Gateway",
        "timestamp": 1654195522
    },
    {
        "content": "<p>From: Wenda Li &lt;<a href=\"mailto:wl302@cam.ac.uk\">wl302@cam.ac.uk</a>&gt;<br>\nSome of the older discussions in the mailing list could be relevant here:</p>\n<p><a href=\"https://lists.cam.ac.uk/sympa/arc/cl-isabelle-users/2021-02/msg00012.html\">https://lists.cam.ac.uk/sympa/arc/cl-isabelle-users/2021-02/msg00012.html</a></p>\n<p>Wenda</p>",
        "id": 284811534,
        "sender_full_name": "Email Gateway",
        "timestamp": 1654207695
    },
    {
        "content": "<p>From: Dominique Unruh &lt;<a href=\"mailto:unruh@ut.ee\">unruh@ut.ee</a>&gt;<br>\nAs far as I know, there is no existing implementation besides Isabelle <br>\nitself for this.</p>\n<p>What Isabelle does can be accessed in Isabelle/ML or through <br>\nscala-isabelle (and possibly other way).</p>\n<p>Isabelle itself does not, however, generate a parse tree of the theories <br>\nor similar. It does the following:</p>\n<p>* It splits the theory into commands (so the transformation<br>\n    theory-text -&gt; list(commands-as-text) is relatively easy to access).</p>\n<p>* For each command, one of a set of command parsers are invoked. These<br>\n    do not output parse trees but directly return functions that<br>\n    transform the state of the Isabelle toplevel.</p>\n<p>* Those commands are applied, so one can access the current theory<br>\n    after each command.</p>\n<p>* In addition, Isabelle produces \"reporting\" which corresponds to the<br>\n    IDE highlighting (e.g. what you get when ctrl-hovering on an element<br>\n    of a term). This may be useful information but it is not enough to<br>\n    get a full parse tree.</p>\n<p>In addition, given a term (as a string), it is easy to parse it into a <br>\nterm (as a datastructure).</p>\n<p>Anything that goes beyond this might be possible but I think not easy.</p>\n<p>If you can be more specific what kind of data you need to extract I <br>\ncould give an educated guess as to whether/how it could be achieved.</p>\n<p>Best wishes,<br>\nDominique.</p>",
        "id": 285104701,
        "sender_full_name": "Email Gateway",
        "timestamp": 1654518507
    },
    {
        "content": "<p>From: Talia Ringer &lt;<a href=\"mailto:tringer@cs.washington.edu\">tringer@cs.washington.edu</a>&gt;<br>\nThanks! Similarly to another user here yesterday, I'm looking to get some<br>\nkind of dependency graph. I have a hacky way of getting them by text, but<br>\nit's not perfect and doesn't handle cross-theory dependencies.</p>\n<p>So, an alternative to proper parsing would be any of the ML APIs that might<br>\ngive us access to dependencies. For the sake of data processing, I think it<br>\nis OK to do this through Isabelle.</p>\n<p>Talia</p>",
        "id": 285147544,
        "sender_full_name": "Email Gateway",
        "timestamp": 1654538310
    },
    {
        "content": "<p>From: Dominique Unruh &lt;<a href=\"mailto:unruh@ut.ee\">unruh@ut.ee</a>&gt;<br>\nHi,</p>\n<p>if you are happy with the same information that the IDE gives you (i.e., <br>\nonly the theorems that are explicitly mentioned by the user, but not any <br>\ntheorems that are implicitly used, e.g., by the simp method), then I <br>\nthink you are in luck:</p>\n<p>The command \"isabelle dump\" (Section 2.6 of the system manual) does, if <br>\nI remember right, dump the full annotated theory code, including all the <br>\nreferences (from which you can then most likely extract the theorems).</p>\n<p>It is dumped in YXML format which is a compressed XML format (see <br>\nSection 1.5). If you convert it back to XML (not sure there is a <br>\nuser-level too for it, but the format is easy) you can explore it and <br>\nsee what links it contains.</p>\n<p>I cannot help with the details of this approach because the above <br>\ninformation is based on some experimentation I did a while back and I <br>\ndon't remember the exact details.</p>\n<p>Of course, all this information can also be extracted in Isabelle/Scala, <br>\nbut if you don't need more than this static dump, it could be easier to <br>\nparse the files rather then learn the API.</p>\n<p>Best wishes,<br>\nDominique.</p>",
        "id": 285256022,
        "sender_full_name": "Email Gateway",
        "timestamp": 1654610953
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nIf this is not just a throw-away experiment, you should invest in <br>\nIsabelle/Scala programming. The \"isabelle dump\" tool may server as example of <br>\nhow to do it, but it also does things a bit indirectly.</p>\n<p>The regular Isabelle HTML presentation in Isabelle2021-1 could be a better <br>\nstarting point to understand semantically annotated Isabelle sources.</p>\n<p>Side-remark: You should study Isabelle/Scala sources with the help of IntelliJ <br>\nIDEA, see also \"isabelle scala_project\" that documented in the \"system <br>\nmanual\". There might be some genuine problems with the IDE project setup, but <br>\nthen we should sort that out and not give up too early.</p>\n<p>Makarius</p>",
        "id": 285257311,
        "sender_full_name": "Email Gateway",
        "timestamp": 1654611447
    },
    {
        "content": "<p>From: Fabian Huch &lt;<a href=\"mailto:huch@in.tum.de\">huch@in.tum.de</a>&gt;<br>\nIn [1], you can find some functionality to extract dependency graphs <br>\ninto a graph database using Isabelle/Scala and the Isabelle build + export.</p>\n<p>Hope that helps,</p>\n<p>Fabian</p>\n<p>[1]: <a href=\"https://github.com/Dacit/afp-complex-networks\">https://github.com/Dacit/afp-complex-networks</a></p>",
        "id": 285383129,
        "sender_full_name": "Email Gateway",
        "timestamp": 1654691479
    }
]