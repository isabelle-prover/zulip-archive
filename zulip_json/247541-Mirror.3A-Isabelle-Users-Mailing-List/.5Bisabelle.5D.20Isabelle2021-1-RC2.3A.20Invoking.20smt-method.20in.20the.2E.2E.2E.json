[
    {
        "content": "<p>From: Dominique Unruh &lt;<a href=\"mailto:unruh@ut.ee\">unruh@ut.ee</a>&gt;<br>\nHi,</p>\n<p>I have one problem with an Isabelle/Scala initialized Isabelle session. <br>\nI do not know whether this indicates a regression or is because I <br>\ninitialize Isabelle wrongly. (The problem did not occur with Isabelle2021.)</p>\n<p>I have a theory that contains a trivial lemma with smt-method (lemma <br>\nTrue by smt).</p>\n<p>When I load this theory via Isabelle/Scala, I get the following exception:</p>\n<p>exception Fail raised (line 57 of \"System/isabelle_system.ML\"): Bad<br>\n    bash_process server address<br>\n    At command \"by\" (line 6 of<br>\n    \"~/svn/qrhl-tool/scala-isabelle/src/test/isabelle/Theory_With_Smt.thy\")</p>\n<p>I initialize Isabelle roughly as follows:</p>\n<p>Isabelle_System.init(isabelle_root = isabelleRoot.toString)<br>\n    val channel = System_Channel()<br>\n    val options = Options.init()<br>\n    val channel_options = options.string.update(\"system_channel_address\", channel.address).<br>\n       string.update(\"system_channel_password\", channel.password)</p>\n<p>val sessionRoots2 = sessionRoots.map(p =&gt; isabelle.File.path(p.toFile)).toList<br>\n    val sessions_structure = Sessions.load_structure(options = options, dirs = sessionRoots2)<br>\n    val store = Sessions.store(options)</p>\n<p>ML_Process(channel_options, sessions_structure, store, eval_main = mlCode, logic = logic, cwd = cwd.toFile)</p>\n<p>Here mlCode is some ML code that does some communication and then <br>\neffectively runs the following code:</p>\n<p>Thy_Info.use_thy (Path.implode path)</p>\n<p>Thy_Info.get_theory name</p>\n<p>where path and name are the path and name of the theory with the smt call.</p>\n<p>The same above works fine with theories that do not contain smt.</p>\n<p>I'm sorry not to provide a runnable example, but give the concrete <br>\nsetup, it would be quite some work to cut everything down to a runnable <br>\nexample. I'm hoping the issue can be clarified without one. But if not, <br>\nI can try to produce one.</p>\n<p>Best wishes,<br>\nDominique.</p>",
        "id": 260773679,
        "sender_full_name": "Email Gateway",
        "timestamp": 1636450920
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe relevant NEWS entry for Isabelle2021-1 is this:</p>\n<ul>\n<li>External bash processes are always managed by Isabelle/Scala, in<br>\ncontrast to Isabelle2021 where this was only done for macOS on Apple<br>\nSilicon.</li>\n</ul>\n<p>The main Isabelle/ML interface is Isabelle_System.bash_process with<br>\nresult type Process_Result.T (resembling class Process_Result in Scala);<br>\nderived operations Isabelle_System.bash and Isabelle_System.bash_output<br>\nprovide similar functionality as before. The underlying TCP/IP server<br>\nwithin Isabelle/Scala is available to other programming languages as<br>\nwell, notably Isabelle/Haskell.</p>\n<p>We have already had long discussions about remaining possibilities to run<br>\nIsabelle without a proper PIDE session context.</p>\n<p>Many system operations already use the Isabelle/Scala function protocol, e.g.<br>\nIsabelle_System.make_directory. This works much better and more portably that<br>\ne.g. perl in the past (perl has been discontinued altogether for Isabelle2021-1).</p>\n<p>For \"bash_process\" there is something special: the service is actually via<br>\nTCP, e.g. to allow Haskell (or eventually OCaml) to run the external process<br>\nin the Isabelle way.</p>\n<p>Thus you merely need a proper server in Isabelle/Scala + options for<br>\nIsabelle/ML, and not a full PIDE session.  Here is an example of such<br>\nlow-level tinkering that could work by accident:</p>\n<p>import isabelle._</p>\n<p>val options = Options.init()<br>\nval session = new Session(options, Resources.empty)<br>\nval bash_handler = new Bash.Handler<br>\nbash_handler.init(session)</p>\n<p>val ml_options = bash_handler.prover_options(options)</p>\n<p>// sanity check:<br>\nml_options.string(\"bash_process_address\")<br>\nml_options.string(\"bash_process_password\")</p>\n<p>// run ML_Process<br>\nML_Process(ml_options, ...)</p>\n<p>bash_handler.exit()</p>\n<p>Makarius</p>",
        "id": 260784304,
        "sender_full_name": "Email Gateway",
        "timestamp": 1636457339
    },
    {
        "content": "<p>From: Dominique Unruh &lt;<a href=\"mailto:unruh@ut.ee\">unruh@ut.ee</a>&gt;<br>\nHi,</p>",
        "id": 260785726,
        "sender_full_name": "Email Gateway",
        "timestamp": 1636458160
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 09/11/2021 12:40, Dominique Unruh wrote:</p>\n<blockquote>\n<blockquote>\n<p>We have already had long discussions about remaining possibilities to run<br>\nIsabelle without a proper PIDE session context.<br>\nYes, and you convinced me not to do that. The code fragment in my mail was my<br>\nattempt to programmatically initialize such a PIDE session context. However, I<br>\ndo not know what a \"proper PIDE session context\" means in terms of the methods<br>\nthat I invoke. I thought Isabelle.init followed by ML_Process would do that.<br>\nShould I initialize it differently?</p>\n</blockquote>\n</blockquote>\n<p>The PIDE session object in my snippet is this:</p>\n<p>val session = new Session(options, Resources.empty)</p>\n<p>But that is not quite \"proper\": the resources are empty and it is not<br>\nconnected to an ML process. The Bash.Handler does not care right now.</p>\n<blockquote>\n<p>Note that I don't directly care about the bash, it just happens that the<br>\nexception I got related to bash, but what I needed was to invoke \"by smt\".</p>\n</blockquote>\n<p>There are two assumptions behind that:</p>\n<p>* bash_process works (this thread)</p>\n<p>* z3 works: it has always been somewhat fragile and is de-facto downgraded<br>\nnow; veriT takes more and more over.</p>\n<blockquote>\n<p>So I don't want to do low-level tinkering if it can be avoided, but correctly<br>\ninitialize PIDE (as long as this can be done starting the Isabelle process<br>\nfrom Scala, as opposed to the other way around).</p>\n</blockquote>\n<p>You can see in Isabelle/jEdit and Isabelle/VSCode how the Session objects are<br>\ncreated and initalized. The scala_project Maven project makes it very easy to<br>\nbrowse the implementation.</p>\n<blockquote>\n<p>My goal is to have scala-isabelle use the officially supported ways to get<br>\nmaximum stability.</p>\n</blockquote>\n<p>You should actually try to dismantle scala-isabelle. It has caused enough<br>\ntensions and continuous problems in the past.</p>\n<p>Makarius</p>",
        "id": 260788242,
        "sender_full_name": "Email Gateway",
        "timestamp": 1636459754
    },
    {
        "content": "<p>From: Dominique Unruh &lt;<a href=\"mailto:unruh@ut.ee\">unruh@ut.ee</a>&gt;<br>\nHi,</p>\n<blockquote>\n<p>You can see in Isabelle/jEdit and Isabelle/VSCode how the Session objects are<br>\ncreated and initalized.<br>\nOK, I will try and reverse engineer from there.</p>\n</blockquote>\n<blockquote>\n<p>You should actually try to dismantle scala-isabelle. It has caused enough<br>\ntensions and continuous problems in the past.<br>\nI think there is a misunderstanding here.</p>\n</blockquote>\n<p>If I dismantle scala-isabelle, I will still have to invoke Isabelle from <br>\nwithin qrhl-tool (unless you suggest to dismantle that theorem prover, <br>\ntoo).Â  (Unless you count the repeated mails some time ago where someone <br>\ninsisted in using scala-isabelle for getting an AST of an Isabelle <br>\ntheory despite your and my explanations that this is not supported by <br>\nIsabelle or scala-isabelle.)</p>\n<p>And the difficulties I have raised in this list related to <br>\nscala-isabelle are due to the fact that it is not clear (to me) and also <br>\nsomewhat in flux, how to invoke Isabelle from Scala.</p>\n<p>So I would have exactly the same questions if I would not use <br>\nscala-isabelle.</p>\n<p>scala-isabelle actually makes things easier because it encapsulates the <br>\nundocumented (or documented-by-source-code) aspects of the invocation of <br>\nIsabelle into a documented API (that also changes less).</p>\n<p>Best wishes,<br>\nDominique.</p>\n<p>On 11/9/21 2:08 PM, Makarius wrote:</p>\n<blockquote>\n<p>On 09/11/2021 12:40, Dominique Unruh wrote:</p>\n<blockquote>\n<blockquote>\n<p>We have already had long discussions about remaining possibilities to run<br>\nIsabelle without a proper PIDE session context.<br>\nYes, and you convinced me not to do that. The code fragment in my mail was my<br>\nattempt to programmatically initialize such a PIDE session context. However, I<br>\ndo not know what a \"proper PIDE session context\" means in terms of the methods<br>\nthat I invoke. I thought Isabelle.init followed by ML_Process would do that.<br>\nShould I initialize it differently?<br>\nThe PIDE session object in my snippet is this:</p>\n</blockquote>\n</blockquote>\n<p>val session = new Session(options, Resources.empty)</p>\n<p>But that is not quite \"proper\": the resources are empty and it is not<br>\nconnected to an ML process. The Bash.Handler does not care right now.</p>\n<blockquote>\n<p>Note that I don't directly care about the bash, it just happens that the<br>\nexception I got related to bash, but what I needed was to invoke \"by smt\".<br>\nThere are two assumptions behind that:</p>\n</blockquote>\n<p>* bash_process works (this thread)</p>\n<p>* z3 works: it has always been somewhat fragile and is de-facto downgraded<br>\nnow; veriT takes more and more over.</p>\n<blockquote>\n<p>So I don't want to do low-level tinkering if it can be avoided, but correctly<br>\ninitialize PIDE (as long as this can be done starting the Isabelle process<br>\nfrom Scala, as opposed to the other way around).<br>\nYou can see in Isabelle/jEdit and Isabelle/VSCode how the Session objects are<br>\ncreated and initalized. The scala_project Maven project makes it very easy to<br>\nbrowse the implementation.</p>\n</blockquote>\n<blockquote>\n<p>My goal is to have scala-isabelle use the officially supported ways to get<br>\nmaximum stability.<br>\nYou should actually try to dismantle scala-isabelle. It has caused enough<br>\ntensions and continuous problems in the past.</p>\n</blockquote>\n<p>Makarius</p>\n</blockquote>",
        "id": 260798752,
        "sender_full_name": "Email Gateway",
        "timestamp": 1636465480
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe Isabelle/PIDE server does have a lot of explicit documentation: chapter 4<br>\nof the \"system\" manual. In retrospect, I am unsure if it ever got used in<br>\napplications so far.</p>\n<p>There is a report by  Boris Shminke on using it from Python:<br>\n<a href=\"https://link.springer.com/chapter/10.1007%2F978-3-030-81097-9_20\">https://link.springer.com/chapter/10.1007%2F978-3-030-81097-9_20</a> --- but it<br>\nremains unclear if and how it works in applications.</p>\n<p>Makarius</p>",
        "id": 260815435,
        "sender_full_name": "Email Gateway",
        "timestamp": 1636472124
    },
    {
        "content": "<p>From: Simon Wimmer &lt;<a href=\"mailto:wimmersimon@gmail.com\">wimmersimon@gmail.com</a>&gt;<br>\nWe have another application for grading Isabelle theories on<br>\n<a href=\"http://do.proof.in.tum.de\">do.proof.in.tum.de</a>:<br>\n<a href=\"https://github.com/maxhaslbeck/proving-contest-backends/blob/master/Isabelle/grader.py\">https://github.com/maxhaslbeck/proving-contest-backends/blob/master/Isabelle/grader.py</a></p>\n<p>Simon</p>",
        "id": 261046384,
        "sender_full_name": "Email Gateway",
        "timestamp": 1636574497
    }
]