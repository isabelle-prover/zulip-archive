[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nAs usual, the \"Documentation\" section of the website refers to \"Theory<br>\nlibraries\" in HTML, e.g. see<br>\n<a href=\"https://isabelle.in.tum.de/website-Isabelle2021-RC2/dist/library/HOL/HOL/index.html\">https://isabelle.in.tum.de/website-Isabelle2021-RC2/dist/library/HOL/HOL/index.html</a></p>\n<p>This is now based on formal PIDE markup produced in batch-builds; so there is<br>\nmuch more fancy coloring and a few more hyperlinks. Further presentation of<br>\nmarkup will come eventually, after this release.</p>\n<p>Moreover, formally included Isabelle/ML files get proper attention:<br>\nIsabelle/HOL consists of theory specifications and ML tool implementations in<br>\na complex bootstrap process that winds itself towards theory \"Main\" (or<br>\n\"Complex_Main\").</p>\n<p>The overall HTML presentation style is still somewhat crude: like<br>\nsyntax/semantics highlighting in Isabelle/jEdit.</p>\n<p>Eventually, I would like to see journal-quality rendering of formal<br>\nmathematical text (not \"code\"). This requires suitable web-technology that<br>\nlasts more than just 6 months as a \"cool\" or \"hot\" thing.</p>\n<p>Makarius</p>",
        "id": 222235040,
        "sender_full_name": "Email Gateway",
        "timestamp": 1610304484
    },
    {
        "content": "<p>From: Jakub Kądziołka &lt;<a href=\"mailto:kuba@kadziolka.net\">kuba@kadziolka.net</a>&gt;<br>\nOn Sun Jan 10, 2021 at 7:47 PM CET, Makarius wrote:</p>\n<blockquote>\n<p>On 10/01/2021 16:52, Makarius wrote:</p>\n<blockquote>\n<p>The current release candidate website is<br>\n<a href=\"https://isabelle.in.tum.de/website-Isabelle2021-RC2\">https://isabelle.in.tum.de/website-Isabelle2021-RC2</a></p>\n</blockquote>\n<p>As usual, the \"Documentation\" section of the website refers to \"Theory<br>\nlibraries\" in HTML, e.g. see<br>\n<a href=\"https://isabelle.in.tum.de/website-Isabelle2021-RC2/dist/library/HOL/HOL/index.html\">https://isabelle.in.tum.de/website-Isabelle2021-RC2/dist/library/HOL/HOL/index.html</a></p>\n<p>This is now based on formal PIDE markup produced in batch-builds; so<br>\nthere is<br>\nmuch more fancy coloring and a few more hyperlinks. Further presentation<br>\nof<br>\nmarkup will come eventually, after this release.</p>\n</blockquote>\n<p>Ah, what a coincidence! Just three days ago I started developing a tool<br>\nto do this based on the output of 'isabelle dump'.</p>\n<p>Some remarks:</p>\n<p>The generated files seem to lack a closing &lt;/html&gt; tag</p>\n<p>The semi-transparent background color on .quoted is a bit inconsistent,<br>\nas sometimes (indeed, most of the time) Isabelle generates two nested<br>\nquoted tags. Thus, when only a single tag is generated (see for example<br>\nthe line \"code_datatype holds\" in Tools/Code_Generator), the highlight<br>\nis very faint.</p>\n<p>In my case, I resolved this by pre-baking the transparency, i.e.<br>\n  background-color: #f3f3f3;</p>\n<blockquote>\n<p>Moreover, formally included Isabelle/ML files get proper attention:<br>\nIsabelle/HOL consists of theory specifications and ML tool<br>\nimplementations in<br>\na complex bootstrap process that winds itself towards theory \"Main\" (or<br>\n\"Complex_Main\").</p>\n</blockquote>\n<p>Interesting! Does the PIDE markup for included ML files get included in<br>\nthe output of 'isabelle dump' somewhere?</p>\n<blockquote>\n<p>The overall HTML presentation style is still somewhat crude: like<br>\nsyntax/semantics highlighting in Isabelle/jEdit.</p>\n<p>Eventually, I would like to see journal-quality rendering of formal<br>\nmathematical text (not \"code\"). This requires suitable web-technology<br>\nthat<br>\nlasts more than just 6 months as a \"cool\" or \"hot\" thing.</p>\n<p>Makarius</p>\n</blockquote>\n<p>I suppose I should also say something about my own implementation. The<br>\nend goal is to integrate it into a blog authoring tool, so I'm going to<br>\ncontinue my out-of-tree efforts.</p>\n<p>As I've mentioned, I get my semantic information from the output of<br>\n'isabelle dump'. I have found two small deficiencies in this command:</p>\n<ul>\n<li>there is no way to render PIDE markup for Pure</li>\n<li>it always starts by processing all the dependencies, even if they are<br>\n   already included in the image specified with -b</li>\n</ul>\n<p>The root causes of both seem to be very similar - the pure_base and<br>\nskip_base arguments to Context in src/Pure/Tools/dump.scala are both<br>\nhardcoded as false, with no commandline flag to control them.</p>\n<p>I'm currently halfway through duplicating the tooltips mechanism of<br>\nIsabelle/jEdit, and go-to-definition is next on the list. When that is<br>\nready, I will make a proper announcement on this mailing list.</p>\n<p>One feature I'm particularily fond of is not even present in<br>\nIsabelle/jEdit: when you hover over a non-ASCII symbol, a tooltip will<br>\ntell you its name, as well as any abbreviations - as far as I am aware,<br>\nthe only ways to learn the name of a symbol when you first encounter it,<br>\nis to either open a .thy file with Notepad to see the escape code, or a<br>\ngame of where's waldo in the Symbols tab of jEdit.</p>\n<p>Though it's nothing particularily flashy yet, you can see a preview here:<br>\n<a href=\"https://niedzejkob.github.io/isabelle-markup/HOL/HOL.html\">https://niedzejkob.github.io/isabelle-markup/HOL/HOL.html</a></p>\n<p>The corresponding code is available here:<br>\n<a href=\"https://github.com/NieDzejkob/isabelle-markup\">https://github.com/NieDzejkob/isabelle-markup</a></p>\n<p>Kind regards,<br>\nJakub Kądziołka</p>",
        "id": 222244917,
        "sender_full_name": "Email Gateway",
        "timestamp": 1610316781
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 10/01/2021 21:39, Jakub Kądziołka wrote:</p>\n<blockquote>\n<p>The generated files seem to lack a closing &lt;/html&gt; tag</p>\n</blockquote>\n<p>Oops, I have now changed that in<br>\n<a href=\"https://isabelle.sketis.net/repos/isabelle-release/rev/ff9cd62d2d20\">https://isabelle.sketis.net/repos/isabelle-release/rev/ff9cd62d2d20</a></p>\n<blockquote>\n<p>The semi-transparent background color on .quoted is a bit inconsistent,<br>\nas sometimes (indeed, most of the time) Isabelle generates two nested<br>\nquoted tags. Thus, when only a single tag is generated (see for example<br>\nthe line \"code_datatype holds\" in Tools/Code_Generator), the highlight<br>\nis very faint.</p>\n<p>In my case, I resolved this by pre-baking the transparency, i.e.<br>\n  background-color: #f3f3f3;</p>\n</blockquote>\n<p>That is an interesting fine-point.</p>\n<p>In Isabelle/jEdit the underlying PIDE rendering works differently:<br>\n<a href=\"http://snapshot.select\">snapshot.select</a> in<br>\n<a href=\"https://isabelle.sketis.net/repos/isabelle-release/file/Isabelle2021-RC2/src/Pure/PIDE/rendering.scala#l495\">https://isabelle.sketis.net/repos/isabelle-release/file/Isabelle2021-RC2/src/Pure/PIDE/rendering.scala#l495</a><br>\ntraverses the markup tree, such that only one markup element per text interval<br>\ntake precedence. So there is no stacking-up of markups of the same kind (here<br>\n\"foreground\" color).</p>\n<p>I wonder if CSS can imitate the <a href=\"http://snapshot.select\">snapshot.select</a> traversal. Otherwise one could<br>\ntry to generate \"flat\" HTML markup from rendering.foreground (and other<br>\nrendering selectors), instead of taking the full XML document.</p>\n<p>Yet another possibility: quite different HTML presentation with less colors<br>\nand more typography (high-quality math fonts). It could be a combination of<br>\nparsing in the context of PIDE rendering results. (I will pursue this later,<br>\nto see how far we can approximate actual math journal quality, e.g. via<br>\nMathJax 3).</p>\n<blockquote>\n<blockquote>\n<p>Moreover, formally included Isabelle/ML files get proper attention:<br>\nIsabelle/HOL consists of theory specifications and ML tool<br>\nimplementations in<br>\na complex bootstrap process that winds itself towards theory \"Main\" (or<br>\n\"Complex_Main\").</p>\n</blockquote>\n<p>Interesting! Does the PIDE markup for included ML files get included in<br>\nthe output of 'isabelle dump' somewhere?</p>\n</blockquote>\n<p>Probably not. Behind \"isabelle dump\" is a rather complex \"headless PIDE\"<br>\nsession with its own rules what works well and what doesn't.</p>\n<p>It is better to switch your application to plain \"isabelle build\" + retrieval<br>\nof the PIDE markup from the build database.</p>\n<p>See also the implementation of the new \"isabelle document\" tool:<br>\n<a href=\"https://isabelle.sketis.net/repos/isabelle-release/file/Isabelle2021-RC2/src/Pure/Thy/presentation.scala#l699\">https://isabelle.sketis.net/repos/isabelle-release/file/Isabelle2021-RC2/src/Pure/Thy/presentation.scala#l699</a><br>\n--- it first makes a regular <a href=\"http://Build.build\">Build.build</a> (the Scala function behind \"isabelle<br>\nbuild) to ensure that the sources are consistent with the session databases;<br>\nthen it accesses the build artefacts (exported tex sources) via<br>\ndb_context.get_export.</p>\n<p>For your application, the database access can work via Build_Job.read_theory,<br>\njust like Presentation.session_html, which is the implementation behind<br>\n\"isabelle build -P:\".</p>\n<p>Makarius</p>",
        "id": 222309884,
        "sender_full_name": "Email Gateway",
        "timestamp": 1610378325
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nSide-remark: reading Isabelle/Scala sources works best with IntelliJ IDEA. See<br>\nthe Isabelle \"system\" manual about the \"isabelle scala_project\" tool, with<br>\nlinks and hints about Gradle and IntelliJ.</p>\n<p>Maybe \"isabelle scala_project\" should eventually support user-space projects<br>\nas well. Right now you have to tinker manually, and then use suitable<br>\n\"isabelle_scala_service\" invocations in your etc/settings: e.g. see<br>\n<a href=\"https://isabelle.sketis.net/repos/isabelle-release/file/Isabelle2021-RC2/etc/settings#l23\">https://isabelle.sketis.net/repos/isabelle-release/file/Isabelle2021-RC2/etc/settings#l23</a></p>\n<p>Makarius</p>",
        "id": 222311091,
        "sender_full_name": "Email Gateway",
        "timestamp": 1610378786
    },
    {
        "content": "<p>From: Pedro Sánchez Terraf &lt;<a href=\"mailto:sterraf@famaf.unc.edu.ar\">sterraf@famaf.unc.edu.ar</a>&gt;<br>\nDear Makarius &amp; all,</p>\n<p>While testing an AFP entry, I noticed some odd behavior in the rendering <br>\nof sub/superscripts in HTML output. It looks that &lt;sub&gt; and &lt;sup&gt; tags <br>\nget mixed with surrounding &lt;span&gt; tags.</p>\n<p>The output of RC2 looks like</p>\n<p>in contrast to Isabelle2020:</p>\n<p>(the underlining is there because I crosslink the html afterwards \"by <br>\nhand\").</p>\n<p>By the way, I'm still curious about the decision about (not) having <br>\nmulticharacter sub/supercript rendering support at jEdit.</p>\n<p>Thank you very much in advance.<br>\n<a href=\"/user_uploads/14278/cp57NPW01qnCVWGEmvgV0ZPk/piampcnohlhgobcd.png\">piampcnohlhgobcd.png</a><br>\n<a href=\"/user_uploads/14278/CQPxomoLGODCstKPVfqy7tzR/kcoipckjdlapompp.png\">kcoipckjdlapompp.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/cp57NPW01qnCVWGEmvgV0ZPk/piampcnohlhgobcd.png\" title=\"piampcnohlhgobcd.png\"><img src=\"/user_uploads/14278/cp57NPW01qnCVWGEmvgV0ZPk/piampcnohlhgobcd.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/14278/CQPxomoLGODCstKPVfqy7tzR/kcoipckjdlapompp.png\" title=\"kcoipckjdlapompp.png\"><img src=\"/user_uploads/14278/CQPxomoLGODCstKPVfqy7tzR/kcoipckjdlapompp.png\"></a></div>",
        "id": 223139539,
        "sender_full_name": "Email Gateway",
        "timestamp": 1610986488
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 18/01/2021 17:14, Pedro Sánchez Terraf wrote:</p>\n<blockquote>\n<p>While testing an AFP entry, I noticed some odd behavior in the rendering of<br>\nsub/superscripts in HTML output. It looks that &lt;sub&gt; and &lt;sup&gt; tags get mixed<br>\nwith surrounding &lt;span&gt; tags.</p>\n</blockquote>\n<p>This should work better in Isabelle2021-RC3. The relevant change is<br>\n<a href=\"https://isabelle.sketis.net/repos/isabelle-release/rev/624c2b98860a\">https://isabelle.sketis.net/repos/isabelle-release/rev/624c2b98860a</a> based on<br>\nearlier workarounds for pretty-printed output with markup.</p>\n<blockquote>\n<p>By the way, I'm still curious about the decision about (not) having<br>\nmulticharacter sub/supercript rendering support at jEdit.</p>\n</blockquote>\n<p>You mean Isabelle/jEdit: plain jEdit cannot even render single-symbol<br>\ncontrols. Likewise other editors, like VSCode: I don't want to depend too much<br>\non the peculiar rendering model of Isabelle/jEdit.</p>\n<p>In the HTML breakdown we see that there is a conceptual mismatch: the<br>\nblock-control symbols pretend to be markup, but should not do this.</p>\n<p>I will nonetheless reconsider the whole affair eventually, maybe as<br>\nsingle-control symbol for a cartouche.</p>\n<p>Makarius</p>",
        "id": 223829520,
        "sender_full_name": "Email Gateway",
        "timestamp": 1611515184
    },
    {
        "content": "<p>From: Pedro Sánchez Terraf &lt;<a href=\"mailto:sterraf@famaf.unc.edu.ar\">sterraf@famaf.unc.edu.ar</a>&gt;<br>\nEl 24/1/21 a las 16:06, Makarius escribió:</p>\n<blockquote>\n<p>On 18/01/2021 17:14, Pedro Sánchez Terraf wrote:</p>\n<blockquote>\n<p>While testing an AFP entry, I noticed some odd behavior in the rendering of<br>\nsub/superscripts in HTML output. It looks that &lt;sub&gt; and &lt;sup&gt; tags get mixed<br>\nwith surrounding &lt;span&gt; tags.<br>\nThis should work better in Isabelle2021-RC3. The relevant change is<br>\n<a href=\"https://isabelle.sketis.net/repos/isabelle-release/rev/624c2b98860a\">https://isabelle.sketis.net/repos/isabelle-release/rev/624c2b98860a</a> based on<br>\nearlier workarounds for pretty-printed output with markup.</p>\n</blockquote>\n</blockquote>\n<p>Thanks for your work.</p>\n<blockquote>\n<blockquote>\n<p>By the way, I'm still curious about the decision about (not) having<br>\nmulticharacter sub/supercript rendering support at jEdit.<br>\nI will nonetheless reconsider the whole affair eventually, maybe as<br>\nsingle-control symbol for a cartouche.<br>\nThis is great.</p>\n</blockquote>\n</blockquote>",
        "id": 223957995,
        "sender_full_name": "Email Gateway",
        "timestamp": 1611607839
    }
]