[
    {
        "content": "<p>From: \"Eugene W. Stark\" &lt;<a href=\"mailto:isabelle-users@starkeffect.com\">isabelle-users@starkeffect.com</a>&gt;<br>\nThis has occurred again and I was able to capture the files involved.  I am forwarding them to you<br>\nin an off-list message.  I would note that it is not necessarily repeatable on every try -- I think<br>\nit must depend on some cache state or other randomness.  However, I hope that if you try it several<br>\ntimes you will be able to repeat what I am seeing (I included a screenshot to show it).</p>\n<p>- Gene Stark</p>",
        "id": 226253000,
        "sender_full_name": "Email Gateway",
        "timestamp": 1613233253
    },
    {
        "content": "<p>From: Mathias Fleury &lt;<a href=\"mailto:mathias.fleury12@gmail.com\">mathias.fleury12@gmail.com</a>&gt;<br>\nHi Eugene,</p>\n<p>Thanks for providing the files. In your example the reconstruction with <br>\nby (smt (verit) ...) works but take more time than the timeout used by <br>\nSledgehammer.</p>\n<p>Sadly, this is an example that I cannot fix. Sledgehammer has some <br>\nexpectations on Skolemization steps that are not true for the proof <br>\nformat of veriT, leading to such weird bugs. Many proofs can be fitted <br>\nto fit the expectations, but others cannot easily -- and that one cannot.</p>\n<p>If this is a big issue for you, the solution is to remove veriT from the <br>\nprovers used by Sledgehammer.</p>\n<p>Sorry for the inconveniance,</p>\n<p>Mathias</p>",
        "id": 226480390,
        "sender_full_name": "Email Gateway",
        "timestamp": 1613460436
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThank you for looking into it: for me the main conclusion is that I<br>\ndon't have to worry about it for the final Isabelle2021 release (to<br>\nappear towards the end of the week).</p>\n<p>Makarius</p>",
        "id": 226495304,
        "sender_full_name": "Email Gateway",
        "timestamp": 1613470723
    },
    {
        "content": "<p>From: \"Eugene W. Stark\" &lt;<a href=\"mailto:isabelle-users@starkeffect.com\">isabelle-users@starkeffect.com</a>&gt;<br>\nThanks for looking into this.  However, I guess I am a little bit confused, as the issue was not that the reconstruction<br>\nby verit failed, but rather than an Isar \"proof\" with no \"shows\" was suggested.  Are these somehow related?</p>\n<p>- Gene Stark</p>",
        "id": 226506231,
        "sender_full_name": "Email Gateway",
        "timestamp": 1613477972
    },
    {
        "content": "<p>From: Mathias Fleury &lt;<a href=\"mailto:mathias.fleury12@gmail.com\">mathias.fleury12@gmail.com</a>&gt;<br>\nSorry for the confusing message.</p>\n<p>On 16/02/2021 13:19, Eugene W. Stark wrote:</p>\n<blockquote>\n<p>Thanks for looking into this.  However, I guess I am a little bit confused, as the issue was not that the reconstruction<br>\nby verit failed,</p>\n</blockquote>\n<p>(it times out, but succeeds if you wait a little longer)</p>\n<blockquote>\n<p>but rather than an Isar \"proof\" with no \"shows\" was suggested.  Are these somehow related?</p>\n</blockquote>\n<p>That is where the Sledgehammer assumption on the proof produced by veriT <br>\nquicks in.</p>\n<blockquote>\n<p>Are these somehow related?</p>\n</blockquote>\n<p>No. Both approach use veriT and parsing is shared, but everything else <br>\nis different.</p>\n<p>Mathias</p>\n<blockquote>\n<p>- Gene Stark</p>\n<p>On 2/16/21 2:26 AM, Mathias Fleury wrote:</p>\n<blockquote>\n<p>Hi Eugene,</p>\n<p>Thanks for providing the files. In your example the reconstruction with by (smt (verit) ...) works but take more time<br>\nthan the timeout used by Sledgehammer.</p>\n<p>Sadly, this is an example that I cannot fix. Sledgehammer has some expectations on Skolemization steps that are not true<br>\nfor the proof format of veriT, leading to such weird bugs. Many proofs can be fitted to fit the expectations, but others<br>\ncannot easily -- and that one cannot.</p>\n<p>If this is a big issue for you, the solution is to remove veriT from the provers used by Sledgehammer.</p>\n<p>Sorry for the inconveniance,</p>\n<p>Mathias</p>\n</blockquote>\n<p>On 13/02/2021 17:20, Eugene W. Stark wrote:</p>\n<blockquote>\n<blockquote>\n<p>This has occurred again and I was able to capture the files involved.  I am forwarding them to you<br>\nin an off-list message.  I would note that it is not necessarily repeatable on every try -- I think<br>\nit must depend on some cache state or other randomness.  However, I hope that if you try it several<br>\ntimes you will be able to repeat what I am seeing (I included a screenshot to show it).</p>\n<p>- Gene Stark<br>\n</p>\n</blockquote>\n<p>On 1/31/21 8:27 AM, Eugene W. Stark wrote:</p>\n<blockquote>\n<blockquote>\n<p>I apologize.  I tried to \"git stash\" to save what I had done since posting, but Isabelle auto-reloaded<br>\nthe theory I was working on and nuked the undo history.  I am finding it impossible now to work back<br>\nto the place where I observed the problem.</p>\n<p>If it occurs again, I will make a better effort to capture a context for you.  Thanks.</p>\n</blockquote>\n<p>On 1/31/21 7:47 AM, Eugene W. Stark wrote:</p>\n<blockquote>\n<blockquote>\n<p>It is part of a context of something like 3K lines of code.  Is that useful to you?</p>\n</blockquote>\n<p>On 1/31/21 7:43 AM, Mathias Fleury wrote:</p>\n<blockquote>\n<blockquote>\n<p>Hi Eugene,</p>\n<p>Can you also provide the lemma?</p>\n<p>The conversion from proofs generated by veriT to Isar proofs is very complicated, but I cannot fix it without being<br>\nthe<br>\ncontext to reproduce it…</p>\n<p>Thanks,</p>\n<p>Mathias<br>\n</p>\n</blockquote>\n<p>On 31/01/2021 13:31, Eugene W. Stark wrote:</p>\n<blockquote>\n<blockquote>\n<p>The following has happened to me twice now.  I have never seen this type of failure before.<br>\nUsing \"try\", I get the following suggestion:</p>\n<blockquote>\n<p>Trying \"solve_direct\", \"quickcheck\", \"try0\", \"sledgehammer\", and \"nitpick\"...<br>\n\"verit\": Sledgehammer (\"verit\") found a proof: by (smt (verit) \"1\" R.coinitial_ide_is_con R.comp_def<br>\nR.composite_of_def R.conI R.con_comp R.cong_reflexive R.has_composites' R.join_of_join R.join_of_unique_upto<br>\nR.join_src R.null_is_zero(1) R.pre_rts_axioms R.pre_rts_with_joins_axioms R.prfx_implies_con R.resid_reflects_con<br>\nR.residuation_axioms R.rts_axioms R.rts_with_composites_axioms R.src_eqI calculation commutative_square_def<br>\ncomp_null(1) null_char pre_rts.prfx_implies_con pre_rts_with_joins.has_joins residuation.arrI residuation.con_def<br>\nresiduation.con_iff_arr_resid residuation.con_sym rts.composite_comp(2) rts.extensional rts.resid_comp(1)<br>\nrts.resid_comp(2) rts.resid_join(1) rts.resid_join(2) rts.resid_join(3) rts_with_composites.comp_assoc seqI<br>\nseq_char)<br>\n(&gt; 1.0 s, timed out)</p>\n<p>Isar proof (4 ms):<br>\nproof -<br>\n     have \"h ▹ f ≠ h ▹ null ∨ null ≠ h ▹ null ∨ null ≠ R.null ∨ h ▹ f = R.null\"<br>\n       by auto<br>\nqed<br>\nThe Isar proof is not workable, for obvious reasons.</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>",
        "id": 226512642,
        "sender_full_name": "Email Gateway",
        "timestamp": 1613482240
    }
]