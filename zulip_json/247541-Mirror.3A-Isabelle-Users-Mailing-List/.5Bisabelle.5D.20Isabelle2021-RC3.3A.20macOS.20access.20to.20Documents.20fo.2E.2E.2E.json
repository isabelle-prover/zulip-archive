[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThere have been reports about problems accessing folders like \"Desktop\",<br>\n\"Documents\", \"Downloads\" etc.</p>\n<ul>\n<li>\n<p>When starting from the Terminal, e.g. as<br>\n\"<a href=\"http://Isabelle2021-RC3.app/Isabelle/bin/isabelle\">Isabelle2021-RC3.app/Isabelle/bin/isabelle</a> jedit\" an open operation in the<br>\neditor will provoke a system security dialog on behalf of the <a href=\"http://Terminal.app\">Terminal.app</a>.</p>\n</li>\n<li>\n<p>When starting the <a href=\"http://Isabelle2021-RC3.app\">Isabelle2021-RC3.app</a> directly in the finder, there is no<br>\nsuch dialog, only an empty directory listing (e.g. in the file-open dialog).</p>\n</li>\n</ul>\n<p>It looks like macOS is becoming more an more like a fortress.</p>\n<p>Maybe some macOS exports know some ways out of this security nightmare.</p>\n<p>Makarius</p>",
        "id": 223836861,
        "sender_full_name": "Email Gateway",
        "timestamp": 1611524252
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nFor some years now, I believe, MacOS has informed the user when a particular app seeks to access certain critical resources, including the folders you mention. This is to protect the user against malicious code. </p>\n<p>It is only necessary to approve the access once for each app.</p>\n<p>Larry</p>",
        "id": 223907379,
        "sender_full_name": "Email Gateway",
        "timestamp": 1611586472
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nBut this approval does not work: it is a consequence of my change to an older<br>\nform of .app with a toplevel shell script, instead of actual executable. See<br>\n<a href=\"https://isabelle-dev.sketis.net/rISABELLEa95f5ae5a12\">https://isabelle-dev.sketis.net/rISABELLEa95f5ae5a12</a> and further changes on<br>\ntop of it.</p>\n<p>The motivation was to make a hybrid app for Java x86_64-darwin and<br>\narm64-darwin (Apple Silicon).</p>\n<p>It might have been better to ignore Apple Silicon for now --- I would also<br>\nhave preferred to ignore macOS Big Sur, but in the last consequence it would<br>\nmean to ignore all of Apple (which has become the most powerful HW/SW tech<br>\ngiant on the planet).</p>\n<p>Makarius</p>",
        "id": 223911771,
        "sender_full_name": "Email Gateway",
        "timestamp": 1611588276
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nInteresting. What I am finding is different: I can read files on the Desktop and Downloads folders without granting permission. However, even if I use the System Preferences &gt; Security &amp; Privacy &gt; Privacy panel to grant “full disk access”, the app seems unable to see any files in the Documents folder. Weird but not a serious problem, if documented.</p>\n<p>Larry</p>",
        "id": 223914571,
        "sender_full_name": "Email Gateway",
        "timestamp": 1611589341
    },
    {
        "content": "<p>From: Frédéric Boulanger &lt;<a href=\"mailto:frederic.boulanger@lri.fr\">frederic.boulanger@lri.fr</a>&gt;<br>\nI am not sure if this could solve the M1/Big Sur issue, but I just tried to use an AppleScript exported as an Application to launch Isabelle, and the first time I try to open a file under \"Documents\", I am asked if I want to allow that, and the setting is remembered when I quit Isabelle and launch it again through the AppleScript App. The \"applet\" binary inside the exported Application has both x86_64 and arm64 architectures.</p>\n<p>Here is the (simple) code I wrote to launch Isabelle :</p>\n<p>on run do<br>\n    set isabelle to the quoted form of POSIX path of \"/Applications/Isabelle2021-RC3.app/Contents/Resources/Isabelle2021-RC3/bin/isabelle\"<br>\n    do shell script isabelle &amp; \" jedit\"<br>\nend run</p>\n<p>on open (dropedItems)<br>\n    set isabelle to the quoted form of POSIX path of \"/Applications/Isabelle2021-RC3.app/Contents/Resources/Isabelle2021-RC3/bin/isabelle\"<br>\n    set myFiles to \" \"<br>\n    repeat with f in dropedItems<br>\n        set myFiles to myFiles &amp; \" \" &amp; the quoted form of POSIX path of f<br>\n    end repeat<br>\n    do shell script isabelle &amp; \" jedit\" &amp; myFiles<br>\nend open</p>\n<p>The \"open\" handler is useful for opening files when launching Isabelle, but this is too basic to handle files dropped on the application while Isabelle is already running.</p>\n<p>Frédéric</p>\n<p>Frédéric Boulanger<br>\nCentraleSupélec - Département Informatique  Laboratoire Méthodes Formelles (LMF)<br>\n3 rue Joliot-Curie, 91192 Gif-sur-Yvette cedex  Bât. 650 - 1 rue Raimond Castaing, 91190 Gif-sur-Yvette<br>\n+33 [0]1 69 85 14 84</p>",
        "id": 223924183,
        "sender_full_name": "Email Gateway",
        "timestamp": 1611592749
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nRemark: The existing Isabelle Mac App already provides some basic Mac-like functionality, but it would be great to see it upgraded with code such as this. Though maybe not in time for 2021 :-(</p>\n<p>Larry</p>",
        "id": 223924910,
        "sender_full_name": "Email Gateway",
        "timestamp": 1611593083
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe formal task is now <a href=\"https://isabelle-dev.sketis.net/T37\">https://isabelle-dev.sketis.net/T37</a> --- I have also<br>\nadded some links to discussions about this problems for Fontforge, Gimp, Inkscape.</p>\n<p>This was first reported almost 1 year ago, so there is an indication that<br>\nApple does not care about Unix-style shell script apps.</p>\n<p>Makarius</p>",
        "id": 223926408,
        "sender_full_name": "Email Gateway",
        "timestamp": 1611593683
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nToday I tried a different experiment: to access the Documents folder (which I seldom normally use) from Isabelle2020. I got the expected pop-up, clicked okay and finally was able to open a theory file I had put there. With the Isabelle2021 release candidate however, there was no pop-up and the Documents folder was displayed as empty.</p>\n<p>This difference is odd given that the application bundles are surely produced from the Isabelle sources in the same way, but I did notice major differences in the respective copies of info.plist and conceivably something like that is where the explanation lies.</p>\n<p>Larry</p>",
        "id": 224016617,
        "sender_full_name": "Email Gateway",
        "timestamp": 1611654533
    },
    {
        "content": "<p>From: Frédéric Boulanger &lt;<a href=\"mailto:frederic.boulanger@lri.fr\">frederic.boulanger@lri.fr</a>&gt;<br>\nThis difference comes from the fact that what is executed when you launch the RC is a shell script (/Applications/Isabelle2021-RC3.app/Isabelle2021-RC3), while it is a Mach-O executable in the case of Isabelle2020 (/Applications/Isabelle2020.app/Contents/MacOS/JavaAppLauncher). It seems that MacOS does not handle authorizations in the same way for scripts and for binary executables.</p>\n<p>If I remember well, when you start Isabelle in the terminal using \"isabelle jedit\", the authorization to access the \"Documents\" folder is given to the Terminal application, not to the isabelle shell script.</p>\n<p>Frédéric</p>\n<p>Frédéric Boulanger<br>\nCentraleSupélec - Département Informatique  Laboratoire Méthodes Formelles (LMF)<br>\n3 rue Joliot-Curie, 91192 Gif-sur-Yvette cedex  Bât. 650 - 1 rue Raimond Castaing, 91190 Gif-sur-Yvette<br>\n+33 [0]1 69 85 14 84</p>",
        "id": 224019028,
        "sender_full_name": "Email Gateway",
        "timestamp": 1611656135
    },
    {
        "content": "<p>From: Jakub Kądziołka &lt;<a href=\"mailto:kuba@kadziolka.net\">kuba@kadziolka.net</a>&gt;<br>\nOn Mon Jan 25, 2021 at 5:38 PM CET, Frédéric Boulanger wrote:</p>\n<blockquote>\n<p>Here is the (simple) code I wrote to launch Isabelle :</p>\n<p>on run do<br>\n  set isabelle to the quoted form of POSIX path of \"/Applications/Isabelle2021-RC3.app/Contents/Resources/Isabelle2021-RC3/bin/isabelle\"<br>\n  do shell script isabelle &amp; \" jedit\"<br>\nend run</p>\n<p>on open (dropedItems)</p>\n</blockquote>\n<p>Is this typo (droped with a single p) a part of the Apple API, or would<br>\nit be possible to correct it?</p>\n<blockquote>\n<p>set isabelle to the quoted form of POSIX path of \"/Applications/Isabelle2021-RC3.app/Contents/Resources/Isabelle2021-RC3/bin/isabelle\"<br>\n  set myFiles to \" \"<br>\n  repeat with f in dropedItems<br>\n      set myFiles to myFiles &amp; \" \" &amp; the quoted form of POSIX path of f<br>\n  end repeat<br>\n  do shell script isabelle &amp; \" jedit\" &amp; myFiles<br>\nend open</p>\n</blockquote>\n<p>Regards,<br>\nJakub Kądziołka</p>",
        "id": 224024038,
        "sender_full_name": "Email Gateway",
        "timestamp": 1611659297
    },
    {
        "content": "<p>From: Frédéric Boulanger &lt;<a href=\"mailto:frederic.boulanger@lri.fr\">frederic.boulanger@lri.fr</a>&gt;<br>\nJust a typo. It is just the name of the argument on the \"open\" handler, you can use any valid identifier.</p>\n<p>See <a href=\"https://help.apple.com/applescript/mac/10.9/#apscrpt1131\">https://help.apple.com/applescript/mac/10.9/#apscrpt1131</a> &lt;<a href=\"https://help.apple.com/applescript/mac/10.9/#apscrpt1131\">https://help.apple.com/applescript/mac/10.9/#apscrpt1131</a>&gt;</p>\n<p>Best regards,<br>\nFrédéric</p>\n<p>Frédéric Boulanger<br>\nCentraleSupélec - Département Informatique  Laboratoire Méthodes Formelles (LMF)<br>\n3 rue Joliot-Curie, 91192 Gif-sur-Yvette cedex  Bât. 650 - 1 rue Raimond Castaing, 91190 Gif-sur-Yvette<br>\n+33 [0]1 69 85 14 84</p>",
        "id": 224031449,
        "sender_full_name": "Email Gateway",
        "timestamp": 1611664198
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nYes, the new shell script is an indirect consequence of of supporting both<br>\narm64-darwin and x86_64-darwin while replacing Adopt OpenJDK by Zulu OpenJDK.</p>\n<p>Afterwards the old JavaAppLauncher stopped working: it refers to a particular<br>\nshared library of Java, which is unlikely to be able to change from x86_64 to<br>\narm64 on the spot.</p>\n<p>In contrast, the Rosetta 2 system is able to run x86_64 Java, but it is one<br>\nlevel of extra indirection: JVM-bytecode translation followed by x86_64<br>\nmachine code translation. I wanted to reduce this insanity a bit by using<br>\nnative arm64 JDK.</p>\n<p>In the space of possibilities there are surely other points of stability ---<br>\nlike the Apple Script app or maybe just a plain C app wrapper like we have for<br>\nLinux:<br>\n<a href=\"https://isabelle.sketis.net/repos/isabelle-release/file/Isabelle2021-RC3/Admin/Linux/Isabelle.c\">https://isabelle.sketis.net/repos/isabelle-release/file/Isabelle2021-RC3/Admin/Linux/Isabelle.c</a></p>\n<p>I will continue the experiments.</p>\n<p>Makarius</p>",
        "id": 224061273,
        "sender_full_name": "Email Gateway",
        "timestamp": 1611677212
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe plain C app wrapper works and the solution will be in the next release<br>\ncandidate (first week of February).</p>\n<p>See also <a href=\"https://isabelle-dev.sketis.net/T37#479\">https://isabelle-dev.sketis.net/T37#479</a></p>\n<p>Makarius</p>",
        "id": 224113100,
        "sender_full_name": "Email Gateway",
        "timestamp": 1611699562
    }
]