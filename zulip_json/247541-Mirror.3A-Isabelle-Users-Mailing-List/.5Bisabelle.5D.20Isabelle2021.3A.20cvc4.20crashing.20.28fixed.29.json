[
    {
        "content": "<p>From: Ujkan Sulejmani &lt;<a href=\"mailto:ujkan99@gmail.com\">ujkan99@gmail.com</a>&gt;<br>\nI had been experiencing regular cvc4 crashes (in prior Isabelle versions<br>\ntoo, namely 2019 and 2020) when sledgehammer couldn’t find a proof. (crash<br>\nlog below). I found a fix in one of the GitHub issues raised in the cvc5<br>\nrepo [https://github.com/cvc5/cvc5/pull/6518/files] (this fix was indeed<br>\nincorporated in cvc5) and managed to carry it over to Isabelle by building<br>\ncvc4-1.8 from the modified source code and using that binary instead of the<br>\ndefault one. This seems OK thus far—I haven’t experienced any crashes.<br>\nPerhaps the developers could include this in the next release.<br>\n++++<br>\nLog:</p>\n<p>Process:               cvc4 [62181]<br>\nPath:<br>\n /Applications/Isabelle2021.app/contrib/cvc4-1.8/x86_64-darwin/cvc4<br>\nIdentifier:            cvc4<br>\nVersion:               0<br>\nCode Type:             X86-64 (Native)<br>\nParent Process:        ??? [62179]<br>\nResponsible:           java [52368]<br>\nUser ID:               501</p>\n<p>Date/Time:             2021-11-15 13:21:08.924 +0100<br>\nOS Version:            macOS 11.6 (20G165)<br>\nReport Version:        12<br>\nAnonymous UUID:        14D42243-651D-5AB4-3D11-CAE3CDF468E0</p>\n<p>Sleep/Wake UUID:       73F0573A-597F-44BA-B7B0-70E1C77F6FAF</p>\n<p>Time Awake Since Boot: 93000 seconds<br>\nTime Since Wake:       12000 seconds</p>\n<p>System Integrity Protection: disabled</p>\n<p>Crashed Thread:        0  Dispatch queue: com.apple.main-thread</p>\n<p>Exception Type:        EXC_CRASH (SIGABRT)<br>\nException Codes:       0x0000000000000000, 0x0000000000000000<br>\nException Note:        EXC_CORPSE_NOTIFY</p>\n<p>Application Specific Information:<br>\ndyld2 mode<br>\nabort() called</p>\n<p>Thread 0 Crashed:: Dispatch queue: com.apple.main-thread<br>\n0   libsystem_kernel.dylib         0x00007fff2038a92e __pthread_kill + 10<br>\n1   libsystem_pthread.dylib       0x00007fff203b95bd pthread_kill + 263<br>\n2   libsystem_c.dylib             0x00007fff2030e406 abort + 125<br>\n3   cvc4                           0x000000010aa0910d<br>\nCVC4::main::sigint_handler(int, __siginfo<em>, void</em>) (.cold.1) + 29<br>\n4   cvc4                           0x00000001099f1049<br>\nCVC4::main::sigint_handler(int, __siginfo<em>, void</em>) + 9<br>\n5   libsystem_platform.dylib       0x00007fff203fed7d _sigtramp + 29<br>\n6   libsystem_malloc.dylib         0x00007fff201e2f0a<br>\ntiny_malloc_from_free_list + 555<br>\n7   cvc4                           0x000000010a0a9368<br>\nCVC4::theory::inst::CandidateGeneratorQE::getNextCandidate() + 936<br>\n8   cvc4                           0x000000010a0bd372<br>\nCVC4::theory::inst::InstMatchGenerator::getNextMatch(CVC4::NodeTemplate&lt;true&gt;,<br>\nCVC4::theory::inst::InstMatch&amp;, CVC4::theory::QuantifiersEngine*,<br>\nCVC4::theory::inst::Trigger*) + 738<br>\n9   cvc4                           0x000000010a0bc3b3<br>\nCVC4::theory::inst::InstMatchGenerator::continueNextMatch(CVC4::NodeTemplate&lt;true&gt;,<br>\nCVC4::theory::inst::InstMatch&amp;, CVC4::theory::QuantifiersEngine*,<br>\nCVC4::theory::inst::Trigger*) + 67<br>\n10  cvc4                           0x000000010a0bb797<br>\nCVC4::theory::inst::InstMatchGenerator::getMatch(CVC4::NodeTemplate&lt;true&gt;,<br>\nCVC4::NodeTemplate&lt;true&gt;, CVC4::theory::inst::InstMatch&amp;,<br>\nCVC4::theory::QuantifiersEngine<em>, CVC4::theory::inst::Trigger</em>) + 5687<br>\n11  cvc4                           0x000000010a0bd2c2<br>\nCVC4::theory::inst::InstMatchGenerator::getNextMatch(CVC4::NodeTemplate&lt;true&gt;,<br>\nCVC4::theory::inst::InstMatch&amp;, CVC4::theory::QuantifiersEngine*,<br>\nCVC4::theory::inst::Trigger*) + 562<br>\n12  cvc4                           0x000000010a0bc3b3<br>\nCVC4::theory::inst::InstMatchGenerator::continueNextMatch(CVC4::NodeTemplate&lt;true&gt;,<br>\nCVC4::theory::inst::InstMatch&amp;, CVC4::theory::QuantifiersEngine*,<br>\nCVC4::theory::inst::Trigger*) + 67<br>\n13  cvc4                           0x000000010a0bb797<br>\nCVC4::theory::inst::InstMatchGenerator::getMatch(CVC4::NodeTemplate&lt;true&gt;,<br>\nCVC4::NodeTemplate&lt;true&gt;, CVC4::theory::inst::InstMatch&amp;,<br>\nCVC4::theory::QuantifiersEngine<em>, CVC4::theory::inst::Trigger</em>) + 5687<br>\n14  cvc4                           0x000000010a0bd2c2<br>\nCVC4::theory::inst::InstMatchGenerator::getNextMatch(CVC4::NodeTemplate&lt;true&gt;,<br>\nCVC4::theory::inst::InstMatch&amp;, CVC4::theory::QuantifiersEngine*,<br>\nCVC4::theory::inst::Trigger*) + 562<br>\n15  cvc4                           0x000000010a0bc3b3<br>\nCVC4::theory::inst::InstMatchGenerator::continueNextMatch(CVC4::NodeTemplate&lt;true&gt;,<br>\nCVC4::theory::inst::InstMatch&amp;, CVC4::theory::QuantifiersEngine*,<br>\nCVC4::theory::inst::Trigger*) + 67<br>\n16  cvc4                           0x000000010a0bb797<br>\nCVC4::theory::inst::InstMatchGenerator::getMatch(CVC4::NodeTemplate&lt;true&gt;,<br>\nCVC4::NodeTemplate&lt;true&gt;, CVC4::theory::inst::InstMatch&amp;,<br>\nCVC4::theory::QuantifiersEngine<em>, CVC4::theory::inst::Trigger</em>) + 5687<br>\n17  cvc4                           0x000000010a0bd2c2<br>\nCVC4::theory::inst::InstMatchGenerator::getNextMatch(CVC4::NodeTemplate&lt;true&gt;,<br>\nCVC4::theory::inst::InstMatch&amp;, CVC4::theory::QuantifiersEngine*,<br>\nCVC4::theory::inst::Trigger*) + 562<br>\n18  cvc4                           0x000000010a0bc3b3<br>\nCVC4::theory::inst::InstMatchGenerator::continueNextMatch(CVC4::NodeTemplate&lt;true&gt;,<br>\nCVC4::theory::inst::InstMatch&amp;, CVC4::theory::QuantifiersEngine*,<br>\nCVC4::theory::inst::Trigger*) + 67<br>\n19  cvc4                           0x000000010a0c0701<br>\nCVC4::theory::inst::InstMatchGeneratorMultiLinear::getNextMatch(CVC4::NodeTemplate&lt;true&gt;,<br>\nCVC4::theory::inst::InstMatch&amp;, CVC4::theory::QuantifiersEngine*,<br>\nCVC4::theory::inst::Trigger*) + 113<br>\n20  cvc4                           0x000000010a0bdaac<br>\nCVC4::theory::inst::InstMatchGenerator::addInstantiations(CVC4::NodeTemplate&lt;true&gt;,<br>\nCVC4::theory::QuantifiersEngine<em>, CVC4::theory::inst::Trigger</em>) + 140<br>\n21  cvc4                           0x000000010a0dae33<br>\nCVC4::theory::inst::Trigger::addInstantiations() + 51<br>\n22  cvc4                           0x000000010a0c9786<br>\nCVC4::theory::quantifiers::InstStrategyAutoGenTriggers::process(CVC4::NodeTemplate&lt;true&gt;,<br>\nCVC4::theory::Theory::Effort, int) + 2214<br>\n23  cvc4                           0x000000010a0d7b16<br>\nCVC4::theory::quantifiers::InstantiationEngine::doInstantiationRound(CVC4::theory::Theory::Effort)</p>\n<ul>\n<li>262<br>\n24  cvc4                           0x000000010a0d8002<br>\nCVC4::theory::quantifiers::InstantiationEngine::check(CVC4::theory::Theory::Effort,<br>\nCVC4::theory::QuantifiersModule::QEffort) + 546<br>\n25  cvc4                           0x000000010a31c3df<br>\nCVC4::theory::QuantifiersEngine::check(CVC4::theory::Theory::Effort) + 1567<br>\n26  cvc4                           0x000000010a55f00f<br>\nCVC4::TheoryEngine::check(CVC4::theory::Theory::Effort) + 1391<br>\n27  cvc4                           0x0000000109c03ed1<br>\nCVC4::prop::TheoryProxy::theoryCheck(CVC4::theory::Theory::Effort) + 161<br>\n28  cvc4                           0x0000000109befa44<br>\nCVC4::Minisat::Solver::propagate(CVC4::Minisat::Solver::TheoryCheckType) +<br>\n84<br>\n29  cvc4                           0x0000000109bf3ab1<br>\nCVC4::Minisat::Solver::search(int) + 129<br>\n30  cvc4                           0x0000000109bf4938<br>\nCVC4::Minisat::Solver::solve_() + 360<br>\n31  cvc4                           0x0000000109bfd8a9<br>\nCVC4::Minisat::SimpSolver::solve_(bool, bool) + 505<br>\n32  cvc4                           0x0000000109bfb017<br>\nCVC4::prop::MinisatSatSolver::solve() + 103<br>\n33  cvc4                           0x0000000109c02ddd<br>\nCVC4::prop::PropEngine::checkSat() + 141<br>\n34  cvc4                           0x0000000109c47093<br>\nCVC4::SmtEngine::check() + 483<br>\n35  cvc4                           0x0000000109c49000<br>\nCVC4::SmtEngine::checkSatisfiability(std::__1::vector&lt;CVC4::Expr,<br>\nstd::__1::allocator&lt;CVC4::Expr&gt; &gt; const&amp;, bool, bool) + 1264<br>\n36  cvc4                           0x0000000109c48823<br>\nCVC4::SmtEngine::checkSatisfiability(CVC4::Expr const&amp;, bool, bool) + 179<br>\n37  cvc4                           0x0000000109c4870d<br>\nCVC4::SmtEngine::checkSat(CVC4::Expr const&amp;, bool) + 157<br>\n38  cvc4                           0x0000000109c06c26<br>\nCVC4::CheckSatCommand::invoke(CVC4::SmtEngine*) + 38<br>\n39  cvc4                           0x0000000109c05661<br>\nCVC4::Command::invoke(CVC4::SmtEngine*, std::__1::basic_ostream&lt;char,<br>\nstd::__1::char_traits&lt;char&gt; &gt;&amp;) + 33<br>\n40  cvc4                           0x00000001099edf97<br>\nCVC4::main::smtEngineInvoke(CVC4::SmtEngine<em>, CVC4::Command</em>,<br>\nstd::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;*) + 39<br>\n41  cvc4                           0x00000001099ecea9<br>\nCVC4::main::CommandExecutor::doCommandSingleton(CVC4::Command*) + 73<br>\n42  cvc4                           0x00000001099ecda5<br>\nCVC4::main::CommandExecutor::doCommand(CVC4::Command*) + 293<br>\n43  cvc4                           0x00000001099e927b runCvc4(int, char**,<br>\nCVC4::Options&amp;) + 5947<br>\n44  cvc4                           0x00000001099ec611 main + 49<br>\n45  libdyld.dylib                 0x00007fff203d4f3d start + 1</li>\n</ul>\n<p>Thread 0 crashed with X86 Thread State (64-bit):<br>\n  rax: 0x0000000000000000  rbx: 0x0000000119e82e00  rcx: 0x00007ffee6212a58<br>\n rdx: 0x0000000000000000<br>\n  rdi: 0x0000000000000103  rsi: 0x0000000000000006  rbp: 0x00007ffee6212a80<br>\n rsp: 0x00007ffee6212a58<br>\n   r8: 0x00007ffee6212f88   r9: 0x73b6e354d7a03e80  r10: 0x0000000000000000<br>\n r11: 0x0000000000000246<br>\n  r12: 0x0000000000000103  r13: 0x0000000000000000  r14: 0x0000000000000006<br>\n r15: 0x0000000000000016<br>\n  rip: 0x00007fff2038a92e  rfl: 0x0000000000000246  cr2: 0x000000010aa090f0</p>\n<p>Logical CPU:     0<br>\nError Code:      0x02000148<br>\nTrap Number:     133</p>\n<p>Thread 0 instruction stream not available.</p>\n<p>Thread 0 last branch register state not available.</p>\n<p>Binary Images:<br>\n       0x1099e6000 -        0x10ad6dfff +cvc4 (0)<br>\n&lt;127E97F5-EDB2-3A00-94B8-B5AEB8E9BFE1&gt;<br>\n/Applications/Isabelle2021.app/contrib/cvc4-1.8/x86_64-darwin/cvc4<br>\n       0x119dab000 -        0x119e46fff  dyld (852.2)<br>\n&lt;0CC19410-FD43-39AE-A32A-50273F8303A4&gt; /usr/lib/dyld<br>\n    0x7fff200f1000 -     0x7fff200f2fff  libsystem_blocks.dylib (79)<br>\n&lt;925E3B6D-184D-3E73-97B1-643C4ADB387A&gt;<br>\n/usr/lib/system/libsystem_blocks.dylib<br>\n    0x7fff200f3000 -     0x7fff20128fff  libxpc.dylib (2038.120.1)<br>\n&lt;FFFB49D7-2CA6-3E1F-AE4E-5697B19B7D76&gt; /usr/lib/system/libxpc.dylib<br>\n    0x7fff20129000 -     0x7fff20140fff  libsystem_trace.dylib (1277.120.1)<br>\n&lt;7E800ECA-DFDB-3737-A3C5-FFDE37E65383&gt; /usr/lib/system/libsystem_trace.dylib<br>\n    0x7fff20141000 -     0x7fff201defff  libcorecrypto.dyl<br>\n[message truncated]</p>",
        "id": 261614508,
        "sender_full_name": "Email Gateway",
        "timestamp": 1637054339
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nConcerning a cvc4 / cvc5 update, next release means Isabelle2022 (approx.<br>\nOctober 2022).</p>\n<p>For Isabelle2021-1 (December 2021) it is too late: We have updated so many<br>\nprovers for that, but could not revisit cvc4, z3, smbc.</p>\n<p>Makarius</p>",
        "id": 262721827,
        "sender_full_name": "Email Gateway",
        "timestamp": 1637855912
    }
]