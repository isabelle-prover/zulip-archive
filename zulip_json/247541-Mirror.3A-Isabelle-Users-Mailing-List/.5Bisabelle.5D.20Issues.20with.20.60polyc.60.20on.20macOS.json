[
    {
        "content": "<p>From: Simon Wimmer &lt;<a href=\"mailto:wimmersimon@gmail.com\">wimmersimon@gmail.com</a>&gt;<br>\nThe executable <code>polyc</code> of Poly/ML 5.9.1 is broken in multiple ways on Mac.</p>\n<p>This pertains both to the versions bundled with Isabelle2025 as well as the<br>\nhomebrew build.<br>\nThis issue (<a href=\"https://github.com/polyml/polyml/issues/194\">https://github.com/polyml/polyml/issues/194</a>) names the<br>\nproblems, and suggests fixes (in <code>polyc</code>):</p>\n<ul>\n<li>Add <code>-ld_classic</code> to <code>EXTRALDFLAGS</code></li>\n<li>Remove quotes around <code>LINK</code></li>\n</ul>\n<p>I stumbled upon this since I wanted to compile exported SML code with<br>\n<code>polyc</code> in <code>compile_generated_files</code> for an AFP entry.<br>\nUntil a new version of Poly/ML is released, what is a recommended<br>\nworkaround?<br>\nIs there something like <code>theories [condition= ]</code> (in a ROOT file) to skip<br>\nthe theory with the call to <code>compile_generated_files</code> on macOS?</p>\n<p>Thanks,<br>\nSimon</p>",
        "id": 515716194,
        "sender_full_name": "Email Gateway",
        "timestamp": 1746193080
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 02/05/2025 15:37, Simon Wimmer wrote:</p>\n<blockquote>\n<p>The executable <code>polyc</code> of Poly/ML 5.9.1 is broken in multiple ways on Mac.</p>\n<p>This pertains both to the versions bundled with Isabelle2025 as well as the <br>\nhomebrew build.<br>\nThis issue (<a href=\"https://github.com/polyml/polyml/issues/194\">https://github.com/polyml/polyml/issues/194</a> &lt;<a href=\"https://github.com/\">https://github.com/</a> <br>\npolyml/polyml/issues/194&gt;) names the problems, and suggests fixes (in <code>polyc</code>):<br>\n- Add <code>-ld_classic</code> to <code>EXTRALDFLAGS</code><br>\n- Remove quotes around <code>LINK</code></p>\n<p>I stumbled upon this since I wanted to compile exported SML code with <code>polyc</code> <br>\nin <code>compile_generated_files</code> for an AFP entry.</p>\n</blockquote>\n<p>Note that polyc is inherently non-portable: it depends on many side-conditions <br>\nof the underlying C development environment.</p>\n<p>That is not included in the standard repertoire of Isabelle tools, and the AFP <br>\neditors should reject an entry that uses \"polyc\" (if they actually notice it).</p>\n<p>To test generated ML program text with Poly/ML, the usual approach is to use <br>\nthe running Isabelle/ML environment, and essentially \"eval\" the source (as <br>\ndone in LISP many decades ago). E.g. see the Isabelle/Isar command \"value <br>\n[PolyML]\".</p>\n<blockquote>\n<p>Until a new version of Poly/ML is released, what is a recommended workaround?<br>\nIs there something like <code>theories [condition= ]</code> (in a ROOT file) to skip the <br>\ntheory with the call to <code>compile_generated_files</code> onÂ macOS?</p>\n</blockquote>\n<p>There is no workaround, because using polyc is not supported.</p>\n<p>Makarius</p>",
        "id": 519845785,
        "sender_full_name": "Email Gateway",
        "timestamp": 1747922995
    },
    {
        "content": "<p>From: Simon Wimmer &lt;<a href=\"mailto:wimmersimon@gmail.com\">wimmersimon@gmail.com</a>&gt;<br>\nThanks, Makarius.</p>\n<p>I solved the issue by adding a switch (enabled by default) for \"eval\" with<br>\nthe Isabelle//ML environment rather than compilation with <code>polyc</code>.</p>\n<p>I couldn't really work out what \"value [PolyML]\" refers to, but I found<br>\nsome helpful breadcrumbs by looking at <code>HOL/Library/code_test.ML</code>.</p>\n<p>Simon</p>\n<p>Am Do., 22. Mai 2025 um 16:00 Uhr schrieb Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;:</p>\n<blockquote>\n<p>On 02/05/2025 15:37, Simon Wimmer wrote:</p>\n<blockquote>\n<p>The executable <code>polyc</code> of Poly/ML 5.9.1 is broken in multiple ways on<br>\nMac.</p>\n<p>This pertains both to the versions bundled with Isabelle2025 as well as<br>\nthe<br>\nhomebrew build.<br>\nThis issue (<a href=\"https://github.com/polyml/polyml/issues/194\">https://github.com/polyml/polyml/issues/194</a> &lt;<br>\n<a href=\"https://github.com/\">https://github.com/</a><br>\npolyml/polyml/issues/194&gt;) names the problems, and suggests fixes (in<br>\n<code>polyc</code>):<br>\n- Add <code>-ld_classic</code> to <code>EXTRALDFLAGS</code><br>\n- Remove quotes around <code>LINK</code></p>\n<p>I stumbled upon this since I wanted to compile exported SML code with<br>\n<code>polyc</code><br>\nin <code>compile_generated_files</code> for an AFP entry.</p>\n</blockquote>\n<p>Note that polyc is inherently non-portable: it depends on many<br>\nside-conditions<br>\nof the underlying C development environment.</p>\n<p>That is not included in the standard repertoire of Isabelle tools, and the<br>\nAFP<br>\neditors should reject an entry that uses \"polyc\" (if they actually notice<br>\nit).</p>\n<p>To test generated ML program text with Poly/ML, the usual approach is to<br>\nuse<br>\nthe running Isabelle/ML environment, and essentially \"eval\" the source (as<br>\ndone in LISP many decades ago). E.g. see the Isabelle/Isar command \"value<br>\n[PolyML]\".</p>\n<blockquote>\n<p>Until a new version of Poly/ML is released, what is a recommended<br>\nworkaround?<br>\nIs there something like <code>theories [condition= ]</code> (in a ROOT file) to<br>\nskip the<br>\ntheory with the call to <code>compile_generated_files</code> on macOS?</p>\n</blockquote>\n<p>There is no workaround, because using polyc is not supported.</p>\n<p>Makarius</p>\n</blockquote>",
        "id": 521040928,
        "sender_full_name": "Email Gateway",
        "timestamp": 1748505589
    }
]