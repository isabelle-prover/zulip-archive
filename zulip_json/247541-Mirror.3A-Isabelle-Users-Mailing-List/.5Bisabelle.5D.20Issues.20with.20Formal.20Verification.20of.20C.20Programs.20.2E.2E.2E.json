[
    {
        "content": "<p>From: \"\\\"DongZe Su\\\"\" &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nDear all,<br>\nI have been recently using autocorres for the formal verification of C<br>\nprograms, but I am now facing three issues and cannot find the corresponding<br>\ndocumentation or solutions.</p>\n<ol>\n<li>\n<p>Taking the swap function as an example, its proof process is as follows:<br>\nlemma “{| λs. is_valid_w32 s a ∧ s[a] = x ∧ is_valid_w32 s b ∧ s[b] = y |}<br>\nswap 0 a b {| λ_ s. s[a] = y ∧ s[b] = x |}”<br>\n   apply (unfold swap’_def)<br>\n   apply wp<br>\n   apply clarsimp<br>\n   apply (simp add: fun-upd-apply)<br>\n   done<br>\nI understand that the lemma is written according to the Hoare logic<br>\nprecondition and postcondition. However, I couldn't find the detailed<br>\nexplanation of the {| |} syntax in the current documentation, only the<br>\nexplanation of [| |]. So I would like to know what the specific meaning of the<br>\nsyntax used here is.</p>\n</li>\n<li>\n<p>When verifying a C function that calls other functions in other files, how<br>\nshould we introduce the definitions of other functions? For example, there is<br>\na function FuncA in FileA.c and a function FuncB in FileB.c, and FuncA calls<br>\nFuncB. Using install_c_file FileA.c only reads the definition of FuncA, and<br>\nFuncB is recorded as Func_Body_Not_In_Input_C_File. However, if we use<br>\ninstall_c_file FileA.c install_c_file FileB.c it will report an error that<br>\nFuncB is defined twice.</p>\n</li>\n<li>\n<p>Sometimes the Isabelle error messages are very difficult to understand,<br>\nespecially when using autocorres.</p>\n</li>\n</ol>\n<p>Thanks！<br>\nBest regards</p>",
        "id": 423156476,
        "sender_full_name": "Email Gateway",
        "timestamp": 1708769238
    }
]