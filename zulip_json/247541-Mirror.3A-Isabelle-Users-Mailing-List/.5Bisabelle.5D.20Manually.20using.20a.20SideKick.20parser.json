[
    {
        "content": "<p>From: MACKENZIE Carlin &lt;<a href=\"mailto:s1724780@sms.ed.ac.uk\">s1724780@sms.ed.ac.uk</a>&gt;<br>\nDear all,</p>\n<p>I would like to run a parser, say \"isabelle-context\", from isabelle_sidekick.scala on a theory file and examine the output. Could someone advise on how to do this? I'm not sure where to look for an example call in the code</p>\n<p>Thank you,<br>\nCarlin MacKenzie<br>\nThe University of Edinburgh</p>\n<p>The University of Edinburgh is a charitable body, registered in Scotland, with registration number SC005336.</p>",
        "id": 217128002,
        "sender_full_name": "Email Gateway",
        "timestamp": 1605702555
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nWhat do you mean by \"examine the output\"? Should the Prover IDE show it to the<br>\nuser, or a Scala program of yours work with it?</p>\n<p>If you just want to experiment with Isabelle/Scala snippets, you can do it in<br>\nthe jEdit plugin \"Console\", sub-plugin \"Scala\": it is a REPL of the Scala<br>\ninterpreter running on the JVM of Isabelle/jEdit with access to the name space<br>\nof the running application.</p>\n<p>Here is an example derived from the Sidekick parser for \"isabelle-context\"<br>\n<a href=\"https://isabelle.sketis.net/repos/isabelle/file/Isabelle2020/src/Tools/jEdit/src/isabelle_sidekick.scala#l153\">https://isabelle.sketis.net/repos/isabelle/file/Isabelle2020/src/Tools/jEdit/src/isabelle_sidekick.scala#l153</a><br>\n--- it assumes that the active editor buffer shows a proper theory, e.g.<br>\nsrc/HOL/ex/Seq.thy from the Documentation panel:</p>\n<p>scala&gt; val buffer = view.getBuffer<br>\nbuffer: org.gjt.sp.jedit.Buffer = Seq.thy ($ISABELLE_HOME/src/HOL/ex/)</p>\n<p>scala&gt; val name = PIDE.resources.theory_node_name(buffer).get<br>\nname: isabelle.Document.Node.Name = HOL-ex.Seq</p>\n<p>scala&gt; val syntax = Isabelle.buffer_syntax(buffer).get<br>\nsyntax: isabelle.Outer_Syntax =<br>\nkeywords<br>\n...</p>\n<p>scala&gt; val structure = Document_Structure.parse_blocks(syntax, name,<br>\nbuffer.getText(0, buffer.getLength))<br>\nstructure: List[isabelle.Document_Structure.Document] =<br>\nList(Atom(60), Atom(26), Atom(2), Block(theory,theory Seq<br>\n...</p>\n<p>This assumes a basic understanding of concepts defined in<br>\nIsabelle/Scala/jEdit. To help with that, you can explore the whole project<br>\nwith the static semantics in IntelliJ IDEA: see also the \"system\" manual<br>\nsection 5.5. about \"isabelle scala_project\".</p>\n<p>Makarius</p>",
        "id": 217258644,
        "sender_full_name": "Email Gateway",
        "timestamp": 1605786452
    }
]