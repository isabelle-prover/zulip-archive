[
    {
        "content": "<p>From: \"\\\"Mulder, Ike\\\"\" &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nHello,</p>\n<p>We’ve been seeing performance problems where just the <code>theory _ imports _ begin</code> header is taking anywhere from 5-20 seconds.<br>\nOne of the two bottlenecks we’ve seen is the merging of definitions of two theories.</p>\n<p>Merging definitions happens in this function&lt;<a href=\"https://isabelle.sketis.net/repos/isabelle/file/tip/src/Pure/defs.ML#l254\">https://isabelle.sketis.net/repos/isabelle/file/tip/src/Pure/defs.ML#l254</a>&gt;, which adds the definitions in one theory to that of the other if they are not already present.<br>\nWhenever a new definition is found, the <code>dependencies</code> function is called, which in turn calls <code>normalize</code>.<br>\nThe problem is that <code>normalize</code> is expensive, folding over all definitions to find reducts that must be reduced further (I think).<br>\nThis makes it at least O(#definitions). <code>normalize</code> is called for _every_ newly inserted definition, so the complexity of merge becomes quadratic in the number of definitions.</p>\n<p>I have experimented with removing the call to <code>normalize</code> from <code>dependencies</code>, then <code>normalize</code>ing after all definitions have been added. Note that one must also add an explicit call to normalize at the other callsite of <code>dependencies</code> here&lt;<a href=\"https://isabelle.sketis.net/repos/isabelle/file/tip/src/Pure/defs.ML#l279\">https://isabelle.sketis.net/repos/isabelle/file/tip/src/Pure/defs.ML#l279</a>&gt;. That seems to work and speed things up significantly.</p>\n<p>Best, Ike</p>",
        "id": 525149985,
        "sender_full_name": "Email Gateway",
        "timestamp": 1750500743
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nThe following paper is possibly relevant to the issue, although its authors are not the authors of the code:</p>\n<p><a href=\"https://eprints.whiterose.ac.uk/id/eprint/191505/1/Consistent_Foundation_IsabelleHOL_JAR_2019.pdf\">https://eprints.whiterose.ac.uk/id/eprint/191505/1/Consistent_Foundation_IsabelleHOL_JAR_2019.pdf</a></p>\n<p>A consistent foundation for Isabelle/HOL&lt;<a href=\"https://eprints.whiterose.ac.uk/id/eprint/191505/1/Consistent_Foundation_IsabelleHOL_JAR_2019.pdf\">https://eprints.whiterose.ac.uk/id/eprint/191505/1/Consistent_Foundation_IsabelleHOL_JAR_2019.pdf</a>&gt;<br>\na [•] [•] [•] a [•]<br>\n<a href=\"http://eprints.whiterose.ac.uk\">eprints.whiterose.ac.uk</a><br>\nHandling definitions correctly is critical to soundness, so we need to proceed carefully here.</p>\n<hr>\n<p>From: <a href=\"mailto:cl-isabelle-users-request@lists.cam.ac.uk\">cl-isabelle-users-request@lists.cam.ac.uk</a> &lt;<a href=\"mailto:cl-isabelle-users-request@lists.cam.ac.uk\">cl-isabelle-users-request@lists.cam.ac.uk</a>&gt; on behalf of \"Mulder, Ike\" &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nSent: 20 June 2025 13:15<br>\nTo: <a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a> &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nSubject: [isabelle] Merging theory definitions calls normalise too often - performance issue loading multiple theories</p>\n<p>Hello,</p>\n<p>We’ve been seeing performance problems where just the <code>theory _ imports _ begin</code> header is taking anywhere from 5-20 seconds.</p>\n<p>One of the two bottlenecks we’ve seen is the merging of definitions of two theories.</p>\n<p>Merging definitions happens in this function&lt;<a href=\"https://isabelle.sketis.net/repos/isabelle/file/tip/src/Pure/defs.ML#l254\">https://isabelle.sketis.net/repos/isabelle/file/tip/src/Pure/defs.ML#l254</a>&gt;, which adds the definitions in one theory to that of the other if they are not already present.</p>\n<p>Whenever a new definition is found, the <code>dependencies</code> function is called, which in turn calls <code>normalize</code>.</p>\n<p>The problem is that <code>normalize</code> is expensive, folding over all definitions to find reducts that must be reduced further (I think).<br>\nThis makes it at least O(#definitions). <code>normalize</code> is called for _every_ newly inserted definition, so the complexity of merge becomes quadratic in the number of definitions.</p>\n<p>I have experimented with removing the call to <code>normalize</code> from <code>dependencies</code>, then <code>normalize</code>ing after all definitions have been added. Note that one must also add an explicit call to normalize at the other callsite of <code>dependencies</code> here&lt;<a href=\"https://isabelle.sketis.net/repos/isabelle/file/tip/src/Pure/defs.ML#l279\">https://isabelle.sketis.net/repos/isabelle/file/tip/src/Pure/defs.ML#l279</a>&gt;. That seems to work and speed things up significantly.</p>\n<p>Best, Ike</p>",
        "id": 526390315,
        "sender_full_name": "Email Gateway",
        "timestamp": 1751286748
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 20/06/2025 14:15, \"Mulder, Ike\" (via cl-isabelle-users Mailing List) wrote:</p>\n<blockquote>\n<p>Hello,</p>\n<p>We’ve been seeing performance problems where just the <code>theory _ imports _ \nbegin</code> header is taking anywhere from 5-20 seconds.</p>\n<p>One of the two bottlenecks we’ve seen is the merging of definitions of two <br>\ntheories.</p>\n<p>Merging definitions happens in this function &lt;<a href=\"https://isabelle.sketis.net/\">https://isabelle.sketis.net/</a> <br>\nrepos/isabelle/file/tip/src/Pure/defs.ML#l254&gt;, which adds the definitions in <br>\none theory to that of the other if they are not already present.</p>\n<p>Whenever a new definition is found, the <code>dependencies</code> function is called, <br>\nwhich in turn calls <code>normalize</code>.</p>\n<p>The problem is that <code>normalize</code> is expensive, folding over all definitions to <br>\nfind reducts that must be reduced further (I think).<br>\nThis makes it at least O(#definitions). <code>normalize</code> is called for _/every/_ <br>\nnewly inserted definition, so the complexity of merge becomes quadratic in the <br>\nnumber of definitions.</p>\n<p>I have experimented with removing the call to <code>normalize</code> from <code>dependencies</code>, <br>\nthen <code>normalize</code>ing after all definitions have been added. Note that one must <br>\nalso add an explicit call to normalize at the other callsite of <code>dependencies</code> <br>\nhere &lt;<a href=\"https://isabelle.sketis.net/repos/isabelle/file/tip/src/Pure/\">https://isabelle.sketis.net/repos/isabelle/file/tip/src/Pure/</a> <br>\ndefs.ML#l279&gt;. That seems to work and speed things up significantly.</p>\n</blockquote>\n<p>Sorry, \"it seems to work\" is not an acceptable quality standard for changes to <br>\nany serious piece of software, and especially not for the Isabelle/Pure kernel.</p>\n<p>The module defs.ML has reached a certain local optimum many years ago. It can <br>\ncertainly be improved further, but that does not proceed by adhoc changes.</p>\n<p>In particular, the implementation needs to be reconciled with with work by <br>\nKuncar/Popescu on overloaded definitions (written in LaTeX) and corresponding <br>\nformalizations by Gengelbach/Åman Pohjola (written in HOL4). That appears to <br>\nbe great work, but it does not exactly correspond to the actual defs.ML.</p>\n<p>Re-opening that problem is important, but it won't happen now: It could easily <br>\nrequire a few more years.</p>\n<p>In the meantime, you can ask yourself if something can be done differently in <br>\nthe application. Excessive numbers of defs normalization usually happen when <br>\nmany constants are merely declared, but not properly specified (defined).</p>\n<p>And again, performance problems should be accompanied by proper examples, e.g. <br>\nones seen in the Isabelle distribution or AFP.</p>\n<p>Makarius</p>",
        "id": 526453944,
        "sender_full_name": "Email Gateway",
        "timestamp": 1751306056
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 30/06/2025 14:32, Lawrence Paulson wrote:</p>\n<blockquote>\n<p>The following paper is possibly relevant to the issue, although its authors <br>\nare not the authors of the code:</p>\n<p><a href=\"https://eprints.whiterose.ac.uk/id/eprint/191505/1/\">https://eprints.whiterose.ac.uk/id/eprint/191505/1/</a> <br>\nConsistent_Foundation_IsabelleHOL_JAR_2019.pdf &lt;https:// <br>\n<a href=\"http://eprints.whiterose.ac.uk/id/eprint/191505/1/\">eprints.whiterose.ac.uk/id/eprint/191505/1/</a> <br>\nConsistent_Foundation_IsabelleHOL_JAR_2019.pdf&gt;</p>\n<p>A consistent foundation for Isabelle/HOL &lt;<a href=\"https://eprints.whiterose.ac.uk/id/\">https://eprints.whiterose.ac.uk/id/</a> <br>\neprint/191505/1/Consistent_Foundation_IsabelleHOL_JAR_2019.pdf&gt;<br>\na [•] [•] [•] a [•]<br>\n<a href=\"http://eprints.whiterose.ac.uk\">eprints.whiterose.ac.uk</a></p>\n<p>Handling definitions correctly is critical to soundness, so we need to proceed <br>\ncarefully here.</p>\n</blockquote>\n<p>Yes, and we need to take into account what we have learned about that in the <br>\npast 11 years (since Vienna Summer of Logic 2014).</p>\n<p>* The work by Kuncar/Popescu is fine, but informal (LaTeX only). It also <br>\ndeviates from the previous foundations of Isabelle/Pure (and HOL) in many <br>\nrespects. The worst deviation is the very checker itself --- maybe that is <br>\njust an accident.</p>\n<p>* The work by Gengelbach/Åman Pohjola <br>\n<a href=\"https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ITP.2022.15\">https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ITP.2022.15</a> is <br>\ngreat: it formalizes Kuncar/Popescu under the impression that this is what <br>\nIsabelle/Pure really does.</p>\n<p>So the next move is to study everything, together with the actual sources of <br>\ndefs.ML --- which is ML text intended to be read by humans, and only <br>\noccasionally to be run by a machine. That might only require some weeks or <br>\nmonths, but the start of that interval is unclear.</p>\n<p>Makarius</p>",
        "id": 526458205,
        "sender_full_name": "Email Gateway",
        "timestamp": 1751307167
    }
]