[
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nA Reuse-Based Multi-Stage Compiler Verification for Language IMP<br>\nPasquale Noce</p>\n<p>After introducing the didactic imperative programming language IMP, Nipkow and <br>\nKlein's book on formal programming language semantics (version of March 2021) <br>\nspecifies compilation of IMP commands into a lower-level language based on a <br>\nstack machine, and expounds a formal verification of that compiler. Exercise 8.4 <br>\nasks the reader to adjust such proof for a new compilation target, consisting of <br>\na machine language that (i) accesses memory locations through their addresses <br>\ninstead of variable names, and (ii) maintains a stack in memory via a stack <br>\npointer rather than relying upon a built-in stack. A natural strategy to <br>\nmaximize reuse of the original proof is keeping the original language as an <br>\nassembly one and splitting compilation into multiple steps, namely a <br>\nsource-to-assembly step matching the original compilation process followed by an <br>\nassembly-to-machine step. In this way, proving assembly code-machine code <br>\nequivalence is the only extant task. A previous paper by the present author <br>\nintroduces a reasoning toolbox that allows for a compiler correctness proof <br>\nshorter than the book's one, as such promising to constitute a further enhanced <br>\nreference for the formal verification of real-world compilers. This paper in <br>\nturn shows that such toolbox can be reused to accomplish the aforesaid task as <br>\nwell, which demonstrates that the proposed approach also promotes proof reuse in <br>\nmulti-stage compiler verifications.</p>\n<p><a href=\"https://www.isa-afp.org/entries/IMP_Compiler_Reuse.html\">https://www.isa-afp.org/entries/IMP_Compiler_Reuse.html</a></p>\n<p>Enjoy!<br>\n<a href=\"/user_uploads/14278/GrqP0bExOVsm35s9HnAkWz_N/smime.p7s\">smime.p7s</a></p>",
        "id": 289145534,
        "sender_full_name": "Email Gateway",
        "timestamp": 1657517239
    }
]