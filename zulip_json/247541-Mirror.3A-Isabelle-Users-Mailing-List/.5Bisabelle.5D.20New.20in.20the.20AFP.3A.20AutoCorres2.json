[
    {
        "content": "<p>From: \"Thiemann, René\" &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nDear all,</p>\n<p>I’m happy to announce a new AFP entry:</p>\n<p>AutoCorres2 </p>\n<p>by</p>\n<p>Matthew Brecknell, <br>\n  David Greenaway, <br>\n  Johannes Hölzl, <br>\n  Fabian Immler,<br>\n  Gerwin Klein, <br>\n  Rafal Kolanski, <br>\n  Japheth Lim, <br>\n  Michael Norrish, <br>\n  Norbert Schirmer, <br>\n  Salomon Sickert, <br>\n  Thomas Sewell, <br>\n  Harvey Tuch and <br>\n  Simon Wimmer</p>\n<p>Abstract:<br>\nAutoCorres2 is a tool to facilitate the verification of C programs within Isabelle. It is a fork of AutoCorres.</p>\n<p><a href=\"https://www.isa-afp.org/entries/AutoCorres2.html\">https://www.isa-afp.org/entries/AutoCorres2.html</a></p>\n<p>Enjoy,<br>\nRené</p>\n<p>P.S.: Note that the brevity of the abstract is in stark contrast to the fact that this is impressive AFP entry.<br>\nFor instance, the full proof document consists of over 2000 pages with a table of contents<br>\nthat requires 10 pages.</p>",
        "id": 440826487,
        "sender_full_name": "Email Gateway",
        "timestamp": 1716806316
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nThe website seems inconsistent. All entries on <br>\n<a href=\"https://www.isa-afp.org/sessions/autocorres2_test/\">https://www.isa-afp.org/sessions/autocorres2_test/</a> are just empty for me <br>\non the webpage. The page <a href=\"https://www.isa-afp.org/sessions/autocorres2/\">https://www.isa-afp.org/sessions/autocorres2/</a> <br>\ncorrectly displays the code of the theories, though</p>",
        "id": 440835780,
        "sender_full_name": "Email Gateway",
        "timestamp": 1716809879
    },
    {
        "content": "<p>From: Christine Rizkallah &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nAs a user and a huge fan of AutoCorres, I would much appreciate a brief summary of what’s in there and how it differs from and/or extends AutoCorres or where one could find further information beyond the theory files.<br>\nThanks,<br>\nChristine</p>",
        "id": 440854512,
        "sender_full_name": "Email Gateway",
        "timestamp": 1716816184
    },
    {
        "content": "<p>From: \"Thiemann, René\" &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nDear Peter,</p>\n<p>thanks for the report. The website has been fixed.</p>\n<p>René</p>",
        "id": 440857183,
        "sender_full_name": "Email Gateway",
        "timestamp": 1716817013
    },
    {
        "content": "<p>From: Norbert Schirmer &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nDear Christine,</p>\n<p>Please have a look at the Introduction chapter of the provided document. In that chapter there are links into the document were to find the information you search for. Moreover, following the Isabelle tradition there is a NEWS file in the root directory.</p>\n<p>Regards,<br>\nNorbert</p>",
        "id": 440857350,
        "sender_full_name": "Email Gateway",
        "timestamp": 1716817078
    },
    {
        "content": "<p>From: Liam O'Connor &lt;<a href=\"mailto:l.oconnor@ed.ac.uk\">l.oconnor@ed.ac.uk</a>&gt;<br>\nDear Norbert,</p>\n<p>To avoid risk of speaking for Christine I will only speak for myself. None of the documents you refer to answer my question, which is: why was a fork necessary at all? Is it somehow impossible to get any contributions upstreamed into the original AutoCorres? Is there some incompatibility here? I’m more interested in the “why fork” question than the technical delta between AutoCorres and AutoCorres2.</p>\n<p>With best wishes,<br>\nLiam</p>",
        "id": 440877083,
        "sender_full_name": "Email Gateway",
        "timestamp": 1716823584
    },
    {
        "content": "<p>From: Norbert Schirmer &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nDear Liam,</p>\n<p>We discussed the option to upstream the changes to the original AutoCorres, but finally agreed (together with the original maintainers of AutoCorres) to go for the AFP for several reasons. Here some of the major thoughts:</p>\n<ul>\n<li>The original AutoCorres has no standalone repository but is part of the very large seL4/l4v repository. We agreed that AutoCorres2 should become a general purpose tool for C verification and should evolve independently of seL4/l4v. This liberates us from a lot of constraints from seL4/l4v.</li>\n<li>The AFP is the right place for such a tool with greater visibility and fosters a tighter Integration with core Isabelle development</li>\n<li>While AutoCorres2 is conceptually an extension of AutoCorres it technically takes the freedom to break compatibility. A notable example is the switch from the former \"nondet_monad\" to  the “spec_monad”, which we believe is more canonical and has nicer algebraic properties.</li>\n</ul>\n<p>I hope this gives some insight.</p>\n<p>Regards,<br>\nNorbert</p>",
        "id": 440880370,
        "sender_full_name": "Email Gateway",
        "timestamp": 1716824874
    },
    {
        "content": "<p>From: Yakoub Nemouchi &lt;<a href=\"mailto:y.nemouchi@gmail.com\">y.nemouchi@gmail.com</a>&gt;<br>\nHi,</p>\n<p>As an expert in semantics frameworks I consider this a very nice<br>\ncontribution from the Autocoress team. Congratulations!<br>\nIt was frustrating to see this very nicely shallowly embedded and<br>\nmonad-based semantics framework hard-wired to the byte-level memory model<br>\nof SeL4 (which made the verification framework look ad-hoc to SeL4<br>\nverification).<br>\nAutocorress also has a very nice VCG implementation supporting backward<br>\nweakest precondition reasoning with debugging tools for goal inspection<br>\nwhen the VCG fails or diverges or crashes (I hope this is also part of the<br>\ndistribution).</p>\n<p>Now after 18 years we have 4 amazing Isabelle-based framework for program<br>\nverification down to IR level (allowing to remove compilers front-end from<br>\nthe trusted code base), these tools are:</p>\n<p>1. Isabelle/C (that can be used as frontend for these semantics<br>\n   frameworks and allowing code annotation with distinguished features such as<br>\n   markup strings for devs comments and assertions, which make frama-C way<br>\n   behind)</p>\n<p>2. Autocoress2 (code-level program verification with potential of doing<br>\n   system-level verification of components with since now the semantics<br>\n   framework is not hardwired to the byte-level memory model of SeL4)</p>\n<p>3. Isabelle/LLVM (which provide verification down to IR which means the<br>\n   verified programs are compiler (front-end) agnostic)</p>\n<p>4. Word library (allowing refinement to different byte-level<br>\n   memory models)</p>\n<p>Can someone now create a FORMAL link between these 4 pieces and create the<br>\nmost advanced and UNIFIED programs verification framework in the world<br>\nwhich will remove compilers front-ends from trusted code-base for any<br>\nproject that will use Isabelle?</p>\n<p>Best wishes,<br>\nYakoub.</p>",
        "id": 440899803,
        "sender_full_name": "Email Gateway",
        "timestamp": 1716833488
    }
]