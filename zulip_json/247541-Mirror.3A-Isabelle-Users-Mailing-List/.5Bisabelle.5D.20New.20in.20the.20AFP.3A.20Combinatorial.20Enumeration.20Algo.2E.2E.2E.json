[
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nCombinatorial Enumeration Algorithms</p>\n<p>Paul Hofmeier and Emin Karayel</p>\n<p>Combinatorial objects have configurations which can be enumerated by algorithms, <br>\nbut especially for imperative programs, it is difficult to find out if they <br>\nproduce the correct output and donâ€™t generate duplicates. Therefore, for some of <br>\nthe most common combinatorial objects, namely n_Sequences, n_Permutations, <br>\nn_Subsets, Powerset, Integer_Compositions, Integer_Partitions, <br>\nWeak_Integer_Compositions, Derangements and Trees, this entry formalizes <br>\nefficient functional programs and verifies their correctness. In addition, it <br>\nprovides cardinality proofs for those combinatorial objects. Some cardinalities <br>\nare verified using the enumeration functions and others are shown using existing <br>\nlibraries including other AFP entries.</p>\n<p><a href=\"https://www.isa-afp.org/entries/Combinatorial_Enumeration_Algorithms.html\">https://www.isa-afp.org/entries/Combinatorial_Enumeration_Algorithms.html</a></p>\n<p>PS More such enumeration algorithms are welcome.<br>\n<a href=\"/user_uploads/14278/A09nxtRQE4LSUGe3PZ_9UWUk/smime.p7s\">smime.p7s</a></p>",
        "id": 309571054,
        "sender_full_name": "Email Gateway",
        "timestamp": 1668422795
    }
]