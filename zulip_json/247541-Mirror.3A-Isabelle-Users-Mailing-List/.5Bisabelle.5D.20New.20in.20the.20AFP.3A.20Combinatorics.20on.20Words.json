[
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nCombinatorics on Words Basics<br>\nŠtěpán Holub, Martin Raška and Štěpán Starosta</p>\n<p>We formalize basics of Combinatorics on Words. This is an extension of existing <br>\ntheories on lists. We provide additional properties related to prefix, suffix, <br>\nfactor, length and rotation. The topics include prefix and suffix comparability, <br>\nmismatch, word power, total and reversed morphisms, border, periods, primitivity <br>\nand roots. We also formalize basic, mostly folklore results related to word <br>\nequations: equidivisibility, commutation and conjugation. Slightly advanced <br>\nproperties include the Periodicity lemma (often cited as the Fine and Wilf <br>\ntheorem) and the variant of the Lyndon-Schützenberger theorem for words. We <br>\nsupport the algebraic point of view which sees words as generators of submonoids <br>\nof a free monoid. This leads to the concepts of the (free) hull, the (free) <br>\nbasis (or code).</p>\n<p><a href=\"https://www.isa-afp.org/entries/Combinatorics_Words.html\">https://www.isa-afp.org/entries/Combinatorics_Words.html</a></p>\n<p>Lyndon words<br>\nŠtěpán Holub and Štěpán Starosta</p>\n<p>Lyndon words are words lexicographically minimal in their conjugacy class. We <br>\nformalize their basic properties and characterizations, in particular the <br>\nconcepts of the longest Lyndon suffix and the Lyndon factorization. Most of the <br>\nwork assumes a fixed lexicographical order. Nevertheless we also define the <br>\nsmallest relation guaranteeing lexicographical minimality of a given word (in <br>\nits conjugacy class).</p>\n<p><a href=\"https://www.isa-afp.org/entries/Combinatorics_Words_Lyndon.html\">https://www.isa-afp.org/entries/Combinatorics_Words_Lyndon.html</a></p>\n<p>Graph Lemma<br>\nŠtěpán Holub and Štěpán Starosta</p>\n<p>Graph lemma quantifies the defect effect of a system of word equations. That is, <br>\nit provides an upper bound on the rank of the system. We formalize the proof <br>\nbased on the decomposition of a solution into its free basis. A direct <br>\napplication is an alternative proof of the fact that two noncommuting words form <br>\na code.</p>\n<p><a href=\"https://www.isa-afp.org/entries/Combinatorics_Words_Graph_Lemma.html\">https://www.isa-afp.org/entries/Combinatorics_Words_Graph_Lemma.html</a></p>\n<p>Enjoy!<br>\n<a href=\"/user_uploads/14278/rbM1fctxiSlvCynwMTJ1S3Z_/smime.p7s\">smime.p7s</a></p>",
        "id": 240303084,
        "sender_full_name": "Email Gateway",
        "timestamp": 1622024280
    }
]