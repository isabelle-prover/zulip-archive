[
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nI am happy to announce a substantial new development, by Achim D. Brucker and Amy Stell.</p>\n<p>Abstract<br>\nInterval analysis (also called interval arithmetic) is a well known mathematical technique to analyse or mitigate rounding errors or measurement errors. Thus, it is promising to integrate interval analysis into program verification environments. Such an integration is not only useful for the verification of numerical algorithms: the need to ensure that computations stay within certain bounds is common. For example to show that computations stay within the hardware bounds of a given number representation. Another application is the verification of cyber-physical systems, where a discretised implementation approximates a system described in physical quantities expressed using perfect mathematical reals, and perfect ordinary differential equations. In this AFP entry, we formalise extended interval analysis, including the concept of inclusion isotone (or inclusion isotonic) (extended) interval analysis. The main result is the formal proof that interval-splitting converges for Lipschitz-continuous interval isotone functions. From pragmatic perspective, we provide the datatypes and theory required for integrating interval analysis into other formalisations and applications.</p>\n<p>You'll find it online at <a href=\"https://www.isa-afp.org/entries/Interval_Analysis.html\">https://www.isa-afp.org/entries/Interval_Analysis.html</a></p>\n<p>Larry</p>",
        "id": 417263624,
        "sender_full_name": "Email Gateway",
        "timestamp": 1705939655
    }
]