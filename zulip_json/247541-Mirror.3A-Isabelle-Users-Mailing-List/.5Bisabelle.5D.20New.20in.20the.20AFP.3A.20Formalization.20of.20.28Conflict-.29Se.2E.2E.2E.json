[
    {
        "content": "<p>From: \"Thiemann, René\" &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nDear all,</p>\n<p>I’m happy to announce a new AFP entry.</p>\n<p>Formalization of (Conflict-)Serializability and Strict Two-Phase Locking<br>\n  by Dmitriy Traytel</p>\n<p>Abstract:</p>\n<p>Concurrency control is an essential component of any transactional database<br>\nmanagement system, which is responsible for providing isolation (the \"I\" in<br>\nACID) to transactions. Formally, concurrency control aims to achieve<br>\nserializability: a way to rearrange the actions of concurrently executing<br>\ntransactions that eliminates concurrency while leaves the database modifications<br>\nunchanged. In this small entry, we define serializability, a syntactic<br>\nover-approximation called conflict-serializability, and characterize schedules<br>\ngenerated by the frequently used concurrency control mechanism of strict<br>\ntwo-phase locking (S2PL). We also prove two inclusions: S2PL implies<br>\nconflict-serializability, which in turn implies serializability. The<br>\nformalization is based on standard material from an advanced database systems<br>\ncourse.</p>\n<p><a href=\"https://www.isa-afp.org/entries/Serializable.html\">https://www.isa-afp.org/entries/Serializable.html</a></p>\n<p>Enjoy,<br>\nRené</p>",
        "id": 498996545,
        "sender_full_name": "Email Gateway",
        "timestamp": 1739276533
    }
]