[
    {
        "content": "<p>From: \"Thiemann, René\" &lt;<a href=\"mailto:Rene.Thiemann@uibk.ac.at\">Rene.Thiemann@uibk.ac.at</a>&gt;<br>\nDear all,</p>\n<p>I'm happy to announce a new AFP entry.</p>\n<p>Enjoy,<br>\nRené</p>\n<p>Formalization of CommCSL: A Relational Concurrent Separation Logic for Proving<br>\nInformation Flow Security in Concurrent Programs<br>\n  by Thibault Dardinier</p>\n<p>Information flow security ensures that the secret data manipulated by a program<br>\ndoes not influence its observable output. Proving information flow security is<br>\nespecially challenging for concurrent programs, where operations on secret data<br>\nmay influence the execution time of a thread and, thereby, the interleaving<br>\nbetween threads. Such internal timing channels may affect the observable outcome<br>\nof a program even if an attacker does not observe execution times. Existing<br>\nverification techniques for information flow security in concurrent programs<br>\nattempt to prove that secret data does not influence the relative timing of<br>\nthreads. However, these techniques are often restrictive (for instance because<br>\nthey disallow branching on secret data) and make strong assumptions about the<br>\nexecution platform (ignoring caching, processor instructions with data-dependent<br>\nexecution time, and other common features that affect execution time).</p>\n<p>In this entry, we formalize and prove the soundness of CommCSL, a novel<br>\nrelational concurrent separation logic for proving secure information flow in<br>\nconcurrent programs that lifts these restrictions and does not make any<br>\nassumptions about timing behavior. The key idea is to prove that all mutating<br>\noperations performed on shared data commute, such that different thread<br>\ninterleavings do not influence its final value. Crucially, commutativity is<br>\nrequired only for an abstraction of the shared data that contains the<br>\ninformation that will be leaked to a public output. Abstract commutativity is<br>\nsatisfied by many more operations than standard commutativity, which makes our<br>\ntechnique widely applicable.</p>\n<p><a href=\"https://www.isa-afp.org/entries/CommCSL.html\">https://www.isa-afp.org/entries/CommCSL.html</a></p>",
        "id": 346827361,
        "sender_full_name": "Email Gateway",
        "timestamp": 1680609733
    }
]