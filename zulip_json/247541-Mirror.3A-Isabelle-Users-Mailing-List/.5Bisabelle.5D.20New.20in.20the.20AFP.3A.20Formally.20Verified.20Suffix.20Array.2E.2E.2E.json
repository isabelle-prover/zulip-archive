[
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nFormally Verified Suffix Array Construction<br>\nLouis Cheung and Christine Rizkallah</p>\n<p>A suffix array (Manber and Myers, 1993) is a data structure that is extensively <br>\nused in text retrieval and data compression applications, including query <br>\nsuggestion mechanisms in web search, and in bioinformatics tools for DNA <br>\nsequencing and matching. This wide applicability means that algorithms for <br>\nconstructing suffix arrays are of great practical importance. The Suffix Array <br>\nby Induced Sorting (SA-IS) algorithm (Nong, Zhang and Chan, 2009) is a <br>\nconceptually complex yet highly efficient suffix array construction technique, <br>\nbased on an earlier algorithm (Ko and Aluru, 2005). As part of this <br>\nformalization, we have developed the SA-IS algorithm in Isabelle/HOL and <br>\nformally verified that it is equivalent to a mathematical functional <br>\nspecification of suffix arrays. This required verifying a wide range of <br>\nunderlying properties of lists and suffixes, that could be reused in other <br>\ncontexts. We also used Isabelleâ€™s code extraction facilities to extract an <br>\nexecutable Haskell implementation of SAIS. In particular, this entry includes <br>\nthe following: an axiomatic characterisation of suffix array construction; a <br>\nformally verified encoding of a straightforward but inefficient suffix array <br>\nconstruction algorithm (validating the specification); and a formally verified <br>\nencoding of the linear time SA-IS algorithm.</p>\n<p><a href=\"https://www.isa-afp.org/entries/SuffixArray.html\">https://www.isa-afp.org/entries/SuffixArray.html</a></p>\n<p>Enjoy!</p>\n<p><a href=\"/user_uploads/14278/PaeijPvX22kt4YkUUDbgCv7O/smime.p7s\">smime.p7s</a></p>",
        "id": 474429975,
        "sender_full_name": "Email Gateway",
        "timestamp": 1727915138
    }
]