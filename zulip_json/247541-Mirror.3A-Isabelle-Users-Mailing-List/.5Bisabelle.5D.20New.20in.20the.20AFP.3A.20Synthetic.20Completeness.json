[
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nSynthetic Completeness<br>\nAsta Halkj√¶r From</p>\n<p>In this work, I provide an abstract framework for proving the completeness of a <br>\nlogical calculus using the synthetic method. The synthetic method is based on <br>\nmaximal consistent saturated sets (MCSs). A set of formulas is consistent (with <br>\nrespect to the calculus) when we cannot derive a contradiction from it. It is <br>\nmaximally consistent when it contains every formula that is consistent with it. <br>\nFor logics where it is relevant, it is saturated when it contains a witness for <br>\nevery existential formula. To prove completeness using these maximal consistent <br>\nsaturated sets, we prove a truth lemma: every formula in an MCS has a satisfying <br>\nmodel. Here, Hintikka sets provide a useful stepping stone. These can be seen as <br>\ncharacterizations of the MCSs based on simple subformula conditions rather than <br>\nvia the calculus. We then prove that every Hintikka set gives rise to a <br>\nsatisfying model and that MCSs are Hintikka sets. Now, assume a valid formula <br>\ncannot be derived. Then its negation must be consistent and therefore <br>\nsatisfiable. This contradicts validity and the original formula must be derivable.</p>\n<p>To start, I build maximal consistent saturated sets for any logic that satisfies <br>\na small set of assumptions. I do this using a transfinite version of <br>\nLindenbaum's lemma, which allows me to support languages of any cardinality. I <br>\nthen prove useful abstract results about derivations and refutations as they <br>\nrelate to MCSs. Finally, I show how Hintikka sets can be derived from the <br>\nlogic's semantics, outlining one way to prove the required truth lemma.</p>\n<p>To demonstrate the versatility of the framework, I instantiate it with five <br>\ndifferent examples. The formalization contains soundness and completeness <br>\nresults for: a propositional tableau calculus, a propositional sequent calculus, <br>\nan axiomatic system for modal logic, a labelled natural deduction system for <br>\nhybrid logic and a natural deduction system for first-order logic. The tableau <br>\nexample uses custom Hintikka sets based on the calculus, but the other four <br>\nexamples derive them from the semantics in the style of the framework. The <br>\nhybrid and first-order logic examples rely on saturated MCSs. This places <br>\nrequirements on the cardinalities of their languages to ensure that there are <br>\nenough witnesses available. In both cases, the type of witnesses must be <br>\ninfinite and have cardinality at least that of the type of <br>\npropositional/predicate symbols.</p>\n<p><a href=\"https://www.isa-afp.org/entries/Synthetic_Completeness.html\">https://www.isa-afp.org/entries/Synthetic_Completeness.html</a></p>\n<p>Happy New Year!<br>\n<a href=\"/user_uploads/14278/Aui-iuhQ77c3qMuXw_LdK9GK/smime.p7s\">smime.p7s</a></p>",
        "id": 320430309,
        "sender_full_name": "Email Gateway",
        "timestamp": 1673350737
    }
]