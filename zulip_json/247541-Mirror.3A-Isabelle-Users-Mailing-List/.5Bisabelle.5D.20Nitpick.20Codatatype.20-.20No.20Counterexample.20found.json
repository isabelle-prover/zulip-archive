[
    {
        "content": "<p>From: \"Stüber, Sebastian\" &lt;<a href=\"mailto:stueber@se-rwth.de\">stueber@se-rwth.de</a>&gt;<br>\nDear all,<br>\nI am trying to use nitpick to find counterexample over (potentially) infinite lists. While playing with nitpick I encountered a strange behavior:<br>\n    Nitpick seems to be unable to find counterexamples, if a message occurs twice in the list</p>\n<p>An Example:</p>\n<p>codatatype 'a::type llist = LNil | LCons 'a \"'a llist\"</p>\n<p>(* Notice that \"a\" occurs twice *)<br>\nlemma \"LCons (a::nat) (LCons a LNil) ≠ z\"<br>\n  nitpick[expect=none]  (* Should find something! *)<br>\n  oops</p>\n<p>(* Allowing different messages, now nitpick can find something *)<br>\nlemma \"LCons (a::nat) (LCons b LNil) ≠ z\"<br>\n  nitpick[expect=genuine]   (* is working *)<br>\n  oops</p>\n<p>With the normal (finite) list datatype, this problem does not occur.</p>\n<p>Does anybody know the cause &amp; how to fix it?</p>\n<p>Sincerely,<br>\nSebastian Stüber</p>\n<hr>\n<p>Sebastian Stüber, M.Sc.RWTH           |    Software Engineering<br>\nLehrstuhl für Software Engineering    |  RWTH Aachen University<br>\nAhornstr. 55, 52074 Aachen, Germany   |  <a href=\"https://www.se-rwth.de\">https://www.se-rwth.de</a><br>\nPhone ++49 241 80-21352<br>\n<a href=\"/user_uploads/14278/bm2mnZJ8zEHOhpyouAogipYG/nitpick_test.thy\">nitpick_test.thy</a></p>",
        "id": 227909342,
        "sender_full_name": "Email Gateway",
        "timestamp": 1614335803
    },
    {
        "content": "<p>From: Jasmin Blanchette via Cl-isabelle-users &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nDear Sebastian,</p>\n<p>Sorry for the delay in answering. Investigating Nitpick failures is tricky, especially that I developed the tool over 10 years ago.</p>\n<p>I wasn't quite able to put my finger on the deep problem -- perhaps simply an issue in the translation from HOL terms to first-order relational logic (Kodkod's logic), which is optimized and hence quite subtle. However, while investigating the issue, I rephrased one of the codatatype constraints, hoping this would make the problem go away, and it did (at least with the \"box\" option on). This is not entirely satisfactory, but my middle-term goal is to replace Nitpick with the experimental Nunchaku, so I don't want to spend too much time on Nitpick.</p>\n<p>If you wonder, the issue seems to be that the (lazy) lists [a] and [a, a] are considered bisimilar even if they are not. The bisimilarity check has a depth (bisim_depth), and indeed with bisim_depth = 1 we'd expect [a] and [a, a] to be identical. But here we're working with bisim_depth = 2, and hence they're different and thus it should be possible to construct a model that contains both. (The list [a] is needed to build [a, a], so it's unavoidable in a model.)</p>\n<p>Cheers,</p>\n<p>Jasmin</p>",
        "id": 245953202,
        "sender_full_name": "Email Gateway",
        "timestamp": 1626266055
    }
]