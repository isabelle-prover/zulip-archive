[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nDear list,</p>\n<p>I've encountered the following unexpected behavior of the function <br>\npackage. Defining a primitive recursive function with fun yields a THM <br>\nexception, if</p>\n<p>the recursion goes through a Bex and an If. Using Ex x. x:A &amp; ... <br>\ninstead of Bex, or using primrec, works though. Is this behaviour to be <br>\nexpected?</p>\n<p>Broken down example below.</p>\n<p>(note, I'm still on Isabelle 2023)</p>",
        "id": 433235863,
        "sender_full_name": "Email Gateway",
        "timestamp": 1713171351
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:manuel@pruvisto.org\">manuel@pruvisto.org</a>&gt;<br>\nFor reference, here is the exception trace. Just from looking at it, it <br>\nseems to me like this could be an issue with η-expansion. The premise in <br>\nthe implication is exactly the same as the theorem with which it is to <br>\nbe eliminated, except for η-expansion.</p>\n<p>I don't know that code in the function package at all; I am not even <br>\nsure what it does. The obvious solution would be to eta-contract before <br>\napplying this elimination, but it would be good to investigate if there <br>\nis some deeper systemic problem here. After all, η-expansion/contraction <br>\nregularly causes problems like this.</p>\n<p>Cheers,</p>\n<p>Manuel</p>",
        "id": 433280758,
        "sender_full_name": "Email Gateway",
        "timestamp": 1713184930
    }
]