[
    {
        "content": "<p>From: Dominique Unruh &lt;<a href=\"mailto:unruh@ut.ee\">unruh@ut.ee</a>&gt;<br>\nDear all,</p>\n<p>I wanted to raise the question of instantiating the complex numbers as a <br>\npartially ordered set. It came up when discussing the inclusion of a new <br>\ntheory for infinite sums into the Isabelle/HOL standard library because <br>\nmy current development relies on having such an instantiation.</p>\n<p>The current situation in Isabelle/HOL is as follows:</p>\n<p>The standard library has no instantiation \"complex :: order\". <br>\nJordan_Normal_Form (JNF) on AFP instantiates \"complex :: order\" via the <br>\ndefinition \"a &lt;= b\" iff \"Re a &lt;= Re b /\\ Im a = Im b\". I don't know <br>\nwhether there are other libraries which instantiate \"complex :: order\", <br>\nbut if there are, then it will be impossible to import both of them at <br>\nthe same time (even if the definitions are compatible!)</p>\n<p>Therefore I would suggest to incorporate the instantiation of \"complex <br>\n:: order\" into the standard library. I would advocate for using the same <br>\ndefinition as in JNF (or at least a logically equivalent one). I believe <br>\nthis is the \"right\" ordering on complex numbers for the following reasons:</p>\n<p>* It makes the complex numbers \"almost\" into a pre-ordered field. A<br>\n    pre-ordered field is a field with a set of positive elements such<br>\n    that the sum and the product of positive elements are positive, and<br>\n    that squares are positive. (See e.g. Lam, Tsit-Yuen (2005).<br>\n    Introduction to Quadratic Forms over Fields.) a &lt;= b is then defined<br>\n    by \"b-a is positive\". The complex numbers with the JNF-ordering are<br>\n    a pre-ordered field if we mean by a \"square\" of /a/ the product of<br>\n    /a/ with its complex conjugate. (An operation that is a natural<br>\n    analogue to squaring over real. Compare for example with the<br>\n    operation \"adjoint(A)*A\" for complex-valued matrices.) In<br>\n    particular, we have the natural laws that \"a&lt;=b ==&gt; a+c &lt;= b+c\" and<br>\n    \"a&gt;=0 /\\ b &gt;= 0 ==&gt; a*b &gt;= 0\".</p>\n<p>* It coincides with the ordering of the real numbers (when we see the<br>\n    reals as a subset of the complex numbers.)</p>\n<p>* If we see complex numbers as 1x1-matrices, then this ordering will<br>\n    coincide with the Loewner ordering on complex matrices. In<br>\n    particular, a&gt;=0 will mean that a is real and nonnegative, and<br>\n    analogously for matrices, A&gt;=0 is very common notation to mean that<br>\n    A is Hermitian and positive semidefinite, which for 1x1 matrices<br>\n    means real and nonnegative.</p>\n<p>* In Conway, \"A course in functional analysis\", the notation \"a&gt;=0\" is<br>\n    used in the complex case to mean real and nonnegative. (Explanation<br>\n    after Def. 1.1 in Chapter I.1.) The definition from JNF is, as far<br>\n    as I can tell, the only natural definition that has this special<br>\n    case. (Conway's book is the first and only that I checked. Not the<br>\n    result of cherry-picking a book.)</p>\n<p>* While other definitions of &lt;= on complex numbers are definitely<br>\n    possible (e.g., the lexicographic order), I cannot think of any that<br>\n    comes even close to this one in mathematical naturalness. (Of<br>\n    course, that is somewhat subjective.)</p>\n<p>Of course, specific applications might work better with other <br>\ndefinitions (Manuel Eberl told me they used the lexicographic ordering <br>\nin one situation). But I can't think of any other definition that would <br>\nqualify as a potential candidate for the \"standard definition\". Then <br>\nbasically we have two choices for the Isabelle/HOL standard library: <br>\nInclude the JNF instantiation, or have no \"complex :: order\" <br>\ninstantiation. I think the latter case would be worse because it means <br>\nthat no user-developed theory can use any \"complex :: order\" <br>\ninstantiation anyway without losing the ability to be imported at the <br>\nsame time with other theories. So not defining the instantiation does <br>\nnot give any additional freedom anyway, at least not to \"well-behaved\" <br>\ndevelopments.</p>\n<p>(Note also that any instantiation that is different from the JNF <br>\ninstantiation will break JNF which is, afaik, one of the more widely <br>\nused AFP entries.)</p>\n<p>I would like to hear everyone's opinion on this.</p>\n<p>Best wishes,<br>\nDominique.</p>",
        "id": 250839044,
        "sender_full_name": "Email Gateway",
        "timestamp": 1630011446
    },
    {
        "content": "<p>From: Wenda Li &lt;<a href=\"mailto:wl302@cam.ac.uk\">wl302@cam.ac.uk</a>&gt;<br>\nDear Dominique,</p>\n<p>Then basically we have two choices for the Isabelle/HOL standard library: Include the JNF instantiation, or have no \"complex :: order\" instantiation. I think the latter case would be worse because it means that no user-developed theory can use any \"complex :: order\" instantiation anyway without losing the ability to be imported at the same time with other theories. So not defining the instantiation does not give any additional freedom anyway, at least not to \"well-behaved\" developments.</p>\n<p>I agree with your proposal.</p>\n<p>The only question I have is whether we should include this ordering in Complex_Main or as a separate theory file (say in HOL-Library) so that the user can have the freedom to exclude this ordering (assuming most of complex number users start with Complex_Main).</p>\n<p>Cheers,<br>\nWenda</p>",
        "id": 251266482,
        "sender_full_name": "Email Gateway",
        "timestamp": 1630345663
    },
    {
        "content": "<p>From: \"John F. Hughes\" &lt;<a href=\"mailto:jfh@cs.brown.edu\">jfh@cs.brown.edu</a>&gt;<br>\nAs a (semi)-practicing mathematician who sometimes works with complex<br>\nmanifolds, I'd prefer to see it excluded from Complex_Main. If I happen to<br>\nuse an order on the complexes in something I'm doing, it's almost certainly<br>\na mistake, and I'd rather see that mistake get flagged than have some<br>\nnot-at-all-natural-to-me order get used. (I've nothing against the proposed<br>\norder ... but I also see including it as a way to induce me to make stupid<br>\nmistakes, like assuming there's an order when I don't intend there to be,<br>\nwhile omitting it helps me avoid those mistakes. Dominique is probably<br>\nright that not defining it gives no additional freedom, but freedom (for me<br>\nat least) is not the only goal.</p>\n<p>--John</p>",
        "id": 251271199,
        "sender_full_name": "Email Gateway",
        "timestamp": 1630347556
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nIt should be separate, so that users have the choice whether to use this ordering, no ordering or possibly some other ordering. We already do this for lists (Library/List_Lenlexorder.thy vs Library/List_Lexorder.thy).</p>\n<p>Larry</p>",
        "id": 251362798,
        "sender_full_name": "Email Gateway",
        "timestamp": 1630405770
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nI am a bit sceptical about such orphan instances. If two AFP authors<br>\ndecide to import incompatible instances of such an order, that means<br>\nthat no future entry can ever import both of these at the same time, and<br>\nthere is no workaround for this.</p>\n<p>I am generally not a big fan of this particular order instance of the<br>\ncomplex numbers for similar reasons as were already discussed, although<br>\nI think my opposition is more of a vague \"philosophical\" nature than<br>\nanything practical.</p>\n<p>And yes, indeed, I recently had to use a very different ordering on them<br>\n(the lexicographic one) in my proof of the Lindemann–Weierstraß theorem.<br>\nI decided against introducing an orphan instance there and instead<br>\nsimply interpreted the \"order\" locale.</p>\n<p>The locale approach gives you almost everything that a class instance<br>\ndoes, except that the notation is not quite as convenient and that you<br>\ndon't get the \"order\" sort, of course, so you cannot use constants that<br>\nrequire it.</p>\n<p>So, in summary:<br>\n– \"Pick-and-choose\" orphan instances are, in my opinion, a ticking time<br>\nbomb and a bad idea.</p>\n<p>– Non-canonical instances such as the one suggested in this thread are,<br>\nin my opinion, not a great idea, but I am not <em>absolutely</em> opposed to<br>\nit. However, if one goes down that path, one should at least have one<br>\n(and only one) official one. It can be made optional (i.e. an optional<br>\nimport); we have some other similar \"optional\" instances, but that has<br>\nthe disadvantage that it may lead to people rolling their own<br>\n\"unofficial\" instantiations after all.</p>\n<p>Cheers,</p>\n<p>Manuel<br>\n<a href=\"/user_uploads/14278/qK9kZMcKOJgM6PZWt3013fGL/smime.p7s\">smime.p7s</a></p>",
        "id": 251379536,
        "sender_full_name": "Email Gateway",
        "timestamp": 1630414661
    },
    {
        "content": "<p>From: \"YAMADA, Akihisa\" &lt;<a href=\"mailto:ayamada@trs.cm.is.nagoya-u.ac.jp\">ayamada@trs.cm.is.nagoya-u.ac.jp</a>&gt;<br>\nDear all,</p>\n<p>in developing the JNF library, we respected and utilized the \"a &gt;= 0 <br>\n&lt;--&gt; a is real nonnegative\" convention indeed. I'd say there's no other <br>\nnatural way to extend this to a &gt;= b.</p>\n<p>Nevertheless, I agree this should be separate from Complex_Main, as I <br>\ndon't know there's enough merit in this ordering alone to convince <br>\nothers. In JNF, the merit is observed only after having conjugate as a <br>\nclass operation and introducing a class assuming \"a * conjugate a &gt;= 0\" <br>\n(e.g. the almost preordered field Dominique mentions).</p>\n<p>Best regards,<br>\nAkihisa</p>",
        "id": 251510362,
        "sender_full_name": "Email Gateway",
        "timestamp": 1630478505
    }
]