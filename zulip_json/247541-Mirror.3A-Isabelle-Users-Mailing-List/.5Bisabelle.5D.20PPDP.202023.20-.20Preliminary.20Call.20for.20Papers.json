[
    {
        "content": "<p>From: Santiago Escobar &lt;<a href=\"mailto:sescobar@upv.es\">sescobar@upv.es</a>&gt;<br>\n<strong> Apologies for multiple postings </strong></p>\n<p>=========================<br>\nPPDP 2023  Preliminary Call for Papers<br>\n=========================</p>\n<p>25th International Symposium on<br>\nPrinciples and Practice of Declarative Programming</p>\n<p>22-23 October 2023, Cascais, Lisbon, Portugal</p>\n<p><a href=\"https://ppdp2023.webs.upv.es\">https://ppdp2023.webs.upv.es</a><br>\nPart of SPLASH 2023 and co-located with LOPSTR 2023</p>\n<p>===================================</p>\n<p>Important Dates</p>\n<hr>\n<ul>\n<li>15.05.2023 AoE title and abstract submission  </li>\n<li>22.05.2023 AoE paper submission                    </li>\n<li>28.06.2023 rebuttal period (48 hours)</li>\n<li>09.07.2023 notification                </li>\n<li>30.07.2023 final paper              </li>\n<li>22.10.2023 conference starts</li>\n</ul>\n<p>About PPDP</p>\n<hr>\n<p>The PPDP symposium brings together researchers from the declarative programming communities, including those working in the functional, logic, answer-set, and constraint handling programming paradigms. The goal is to stimulate research in the use of logical formalisms and methods for analyzing, performing, specifying, and reasoning about computations, including mechanisms for concurrency, security, static analysis, and verification.</p>\n<p>Scope</p>\n<hr>\n<p>Submissions are invited on all topics related to declarative programming, from principles to practice, from foundations to applications. Topics of interest include, but are not limited to</p>\n<ul>\n<li>\n<p>Language Design: domain-specific languages; interoperability; concurrency, parallelism and distribution; modules; functional languages; reactive languages; languages with objects; languages for quantum computing; languages inspired by biological and chemical computation; metaprogramming.</p>\n</li>\n<li>\n<p>Declarative languages in artificial intelligence: logic programming; database languages; knowledge representation languages; probabilistic languages; differentiable languages.</p>\n</li>\n<li>\n<p>Implementations: abstract machines; interpreters; compilation; compile-time and run-time optimization; memory management.</p>\n</li>\n<li>\n<p>Foundations: types; logical frameworks; monads and effects; semantics.</p>\n</li>\n<li>\n<p>Analysis and Transformation: partial evaluation; abstract interpretation; control flow; data flow; information flow; termination analysis; resource analysis; type inference and type checking; verification; validation; debugging; testing.</p>\n</li>\n<li>\n<p>Tools and Applications: programming and proof environments; verification tools; case studies in proof assistants or interactive theorem provers; certification; novel applications of declarative programming inside and outside of CS; declarative programming pearls; practical experience reports and industrial application; education.</p>\n</li>\n</ul>\n<p>The PC chair will be happy to advise on the appropriateness of a topic.</p>\n<p>Submission Categories</p>\n<hr>\n<p>Submissions can be made in three categories:</p>\n<ul>\n<li>Research Papers,</li>\n<li>System Descriptions,</li>\n<li>Experience Reports.</li>\n</ul>\n<p>Submissions of Research Papers must present original research which is unpublished and not submitted elsewhere. They must not exceed 12 pages (including figures, but excluding bibliography). Work that already appeared in unpublished or informally published workshop proceedings may be submitted (please contact the PC chair in case of questions). Research papers will be judged on originality, significance, correctness, clarity, and readability.</p>\n<p>Submission of System Descriptions must describe a working system whose description has not been published or submitted elsewhere. They must not exceed 10 pages (including figures, but excluding bibliography) and should contain a link to a working system. System Descriptions must be marked as such at the time of submission and will be judged on originality, significance, usefulness, clarity, and readability.</p>\n<p>Submissions of Experience Reports are meant to help create a body of published, refereed, citable evidence where declarative programming such as functional, logic, answer-set, constraint programming, etc., is used in practice. They must not exceed 5 pages including references.  Experience Reports must be marked as such at the time of submission and need not report original research results. They will be judged on significance, usefulness, clarity, and readability.</p>\n<p>Supplementary material may be provided via a link to an extended version of the submission (recommended), or in clearly marked appendices beyond the above-mentioned page limits. Reviewers are not required to read extended versions or any material beyond the respective page limit.</p>\n<hr>\n<p>Program committee chair: Santiago Escobar, Universitat Politecnica de Valencia, Spain<br>\nSteering committee chair: James Cheney, Edinburgh University, UK</p>\n<hr>",
        "id": 342912058,
        "sender_full_name": "Email Gateway",
        "timestamp": 1679222967
    }
]