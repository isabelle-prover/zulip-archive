[
    {
        "content": "<p>From: Jan van Brügge &lt;<a href=\"mailto:jan@vanbruegge.de\">jan@vanbruegge.de</a>&gt;<br>\nHi,<br>\nI am proving some theorem in ML, basically 'P rhs'. This proof is working as expected.<br>\nHowever if I use <code>Local_Theory.define</code> on <code>rhs</code> and try to proof the goal with that, I get an extra sort hypothesis error.<br>\nI don't understand where that is coming from. The goal has neither free variables in rhs nor forall bound variables. Could someone help me there?<br>\nThanks<br>\nJan</p>",
        "id": 289158642,
        "sender_full_name": "Email Gateway",
        "timestamp": 1657527672
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nHi</p>\n<p>You get this error if you have a type class that has no instantiation yet.<br>\nDoes your locale use such a type class?</p>\n<p>Peter</p>",
        "id": 289224144,
        "sender_full_name": "Email Gateway",
        "timestamp": 1657560613
    },
    {
        "content": "<p>From: Jan van Brügge &lt;<a href=\"mailto:jan@vanbruegge.de\">jan@vanbruegge.de</a>&gt;<br>\nYes, I generate a class just before the goal that is supposed to be instatiated by the user.<br>\n(and that triggers the sort hyposesis error). But the goal should not mention that class. How can I prevent it from doing so?<br>\nCheers,<br>\nJan</p>",
        "id": 289253563,
        "sender_full_name": "Email Gateway",
        "timestamp": 1657575711
    },
    {
        "content": "<p>From: Jan van Brügge &lt;<a href=\"mailto:jan@vanbruegge.de\">jan@vanbruegge.de</a>&gt;<br>\nTo make it concrete, the goal (with the definition looks like this):</p>\n<p>Const (\"HOL.Trueprop\", \"bool ⇒ prop\") $<br>\n  (Const (\"Prelim.infinite_regular_card_order\", \"(((nat suc + nat suc) × nat suc) × (nat suc + nat suc) × nat suc) set ⇒ bool\") $<br>\n    Const (\"Composition.foo_sum.sum.Sum_Type.bd_foo_sum\",<br>\n           \"(((nat suc + nat suc) × nat suc) ×<br>\n             (nat suc + nat suc) × nat suc) set\"))</p>\n<p>The RHS of the definition is this:</p>\n<p>Const (\"BNF_Cardinal_Arithmetic.cprod\",<br>\n        \"((nat suc + nat suc) × (nat suc + nat suc)) set<br>\n         ⇒ (nat suc × nat suc) set ⇒ (((nat suc + nat suc) × nat suc) × (nat suc + nat suc) × nat suc) set\") $<br>\n   (Const (\"BNF_Cardinal_Arithmetic.csum\",<br>\n           \"(nat suc × nat suc) set ⇒ (nat suc × nat suc) set ⇒ ((nat suc + nat suc) × (nat suc + nat suc)) set\") $<br>\n     (Const (\"Prelim.card_suc\", \"(nat × nat) set ⇒ (nat suc × nat suc) set\") $ Const (\"BNF_Cardinal_Order_Relation.natLeq\", \"(nat × nat) set\")) $<br>\n     (Const (\"Prelim.card_suc\", \"(nat × nat) set ⇒ (nat suc × nat suc) set\") $<br>\n       Const (\"BNF_Cardinal_Order_Relation.natLeq\", \"(nat × nat) set\"))) $<br>\n   (Const (\"Prelim.card_suc\", \"(nat × nat) set ⇒ (nat suc × nat suc) set\") $<br>\n     Const (\"BNF_Cardinal_Order_Relation.natLeq\", \"(nat × nat) set\")))</p>\n<p>And somehow trying to prove the goal with the definition causes this<br>\nextra sort hyposesis: [[\"Composition.var_sumID\"]], which is a class that<br>\nI generate in the same bunch of ML code.</p>\n<p>But neither the goal nor the RHS has any variables at all, so I have no<br>\nidea why this sort hypothesis is added. Also without the definition it<br>\nworks just fine, no sort hypothesis is added to the goal.</p>\n<p>Thanks,<br>\nJan</p>",
        "id": 289297208,
        "sender_full_name": "Email Gateway",
        "timestamp": 1657617505
    }
]