[
    {
        "content": "<p>From: Yulu Pan &lt;<a href=\"mailto:pandaman@is.s.u-tokyo.ac.jp\">pandaman@is.s.u-tokyo.ac.jp</a>&gt;<br>\nDear all,</p>\n<p>I am working on formal verification of Rust programs. I'm currently<br>\nembedding Rust's semantics into Isabelle/HOL using Schirmer's Simpl,<br>\nand while Simpl's Hoare logic and Verification Condition Generator are<br>\ngreat, they require much time and memory. I'm having trouble with the<br>\nperformance, especially when combined with Isabelle's simplifier.</p>\n<p>For example, the following theory models assignments through mutable references.<br>\n<a href=\"https://github.com/pandaman64/sabi/blob/eadb3640be4e9624a788702ea2b56c3c79b975fa/Rustv/Tests/ex/No_Alias_Precise.thy\">https://github.com/pandaman64/sabi/blob/eadb3640be4e9624a788702ea2b56c3c79b975fa/Rustv/Tests/ex/No_Alias_Precise.thy</a><br>\nMy Windows box is AMD Ryzen 5 2600 with 32GB RAM, though the VCG on<br>\nline 30 takes a few minutes, and the subsequent (auto simp: Let_def)<br>\ntakes even longer... If I give complex postconditions, like line 36,<br>\nthe ML process consumes more than 24GB of memory, and an OutOfMemory<br>\nexception is recorded in the log of the jEdit session (so I could not<br>\ncontinue the process).</p>\n<p>I would like to hear if there are any chips to improve performance.<br>\nI'd also like to hear about other formal verification frameworks for<br>\nimperative programming languages than Simpl. Is it feature-rich? Or<br>\nwill it perform well?</p>\n<p>Kind Regards,<br>\nYulu</p>",
        "id": 215240679,
        "sender_full_name": "Email Gateway",
        "timestamp": 1604231163
    }
]