[
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nI just noticed something wonky in the \"approximation\" package: addition<br>\nof two intervals is implemented by simply adding the two floats and<br>\n<em>then</em> rounding to the required precision.</p>\n<p>This leads to pathological behaviour when the two numbers being added<br>\nare of greatly different orders of magnitude, e.g.</p>\n<p>value \"approx 10 (floatarith.Add<br>\n  (floatarith.Num (Float 1 0))<br>\n  (floatarith.Num (Float 1 (-100000)))) []\"</p>\n<p>This takes about 93 seconds. If you add a few more zeros, it runs out of<br>\nmemory entirely. Surely one can do better than that!</p>\n<p>Does anyone feel responsible for the approximation package and wants to<br>\ncomment on if and how this should be repaired?</p>\n<p>Manuel<br>\n<a href=\"/user_uploads/14278/w0AeB_Ru1wRiozEjzQRB3h6U/smime.p7s\">smime.p7s</a></p>",
        "id": 231667863,
        "sender_full_name": "Email Gateway",
        "timestamp": 1616604424
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nI think the solution is to use \"float_plus_down\"/\"float_plus_up\". I have<br>\na student who needs this stuff, so unless anyone stops me, I will have<br>\nto student build a rounding addition for intervals and then change<br>\n\"Approximation\" to use that.</p>\n<p>Manuel<br>\n<a href=\"/user_uploads/14278/DJC6bIma_unlFdYdttWEu9J-/smime.p7s\">smime.p7s</a></p>",
        "id": 231672317,
        "sender_full_name": "Email Gateway",
        "timestamp": 1616605876
    },
    {
        "content": "<p>From: Fabian Immler via Cl-isabelle-users &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nHi Manuel,</p>\n<p>There used to be more instances of such computations with excessive precision,<br>\nA while ago, I addressed (most of) them in <a href=\"https://isabelle.in.tum.de/repos/isabelle/rev/bf498e0af9e3\">https://isabelle.in.tum.de/repos/isabelle/rev/bf498e0af9e3</a> &lt;<a href=\"https://isabelle.in.tum.de/repos/isabelle/rev/bf498e0af9e3\">https://isabelle.in.tum.de/repos/isabelle/rev/bf498e0af9e3</a>&gt; .</p>\n<p>Unfortunately I reintroduced the inefficient addition in <a href=\"https://isabelle.in.tum.de/repos/isabelle/rev/f630f2e707a6\">https://isabelle.in.tum.de/repos/isabelle/rev/f630f2e707a6</a> &lt;<a href=\"https://isabelle.in.tum.de/repos/isabelle/rev/f630f2e707a6\">https://isabelle.in.tum.de/repos/isabelle/rev/f630f2e707a6</a>&gt; .</p>\n<p>So what you proposed sounds very reasonable.</p>\n<p>Fabian</p>",
        "id": 231956469,
        "sender_full_name": "Email Gateway",
        "timestamp": 1616762272
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nI now addressed this in isabelle-dev/56db8559eadb:</p>\n<p><a href=\"https://isabelle.in.tum.de/repos/isabelle/rev/56db8559eadb\">https://isabelle.in.tum.de/repos/isabelle/rev/56db8559eadb</a></p>\n<p>Fabian, note that while fixing this I saw some suspicious-looking<br>\nfunction definitions in Taylor_Models that, at least at a first glance,<br>\nlook like addition and subtraction of floats is done without proper<br>\nrounding there as well.</p>\n<p>Might be a good idea for someone familiar with this theory to check this.</p>\n<p>Cheers,</p>\n<p>Manuel<br>\n<a href=\"/user_uploads/14278/5_Sp9XBU1Cbhi_-imhNLCpdN/smime.p7s\">smime.p7s</a></p>",
        "id": 233511898,
        "sender_full_name": "Email Gateway",
        "timestamp": 1617809717
    }
]