[
    {
        "content": "<p>From: vincent rahli &lt;<a href=\"mailto:vincent.rahli@gmail.com\">vincent.rahli@gmail.com</a>&gt;<br>\nDear all,</p>\n<p>We would like to invite applications for an up to 3 years fully-funded<br>\npostdoctoral position within the School of Computer Science at the<br>\nUniversity of Birmingham (see below for details on how to apply).</p>\n<p>The successful candidate will contribute to an EPSRC-funded project aiming<br>\nat designing and formally verifying distributed systems, in particular<br>\nByzantine fault-tolerant distributed systems as used for example in<br>\nblockchain technology.</p>\n<p>The start date is flexible, ideally early 2023.</p>\n<p>The environment:</p>\n<hr>\n<p>The School of Computer Science has large and thriving Theory and Security<br>\nresearch groups. Among our research interests related to this project are<br>\nfor example:</p>\n<p>- Formal verification<br>\n   - Proof assistants<br>\n   - Model checking<br>\n   - Blockchain Technology<br>\n   - Security &amp; Privacy</p>\n<p>Both groups are very active, organising regular seminars, informal<br>\nmeetings, and actively participating in many events such as the Midlands<br>\nGraduate School or the Cyber Security PhD Winter School. For more<br>\ninformation see<br>\n<a href=\"https://www.birmingham.ac.uk/research/activity/computer-science/theory-of-computation/index.aspx\">https://www.birmingham.ac.uk/research/activity/computer-science/theory-of-computation/index.aspx</a><br>\nand<br>\n<a href=\"https://www.birmingham.ac.uk/research/centre-for-cyber-security-and-privacy/index.aspx\">https://www.birmingham.ac.uk/research/centre-for-cyber-security-and-privacy/index.aspx</a><br>\n.</p>\n<p>How to apply:</p>\n<hr>\n<p>Interested people are encouraged to contact me by email (<a href=\"mailto:V.Rahli@bham.ac.uk\">V.Rahli@bham.ac.uk</a>)<br>\nto discuss their research interests and details of the positions. Further<br>\ninformation on how to apply is available here:<br>\n<a href=\"https://edzz.fa.em3.oraclecloud.com/hcmUI/CandidateExperience/en/sites/CX_6001/job/521/?utm_medium=jobshare\">https://edzz.fa.em3.oraclecloud.com/hcmUI/CandidateExperience/en/sites/CX_6001/job/521/?utm_medium=jobshare</a></p>\n<p>Best,<br>\nVincent Rahli</p>",
        "id": 307333950,
        "sender_full_name": "Email Gateway",
        "timestamp": 1667315301
    },
    {
        "content": "<p>From: Harry Butterworth &lt;<a href=\"mailto:heb1001@gmail.com\">heb1001@gmail.com</a>&gt;<br>\nNo doubt you’ve got something else in mind but…</p>\n<p>If you write a layer of software to create a BFT implementation of the seL4<br>\nabstract specification on top of a cluster of seL4 nodes and then do a<br>\nrefinement proof that your new layer implements the seL4 abstract spec,<br>\nassuming the constituent nodes also implement the abstract spec, then<br>\nyou’ll create a useful bit of infrastructure that will be compatible with<br>\nthe seL4 ecosystem.</p>\n<p>Anything written to run on seL4 could be migrated to your platform to get<br>\nByzantine fault tolerance with very little incremental programming effort.</p>\n<p>You could size the project based on the published seL4 metrics and the<br>\nsizes of existing BFT platforms.  It’s quite a lot of work to do everything<br>\nbut it’s plausible to get an unverified BFT platform working with a few PY<br>\nof effort.</p>\n<p>One advantage of this approach is that you’ll immediately start with an<br>\nexisting formal spec of the API your project will need to implement so you<br>\nwon’t waste time building the wrong thing.</p>\n<p>There was an earlier seL4 replication project that might help.  I was<br>\nlooking out for it but have now lost track of whether or not it was ever<br>\nopen sourced.</p>\n<p>I expect there are multiple ways to implement the required software layer<br>\nbut it would certainly be possible to use something blockchain-like in<br>\nthere for the BFT distributed consensus required to manage the consistency<br>\nof the replicas.</p>\n<p>I thought about doing this for fun a little while ago.  One of the<br>\ndifficulties was that the seL4 tool chain didn’t support concurrency.  Some<br>\nkind of solution for that would be required for the refinement proof for<br>\nthe distributed system: concurrency is inherent and must be modeled in<br>\norder to prove that it doesn’t cause a violation of the spec.</p>",
        "id": 307356923,
        "sender_full_name": "Email Gateway",
        "timestamp": 1667321617
    }
]