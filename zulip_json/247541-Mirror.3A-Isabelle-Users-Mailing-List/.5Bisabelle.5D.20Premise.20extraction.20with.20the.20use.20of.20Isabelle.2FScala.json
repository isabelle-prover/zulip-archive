[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe thm_deps command is indeed of relatively little practical relevance: It <br>\ninspects the internal derivation, i.e. the low-level implementation of a <br>\nproof. This can contain almost arbitrary \"rubbish\".</p>\n<p>Makarius</p>",
        "id": 285253990,
        "sender_full_name": "Email Gateway",
        "timestamp": 1654610137
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nAbstractly, it sounds like you should start within Isabelle/ML, but some <br>\ninteraction with Isabelle/Scala will be required (e.g. to \"see\" which facts <br>\nwere used in the text).</p>\n<p>An alternative is to start in Isabelle/Scala (with PIDE context), and interact <br>\nwith Isabelle/ML via so-called \"print functions\". E.g. see examples in <br>\nPure/PIDE/query_operation.ML (and .scala).</p>\n<p>When you say \"visible facts in the current context\", what does it mean?</p>\n<p>* The proof state (with its formal Proof.context in Isabelle/ML)?</p>\n<p>* The surrounding Isar proof text, leading to a goal?</p>\n<p>* Something else?</p>\n<p>Makarius</p>",
        "id": 285254036,
        "sender_full_name": "Email Gateway",
        "timestamp": 1654610162
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe task is certainly difficult, but there are two areas of difficulties that <br>\nshould be clearly separated:</p>\n<p>(1) Conceptual: What are you trying to do? What is the context? What do you <br>\nwant to achieve?</p>\n<p>(2) Technical: Can this be done just with standard Isabelle/ML + <br>\nIsabelle/Scala operations? What is the purpose of non-standard python and <br>\nscala-isabelle?</p>\n<p>Makarius</p>",
        "id": 285254098,
        "sender_full_name": "Email Gateway",
        "timestamp": 1654610179
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nIt seems that you did not answer this back to the mailing list. Thus is will <br>\ncause a lot of confusion about \"who said what\" in the ongoing discussion.</p>\n<p>Makarius</p>",
        "id": 285254454,
        "sender_full_name": "Email Gateway",
        "timestamp": 1654610350
    },
    {
        "content": "<p>From: Szymon Antoniak &lt;<a href=\"mailto:sa394197@students.mimuw.edu.pl\">sa394197@students.mimuw.edu.pl</a>&gt;<br>\nIn effort to straighten the email history, I will respond here and hopefully establish some linearity from this point on.<br>\nAs to the visible facts, what I mean by that is all the possible theorems/lemmas that sledgehammer gets to see before applying the relevance filter (i.e. what could appear at the position of the dots in by (metis ...)).</p>\n<p>Szymon</p>\n<p>7 czerwca 2022 15:55, \"Makarius\" &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; napisa≈Ç/-a/:</p>",
        "id": 285454426,
        "sender_full_name": "Email Gateway",
        "timestamp": 1654722999
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;</p>\n<blockquote>\n<p>On 07/06/2022 15:21, Szymon Antoniak wrote:</p>\n<blockquote>\n<blockquote>\n<p>High-level, we want to be a better premise selector than, say, MePo (or <br>\nMePo + Sledgehammer, just<br>\nas well). What we want to do is to take all the visible facts in the <br>\ncurrent context and select<br>\nrelevant ones. For that, we have to have a dataset to train our selection <br>\nmodel on, and that<br>\ndataset requires that for each step, we specify what facts were used in <br>\nthat step.<br>\nThe python part is really just redundant information (we use this to <br>\ninteract with the environment,<br>\nbut for this extraction it is absolutely not needed and Isabelle/Scala <br>\nsuffices), we can only<br>\nrestrict ourselves to Isabelle/ML and Isabelle/Scala.</p>\n</blockquote>\n<p>Abstractly, it sounds like you should start within Isabelle/ML, but some <br>\ninteraction with<br>\nIsabelle/Scala will be required (e.g. to \"see\" which facts were used in <br>\nthe text).</p>\n<p>An alternative is to start in Isabelle/Scala (with PIDE context), and <br>\ninteract with Isabelle/ML via<br>\nso-called \"print functions\". E.g. see examples in <br>\nPure/PIDE/query_operation.ML (and .scala).</p>\n<p>When you say \"visible facts in the current context\", what does it mean?</p>\n<ul>\n<li>\n<p>The proof state (with its formal Proof.context in Isabelle/ML)?</p>\n</li>\n<li>\n<p>The surrounding Isar proof text, leading to a goal?</p>\n</li>\n<li>\n<p>Something else?</p>\n</li>\n</ul>\n</blockquote>\n</blockquote>\n<p>(Cleaning up old threads, I've found this one still half-open.)</p>\n<p>Reading it again, I would say you should look in Isabelle/ML how sledgehammer <br>\nmanages its facts. You can browse the thy/ML sources of Isabelle/HOL, by <br>\nstarting the Prover IDE with Isabelle/Pure and open the sources (first some <br>\ntheory, then some corresponding ML files).</p>\n<p>For example in the main directory of Isabelle2021-1:</p>\n<p>isabelle jedit -l Pure src/HOL/Sledgehammer.thy <br>\nsrc/HOL/Tools/Sledgehammer/sledgehammer_tactics.ML</p>\n<p>I can take quite some time until everything required for this context is <br>\nchecked in the Prover IDE. Afterwards you can jump around in the files via <br>\nformal links etc.</p>\n<p>It could also make sense to open src/HOL/Main.thy e.g. if you need other ML <br>\nfiles with richer theory context.</p>\n<p>Makarius</p>",
        "id": 286640500,
        "sender_full_name": "Email Gateway",
        "timestamp": 1655543518
    }
]