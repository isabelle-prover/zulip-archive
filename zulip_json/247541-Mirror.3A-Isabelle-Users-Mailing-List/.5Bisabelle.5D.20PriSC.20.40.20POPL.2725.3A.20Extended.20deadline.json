[
    {
        "content": "<p>From: PriSC PC Chairs &lt;<a href=\"mailto:prisc.pc.chairs@gmail.com\">prisc.pc.chairs@gmail.com</a>&gt;<br>\nImportant Dates<br>\n===============</p>\n<ul>\n<li>Submission Deadline: <em>Mon 18 Nov 2024</em></li>\n<li>Acceptance Notification: <em>Thu 12 Dec 2024</em></li>\n<li>Workshop: Mon 20 Jan 2025</li>\n</ul>\n<p>Submission website: <a href=\"https://prisc25.hotcrp.com\">https://prisc25.hotcrp.com</a><br>\nWorkshop website: <a href=\"https://popl25.sigplan.org/home/prisc-2025\">https://popl25.sigplan.org/home/prisc-2025</a></p>\n<p>================================================<br>\nCall for Presentations: PriSC @ POPL 2025<br>\n================================================</p>\n<p>Secure compilation is an emerging field that puts together advances in<br>\nsecurity,<br>\nprogramming languages, compilers, verification, systems, and hardware<br>\narchitectures in order to build compilers that eliminate many of today's<br>\nsecurity<br>\nvulnerabilities.</p>\n<p>9th Workshop on Principles of Secure Compilation (PriSC 2025)<br>\n=============================================================</p>\n<p>The Workshop on Principles of Secure Compilation (PriSC) is an informal<br>\n1-day<br>\nworkshop without any proceedings. The goal of this workshop is to identify<br>\ninteresting research directions and open challenges and to bring together<br>\nresearchers interested in working on building secure compilation chains, on<br>\ndeveloping proof techniques and verification tools, and on designing<br>\nsoftware or<br>\nhardware enforcement mechanisms for secure compilation. The 9th edition of<br>\nPriSC<br>\nwill be held on January 20 in Denver, Colorado, United States together with<br>\nthe ACM SIGPLAN Symposium on Principles of Programming Languages (POPL),<br>\n2025.</p>\n<p>Presentation Proposals and Attending the Workshop<br>\n=================================================</p>\n<p>Anyone interested in presenting at the workshop should submit an extended<br>\nabstract (up to 2 pages, details below) covering past, ongoing, or future<br>\nwork.<br>\nAny topic that could be of interest to secure compilation is in scope.<br>\nSecure<br>\ncompilation should be interpreted broadly to include techniques that span<br>\nprogramming languages, architecture, systems and their combination.<br>\nPresentations that provide a useful outside view or challenge the community<br>\nare<br>\nalso welcome. This includes presentations on new attack vectors such as<br>\nmicroarchitectural side-channels, whose defenses could benefit from compiler<br>\ntechniques.</p>\n<p>Specific topics of interest include but are not limited to:</p>\n<ul>\n<li>Attacker models for secure compiler chains.</li>\n<li>\n<p>Secure compiler properties: fully abstract compilation and similar<br>\nproperties,<br>\nmemory safety, control-flow integrity, preservation of safety, information<br>\nflow and other (hyper-)properties against adversarial contexts, secure<br>\nmulti-language interoperability.</p>\n</li>\n<li>\n<p>Secure interaction between different programming languages: foreign<br>\nfunction<br>\ninterfaces, gradual types, securely combining different memory management<br>\nstrategies.</p>\n</li>\n<li>\n<p>Enforcement mechanisms and low-level security primitives: static checking,<br>\nprogram verification, typed assembly languages, reference monitoring,<br>\nprogram<br>\nrewriting, software-based isolation/hiding techniques (SFI, crypto-based,<br>\nrandomization-based, OS/hypervisor-based), security-oriented architectural<br>\nfeatures such as Intel's SGX, MPX and MPK, capability machines, side-channel<br>\ndefenses, object capabilities.</p>\n</li>\n<li>\n<p>Experimental evaluation and applications of secure compilers.</p>\n</li>\n<li>\n<p>Proof methods relevant to compilation: (bi)simulation, logical relations,<br>\ngame<br>\nsemantics, trace semantics, multi-language semantics, embedded interpreters.</p>\n</li>\n<li>\n<p>Formal verification of secure compilation chains (protection mechanisms,<br>\ncompilers, linkers, loaders), machine-checked proofs, translation<br>\nvalidation,<br>\nproperty-based testing.</p>\n</li>\n</ul>\n<p>Guidelines for Submitting Extended Abstracts<br>\n============================================</p>\n<p>Extended abstracts should be submitted in PDF format and not exceed 2 pages<br>\n(references not included). They should be formatted in two-column layout,<br>\n10pt<br>\nfont, and be printable on A4 and US Letter sized paper. We recommend using<br>\nthe<br>\nnew acmart LaTeX style in sigplan mode. Submissions are not anonymous and<br>\nshould<br>\nprovide sufficient detail to be assessed by the program committee.<br>\nPresentation<br>\nat the workshop does not preclude publication elsewhere.</p>\n<p>Contact and More Information<br>\n============================</p>\n<p>You can find more information on the workshop website:<br>\n<a href=\"https://popl25.sigplan.org/home/prisc-2025\">https://popl25.sigplan.org/home/prisc-2025</a></p>",
        "id": 480767499,
        "sender_full_name": "Email Gateway",
        "timestamp": 1730827005
    }
]