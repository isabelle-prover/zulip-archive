[
    {
        "content": "<p>From: PriSC PC Chairs &lt;<a href=\"mailto:prisc.pc.chairs@gmail.com\">prisc.pc.chairs@gmail.com</a>&gt;<br>\n(Apologies if you're getting this email multiple times.)</p>\n<p>Short version: PriSC is a fun, welcoming and exciting venue. Share<br>\nupdates, ideas, thoughts or send students for a friendly gathering<br>\nthat may lead to future collaborations and ideas. Submit now!</p>\n<p>================================================<br>\nCall for Presentations: PriSC 2024 @ POPL 2024<br>\n================================================</p>\n<p>Secure compilation is an emerging field that puts together advances in<br>\nsecurity, programming languages, compilers, verification, systems,<br>\nand hardware architectures in order to devise more secure compilation<br>\nchains that eliminate many of today’s security vulnerabilities and<br>\nthat allow sound reasoning about security properties in the source<br>\nlanguage. For a concrete example, all modern languages provide a<br>\nnotion of structured control flow and an invoked procedure is<br>\nexpected to return to the right place. However, today’s compilation<br>\nchains (compilers, linkers, loaders, runtime systems, hardware)<br>\ncannot efficiently enforce this abstraction against linked low-level<br>\ncode, which can call and return to arbitrary instructions or smash<br>\nthe stack, blatantly violating the high-level abstraction. Other<br>\nproblems arise because today’s languages fail to specify security<br>\npolicies, such as data confidentiality, and the compilation chains<br>\nthus fail to enforce them, especially against powerful side-channel<br>\nattacks. The emerging secure compilation community aims to address<br>\nsuch problems by identifying precise security goals and attacker<br>\nmodels, designing more secure languages, devising efficient<br>\nenforcement and mitigation mechanisms, and developing effective<br>\nverification techniques for secure compilation chains.</p>\n<p>The goal of this workshop is to identify interesting research<br>\ndirections and open challenges and to bring together researchers<br>\ninterested in working on building secure compilation chains, on<br>\ndeveloping proof techniques and verification tools, and on designing<br>\nsoftware or hardware enforcement mechanisms for secure compilation.</p>\n<p>8th Workshop on Principles of Secure Compilation (PriSC 2024)<br>\n=============================================================</p>\n<p>The Workshop on Principles of Secure Compilation (PriSC) is an<br>\ninformal 1-day workshop without any proceedings. The goal is to bring<br>\ntogether researchers interested in secure compilation and to identify<br>\ninteresting research directions and open challenges. The 8th edition<br>\nof PriSC will be held on January 20, 2024 in London, United Kingdom<br>\ntogether with the ACM SIGPLAN Symposium on Principles of Programming<br>\nLanguages (POPL) 2024.</p>\n<p>Important Dates<br>\n===============</p>\n<ul>\n<li>Thu 02 Nov 2023: Submission Deadline</li>\n<li>Thu 07 Dec 2023: Acceptance Notification</li>\n<li>Sat 20 Jan 2024: Workshop</li>\n</ul>\n<p>Presentation Proposals and Attending the Workshop<br>\n=================================================</p>\n<p>Anyone interested in presenting at the workshop should submit an<br>\nextended abstract (up to 2 pages, details below) covering past,<br>\nongoing, or future work. Any topic that could be of interest to<br>\nsecure compilation is in scope. Secure compilation should be<br>\ninterpreted very broadly to include any work in security, programming<br>\nlanguages, architecture, systems or their combination that can be<br>\nleveraged to preserve security properties of programs when they are<br>\ncompiled or to eliminate low-level vulnerabilities. Presentations<br>\nthat provide a useful outside view or challenge the community are<br>\nalso welcome. This includes presentations on new attack vectors such<br>\nas microarchitectural side-channels, whose defenses could benefit<br>\nfrom compiler techniques.</p>\n<p>Specific topics of interest include but are not limited to:</p>\n<ul>\n<li>Attacker models for secure compiler chains.</li>\n<li>\n<p>Secure compiler properties: fully abstract compilation and similar<br>\nproperties, memory safety, control-flow integrity, preservation of<br>\nsafety, information flow and other (hyper-)properties against<br>\nadversarial contexts, secure multi-language interoperability.</p>\n</li>\n<li>\n<p>Secure interaction between different programming languages: foreign<br>\nfunction interfaces, gradual types, securely combining different<br>\nmemory management strategies.</p>\n</li>\n<li>\n<p>Enforcement mechanisms and low-level security primitives: static<br>\nchecking, program verification, typed assembly languages, reference<br>\nmonitoring, program rewriting, software-based isolation/hiding<br>\ntechniques (SFI, crypto-based, randomization-based,<br>\nOS/hypervisor-based), security-oriented architectural features such<br>\nas Intel’s SGX, MPX and MPK, capability machines, side-channel<br>\ndefenses, object capabilities.</p>\n</li>\n<li>\n<p>Experimental evaluation and applications of secure compilers.</p>\n</li>\n<li>\n<p>Proof methods relevant to compilation: (bi)simulation, logical<br>\nrelations, game semantics, trace semantics, multi-language semantics,<br>\nembedded interpreters.</p>\n</li>\n<li>\n<p>Formal verification of secure compilation chains<br>\n(protection mechanisms, compilers, linkers, loaders), machine-checked<br>\nproofs, translation validation, property-based testing.</p>\n</li>\n</ul>\n<p>Guidelines for Submitting Extended Abstracts<br>\n============================================</p>\n<p>Extended abstracts should be submitted in PDF format and not exceed 2<br>\npages (references not included). They should be formatted in<br>\ntwo-column layout, 10pt font, and be printable on A4 and US Letter<br>\nsized paper. We recommend using the new acmart LaTeX style in sigplan<br>\nmode.</p>\n<p>Submissions are not anonymous and should provide sufficient<br>\ndetail to be assessed by the program committee. Presentation at the<br>\nworkshop does not preclude publication elsewhere.</p>\n<p>Contact and More Information<br>\n============================</p>\n<p>You can find more information on the workshop website:<br>\n<a href=\"https://popl24.sigplan.org/home/prisc-2024\">https://popl24.sigplan.org/home/prisc-2024</a></p>\n<p>For questions please contact the workshop chairs, Marco Patrignani and<br>\nShweta Shinde.</p>",
        "id": 398547282,
        "sender_full_name": "Email Gateway",
        "timestamp": 1698261445
    }
]