[
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nHello,</p>\n<p>abbreviations can sometimes make terms a bit intransparent if you don't<br>\nknow what they mean, e.g.</p>\n<p>\"∀⇩F n in sequentially. ln (real n) &gt; 0\"</p>\n<p>is internally</p>\n<p>\"eventually (λn. 0 &lt; ln (real n)) sequentially\"</p>\n<p>but this is not so easy to find out. You cannot even ctrl+click on<br>\nanything due to the custom syntax.</p>\n<p>So, is there an easy way to print a term</p>\n<ol>\n<li>\n<p>without any abbreviations, but with notation (e.g. I don't want to<br>\nsee \"plus x y\" instead of \"x + y\")</p>\n</li>\n<li>\n<p>without abbreviations <em>and</em> without notation (i.e. \"plus x y\" instead<br>\nof \"x + y\")</p>\n</li>\n</ol>\n<p>The closest thing I am aware of is to do something like</p>\n<p>ML_val ‹@{term \"∀⇩F n in sequentially. n &gt; 0\"}›</p>\n<p>Manuel<br>\n<a href=\"/user_uploads/14278/BI1VkDO-0o2S2SMtiG_YQPKK/smime.p7s\">smime.p7s</a></p>",
        "id": 235314409,
        "sender_full_name": "Email Gateway",
        "timestamp": 1618911073
    },
    {
        "content": "<p>From: Dominique Unruh &lt;<a href=\"mailto:unruh@ut.ee\">unruh@ut.ee</a>&gt;<br>\nYou could try</p>\n<p>ML_val ‹<br>\nSyntax.string_of_term_global \\&lt;^theory&gt;‹Main› \\&lt;^term&gt;‹∀⇩F n in <br>\nsequentially. n &gt; 0› |&gt; writeln<br>\n›</p>\n<p>It's not optimal, but probably more readable that your approach. And you <br>\ncan replace Main by other theories to fine-tune the amount of syntax. <br>\n(E.g., Pure for no syntactic sugar.) Main drawback are annoying question <br>\nmarks in the latter case.</p>\n<p>Best wishes,<br>\nDominique.</p>",
        "id": 235323702,
        "sender_full_name": "Email Gateway",
        "timestamp": 1618916368
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nI think we should really strive for something more nice-to-use and<br>\n\"official\". Two more people have written to me privately that they would<br>\nreally want to have something like this.</p>\n<p>Manuel</p>",
        "id": 235324318,
        "sender_full_name": "Email Gateway",
        "timestamp": 1618916648
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nI'm also using an \"inofficial\" hack if the term structure is not clear<br>\nto me, and would like to see something that works better and reliably.</p>",
        "id": 235325137,
        "sender_full_name": "Email Gateway",
        "timestamp": 1618917078
    },
    {
        "content": "<p>From: Mikhail Mandrykin &lt;<a href=\"mailto:mandrykin@ispras.ru\">mandrykin@ispras.ru</a>&gt;<br>\nI recently tackled with similar situations and for now implemented a <br>\nworkaround/hack that works quite acceptably for me. It declares a <br>\nconfiguration option \"bypass_translations\" similar to \"show_abbrevs\", <br>\nand the option, when enabled, prevents print_translations and <br>\nprint_ast_translations from being applied by temporarily prefixing all <br>\nconstant names with a relatively uncommon symbol (e.g. '@'). Meanwhile, <br>\nit leaves alone the constants that have the type \"prop\" as their <br>\nargument or result types. This option is relatively convenient as it <br>\nworks well for goal statements, retains trivial infix notations (but not <br>\nbinders and more complex stuff) and notations from the Pure kernel (e.g. <br>\n‹⟦…⟧›). Usually it's enough to add ‹using [[show_abbrevs=false, <br>\nbypass_translations=true]]› to enable it temporarily for the current <br>\ngoal. Attached the theory and a sample goal snapshot</p>\n<p>Regards,<br>\nMikhail</p>\n<p>Peter Lammich писал 2021-04-20 14:11:<br>\n<a href=\"/user_uploads/14278/D_OWmS-qBHwHjEBnQTEp1Q3x/Bypass_Translations.thy\">Bypass_Translations.thy</a><br>\n<a href=\"/user_uploads/14278/G8xCVDgfyRzv70A6CJVs3Tl9/goal_untranslated.png\">goal_untranslated.png</a><br>\n<a href=\"/user_uploads/14278/rvCTFMgQoNad_i7m49dp-kEN/goal_translated.png\">goal_translated.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/G8xCVDgfyRzv70A6CJVs3Tl9/goal_untranslated.png\" title=\"goal_untranslated.png\"><img src=\"/user_uploads/14278/G8xCVDgfyRzv70A6CJVs3Tl9/goal_untranslated.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/14278/rvCTFMgQoNad_i7m49dp-kEN/goal_translated.png\" title=\"goal_translated.png\"><img src=\"/user_uploads/14278/rvCTFMgQoNad_i7m49dp-kEN/goal_translated.png\"></a></div>",
        "id": 245186289,
        "sender_full_name": "Email Gateway",
        "timestamp": 1625667205
    }
]