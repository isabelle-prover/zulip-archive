[
    {
        "content": "<p>From: Dmitriy Traytel &lt;<a href=\"mailto:traytel@di.ku.dk\">traytel@di.ku.dk</a>&gt;<br>\nCFP for RV'21 (21ST INTERNATIONAL CONFERENCE ON RUNTIME VERIFICATION)</p>\n<p>Important Dates<br>\n<em>Abstract submission: May 24, 2021</em><br>\n<em>Paper submission: May 31, 2021</em><br>\nAuthor notification: July 19, 2021<br>\nCamera-ready version: Aug 2, 2021<br>\nConference date: Oct 11-14, 2021 (Location: online due to COVID19)</p>\n<p>Website: <a href=\"https://www.cs.bgu.ac.il/~rv21/\">https://www.cs.bgu.ac.il/~rv21/</a></p>\n<p>Scope<br>\nRuntime verification is concerned with the monitoring and analysis of the runtime behaviour of software and hardware systems. Runtime verification techniques are crucial for system correctness, reliability, and robustness; they provide an additional level of rigor and effectiveness compared to conventional testing and are generally more practical than exhaustive formal verification. Runtime verification can be used prior to deployment, for testing, verification, and debugging purposes, and after deployment for ensuring reliability, safety, and security and for providing fault containment and recovery as well as online system repair.</p>\n<p>Topics of interest to the conference include, but are not limited to:</p>\n<ul>\n<li>specification languages for monitoring</li>\n<li>monitor construction techniques</li>\n<li>program instrumentation</li>\n<li>logging, recording, and replay</li>\n<li>combination of static and dynamic analysis</li>\n<li>specification mining and machine learning over runtime traces</li>\n<li>monitoring techniques for concurrent and distributed systems</li>\n<li>runtime checking of privacy and security policies</li>\n<li>metrics and statistical information gathering</li>\n<li>program/system execution visualization</li>\n<li>fault localization, containment, recovery and repair</li>\n<li>dynamic type checking and assurance cases</li>\n<li>runtime verification for autonomy and runtime assurance</li>\n<li>Application areas of runtime verification include cyber-physical systems, safety/mission critical systems, enterprise and systems software, cloud systems, autonomous and reactive control systems, health management and diagnosis systems, and system security and privacy, among others.</li>\n</ul>\n<p>Note: RV is currently being re-evaluated for an upgrade in its CORE ranking and we expect the new ranking to become official by the end of the month.</p>\n<p>Submissions<br>\nAll papers and tutorials will appear in the conference proceedings in an LNCS volume. Submitted papers and tutorials must use the LNCS/Springer style detailed here:<br>\n<a href=\"http://www.springer.de/comp/lncs/authors.html\">http://www.springer.de/comp/lncs/authors.html</a><br>\nPapers must be original work and not be submitted for publication elsewhere. Papers must be written in English and submitted electronically (in PDF format) using the EasyChair submission page here:<br>\n<a href=\"https://easychair.org/conferences/?conf=rv21\">https://easychair.org/conferences/?conf=rv21</a><br>\nThe page limitations mentioned below include all text and figures, but exclude references. Additional details omitted due to space limitations may be included in a clearly marked appendix, that will be reviewed at the discretion of reviewers, but not included in the proceedings.<br>\nAt least one author of each accepted paper and tutorial must register and attend RV 2021 to present.</p>\n<p>Papers<br>\nThere are four categories of papers which can be submitted: regular, short, tool demo, and benchmark papers. Papers in each category will be reviewed by at least 3 members of the Program Committee.<br>\nRegular Papers (up to 16 pages, not including references) should present original unpublished results. We welcome theoretical papers, system papers, papers describing domain-specific variants of RV, and case studies on runtime verification.<br>\nShort Papers (up to 8 pages, not including references) may present novel but not necessarily thoroughly worked out ideas, for example emerging runtime verification techniques and applications, or techniques and applications that establish relationships between runtime verification and other domains.<br>\nTool Demonstration Papers (up to 8 pages, not including references) should present a new tool, a new tool component, or novel extensions to existing tools supporting runtime verification. The paper must include information on tool availability, maturity, selected experimental results and it should provide a link to a website containing the theoretical background and user guide. Furthermore, we strongly encourage authors to make their tools and benchmarks available with their submission.<br>\nBenchmark papers (up to 8 pages, not including references) should describe a benchmark, suite of benchmarks, or benchmark generator useful for evaluating RV tools. Papers should include information as to what the benchmark consists of and its purpose (what is the domain), how to obtain and use the benchmark, an argument for the usefulness of the benchmark to the broader RV community and may include any existing results produced using the benchmark. We are interested in both benchmarks pertaining to real-world scenarios and those containing synthetic data designed to achieve interesting properties. Broader definitions of benchmark e.g. for generating specifications from data or diagnosing faults are within scope. We encourage benchmarks that are tool agnostic, especially if they have been used to evaluate multiple tools. We also welcome benchmarks that contain verdict labels and with rigorous arguments for correctness of these verdicts, and benchmarks that are demonstrably ch!<br>\nallenging with respect to the state-of-the-art tools. Benchmark papers must be accompanied by an easily accessible and usable benchmark submission. Papers will be evaluated by a separate benchmark evaluation panel who will assess the benchmarks relevance, clarity, and utility as communicated by the submitted paper.</p>\n<p>The Program Committee of RV 2021 will give a Springer-sponsored Best Paper Award to one eligible regular paper.</p>\n<p>Special Journal Issue! The Program Committee of RV 2021 will invite a selection of accepted papers to submit extended versions to a special issue of the International Journal on Software Tools for Technology Transfer (STTT).</p>\n<p>Tutorial track<br>\nTutorials are two-to-three-hour presentations on a selected topic. Additionally, tutorial presenters will be offered to publish a paper of up to 20 pages in the LNCS conference proceedings. A proposal for a tutorial must contain the subject of the tutorial, a proposed timeline, a note on previous similar tutorials (if applicable) and the differences to this incarnation, and biographies of the presenters. The proposal must not exceed 2 pages.</p>\n<p>Program Chairs:<br>\nLu Feng, University of Virginia<br>\nDana Fisman, Ben Gurion University</p>\n<p>Local Chair:<br>\nJyotirmoy Deshmukh, University of Southern California</p>\n<p>Program committee<br>\nHoussam Abbas, Oregon State University<br>\nWolfgang Ahrendt, Chalmers University of Technology<br>\nDomenico Bianculli, SnT Centre - University of Luxembourg<br>\nBorzoo Bonakdarpour, Michigan State University<br>\nRadu Calinescu, University of York<br>\nChih-Hong Cheng, DENSO AUTOMOTIVE Deutschland GmbH<br>\nJyotirmoy Deshmukh, University of Southern California<br>\nGeorgios Fainekos, Arizona State University<br>\nYliès Falcone, University of Grenoble Alpes, CNRS<br>\nChuchu Fan, MIT<br>\nThomas Ferrère, Imagination Technologies<br>\nBernd Finkbeiner, CISPA Helmholtz Center for Information Security<br>\nAdrian Francalanza, University of Malta<br>\nSylvain Hallé, Université du Québec à Chicoutimi<br>\nKlaus Havelund, Jet Propulsion Laboratory<br>\nBettina Könighofer, Technical University of Graz<br>\nMorteza Lahijanian, University of Colorado, Boulder<br>\nAxel Legay, UCLouvain<br>\nMartin Leucker, University of Luebeck<br>\nChung-Wei Lin, National Taiwan University<br>\nDavid Lo, Singapore Management University<br>\nLeonardo Mariani, University of Milano Bicocca<br>\nNicolas Markey, IRISA, CNRS &amp; INRIA &amp; University of Rennes<br>\nLaura Nenzi, University of Trieste<br>\nDejan Nickovic, Austrian Institute of Technology<br>\nGordon Pace, University of Malta<br>\nNicola Paoletti, University of London<br>\nDave Parker, University of Birmingham<br>\nDoron Peled, Bar Ilan University<br>\nViolet Ka Pun, Western Norway University of Applied Sciences<br>\nGiles Reger, The University of Manchester<br>\nCesar Sanchez, IMDEA Software Institute<br>\nGerardo Schneider, Chalmers University of Gothenburg<br>\nJulien Signoles, CEA LIST<br>\nOleg Sokolsky, University of Pennsylvania<br>\nStefano Tonetta, FBK-irst<br>\nHazem Torfah, University of California, Berkeley<br>\nDmitriy Traytel, University of Copenhagen</p>",
        "id": 238991704,
        "sender_full_name": "Email Gateway",
        "timestamp": 1621183969
    }
]