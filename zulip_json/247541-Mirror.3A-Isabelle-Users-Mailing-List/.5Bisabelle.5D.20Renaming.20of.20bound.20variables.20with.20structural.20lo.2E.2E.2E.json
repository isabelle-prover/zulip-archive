[
    {
        "content": "<p>From: Lukas Bartl &lt;<a href=\"mailto:L.Bartl@campus.lmu.de\">L.Bartl@campus.lmu.de</a>&gt;<br>\nHello,</p>\n<p>I've noticed that bound variables are sometimes not renamed even though <br>\nthey capture free variables after beta-reduction. This happens if the <br>\nargument is a structural parameter in the current locale context.</p>\n<p>Here is a minimal example, which was tested in Isabelle2023, <br>\nIsabelle2024 and with the revision d3c0734059ee of the Isabelle repo:</p>\n<p>term \"(λy x. x # y) x\" (* gives \"λxa. xa # x\" *)</p>\n<p>locale loc =<br>\n   fixes x :: \"'a list\" (structure)<br>\nbegin</p>\n<p>term \"(λy x. x # y) x\" (* gives \"λx. x # x\" *)</p>\n<p>end</p>\n<p>Thank you in advance,<br>\nLukas</p>\n<p><a href=\"/user_uploads/14278/4UKz6UAlNGRQFcc8wW4Hdqlu/OpenPGP_signature.asc\">OpenPGP_signature.asc</a></p>",
        "id": 481151899,
        "sender_full_name": "Email Gateway",
        "timestamp": 1730995388
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 07/11/2024 16:56, Lukas Bartl wrote:</p>\n<blockquote>\n<p>Hello,</p>\n<p>I've noticed that bound variables are sometimes not renamed even though they <br>\ncapture free variables after beta-reduction. This happens if the argument is a <br>\nstructural parameter in the current locale context.</p>\n<p>Here is a minimal example, which was tested in Isabelle2023, Isabelle2024 and <br>\nwith the revision d3c0734059ee of the Isabelle repo:</p>\n<p>term \"(λy x. x # y) x\" (* gives \"λxa. xa # x\" *)</p>\n<p>locale loc =<br>\n   fixes x :: \"'a list\" (structure)<br>\nbegin</p>\n<p>term \"(λy x. x # y) x\" (* gives \"λx. x # x\" *)</p>\n<p>end</p>\n</blockquote>\n<p>Using the Prover IDE, I see a green x and a blue x in the second example, with <br>\ncorrect markup displayed on C-mouse-hover. So this is fine so far.</p>\n<p>I agree that it would be nicer, if printed terms could be read again, and <br>\nproduced exactly the same result. We never had this claim of \"inner-syntax <br>\nroundtrip\" in the past decades, although some tools hope that it would be <br>\notherwise.</p>\n<p>Do you have a concrete application that gets into problems due to this <br>\nparticular case of inaccurate term printout?</p>\n<p>I have recently spent many weeks on refining the inner-syntax engine, and have <br>\ncome across many fine-points that could be further improved, beyond the <br>\nstatus-quo of well-known limitations. But this is a somewhat open-ended <br>\nuntertaking: changing assumptions and ambitions after several decades is very <br>\ntedious.</p>\n<p>Makarius</p>",
        "id": 481461445,
        "sender_full_name": "Email Gateway",
        "timestamp": 1731159330
    },
    {
        "content": "<p>From: Lukas Bartl &lt;<a href=\"mailto:L.Bartl@campus.lmu.de\">L.Bartl@campus.lmu.de</a>&gt;<br>\nHi Makarius,</p>\n<p>thanks for your answer.</p>\n<blockquote>\n<p>I agree that it would be nicer, if printed terms could be read again, <br>\nand produced exactly the same result. We never had this claim of \"inner- <br>\nsyntax roundtrip\" in the past decades, although some tools hope that it <br>\nwould be otherwise.</p>\n<p>Do you have a concrete application that gets into problems due to this <br>\nparticular case of inaccurate term printout?</p>\n</blockquote>\n<p>I am the author of the changeset 81254:d3c0734059ee (variable <br>\ninstantiation in Sledgehammer and Metis, part of my Master's thesis), <br>\nwhich is a tool that infers the variable instantiations of a Metis proof <br>\nand gives the user a suggestion to instantiate the theorems directly <br>\nusing the \"of\" attribute. This prints out Isabelle terms and hopes that <br>\nthey can be read again. I know that this is not guaranteed to work, so <br>\nI've done an evaluation to see how often this fails (which is very rare).</p>\n<p>Other failures are due to odd/ambiguous syntax, but this particular case <br>\nseemed strange to me. Why does it make a difference whether x is a <br>\nstructural parameter? The bound variables are renamed when x is unbound, <br>\nbound in a proof, or without the \"(structure)\".</p>\n<p>Thank you in advance,<br>\nLukas</p>\n<p><a href=\"/user_uploads/14278/iSshqZcWl2EZF48ww8IFASbx/OpenPGP_signature.asc\">OpenPGP_signature.asc</a></p>",
        "id": 481565287,
        "sender_full_name": "Email Gateway",
        "timestamp": 1731248011
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 07/11/2024 16:56, Lukas Bartl wrote:</p>\n<blockquote>\n<p>Hello,</p>\n<p>I've noticed that bound variables are sometimes not renamed even though they <br>\ncapture free variables after beta-reduction. This happens if the argument is a <br>\nstructural parameter in the current locale context.</p>\n<p>Here is a minimal example, which was tested in Isabelle2023, Isabelle2024 and <br>\nwith the revision d3c0734059ee of the Isabelle repo:</p>\n<p>term \"(λy x. x # y) x\" (* gives \"λxa. xa # x\" *)</p>\n<p>locale loc =<br>\n   fixes x :: \"'a list\" (structure)<br>\nbegin</p>\n<p>term \"(λy x. x # y) x\" (* gives \"λx. x # x\" *)</p>\n<p>end</p>\n</blockquote>\n<p>I have made some refinements on inner-syntax printing for the coming <br>\nIsabelle2025 release, see also <br>\n<a href=\"https://isabelle-dev.sketis.net/rISABELLE7a1001f4c60\">https://isabelle-dev.sketis.net/rISABELLE7a1001f4c60</a></p>\n<p><strong>* Inner syntax --- the term language </strong>*</p>\n<ul>\n<li>Printing of constants and bound variables is more careful to avoid<br>\nfree variables, and fixed variables with mixfix syntax (including<br>\n'structure'). Rare INCOMPATIBILITY, e.g. in \"subgoal_tac\", \"rule_tac\".</li>\n</ul>\n<p>Note that there is still no ambition to support a full round-trip, meaning <br>\nthat printed terms can be read again -- and produce exactly the same result.</p>\n<p>Makarius</p>\n<p><a href=\"/user_uploads/14278/o-AYGiKi6OAxiSmM3mSc6MvE/Ex.thy\">Ex.thy</a></p>",
        "id": 488068627,
        "sender_full_name": "Email Gateway",
        "timestamp": 1733914448
    }
]