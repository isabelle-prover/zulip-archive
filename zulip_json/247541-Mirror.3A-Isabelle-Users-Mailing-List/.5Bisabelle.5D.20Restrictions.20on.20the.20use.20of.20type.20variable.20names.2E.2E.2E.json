[
    {
        "content": "<p>From: David Fuenmayor &lt;<a href=\"mailto:davfuenmayor@gmail.com\">davfuenmayor@gmail.com</a>&gt;<br>\nDear Isabelle experts,</p>\n<p>I was under the false impression that I can just name type variables as I<br>\nwant ('a, 'x, 'w, 't, etc.) and get away with it everywhere. As it happens<br>\nI cannot enforce a convention that uses letters other than the<br>\npredetermined ones ('a, 'b, 'c, ...).</p>\n<p>From what I see (see attached file) this has to do with two aspects:<br>\n1) Type inference using letters 'a, 'b, etc. by default (disregarding, e.g.<br>\nthe ones used in the involved definitions)<br>\n2) Type variable letters in proof steps have to coincide with those already<br>\nin the type of the goal.</p>\n<p>I understand that this is surely more of a feature than a bug. Still, this<br>\nmakes teaching Isabelle a bit more difficult. Thanks for understanding.</p>\n<p>David</p>\n<p><a href=\"/user_uploads/14278/_hmhXC9ZW_ROp4RL2f4AhsgK/Example.thy\">Example.thy</a></p>",
        "id": 379811550,
        "sender_full_name": "Email Gateway",
        "timestamp": 1690639793
    },
    {
        "content": "<p>From: Nicolas Meric &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nHi David,</p>\n<p>why don't you just specify the type of your variable in the lemma prop?</p>\n<p>lemma \"iDistr (φ::'w set ⇒ 'w set) ⟹ Distr φ\"</p>\n<p>Nicolas</p>",
        "id": 380032753,
        "sender_full_name": "Email Gateway",
        "timestamp": 1690723260
    },
    {
        "content": "<p>From: David Fuenmayor &lt;<a href=\"mailto:davfuenmayor@gmail.com\">davfuenmayor@gmail.com</a>&gt;<br>\nAs I said, I don't think this is a solution (at least not from an \"user<br>\nexperience\" perspective). I struggle to see why I cannot follow a<br>\nreasonable naming convention for type variables (without having to give up<br>\nany niceties like type inference).</p>\n<p>As a general comment, I understand that this might sound too nitpicky an<br>\nissue. As an \"Isabelle evangelist\" I often struggle with<br>\nexplaining/justifying some behaviors which, having an understandable<br>\nexplanation to the well-versed Isabelle user, may look surprising<br>\n&lt;<a href=\"https://en.wikipedia.org/wiki/Principle_of_least_astonishment\">https://en.wikipedia.org/wiki/Principle_of_least_astonishment</a>&gt; to some<br>\nlaymen (e.g. my students and me ;).</p>",
        "id": 380106111,
        "sender_full_name": "Email Gateway",
        "timestamp": 1690741410
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nWhile I understand that not \"normalizing\" the type variable names <br>\n(currently happens already in the definition command) may yield better <br>\nreadability, you should not refer to implicitly inferred type variables <br>\nby name. I.e., if you use \"'a\" or \"'w\" in your proof, its name should be <br>\nexplicitly fixed. Otherwise, you create very unstable proofs if the <br>\ntype-inference has to change the name, i.e., there being two constants <br>\nwith type 'w in scope.</p>\n<p>Note that you can also use lemma \"...\" for \\phi :: \"'w set\"</p>\n<p>Alternatively, you use a context or locale, with</p>\n<p>fixes \\phi :: \"'w set\"</p>",
        "id": 380221036,
        "sender_full_name": "Email Gateway",
        "timestamp": 1690788644
    }
]