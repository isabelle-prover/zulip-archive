[
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@cit.tum.de\">florian.haftmann@cit.tum.de</a>&gt;<br>\nSee now <br>\n<a href=\"https://foss.heptapod.net/isa-afp/afp-devel/-/commit/fc1ef1c2cc6701b9e9d24304867366b4041f3f2d\">https://foss.heptapod.net/isa-afp/afp-devel/-/commit/fc1ef1c2cc6701b9e9d24304867366b4041f3f2d</a> <br>\nfor an attempt of a self-contained simproc.</p>\n<p>Florian</p>\n<p>Am 15.04.25 um 09:53 schrieb Florian Haftmann:</p>\n<blockquote>\n<p>Hi Ike,</p>\n<p>thanks for figuring that out.</p>\n<p>As far I can see, the best solution is to disregard <br>\nword_eq_numeral_iff_iszero [simp] and calculate equality on word values <br>\nin the same manner as &lt;= and &lt; is calculated by default in HOL- <br>\nLibrary.Word.</p>\n<p>@list Any objections?</p>\n<blockquote>\n<p>* Swap out <code> word_eq_numeral_iff_iszero</code> for <code>word_unat_eq_iff[where ?\n    v=‹numeral _› and ?w=‹numeral _›]</code>. This avoids the subtraction – it<br>\n    normalizes the words, then compares them as naturals.</p>\n</blockquote>\n<blockquote>\n<p>I have also tried to modify the simpset used by <code>unsigned_word</code> to a <br>\ncompletely determined one. This speeds up the normalization procedure <br>\nitself about 3x, but is still very slow in conjunction with <code> \nword_eq_numeral_iff_iszero</code>. For reference, I ended up with something <br>\nlike <code>val ss = simpset_of (put_simpset HOL_ss @{context} addsimps \n@{thms bintrunc_numeral len_bit0 len_num1 One_nat_def mult_Suc_right \nmult_0_right add.right_neutral mult_num_simps numeral_times_numeral \npred_numeral_simps bin_last_numeral_simps of_bool_eq Num.BitM.simps \nnumeral_div_numeral divmod_cancel divmod_trivial prod.case prod.sel \ndiv_0 take_bit_0 times_int_code mult_1_right add.left_neutral \none_plus_numeral add_num_simps minus_numeral_div_numeral \nminus_one_div_numeral Parity.adjust_div_eq odd_neg_numeral1 \nnumeral_One one_neq_zero bintrunc_Suc_numeral of_int_numeral})</code>.</p>\n</blockquote>\n<p>By »completely determined« you mean static, with no effect of later simp <br>\ndeclarations? This would indeed by interesting to be included by default.</p>\n<p>@list Opinions?</p>\n<p>Cheers,<br>\n     Florian</p>\n</blockquote>\n<p><a href=\"/user_uploads/14278/TM2uKxEkAfe0aQJ3GWOG4nug/OpenPGP_0xA707172232CFA4E9.asc\">OpenPGP_0xA707172232CFA4E9.asc</a><br>\n<a href=\"/user_uploads/14278/As0TkFOI_Mp7bXZX0HyOIaFC/OpenPGP_signature.asc\">OpenPGP_signature.asc</a></p>",
        "id": 513667820,
        "sender_full_name": "Email Gateway",
        "timestamp": 1745343400
    }
]