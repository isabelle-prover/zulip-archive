[
    {
        "content": "<p>From: Steven Obua &lt;<a href=\"mailto:obua@practal.com\">obua@practal.com</a>&gt;<br>\nHi, </p>\n<p>I am a happy user of Isabelle/Isar and Sledgehammer, but am just now trying to also use locales, as in my use case there are just overwhelming arguments for it.</p>\n<p>I am using the Isabelle/December 2021 distribution, but most of the time when I am trying to use sledgehammer within a locale context, I will get a message like this:</p>\n<p><code>\"cvc4\": Prover error:\nexception TERM raised (line 457 of \"~~/src/HOL/Tools/SMT/smt_translate.ML\"): bad SMT term\n</code><br>\nIt is the same message for other provers as well. Is this something that is a well-known problem? Without using locales I had such a problem only come up when my theory name was confused with some HOL theory name, and renaming my theory was a workaround. Is there something similar at play here? Is there an easy fix? Because I use sledgehammer a lot, so not being able to use it within a locale would be a severe blow against using locales.</p>\n<p>Cheers,</p>\n<p>Steven</p>",
        "id": 286794832,
        "sender_full_name": "Email Gateway",
        "timestamp": 1655731816
    },
    {
        "content": "<p>From: Mathias Fleury &lt;<a href=\"mailto:mathias.fleury12@gmail.com\">mathias.fleury12@gmail.com</a>&gt;<br>\nDo you have an example theory where this happens?</p>\n<p>Mathias</p>",
        "id": 286815330,
        "sender_full_name": "Email Gateway",
        "timestamp": 1655741499
    },
    {
        "content": "<p>From: Steven Obua &lt;<a href=\"mailto:obua@practal.com\">obua@practal.com</a>&gt;<br>\nHi Mathias,</p>\n<p>sorry, I don't have an example that I can easily share now. I tried to construct one, see below, where the lemma inside of the context cannot be sledgehammered, but the same lemma outside can. But in this smaller example it works, in my larger real-life theory it fails. </p>\n<p>I am not doubting that sledgehammer works in principle in locales, I am just wondering if it is generally known currently that there can be problems, or if I am just running into some weird special cases.</p>\n<p>Cheers,</p>\n<p>Steven</p>\n<hr>\n<p>theory TestSledge imports Main<br>\nbegin</p>\n<p>typedecl 'a algebra<br>\ntypedecl signature</p>\n<p>consts Algebra :: \"'a algebra\" <br>\nconsts Sig :: \"'a algebra ‚áí signature\"</p>\n<p>type_synonym variable = string</p>\n<p>datatype nterm = VarApp variable \"nterm list\"</p>\n<p>axiomatization nt_frees :: \"signature ‚áí nterm ‚áí variable set\" where <br>\n  nt_frees_ax: \"nt_frees sig (VarApp x ts) =  {x} ‚à™ ‚ãÉ { nt_frees sig t | t. t ‚àà set ts }\"</p>\n<p>locale AA = <br>\n  fixes U :: \"'a algebra\" (\"ùîÑ\")</p>\n<p>context AA <br>\nbegin</p>\n<p>abbreviation S :: \"signature\" (\"ùíÆ\") where \"S ‚â° Sig ùîÑ\" <br>\nabbreviation frees :: \"nterm ‚áí variable set\" where \"frees t ‚â° nt_frees ùíÆ t\"</p>\n<p>lemma<br>\n  assumes \"frees (VarApp x ts) ‚äÜ X\"<br>\n  assumes \"i &lt; length ts\" <br>\n  shows \"frees (ts ! i) ‚äÜ X\"<br>\n  sledgehammer<br>\n  oops</p>\n<p>end</p>\n<p>lemma<br>\n  assumes \"nt_frees (Sig U) (VarApp x ts) ‚äÜ X\"<br>\n  assumes \"i &lt; length ts\" <br>\n  shows \"nt_frees (Sig U) (ts ! i) ‚äÜ X\"<br>\n  sledgehammer<br>\n  oops</p>\n<p>end</p>\n<p>On Mon, Jun 20, 2022, at 5:11 PM, Mathias Fleury wrote:</p>\n<blockquote>\n<p>Do you have an example theory where this happens?</p>\n<p>Mathias</p>\n<p>On 20/06/2022 15:26, Steven Obua wrote:</p>\n<blockquote>\n<p>Hi, </p>\n<p>I am a happy user of Isabelle/Isar and Sledgehammer, but am just now trying to also use locales, as in my use case there are just overwhelming arguments for it.</p>\n<p>I am using the Isabelle/December 2021 distribution, but most of the time when I am trying to use sledgehammer within a locale context, I will get a message like this:</p>\n<p><code>\"cvc4\": Prover error:\nexception TERM raised (line 457 of \"~~/src/HOL/Tools/SMT/smt_translate.ML\"): bad SMT term\n</code></p>\n<p>It is the same message for other provers as well. Is this something that is a well-known problem? Without using locales I had such a problem only come up when my theory name was confused with some HOL theory name, and renaming my theory was a workaround. Is there something similar at play here? Is there an easy fix? Because I use sledgehammer a lot, so not being able to use it within a locale would be a severe blow against using locales.</p>\n<p>Cheers,</p>\n<p>Steven<br>\n</p>\n</blockquote>\n</blockquote>",
        "id": 286823834,
        "sender_full_name": "Email Gateway",
        "timestamp": 1655747373
    },
    {
        "content": "<p>From: Gerwin Klein &lt;<a href=\"mailto:kleing@unsw.edu.au\">kleing@unsw.edu.au</a>&gt;<br>\nHi Steven,</p>\n<p>we've definitely had (many) cases where sledgehammer fails to find a proof in a larger locale context, but does find a proof outside the locale. I usually do not get an error message -- it's just timing out, because there are more facts in the context. I'd say that is completely expected behaviour.</p>\n<p>\"bad SMT term\" sounds to me like a genuine error case, though, and not expected.</p>\n<p>Cheers,<br>\nGerwin</p>",
        "id": 286844423,
        "sender_full_name": "Email Gateway",
        "timestamp": 1655764361
    },
    {
        "content": "<p>From: Steven Obua &lt;<a href=\"mailto:obua@practal.com\">obua@practal.com</a>&gt;<br>\nHi Gerwin,</p>\n<p>My locale context is very small so far, so I wouldn't think that is an issue here. But it works now mostly for me, the problems seem to occur, when they occur, only with the provers cvc4, z3 and verit. </p>\n<p>Cheers,</p>\n<p>Steven</p>\n<p>On Mon, Jun 20, 2022, at 11:31 PM, Gerwin Klein wrote:</p>\n<blockquote>\n<p>Hi Steven, </p>\n<p>we've definitely had (many) cases where sledgehammer fails to find a proof in a larger locale context, but does find a proof outside the locale. I usually do not get an error message -- it's just timing out, because there are more facts in the context. I'd say that is completely expected behaviour.</p>\n<p>\"bad SMT term\" sounds to me like a genuine error case, though, and not expected.</p>\n<p>Cheers,<br>\nGerwin</p>\n<p>On 21 Jun 2022, at 03:48, Steven Obua &lt;<a href=\"mailto:obua@practal.com\">obua@practal.com</a>&gt; wrote:</p>\n<blockquote>\n<p>Hi Mathias,</p>\n<p>sorry, I don't have an example that I can easily share now. I tried to construct one, see below, where the lemma inside of the context cannot be sledgehammered, but the same lemma outside can. But in this smaller example it works, in my larger real-life theory it fails. </p>\n<p>I am not doubting that sledgehammer works in principle in locales, I am just wondering if it is generally known currently that there can be problems, or if I am just running into some weird special cases.</p>\n<p>Cheers,</p>\n<p>Steven</p>\n<hr>\n<p>theory TestSledge imports Main<br>\nbegin</p>\n<p>typedecl 'a algebra<br>\ntypedecl signature</p>\n<p>consts Algebra :: \"'a algebra\" <br>\nconsts Sig :: \"'a algebra ‚áí signature\"</p>\n<p>type_synonym variable = string</p>\n<p>datatype nterm = VarApp variable \"nterm list\"</p>\n<p>axiomatization nt_frees :: \"signature ‚áí nterm ‚áí variable set\" where <br>\n  nt_frees_ax: \"nt_frees sig (VarApp x ts) =  {x} ‚à™ ‚ãÉ { nt_frees sig t | t. t ‚àà set ts }\"</p>\n<p>locale AA = <br>\n  fixes U :: \"'a algebra\" (\"ùîÑ\")</p>\n<p>context AA <br>\nbegin</p>\n<p>abbreviation S :: \"signature\" (\"ùíÆ\") where \"S ‚â° Sig ùîÑ\" <br>\nabbreviation frees :: \"nterm ‚áí variable set\" where \"frees t ‚â° nt_frees ùíÆ t\"</p>\n<p>lemma<br>\n  assumes \"frees (VarApp x ts) ‚äÜ X\"<br>\n  assumes \"i &lt; length ts\" <br>\n  shows \"frees (ts ! i) ‚äÜ X\"<br>\n  sledgehammer<br>\n  oops</p>\n<p>end</p>\n<p>lemma<br>\n  assumes \"nt_frees (Sig U) (VarApp x ts) ‚äÜ X\"<br>\n  assumes \"i &lt; length ts\" <br>\n  shows \"nt_frees (Sig U) (ts ! i) ‚äÜ X\"<br>\n  sledgehammer<br>\n  oops</p>\n<p>end</p>\n</blockquote>\n<p>On Mon, Jun 20, 2022, at 5:11 PM, Mathias Fleury wrote:</p>\n<blockquote>\n<blockquote>\n<p>Do you have an example theory where this happens?</p>\n<p>Mathias</p>\n</blockquote>\n<p>On 20/06/2022 15:26, Steven Obua wrote:</p>\n<blockquote>\n<blockquote>\n<p>Hi, </p>\n<p>I am a happy user of Isabelle/Isar and Sledgehammer, but am just now trying to also use locales, as in my use case there are just overwhelming arguments for it.<br>\nI am using the Isabelle/December 2021 distribution, but most of the time when I am trying to use sledgehammer within a locale context, I will get a message like this:</p>\n<p><code>\"cvc4\": Prover error:\nexception TERM raised (line 457 of \"~~/src/HOL/Tools/SMT/smt_translate.ML\"): bad SMT term\n</code></p>\n<p>It is the same message for other provers as well. Is this something that is a well-known problem? Without using locales I had such a problem only come up when my theory name was confused with some HOL theory name, and renaming my theory was a workaround. Is there something similar at play here? Is there an easy fix? Because I use sledgehammer a lot, so not being able to use it within a locale would be a severe blow against using locales.</p>\n<p>Cheers,</p>\n<p>Steven</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>",
        "id": 287189954,
        "sender_full_name": "Email Gateway",
        "timestamp": 1655991098
    },
    {
        "content": "<p>From: Mathias Fleury &lt;<a href=\"mailto:mathias.fleury12@gmail.com\">mathias.fleury12@gmail.com</a>&gt;<br>\nHi Steven,</p>\n<p>On 23/06/2022 15:30, Steven Obua wrote:</p>\n<blockquote>\n<p>Hi Gerwin,</p>\n<p>But it works now mostly for me, the problems seem to occur, when they <br>\noccur, only with the provers cvc4, z3 and verit.</p>\n</blockquote>\n<p>Given that these are the only SMT solver called by default from <br>\nIsabelle, this makes a lot of sense that you face that error only with them.</p>\n<p>Without example (I can look at big theories), it is impossible to debug <br>\nthe problem.</p>\n<p>Cheers,</p>\n<p>Mathias</p>\n<blockquote>\n<p>Cheers,</p>\n<p>Steven</p>\n<p>On Mon, Jun 20, 2022, at 11:31 PM, Gerwin Klein wrote:</p>\n<blockquote>\n<p>Hi Steven,</p>\n<p>we've definitely had (many) cases where sledgehammer fails to find a <br>\nproof in a larger locale context, but does find a proof outside the <br>\nlocale. I usually do not get an error message -- it's just timing <br>\nout, because there are more facts in the context. I'd say that is <br>\ncompletely expected behaviour.</p>\n<p>\"bad SMT term\" sounds to me like a genuine error case, though, and <br>\nnot expected.</p>\n<p>Cheers,<br>\nGerwin</p>\n<p>On 21 Jun 2022, at 03:48, Steven Obua &lt;<a href=\"mailto:obua@practal.com\">obua@practal.com</a> </p>\n<blockquote>\n<p>&lt;mailto:<a href=\"mailto:obua@practal.com\">obua@practal.com</a>&gt;&gt; wrote:</p>\n<p>Hi Mathias,</p>\n<p>sorry, I don't have an example that I can easily share now. I tried <br>\nto construct one, see below, where the lemma inside of the context <br>\ncannot be sledgehammered, but the same lemma outside can. But in <br>\nthis smaller example it works, in my larger real-life theory it fails.</p>\n<p>I am not doubting that sledgehammer works in principle in locales, I <br>\nam just wondering if it is generally known currently that there can <br>\nbe problems, or if I am just running into some weird special cases.</p>\n<p>Cheers,</p>\n<p>Steven</p>\n<hr>\n<p>theory TestSledge imports Main<br>\nbegin</p>\n<p>typedecl 'a algebra<br>\ntypedecl signature</p>\n<p>consts Algebra :: \"'a algebra\"<br>\nconsts Sig :: \"'a algebra ‚áí signature\"</p>\n<p>type_synonym variable = string</p>\n<p>datatype nterm = VarApp variable \"nterm list\"</p>\n<p>axiomatization nt_frees :: \"signature ‚áí nterm ‚áí variable set\" where<br>\n¬† nt_frees_ax: \"nt_frees sig (VarApp x ts) =¬† {x} ‚à™ ‚ãÉ { nt_frees sig <br>\nt | t. t ‚àà set ts }\"</p>\n<p>locale AA =<br>\n¬† fixes U :: \"'a algebra\" (\"ùîÑ\")</p>\n<p>context AA<br>\nbegin</p>\n<p>abbreviation S :: \"signature\" (\"ùíÆ\") where \"S ‚â° Sig ùîÑ\"<br>\nabbreviation frees :: \"nterm ‚áí variable set\" where \"frees t ‚â° <br>\nnt_frees ùíÆ t\"</p>\n<p>lemma<br>\n¬† assumes \"frees (VarApp x ts) ‚äÜ X\"<br>\n¬† assumes \"i &lt; length ts\"<br>\n¬† shows \"frees (ts ! i) ‚äÜ X\"<br>\n¬† sledgehammer<br>\n¬† oops</p>\n<p>end</p>\n<p>lemma<br>\n¬† assumes \"nt_frees (Sig U) (VarApp x ts) ‚äÜ X\"<br>\n¬† assumes \"i &lt; length ts\"<br>\n¬† shows \"nt_frees (Sig U) (ts ! i) ‚äÜ X\"<br>\n¬† sledgehammer<br>\n¬† oops</p>\n<p>end</p>\n</blockquote>\n<p>On Mon, Jun 20, 2022, at 5:11 PM, Mathias Fleury wrote:</p>\n<blockquote>\n<blockquote>\n<p>Do you have an example theory where this happens?</p>\n<p>Mathias</p>\n</blockquote>\n<p>On 20/06/2022 15:26, Steven Obua wrote:</p>\n<blockquote>\n<blockquote>\n<p>Hi,</p>\n<p>I am a happy user of Isabelle/Isar and Sledgehammer, but am just <br>\nnow trying to also use locales, as in my use case there are just <br>\noverwhelming arguments for it.<br>\nI am using the Isabelle/December 2021 distribution, but most of <br>\nthe time when I am trying to use sledgehammer within a locale <br>\ncontext, I will get a message like this:</p>\n<p>|\"cvc4\": Prover error: exception TERM raised (line 457 of <br>\n\"~~/src/HOL/Tools/SMT/smt_translate.ML\"): bad SMT term |</p>\n<p>It is the same message for other provers as well. Is this <br>\nsomething that is a well-known problem? Without using locales I <br>\nhad such a problem only come up when my theory name was confused <br>\nwith some HOL theory name, and renaming my theory was a <br>\nworkaround. Is there something similar at play here? Is there an <br>\neasy fix? Because I use sledgehammer a lot, so not being able to <br>\nuse it within a locale would be a severe blow against using locales.</p>\n<p>Cheers,</p>\n<p>Steven<br>\n</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>",
        "id": 287291778,
        "sender_full_name": "Email Gateway",
        "timestamp": 1656049550
    },
    {
        "content": "<p>From: Steven Obua &lt;<a href=\"mailto:obua@practal.com\">obua@practal.com</a>&gt;<br>\nHi Mathias,</p>\n<p>I would not expect anyone to debug without an example, actually I would not expect anyone to debug!</p>\n<p>In case someone feels the inclination to do so, though, I have now made my theories publicly available. They are not very big (and I hope it stays that way!). It is work in progress and still early stages.</p>\n<p>An example of the error situation can be found at<br>\n<a href=\"https://github.com/practal/AL-in-HOL/blob/f4557af8109501450009777d03741b9efe56d885/Valuation.thy#L167\">https://github.com/practal/AL-in-HOL/blob/f4557af8109501450009777d03741b9efe56d885/Valuation.thy#L167</a></p>\n<p>If you insert a call to sledgehammer there, you will get error messages of the type I talked about, see pictures below. I don't know though if outside of the locale the provers would succeed instead, or just timeout as well.</p>\n<p>Cheers,</p>\n<p>Steven</p>\n<p>On Fri, Jun 24, 2022, at 6:45 AM, Mathias Fleury wrote:</p>\n<blockquote>\n<p>Hi Steven,</p>\n<p>On 23/06/2022 15:30, Steven Obua wrote:</p>\n<blockquote>\n<p>Hi Gerwin,</p>\n<p>But it works now mostly for me, the problems seem to occur, when they occur, only with the provers cvc4, z3 and verit. <br>\nGiven that these are the only SMT solver called by default from Isabelle, this makes a lot of sense that you face that error only with them.</p>\n</blockquote>\n<p>Without example (I can look at big theories), it is impossible to debug the problem.</p>\n<p>Cheers,</p>\n<p>Mathias</p>\n<blockquote>\n<p>Cheers,</p>\n<p>Steven<br>\n</p>\n</blockquote>\n<p>On Mon, Jun 20, 2022, at 11:31 PM, Gerwin Klein wrote:</p>\n<blockquote>\n<blockquote>\n<p>Hi Steven, </p>\n<p>we've definitely had (many) cases where sledgehammer fails to find a proof in a larger locale context, but does find a proof outside the locale. I usually do not get an error message -- it's just timing out, because there are more facts in the context. I'd say that is completely expected behaviour.</p>\n<p>\"bad SMT term\" sounds to me like a genuine error case, though, and not expected.</p>\n<p>Cheers,<br>\nGerwin</p>\n<p>On 21 Jun 2022, at 03:48, Steven Obua &lt;<a href=\"mailto:obua@practal.com\">obua@practal.com</a>&gt; wrote:</p>\n<blockquote>\n<p>Hi Mathias,</p>\n<p>sorry, I don't have an example that I can easily share now. I tried to construct one, see below, where the lemma inside of the context cannot be sledgehammered, but the same lemma outside can. But in this smaller example it works, in my larger real-life theory it fails. </p>\n<p>I am not doubting that sledgehammer works in principle in locales, I am just wondering if it is generally known currently that there can be problems, or if I am just running into some weird special cases.</p>\n<p>Cheers,</p>\n<p>Steven</p>\n<hr>\n<p>theory TestSledge imports Main<br>\nbegin</p>\n<p>typedecl 'a algebra<br>\ntypedecl signature</p>\n<p>consts Algebra :: \"'a algebra\" <br>\nconsts Sig :: \"'a algebra ‚áí signature\"</p>\n<p>type_synonym variable = string</p>\n<p>datatype nterm = VarApp variable \"nterm list\"</p>\n<p>axiomatization nt_frees :: \"signature ‚áí nterm ‚áí variable set\" where <br>\n  nt_frees_ax: \"nt_frees sig (VarApp x ts) =  {x} ‚à™ ‚ãÉ { nt_frees sig t | t. t ‚àà set ts }\"</p>\n<p>locale AA = <br>\n  fixes U :: \"'a algebra\" (\"ùîÑ\")</p>\n<p>context AA <br>\nbegin</p>\n<p>abbreviation S :: \"signature\" (\"ùíÆ\") where \"S ‚â° Sig ùîÑ\" <br>\nabbreviation frees :: \"nterm ‚áí variable set\" where \"frees t ‚â° nt_frees ùíÆ t\"</p>\n<p>lemma<br>\n  assumes \"frees (VarApp x ts) ‚äÜ X\"<br>\n  assumes \"i &lt; length ts\" <br>\n  shows \"frees (ts ! i) ‚äÜ X\"<br>\n  sledgehammer<br>\n  oops</p>\n<p>end</p>\n<p>lemma<br>\n  assumes \"nt_frees (Sig U) (VarApp x ts) ‚äÜ X\"<br>\n  assumes \"i &lt; length ts\" <br>\n  shows \"nt_frees (Sig U) (ts ! i) ‚äÜ X\"<br>\n  sledgehammer<br>\n  oops</p>\n<p>end</p>\n</blockquote>\n<p>On Mon, Jun 20, 2022, at 5:11 PM, Mathias Fleury wrote:</p>\n<blockquote>\n<blockquote>\n<p>Do you have an example theory where this happens?</p>\n<p>Mathias</p>\n</blockquote>\n<p>On 20/06/2022 15:26, Steven Obua wrote:</p>\n<blockquote>\n<blockquote>\n<p>Hi, </p>\n<p>I am a happy user of Isabelle/Isar and Sledgehammer, but am just now trying to also use locales, as in my use case there are just overwhelming arguments for it.<br>\nI am using the Isabelle/December 2021 distribution, but most of the time when I am trying to use sledgehammer within a locale context, I will get a message like this:</p>\n<p><code>\"cvc4\": Prover error:\nexception TERM raised (line 457 of \"~~/src/HOL/Tools/SMT/smt_translate.ML\"): bad SMT term\n</code></p>\n<p>It is the same message for other provers as well. Is this something that is a well-known problem? Without using locales I had such a problem only come up when my theory name was confused with some HOL theory name, and renaming my theory was a workaround. Is there something similar at play here? Is there an easy fix? Because I use sledgehammer a lot, so not being able to use it within a locale would be a severe blow against using locales.</p>\n<p>Cheers,</p>\n<p>Steven</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n<p><a href=\"/user_uploads/14278/pMg-8J6fn2zc2nCvSQypmVHX/image.png\">image.png</a><br>\n<a href=\"/user_uploads/14278/WMNGmWMscQ8XLU4LqN8japu2/image.png\">image.png</a></p>\n</blockquote>\n</blockquote>",
        "id": 287339299,
        "sender_full_name": "Email Gateway",
        "timestamp": 1656081552
    },
    {
        "content": "<p>From: Mathias Fleury &lt;<a href=\"mailto:mathias.fleury12@gmail.com\">mathias.fleury12@gmail.com</a>&gt;<br>\nHi Steven,</p>\n<p>In your definition of eval, unfold the <code>let op =</code> and the SMT <br>\ntranslation will work.</p>\n<p>I am still looking for the reason for this though. There seem to be some <br>\ninteraction between lambdas and lets.</p>\n<p>Mathias<br>\n<a href=\"/user_uploads/14278/EKgYKAhybx0qxTZ5wvjxOncC/image.png\">image.png</a><br>\n<a href=\"/user_uploads/14278/-36LeDD7uWf_60cLvGxdlPsS/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/EKgYKAhybx0qxTZ5wvjxOncC/image.png\" title=\"image.png\"><img src=\"/user_uploads/14278/EKgYKAhybx0qxTZ5wvjxOncC/image.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/14278/-36LeDD7uWf_60cLvGxdlPsS/image.png\" title=\"image.png\"><img src=\"/user_uploads/14278/-36LeDD7uWf_60cLvGxdlPsS/image.png\"></a></div>",
        "id": 287357826,
        "sender_full_name": "Email Gateway",
        "timestamp": 1656090184
    },
    {
        "content": "<p>From: Steven Obua &lt;<a href=\"mailto:obua@practal.com\">obua@practal.com</a>&gt;<br>\nHi Mathias,</p>\n<p>thank you for finding this! Even if the bug cannot be fixed easily, it is definitely very helpful to know how to not run into it in the first place.</p>\n<p>Cheers,</p>\n<p>Steven</p>\n<p>On Fri, Jun 24, 2022, at 6:02 PM, Mathias Fleury wrote:</p>\n<blockquote>\n<p>Hi Steven,</p>\n<p>In your definition of eval, unfold the <code>let op =</code> and the SMT translation will work.</p>\n<p>I am still looking for the reason for this though. There seem to be some interaction between lambdas and lets.</p>\n<p>Mathias</p>\n<p>On 24/06/2022 16:37, Steven Obua wrote:</p>\n<blockquote>\n<p>Hi Mathias,</p>\n<p>I would not expect anyone to debug without an example, actually I would not expect anyone to debug!</p>\n<p>In case someone feels the inclination to do so, though, I have now made my theories publicly available. They are not very big (and I hope it stays that way!). It is work in progress and still early stages.</p>\n<p>An example of the error situation can be found at<br>\n<a href=\"https://github.com/practal/AL-in-HOL/blob/f4557af8109501450009777d03741b9efe56d885/Valuation.thy#L167\">https://github.com/practal/AL-in-HOL/blob/f4557af8109501450009777d03741b9efe56d885/Valuation.thy#L167</a></p>\n<p>If you insert a call to sledgehammer there, you will get error messages of the type I talked about, see pictures below. I don't know though if outside of the locale the provers would succeed instead, or just timeout as well.</p>\n<p>Cheers,</p>\n<p>Steven</p>\n</blockquote>\n<p>On Fri, Jun 24, 2022, at 6:45 AM, Mathias Fleury wrote:</p>\n<blockquote>\n<blockquote>\n<p>Hi Steven,<br>\n</p>\n</blockquote>\n<p>On 23/06/2022 15:30, Steven Obua wrote:</p>\n<blockquote>\n<blockquote>\n<p>Hi Gerwin,</p>\n<p>But it works now mostly for me, the problems seem to occur, when they occur, only with the provers cvc4, z3 and verit. <br>\nGiven that these are the only SMT solver called by default from Isabelle, this makes a lot of sense that you face that error only with them.</p>\n</blockquote>\n<p>Without example (I can look at big theories), it is impossible to debug the problem.</p>\n<p>Cheers,</p>\n<p>Mathias</p>\n<blockquote>\n<p>Cheers,</p>\n<p>Steven<br>\n</p>\n</blockquote>\n<p>On Mon, Jun 20, 2022, at 11:31 PM, Gerwin Klein wrote:</p>\n<blockquote>\n<blockquote>\n<p>Hi Steven, </p>\n<p>we've definitely had (many) cases where sledgehammer fails to find a proof in a larger locale context, but does find a proof outside the locale. I usually do not get an error message -- it's just timing out, because there are more facts in the context. I'd say that is completely expected behaviour.</p>\n<p>\"bad SMT term\" sounds to me like a genuine error case, though, and not expected.</p>\n<p>Cheers,<br>\nGerwin</p>\n<p>On 21 Jun 2022, at 03:48, Steven Obua &lt;<a href=\"mailto:obua@practal.com\">obua@practal.com</a>&gt; wrote:</p>\n<blockquote>\n<p>Hi Mathias,</p>\n<p>sorry, I don't have an example that I can easily share now. I tried to construct one, see below, where the lemma inside of the context cannot be sledgehammered, but the same lemma outside can. But in this smaller example it works, in my larger real-life theory it fails. </p>\n<p>I am not doubting that sledgehammer works in principle in locales, I am just wondering if it is generally known currently that there can be problems, or if I am just running into some weird special cases.</p>\n<p>Cheers,</p>\n<p>Steven</p>\n<hr>\n<p>theory TestSledge imports Main<br>\nbegin</p>\n<p>typedecl 'a algebra<br>\ntypedecl signature</p>\n<p>consts Algebra :: \"'a algebra\" <br>\nconsts Sig :: \"'a algebra ‚áí signature\"</p>\n<p>type_synonym variable = string</p>\n<p>datatype nterm = VarApp variable \"nterm list\"</p>\n<p>axiomatization nt_frees :: \"signature ‚áí nterm ‚áí variable set\" where <br>\n  nt_frees_ax: \"nt_frees sig (VarApp x ts) =  {x} ‚à™ ‚ãÉ { nt_frees sig t | t. t ‚àà set ts }\"</p>\n<p>locale AA = <br>\n  fixes U :: \"'a algebra\" (\"ùîÑ\")</p>\n<p>context AA <br>\nbegin</p>\n<p>abbreviation S :: \"signature\" (\"ùíÆ\") where \"S ‚â° Sig ùîÑ\" <br>\nabbreviation frees :: \"nterm ‚áí variable set\" where \"frees t ‚â° nt_frees ùíÆ t\"</p>\n<p>lemma<br>\n  assumes \"frees (VarApp x ts) ‚äÜ X\"<br>\n  assumes \"i &lt; length ts\" <br>\n  shows \"frees (ts ! i) ‚äÜ X\"<br>\n  sledgehammer<br>\n  oops</p>\n<p>end</p>\n<p>lemma<br>\n  assumes \"nt_frees (Sig U) (VarApp x ts) ‚äÜ X\"<br>\n  assumes \"i &lt; length ts\" <br>\n  shows \"nt_frees (Sig U) (ts ! i) ‚äÜ X\"<br>\n  sledgehammer<br>\n  oops</p>\n<p>end</p>\n</blockquote>\n<p>On Mon, Jun 20, 2022, at 5:11 PM, Mathias Fleury wrote:</p>\n<blockquote>\n<blockquote>\n<p>Do you have an example theory where this happens?</p>\n<p>Mathias</p>\n</blockquote>\n<p>On 20/06/2022 15:26, Steven Obua wrote:</p>\n<blockquote>\n<blockquote>\n<p>Hi, </p>\n<p>I am a happy user of Isabelle/Isar and Sledgehammer, but am just now trying to also use locales, as in my use case there are just overwhelming arguments for it.<br>\nI am using the Isabelle/December 2021 distribution, but most of the time when I am trying to use sledgehammer within a locale context, I will get a message like this:</p>\n<p><code>\"cvc4\": Prover error:\nexception TERM raised (line 457 of \"~~/src/HOL/Tools/SMT/smt_translate.ML\"): bad SMT term\n</code></p>\n<p>It is the same message for other provers as well. Is this something that is a well-known problem? Without using locales I had such a problem only come up when my theory name was confused with some HOL theory name, and renaming my theory was a workaround. Is there something similar at play here? Is there an easy fix? Because I use sledgehammer a lot, so not being able to use it within a locale would be a severe blow against using locales.</p>\n<p>Cheers,</p>\n<p>Steven<br>\n</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n<p><a href=\"/user_uploads/14278/OysRs1law6ghytaNrdWW3rH9/image.png\">image.png</a><br>\n<a href=\"/user_uploads/14278/1DBRaYbmNsb9G0XYgoKz-ubR/image.png\">image.png</a></p>\n</blockquote>\n</blockquote>",
        "id": 287363016,
        "sender_full_name": "Email Gateway",
        "timestamp": 1656093068
    },
    {
        "content": "<p>From: Mathias Fleury &lt;<a href=\"mailto:mathias.fleury12@gmail.com\">mathias.fleury12@gmail.com</a>&gt;<br>\nHi Steven,</p>\n<p>I found the bug: there is missing recursive call of expand at <br>\n<a href=\"https://isabelle.in.tum.de/repos/isabelle/file/tip/src/HOL/Tools/SMT/smt_translate.ML#l216\">https://isabelle.in.tum.de/repos/isabelle/file/tip/src/HOL/Tools/SMT/smt_translate.ML#l216</a>. <br>\nSo lets inside lets are not expanded.</p>\n<p>If testboard does not complain about my patch, I will push it.</p>\n<p>Thanks for reporting the bug!</p>\n<p>Mathias<br>\n<a href=\"/user_uploads/14278/fhOiWQO9ofD9sBUYiQbLL3xs/image.png\">image.png</a><br>\n<a href=\"/user_uploads/14278/9JUczuTHqVLju0NTCVXHkT0J/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/fhOiWQO9ofD9sBUYiQbLL3xs/image.png\" title=\"image.png\"><img src=\"/user_uploads/14278/fhOiWQO9ofD9sBUYiQbLL3xs/image.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/14278/9JUczuTHqVLju0NTCVXHkT0J/image.png\" title=\"image.png\"><img src=\"/user_uploads/14278/9JUczuTHqVLju0NTCVXHkT0J/image.png\"></a></div>",
        "id": 287363352,
        "sender_full_name": "Email Gateway",
        "timestamp": 1656093250
    }
]