[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nCan anybody confirm this behaviour, e.g. with a single display and very large <br>\neditor view and/or small font?</p>\n<p>I cannot really reproduce it, although I see a small slowdown (factor 1.2) of <br>\ntext area painting after moving from Java 17 to Java 21 (Isabelle/4fb5e6499da9).</p>\n<p>My test environment: Macmini M1 with macOS 14.4.1 and two 4K-displays (HDMI <br>\nand DisplayPort).</p>\n<p>Makarius</p>",
        "id": 440281292,
        "sender_full_name": "Email Gateway",
        "timestamp": 1716455887
    },
    {
        "content": "<p>From: \"John F. Hughes\" &lt;<a href=\"mailto:jfh@cs.brown.edu\">jfh@cs.brown.edu</a>&gt;<br>\nI've just tested this on a 2015 Macbook</p>\n<p>Model Name: MacBook Pro</p>\n<p>Model Identifier: MacBookPro12,1</p>\n<p>Processor Name: Dual-Core Intel Core i5</p>\n<p>Processor Speed: 2.9 GHz</p>\n<p>Number of Processors: 1</p>\n<p>Total Number of Cores: 2</p>\n<p>L2 Cache (per Core): 256 KB</p>\n<p>L3 Cache: 3 MB</p>\n<p>Hyper-Threading Technology: Enabled</p>\n<p>Memory: 16 GB</p>\n<p>System Firmware Version: 481.0.0.0.0</p>\n<p>OS Loader Version: 540.120.3~37</p>\n<p>SMC Version (system): 2.28f7</p>\n<p>using two displays, one Thunderbolt using DP, the other a Dell U2715H using<br>\nHDMI, both using \"Default for display\" resolution.</p>\n<p>It's a bit slow (i.e., copy-pasting 2048 lines to get to 4096 took a<br>\nhalf-second or so, and then processing them all took 38 seconds), but the<br>\nUI repainting, etc., seemed pretty good even when there were those 4.1K<br>\nlines --- it almost kept up with my typing in a new theorem at the bottom<br>\nof the file (if x is a positive natural number, then so is 2x), although it<br>\nreminded me a little of the 300-baud modem days...I <em>could</em> type ahead a<br>\nbit if I tried. And it took 14 seconds for \"using assms by auto\" to be<br>\naccepted as a proof.</p>\n<p>Frankly, all that seems like the limitations of this 9-year-old laptop<br>\nrather than the software.</p>\n<p>I saw no difference in performance between the Thunderbolt screen and the<br>\nDell screen.</p>",
        "id": 440290496,
        "sender_full_name": "Email Gateway",
        "timestamp": 1716459110
    },
    {
        "content": "<p>From: Gerwin Klein &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nI can confirm that behaviour on a recent M3 MacBook Pro + 5k external Thunderbolt Display + MacOS 14.5 + Isabelle2024-RC3. On the laptop screen, the UI is very responsive and fast (faster than on any other machine I have), on the external display scrolling for instance is sluggish in normal use and does show the described symptoms for that specific lemma above repeated about 2000 times. The delay is not long, but noticeable enough to be annoying.</p>\n<p>This completely goes away if I move the same window over to the laptop screen.</p>\n<p>It does seem to be resolution dependent — if I manually reduce the resolution to something smaller on the external monitor, performance increases. Font size doesn’t seem to make a difference.</p>\n<p>The same happens to a lesser extent with a different external 4k monitor over USB-3. On that one I can still see a difference to the internal display, but the delay is no longer that annoying. The resolutions it shows me are</p>\n<ul>\n<li>laptop: 1512 x 982</li>\n<li>4k screen: 1920 x 1080</li>\n<li>5k screen: 2560 x 1440</li>\n</ul>\n<p>(it runs all of these in double resolution in reality)</p>\n<p>It doesn’t seem to matter whether both external screens are connected or not. If I extend the display via wifi to an iMac with 1920x1080 (x2) resolution, it performs better than the directly connected external 5k display (but still slower than the directly connected 4k display, of course). </p>\n<p>I do not observe that behaviour with other programs/editors, e.g. Safari or VSCode are both smooth and fast on the external displays.</p>\n<p>This also does not happen with Isabelle2023. The UI is normally responsive there on the external display.</p>\n<p>If I had to guess I would suspect something going wrong with Java and graphics hardware acceleration.</p>\n<p>Cheers,<br>\nGerwin</p>",
        "id": 440416189,
        "sender_full_name": "Email Gateway",
        "timestamp": 1716508557
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nYour guess is probably correct. Someone else has pointed to the following <br>\nticket on a private thread: <a href=\"https://bugs.openjdk.org/browse/JDK-8284378\">https://bugs.openjdk.org/browse/JDK-8284378</a></p>\n<p>\"\"\"<br>\nJEP 382 - macOS Metal Rendering Pipeline for Java 2D was delivered in JDK 17, <br>\nbut it is OFF by default, and OpenGL remains the default rendering pipeline.<br>\nHaving worked through the critical issues which are specific to the Metal <br>\npipeline, and having it available in two releases of JDK already, it is time <br>\nto make Metal the default pipeline.</p>\n<p>The benefits should be that the more modern Metal API will be more stable <br>\ngoing forward, be more power friendly, faster on most operations, and will <br>\nbenefit from increased focus on Metal in future Apple hardware.</p>\n<p>It will require macOS 10.14 or later - and all systems capable of running <br>\nmacOS 10.14 and later automatically support metal.<br>\nTo the remaining extent that JDK is supported or even functional on macOS <br>\n10.13 and earlier, they will continue to remain using OpenGL.</p>\n<p>Reversion to OpenGL will be possible so long as it is supported by specifying <br>\n-Dsun.java2d.opengl=true as a system property on the command line.<br>\n\"\"\"</p>\n<p>Maybe owners of very high-end Apple hardware can test that and report on the <br>\nresults.</p>\n<p>Makarius</p>",
        "id": 440472986,
        "sender_full_name": "Email Gateway",
        "timestamp": 1716542818
    },
    {
        "content": "<p>From: Gerwin Klein &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;</p>\n<blockquote>\n<p>On 24 May 2024, at 19:26, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n</blockquote>\n<blockquote>\n<p>\"\"\"<br>\n[..]<br>\nReversion to OpenGL will be possible so long as it is supported by specifying -Dsun.java2d.opengl=true as a system property on the command line.<br>\n\"\"\"</p>\n<p>Maybe owners of very high-end Apple hardware can test that and report on the results.</p>\n</blockquote>\n<p>Can confirm that adding <code>-Dsun.java2d.opengl=true</code> to JEDIT_JAVA_OPTIONS gives me the fast Isabelle2023 behaviour on the external display.</p>\n<p>Cheers,<br>\nGerwin</p>",
        "id": 440677007,
        "sender_full_name": "Email Gateway",
        "timestamp": 1716687544
    },
    {
        "content": "<p>From: Clemens Ballarin &lt;<a href=\"mailto:ballarin@in.tum.de\">ballarin@in.tum.de</a>&gt;<br>\nGlad to hear that this helps.</p>\n<p>Please consider reporting the issue to <br>\n<a href=\"https://bugs.java.com/bugdatabase/\">https://bugs.java.com/bugdatabase/</a>, perhaps after enquiring on <br>\n<a href=\"https://mail.openjdk.org/mailman/listinfo/client-libs-dev\">https://mail.openjdk.org/mailman/listinfo/client-libs-dev</a> how to best <br>\nproceed in this case.</p>\n<p>Clemens</p>",
        "id": 440700033,
        "sender_full_name": "Email Gateway",
        "timestamp": 1716715615
    }
]