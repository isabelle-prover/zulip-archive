[
    {
        "content": "<p>From: <a href=\"mailto:hannobecker@posteo.de\">hannobecker@posteo.de</a><br>\nHi all,</p>\n<p>In the context of a large Isabelle development, I noticed an occasional <br>\nyet<br>\nhefty performance degradation of Isabelle2023 compared to Isabelle2022. <br>\nThe<br>\nbehaviour is somewhat ephemeral and has escaped attempts to create a <br>\nminimal<br>\nexample, but here's some context &amp; symptoms:</p>\n<ul>\n<li>\n<p>The performance loss happens in a theory depending on many other <br>\ntheories.</p>\n</li>\n<li>\n<p>The entire body of the theory is within a locale context opened <br>\nimmediately<br>\n   after the theory preamble.</p>\n</li>\n<li>\n<p>All definitions in the locale take a noticeable time (~1s each) to<br>\n   process, while previously they were instantaneous.</p>\n</li>\n<li>\n<p>System: MacBook Pro, 32GB RAM, Ventura 13.5.2</p>\n</li>\n</ul>\n<p>Now for the interesting bit:</p>\n<ul>\n<li>\n<p>The performance degradation goes away when inserting a dummy lemma <br>\n(<code>lemma\n   dummy: shows &lt;x=x&gt; by simp</code>, say) before opening the locale context. <br>\nIn this case,<br>\n   the lemma itself is processed slowly (~1s again), but all subsequent <br>\ncommands are back<br>\n   to normal speed, including those happening in the context of the <br>\nlocale.</p>\n</li>\n<li>\n<p>Even when removing the dummy lemma afterwards, the re-processing of <br>\nthe theory body<br>\n   will still happen at normal speed.</p>\n</li>\n</ul>\n<p>Some speculations:<br>\nPerhaps some normalization or lazy evaluation step is happening the <br>\nfirst time a lemma or definition<br>\nis processed in a theory, but this step does not happen for commands <br>\ninside a locale?<br>\nConcretely, I got the impression that it may be related to local vs <br>\nglobal syntax, and how global syntax<br>\nis cached: When issuing a<code>Syntax.read_typ</code> prior to opening the locale, <br>\nthe slowdown disappears, while it<br>\ndoesn't with a <code>Syntax.read_typ</code> within the locale.</p>\n<p>Anyway, this is all I found so far. Any ideas?</p>\n<p>Cheers,<br>\nHanno</p>",
        "id": 392586633,
        "sender_full_name": "Email Gateway",
        "timestamp": 1695410482
    },
    {
        "content": "<p>From: <a href=\"mailto:hannobecker@posteo.de\">hannobecker@posteo.de</a><br>\nPing. Any thoughts on the issue below?</p>",
        "id": 397231927,
        "sender_full_name": "Email Gateway",
        "timestamp": 1697605933
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nHi Hanno,</p>\n<p>we can pick up this thread again, now that the Isabelle2024 release process <br>\nhas officially started with RC1: <br>\n<a href=\"https://isabelle-dev.sketis.net/phame/post/view/76/release_candidates_for_isabelle2024\">https://isabelle-dev.sketis.net/phame/post/view/76/release_candidates_for_isabelle2024</a></p>\n<p>This window of opportunity will be open for approx. 6 weeks, when the release <br>\nbecomes final, unchangeable, and by definition perfect. Isabelle has no <br>\n\"branches\", \"patches\", \"fixes\" and thus avoids a huge overhead in the <br>\ndevelopment process. In practice this merely means that test versions need to <br>\nbe tested before they converge to the final release.</p>\n<p>For Isabelle2024-RC1, I have produced the following change to the newly <br>\nintroduced inner syntax cache of Isabelle2023: <br>\n<a href=\"https://isabelle-dev.sketis.net/rISABELLE40f5ddeda2b4\">https://isabelle-dev.sketis.net/rISABELLE40f5ddeda2b4</a></p>\n<p>My guess from a distance is that your application has very large syntax tables <br>\nand overall rather big ML heap demands. Thus the cache (weak reference cell) <br>\nwas purged a bit too often (at GC time). In Isabelle2024-RC1 the memory <br>\nmanagement should again closer to Isabelle2022, but only in PIDE interaction, <br>\nnot in batch builds.</p>\n<p>Makarius</p>",
        "id": 431111686,
        "sender_full_name": "Email Gateway",
        "timestamp": 1712155875
    },
    {
        "content": "<p>From: <a href=\"mailto:hannobecker@posteo.de\">hannobecker@posteo.de</a><br>\nHi Makarius,</p>\n<p>I have tested our application on Isabelle2024-RC2 and can report that <br>\nthe problem has gone away, which is great. Thank you for your work.</p>",
        "id": 434895354,
        "sender_full_name": "Email Gateway",
        "timestamp": 1713843515
    }
]