[
    {
        "content": "<p>From: Javier Diaz &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nDear mailing list,</p>\n<p>I've been an Isabelle user for several years now and am passionate about<br>\nmathematical logic. I'm aware that there are lots of formalized results<br>\nregarding mathematical logic in Isabelle; however, I'd like to contribute<br>\nwith a new formaization on this field. Is there some specific topic you<br>\nwould suggest?</p>\n<p>Thanks a lot in advance.<br>\nKindest regards,<br>\nJavier</p>",
        "id": 321408940,
        "sender_full_name": "Email Gateway",
        "timestamp": 1673730448
    },
    {
        "content": "<p>From: Javier Diaz Manzi &lt;<a href=\"mailto:javier.diaz.manzi@gmail.com\">javier.diaz.manzi@gmail.com</a>&gt;<br>\nDear Isabelle users,</p>\n<p>I'm passionate about mathematical logic and Isabelle. I'm aware that there<br>\nare lots of formalized results regarding mathematical logic in Isabelle;<br>\nhowever, I'd like to contribute with a new formaization on this field. Is<br>\nthere some specific topic you would suggest?</p>\n<p>Thanks a lot in advance.<br>\nKindest regards,<br>\nJavier</p>",
        "id": 321501849,
        "sender_full_name": "Email Gateway",
        "timestamp": 1673797256
    },
    {
        "content": "<p>From: Ken Kubota &lt;<a href=\"mailto:mail@kenkubota.de\">mail@kenkubota.de</a>&gt;<br>\nQuantification over types would allow for the natural expression of many mathematical fields such as abstract algebra (e.g., group theory).<br>\nTwo logics are Peter B. Andrews’ logic Q (not to be confused with Q0) and Tom Melham’s Extended HOL, see p. 1 box 3.1. here: <a href=\"https://owlofminerva.net/files/fom_2018.pdf\">https://owlofminerva.net/files/fom_2018.pdf</a><br>\nR0 uses lambda for type abstraction, as suggested by Mike Gordon (but implemented independently of his idea): <a href=\"https://owlofminerva.net/the-mathematical-logic-r0/\">https://owlofminerva.net/the-mathematical-logic-r0/</a></p>\n<p>Kind regards,</p>\n<p>Ken Kubota</p>\n<hr>\n<p>Ken Kubota<br>\n<a href=\"https://doi.org/10.4444/100\">https://doi.org/10.4444/100</a></p>",
        "id": 321527170,
        "sender_full_name": "Email Gateway",
        "timestamp": 1673813387
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nHow is this relevant to formalizations in Isabelle/HOL at all?</p>\n<p>Makarius</p>",
        "id": 321630904,
        "sender_full_name": "Email Gateway",
        "timestamp": 1673872760
    },
    {
        "content": "<p>From: Ken Kubota &lt;<a href=\"mailto:mail@kenkubota.de\">mail@kenkubota.de</a>&gt;<br>\nIt would be an extension of Isabelle/HOL or an alternative to Isabelle/HOL with greater expressive power.</p>\n<p>Isabelle/HOL is, if I’m not mistaken, Isabelle’s implementation of Mike Gordon’s HOL,<br>\nwhich is basically a polymorphic variant of Church’s simple type theory, i.e., Church’s logic extended by free (unquantified) type variables.</p>\n<p>So the suggestion is not to add new formalizations of particular theories _within_ Isabelle/HOL,<br>\nbut to to formalize a _new object-logic_ like Isabelle/HOL within Isabelle’s meta-logic<br>\n(using the terminology from <a href=\"https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-130.pdf\">https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-130.pdf</a>),<br>\nwhich would be, for example, called Isabelle/ExtendedHOL (Tom Melham’s logic) or Isabelle/Q (Peter B. Andrews’ logic),<br>\nand much more powerful than Isabelle/HOL, and hence overcome some of the known limitations of HOL.</p>\n<p>Mike Gordon himself had announced explicit quantification over types for HOL in 2000 (\"future versions of HOL [...] terms of the<br>\nform ∀α.t (where α is a type variable)\"), and proposed lambda abstraction for HOL in 2001 (\"λ-terms like λα. λx:α. x\"),<br>\nbut unfortunately this never materalized.</p>\n<p>Kind regards,</p>\n<p>Ken Kubota</p>\n<hr>\n<p>Ken Kubota<br>\n<a href=\"https://doi.org/10.4444/100\">https://doi.org/10.4444/100</a></p>",
        "id": 321681443,
        "sender_full_name": "Email Gateway",
        "timestamp": 1673887272
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;</p>\n<blockquote>\n<blockquote>\n<p>Am 16.01.2023 um 13:38 schrieb Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;:</p>\n<p>How is this relevant to formalizations in Isabelle/HOL at all?</p>\n</blockquote>\n</blockquote>\n<p>The short answer: this is irrelevant to formalizations in Isabelle/HOL.</p>\n<p>Makarius</p>",
        "id": 321691824,
        "sender_full_name": "Email Gateway",
        "timestamp": 1673891243
    },
    {
        "content": "<p>From: Ken Kubota &lt;<a href=\"mailto:mail@kenkubota.de\">mail@kenkubota.de</a>&gt;<br>\nDear Javier,</p>\n<p>Concerning Tom Melham’s Extended HOL, I believe he will be able to give some hints on implementation directly if you contact him: <a href=\"https://www.cs.ox.ac.uk/tom.melham/\">https://www.cs.ox.ac.uk/tom.melham/</a><br>\nHe had sent me his article after I presented my idea on the HOL-info mailing list, so I believe he will help in some way.</p>\n<p>Tom Melham’s paper heavily draws on Peter B. Andrews’ logic Q, so although Peter is retired, I'd make an attempt and ask him for hints, not only concerning implementing Q, but also how to implement a natural deduction variant: <a href=\"https://gtps.math.cmu.edu/andrews.html\">https://gtps.math.cmu.edu/andrews.html</a></p>\n<p>Both his logics Q0 and Q are Hilbert-style systems, which means that for a practical implementation a natural deduction variant must be formulated.<br>\nCris Perdue successfully created a natural deduction software implementation of Peter B. Andrews’ logic Q0: <a href=\"https://prooftoys.org/about/\">https://prooftoys.org/about/</a><br>\nSo in practical terms he might a person to collaborate with for a concrete implementation.<br>\nYou might have a look at his websites <a href=\"http://prooftoys.org\">prooftoys.org</a> and <a href=\"http://mathtoys.org\">mathtoys.org</a>.<br>\nThe interactive example was quite impressive when I had a look at it, but it seems broken at the moment: <a href=\"https://mathtoys.org/simplify.html\">https://mathtoys.org/simplify.html</a><br>\nHe is also active in the Metamath project: <a href=\"https://groups.google.com/g/metamath\">https://groups.google.com/g/metamath</a></p>\n<p>Thierry Arnoux implemented Q0 in Metamath: <a href=\"https://github.com/tirix/q0.mm\">https://github.com/tirix/q0.mm</a><br>\nMaybe he might be interested in a formalization of Q (or Tom Melham’s Extended HOL) in Isabelle.</p>\n<p>I could make my paper on R0 available online, but being neither an Isabelle expert nor too familiar with natural deduction systems, and due to constraints imposed by other projects I cannot make a promise for any enduring commitment besides answering questions from time to time.</p>\n<p>Best regards,</p>\n<p>Ken Kubota</p>\n<hr>\n<p>Ken Kubota<br>\n<a href=\"https://doi.org/10.4444/100\">https://doi.org/10.4444/100</a></p>",
        "id": 321692680,
        "sender_full_name": "Email Gateway",
        "timestamp": 1673891587
    },
    {
        "content": "<p>From: Ken Kubota &lt;<a href=\"mailto:mail@kenkubota.de\">mail@kenkubota.de</a>&gt;<br>\nTechnically speaking, yes, but the question's implication itself is very problematic.</p>\n<p>Why should somebody confine oneself to the obsolete and obviously impoverished type system of HOL (Church's logic, slightly modified)?<br>\nWhy should the scientific community blatantly ignore the obviously correct hints from Mike Gordon, the founder of HOL, on future developments?</p>\n<p>The limitations of HOL are well known, criticized by many people (Freek Wiedijk: \"The HOL type system is too poor. As we already argued in the previous section, it is too weak to properly do abstract algebra.\" / John Harrison et al.: \"Another limitation of the simple HOL type system is that there is no explicit quantifier over polymorphic type variables, which can make many standard results like completeness theorems and universal properties awkward to express\").</p>\n<p>For example, with lambda abstraction over types the fact that (Z, +) is a group can be expressed naturally as<br>\n    Grp Z +<br>\nwhich is what a mathematician wants. But this is not possible in HOL.</p>\n<p>My example was formally proving the theorem<br>\n    Grp o XOR<br>\nexpressing the fact that (o, XOR) is a group: <a href=\"https://www.owlofminerva.net/files/formulae.pdf#page=420\">https://www.owlofminerva.net/files/formulae.pdf#page=420</a> (wff 6955 = XorGroup)</p>\n<p>For the group definition see <a href=\"https://www.owlofminerva.net/files/formulae.pdf#page=362\">https://www.owlofminerva.net/files/formulae.pdf#page=362</a> (wff 266 = Grp)<br>\nand for some explanation <a href=\"https://sympa.inria.fr/sympa/arc/coq-club/2022-06/msg00025.html\">https://sympa.inria.fr/sympa/arc/coq-club/2022-06/msg00025.html</a></p>\n<p>Of course, from an engineering perspective (for practical purposes like smart card applications), formalizing/automating HOL theorems or theorems of first-order logic still has its legitimacy.</p>\n<p>But from a scientific perspective, formalizing/automating 1940 type theory has its limits.</p>\n<hr>\n<p>Ken Kubota<br>\n<a href=\"https://doi.org/10.4444/100\">https://doi.org/10.4444/100</a></p>",
        "id": 321706579,
        "sender_full_name": "Email Gateway",
        "timestamp": 1673897337
    },
    {
        "content": "<p>From: Rob Arthan &lt;<a href=\"mailto:rda@lemma-one.com\">rda@lemma-one.com</a>&gt;<br>\nDear All,</p>\n<p>A couple of points in this connection:</p>\n<p>1) Maybe it has already been mentioned in this thread, but if not, people should be aware of Peter Homeier’s HOL Omega, which attempts to address the issue under debate (and I think was in part inspired by Mike Gordon’s observations about lambda-abstraction over types).</p>\n<p>2) With the existing polymorphism, you can define classes of structures such as “all groups”, because that doesn’t require anything more than an outermost universal quantifier over type variables, which is what HOL as is gives you. (E.g., see my paper on group theory in ProofPower-HOL: <a href=\"http://www.lemma-one.com/ProofPower/examples/wrk068.pdf\">http://www.lemma-one.com/ProofPower/examples/wrk068.pdf</a>.) However, I agree that there are many useful properties that are best specified using more general quantification over types.</p>\n<p>Regards,</p>\n<p>Rob.</p>",
        "id": 321711442,
        "sender_full_name": "Email Gateway",
        "timestamp": 1673899725
    },
    {
        "content": "<p>From: Javier Diaz Manzi &lt;<a href=\"mailto:javier.diaz.manzi@gmail.com\">javier.diaz.manzi@gmail.com</a>&gt;<br>\nDear Ken,</p>\n<p>Thanks a lot for your response. The logics that you referred to look very<br>\ninteresting and I'd certainly love to collaborate in their Isabelle<br>\nformalizations. Is there any ongoing project that I could join or any other<br>\nway to collaborate?</p>\n<p>Looking forward to your kind response.<br>\nBest regards,<br>\nJavier</p>\n<p>El dom, 15 ene 2023 a la(s) 17:09, Ken Kubota (<a href=\"mailto:mail@kenkubota.de\">mail@kenkubota.de</a>) escribió:</p>",
        "id": 322098313,
        "sender_full_name": "Email Gateway",
        "timestamp": 1674059855
    }
]