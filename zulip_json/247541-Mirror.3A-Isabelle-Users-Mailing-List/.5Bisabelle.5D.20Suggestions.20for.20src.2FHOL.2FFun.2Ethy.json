[
    {
        "content": "<p>From: Jeremy Sylvestre &lt;<a href=\"mailto:jsylvest@ualberta.ca\">jsylvest@ualberta.ca</a>&gt;<br>\nIn src/HOL/Fun.thy:</p>\n<ol>\n<li>lemma inj_uminus is proved in context ordered_ab_group_add but is true<br>\nin group_add</li>\n</ol>\n<p>lemma (in group_add) inj_uminus[simp, intro]: \"inj_on uminus A\"<br>\n  by (auto intro!: inj_onI)</p>\n<ol start=\"2\">\n<li>lemmas bij_uminus, surj_plus, inj_diff_right, surj_diff_right are proved<br>\nin context ab_group_add but are true in group_add</li>\n</ol>\n<p>lemma bij_uminus: \"bij (uminus :: 'a \\&lt;Rightarrow&gt; 'a::group_add)\"<br>\n  by (intro bijI, rule inj_uminus, intro surjI, rule minus_minus)</p>\n<p>context group_add<br>\nbegin</p>\n<p>lemma surj_plus: \"surj ((+) a)\"<br>\nproof (standard, simp, standard, simp)<br>\n  fix x<br>\n  have \"x = a + (-a + x)\" by (simp add: add.assoc)<br>\n  thus \"x \\&lt;in&gt; range ((+) a)\" by blast<br>\nqed</p>\n<p>lemma inj_diff_right [simp]: \"inj (\\&lt;lambda&gt;b. b - a)\"<br>\n  by (auto intro: injI simp add: algebra_simps)</p>\n<p>lemma surj_diff_right [simp]: \"surj (\\&lt;lambda&gt;x. x - a)\"<br>\nproof (standard, simp, standard, simp)<br>\n  fix x<br>\n  have \"x = x + a - a\" by simp<br>\n  thus \"x \\&lt;in&gt; range (\\&lt;lambda&gt;x. x - a)\" by fast<br>\nqed</p>\n<p>end</p>\n<ol start=\"3\">\n<li>Here are some other related facts that could be added to Fun.thy</li>\n</ol>\n<p>context semigroup_add<br>\nbegin</p>\n<p>lemma comp_plus: \"(+) a \\&lt;circ&gt; (+) b = (+) (a + b)\"<br>\n  using add.assoc[of a b] by fastforce</p>\n<p>lemma comp_plus_right:<br>\n  \"(\\&lt;lambda&gt;x. x + a) \\&lt;circ&gt; (\\&lt;lambda&gt;x. x + b) = (\\&lt;lambda&gt;x. x + (b +<br>\na))\"<br>\n  using add.assoc[of _ b a] by fastforce</p>\n<p>end</p>\n<p>lemma the_inv_eqI: \"the_inv f = g\" if \"bij f\" and \"\\&lt;And&gt;x. f (g x) = x\"<br>\n  using that the_inv_f_f[of f \"g _\"] bij_is_inj[of f] by presburger</p>\n<p>context group_add<br>\nbegin</p>\n<p>lemma bij_plus : \"bij ((+) a)\"<br>\n  using surj_plus bij_betw_add by presburger</p>\n<p>lemma the_inv_plus: \"the_inv ((+) t) = (\\&lt;lambda&gt;x. -t + x)\"<br>\n  using bij_plus by (auto intro: the_inv_eqI)</p>\n<p>lemma bij_diff_right: \"bij (\\&lt;lambda&gt;x. x - a)\"<br>\n  unfolding bij_def by force</p>\n<p>lemma the_inv_diff_right: \"the_inv (\\&lt;lambda&gt;x. x - a) = (\\&lt;lambda&gt;x. x +<br>\na)\"<br>\n  using bij_diff_right by (auto intro: the_inv_eqI)</p>\n<p>lemma bij_plus_right: \"bij (\\&lt;lambda&gt;x. x + a)\"<br>\n  using bij_betw_the_inv_into bij_diff_right the_inv_diff_right by metis</p>\n<p>lemma the_inv_plus_right: \"the_inv (\\&lt;lambda&gt;x. x + a) = (\\&lt;lambda&gt;x. x -<br>\na)\"<br>\n  using bij_plus_right by (auto intro: the_inv_eqI)</p>\n<p>lemma plus_diff_commutes: \"(\\&lt;lambda&gt;x. x - b) \\&lt;circ&gt; (+) a = (+) a<br>\n\\&lt;circ&gt; (\\&lt;lambda&gt;x. x - b)\"<br>\n  using add.assoc[of a _ \"-b\"] by fastforce</p>\n<p>lemma conjugation_eq_plus_diff_comp: \"(\\&lt;lambda&gt;x. a + x - a) =<br>\n(\\&lt;lambda&gt;x. x - a) \\&lt;circ&gt; (+) a\"<br>\n  by fastforce</p>\n<p>lemma conjugation_eq_diff_plus_comp: \"(\\&lt;lambda&gt;x. a + x - a) = (+) a<br>\n\\&lt;circ&gt; (\\&lt;lambda&gt;x. x - a)\"<br>\n  by (simp add: conjugation_eq_plus_diff_comp plus_diff_commutes)</p>\n<p>lemma conjugation_bij: \"bij (\\&lt;lambda&gt;x. a + x - a)\"<br>\n  using conjugation_eq_plus_diff_comp bij_comp bij_plus bij_diff_right by<br>\nmetis</p>\n<p>lemma the_inv_conjugation:<br>\n  \"the_inv (\\&lt;lambda&gt;x. a + x - a) = (\\&lt;lambda&gt;x. -a + x + a)\"<br>\n  using conjugation_bij by (auto intro: the_inv_eqI simp add: algebra_simps)</p>\n<p>end</p>",
        "id": 302902806,
        "sender_full_name": "Email Gateway",
        "timestamp": 1665164385
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nJeremy, thanks for the generalisations of the type classes which I have <br>\ncommitted here<br>\n<a href=\"https://isabelle.in.tum.de/repos/isabelle/rev/d123d9f67514\">https://isabelle.in.tum.de/repos/isabelle/rev/d123d9f67514</a></p>\n<p>I did not add any of your additional lemmas (see 3 below) to Fun.thy because I <br>\nwonder whether Fun.thy is the best place for them: they are purely algebraic, <br>\nbut on a functional level. Originally Fun.thy was meant to hold very generic <br>\nlemmas about functions, eg intjectivity, surjectivity etc. Then monotonicity <br>\nreasoning. Then more algebraic lemmas crept in, eg \"surj ((+) a)\", which <br>\nprompted you to suggest further algebraic lemmas.</p>\n<p>The reason for this is that at the point where all the order and algebra type <br>\nclasses are defined, Fun.thy (with o, inj, surj etc) is not known yet. The <br>\nreason is that Fun builds on Set which uses boolean_algebra which uses Lattices <br>\nwhich uses Groups.</p>\n<p>General question: should we continue to put material that morally belongs into <br>\nalgebra into Fun (and improve its section structure) or should we start a new <br>\ntheory?</p>\n<p>Tobias<br>\n<a href=\"/user_uploads/14278/yo5_29CFshvQFss8W0VDg03C/smime.p7s\">smime.p7s</a></p>",
        "id": 303093468,
        "sender_full_name": "Email Gateway",
        "timestamp": 1665293712
    },
    {
        "content": "<p>From: Jeremy Sylvestre &lt;<a href=\"mailto:jsylvest@ualberta.ca\">jsylvest@ualberta.ca</a>&gt;<br>\nDear Tobias, thanks for incorporating those generalizations.</p>\n<p>The extra lemmas are things that came up as part of a larger project that I<br>\nhope might be included into HOL/Computational_Algebra, perhaps that is a<br>\nbetter place for them if they are accepted.</p>\n<p>Cheers,<br>\nJeremy S.</p>",
        "id": 303318930,
        "sender_full_name": "Email Gateway",
        "timestamp": 1665432133
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nJeremy,</p>\n<p>I have actually included the most elementary lemmas and have cleaned up that <br>\nwhole group of lemmas: surj/inj/bij of both (%x. x+/-a) and (%x. a+/-x) are <br>\npresent now. <a href=\"https://isabelle.in.tum.de/repos/isabelle/rev/26524d0b4395\">https://isabelle.in.tum.de/repos/isabelle/rev/26524d0b4395</a></p>\n<p>Tobias<br>\n<a href=\"/user_uploads/14278/6yLEb8GdVeCEp_nbPb1hkOa_/smime.p7s\">smime.p7s</a></p>",
        "id": 303563317,
        "sender_full_name": "Email Gateway",
        "timestamp": 1665554057
    }
]