[
    {
        "content": "<p>From: Albert Jiang &lt;<a href=\"mailto:albert594250@gmail.com\">albert594250@gmail.com</a>&gt;<br>\nHi,</p>\n<p>I'm working on a system that allows the communication between Isabelle and<br>\noutside agents. I wonder if there is an easy way to automatically translate<br>\nthe proof in Isar to ML? For example, is there an automatic way that allows<br>\nthe following proof</p>\n<p>lemma bar:\"(1::nat)=1\"<br>\n  apply (rule refl)<br>\n  done</p>\n<p>to be translated into something like this:</p>\n<p>ML ‹<br>\nval ctxt = @{context};val bar' =<br>\n@{term \"(1::nat) = 1\"}<br>\n|&gt; HOLogic.mk_Trueprop<br>\n|&gt; Thm.cterm_of ctxt<br>\n|&gt; Goal.init<br>\n|&gt; Tactic.rule_by_tactic ctxt (Classical.rule_tac ctxt @{thms refl} [] 1)<br>\n|&gt; Goal.finish ctxt<br>\n|&gt; Thm.close_derivation ⌂<br>\n;ML_Thms.bind_thm (\"bar'\",bar');<br>\n›</p>\n<p>?</p>\n<p>I only got into Isar/ML recently so I'm sorry if this is a trivial question.</p>\n<p>Many thanks,</p>\n<p>Albert</p>",
        "id": 223204044,
        "sender_full_name": "Email Gateway",
        "timestamp": 1611049069
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 18/01/2021 22:12, Albert Jiang wrote:</p>\n<blockquote>\n<p>I'm working on a system that allows the communication between Isabelle and<br>\noutside agents. I wonder if there is an easy way to automatically translate<br>\nthe proof in Isar to ML? For example, is there an automatic way that allows<br>\nthe following proof</p>\n<p>lemma bar:\"(1::nat)=1\" <br>\n  apply (rule refl)<br>\n  done</p>\n<p>to be translated into something like this:</p>\n<p>ML ‹<br>\nval ctxt = @{context};val bar' = <br>\n@{term \"(1::nat) = 1\"}<br>\n|&gt; HOLogic.mk_Trueprop<br>\n|&gt; Thm.cterm_of ctxt<br>\n|&gt; Goal.init<br>\n|&gt; Tactic.rule_by_tactic ctxt (Classical.rule_tac ctxt @{thms refl} [] 1) <br>\n|&gt; Goal.finish ctxt<br>\n|&gt; Thm.close_derivation ⌂<br>\n;ML_Thms.bind_thm (\"bar'\",bar');<br>\n›</p>\n</blockquote>\n<p>From where did you get this proposal for the translation? It is actually quite<br>\nfar from the reality of how Isar really works. So the translation would break<br>\ndown in nontrivial cases.</p>\n<blockquote>\n<p>I only got into Isar/ML recently so I'm sorry if this is a trivial question.</p>\n</blockquote>\n<p>An easy way would be to make a function that uses Isar source text and<br>\ninterprets it faithfully. But what would be the purpose of that?</p>\n<p>Just the usual meta-questions: What is your actual application? What are your<br>\nactual needs?</p>\n<p>Makarius</p>",
        "id": 223216193,
        "sender_full_name": "Email Gateway",
        "timestamp": 1611057332
    },
    {
        "content": "<p>From: Albert Jiang &lt;<a href=\"mailto:albert594250@gmail.com\">albert594250@gmail.com</a>&gt;<br>\nHi Makarius,</p>\n<p>Thank you for your answer!</p>\n<p>The actual application is an Isabelle theorem proving environment that's<br>\nable to interact with a Python client. The client will send the<br>\nstep-by-step proof as strings and receive the proof state info at each<br>\nstep. I'm basing this on the scala-isabelle library and gRPC. The library<br>\nallows the compilation of ML code. So I thought if I could translate Isar<br>\nstrings into ML code, the Python client can send in Isar commands line by<br>\nline. And then the commands can be translated into ML code, compiled, and<br>\nexecuted.</p>\n<blockquote>\n<p>An easy way would be to make a function that uses Isar source text and<br>\ninterprets it faithfully. But what would be the purpose of that?</p>\n</blockquote>\n<p>I wonder if you could give some pointers as to how to make such a function?</p>\n<p>Many thanks,<br>\nAlbert</p>",
        "id": 223226698,
        "sender_full_name": "Email Gateway",
        "timestamp": 1611063675
    },
    {
        "content": "<p>From: Dominique Unruh &lt;<a href=\"mailto:unruh@ut.ee\">unruh@ut.ee</a>&gt;<br>\nHi,</p>\n<p>if I understand right, you want to do the following (from the python side):</p>\n<p>* Create a new theory.<br>\n  * Apply Isar commands one-by-one (where the commands are given as<br>\n    strings, same as they would be in actual Isabelle source code).</p>\n<p>* After each command, get access to the \"state\" of the Isar system<br>\n    (which could be the toplevel theory, or the current proof state,<br>\n    depending what the commands so far where).</p>\n<p>* Inspect that state in various ways</p>\n<p>If this is the case, then you might be interested in <br>\n<a href=\"https://github.com/dominique-unruh/scala-isabelle/blob/master/src/test/scala/de/unruh/isabelle/experiments/ExecuteIsar.scala\">https://github.com/dominique-unruh/scala-isabelle/blob/master/src/test/scala/de/unruh/isabelle/experiments/ExecuteIsar.scala</a></p>\n<p>This is an experiment where I did more or less the above. This code is <br>\nuncommented and maybe a bit chaotic (it's me doing experiments, not part <br>\nof the distributed library) but I'd be happy to walk you through it on <br>\nthe scala-isabelle gitter chat.</p>\n<p>I also have code fragments that parse a method description (the ... in <br>\napply (...)) and allow you to apply it to a goal. If you need that one, <br>\nI can have a look where I put it...</p>\n<p>Best wishes,<br>\nDominique.</p>",
        "id": 223231047,
        "sender_full_name": "Email Gateway",
        "timestamp": 1611065571
    },
    {
        "content": "<p>From: Albert Jiang &lt;<a href=\"mailto:albert594250@gmail.com\">albert594250@gmail.com</a>&gt;<br>\nHi Dominique,</p>\n<p>On Tue, Jan 19, 2021 at 2:12 PM Dominique Unruh &lt;<a href=\"mailto:unruh@ut.ee\">unruh@ut.ee</a>&gt; wrote:</p>\n<blockquote>\n<p>Hi,</p>\n<p>if I understand right, you want to do the following (from the python side):</p>\n<p>- Create a new theory.<br>\n   - Apply Isar commands one-by-one (where the commands are given as<br>\n   strings, same as they would be in actual Isabelle source code).<br>\n   - After each command, get access to the \"state\" of the Isar system<br>\n   (which could be the toplevel theory, or the current proof state, depending<br>\n   what the commands so far where).<br>\n   - Inspect that state in various ways</p>\n<p>If this is the case, then you might be interested in<br>\n<a href=\"https://github.com/dominique-unruh/scala-isabelle/blob/master/src/test/scala/de/unruh/isabelle/experiments/ExecuteIsar.scala\">https://github.com/dominique-unruh/scala-isabelle/blob/master/src/test/scala/de/unruh/isabelle/experiments/ExecuteIsar.scala</a></p>\n<p>Yes this is exactly what I need. Thank you for the pointer!</p>\n</blockquote>\n<blockquote>\n<p>This is an experiment where I did more or less the above. This code is<br>\nuncommented and maybe a bit chaotic (it's me doing experiments, not part of<br>\nthe distributed library) but I'd be happy to walk you through it on the<br>\nscala-isabelle gitter chat.</p>\n<p>I also have code fragments that parse a method description (the ... in<br>\napply (...)) and allow you to apply it to a goal. If you need that one, I<br>\ncan have a look where I put it...</p>\n<p>I'll be very grateful if you can take a look at where the relevant code<br>\nfragments are.</p>\n</blockquote>\n<blockquote>\n<p>Best wishes,<br>\nDominique.</p>\n<p>Many thanks,<br>\nAlbert</p>\n</blockquote>\n<blockquote>\n<p>On 1/19/21 3:40 PM, Albert Jiang wrote:</p>\n<p>Hi Makarius,</p>\n<p>Thank you for your answer!</p>\n<p>The actual application is an Isabelle theorem proving environment that's<br>\nable to interact with a Python client. The client will send the<br>\nstep-by-step proof as strings and receive the proof state info at each<br>\nstep. I'm basing this on the scala-isabelle library and gRPC. The library<br>\nallows the compilation of ML code. So I thought if I could translate Isar<br>\nstrings into ML code, the Python client can send in Isar commands line by<br>\nline. And then the commands can be translated into ML code, compiled, and<br>\nexecuted.</p>\n<blockquote>\n<p>An easy way would be to make a function that uses Isar source text and<br>\ninterprets it faithfully. But what would be the purpose of that?</p>\n</blockquote>\n<p>I wonder if you could give some pointers as to how to make such a function?</p>\n<p>Many thanks,<br>\nAlbert</p>\n<p>On Tue, Jan 19, 2021 at 11:55 AM Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n<blockquote>\n<p>On 18/01/2021 22:12, Albert Jiang wrote:</p>\n<blockquote>\n<p>I'm working on a system that allows the communication between Isabelle<br>\nand<br>\noutside agents. I wonder if there is an easy way to<br>\nautomatically translate<br>\nthe proof in Isar to ML? For example, is there an automatic way that<br>\nallows<br>\nthe following proof</p>\n<p>lemma bar:\"(1::nat)=1\"<br>\n  apply (rule refl)<br>\n  done</p>\n<p>to be translated into something like this:</p>\n<p>ML ‹<br>\nval ctxt = @{context};val bar' =<br>\n@{term \"(1::nat) = 1\"}<br>\n|&gt; HOLogic.mk_Trueprop<br>\n|&gt; Thm.cterm_of ctxt<br>\n|&gt; Goal.init<br>\n|&gt; Tactic.rule_by_tactic ctxt (Classical.rule_tac ctxt @{thms refl} []<br>\n1)<br>\n|&gt; Goal.finish ctxt<br>\n|&gt; Thm.close_derivation ⌂<br>\n;ML_Thms.bind_thm (\"bar'\",bar');<br>\n›</p>\n</blockquote>\n<p>From where did you get this proposal for the translation? It is actually<br>\nquite<br>\nfar from the reality of how Isar really works. So the translation would<br>\nbreak<br>\ndown in nontrivial cases.</p>\n<blockquote>\n<p>I only got into Isar/ML recently so I'm sorry if this is a trivial<br>\nquestion.</p>\n</blockquote>\n<p>An easy way would be to make a function that uses Isar source text and<br>\ninterprets it faithfully. But what would be the purpose of that?</p>\n<p>Just the usual meta-questions: What is your actual application? What are<br>\nyour<br>\nactual needs?</p>\n<p>Makarius</p>\n</blockquote>\n</blockquote>",
        "id": 223232980,
        "sender_full_name": "Email Gateway",
        "timestamp": 1611066369
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe scala-isabelle library falls outside my understanding of<br>\nIsabelle/Scala/PIDE --- I am the inventor of that framework.</p>\n<p>If you want to interact with Isabelle programmatically in an official manner,<br>\nsee the \"system\" manual chapter 4: it describes a TCP server with JSON<br>\nprotocol, but it is also possible (actually easier) to work directly in<br>\nIsabelle/Scala with the Headless PIDE session. See also \"isabelle<br>\nscala_project\" in the \"system\" manual.</p>\n<p>If not, I will merely ignore this thread and leave it to external tool<br>\nproviders to sort out the problems (small ones and conceptual ones).</p>\n<p>Makarius</p>",
        "id": 223241141,
        "sender_full_name": "Email Gateway",
        "timestamp": 1611069540
    }
]