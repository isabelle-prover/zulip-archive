[
    {
        "content": "<p>From: Georgy Dunaev &lt;<a href=\"mailto:georgedunaev@gmail.com\">georgedunaev@gmail.com</a>&gt;<br>\nDear all,</p>\n<p>Previously I've asked for some help in similar question which is not well<br>\nformulated due to some linguistic difficulties:<br>\n<a href=\"https://lists.cam.ac.uk/mailman/htdig/cl-isabelle-users/2020-March/msg00106.html\">https://lists.cam.ac.uk/mailman/htdig/cl-isabelle-users/2020-March/msg00106.html</a><br>\n(<br>\n<a href=\"https://www.cl.cam.ac.uk/research/hvg/Isabelle/dist/library/ZF/ZF/IFOL.html\">https://www.cl.cam.ac.uk/research/hvg/Isabelle/dist/library/ZF/ZF/IFOL.html</a><br>\n )</p>\n<p>But now I've wrote a small pdf about what exactly I hope to obtain (This<br>\nunfinished draft explains what exactly I want): (It is also attached to the<br>\nletter.)</p>\n<p><a href=\"https://github.com/georgydunaev/TRANSLATION/releases/download/0.1/translation.pdf\">https://github.com/georgydunaev/TRANSLATION/releases/download/0.1/translation.pdf</a><br>\n(Sources are here <a href=\"https://github.com/georgydunaev/TRANSLATION\">https://github.com/georgydunaev/TRANSLATION</a> , I compile<br>\nwith use of TexMaker.)</p>\n<p>I want the translation function from Isabelle/ZF terms to<br>\nmetatheorems about formulas of some predicate calculus. The set of<br>\nmetatheorems about derivability of ZF f1st-order set theory is (badly)<br>\ncalled FOLFormulas.</p>\n<p>( Details: There are countable amount of variables, formulas \"forall x.<br>\nx=x\"  and \"forall y. y=y\" are not equal. There is one set of variables,<br>\nsome are bounded and all the other are free.)</p>\n<p>I feel like it exists, but I want it to be strictly defined at least once.<br>\nI believe it is important to have such a function explicitly, do you agree?<br>\n(In other words, the function is some program that rewrites terms to more<br>\nprimitive, but more common form. Without recursive contexts, etc.) Are my<br>\noverall idea ok? How to treat symbols which type is not i, not [i,..,i]=&gt;i<br>\nand not [i,..,i]=&gt;o ?</p>\n<p>Sincerely Yours,<br>\nGeorgy Dunaev<br>\n<a href=\"/user_uploads/14278/aCv_GHA0MlXiqCqC1e3KJlGb/translation.tex\">translation.tex</a><br>\n<a href=\"/user_uploads/14278/ASPdjHdTZtsyq9AxYd5N0DlS/translation.pdf\">translation.pdf</a></p>",
        "id": 207405631,
        "sender_full_name": "Email Gateway",
        "timestamp": 1597842971
    },
    {
        "content": "<p>From: Georgy Dunaev &lt;<a href=\"mailto:georgedunaev@gmail.com\">georgedunaev@gmail.com</a>&gt;<br>\nDear All,<br>\nI am sorry about that letter about the translation: now I understand, that<br>\nit is very easy,</p>\n<p>For example: this theorem</p>\n<p>theorem enlight : \"⋀n::o⇒o. (⋀P::o. (P⟶n(P))) ⟹ (⋀P::o. (P⟶n(n(P))))\"<br>\nproof<br>\n  fix n<br>\n  assume H1:\"(⋀P::o. (P⟶n(P)))\"<br>\n  fix P<br>\n  assume H2:\"P\"<br>\n  have H3:\"n(P)\"<br>\n    by (rule mp[OF H1 H2])<br>\n  show H4:\"n(n(P))\"<br>\n    by (rule mp[OF H1 H3])<br>\nqed</p>\n<p>should be translated as</p>\n<p>$$\\forall n : Fm-&gt;Fm. (\\forall P\\in Fm. T \\vdash (P --&gt; n(P)) ) --&gt;<br>\n(\\forall P\\in Fm. T \\vdash (P --&gt; n(n(P))) )$$, where functions are<br>\npartial(n, for example) and \\vdash is derivability in case that all<br>\narguments of partial functions are in their domains.</p>\n<p>So it is easy, indeed.</p>\n<p>I think it is possible to implement(in Ocaml) such a function(let's call it<br>\n\"t\") in the Isabelle system, which will translate theorems of Isabelle/ZF<br>\nto theorems about Isabelle/ZF, but still inside the Isabelle/ZF.</p>\n<p>So, what do you think about such a function t? May it be handy for some<br>\napplications?<br>\nMaybe the left-inverse function of t is also useful. It allows lifting of<br>\nproved theorems to the metatheory!</p>\n<p>Kind regards,<br>\nGeorgy Dunaev</p>",
        "id": 207514165,
        "sender_full_name": "Email Gateway",
        "timestamp": 1597924696
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nI guess as the main proprietor of Isabelle/ZF I should answer this, but I don’t know what to say.</p>\n<p>Such a translation might be feasible, but I don’t know what the applications for it would be.</p>\n<p>Larry</p>",
        "id": 207528973,
        "sender_full_name": "Email Gateway",
        "timestamp": 1597934135
    }
]