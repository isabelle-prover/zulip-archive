[
    {
        "content": "<p>From: Brandon Bohrer &lt;<a href=\"mailto:bjbohrer@gmail.com\">bjbohrer@gmail.com</a>&gt;<br>\nHi all,</p>\n<p>Short version: I am getting failures in the \"smt\" method,<br>\nnondeterministically on the released version of an AFP article<br>\n(Poincare-Bendixson); what troubleshooting steps are recommended next?</p>\n<p>Since I have already taken some troubleshooting steps, the rest of my email<br>\ndescribes what I have tried already, to help speed up troubleshooting. Note<br>\nthat I have one machine with the problem and one without it, which may help.</p>\n<p>Failing command (for example):<br>\n$ isabelle build -d &lt;path-to-afp&gt;/thys  -b Poincare_Bendixson</p>\n<p>Isabelle version: Tried 2019 and 2021 with matching AFP versions. No change.</p>\n<p>Machine &amp; OS information:<br>\nI have tested this on two machines, call them machine W (where the proof<br>\nworks) and machine B (where it's broken). Both run Windows 10. Both use the<br>\nbuilt-in Windows antivirus and I am prevented from turning it off<br>\ncompletely, but I have added exclusions for my Isabelle and AFP<br>\ndirectories. Also turned off search indexing of file contents.</p>\n<p>The first difference between the machines that comes to mind: machine W is<br>\nnewer and faster; it has both an SSD and an HDD. However, I moved Isabelle<br>\n(including .isabelle) and the AFP to my HDD, and the issue persisted. I<br>\nstill wonder whether Windows is using the SSD without my knowing, and<br>\nracing.</p>\n<p>Solvers: I tried Z3, CVC4, and VeriT. No change.</p>\n<p>Timing and nondeterminism:<br>\nIt is definitely nondeterministic. If I rerun an offending line through the<br>\njEdit UI, it usually works on a second or third try. Whether it succeeds or<br>\nfails, it always returns quickly (e.g. 0.2 seconds for one of them). So it<br>\nis not a timeout issue.</p>\n<p>SMT tracing information:<br>\nI enabled the smt_trace option and noticed something: When \"smt\" fails, the<br>\n\"SMT: Result:\" message doesn't have any, well, results after it, but when<br>\n\"smt\" succeeds, there is lots of trace info. Is this expected behavior or<br>\nis it a clue about what's going wrong? I can rerun and post the whole trace<br>\nif needed.</p>\n<p>Thanks for any advice you can provide!</p>\n<p>Brandon Bohrer<br>\nAssistant Professor of Computer Science<br>\nWorcester Polytechnic Institute</p>",
        "id": 261912553,
        "sender_full_name": "Email Gateway",
        "timestamp": 1637233244
    },
    {
        "content": "<p>From: Mathias Fleury &lt;<a href=\"mailto:mathias.fleury12@gmail.com\">mathias.fleury12@gmail.com</a>&gt;<br>\nHi Brandon,</p>\n<p>The most likely problem is that the thread launching the SMT solver is not<br>\nstarted fast enough. Set the timeout to infinity with <code>declare\n[[smt_timeout=0]]</code> should do the trick (this is the default value in<br>\nIsabelle2021-1-RC3 anyway).</p>\n<p>Best,<br>\nMathias</p>",
        "id": 261919242,
        "sender_full_name": "Email Gateway",
        "timestamp": 1637237920
    },
    {
        "content": "<p>From: Brandon Bohrer &lt;<a href=\"mailto:bjbohrer@gmail.com\">bjbohrer@gmail.com</a>&gt;<br>\nHi Mathias,</p>\n<p>Thanks for the quick reply. I actually have already tried setting high<br>\ntimeouts as well (e.g. declare[[smt_timeout=10000]]) but did not mention<br>\nthat explicitly in my first email because all of the successful smt calls<br>\nand all of the failing smt calls complete quite quickly (e.g. 0.2 seconds).<br>\nNote that things are failing on my faster machine and succeeding on my<br>\nslower machine.</p>\n<p>By the way, I also tried declare[[smt_timeout=0]] right now, just in case<br>\n(on the Isabelle2021 release, not an RC). The result was that it set the<br>\ntimeout to 0 seconds rather than infinity, so that all of the smt calls<br>\nfail every time. At least that's a deterministic behavior, so maybe it's an<br>\nimprovement :)</p>\n<p>Let me know if there are any other troubleshooting steps that I should try<br>\nnext, or if there is any additional debug info that would be helpful to<br>\npost to the list.</p>\n<p>Thanks!<br>\n-Brandon</p>",
        "id": 261934335,
        "sender_full_name": "Email Gateway",
        "timestamp": 1637245904
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe smt_timeout behaviour changed shortly after the Isabelle2021 release, so<br>\nin Isabelle2021-1 release candidates it observes the common scheme of Isabelle<br>\ntools that 0 means infinity (actually anything &lt; 1ms).</p>\n<p>See also these history items:</p>\n<p><a href=\"https://isabelle.sketis.net/repos/isabelle/rev/a40e69fde2b4\">https://isabelle.sketis.net/repos/isabelle/rev/a40e69fde2b4</a></p>\n<p><a href=\"https://isabelle.sketis.net/repos/isabelle/rev/f3378101f555\">https://isabelle.sketis.net/repos/isabelle/rev/f3378101f555</a></p>\n<p>The timeout_scale mentioned there is explained in the NEWS for Isabelle2021-1<br>\nas follows:</p>\n<ul>\n<li>Timeouts for Isabelle/ML tools are subject to system option<br>\n\"timeout_scale\" --- this already used for the overall session build<br>\nprocess before, and allows to adapt to slow machines. The underlying<br>\nTimeout.apply in Isabelle/ML treats an original timeout specification 0<br>\nas no timeout; before it meant immediate timeout. Rare INCOMPATIBILITY<br>\nin boundary cases.<p>Makarius</p>\n</li>\n</ul>",
        "id": 262179210,
        "sender_full_name": "Email Gateway",
        "timestamp": 1637408788
    },
    {
        "content": "<p>From: Brandon Bohrer &lt;<a href=\"mailto:bjbohrer@gmail.com\">bjbohrer@gmail.com</a>&gt;<br>\nDear Makarius,</p>\n<p>Thanks for the follow-up, that definitely clears up my misunderstanding of<br>\nMathias' earlier email. I don't have any of the RCs installed at the<br>\nmoment, but if I'm reading the news correctly, I expect that my original<br>\nissue would be unchanged if I run an RC.</p>\n<p>Changing timeouts was one of the troubleshooting steps I tried and timeouts<br>\ndid not appear to be the issue. Since I'm on the 2021 release, I set the<br>\ntimeout to 10000 seconds (~2 hours) rather than setting the value to 0, and<br>\nthe SMT calls in question finished in well under a second, both the<br>\nsuccessful and unsuccessful calls. No timeouts occur on the default<br>\nsetting, nor when I increase the timeout limit.</p>\n<p>Taking that into consideration, I would be happy to hear from anyone<br>\nwhether it makes sense to install and test an RC (or nightly) build. For<br>\nexample, if there are major SMT communication protocol changes other that<br>\nthe timeout handling, then I think testing the latest version would still<br>\nmake sense.</p>\n<p>Thanks again everyone for the troubleshooting help,<br>\n-Brandon</p>",
        "id": 262333874,
        "sender_full_name": "Email Gateway",
        "timestamp": 1637594925
    }
]