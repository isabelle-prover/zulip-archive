[
    {
        "content": "<p>From: Mikhail Chekhov &lt;<a href=\"mailto:mikhail.chekhov.w@gmail.com\">mikhail.chekhov.w@gmail.com</a>&gt;<br>\nDear All,</p>\n<p>I have two weakly related questions with regard to the availability of<br>\ncertain functionality from the public interface associated with the<br>\nIsabelle/ML infrastructure of the standard distribution of Isabelle:</p>\n<ol>\n<li>\n<p>I would like to understand if it is possible to tell whether a given<br>\nattribute is a declaration attribute, a rule attribute, or a mixed<br>\nattribute after its construction.</p>\n</li>\n<li>\n<p>I would like to understand whether it is possible to compare proof<br>\ncontexts in a manner similar to which theories can be compared using the<br>\nfunctions Context.eq_thy, Context. proper_subthy and Context.subthy. Do<br>\nthere, by any chance, exist diagnostic theory/context difference<br>\nfunctions, allowing for listing the exact specific changes introduced by a<br>\nmodification of a theory/context?</p>\n</li>\n</ol>\n<p>If the functionality that is described in the questions above is not<br>\navailable, I would like to convert the questions into a feature request, if<br>\npossible.</p>\n<p>Kind Regards,<br>\nMikhail Chekhov</p>",
        "id": 222929854,
        "sender_full_name": "Email Gateway",
        "timestamp": 1610747226
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Mikhail,</p>\n<p>overall, I think it is best if you expose in a few sentences what you<br>\nwant to achieve in the end – as you will see from my terse replies below<br>\nthe mechanisms you request are conceptually not available in the system,<br>\nbut typically this can be resolved by reshaping the genuine problem<br>\nafter having a different perspective on it.</p>\n<blockquote>\n<ol>\n<li>I would like to understand if it is possible to tell whether a given<br>\nattribute is a declaration attribute, a rule attribute, or a mixed<br>\nattribute after its construction.</li>\n</ol>\n</blockquote>\n<p>Traditionally, attributes are mainly observable by their effect, not by<br>\ntheir construction – although AFAIK more structure has emerged for the<br>\nbenefit of the module systems (locales, bundles).</p>\n<blockquote>\n<ol start=\"2\">\n<li>I would like to understand whether it is possible to compare proof<br>\ncontexts in a manner similar to which theories can be compared using the<br>\nfunctions Context.eq_thy, Context. proper_subthy and Context.subthy. Do<br>\nthere, by any chance, exist diagnostic theory/context difference<br>\nfunctions, allowing for listing the exact specific changes introduced by<br>\na modification of a theory/context? </li>\n</ol>\n</blockquote>\n<p>Those operations are a mere technical device to manage the theory graph,<br>\nnot a means to build applications on it.  Since the managements of proof<br>\ncontexts is less involved, they get along without it.</p>\n<p>Regards,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/KfmBD_-X3xK2L32idQlz71UB/signature.asc\">signature.asc</a></p>",
        "id": 222971192,
        "sender_full_name": "Email Gateway",
        "timestamp": 1610788890
    },
    {
        "content": "<p>From: Mikhail Chekhov &lt;<a href=\"mailto:mikhail.chekhov.w@gmail.com\">mikhail.chekhov.w@gmail.com</a>&gt;<br>\nDear Florian Haftmann/All,</p>\n<p>Thank you for your reply.</p>\n<p>On 16 Jan 2021, at 10:21, Florian Haftmann &lt;florian.haftmann at<br>\n<a href=\"http://informatik.tu-muenchen.de\">informatik.tu-muenchen.de</a>&gt; wrote:</p>\n<blockquote>\n<p>overall, I think it is best if you expose in a few sentences what you<br>\nwant to achieve in the end – as you will see from my terse replies below<br>\nthe mechanisms you request are conceptually not available in the system,<br>\nbut typically this can be resolved by reshaping the genuine problem<br>\nafter having a different perspective on it.</p>\n<p>I will act upon your request and provide more background for my questions.<br>\nHowever, please note that I accept the comments in your last email as a<br>\nreply, i.e. the functionality is not available and there are no immediate<br>\nplans to introduce it. This information is sufficient to allow me to make<br>\nthe relevant design decisions with regard to the applications that I am<br>\nworking on.</p>\n</blockquote>\n<blockquote>\n<blockquote>\n<ol>\n<li>I would like to understand if it is possible to tell whether a given<br>\nattribute is a declaration attribute, a rule attribute, or a mixed<br>\nattribute after its construction.<br>\nTraditionally, attributes are mainly observable by their effect, not by<br>\ntheir construction – although AFAIK more structure has emerged for the<br>\nbenefit of the module systems (locales, bundles).</li>\n</ol>\n</blockquote>\n<p>In certain applications, I allow the users to provide their own attributes<br>\nas inputs to a command. These attributes are applied to a theorem/context<br>\nwithin the scope of an application of a certain algorithm. I would like to<br>\nbe able to restrict the attributes that the users can provide to rule<br>\nattributes. Being able to introduce this condition makes the design of the<br>\nsystem easier: unfortunately, it is substantially more difficult (if not<br>\nentirely impossible) to support arbitrary context modifications.</p>\n</blockquote>\n<p>Given what has been stated, it seems that my options are to either restrict<br>\nthe attributes to a given pre-determined subset of standard rule attributes<br>\nor to allow arbitrary attributes, but state in the documentation that only<br>\nthe rule attributes are supported fully.</p>\n<blockquote>\n<blockquote>\n<ol start=\"2\">\n<li>I would like to understand whether it is possible to compare proof<br>\ncontexts in a manner similar to which theories can be compared using the<br>\nfunctions Context.eq_thy, Context. proper_subthy and Context.subthy. Do<br>\nthere, by any chance, exist diagnostic theory/context difference<br>\nfunctions, allowing for listing the exact specific changes introduced by<br>\na modification of a theory/context?</li>\n</ol>\n</blockquote>\n<p>Those operations are a mere technical device to manage the theory graph,<br>\nnot a means to build applications on it.  Since the managements of proof<br>\ncontexts is less involved, they get along without it.</p>\n<p>The functionality that I seek could be useful for the purpose of designing<br>\ntests for my applications. For example, it would be useful to be able to<br>\nstate that a given function/module does not modify the proof context under<br>\ncertain inputs.</p>\n</blockquote>\n<p>In this context, I wonder what are the usual software<br>\nengineering/management practices that are followed when working<br>\non/extending the Isabelle/ML system associated with the standard<br>\ndistribution? Do there exist unit test frameworks specifically designed for<br>\nIsabelle/ML? Does there exist any infrastructure that would enable<br>\nblack-box testing of Isabelle's commands/methods/attributes? (I am aware<br>\nthat proving is preferred to testing in the world of functional<br>\nprogramming, but, in my view, this approach is impractical for the UI<br>\ndesign in Isabelle/ML, given the existing state of the art).</p>\n<p>Kind Regards,<br>\nMikhail Chekhov</p>",
        "id": 222983417,
        "sender_full_name": "Email Gateway",
        "timestamp": 1610806545
    }
]