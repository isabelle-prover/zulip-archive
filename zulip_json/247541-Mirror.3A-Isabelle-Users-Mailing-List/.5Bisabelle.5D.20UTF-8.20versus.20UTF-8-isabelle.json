[
    {
        "content": "<p>From: Paolo Crisafulli &lt;<a href=\"mailto:paolo.crisafulli@irt-systemx.fr\">paolo.crisafulli@irt-systemx.fr</a>&gt;<br>\nHi everyone,</p>\n<p>I was wondering if there are any drawbacks to saving Isabelle theory <br>\nfiles as UTF-8 instead of the default UTF-8-isabelle format.</p>\n<p>I would like to use UTF-8, because it really makes reading a (git) diff <br>\nso much easier, but it seems that UTF-8-isabelle is the widely <br>\n(universally?) adopted format.</p>\n<p>My questions:</p>\n<ul>\n<li>\n<p>are there solid reasons to save one's Isabelle-HOL theories as <br>\nUTF-8-isabelle?</p>\n</li>\n<li>\n<p>is UTF-8 not advisable in some contexts (e.g. AFP)?</p>\n</li>\n<li>\n<p>is there an efficient way to convert a set of UTF-8 theories <br>\nto-and-fro UTF-8-isabelle? For the moment, when I need to do it <br>\n(UTF-8-isabelle to UTF-8), I create a new file, change its format to <br>\nUTF-8 and copy paste into it from the UTF-8-isabelle; which does not scale.</p>\n</li>\n</ul>\n<p>Thank you very much in advance for your help.</p>\n<p>Cheers,</p>\n<p>Paolo</p>",
        "id": 305110520,
        "sender_full_name": "Email Gateway",
        "timestamp": 1666258033
    },
    {
        "content": "<p>From: Dominique Unruh &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nHi,</p>\n<p>specifically for this question:</p>\n<blockquote>\n<ul>\n<li>is there an efficient way to convert a set of UTF-8 theories <br>\nto-and-fro UTF-8-isabelle? For the moment, when I need to do it <br>\n(UTF-8-isabelle to UTF-8), I create a new file, change its format to <br>\nUTF-8 and copy paste into it from the UTF-8-isabelle; which does not scale.</li>\n</ul>\n</blockquote>\n<p>I do not have a command-line tool to offer, but there is a class in the <br>\nscala-isabelle library that converts between the two formats:</p>\n<p><a href=\"https://javadoc.io/doc/de.unruh/scala-isabelle_2.13/latest/de/unruh/isabelle/misc/Symbols.html\">https://javadoc.io/doc/de.unruh/scala-isabelle_2.13/latest/de/unruh/isabelle/misc/Symbols.html</a></p>\n<p>This class can be used independently of the rest of scala-isabelle <br>\n(i.e., you do not need to use scala-isabelle to control an <br>\nIsabelle-process).</p>\n<p>It should be just a few lines of Scala (or Java) code to make a <br>\ncommand-line script. E.g. (untested):</p>\n<p>val input = ... read text from input file ...<br>\nval symbols = new Symbols()  // in Java: something like   new Symbols(Symbols.init$default$1, Symbols.init$default$2)<br>\nval output = symbols.symbolsToUnicode(symbols, false)<br>\n... write output to file ...</p>\n<p>Best wishes,<br>\nDominique.</p>",
        "id": 305113359,
        "sender_full_name": "Email Gateway",
        "timestamp": 1666259252
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 20/10/2022 11:26, Paolo Crisafulli wrote:</p>\n<blockquote>\n<p>I was wondering if there are any drawbacks to saving Isabelle theory files as <br>\nUTF-8 instead of the default UTF-8-isabelle format.</p>\n</blockquote>\n<p>This terminology is from Isabelle/jEdit, which provides an approximative view <br>\non source text with Isabelle symbols via the UTF-8-Isabelle encoding; it goes <br>\nalong with Isabelle fonts to make certain symbols appears as they should (e.g. <br>\nfrom the \"document\" group).</p>\n<p>The Isabelle documentation has further explanations on Isabelle symbols, e.g. <br>\nsee \"implementation\" section 0.6 on \"Strings of symbols\".</p>\n<p>In short: Isabelle symbols are closer to \"LaTeX\" than to \"Unicode\". I need to <br>\nput both into quotes, because LaTeX and Unicode are wide open to variation and <br>\nunexpected breakdowns.</p>\n<p>Since you are from France, here is a well-known (bad) joke about UTF-8 vs. <br>\nformer ISO-latin-1/15: <br>\n<a href=\"https://www.apprendre-en-ligne.net/bloginfo/index.php/2009/01/21/151-martine-ecrit-en-utf-8\">https://www.apprendre-en-ligne.net/bloginfo/index.php/2009/01/21/151-martine-ecrit-en-utf-8</a></p>\n<blockquote>\n<p>I would like to use UTF-8, because it really makes reading a (git) diff so <br>\nmuch easier, but it seems that UTF-8-isabelle is the widely (universally?) <br>\nadopted format.</p>\n</blockquote>\n<p>The official Isabelle source format is plain text with named symbols, e.g. <br>\n\\&lt;alpha&gt;. This has many motivations accumulated over the years. In particular, <br>\nlong-term persistent data is better stored in a format that is independent <br>\nfrom short-term side conditions.</p>\n<p>To view Isabelle (or AFP) history with nice rendering of symbols, it should be <br>\neasy to make a wrapper to the repository client tools. A future version of <br>\nIsabelle/VSCode will probably have that, both for git and Mercurial, which is <br>\nthe preferred VCS for Isabelle applications.</p>\n<blockquote>\n<p>My questions:</p>\n<ul>\n<li>are there solid reasons to save one's Isabelle-HOL theories as UTF-8-isabelle?</li>\n</ul>\n</blockquote>\n<p>Please rephrase this question, after you have studied the documentation and <br>\ngot an impression how Isabelle symbols really work.</p>\n<p>I can then tell more stories from ancient times that have lead to this <br>\nrepresentation of formal sources. (Including advantages and shortcomings.)</p>\n<blockquote>\n<ul>\n<li>is UTF-8 not advisable in some contexts (e.g. AFP)?</li>\n</ul>\n</blockquote>\n<p>Raw Unicode symbols are not admissible in Isabelle sources: they will cause <br>\nsubtle problems, sometimes on the spot, sometimes later.</p>\n<p>There are administrative tools to detect \"Suspicious Unicode characters\", <br>\nwhich then need to be removed by hand: proper interpretation of what was <br>\nactually intended requires manual intervention.</p>\n<p>In practice, these are usually strange quotes produced by macOS, which often <br>\ndon't work on other platforms (or other versions of macOS).</p>\n<blockquote>\n<ul>\n<li>is there an efficient way to convert a set of UTF-8 theories to-and-fro <br>\nUTF-8-isabelle? For the moment, when I need to do it (UTF-8-isabelle to <br>\nUTF-8), I create a new file, change its format to UTF-8 and copy paste into it <br>\nfrom the UTF-8-isabelle; which does not scale.</li>\n</ul>\n</blockquote>\n<p>Isabelle/Scala provides operations Symbol.decode and Symbol.encode. The idea <br>\nis to have all persistent data (files, repository content etc.) in <br>\nnamed-symbol form like \\&lt;alpha&gt; and decode that for display into a Unicode <br>\npoint to be used with the Isabelle fonts.</p>\n<p>Makarius</p>",
        "id": 305115032,
        "sender_full_name": "Email Gateway",
        "timestamp": 1666259900
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nYou know my attitude towards tha scala-isabelle library already: I don't <br>\nunderstand its purpose. Regular Isabelle/Scala should do the job.</p>\n<p>For the above purpose, there are functions isabelle.Symbol.decode and <br>\nisabelle.Symbol.encode, without anything special to care about.</p>\n<p>You can e.g. use them in \"isabelle scala\", or \"isabelle jedit\" with the <br>\nConsole/Scala plugin.</p>\n<p>Makarius</p>",
        "id": 305116068,
        "sender_full_name": "Email Gateway",
        "timestamp": 1666260320
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nAfter spending 15min with the sources <br>\n<a href=\"https://github.com/dominique-unruh/scala-isabelle/blob/44d1881784a/src/main/scala/de/unruh/isabelle/misc/Symbols.scala\">https://github.com/dominique-unruh/scala-isabelle/blob/44d1881784a/src/main/scala/de/unruh/isabelle/misc/Symbols.scala</a> <br>\nI need to warn against using this approach.</p>\n<p>Why have a fork/clone of regular Isabelle/Scala operations that work slightly <br>\ndifferently in subtle manners? This is bad software engineering. Using data <br>\ndefinition formats of Isabelle (etc/symbols) directly and interpreting the <br>\ncontent separately will cause problems that are hard to detect.</p>\n<p>Even within your own codebase, you already have a diversion from the default <br>\nsymbols from Isabelle2020 stated in the docstring vs. the Isabelle2021-RC3 <br>\nversion in the commit cd98f7393d05.</p>\n<p>A proper implementation would use isabelle.Symbol interfaces instead of <br>\nfile-formats. Any special functionality can be put on top, e.g. your treatment <br>\nof sub/sup symbols.</p>\n<p>Another side-remark on the implementation: regex matching has disappeared from <br>\nthe official version in March 2022, see <br>\n<a href=\"https://isabelle-dev.sketis.net/rISABELLE90eaac98b3fa\">https://isabelle-dev.sketis.net/rISABELLE90eaac98b3fa</a></p>\n<p>By not relying on that, it generally becomes more robust and efficient, and <br>\nclear about its exact functionality. (This follows Isabelle/ML, which lacks <br>\nregex matching in the first place.)</p>\n<p>Makarius</p>",
        "id": 305126741,
        "sender_full_name": "Email Gateway",
        "timestamp": 1666263857
    },
    {
        "content": "<p>From: Paolo Crisafulli &lt;<a href=\"mailto:paolo.crisafulli@irt-systemx.fr\">paolo.crisafulli@irt-systemx.fr</a>&gt;<br>\nThank you Dominique and Makarius for your answers (and the joke), <br>\nwriting a specific git difftool (chaining the usage of Symbol and the <br>\nregular diff) seems the best way to go.</p>\n<p>If anyone has already done that, I'd be happy to reuse.</p>\n<p>Cheers,</p>\n<p>Paolo</p>",
        "id": 305371988,
        "sender_full_name": "Email Gateway",
        "timestamp": 1666363584
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nHere is an example command-tool for Isabelle2022-RC4, written in Isabelle/Scala:<br>\n<a href=\"https://makarius.sketis.net/repos/narration/file/7ff489b866ee\">https://makarius.sketis.net/repos/narration/file/7ff489b866ee</a></p>\n<p>The README.md explains how to wire-up the whole thing with Isabelle. It should <br>\nbe then rather easy to implement a different \"payload\" for the tool. (The <br>\n\"narration\" tool re-interprets PIDE markup as an alternative to the HTML <br>\npresentation of Isabelle2022.)</p>\n<p>Makarius</p>",
        "id": 305401026,
        "sender_full_name": "Email Gateway",
        "timestamp": 1666371049
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nA few more notes on this example:</p>\n<p>* It coordinates 3 repositories: the project itself, Isabelle, AFP. The <br>\nspecial tool isabelle/Admin/init takes care of most details: its documentation <br>\nis \"isabelle/Admin/init -?\" or the text of the shell script itself. The <br>\n\"system\" manual has proper documentation of underlying tools, like \"isabelle <br>\ncomponents\".</p>\n<p>* The README.md hints at IntelliJ IDEA for Isabelle/Scala development: <br>\nsometimes this works great, sometimes it doesn't (e.g. due to problems with <br>\nMaven or Gradle, or IntelliJ IDEA itself and the Scala3 plugin). Recently, <br>\nI've often found myself editing Scala files with jEdit instead (not <br>\nIsabelle/jEdit).</p>\n<p>* The narration tool provides etc/build.props with \"services\" to make its <br>\nIsabelle_Tool implementation available for the \"isabelle ...\" command-line: <br>\nthis is the most interesting / relevant aspect here. The \"wiring\" happens via <br>\n\"isabelle component -u ...\" to register the project as separate Isabelle <br>\ncomponent.</p>\n<p>The latter can be done without Isabelle repository clones, directly from a <br>\nrelease version.</p>\n<p>In summary: this is probably the top-end of \"Isabelle tooling\" technology and <br>\ncomplexity at the moment.</p>\n<p>The bottom end is this: simply use Isabelle/ML to invoke a shell script on the <br>\nspot, and let the regular PIDE front-end display the symbols as usual. For <br>\nexample (assuming the running Isabelle is a repository clone):</p>\n<p>ML ‹<br>\n   Isabelle_System.bash ▩‹hg -R \"$ISABELLE_HOME\" diff --color=never -c <br>\n14dd8b46307f›<br>\n›</p>\n<p>The funny notation ▩‹...› is an antiquotation in Isabelle/ML: it inlines a <br>\nmultiline string, similar to \"\"\"...\"\"\" in some other languages, but better.</p>\n<p>Here is an alternative with repository server:</p>\n<p>ML_command ‹<br>\n<a href=\"http://Isabelle_System.download\">Isabelle_System.download</a> <br>\n\"<a href=\"https://isabelle.sketis.net/repos/isabelle-release/raw-diff/14dd8b46307f/src/HOL/Computational_Algebra/Polynomial.thy\">https://isabelle.sketis.net/repos/isabelle-release/raw-diff/14dd8b46307f/src/HOL/Computational_Algebra/Polynomial.thy</a>\"<br>\n   |&gt; Bytes.content<br>\n   |&gt; writeln<br>\n›</p>\n<p>It is also possible to turn such Isabelle/ML snippets into Isabelle/Isar <br>\ncommands. But this is really just an example: I think the proper way is to use <br>\nIsabelle/Scala to make a PIDE GUI component for version control (in <br>\nIsabelle/jEdit and/or Isabelle/VSCode).</p>\n<p>Makarius</p>",
        "id": 305527826,
        "sender_full_name": "Email Gateway",
        "timestamp": 1666441240
    },
    {
        "content": "<p>From: Paolo Crisafulli &lt;<a href=\"mailto:paolo.crisafulli@irt-systemx.fr\">paolo.crisafulli@irt-systemx.fr</a>&gt;<br>\nHi Makarius,</p>\n<p>Thank you very much, I'll probably need some time to process this.</p>\n<p>If I successfully turn this into a nice way to have an improved git diff <br>\nover .thy files, I'll be happy to share it.</p>\n<p>Paolo</p>",
        "id": 306677465,
        "sender_full_name": "Email Gateway",
        "timestamp": 1666969620
    }
]