[
    {
        "content": "<p>From: Ori Lahav &lt;<a href=\"mailto:orilahav@gmail.com\">orilahav@gmail.com</a>&gt;<br>\n[We apologize for possible cross-posting]</p>\n<hr>\n<p>CALL FOR PAPERS<br>\n 25th International Conference on Verification, Model Checking, and Abstract<br>\n                Interpretation<br>\n                  VMCAI 2024<br>\n               January 15-16, 2024<br>\n<a href=\"https://popl24.sigplan.org/home/VMCAI-2024\">https://popl24.sigplan.org/home/VMCAI-2024</a></p>\n<hr>\n<ul>\n<li>\n<p>Call for Papers *<br>\nVMCAI 2024 is the 25th International Conference on Verification, Model<br>\nChecking, and Abstract Interpretation. The conference will be held on<br>\nJanuary 15-16, 2024, in London, UK, co-located with POPL 2024. VMCAI<br>\nprovides a forum for researchers from the communities of Verification,<br>\nModel Checking, and Abstract Interpretation, facilitating interaction,<br>\ncross-fertilization, and advancement of hybrid methods that combine these<br>\nand related areas.</p>\n</li>\n<li>\n<p>Scope *<br>\nThe program of VMCAI 2024 will consist of refereed research papers as well<br>\nas invited talks. Research contributions can report new results as well as<br>\nexperimental evaluations and comparisons of existing techniques.</p>\n</li>\n</ul>\n<p>Topics include, but are not limited to:</p>\n<ul>\n<li>Program Verification</li>\n<li>Model Checking</li>\n<li>Abstract Interpretation</li>\n<li>Abstract Domains</li>\n<li>Program Synthesis</li>\n<li>Static Analysis</li>\n<li>Type Systems</li>\n<li>Deductive Methods</li>\n<li>Program Logics</li>\n<li>First-Order Theories</li>\n<li>Decision Procedures</li>\n<li>Interpolation</li>\n<li>Horn Clause Solving</li>\n<li>Program Certification</li>\n<li>Separation Logic</li>\n<li>Probabilistic Programming and Analysis</li>\n<li>Error Diagnosis</li>\n<li>Detection of Bugs and Security Vulnerabilities</li>\n<li>Program Transformations</li>\n<li>Hybrid and Cyber-physical Systems</li>\n<li>Concurrent and distributed Systems</li>\n<li>Analysis of numerical properties</li>\n<li>Analysis of smart contracts</li>\n<li>Analysis of neural networks</li>\n<li>Case Studies on all of the above topics</li>\n</ul>\n<p>Submissions can address any programming paradigm, including concurrent,<br>\nconstraint, functional, imperative, logic, and object-oriented programming.</p>\n<ul>\n<li>Important Dates AoE (UTC-12) *<br>\nAugust 31st, 2023 Paper submission<br>\nOctober 11th, 2023 Notification<br>\nOctober 31st, 2023 Camera-ready</li>\n</ul>\n<p>Conference Submission Link<br>\n<a href=\"https://easychair.org/my/conference?conf=vmcai2024\">https://easychair.org/my/conference?conf=vmcai2024</a></p>\n<ul>\n<li>Submissions *<br>\nSubmissions are required to follow Springer’s LNCS format. The page limit<br>\ndepends on the paper’s category (see below). In each category, additional<br>\nmaterial beyond the page limit may be placed in a clearly marked appendix<br>\nto be read at the discretion of the reviewers and to be omitted in the<br>\nfinal version. Formatting style files and further guidelines for formatting<br>\ncan be found at the Springer website:<br>\n<a href=\"https://www.springer.com/gp/computer-science/lncs/conference-proceedings-guidelines\">https://www.springer.com/gp/computer-science/lncs/conference-proceedings-guidelines</a><br>\n.</li>\n</ul>\n<p>All accepted papers will be published in Springer’s Lecture Notes in<br>\nComputer Science series. Submissions will undergo a single-blind review<br>\nprocess. There will be three categories of papers: regular papers, tool<br>\npapers, and case studies. Papers in each category have a different page<br>\nlimit and will be evaluated differently.</p>\n<p>Regular papers clearly identify and justify an advance to the field of<br>\nverification, abstract interpretation, or model checking. Where applicable,<br>\nthey are supported by experimental validation. Regular papers are<br>\nrestricted to 20 pages in LNCS format, not counting references.</p>\n<p>Tool papers present a new tool, a new tool component, or novel extensions<br>\nto an existing tool. They should provide a short description of the<br>\ntheoretical foundations with relevant citations and emphasize the design<br>\nand implementation concerns, including software architecture and core data<br>\nstructures. A regular tool paper should give a clear account of the tool’s<br>\nfunctionality, discuss the tool’s practical capabilities with reference to<br>\nthe type and size of problems it can handle, describe experience with<br>\nrealistic case studies, and, where applicable, provide a rigorous<br>\nexperimental evaluation. Papers that present extensions to existing tools<br>\nshould clearly focus on the improvements or extensions with respect to<br>\npreviously published versions of the tool, preferably substantiated by data<br>\non enhancements in terms of resources and capabilities. Authors are<br>\nstrongly encouraged to make their tools publicly available and submit an<br>\nartifact. Tool papers are restricted to 12 pages in LNCS format, not<br>\ncounting references.</p>\n<p>Case studies are expected to describe the use of verification, model<br>\nchecking, and abstract interpretation techniques in new application domains<br>\nor industrial settings. Papers in this category do not necessarily need to<br>\npresent original research results but are expected to contain novel<br>\napplications of formal methods and techniques as well as an evaluation of<br>\nthese techniques in the chosen application domain. Such papers are<br>\nencouraged to discuss the unique challenges of transferring research ideas<br>\nto a real-world setting and reflect on any lessons learned from this<br>\ntechnology transfer experience. Case study papers are restricted to 20<br>\npages in LNCS format, not counting references. (Shorter case study papers<br>\nare also welcome.)</p>\n<ul>\n<li>\n<p>Artifacts *<br>\nVMCAI 2024 allows authors to submit an artifact along with a paper.<br>\nArtifacts are any additional material that substantiates the claims made in<br>\nthe paper, and ideally makes them fully replicable. Artifacts of interest<br>\ninclude (but are not limited to):</p>\n</li>\n<li>\n<p>Software, Tools, or Frameworks</p>\n</li>\n<li>Data sets</li>\n<li>Test suites</li>\n<li>Machine checkable proofs</li>\n<li>Any combination of them</li>\n<li>Any other artifact described in the paper</li>\n</ul>\n<p>Artifact submission is optional. However, we highly encourage all authors<br>\nto also submit an artifact. A successfully evaluated artifact can increase<br>\nyour chance of being accepted since the evaluation result of your artifact<br>\nis taken into account during the paper review. The artifact will be<br>\nevaluated in parallel with the submission by the artifact evaluation<br>\ncommittee (AEC). The AEC will read the paper and evaluate the artifact on<br>\nthe following criteria:</p>\n<ul>\n<li>consistency with and replicability of results in the paper,</li>\n<li>completeness,</li>\n<li>documentation, and</li>\n<li>\n<p>ease of use.<br>\nMore information will be available on the conference webpage:<br>\n<a href=\"https://popl24.sigplan.org/home/VMCAI-2024\">https://popl24.sigplan.org/home/VMCAI-2024</a></p>\n</li>\n<li>\n<p>Organizing Committee *<br>\nRayna Dimitrova, CISPA Helmholtz Center for Information Security<br>\nOri Lahav, Tel Aviv University<br>\nSebastian Wolff, New York University</p>\n</li>\n</ul>",
        "id": 378801683,
        "sender_full_name": "Email Gateway",
        "timestamp": 1690378096
    }
]