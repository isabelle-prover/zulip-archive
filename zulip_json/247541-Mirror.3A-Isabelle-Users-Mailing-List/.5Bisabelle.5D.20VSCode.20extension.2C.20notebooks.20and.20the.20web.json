[
    {
        "content": "<p>From: David Fuenmayor &lt;<a href=\"mailto:davfuenmayor@gmail.com\">davfuenmayor@gmail.com</a>&gt;<br>\nI am a big fan of Isabelle's PIDE and think it was a very smart move to<br>\nadopt the notebook-like paradigm for an ITP back in the day (long before<br>\neveryone started buzzing about Jupyter notebooks!). However, I feel that<br>\nIsabelle has been lagging behind in terms of usability in recent years. Not<br>\nonly has the bar been raised a lot when it comes to UX and documentation<br>\n(interactive tutorials and the like), but notebooks have also been evolving<br>\ntowards enabling real-time collaborative work (e.g., think of LaTeX before<br>\nvs. after Overleaf).</p>\n<p>For example, the lack of a web interface for Isabelle is a big pain point<br>\nfor me, particularly because it has seriously hindered my Isabelle<br>\n'proselytising' activities. I've had to turn down offers to introduce<br>\nIsabelle to large classrooms simply because I know I will end up spending<br>\nmost of the time troubleshooting installation problems (from my experience,<br>\nat least 5 different sources of trouble for a small 20-person room).<br>\nAdmittedly, most problems are not Isabelle's, but rather the user's fault<br>\n(myriad issues ranging from not enough disk space to overprotective<br>\nOS/antivirus). Nonetheless, the deterring effect is the same.</p>\n<p>I find it very useful to have a web interface (even if self-hosted) to<br>\nshowcase Isabelle formalization work for people to quickly review and adapt<br>\n(it is difficult to convince people to install desktop software these<br>\ndays!). On a more ambitious note, I believe that a real-time collaborative<br>\nnotebook-like ITP could really be a game-changer in maths and logic<br>\nteaching (we have tried this for programming using Livebook<br>\n&lt;<a href=\"https://livebook.dev/\">https://livebook.dev/</a>&gt; with good results).</p>\n<p>I was under the (false?) impression that work on the VSCode extension was a<br>\nstep towards bringing Isabelle to the web. Is this something on the<br>\nroadmap? If so, I would be glad to contribute what I can to make this<br>\nhappen.</p>\n<p>David</p>",
        "id": 394506444,
        "sender_full_name": "Email Gateway",
        "timestamp": 1696277769
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 10/2/23 22:15, David Fuenmayor wrote:</p>\n<blockquote>\n<p>For example, the lack of a web interface for Isabelle is a big pain <br>\npoint for me, particularly because it has seriously hindered my Isabelle <br>\n'proselytising' activities. I've had to turn down offers to introduce <br>\nIsabelle to large classrooms simply because I know I will end up <br>\nspending most of the time troubleshooting installation problems (from my <br>\nexperience, at least 5 different sources of trouble for a small <br>\n20-person room). Admittedly, most problems are not Isabelle's, but <br>\nrather the user's fault (myriad issues ranging from not enough disk <br>\nspace to overprotective OS/antivirus). Nonetheless, the deterring effect <br>\nis the same.</p>\n</blockquote>\n<p>Thanks for the experience report on user exposure. Can you say a bit <br>\nmore about the target audience? Are people more from Mathematics <br>\nbackground (i.e. weak Windows machine with little memory) or <br>\nComputer-Science (i.e. strong Linux or macOS system)?</p>\n<p>Over the decades we did foster a bias to the ancient notion of <br>\n\"engineering workstation\", although that now means MacBook Pro Apple <br>\nSilicon M2 instead of Sun Sparcstation 10 or 20.</p>\n<blockquote>\n<p>I find it very useful to have a web interface (even if self-hosted) to <br>\nshowcase Isabelle formalization work for people to quickly review and <br>\nadapt (it is difficult to convince people to install desktop software <br>\nthese days!). On a more ambitious note, I believe that a real-time <br>\ncollaborative notebook-like ITP could really be a game-changer in maths <br>\nand logic teaching (we have tried this for programming using Livebook <br>\n&lt;<a href=\"https://livebook.dev/\">https://livebook.dev/</a>&gt; with good results).</p>\n</blockquote>\n<p>I will look more closely at <a href=\"https://livebook.dev\">https://livebook.dev</a> later --- presently I <br>\nam on a conference.</p>\n<p>Generally note that fundamental changes of the Prover IDE will require <br>\nsubstantial work and lots of work.</p>\n<blockquote>\n<p>I was under the (false?) impression that work on the VSCode extension <br>\nwas a step towards bringing Isabelle to the web. Is this something on <br>\nthe roadmap? If so, I would be glad to contribute what I can to make <br>\nthis happen.</p>\n</blockquote>\n<p>VSCode is an Electron application. The idea of the Electron platform is <br>\nto bring typical web technologies to the desktop (HTML/SVG/CSS, Node.js, <br>\nChromium).</p>\n<p>So that is a move of the web onto the desktop, not of a desktop <br>\napplication into the web.</p>\n<p>Makarius</p>",
        "id": 394862705,
        "sender_full_name": "Email Gateway",
        "timestamp": 1696432273
    },
    {
        "content": "<p>From: David Fuenmayor &lt;<a href=\"mailto:davfuenmayor@gmail.com\">davfuenmayor@gmail.com</a>&gt;<br>\nThanks for the experience report on user exposure. Can you say a bit<br>\nmore about the target audience? Are people more from Mathematics<br>\nbackground (i.e. weak Windows machine with little memory) or<br>\nComputer-Science (i.e. strong Linux or macOS system)?</p>\n<p>I have had everything in my audience. Although maybe people working in<br>\nmodal/non-classical logics tend to align with the former stereotype you<br>\nmention.<br>\nEarly undergrad's computers are remarkably heterogeneous!</p>\n<p>VSCode is an Electron application. The idea of the Electron platform is<br>\nto bring typical web technologies to the desktop (HTML/SVG/CSS, Node.js,<br>\nChromium).</p>\n<p>I see. Maybe I am being overspeculative here, since I have no clue how PIDE<br>\nis built.<br>\nWhen I first learnt of the VSCode extension, I immediately thought of the<br>\npossibility of a Monaco-based web editor (+LSP, etc) for a 'light' subset<br>\nof Isabelle's functionalities (enough to motivate people to install the<br>\nreal thing for big game).<br>\nMaybe what I need is already covered in VSCode with the CodeServer<br>\n&lt;<a href=\"https://vscode.dev/\">https://vscode.dev/</a>&gt; and/or LiveShare<br>\n&lt;<a href=\"https://code.visualstudio.com/learn/collaboration/live-share\">https://code.visualstudio.com/learn/collaboration/live-share</a>&gt;<br>\nfunctionalities (assuming the current Isabelle VSCode distribution plays<br>\nwell with that).<br>\nIn my experience the current VSCode PIDE still has many rough corners.<br>\nFunctionalities like semantic highlighting are too brittle and break<br>\neasily, bold symbols (and sometimes sub/superscripts) are not rendered,<br>\netc. I am looking forward to the next developments and improvements on this<br>\nfront.</p>\n<p>David</p>",
        "id": 395014056,
        "sender_full_name": "Email Gateway",
        "timestamp": 1696502932
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nFun fact: when I first used the ARPANET in the 1970s, one of its advertised purposes was to allow you to run software on someone else’s computer. I wanted to use Macsyma </p>\n<p><a href=\"https://en.wikipedia.org/wiki/Macsyma\">https://en.wikipedia.org/wiki/Macsyma</a></p>\n<p>and to do that, you had to log into MIT’s Incompatible Timesharing System. That worked fine, only at 110 baud (bits/sec). A shame we cannot do that with today’s high-speed networks and a dedicated processor somewhere.</p>\n<p>On the other hand, Isabelle really is trivial to install. I wish people understood that.</p>\n<p>Larry Paulson</p>",
        "id": 395016813,
        "sender_full_name": "Email Gateway",
        "timestamp": 1696503841
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 10/5/23 13:03, Lawrence Paulson wrote:</p>\n<blockquote>\n<p>Fun fact: when I first used the ARPANET in the 1970s, one of its advertised purposes was to allow you to run software on someone else’s computer. I wanted to use Macsyma</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Macsyma\">https://en.wikipedia.org/wiki/Macsyma</a></p>\n<p>and to do that, you had to log into MIT’s Incompatible Timesharing System. That worked fine, only at 110 baud (bits/sec). A shame we cannot do that with today’s high-speed networks and a dedicated processor somewhere.</p>\n</blockquote>\n<p>Indeed. Maybe you know the saying by the famous philosopher Karl <br>\nValentin from Munich: \"In the good old times, even the future looked <br>\nbrighter!\"</p>\n<blockquote>\n<p>On the other hand, Isabelle really is trivial to install. I wish people understood that.</p>\n</blockquote>\n<p>I do agree, and usually aim at exactly that.</p>\n<p>But we do have certain cultural assumptions, e.g. some basic <br>\nunderstanding that hard work needs decent hardware resources.</p>\n<p>Makarius</p>",
        "id": 395100059,
        "sender_full_name": "Email Gateway",
        "timestamp": 1696531279
    },
    {
        "content": "<p>From: Jeremy Sylvestre &lt;<a href=\"mailto:jsylvest@ualberta.ca\">jsylvest@ualberta.ca</a>&gt;<br>\nYou can run VS Code over the web in a browser using code-server, which I<br>\nbelieve was open-sourced by Microsoft in 2021. Full IDE in your browser,<br>\nworks essentially the same as the desktop app.  Before VSCodium was bundled<br>\nwith Isabelle, when the Isabelle VSCode plugin was standalone and available<br>\nin the marketplace, I played around with using Isabelle on an HPC cluster<br>\nvia code-server. Had code-server/Isabelle running on a compute node in the<br>\ncluster, and connected with my browser through a ssh tunnel. It worked<br>\nsurprisingly well.</p>",
        "id": 395160470,
        "sender_full_name": "Email Gateway",
        "timestamp": 1696563168
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 05/10/2023 12:48, David Fuenmayor wrote:</p>\n<blockquote>\n<p>Maybe what I need is already covered in VSCode with the CodeServer <br>\n&lt;<a href=\"https://vscode.dev/\">https://vscode.dev/</a>&gt; and/or LiveShare <br>\n&lt;<a href=\"https://code.visualstudio.com/learn/collaboration/live-share\">https://code.visualstudio.com/learn/collaboration/live-share</a>&gt; functionalities <br>\n(assuming the current Isabelle VSCode distribution plays well with that).</p>\n</blockquote>\n<p>I need to look more closely at these projects, they definitely look interesting.</p>\n<p>Searching the web for &lt; 5min, I've also found <br>\n<a href=\"https://github.com/coder/code-server\">https://github.com/coder/code-server</a> and its producer <a href=\"https://coder.com\">https://coder.com</a> --- Or <br>\nis that the same as <a href=\"https://vscode.dev\">https://vscode.dev</a> ?</p>\n<blockquote>\n<p>In my experience the current VSCode PIDE still has many rough corners. <br>\nFunctionalities like semantic highlighting are too brittle and break easily, <br>\nbold symbols (and sometimes sub/superscripts) are not rendered, etc. I am <br>\nlooking forward to the next developments and improvements on this front.</p>\n</blockquote>\n<p>Well, Isabelle/VSCode it is all still experimental. There is a difference in a <br>\nproof-of-concept and a full-scale working environment.</p>\n<p>(Maybe I should stop pointing that out, and instead get things moving forward <br>\nagain.)</p>\n<p>Makarius</p>",
        "id": 396280670,
        "sender_full_name": "Email Gateway",
        "timestamp": 1697114734
    }
]