[
    {
        "content": "<p>From: Eero Pomell &lt;<a href=\"mailto:eero.the.engineer@gmail.com\">eero.the.engineer@gmail.com</a>&gt;<br>\nI am working on proving a lemma in predicate logic using Isabelle, and I've<br>\nencountered a schematic variable in the proof state that I'm finding<br>\nsomewhat confusing. I would greatly appreciate your insights.</p>\n<p>Here's the Isabelle code for the lemma:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"s\">\"(∃x. ∀y. P x y) ⟹ (∀y. ∃x. P x y)\"</span>\n<span class=\"w\">  </span><span class=\"kp\">apply</span><span class=\"o\">(</span><span class=\"n\">erule</span><span class=\"w\"> </span><span class=\"n\">exE</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"kp\">apply</span><span class=\"o\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"n\">allI</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"kp\">apply</span><span class=\"o\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"n\">exI</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>After running the above code, the last proof state is:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">proof</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">prove</span><span class=\"o\">)</span>\n<span class=\"n\">goal</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">1</span><span class=\"w\"> </span><span class=\"n\">subgoal</span><span class=\"o\">):</span>\n<span class=\"w\"> </span><span class=\"n\">1.</span><span class=\"w\"> </span><span class=\"n\">⋀x</span><span class=\"w\"> </span><span class=\"n\">y.</span><span class=\"w\"> </span><span class=\"n\">∀y.</span><span class=\"w\"> </span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"n\">⟹</span><span class=\"w\"> </span><span class=\"n\">P</span><span class=\"w\"> </span><span class=\"o\">(?</span><span class=\"n\">x4</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">y</span>\n</code></pre></div>\n<p>What does conclusion <code>P (?x4 x y) y</code> mean exactly? What is the use of <code>?x4</code><br>\nhere and is it a function of <code>x</code> and <code>y</code>. I guess here it's supposed to<br>\nreturn <code>x</code>, but why is it <code>?x4 x y</code> in the first place?</p>\n<p>I tried <code>apply assumption</code> but it couldnt finish the proof, why?</p>",
        "id": 395659273,
        "sender_full_name": "Email Gateway",
        "timestamp": 1696844720
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nHi,</p>\n<p>\"?x4 x y\" is a schematic variable that can depend on the bound variables <br>\nx and y. E.g., you can unify ?x4 with x (?x4 = %x y. x).</p>\n<p>Without these parameters, a schematic variable cannot depend on bound <br>\nvariables.</p>",
        "id": 395662321,
        "sender_full_name": "Email Gateway",
        "timestamp": 1696845646
    },
    {
        "content": "<p>From: Jan van Brügge &lt;<a href=\"mailto:jan@vanbruegge.de\">jan@vanbruegge.de</a>&gt;<br>\nThose are all the forall-bound variables that the unification of the schematic variable may use. For example if you would bring new forall-bound variables into scope you wouls not be able to unify the schematic variable with them.</p>\n<p>Your proof does not work because you still have a HOL forall in your assumptions. If you add apply (erule allE) before apply assumption it will work.</p>\n<p>Cheers,<br>\nJan</p>\n<p>Oct 9, 2023 11:45:19 AM Eero Pomell &lt;<a href=\"mailto:eero.the.engineer@gmail.com\">eero.the.engineer@gmail.com</a>&gt;:</p>",
        "id": 395663483,
        "sender_full_name": "Email Gateway",
        "timestamp": 1696845996
    },
    {
        "content": "<p>From: Stepan Holub &lt;<a href=\"mailto:holub@karlin.mff.cuni.cz\">holub@karlin.mff.cuni.cz</a>&gt;<br>\nHi,</p>\n<p>I am not sure what is your objective in the whole exercise.<br>\nYou are surely aware of a simple<br>\nlemma \"(∃x. ∀y. P x y) ⟹ (∀y. ∃x. P x y)\"<br>\n  by  blast</p>\n<p>A structured proof revealing the idea behind the proof would look like</p>\n<p>lemma \"∃x. ∀y. P x y ⟹ ∀y. ∃x. P x y\"<br>\nproof<br>\n   assume ex: \"∃x. ∀y. P x y\"<br>\n   fix y<br>\n   obtain x where \"P x y\"<br>\n     using ex by blast<br>\n   thus \"∃x. P x y\"<br>\n     by blast<br>\nqed</p>\n<p>If you are trying to learn using tactics then the proof can be<br>\nlemma \"(∃x. ∀y. P x y) ⟹ (∀y. ∃x. P x y)\"<br>\n   apply(erule exE)<br>\n   apply(rule allI)<br>\n   apply(rule exI)<br>\n   apply (erule allE)<br>\n   by assumption</p>\n<p>as Jan pointed out.</p>\n<p>If you just want to understand the meaning of the schematic variable in <br>\nthe last goal, look at a mixed:<br>\nlemma \"(∃x. ∀y. P x y) ⟹ (∀y. ∃x. P x y)\"<br>\n   apply(erule exE)<br>\n   apply(rule allI)<br>\n   apply(rule exI)<br>\nproof-<br>\n   show \"⋀x y. ∀y. P x y ⟹ P ((λ x y. x) x y) y\"<br>\n     by blast<br>\nqed</p>\n<p>where ?x4 is instantiated with (λ x y. x) as Peter pointed out. In other <br>\nwords, the schematic variable in a goal means that you will prove the <br>\nthe goal if you manage to prove it for <em>any</em> instantiation of the <br>\nschematic variable (that is, an instantiation of your choice).<br>\nNote that Isabelle guesses two instantiations in the last \"by <br>\nassumption\" above.</p>\n<p>Stepan</p>",
        "id": 395679491,
        "sender_full_name": "Email Gateway",
        "timestamp": 1696851784
    }
]