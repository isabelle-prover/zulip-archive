[
    {
        "content": "<p>From: Fabian Immler via Cl-isabelle-users &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nHi Peter,</p>\n<p>It is possible that this formalisation is not faithful to the IEEE standard.<br>\nThe commit message of the changeset that is to blame reminded me that I just “ported float_mul_add and float_round … from HOL Kananaskis-12”.<br>\nI.e., I did not validate these definitions thoroughly.</p>\n<p>The corresponding code in HOL Kananaskis-12  (pretty much unchanged in current Kananaskis-14) reads as follows and probably shows the same behaviour:<br>\n<a href=\"https://github.com/HOL-Theorem-Prover/HOL/blob/kananaskis-12/src/floating-point/binary_ieeeScript.sml#L488\">https://github.com/HOL-Theorem-Prover/HOL/blob/kananaskis-12/src/floating-point/binary_ieeeScript.sml#L488</a> &lt;<a href=\"https://github.com/HOL-Theorem-Prover/HOL/blob/kananaskis-12/src/floating-point/binary_ieeeScript.sml#L488\">https://github.com/HOL-Theorem-Prover/HOL/blob/kananaskis-12/src/floating-point/binary_ieeeScript.sml#L488</a>&gt;</p>\n<p>float_round_with_flags mode<br>\n               (if (r1 = 0) /\\ (r2 = 0) /\\ (signP = z.Sign) then<br>\n                  signP = 1w<br>\n                else mode = roundTowardNegative) (r1 + r2)`</p>\n<p>Best wishes,<br>\nFabian</p>",
        "id": 259742824,
        "sender_full_name": "Email Gateway",
        "timestamp": 1635615845
    }
]