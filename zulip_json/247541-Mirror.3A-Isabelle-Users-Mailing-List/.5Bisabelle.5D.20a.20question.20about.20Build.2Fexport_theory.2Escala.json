[
    {
        "content": "<p>From: lacramioara &lt;<a href=\"mailto:lacramioara.astefanoaei@gmail.com\">lacramioara.astefanoaei@gmail.com</a>&gt;<br>\nHello,</p>\n<p><code>Build/export_theory.scala</code> contains a class <code>Thm</code> with <code>deps</code> as a<br>\n<code>List[Thm_Name]</code>. I wanted to use these deps to construct a call graph for an<br>\narbitrary theory. This approach seemed to be inline with the one at<br>\n<a href=\"https://github.com/Dacit/afp-complex-networks/blob/main/source/graph/src/graph/edge_importer.scala#L173\">https://github.com/Dacit/afp-complex-networks/blob/main/source/graph/src/graph/edge_importer.scala#L173</a>.</p>\n<p>Say i have a theory <code>DemoFib.thy</code> (from <code>codegen.pdf</code>) and a basic ROOT<br>\ncontaining <code>session \"TestDemoFib\" = HOL + theories Demo_Fib</code>. I call <code>isabelle\nbuild -o browser_info -b TestDemoFib</code> after adding some prints in <code>read_thms</code>.<br>\nWhat puzzles me is that <code>read_thms</code> seems to fill in deps only for <code>Pure</code>, the<br>\nother theorems seem to be entities with an empty content. So my question is:<br>\nam i overlooking a build option which would lead to having non-empty deps for<br>\ntheorems in a theory file?</p>\n<p>Thank you,<br>\nLacramioara</p>\n<p>PS<br>\nSuch a call graph could be used to update theory associated tex files with<br>\n<code>uses</code> clauses s.t. one can then generate blueprints like they do for Lean.<br>\n(If i understand correctly, the tex files corresponding to a Lean project are<br>\nmanually written and with the help of <code>uses</code>, like<br>\nat <a href=\"https://github.com/fpvandoorn/carleson/blob/master/blueprint/src/chapter/main.tex#L299\">https://github.com/fpvandoorn/carleson/blob/master/blueprint/src/chapter/main.tex#L299</a>,<br>\ngraphs<br>\nlike <a href=\"https://florisvandoorn.com/carleson/blueprint/dep_graph_document.html\">https://florisvandoorn.com/carleson/blueprint/dep_graph_document.html</a> can<br>\nbe created.)</p>",
        "id": 502206055,
        "sender_full_name": "Email Gateway",
        "timestamp": 1740637850
    },
    {
        "content": "<p>From: Frédéric Blanqui &lt;<a href=\"mailto:frederic.blanqui@inria.fr\">frederic.blanqui@inria.fr</a>&gt;<br>\nHi. There is some code in <br>\n<a href=\"https://github.com/Deducteam/isabelle_dedukti/blob/master/src/rootfile.scala\">https://github.com/Deducteam/isabelle_dedukti/blob/master/src/rootfile.scala</a> <br>\nto build the dependency graph of a session. This might be useful to you.</p>\n<p>Le 27/02/2025 à 07:30, lacramioara a écrit :</p>\n<blockquote>\n<p>Hello,</p>\n<p><code>Build/export_theory.scala</code> contains a class <code>Thm</code> with <code>deps</code> as a<br>\n<code>List[Thm_Name]</code>. I wanted to use these deps to construct a call graph for an<br>\narbitrary theory. This approach seemed to be inline with the one at<br>\n<a href=\"https://github.com/Dacit/afp-complex-networks/blob/main/source/graph/src/graph/edge_importer.scala#L173\">https://github.com/Dacit/afp-complex-networks/blob/main/source/graph/src/graph/edge_importer.scala#L173</a>.</p>\n<p>Say i have a theory <code>DemoFib.thy</code> (from <code>codegen.pdf</code>) and a basic ROOT<br>\ncontaining <code>session \"TestDemoFib\" = HOL + theories Demo_Fib</code>. I call <code>isabelle\nbuild -o browser_info -b TestDemoFib</code> after adding some prints in <code>read_thms</code>.<br>\nWhat puzzles me is that <code>read_thms</code> seems to fill in deps only for <code>Pure</code>, the<br>\nother theorems seem to be entities with an empty content. So my question is:<br>\nam i overlooking a build option which would lead to having non-empty deps for<br>\ntheorems in a theory file?</p>\n<p>Thank you,<br>\nLacramioara</p>\n<p>PS<br>\nSuch a call graph could be used to update theory associated tex files with<br>\n<code>uses</code> clauses s.t. one can then generate blueprints like they do for Lean.<br>\n(If i understand correctly, the tex files corresponding to a Lean project are<br>\nmanually written and with the help of <code>uses</code>, like<br>\nat <a href=\"https://github.com/fpvandoorn/carleson/blob/master/blueprint/src/chapter/main.tex#L299\">https://github.com/fpvandoorn/carleson/blob/master/blueprint/src/chapter/main.tex#L299</a>,<br>\ngraphs<br>\nlike <a href=\"https://florisvandoorn.com/carleson/blueprint/dep_graph_document.html\">https://florisvandoorn.com/carleson/blueprint/dep_graph_document.html</a> can<br>\nbe created.)</p>\n</blockquote>\n<p>-- <br>\nFrédéric Blanqui<br>\nResearch director at INRIA<br>\nChair of EuroProofNet<br>\n<a href=\"https://blanqui.gitlabpages.inria.fr/\">https://blanqui.gitlabpages.inria.fr/</a></p>",
        "id": 502209570,
        "sender_full_name": "Email Gateway",
        "timestamp": 1740639837
    },
    {
        "content": "<p>From: Fabian Huch &lt;<a href=\"mailto:huch@in.tum.de\">huch@in.tum.de</a>&gt;</p>\n<p>On 2/27/25 07:30, lacramioara wrote:</p>\n<blockquote>\n<p>Hello,</p>\n<p><code>Build/export_theory.scala</code> contains a class <code>Thm</code> with <code>deps</code> as a<br>\n<code>List[Thm_Name]</code>. I wanted to use these deps to construct a call graph for an<br>\narbitrary theory.<br>\nThe name \"Call graph\" doesn't really make sense in this context, I would <br>\nsay \"dependency graph\" or \"formal entity graph\".<br>\n  This approach seemed to be inline with the one at<br>\n<a href=\"https://github.com/Dacit/afp-complex-networks/blob/main/source/graph/src/graph/edge_importer.scala#L173\">https://github.com/Dacit/afp-complex-networks/blob/main/source/graph/src/graph/edge_importer.scala#L173</a>.</p>\n<p>Say i have a theory <code>DemoFib.thy</code> (from <code>codegen.pdf</code>) and a basic ROOT<br>\ncontaining <code>session \"TestDemoFib\" = HOL + theories Demo_Fib</code>. I call <code>isabelle\nbuild -o browser_info -b TestDemoFib</code> after adding some prints in <code>read_thms</code>.<br>\nWhat puzzles me is that <code>read_thms</code> seems to fill in deps only for <code>Pure</code>, the<br>\nother theorems seem to be entities with an empty content. So my question is:<br>\nam i overlooking a build option which would lead to having non-empty deps for<br>\ntheorems in a theory file?</p>\n</blockquote>\n<p>Yes, you need to add \"-o export_theory\".</p>\n<p>Fabian</p>",
        "id": 502226065,
        "sender_full_name": "Email Gateway",
        "timestamp": 1740645787
    },
    {
        "content": "<p>From: Lacramioara Astefanoaei &lt;<a href=\"mailto:lacramioara.astefanoaei@gmail.com\">lacramioara.astefanoaei@gmail.com</a>&gt;<br>\nThank you Fabian, indeed, i obtain what i want by adding <code>-o\nexport_theory</code>. I think i 've seen \"-o export_theory\" mentioned in an<br>\nIsabelle-users response, i  remember having looked it up in the docs and,<br>\nas i couldn't find it, i thought it should have been <code>-e</code> for<br>\n<code>export_files</code> and with <code>-e</code> i had the same output.</p>\n<p>I wonder if it was worth it adding the option <code>export_theory</code> to<br>\n“system.pdf”. (It doesn’t seem to be documented, <code>isabelle options -l -t\nbuild</code> doesn’t show it and <code>pdfgrep export_theory docs/*.pdf</code> gives no<br>\nresult).</p>\n<p>Regarding your remark with respect to \"call graphs\", i used it more to<br>\ndifferentiate what i was looking for from the existing dependency graphs<br>\ngenerated at the level of theories. Indeed, i see the point you're making<br>\nif i think in terms of \"the validity of a lemma depends on the validity of<br>\nanother lemma\". But theories contain function definitions as well. So i<br>\nindulge, still, in the thought that the terminology \"call graph\" can make<br>\nsense, at least under the proofs-as-programs paradigm.</p>\n<p>On Thu, 27 Feb 2025 at 09:42, Fabian Huch &lt;<a href=\"mailto:huch@in.tum.de\">huch@in.tum.de</a>&gt; wrote:</p>\n<blockquote>\n<p>On 2/27/25 07:30, lacramioara wrote:</p>\n<blockquote>\n<p>Hello,</p>\n<p><code>Build/export_theory.scala</code> contains a class <code>Thm</code> with <code>deps</code> as a<br>\n<code>List[Thm_Name]</code>. I wanted to use these deps to construct a call graph<br>\nfor an<br>\narbitrary theory.<br>\nThe name \"Call graph\" doesn't really make sense in this context, I would<br>\nsay \"dependency graph\" or \"formal entity graph\".<br>\n  This approach seemed to be inline with the one at</p>\n<p><a href=\"https://github.com/Dacit/afp-complex-networks/blob/main/source/graph/src/graph/edge_importer.scala#L173\">https://github.com/Dacit/afp-complex-networks/blob/main/source/graph/src/graph/edge_importer.scala#L173</a><br>\n.</p>\n<p>Say i have a theory <code>DemoFib.thy</code> (from <code>codegen.pdf</code>) and a basic ROOT<br>\ncontaining <code>session \"TestDemoFib\" = HOL + theories Demo_Fib</code>. I call<br>\n<code>isabelle\nbuild -o browser_info -b TestDemoFib</code> after adding some prints in<br>\n<code>read_thms</code>.<br>\nWhat puzzles me is that <code>read_thms</code> seems to fill in deps only for<br>\n<code>Pure</code>, the<br>\nother theorems seem to be entities with an empty content. So my question<br>\nis:<br>\nam i overlooking a build option which would lead to having non-empty<br>\ndeps for<br>\ntheorems in a theory file?</p>\n</blockquote>\n<p>Yes, you need to add \"-o export_theory\".</p>\n<p>Fabian</p>\n</blockquote>",
        "id": 502345444,
        "sender_full_name": "Email Gateway",
        "timestamp": 1740679106
    }
]