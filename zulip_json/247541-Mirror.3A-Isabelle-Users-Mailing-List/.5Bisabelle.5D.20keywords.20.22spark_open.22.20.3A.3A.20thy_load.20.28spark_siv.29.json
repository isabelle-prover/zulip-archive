[
    {
        "content": "<p>From: Walther Neuper &lt;<a href=\"mailto:walther.neuper@jku.at\">walther.neuper@jku.at</a>&gt;<br>\nthe update of working code from Isabelle2020 to 21 shows that \"::<br>\nthy_load\" has changed and now takes a kind of constant, for instance<br>\nspark_siv, instead of strings.</p>\n<p>we use SPARK as a model for our application, but are not yet successful<br>\nwith the following adaption of our code ...</p>\n<p>/----------- *.thy ------------------------------------<br>\nkeywords \"Example\" :: thy_load (isac_example)<br>\nval _ =                                                  <br>\n  Outer_Syntax.command \\&lt;^command_keyword&gt;‹Example› <br>\n    \"start a Calculation from a Formalise-file\"<br>\n    (Resources.provide_parse_files (Command_Span.extensions [\"str\"]) -- Parse.parname<br>\n      &gt;&gt; (Toplevel.theory o (Preliminary.load_formalisation ParseC.formalise)));<br>\n\\---------- *.thy ------------------------------------<br>\n/----------- isac.scala ------------------------------<br>\npackage isabelle.isac<br>\nimport isabelle._<br>\nobject ISAC<br>\n{ class Load_Command1 extends Command_Span.Load_Command(\"isac_example\")<br>\n  { override val extensions: List[String] = List(\"str\") }<br>\n}<br>\n\\---------- isac.scala ------------------------------</p>\n<p>... because keywords \"Example\" raises the error</p>\n<p>Unknown load command specification: \"isac_example\"</p>\n<p>... which is no surprise. However taking the model</p>\n<p>keywords \"spark_open\" :: thy_load (spark_siv)</p>\n<p>... and looking for the definition of spark_siv, there are only two<br>\noccurrences of spark_siv</p>\n<p>~$ grep -r spark_siv src/HOL/SPARK/<br>\n   src/HOL/SPARK/SPARK_Setup.thy:    and \"spark_open\" :: thy_load (spark_siv)<br>\n   src/HOL/SPARK/Tools/spark.scala:  class Load_Command2 extends Command_Span.Load_Command(\"spark_siv\")</p>\n<p>... so the question: where / how is the constant spark_siv defined ?</p>\n<p>Any hint is welcome,</p>\n<p>Walther</p>",
        "id": 229298696,
        "sender_full_name": "Email Gateway",
        "timestamp": 1615210577
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nYou need to declare your add-ons to Isabelle/Scala formally via<br>\nisabelle_scala_service in etc/settings, e.g. see<br>\n<a href=\"https://isabelle.sketis.net/repos/isabelle-release/file/Isabelle2021/src/HOL/SPARK/etc/settings\">https://isabelle.sketis.net/repos/isabelle-release/file/Isabelle2021/src/HOL/SPARK/etc/settings</a></p>\n<p>BTW, this is how I figured out the internal class name, e.g. in \"isabelle scala\":</p>\n<p>classOf[isabelle.spark.SPARK.Load_Command1].getName</p>\n<p>An alternative is to ignore the whole thing and merely use literal file names<br>\nwith explicit extension. E.g. see my change to 'boogie_file' for Isabelle2021:<br>\n<a href=\"https://isabelle.sketis.net/repos/isabelle-release/rev/b808eddc83cf\">https://isabelle.sketis.net/repos/isabelle-release/rev/b808eddc83cf</a></p>\n<p>Makarius</p>",
        "id": 229354245,
        "sender_full_name": "Email Gateway",
        "timestamp": 1615229794
    },
    {
        "content": "<p>From: Walther Neuper &lt;<a href=\"mailto:walther.neuper@jku.at\">walther.neuper@jku.at</a>&gt;<br>\nThank you for the hints. I also added also the two lines \"+\" ..</p>\n<p>src/Pure/Tools/scala_project.scala<br>\n         \"src/HOL/SPARK/Tools\" -&gt; Path.explode(\"isabelle.spark\"),<br>\n      + \"src/Tools/isac/etc\" -&gt; Path.explode(\"isabelle.isac\"),</p>\n<p>src/Pure/build-jars<br>\n         declare -a SOURCES=(<br>\n             src/HOL/SPARK/Tools/spark.scala<br>\n        +  src/Tools/isac/etc/isac.scala</p>\n<p>.. but although Pure was involved in editing, the command</p>\n<p>./bin/isabelle jedit ...</p>\n<p>did NOT re-build Pure --- how is this achieved most conveniently now,<br>\nwhen Scala is involved?</p>\n<p>Many thanks in advance,</p>\n<p>Walther</p>",
        "id": 229706414,
        "sender_full_name": "Email Gateway",
        "timestamp": 1615396939
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nYou should not edit Isabelle/Pure sources in such an adhoc manner.</p>\n<p>In Isabelle2021 there is now a complete example application with user-defined<br>\nML and Scala modules, see $NAPROCHE_HOME/Intro.thy in the documentation panel.<br>\nThe last section of the file has live links to relevant parts of the sources.</p>\n<p>In particular, see Admin_Tools/naproche_build for how to build the add-on<br>\nScala module.</p>\n<p>For developing the Scala part with IntelliJ IDEA, I use regular \"isabelle<br>\nscala_project\" with some manual symlinks in the generated Gradle project.</p>\n<p>The structure of that is rather simple, which is the reason why I've chosen<br>\nGradle to do this.</p>\n<p>Makarius</p>",
        "id": 229708370,
        "sender_full_name": "Email Gateway",
        "timestamp": 1615397629
    },
    {
        "content": "<p>From: Walther Neuper &lt;<a href=\"mailto:walther.neuper@jku.at\">walther.neuper@jku.at</a>&gt;<br>\nOn 08.03.21 19:56, Makarius wrote:</p>\n<blockquote>\n<p>On 08/03/2021 14:35, Walther Neuper wrote:</p>\n<blockquote>\n<p>... so the question: where / how is the constant spark_siv defined ?<br>\nYou need to declare your add-ons to Isabelle/Scala formally via<br>\nisabelle_scala_service in etc/settings, e.g. see<br>\n<a href=\"https://isabelle.sketis.net/repos/isabelle-release/file/Isabelle2021/src/HOL/SPARK/etc/settings\">https://isabelle.sketis.net/repos/isabelle-release/file/Isabelle2021/src/HOL/SPARK/etc/settings</a><br>\nin a phase of development where we want to make a test example running<br>\nwith least effort the following solution appears preferable:<br>\nAn alternative is to ignore the whole thing and merely use literal file names<br>\nwith explicit extension. E.g. see my change to 'boogie_file' for Isabelle2021:<br>\n<a href=\"https://isabelle.sketis.net/repos/isabelle-release/rev/b808eddc83cf\">https://isabelle.sketis.net/repos/isabelle-release/rev/b808eddc83cf</a></p>\n</blockquote>\n</blockquote>\n<p>Thus we have (in Calculation.thy):</p>\n<p>keywords \"Example\" :: thy_load</p>\n<p>and</p>\n<p>Example ‹/usr/local/isabisac/src/Tools/isac/Examples/exp_Statics_Biegel_Timischl_7-70.str›</p>\n<p>which nicely evaluates related code in Calculation.thy. However, we need<br>\nto create a session</p>\n<p>./bin/isabelle build -v -b Isac</p>\n<p>which causes the error message (see \"*.str.str\" ..)</p>\n<p>Isac FAILED<br>\n    (see also /home/wneuper/.isabelle/isabisac/heaps/polyml-5.8.2_x86_64_32-linux/log/Isac)<br>\n    *** Failed to load theory \"Isac.BridgeJEdit\" (unresolved \"Isac.Calculation\")<br>\n    *** Failed to load theory \"Isac.Build_Isac\" (unresolved \"Isac.BridgeJEdit\")<br>\n    *** No such file: \"/usr/local/isabisac/src/Tools/isac/Examples/exp_Statics_Biegel_Timischl_7-70.str.str\" (line 230 of \"~~/src/Tools/isac/BridgeJEdit/Calculation.thy\")<br>\n    *** At command \"Example\" (line 230 of \"~~/src/Tools/isac/BridgeJEdit/Calculation.thy\")<br>\n    Unfinished session(s): Isac</p>\n<p>Studying ~~/src/HOL/ROOT we found \"dokument_files\" (would require<br>\n<em>/document/</em>) and \"export_files\", but here we would need something like<br>\n\"import_files\".</p>\n<p>Is here a simple way out or should we go the long way via IntelliJ Idea?</p>\n<p>Walther</p>",
        "id": 230056726,
        "sender_full_name": "Email Gateway",
        "timestamp": 1615565859
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 12/03/2021 17:17, Walther Neuper wrote:</p>\n<blockquote>\n<p>Thus we have (in Calculation.thy):</p>\n<p>keywords \"Example\" :: thy_load</p>\n<p>and</p>\n<p>Example ‹/usr/local/isabisac/src/Tools/isac/Examples/exp_Statics_Biegel_Timischl_7-70.str›</p>\n<p>which nicely evaluates related code in Calculation.thy. However, we need to<br>\ncreate a session</p>\n<p>./bin/isabelle build -v -b Isac</p>\n<p>which causes the error message (see \"*.str.str\" ..)</p>\n<p>Isac FAILED<br>\n    (see also /home/wneuper/.isabelle/isabisac/heaps/polyml-5.8.2_x86_64_32-linux/log/Isac)<br>\n    *** Failed to load theory \"Isac.BridgeJEdit\" (unresolved \"Isac.Calculation\")<br>\n    *** Failed to load theory \"Isac.Build_Isac\" (unresolved \"Isac.BridgeJEdit\")<br>\n    *** No such file: \"/usr/local/isabisac/src/Tools/isac/Examples/exp_Statics_Biegel_Timischl_7-70.str.str\" (line 230 of \"~~/src/Tools/isac/BridgeJEdit/Calculation.thy\")<br>\n    *** At command \"Example\" (line 230 of \"~~/src/Tools/isac/BridgeJEdit/Calculation.thy\")<br>\n    Unfinished session(s): Isac</p>\n</blockquote>\n<p>The error appears to stem from your Isabelle/ML implementation of the command:<br>\nit probably still adds another file extension.</p>\n<blockquote>\n<p>Studying ~~/src/HOL/ROOT we found \"dokument_files\" (would require<br>\n<em>/document/</em>) and \"export_files\", but here we would need something like<br>\n\"import_files\".</p>\n</blockquote>\n<p>Such declarations of imported files were required many years ago. Today we<br>\nhave everything in \"theory keywords ... :: thy_load\" and \"isabelle build\"<br>\npicks the information from there.</p>\n<blockquote>\n<p>Is here a simple way out or should we go the long way via IntelliJ Idea?</p>\n</blockquote>\n<p>For Isabelle/ML problems you merely require Isabelle/jEdit as IDE.</p>\n<p>Makarius</p>",
        "id": 230058586,
        "sender_full_name": "Email Gateway",
        "timestamp": 1615566516
    }
]