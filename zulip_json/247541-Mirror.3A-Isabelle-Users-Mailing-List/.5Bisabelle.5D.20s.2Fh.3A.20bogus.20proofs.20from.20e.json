[
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nI’ve been getting a lot of junk sledgehammer proofs from e lately. Finally I found a reproducible example that can be run from a standard theory setup: simply HOL-Analysis. Then try it on</p>\n<p>lemma vector_derivative_of_real_left:<br>\n  assumes \"f differentiable at x\"<br>\n  shows   \"vector_derivative (λx. of_real (f x)) (at x) = of_real (deriv f x)\"</p>\n<p>by (metis UNIV_I add_diff_cancel_left' assms cancel_comm_monoid_add_class.diff_cancel diff_add_cancel diff_zero differentiable_at_withinI differentiable_compose differentiable_const has_vector_derivative_const has_vector_derivative_transform of_real_differentiable of_real_eq_0_iff of_real_eq_1_iff vector_derivative_const_at vector_derivative_unique_at vector_derivative_works)</p>\n<p>Generally these proofs involve theorems like add_diff_cancel_left’ and diff_add_cancel. They are only found by e and they never work. Some output formatting issue?</p>\n<p>Larry</p>",
        "id": 244825264,
        "sender_full_name": "Email Gateway",
        "timestamp": 1625347944
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nI have noticed a similar problem recently, but associated more with meson and <br>\nverit. Unfortnately I cannot provide a conctrete example right now and cannot <br>\nsay if add_diff_cancel_left' has anything to do with it, but arithmetic is <br>\ncertainly involved.</p>\n<p>Tobias<br>\n<a href=\"/user_uploads/14278/fE74utOMvb29yLIs1mwbyh7Z/smime.p7s\">smime.p7s</a></p>",
        "id": 244861143,
        "sender_full_name": "Email Gateway",
        "timestamp": 1625407766
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nA problem I’ve often noticed is that meson proofs fail, but replacing “meson” by “metis” creates a working proof.</p>\n<p>Larry</p>",
        "id": 244866806,
        "sender_full_name": "Email Gateway",
        "timestamp": 1625416096
    },
    {
        "content": "<p>From: Jasmin Blanchette via Cl-isabelle-users &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nHi Larry,</p>\n<p>I've looked into this one and it turns out E can refind its own proof if given enough time. That's a sign that the issue is either E unsoundness (unlikely) or simply weakness of reconstruction (more likely). This proof in particular relies on the very explosive axiom \"X = fTrue \\/ X = fFalse\" (where X : bool), which Metis, like any reasonable superposition prover, probably weighs down in its clause selection heuristic because X matches anything. (This is the evil case that goes by the name \"paramodulation from variable\".)</p>\n<p>Assuming my analysis is correct, it's unfortunate that you get so many unreconstructable in that area. Perhaps try setting [no_atp] on some offending lemma?</p>\n<p>If you have any indication that no proof should be possible from the above lemmas or other sets of lemmas, let me know.</p>\n<p>TODO for myself: Repair/improve Isar proof reconstruction so that it provides some useful output in such cases, even if that output is too ugly for inclusion in a user's theory.</p>\n<p>Cheers,</p>\n<p>Jasmin</p>\n<p>P.S. Concerning meson failures, which you mentioned in a followup email: I'm a taker for any reproducible failure.</p>",
        "id": 245697026,
        "sender_full_name": "Email Gateway",
        "timestamp": 1626101500
    },
    {
        "content": "<p>From: Asta Halkjær From &lt;<a href=\"mailto:andro.from@gmail.com\">andro.from@gmail.com</a>&gt;<br>\nI find that meson is very sensitive to \"using\" lemmas vs feeding them as<br>\narguments and that sledgehammer ignores this.</p>\n<p>In my recent AFP entry on Public Announcement Logic I ran into this a lot.<br>\nIt's unfortunately not a small example, but for instance in the following<br>\nlines:</p>\n<p>ultimately have ‹⊢⇩! ([r]⇩! K⇩! i p ❙⟷⇩! r ❙⟶⇩! K⇩! i (reduce' r p))›<br>\n    using Iff_Iff sledgehammer<br>\n    by (meson Iff_sym Iff_wk)</p>\n<p>Sledgehammer provides the meson proof which fails (\"Failed to apply initial<br>\nproof method\") but is easily fixed by either:</p>\n<ul>\n<li>switching to metis or</li>\n<li>removing the using (important) and adding the Iff_Iff lemma as an<br>\nargument to meson.</li>\n</ul>\n<p>The theory:<br>\n<a href=\"https://foss.heptapod.net/isa-afp/afp-2021/-/blob/branch/default/thys/Public_Announcement_Logic/PAL.thy#L344\">https://foss.heptapod.net/isa-afp/afp-2021/-/blob/branch/default/thys/Public_Announcement_Logic/PAL.thy#L344</a></p>\n<p>Asta</p>\n<p>Den man. 12. jul. 2021 kl. 16.53 skrev Jasmin Blanchette via<br>\nCl-isabelle-users &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;:</p>",
        "id": 245699402,
        "sender_full_name": "Email Gateway",
        "timestamp": 1626102352
    },
    {
        "content": "<p>From: Jasmin Blanchette via Cl-isabelle-users &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nHi Asta,</p>\n<blockquote>\n<p>I find that meson is very sensitive to \"using\" lemmas vs feeding them as arguments and that sledgehammer ignores this.</p>\n</blockquote>\n<p>Thank you for your report. Thanks to your example, I was able to track down the issue and find a solution for the Isabelle development version.</p>\n<p>Cheers,</p>\n<p>Jasmin</p>",
        "id": 245795727,
        "sender_full_name": "Email Gateway",
        "timestamp": 1626166796
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nOn 13/07/2021 10:59, Jasmin Blanchette via Cl-isabelle-users wrote:</p>\n<blockquote>\n<p>Hi Asta,</p>\n<blockquote>\n<p>I find that meson is very sensitive to \"using\" lemmas vs feeding them as arguments and that sledgehammer ignores this.</p>\n</blockquote>\n<p>Thank you for your report. Thanks to your example, I was able to track down the issue and find a solution for the Isabelle development version.</p>\n</blockquote>\n<p>Somewhat belatedly: Why does meson ignore \"using\"? Shouldn't it take it into <br>\naccount like metis, simp etc? Does anybody feel responsible for meson?</p>\n<p>Tobias</p>\n<blockquote>\n<p>Cheers,</p>\n<p>Jasmin</p>\n<p><a href=\"/user_uploads/14278/lsqTxrhCYZLJjwD4gVMwKPUV/smime.p7s\">smime.p7s</a></p>\n</blockquote>",
        "id": 260380206,
        "sender_full_name": "Email Gateway",
        "timestamp": 1636103290
    },
    {
        "content": "<p>From: Jasmin Blanchette via Cl-isabelle-users &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nUntil your comment, I thought that meson wasn't ignoring \"using\", but that it was just treating it differently somehow. Now I just convinced myself on a small example that you're probably right. I'll look into it.</p>\n<p>Jasmin</p>",
        "id": 260382231,
        "sender_full_name": "Email Gateway",
        "timestamp": 1636104647
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nOn 05/11/2021 10:30, Jasmin Blanchette via Cl-isabelle-users wrote:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>I find that meson is very sensitive to \"using\" lemmas vs feeding them as arguments and that sledgehammer ignores this.<br>\nThank you for your report. Thanks to your example, I was able to track down the issue and find a solution for the Isabelle development version.</p>\n</blockquote>\n</blockquote>\n<p>Somewhat belatedly: Why does meson ignore \"using\"? Shouldn't it take it into account like metis, simp etc? Does anybody feel responsible for meson?</p>\n</blockquote>\n<p>Until your comment, I thought that meson wasn't ignoring \"using\", but that it was just treating it differently somehow. Now I just convinced myself on a small example that you're probably right. I'll look into it.</p>\n</blockquote>\n<p>You are right, I should have written \"seems to be ignoring\" because I am not <br>\nsure myself what exactly is going on. Thanks for taking a look.</p>\n<p>Tobias</p>\n<blockquote>\n<p>Jasmin</p>\n<p><a href=\"/user_uploads/14278/V3cgq4A3pt4K8lGT5irmUhSV/smime.p7s\">smime.p7s</a></p>\n</blockquote>",
        "id": 260382848,
        "sender_full_name": "Email Gateway",
        "timestamp": 1636105038
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nI wrote the meson tactic in the 1990s, well before Isar even existed. I don't know who wrote the corresponding method.</p>\n<p>Larry</p>",
        "id": 260389167,
        "sender_full_name": "Email Gateway",
        "timestamp": 1636108792
    }
]