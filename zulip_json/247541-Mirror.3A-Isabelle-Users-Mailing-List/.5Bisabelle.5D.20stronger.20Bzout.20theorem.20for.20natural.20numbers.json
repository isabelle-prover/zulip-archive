[
    {
        "content": "<p>From: Stepan Holub &lt;<a href=\"mailto:holub@karlin.mff.cuni.cz\">holub@karlin.mff.cuni.cz</a>&gt;<br>\nHello,</p>\n<p>is the following stronger version of GCD.bezout_nat of a general interest?</p>\n<p>(Sub-question: is my use of arg_min combined with id a standard solution?)</p>\n<p>lemma bezout_nat':<br>\n   assumes \"(a :: nat) ≠ 0\"<br>\n   shows \"∃x y. a * x = b * y + c * gcd a b ∧ y &lt; a\"<br>\nproof-<br>\n   let ?P = \"(λ y. ∃ x. a * x = b * y + c * gcd a b)\"<br>\n   define ymin where \"ymin = arg_min id ?P\"<br>\n   from bezout_nat[OF ‹a ≠ 0›]<br>\n   obtain x' y' where  \"a * x' = b * y' + gcd a b\"<br>\n     by blast<br>\n   hence eq': \"a * (c*x') = b * (c*y') + c * gcd a b\"<br>\n     by algebra<br>\n   with arg_min_natI[of ?P _ id, folded ymin_def]<br>\n   obtain x where eq: \"a * x = b * ymin + c * gcd a b\"<br>\n     by blast<br>\n   have \"ymin &lt; a\"<br>\n   proof (rule ccontr)<br>\n     assume \"¬ ymin &lt; a\"<br>\n     hence \"a * (x - b) = b * (ymin - a) + c * gcd a b\"<br>\n       using eq by (simp add: diff_mult_distrib2 mult.commute)<br>\n     with arg_min_nat_le[of ?P \"ymin - a\" id, folded ymin_def, unfolded <br>\nid_apply]<br>\n     have \"ymin ≤ ymin - a\"<br>\n       by blast<br>\n     thus False<br>\n       using ‹¬ ymin &lt; a› ‹a ≠ 0›<br>\n       by force<br>\n   qed<br>\n   then show ?thesis<br>\n     using eq by blast<br>\nqed</p>\n<p>Stepan</p>",
        "id": 301599717,
        "sender_full_name": "Email Gateway",
        "timestamp": 1664528659
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:manuel@pruvisto.org\">manuel@pruvisto.org</a>&gt;<br>\nLooks sufficiently interesting to me, yes. I can put it into the <br>\ndistribution later.</p>\n<p>Using arg_min with id is a standard solution, but for \"nat\" you can also <br>\nuse \"Inf\" or \"Least\". Not sure which is more convenient.</p>\n<p>Incidentally, our \"arg_min\"/\"arg_max\" library is still somewhat <br>\nincomplete and could definitely use further development…</p>\n<p>Manuel</p>",
        "id": 301601141,
        "sender_full_name": "Email Gateway",
        "timestamp": 1664529165
    }
]