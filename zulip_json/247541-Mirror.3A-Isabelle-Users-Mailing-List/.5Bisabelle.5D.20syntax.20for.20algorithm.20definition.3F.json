[
    {
        "content": "<p>From: \"Dr A. Koutsoukou-Argyraki\" &lt;<a href=\"mailto:ak2110@cam.ac.uk\">ak2110@cam.ac.uk</a>&gt;<br>\nHi,</p>\n<p>I'm looking for the appropriate syntax to define an algorithm using <br>\ncases that does the following job:</p>\n<p>My goal is to prove that I can always obtain some object with property <br>\na.</p>\n<p>Starting with object A: if it has property a the proof is finished.</p>\n<p>If A doesn't have property a, Lemma X applies that produces some object <br>\nA' with certain properties.</p>\n<p>If A' has  property a, the proof is finished.</p>\n<p>If A' doesn't have property a, Lemma X  applies that produces some <br>\nobject A'' with certain properties.</p>\n<p>If A'' has  property a, the proof is finished.</p>\n<p>If A'' doesn't have property a, Lemma X applies that produces some <br>\nobject A''' with certain properties...</p>\n<p>and so on.</p>\n<p>But it can be shown that Lemma X can only be applied N many times:</p>\n<p>Because after N many applications of Lemma X, the conclusion of Lemma X <br>\ncannot hold anymore because the object that would be produced cannot <br>\nhave one of the properties guaranteed by the lemma.</p>\n<p>By contrapositive, the assumption of Lemma X (i.e. the assumption that <br>\nthe object from the previous step does not have property a) cannot hold <br>\nafter N many steps.</p>\n<p>Therefore, some object produced after at most N many applications of <br>\nLemma X must have property a.</p>\n<p>Any hints about some syntax pattern that would work for something like <br>\nthis would be much appreciated.<br>\nMany thanks in advance!</p>\n<p>Best wishes,<br>\nAngeliki</p>",
        "id": 249936965,
        "sender_full_name": "Email Gateway",
        "timestamp": 1629342747
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nIsn't it just:</p>\n<p>g A = (if a A then A else g(f A))</p>\n<p>where f is the function corresponding to lemma X? In order to define g in HOL <br>\nyou need to prove its totality. Using \"fun\", you need to provide a well founded <br>\nrelation \"&lt;\" such that \"~ a A ==&gt; f A &lt; A\".</p>\n<p>Tobias<br>\n<a href=\"/user_uploads/14278/iYwJ2X469hKYqw1P19DbVil-/smime.p7s\">smime.p7s</a></p>",
        "id": 249945601,
        "sender_full_name": "Email Gateway",
        "timestamp": 1629353512
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nNote that that well-founded relation can just be \"measure foo\", where</p>\n<p>\"foo A = (some natural number that upper-bounds the number of<br>\nrecursion steps you will take on input A)\"<br>\n<a href=\"/user_uploads/14278/dZatS6Kh8QtMcnsYF7JLCyxS/smime.p7s\">smime.p7s</a></p>",
        "id": 249963868,
        "sender_full_name": "Email Gateway",
        "timestamp": 1629366776
    }
]