[
    {
        "content": "<p>From: Stepan Holub &lt;<a href=\"mailto:holub@karlin.mff.cuni.cz\">holub@karlin.mff.cuni.cz</a>&gt;<br>\nHello,</p>\n<p>is it useful to point out that take_all from List.thy is actually an <br>\nequivalence?</p>\n<p>Best regards</p>\n<p>Stepan</p>",
        "id": 219206187,
        "sender_full_name": "Email Gateway",
        "timestamp": 1607434291
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nDear Stepan,</p>\n<p>Thanks for pointing this out. The existing</p>\n<p>lemma take_all [simp]: \"length xs &lt;= n ==&gt; take n xs = xs\"</p>\n<p>already yields two conditional rewrite rules but is indeed a bit weaker than an <br>\nequivalence. I have added</p>\n<p>lemma take_all_iff [simp]: \"(take n xs = xs) = (length xs &lt;= n)\"<br>\nlemma drop_all_iff [simp]: \"(drop n xs = []) = (length xs &lt;= n)\"</p>\n<p>locally to see what the effect is. It broke exactly one proof in the AFP and <br>\nnone in the distribution. Although this is not impressive, I will probably add <br>\nit to the distribution.</p>\n<p>Keep them coming!</p>\n<p>Tobias<br>\n<a href=\"/user_uploads/14278/3OBFZGeyntN_3KAKl6LoZ_K5/smime.p7s\">smime.p7s</a></p>",
        "id": 219262685,
        "sender_full_name": "Email Gateway",
        "timestamp": 1607461618
    }
]