[
    {
        "content": "<p>From: Peter Reitinger &lt;<a href=\"mailto:peter.reitinger@gmail.com\">peter.reitinger@gmail.com</a>&gt;<br>\nHm also ich wollte nur helfen. Aber anscheinend ist dies unerwünscht...</p>\n<p>---------- Forwarded message ---------<br>\nVon: &lt;<a href=\"mailto:cl-isabelle-users-owner@lists.cam.ac.uk\">cl-isabelle-users-owner@lists.cam.ac.uk</a>&gt;<br>\nDate: Mi., 18. Nov. 2020, 08:44<br>\nSubject: Bug in Isabelle 2019/2020<br>\nTo: &lt;<a href=\"mailto:peter.reitinger@gmail.com\">peter.reitinger@gmail.com</a>&gt;</p>\n<p>Only subscribers may post messages to this list. If you believe that<br>\nyou are a subscriber, please check that you are using the subscribed<br>\ne-mail address.</p>\n<p>---------- Forwarded message ----------<br>\nFrom: Peter Reitinger &lt;<a href=\"mailto:peter.reitinger@gmail.com\">peter.reitinger@gmail.com</a>&gt;<br>\nTo: <a href=\"mailto:isabelle-users@cl.cam.ac.uk\">isabelle-users@cl.cam.ac.uk</a><br>\nCc:<br>\nBcc:<br>\nDate: Wed, 18 Nov 2020 08:44:27 +0100<br>\nSubject: Bug in Isabelle 2019/2020<br>\nHello,</p>\n<p>I would like to report a bug in Isabelle.</p>\n<p>The attached theory file produces unexpected behavior during the<br>\nsimplification of an obviously true equation.<br>\nThese are the imports:<br>\nimports Main \"HOL-Word.Word\"</p>\n<p>Essentially it is as it cannot proof for a function f  that f x = f y<br>\nfollows from x = y which is absolutely irritating. ;-)</p>\n<p>I hope you can find out what is wrong here?</p>\n<p>Best regards<br>\nPeter Reitinger</p>\n<p>In case the bug should not repeat at your installation setup, these are the<br>\nproof states of variant a and b respectively.</p>\n<p>a:<br>\nproof (prove)<br>\ngoal (1 subgoal):</p>\n<ol>\n<li>\n<p>to_bl (word_cat y x) = to_bl (of_bl (to_bl y @ to_bl x))<br>\nMetis: Falling back on \"metis (full_types)\"...<br>\nMetis: Falling back on \"metis (mono_tags)\"...<br>\nFailed to apply proof method⌂:<br>\ngoal (1 subgoal):</p>\n</li>\n<li>\n<p>to_bl (word_cat y x) = to_bl (of_bl (to_bl y @ to_bl x))</p>\n</li>\n</ol>\n<p>b:<br>\nproof (prove)<br>\ngoal (1 subgoal):</p>\n<ol>\n<li>to_bl (of_bl (to_bl y @ to_bl x)) = to_bl (of_bl (to_bl y @ to_bl x))</li>\n</ol>\n<p>Especially proof state in b after apply (simp add:...) is extremely<br>\nconfusing.<br>\n<a href=\"/user_uploads/14278/SY6_47MgIxciI9zTdxR6HU26/Show_bug.thy\">Show_bug.thy</a></p>",
        "id": 217373873,
        "sender_full_name": "Email Gateway",
        "timestamp": 1605861481
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nIch weiß nicht, wie die Policy auf der isabelle-users-Mailingliste ist.<br>\nMir war zumindest nicht klar, dass man da subscribed sein muss, um<br>\nposten zu können.</p>\n<p>So oder so ist das aber kein Bug, sondern völlig erwartetes Verhalten,<br>\nund wie ich mir schon dachte liegt es an Polymorphismus:</p>\n<p>\"to_bl (word_cat (y::4 word) (x::8 word)) =<br>\n   to_bl (of_bl (to_bl y @ to_bl x))\"</p>\n<p>Wenn man hier [[show_sorts]] anmacht (z.B. mit \"declare [[show_sorts]]\"<br>\nim theory toplevel oder mit \"note [[show_sorts]]\" im Isar-Beweis oder<br>\nmit \"using [[show_sorts]]\" im apply-Beweis) sieht man da folgendes:</p>\n<p>variables:<br>\n  x :: 8 word<br>\n  y :: 4 word<br>\ntype variables:<br>\n  'a, 'b :: len0</p>\n<p>Dass da zwei Typvariablen 'a und 'b sind (die für die Längen<br>\nirgendwelcher Wörter stehen) klingt schon einmal ungut. Man kann<br>\nIsabelle auch direkt fragen, warum die linke und rechte Seite nicht<br>\ngleich sind, indem man \"rule refl\" anwendet und unification tracing<br>\nanschaltet:</p>\n<p>using [[unify_trace_failure]]<br>\n    apply (rule refl)</p>\n<p>Da bekommt man dann die Fehlermeldung</p>\n<p>The following types do not unify:<br>\n  'a::len0 word ⇒ bool list<br>\n  'b::len0 word ⇒ bool list</p>\n<p>Ich hab mir den Term dann etwas genauer angesehen und das Problem ist<br>\ndie Funktion word_cat:</p>\n<p>word_cat :: \"'a::len0 word ⇒ 'b::len0 word ⇒ 'c::len0 word\"</p>\n<p>Diese Funktion macht aus zwei Wörtern beliebiger Länge ein Wort<br>\nbeliebiger Länge. Gleichzeitig macht das \"to_bl\", das darauf dann<br>\nangewandt wird, aus einem Wort beliebiger Länge eine Liste von booleans.<br>\nDadurch kann dann die Typinferenz von Isabelle nicht mehr herleiten,<br>\ndass die Wörter links und rechts von dem \"=\" gleiche Länge haben sollen.</p>\n<p>Also am besten das Ergebnis von \"word_cat\" immer mit einer Typannotation<br>\nversehen. (das gleiche gilt für of_bl, eigentlich alle Funktionen, deren<br>\nRückgabetyp eine zusätzliche Typvariable enthält).</p>\n<p>Übermäßiger Polymorphismus ist manchmal etwas haarig, und da das<br>\nTypsystem von Isabelle relativ simpel ist sind manche Operationen leider<br>\ndeutlich polymorpher als man sie gerne hätte…</p>\n<p>Viele Grüße</p>\n<p>Manuel</p>\n<hr>\n<p>isabelle-dev mailing list<br>\n<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a><br>\n<a href=\"https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev\">https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev</a></p>",
        "id": 217378767,
        "sender_full_name": "Email Gateway",
        "timestamp": 1605865066
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nOops, sorry about that!</p>\n<p>Due to a combination of circumstances, somebody wrote a message to me<br>\npersonally to the isabelle-dev mailing list and I clicked \"reply\" and<br>\nthen this happened. Please ignore this.</p>\n<p>Manuel</p>\n<hr>\n<p>isabelle-dev mailing list<br>\n<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a><br>\n<a href=\"https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev\">https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev</a></p>",
        "id": 217378892,
        "sender_full_name": "Email Gateway",
        "timestamp": 1605865151
    }
]