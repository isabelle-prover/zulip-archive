[
    {
        "content": "<p>From: Mario Carneiro &lt;<a href=\"mailto:di.gama@gmail.com\">di.gama@gmail.com</a>&gt;<br>\n(I'm posting this to isabelle-dev since it's a very internal technical<br>\nquestion that probably won't be of interest to end users.)</p>\n<p>So I've managed to successfully modify the kernel to support better proof<br>\ntraces, with ~0 performance impact, but while processing HOL I hit an error<br>\nin Extraction.thy that am having trouble debugging.</p>\n<p>The line that fails is:</p>\n<p>lemmas [extraction_expand] = meta_spec</p>\n<p>which gives an error \"add_expand_thm: unnamed theorem\". I believe this<br>\nmeans that add_expand_thm is being passed the wrong theorem, or a variant<br>\non the theorem, that hasn't been explicitly tagged with the name. However,<br>\nas near as I can tell, this lemmas directive does the same thing as</p>\n<p>ML \"Extraction.add_expand_thm false @{thm meta_spec} @{theory}\"</p>\n<p>and this has no errors. How can I more precisely unfold the meaning of the<br>\nlemmas command here to get ML code that has exactly the same behavior, so<br>\nthat I can inline functions until I've isolated the source of the<br>\nproblematic theorem?</p>\n<p>Also, is there any way for me to do \"printf debugging\" in isabelle/ML? The<br>\nfocus on pure functional programming makes debugging especially difficult,<br>\nbut I'm sure I'm just missing the idioms for doing so (understandably, I<br>\ncan't find any examples of debugging in the source).</p>",
        "id": 206353070,
        "sender_full_name": "Email Gateway",
        "timestamp": 1596901987
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nOn 08/08/2020 17:52, Mario Carneiro wrote:</p>\n<blockquote>\n<p>So I've managed to successfully modify the kernel to support better<br>\nproof traces, with ~0 performance impact, but while processing HOL I hit<br>\nan error in Extraction.thy that am having trouble debugging.</p>\n</blockquote>\n<p>Oof, I can't help you with your actual question, but my advice would be<br>\nto just ignore Extraction for now (i.e. just remove it from HOL). It's<br>\nnot really used much and I don't think anyone except Stefan Berghofer<br>\nunderstands the code in detail. For an experiment such as the one that<br>\nyou are doing, I think it is safe to ignore whatever problems arise from<br>\nExtraction for now.</p>\n<blockquote>\n<p>Also, is there any way for me to do \"printf debugging\" in isabelle/ML?<br>\nThe focus on pure functional programming makes debugging especially<br>\ndifficult, but I'm sure I'm just missing the idioms for doing so<br>\n(understandably, I can't find any examples of debugging in the source).</p>\n</blockquote>\n<p>There are a few functions (\"writeln\", \"Pretty.writeln\", \"print_tac\" for<br>\ntactics) but the easiest one in most circumstances is the @{print}<br>\nantiquotation which takes just about anything (integers, lists, types,<br>\nterms, theorems) and just prints it. For instance:</p>\n<p>let<br>\n  val _ = @{print} my_term<br>\nin<br>\n  &lt;actual code&gt;<br>\nend</p>\n<p>I sometimes turn terms into cterms before printing them like this<br>\nbecause then they are printed more nicely.</p>\n<p>Very interesting thing that you're trying here, and I must commend you<br>\nfor your bravery to delve this deep into the internals of Isabelle all<br>\nby yourself!</p>\n<p>I recall you saying earlier this year that you might try to do this, but<br>\nI didn't expect you to actually go through with it. You must /really/<br>\nwant some of our precious Isabelle/HOL theorems very badly. ;)</p>\n<p>Manuel</p>\n<hr>\n<p>isabelle-dev mailing list<br>\n<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a><br>\n<a href=\"https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev\">https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev</a></p>",
        "id": 206353387,
        "sender_full_name": "Email Gateway",
        "timestamp": 1596902445
    },
    {
        "content": "<p>From: Kevin Kappelmann &lt;<a href=\"mailto:kevin.kappelmann@tum.de\">kevin.kappelmann@tum.de</a>&gt;<br>\nOn 08.08.20 17:52, Mario Carneiro wrote:&gt; ....</p>\n<blockquote>\n<p>Also, is there any way for me to do \"printf debugging\" in isabelle/ML?<br>\nThe focus on pure functional programming makes debugging especially<br>\ndifficult, but I'm sure I'm just missing the idioms for doing so<br>\n(understandably, I can't find any examples of debugging in the source).</p>\n</blockquote>\n<p>The ML-cookbook has a section (2.2) about debugging that might help you:<br>\n<a href=\"https://nms.kcl.ac.uk/christian.urban/Cookbook/\">https://nms.kcl.ac.uk/christian.urban/Cookbook/</a><br>\nSome  combinators (like \"tap\") might also speed up your development (see<br>\nsection 2.3).</p>\n<blockquote>\n<p>Currently I'm in the first stage, which involves modifying primarily<br>\nthm.ML and proofterm.ML to support \"proof traces\" instead of \"proof<br>\nterms\".</p>\n</blockquote>\n<p>Do you mind giving more details about what you mean by \"proof traces\" in<br>\nthis context?</p>\n<p>Best wishes,</p>\n<p>Kevin</p>\n<hr>\n<p>isabelle-dev mailing list<br>\n<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a><br>\n<a href=\"https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev\">https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev</a></p>",
        "id": 206354461,
        "sender_full_name": "Email Gateway",
        "timestamp": 1596904089
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThis means you are interfering with the ongoing Isabelle development process<br>\n(i.e. everything around repository versions, including administrative problems).</p>\n<p>Whatever you do with official Isabelle releases outside of the Isabelle<br>\ndevelopment process belongs to the isabelle-users mailing list. We don't have<br>\na separate \"kernel hacking mailing list\" (and don't need that).</p>\n<p>My own priority in answering threads is as follows (high to low):</p>\n<p>1. isabelle-dev<br>\n  2. isabelle-users<br>\n  3. isabelle-dev material that does not belong here</p>\n<p>Makarius</p>\n<hr>\n<p>isabelle-dev mailing list<br>\n<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a><br>\n<a href=\"https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev\">https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev</a></p>",
        "id": 206363496,
        "sender_full_name": "Email Gateway",
        "timestamp": 1596919680
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nStandard disclaimer: the cookbook is somewhat outdated and non-standard.<br>\nPeople who have learned special \"tricks\" over there might have to unlearn them<br>\nlater: there is a 50/50 chance that they are conceptually wrong, or just old.</p>\n<p>Answer to the original question: see the \"implementation\" manual section \"0.2.4<br>\nPrinting ML values\" (with examples).</p>\n<p>(These questions belong to the isabelle-users mailing list, where more people<br>\ncan benefit from the answers as well.)</p>\n<p>Makarius</p>\n<hr>\n<p>isabelle-dev mailing list<br>\n<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a><br>\n<a href=\"https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev\">https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev</a></p>",
        "id": 206363658,
        "sender_full_name": "Email Gateway",
        "timestamp": 1596920002
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI find this all very interesting, but it does not belong the the<br>\nadministrative isabelle-dev mailing list.</p>\n<p>Makarius</p>\n<hr>\n<p>isabelle-dev mailing list<br>\n<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a><br>\n<a href=\"https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev\">https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev</a></p>",
        "id": 206363716,
        "sender_full_name": "Email Gateway",
        "timestamp": 1596920135
    }
]