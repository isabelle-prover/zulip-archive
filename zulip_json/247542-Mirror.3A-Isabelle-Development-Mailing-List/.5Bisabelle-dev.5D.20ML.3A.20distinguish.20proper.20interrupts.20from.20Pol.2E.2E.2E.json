[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\n<strong>* ML </strong>*</p>\n<ul>\n<li>Proper interrupts (e.g. timeouts) are now distinguished from Poly/ML<br>\nruntime system breakdown, using Exn.Interrupt_Breakdown as quasi-error.<br>\nExn.is_interrupt covers all kinds of interrupts as before, but<br>\nExn.is_interrupt_proper and Exn.is_interrupt_breakdown are more<br>\nspecific. Subtle INCOMPATIBILITY in the semantics of ML evaluation.</li>\n</ul>\n<p>This refers to Isabelle/280a228dc2f1.</p>\n<p>Here is an artificial example:</p>\n<p>ML ‹fun bad () = (Isabelle_Thread.expose_interrupt (); 1 + bad ())›</p>\n<p>ML_val ‹Timeout.apply_physical (seconds 0.1) bad ()›  (<em>Timeout after 0.100s</em>)<br>\nML_val ‹Timeout.apply_physical (seconds 0.5) bad ()›  (<em>Timeout after 1.866s</em>)<br>\nML_val ‹Timeout.apply_physical (seconds 1.0) bad ()›  (<em>Timeout after 2.118s</em>)<br>\nML_val ‹Timeout.apply_physical (seconds 2.5) bad ()›  (*exception <br>\nInterrupt_Breakdown raised (line 77 of \"./basis/PolyMLException.sml\")*)<br>\nML_val ‹Timeout.apply_physical (seconds 2.5) bad ()›  (<em>Timeout after 4.546s</em>)<br>\nML_val ‹Timeout.apply_physical (seconds 2.5) bad ()›  (*exception <br>\nInterrupt_Breakdown raised (line 77 of \"./basis/PolyMLException.sml\")*)<br>\nML_val ‹Timeout.apply_physical (seconds 2.5) bad ()›  (*exception <br>\nInterrupt_Breakdown raised (line 77 of \"./basis/PolyMLException.sml\")*)</p>\n<p>This shows that the result is a bit non-deterministic. It remains to be seen <br>\nhow usable it is in realistic applications.</p>\n<p>Makarius</p>\n<hr>\n<p>isabelle-dev mailing list<br>\n<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a><br>\n<a href=\"https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev\">https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev</a></p>",
        "id": 396356962,
        "sender_full_name": "Email Gateway",
        "timestamp": 1697141211
    }
]