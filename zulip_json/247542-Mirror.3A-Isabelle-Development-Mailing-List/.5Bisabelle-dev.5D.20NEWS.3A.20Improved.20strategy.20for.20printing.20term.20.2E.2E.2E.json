[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\n<strong>* General </strong>*</p>\n<ul>\n<li>Printing term abbreviations now uses a different strategy: alternate<br>\ntop-down, bottom-up, top-down etc. until a normal form is reached. This<br>\nis more efficient than the former top-down strategy. It also conforms to<br>\nAST rewriting (command 'translations'). Rare INCOMPATIBILITY, slightly<br>\ndifferent results could be printed (often slightly \"better\" ones).</li>\n</ul>\n<p><strong>* ML </strong>*</p>\n<ul>\n<li>The new operation Pattern.rewrite_term_yoyo alternates top-down,<br>\nbottom-up, top-down etc. until a normal form is reached. This often<br>\nworks better than former rewrite_term_top --- that is still available,<br>\nbut has been renamed to rewrite_term_topdown to emphasize that something<br>\nnotable has changed here.</li>\n</ul>\n<p>This refers to Isabelle/bbed9f218158 and AFP/b347675c7769.</p>\n<p>I've brushed up the Ast.normalize implementation slightly: it stems from my <br>\nown Isabelle student project from 3 decades ago (under the informal title of <br>\n\"Rewriting Isabelle\"). The current version is here <br>\n<a href=\"https://isabelle-dev.sketis.net/source/isabelle/browse/default/src/Pure/Syntax/ast.ML;bbed9f218158$227\">https://isabelle-dev.sketis.net/source/isabelle/browse/default/src/Pure/Syntax/ast.ML;bbed9f218158$227</a></p>\n<p>The corresponding version of Pattern.rewrite_term_yoyo is here <br>\n<a href=\"https://isabelle-dev.sketis.net/source/isabelle/browse/default/src/Pure/more_pattern.ML;bbed9f218158$57\">https://isabelle-dev.sketis.net/source/isabelle/browse/default/src/Pure/more_pattern.ML;bbed9f218158$57</a> <br>\n--- I've changed the typical Berghofer style into more contemporary <br>\nHaftmann-Wenzel Isabelle/ML, with moderate use of combinators like \"perhaps\" <br>\nand \"perhaps_loop\".</p>\n<p>The performance of Ast.normalize is still pretty good, even with all these <br>\nencoded position constraints that we now have in input and output. In <br>\nperformance measurements of Syntax.read_term / string_of_term this part can be <br>\nusually ignored.</p>\n<p>The corresponding term normalization operations in Syntax.check_terms / <br>\nuncheck_terms are much slower, because so many other things are going on here: <br>\ne.g. somewhat slow type-inference in check_term. The term abbreviations in <br>\nuncheck_term are now reasonably fast.</p>\n<p>This is also due to another change is here: <br>\n<a href=\"https://isabelle-dev.sketis.net/rISABELLEb61abd1e5027\">https://isabelle-dev.sketis.net/rISABELLEb61abd1e5027</a> --- it amends earlier <br>\nattempts on performance tuning for terms with schematic variables, but that <br>\nhad bad consequences for the average situation.</p>\n<p>I've also revisited the Earley parser recently (for markup), and got the <br>\nimpression that it is rather fast --- after doing only sporadic measurements. <br>\nWe can usually ignore that part in the measurements.</p>\n<p>In conclusion, here is an example by Hanno Becker (18-Jul-2024 on isabelle-users):</p>\n<p>abbreviation ‹y x ≡ (x + x)›</p>\n<p>abbreviation (input) ‹pow3 f t ≡ (f (f (f t)))›<br>\nabbreviation (input) ‹id0 ≡ pow3 id›<br>\nabbreviation (input) ‹id1 ≡ pow3 id0›<br>\nabbreviation (input) ‹id2 ≡ pow3 id1›<br>\nabbreviation (input) ‹id3 ≡ pow3 id2›<br>\nabbreviation (input) ‹id4 ≡ pow3 id3›<br>\nabbreviation (input) ‹id5 ≡ pow3 id4›<br>\nabbreviation (input) ‹id6 ≡ pow3 id5›</p>\n<p>term ‹id6 ((0::nat) + 0)›</p>\n<p>That is now &lt; 0.5s on my 3.6 GHz Intel Linux box from 2017, instead of <br>\n\"seconds on Apple M1\". Inflating the term further towards id7 or id8 makes it <br>\n\"seconds\" again.</p>\n<p>If there are more concrete, real world examples, now would be an opportunity <br>\nto look at performance profiles.</p>\n<p>Makarius</p>\n<hr>\n<p>isabelle-dev mailing list<br>\n<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a><br>\n<a href=\"https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev\">https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev</a></p>",
        "id": 478802334,
        "sender_full_name": "Email Gateway",
        "timestamp": 1729805444
    }
]