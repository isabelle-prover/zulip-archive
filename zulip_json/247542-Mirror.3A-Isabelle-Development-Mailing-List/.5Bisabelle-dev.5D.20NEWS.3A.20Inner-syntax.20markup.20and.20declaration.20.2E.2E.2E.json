[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\n<strong>* General </strong>*</p>\n<ul>\n<li>\n<p>Command \"unbundle b\" and its variants like \"context includes b\" allow<br>\nan optional name prefix with the reserved word \"no\": \"unbundle no b\"<br>\netc. This inverts the polarity of bundled declarations like 'notation'<br>\nvs. 'no_notation', and thus avoids redundant bundle definitions like<br>\n\"foobar_syntax\" vs. \"no_foobar_syntax\", because \"no foobar_syntax\" may<br>\nbe used instead. Consequently, the syntax for multiple bundle names has<br>\nbeen changed slightly, demanding an explicit 'and' keyword. Minor<br>\nINCOMPATIBILITY.</p>\n</li>\n<li>\n<p>Command \"open_bundle b\" is like \"bundle b\" followed by \"unbundle b\",<br>\nso its declarations are applied immediately, but also named for later<br>\nre-use: \"unbundle no b\" etc.</p>\n</li>\n<li>\n<p>Blocks for pretty-printing (of types, terms, props etc.) now support<br>\nproperties \"open_block\" (bool) and \"notation\" (string as cartouche).<br>\nWhen \"open_block\" is enabled, the block has no impact on formatting, but<br>\nit may carry markup information via \"notation\". The latter uses formal<br>\nkinds (e.g. \"mixfix\", \"infix\", \"binder\") together with informal words to<br>\ndescribe the notation. This markup affects both input and output of<br>\ninner syntax --- it can be explored via mouse hovering in the Prover IDE<br>\nas usual (or programmatically by Isabelle/Scala tools). Markup for<br>\n\"infix\" and \"binder\" declarations are automatic, but general mixfix<br>\nforms require manual annotations in the theory library. Plenty of<br>\nexisting examples may be found in the Isabelle sources by searching for<br>\n\"notation=\" (without quotes and no extra space). Occasional<br>\nINCOMPATIBILITY for 'no_syntax' or 'no_notation' declarations in user<br>\napplications: the mixfix template needs to be adapted accordingly, but<br>\nit is often better to use \"unbundle no foobar_syntax\", as explained for<br>\nHOL libraries below.</p>\n</li>\n<li>\n<p>Inner syntax translations now support formal dependencies via commands<br>\n'syntax_types' or 'syntax_consts'. This is essentially an abstract<br>\nspecification of the effect of 'translations' (or translation functions<br>\nin ML). Most Isabelle theories have been adapted accordingly, such that<br>\nhyperlinks work properly e.g. for \"['a, 'b] ⇒ 'c\" or \"⟦A; B⟧ ⟹ C\" in<br>\nPure, and \"∀x∈A. B x\" or \"∃x∈A. B x\" in HOL.</p>\n</li>\n</ul>\n<p><strong>* HOL </strong>*</p>\n<ul>\n<li>\n<p>Various declaration bundles support adhoc modification of notation,<br>\nnotably like this:</p>\n<p>unbundle no list_syntax<br>\n unbundle no list_enumeration_syntax<br>\n unbundle no list_comprehension_syntax<br>\n unbundle no relcomp_syntax<br>\n unbundle no converse_syntax<br>\n unbundle no rtrancl_syntax<br>\n unbundle no trancl_syntax<br>\n unbundle no reflcl_syntax<br>\n unbundle no abs_syntax<br>\n unbundle no floor_ceiling_syntax<br>\n unbundle no uminus_syntax<br>\n unbundle no funcset_syntax</p>\n</li>\n</ul>\n<p>This is more robust than individual 'no_syntax' / 'no_notation'<br>\ncommands, which need to copy mixfix declarations from elsewhere and thus<br>\nbreak after changes in the library.</p>\n<ul>\n<li>\n<p>Theory \"HOL-Library.Datatype_Records\" provides bundle<br>\n\"datatype_record_syntax\" to exchange its alternative notation versus<br>\nregular \"record_syntax\". This also allows to swap record syntax later<br>\non, notably like this:</p>\n<p>unbundle no datatype_record_syntax</p>\n</li>\n</ul>\n<p>This refers to Isabelle/87f173836d56 and AFP/68a8276e79a0.</p>\n<p>Makarius</p>\n<hr>\n<p>isabelle-dev mailing list<br>\n<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a><br>\n<a href=\"https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev\">https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev</a></p>",
        "id": 476124429,
        "sender_full_name": "Email Gateway",
        "timestamp": 1728564118
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nAnd welcome for that reason. Thanks!<br>\nLarry</p>\n<blockquote>\n<p>On 10 Oct 2024, at 13:25, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n<p>This is more robust than individual 'no_syntax' / 'no_notation'<br>\ncommands, which need to copy mixfix declarations from elsewhere and thus<br>\nbreak after changes in the library.</p>\n</blockquote>\n<hr>\n<p>isabelle-dev mailing list<br>\n<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a><br>\n<a href=\"https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev\">https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev</a></p>",
        "id": 476125645,
        "sender_full_name": "Email Gateway",
        "timestamp": 1728564418
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 10/10/2024 14:25, Makarius wrote:</p>\n<blockquote>\n<ul>\n<li>Blocks for pretty-printing (of types, terms, props etc.) now support<br>\nproperties \"open_block\" (bool) and \"notation\" (string as cartouche).<br>\nWhen \"open_block\" is enabled, the block has no impact on formatting, but<br>\nit may carry markup information via \"notation\". The latter uses formal<br>\nkinds (e.g. \"mixfix\", \"infix\", \"binder\") together with informal words to<br>\ndescribe the notation. This markup affects both input and output of<br>\ninner syntax --- it can be explored via mouse hovering in the Prover IDE<br>\nas usual (or programmatically by Isabelle/Scala tools). Markup for<br>\n\"infix\" and \"binder\" declarations are automatic, but general mixfix<br>\nforms require manual annotations in the theory library. Plenty of<br>\nexisting examples may be found in the Isabelle sources by searching for<br>\n\"notation=\" (without quotes and no extra space). Occasional<br>\nINCOMPATIBILITY for 'no_syntax' or 'no_notation' declarations in user<br>\napplications: the mixfix template needs to be adapted accordingly, but<br>\nit is often better to use \"unbundle no foobar_syntax\", as explained for<br>\nHOL libraries below.</li>\n</ul>\n</blockquote>\n<p>Some more remarks on this. Markup for pretty-blocks (or quasi blocks via <br>\n\"open_block\") replaces the old TODO-item of \"markup of sub-expressions of <br>\ntypes/terms/blocks\". The latter turned out as too complex to be ever <br>\nimplemented, especially due to very ambitious syntax translations that have <br>\nemerged over the decades in applications.</p>\n<p>Doing it on the surface of the inner-syntax instead, merely required some <br>\n\"minor\" cleanup and manual annotations of free-form mixfix syntax (not infix <br>\nnor binder). I have mostly done it for the main Isabelle library theories <br>\nalready: HOL, HOL-Library, HOL-Algebra, HOL-Number_Theory, HOL-Analysis etc. <br>\nMore isolated applications are missing, as well as most of AFP.</p>\n<p>Some important inner-syntax idioms --- e.g. monad syntax and Hoare-logic <br>\nsyntax --- still require further refinement. Ultimately, there should be just <br>\none well-understood and uniform approach to it, not 3 different approaches to <br>\n7 different versions monads or Hoare logic.</p>\n<p>Makarius</p>\n<hr>\n<p>isabelle-dev mailing list<br>\n<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a><br>\n<a href=\"https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev\">https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev</a></p>",
        "id": 476133293,
        "sender_full_name": "Email Gateway",
        "timestamp": 1728566573
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 10/10/2024 14:25, Makarius wrote:</p>\n<blockquote>\n<p>This markup affects both input and output of<br>\ninner syntax --- it can be explored via mouse hovering in the Prover IDE<br>\nas usual (or programmatically by Isabelle/Scala tools).</p>\n</blockquote>\n<p>Further side-remarks:</p>\n<p>* \"output\" means that I have reworked to Pretty-printing engine quite a <br>\nbit, to be more robust and scalable for tons of markup (lets say many MB up to <br>\nfew GB).</p>\n<p>* \"input\" means that I have applied approx. 60 small changes to <br>\nsrc/Pure/Syntax/parser.ML in order to have markup treated properly within the <br>\nregular Earley algorithm. I have discovered and removed various oddities in <br>\nthe implementation, but did not understand all of its secrets. As usual, the <br>\nempiric test material was AFP (including performance).</p>\n<p>The markup for input was specifically requested by people from Linz, as a <br>\nprerequisite to make an \"accessible\" Prover IDE eventually. It means that <br>\nusers without eyesight can explore types/terms/props by a tactile interface. <br>\n(A few years ago VSCode had made quite some noise about \"accessibility\", but <br>\nthat has degraded a lot recently, so it is not an immediate answer to the <br>\nproblem.)</p>\n<p>Makarius</p>\n<hr>\n<p>isabelle-dev mailing list<br>\n<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a><br>\n<a href=\"https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev\">https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev</a></p>",
        "id": 476136473,
        "sender_full_name": "Email Gateway",
        "timestamp": 1728567429
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 10/10/2024 15:36, Makarius wrote:</p>\n<blockquote>\n<p>The markup for input was specifically requested by people from Linz, as a <br>\nprerequisite to make an \"accessible\" Prover IDE eventually. It means that <br>\nusers without eyesight can explore types/terms/props by a tactile interface. <br>\n(A few years ago VSCode had made quite some noise about \"accessibility\", but <br>\nthat has degraded a lot recently, so it is not an immediate answer to the <br>\nproblem.)</p>\n</blockquote>\n<p>Side-remark on this side-remark.</p>\n<p>From what I've learned in Linz 1 year ago, the main Open-Source product in <br>\nthis area is NVDA <a href=\"https://www.nvaccess.org\">https://www.nvaccess.org</a> (for Windows only).</p>\n<p>The editor, whatever it is, needs to connect to that. There is even an <br>\nofficial accessibility API Java, but I don't know if and how that works.</p>\n<p>Makarius</p>\n<hr>\n<p>isabelle-dev mailing list<br>\n<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a><br>\n<a href=\"https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev\">https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev</a></p>",
        "id": 476149439,
        "sender_full_name": "Email Gateway",
        "timestamp": 1728570777
    }
]