[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\n<strong>* General </strong>*</p>\n<ul>\n<li>Remote provers from SystemOnTPTP (notably for Sledgehammer) are now<br>\nmanaged via Isabelle/Scala instead of perl; the dependency on<br>\nlibwww-perl has been eliminated (notably on Linux). Rare<br>\nINCOMPATIBILITY: HTTP proxy configuration now works via JVM properties<br>\n<a href=\"https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/doc-files/net-properties.html\">https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/doc-files/net-properties.html</a></li>\n</ul>\n<p>This refers to Isabelle/e92f2e44e4d8.</p>\n<p>Example invocation with remote provers:</p>\n<p>sledgehammer [provers = remote_e remote_alt_ergo remote_zipperposition<br>\nremote_vampire]</p>\n<p>Note: remote_vampire is actually broken right now, because SystemOnTPTP has<br>\nchanged its repertoire of Vampire versions. (Remote services are sometimes<br>\nconvenient for experimentation, but a properly integrated local installation<br>\nis more reliable.)</p>\n<p>This is how to print the list of systems in Isabelle/ML:</p>\n<p>ML_command ‹SystemOnTPTP.list_systems () |&gt; #systems |&gt; cat_lines |&gt; writeln›</p>\n<p>And here is the actual implementation in Isabelle/Scala (using HTTP POST<br>\nrequests):</p>\n<p><a href=\"https://isabelle-dev.sketis.net/source/isabelle/browse/default/src/HOL/Tools/ATP/system_on_tptp.scala;e92f2e44e4d8\">https://isabelle-dev.sketis.net/source/isabelle/browse/default/src/HOL/Tools/ATP/system_on_tptp.scala;e92f2e44e4d8</a></p>\n<p>Makarius</p>\n<hr>\n<p>isabelle-dev mailing list<br>\n<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a><br>\n<a href=\"https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev\">https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev</a></p>",
        "id": 230268836,
        "sender_full_name": "Email Gateway",
        "timestamp": 1615756799
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nFor completeness, this is the underlying HTTP module in Isabelle/Scala:</p>\n<p><a href=\"https://isabelle-dev.sketis.net/source/isabelle/browse/default/src/Pure/General/http.scala;69d449f0ca04\">https://isabelle-dev.sketis.net/source/isabelle/browse/default/src/Pure/General/http.scala;69d449f0ca04</a></p>\n<p>More than 10 years ago, I was promoting the use of perl as \"universal system<br>\nglue\". Now we can do it more concisely in Isabelle/Scala, without external<br>\ndependencies, and with fine points adjusted to Isabelle standards. The above<br>\nis &lt; 10Kb for client and server, which is used for isabelle.preview in<br>\nIsabelle/jEdit.</p>\n<p>It is still too early to ask the canonical question about \"any remaining uses<br>\nof perl\": there are still quite a lot in small scripts that are not<br>\nincorporated in Isabelle/Scala yet, e.g. \"isabelle latex\".</p>\n<p>Makarius</p>\n<hr>\n<p>isabelle-dev mailing list<br>\n<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a><br>\n<a href=\"https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev\">https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev</a></p>",
        "id": 230270214,
        "sender_full_name": "Email Gateway",
        "timestamp": 1615758263
    }
]