[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\n<strong>* ML </strong>*</p>\n<ul>\n<li>\n<p>ML structures TFrees, TVars, Frees, Vars, Names provide scalable<br>\noperations to accumulate items from types and terms, using a fast<br>\nsyntactic order. The original order of occurrences may be recovered as<br>\nwell, e.g. via TFrees.list_set.</p>\n</li>\n<li>\n<p>Thm.instantiate, Thm.generalize and related operations require<br>\nscalable datastructures from structure TVars, Vars, Names etc.<br>\nINCOMPATIBILITY: e.g. use TVars.empty and TVars.make for immediate<br>\nadoption; better use TVars.add, TVars.add_tfrees etc. for scalable<br>\naccumulation of items.</p>\n</li>\n</ul>\n<p>This refers to Isabelle/4974c3697fee.</p>\n<p>Many years ago, I made measurements that showed that the naive association<br>\nlists were actually sufficient for most applications. Now I did change my mind<br>\nand made it more scalable: the impact is hardly measurable, apart from<br>\n<a href=\"https://isabelle.sketis.net/devel/build_status/macOS_11_Big_Sur_4_threads/index.html#session_HOL-Record_Benchmark\">https://isabelle.sketis.net/devel/build_status/macOS_11_Big_Sur_4_threads/index.html#session_HOL-Record_Benchmark</a><br>\nwhere there is a clear reduction of runtime.</p>\n<p>That example also shows that more heap space is required: 2-3 trees require<br>\nmore overhead than plain list.</p>\n<p>Right now I am inclined to leave this new status-quo, unless someone comes<br>\nwith concrete applications that require further tuning (e.g. a different<br>\nimplementation behind the now abstract data types of Vars.table etc.)</p>\n<p>Makarius</p>\n<hr>\n<p>isabelle-dev mailing list<br>\n<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a><br>\n<a href=\"https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev\">https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev</a></p>",
        "id": 254346291,
        "sender_full_name": "Email Gateway",
        "timestamp": 1632306741
    }
]