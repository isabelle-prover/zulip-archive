[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\n<strong>* General </strong>*</p>\n<ul>\n<li>Inner syntax translations now support formal dependencies via commands<br>\n'syntax_types' or 'syntax_consts'. This is essentially an abstract<br>\nspecification of the effect of 'translations' (or translation functions<br>\nin ML). Most Isabelle theories have been adapted accordingly, such that<br>\nhyperlinks work properly e.g. for \"['a, 'b] ⇒ 'c\" or \"⟦A; B⟧ ⟹ C\" in<br>\nPure, and \"∀x∈A. B x\" or \"∃x∈A. B x\" in HOL.</li>\n</ul>\n<p>This refers to Isabelle/8e7bd0566759.</p>\n<p>The key change is Isabelle/26ecbac09941, but it only turned out that simple <br>\ndue to many \"changed for change elimination\" before it.</p>\n<p>A few more details are still missing, e.g. type constraints for mixfix delimiters.</p>\n<p>Makarius</p>\n<hr>\n<p>isabelle-dev mailing list<br>\n<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a><br>\n<a href=\"https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev\">https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev</a></p>",
        "id": 477303305,
        "sender_full_name": "Email Gateway",
        "timestamp": 1729114013
    },
    {
        "content": "<p>From: Norbert Schirmer &lt;<a href=\"mailto:nschirmer@apple.com\">nschirmer@apple.com</a>&gt;<br>\nHi Makarius,</p>\n<p>Thanks a lot for the work.</p>\n<blockquote>\n<p><strong>* General </strong>*</p>\n<ul>\n<li>Inner syntax translations now support formal dependencies via commands<br>\n'syntax_types' or 'syntax_consts'. This is essentially an abstract<br>\nspecification of the effect of 'translations' (or translation functions<br>\nin ML). Most Isabelle theories have been adapted accordingly, such that<br>\nhyperlinks work properly e.g. for \"['a, 'b] ⇒ 'c\" or \"⟦A; B⟧ ⟹ C\" in<br>\nPure, and \"∀x∈A. B x\" or \"∃x∈A. B x\" in HOL.</li>\n</ul>\n<p>This refers to Isabelle/8e7bd0566759.</p>\n<p>I guess you wanted to mention this News entry:</p>\n</blockquote>\n<ul>\n<li>Inner syntax printing now supports type constraints for constants:<br>\nthis is guarded by the configuration options \"show_consts_markup\"<br>\n(default true) and \"show_markup\" (default true for PIDE interaction).<br>\nAst translation rules (command 'translations') and mixfix notation work<br>\nwith or without such extra constraints, but ML translation functions<br>\n(command 'print_ast_translation') need may need to be changed slightly.<br>\nRare INCOMPATIBILITY. The Prover IDE displays type constraints for<br>\nconstants as for variables, e.g. via C-mouse hovering.</li>\n</ul>\n<blockquote>\n<p>The key change is Isabelle/26ecbac09941, but it only turned out that simple due to many \"changed for change elimination\" before it.</p>\n<p>A few more details are still missing, e.g. type constraints for mixfix delimiters.</p>\n<p>Looking forward to it.</p>\n</blockquote>\n<p>Regards,<br>\nNorbert</p>\n<p>--</p>\n<p>Norbert Schirmer (<a href=\"mailto:nschirmer@apple.com\">nschirmer@apple.com</a>)<br>\n SEG Formal Verification</p>",
        "id": 477395298,
        "sender_full_name": "Email Gateway",
        "timestamp": 1729156432
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 17/10/2024 11:12, Norbert Schirmer wrote:</p>\n<blockquote>\n<p>I guess you wanted to mention this News entry:</p>\n<ul>\n<li>Inner syntax printing now supports type constraints for constants:<br>\nthis is guarded by the configuration options \"show_consts_markup\"<br>\n(default true) and \"show_markup\" (default true for PIDE interaction).<br>\nAst translation rules (command 'translations') and mixfix notation work<br>\nwith or without such extra constraints, but ML translation functions<br>\n(command 'print_ast_translation') need may need to be changed slightly.<br>\nRare INCOMPATIBILITY. The Prover IDE displays type constraints for<br>\nconstants as for variables, e.g. via C-mouse hovering.</li>\n</ul>\n</blockquote>\n<p>You are right. Here is an updated version:</p>\n<ul>\n<li>Inner syntax printing now supports type constraints for constants,<br>\noptionally with mixfix syntax (infix, binder etc.). This is guarded by<br>\nthe configuration options \"show_consts_markup\" (default true) and<br>\n\"show_markup\" (default true for PIDE interaction). The Prover IDE<br>\ndisplays type constraints as usual via C-mouse hovering. Ast translation<br>\nrules (command 'translations') already work with extra type constraints,<br>\nbut the result omits the type of a matched constant. ML translation<br>\nfunctions (command 'print_ast_translation') based on Ast.unfold_ast etc.<br>\nwork in the same manner, but more complex translations may require<br>\nmanual changes: rare INCOMPATIBILITY.</li>\n</ul>\n<p>See Isabelle/0e27325da568.</p>\n<p>After so many renovations of the inner-syntax engine, old problems get <br>\nactually solved, although it has required some decades.</p>\n<p>Now the situation is again asymmetric, because mixfix consts don't get type <br>\nconstraints on input.</p>\n<p>Makarius</p>\n<hr>\n<p>isabelle-dev mailing list<br>\n<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a><br>\n<a href=\"https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev\">https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev</a></p>",
        "id": 477733482,
        "sender_full_name": "Email Gateway",
        "timestamp": 1729285002
    }
]