[
    {
        "content": "<p>From: Martin Desharnais &lt;<a href=\"mailto:martin.desharnais@posteo.de\">martin.desharnais@posteo.de</a>&gt;<br>\nDear Makarius, dear Isabelle developers,</p>\n<p>the Isabelle font contains a glyph for the unicode character \"≈\" (U+2248 <br>\nAlmost Equal To) usable through the symbol \\&lt;approx&gt;.</p>\n<p>I propose to add a glyph for its negation \"≉\" (U+2249 Not Almost Equal <br>\nTo). For the corresponding symbol name, I propose \\&lt;notapprox&gt; similarly <br>\nto how we have \\&lt;noteq&gt; and \\&lt;notin&gt;.</p>\n<p>Note that I cannot write ¬(x≈y) instead, as my use case is to define <br>\nabbreviations for positive and negative literals in a formalization of <br>\nfirst-order logic with equality.</p>\n<p>datatype 'a literal = Pos 'a | Neg 'a</p>\n<p>abbreviation pos_eq (infix \"≈\" 50) where<br>\n   \"t1 ≈ t2 ≡ Pos (Upair t1 t2)\"</p>\n<p>abbreviation neg_eq (infix \"≉\" 50) where<br>\n   \"t1 ≉ t2 ≡ Neg (Upair t1 t2)\"</p>\n<p>Regards,<br>\nMartin Desharnais</p>\n<hr>\n<p>isabelle-dev mailing list<br>\n<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a><br>\n<a href=\"https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev\">https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev</a></p>",
        "id": 361820301,
        "sender_full_name": "Email Gateway",
        "timestamp": 1685307656
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nLooks reasonable to me!</p>\n<p>Larry</p>\n<hr>\n<p>isabelle-dev mailing list<br>\n<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a><br>\n<a href=\"https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev\">https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev</a></p>",
        "id": 361922995,
        "sender_full_name": "Email Gateway",
        "timestamp": 1685359285
    }
]