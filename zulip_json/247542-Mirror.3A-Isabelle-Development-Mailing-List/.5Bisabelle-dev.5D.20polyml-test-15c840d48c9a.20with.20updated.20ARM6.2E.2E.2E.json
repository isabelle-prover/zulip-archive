[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nIn Isabelle/68ffcf5cc94b we now have Poly/ML with updated ARM64 <br>\ncode-generator, see also the announcement by David Matthews on 16-Jan-2022 <br>\n(<a href=\"http://lists.inf.ed.ac.uk/pipermail/polyml/2022-January/002489.html\">http://lists.inf.ed.ac.uk/pipermail/polyml/2022-January/002489.html</a>):</p>\n<p>\"\"\"<br>\nThe long-promised update to the ARM code-generator is now in Git master. This <br>\nbuilds on the old version by adding the register allocation strategy borrowed <br>\nfrom the X86 version as well as low-level peephole optimisation.  On my Apple <br>\nM1 processor it now seems to be faster than X86 code with Rosetta.</p>\n<p>There are still some improvements to be made, particularly with floating <br>\npoint, but no major changes are anticipated.  It includes one optimisation <br>\nthat isn't present on the X86 at the moment: small tuples are returned in <br>\nregisters rather than on the stack.</p>\n<p>Please try it and let me know how it goes.<br>\n\"\"\"</p>\n<p>So far it looks pretty good, but we don't have systematic test and <br>\nmeasurements so far.</p>\n<p>(Side-remark: TUM appears to have problems with lxbroy10 and lxcisa0. I have <br>\nsimply switched over to <a href=\"http://isabelle.in.tum.de\">isabelle.in.tum.de</a> as SSH login machine.)</p>\n<p>Makarius</p>\n<hr>\n<p>isabelle-dev mailing list<br>\n<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a><br>\n<a href=\"https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev\">https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev</a></p>",
        "id": 269176077,
        "sender_full_name": "Email Gateway",
        "timestamp": 1643060050
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nHere are some measurements on macOS Big Sur for Isabelle/7483347efb4c, with <br>\nthe following build parameters:</p>\n<p>ISABELLE_TOOL_JAVA_OPTIONS=\"-Djava.awt.headless=true -Xms512m -Xmx4g -Xss16m\"<br>\n   ISABELLE_BUILD_OPTIONS=\"threads=4\"</p>\n<p>ML_OPTIONS=\"--minheap 1500 --maxheap=10g\"</p>\n<ul>\n<li>MacMini8,1 Intel x86_64_32-darwin:</li>\n</ul>\n<p>Finished HOL (0:03:08 elapsed time, 0:09:11 cpu time, factor 2.93)<br>\nFinished HOL-Library (0:02:49 elapsed time, 0:09:04 cpu time, factor 3.21)<br>\nFinished HOL-Analysis (0:05:25 elapsed time, 0:19:00 cpu time, factor 3.50)<br>\nFinished HOL-Proofs (0:05:41 elapsed time, 0:10:09 cpu time, factor 1.79)<br>\nFinished HOL-Decision_Procs (0:03:21 elapsed time, 0:11:21 cpu time, factor 3.39)<br>\nFinished HOL-Data_Structures (0:04:02 elapsed time, 0:14:37 cpu time, factor 3.62)<br>\nFinished HOL-Nominal-Examples (0:03:14 elapsed time, 0:11:54 cpu time, factor <br>\n3.68)<br>\nFinished HOL-ex (0:03:11 elapsed time, 0:11:08 cpu time, factor 3.49)</p>\n<ul>\n<li>MacMini9,1 Apple M1 x86_64_32-darwin (Rosetta 2):</li>\n</ul>\n<p>Finished HOL (0:02:47 elapsed time, 0:07:59 cpu time, factor 2.87)<br>\nFinished HOL-Library (0:02:24 elapsed time, 0:07:39 cpu time, factor 3.18)<br>\nFinished HOL-Analysis (0:05:16 elapsed time, 0:17:12 cpu time, factor 3.27)<br>\nFinished HOL-Proofs (0:05:37 elapsed time, 0:09:47 cpu time, factor 1.74)<br>\nFinished HOL-Decision_Procs (0:03:50 elapsed time, 0:11:17 cpu time, factor 2.95)<br>\nFinished HOL-Data_Structures (0:03:22 elapsed time, 0:12:16 cpu time, factor 3.63)<br>\nFinished HOL-Nominal-Examples (0:02:59 elapsed time, 0:10:18 cpu time, factor <br>\n3.45)<br>\nFinished HOL-ex (0:02:43 elapsed time, 0:09:29 cpu time, factor 3.49)</p>\n<ul>\n<li>MacMini9,1 Apple M1 arm64_32-darwin:</li>\n</ul>\n<p>Finished HOL (0:02:18 elapsed time, 0:06:40 cpu time, factor 2.88)<br>\nFinished HOL-Library (0:02:04 elapsed time, 0:06:40 cpu time, factor 3.21)<br>\nFinished HOL-Analysis (0:04:43 elapsed time, 0:15:24 cpu time, factor 3.26)<br>\nFinished HOL-Proofs (0:04:09 elapsed time, 0:07:25 cpu time, factor 1.79)<br>\nFinished HOL-Decision_Procs (0:03:01 elapsed time, 0:09:08 cpu time, factor 3.03)<br>\nFinished HOL-Data_Structures (0:02:52 elapsed time, 0:10:30 cpu time, factor 3.66)<br>\nFinished HOL-Nominal-Examples (0:02:30 elapsed time, 0:08:58 cpu time, factor <br>\n3.58)<br>\nFinished HOL-ex (0:02:28 elapsed time, 0:08:32 cpu time, factor 3.45)</p>\n<p>Remark on the hardware: MacMini8,1 has 6 cores, MacMini9,1 has 8 cores (4 <br>\nsmall, 4 big). The build option threads=4 unifies this to some extent, for <br>\nbetter comparison.</p>\n<p>Conclusion: the new Apple hardware, Rosetta 2, and the new Poly/ML ARM64 <br>\ncode-generator are all excellent.</p>\n<p>Makarius</p>\n<hr>\n<p>isabelle-dev mailing list<br>\n<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a><br>\n<a href=\"https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev\">https://mailman46.in.tum.de/mailman/listinfo/isabelle-dev</a></p>",
        "id": 269775369,
        "sender_full_name": "Email Gateway",
        "timestamp": 1643392545
    }
]