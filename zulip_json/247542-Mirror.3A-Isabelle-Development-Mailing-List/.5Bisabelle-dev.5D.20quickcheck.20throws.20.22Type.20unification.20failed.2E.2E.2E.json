[
    {
        "content": "<p>From: Fabian Huch &lt;<a href=\"mailto:huch@in.tum.de\">huch@in.tum.de</a>&gt;<br>\nIn the following minimal example:</p>\n<p>datatype t = A | B \"t × t\"</p>\n<p>fun f :: \"t ⇒ bool\" where<br>\n   \"f A ⟷ True\"<br>\n| \"f _ ⟷ False\"</p>\n<p>quickcheck throws an error if you invoke it (both Isabelle2022 and <br>\nlatest devel):</p>\n<p>lemma \"f x = True\" quickcheck</p>\n<p>Does anyone have an idea what's going on? The error is as follows:</p>\n<p>Type unification failed: No type arity t :: full_exhaustive</p>\n<p>Type error in application: incompatible operand type</p>\n<p>Operator:  full_exhaustive_class.full_exhaustive :: (??'a × (unit ⇒ <br>\nterm) ⇒ (bool × term list) option) ⇒ natural ⇒ (bool × term list) option<br>\nOperand:<br>\n   λ(t, t_t__).<br>\n      Quickcheck_Random.catch_match<br>\n       (if equal_bool_inst.equal_bool (f t) True then None<br>\n        else Some<br>\n              (True,<br>\n               [t_t__ (),<br>\n                Quickcheck_Random.catch_match <br>\n(term_of_bool_inst.term_of_bool True)<br>\n                 (Code_Evaluation.Const<br>\n                   (String.Literal True False False False True False True<br>\n                     (String.Literal True False True False True True True<br>\n                       (String.Literal True False False True False True True<br>\n                         (String.Literal True True False False False <br>\nTrue True<br>\n                           (String.Literal True True False True False <br>\nTrue True<br>\n                             (String.Literal True True False False False <br>\nTrue True<br>\n                               (String.Literal False False False True <br>\nFalse True True<br>\n                                 (String.Literal True False True False <br>\nFalse True True<br>\n                                   (String.Literal True True False False <br>\nFalse True True<br>\n                                     (String.Literal True True False <br>\nTrue False True True<br>\n                                       (String.Literal True True True <br>\nTrue True False True<br>\n                                         (String.Literal True False True <br>\nFalse False False True<br>\n                                           (String.Literal False False <br>\nFalse True True True True<br>\n                                             (String.Literal False False <br>\nFalse True False True True<br>\n                                               (String.Literal True <br>\nFalse False False False True True<br>\n                                                 (String.Literal True <br>\nFalse True False True True True<br>\n                                                   (String.Literal True <br>\nTrue False False True True True<br>\n(String.Literal False False True False True True True<br>\n(String.Literal True False False True False True True<br>\n(String.Literal False True True False True True True<br>\n(String.Literal True False True False False True True<br>\n(String.Literal False True True True False True False<br>\n(String.Literal True False True False True True True<br>\n(String.Literal False True True True False True True<br>\n(String.Literal True True False True False True True<br>\n(String.Literal False True True True False True True<br>\n(String.Literal True True True True False True True<br>\n(String.Literal True True True False True True True<br>\n(String.Literal False True True True False True True <br>\nzero_literal_inst.zero_literal)))))))))))))))))))))))))))))<br>\n                   (typerep.Typerep<br>\n                     (String.Literal False False False True False False True<br>\n                       (String.Literal True True True True False False True<br>\n                         (String.Literal False False True True False <br>\nFalse True<br>\n                           (String.Literal False True True True False <br>\nTrue False<br>\n                             (String.Literal False True False False <br>\nFalse True True<br>\n                               (String.Literal True True True True False <br>\nTrue True<br>\n                                 (String.Literal True True True True <br>\nFalse True True (String.Literal False False True True False True True <br>\nzero_literal_inst.zero_literal))))))))<br>\n                     [])),<br>\n                Quickcheck_Random.catch_match <br>\n(term_of_bool_inst.term_of_bool (f t))<br>\n                 (Code_Evaluation.Const<br>\n                   (String.Literal True False False False True False True<br>\n                     (String.Literal True False True False True True True<br>\n                       (String.Literal True False False True False True True<br>\n                         (String.Literal True True False False False <br>\nTrue True<br>\n                           (String.Literal True True False True False <br>\nTrue True<br>\n                             (String.Literal True True False False False <br>\nTrue True<br>\n                               (String.Literal False False False True <br>\nFalse True True<br>\n                                 (String.Literal True False True False <br>\nFalse True True<br>\n                                   (String.Literal True True False False <br>\nFalse True True<br>\n                                     (String.Literal True True False <br>\nTrue False True True<br>\n                                       (String.Literal True True True <br>\nTrue True False True<br>\n                                         (String.Literal True False True <br>\nFalse False False True<br>\n                                           (String.Literal False False <br>\nFalse True True True True<br>\n                                             (String.Literal False False <br>\nFalse True False True True<br>\n                                               (String.Literal True <br>\nFalse False False False True True<br>\n                                                 (String.Literal True <br>\nFalse True False True True True<br>\n                                                   (String.Literal True <br>\nTrue False False True True True<br>\n(String.Literal False False True False True True True<br>\n(String.Literal True False False True False True True<br>\n(String.Literal False True True False True True True<br>\n(String.Literal True False True False False True True<br>\n(String.Literal False True True True False True False<br>\n(String.Literal True False True False True True True<br>\n(String.Literal False True True True False True True<br>\n(String.Literal True True False True False True True<br>\n(String.Literal False True True True False True True<br>\n(String.Literal True True True True False True True<br>\n(String.Literal True True True False True True True<br>\n(String.Literal False True True True False True True <br>\nzero_literal_inst.zero_literal)))))))))))))))))))))))))))))<br>\n                   (typerep.Typerep<br>\n                     (String.Literal False False False True False False True<br>\n                       (String.Literal True True True True False False True<br>\n                         (String.Literal False False True True False <br>\nFalse True<br>\n                           (String.Literal False True True True False <br>\nTrue False<br>\n                             (String.Literal False True False False <br>\nFalse True True<br>\n                               (String.Literal True True True True False <br>\nTrue True<br>\n                                 (String.Literal True True True True <br>\nFalse True True (String.Literal False False True True False True True <br>\nzero_literal_inst.zero_literal))))))))<br>\n                     []))]))<br>\n       (if genuine_only__ then None<br>\n        else Some<br>\n              (False,<br>\n               [t_t__ (),<br>\n                Quickcheck_Random.catch_match <br>\n(term_of_bool_inst.term_of_bool True)<br>\n                 (Code_Evaluation.Const<br>\n                   (String.Literal True False False False True False True<br>\n                     (String.Literal True False True False True True True<br>\n                       (String.Literal True False False True False True True<br>\n                         (String.Literal True True False False False <br>\nTrue True<br>\n                           (String.Literal True True False True False <br>\nTrue True<br>\n                             (String.Literal True True False False False <br>\nTrue True<br>\n                               (String.Literal False False False True <br>\nFalse True True<br>\n                                 (String.Literal True False True False <br>\nFalse True True<br>\n                                   (String.Literal True True False False <br>\nFalse True True<br>\n                                     (String.Literal True True False <br>\nTrue False True True<br>\n                                       (String.Literal True True True <br>\nTrue True False True<br>\n                                         (String.Literal True False True <br>\nFalse False False True<br>\n                                           (String.Literal False False <br>\nFalse True True True True<br>\n                                             (String.Literal False False <br>\nFalse True False True True<br>\n                                               (String.Literal True <br>\nFalse False False False True True<br>\n                                                 (String.Literal True <br>\nFalse True False True True True<br>\n                                                   (String.Literal True <br>\nTrue False False True True True<br>\n(String.Literal False False True False True True True<br>\n(String.Literal True False False True False True True<br>\n(String.Literal False True True False True True True<br>\n(String.Literal True False True False False True True<br>\n(String.Literal False True True True False True False<br>\n(String.Literal True False True False True True True<br>\n(String.Literal False True True True False True True<br>\n(String.Literal True True False True False True True<br>\n(String.Literal False True True True False True True<br>\n(String.Literal True True True True False True True<br>\n(String.Literal True True True False True True True<br>\n(String.Literal False True True True False True True <br>\nzero_literal_inst.zero_literal)))))))))))))))))))))))))))))<br>\n                   (typerep.Typerep<br>\n                     (String.Literal False False False True False False True<br>\n                       (String.Literal True True True True False False True<br>\n                         (String.Literal False False True True False <br>\nFalse True<br>\n                           (String.Literal False True True True False <br>\nTrue False<br>\n                             (String.Literal False True False False <br>\nFalse True True<br>\n                               (String.Literal True True True True False <br>\nTrue True<br>\n                                 (String.Literal True True True Tru<br>\n[message truncated]</p>",
        "id": 369647344,
        "sender_full_name": "Email Gateway",
        "timestamp": 1687775777
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@ifi.lmu.de\">jasmin.blanchette@ifi.lmu.de</a>&gt;<br>\nHallo Fabian,</p>\n<p>This is the issue that was discussed here:</p>\n<p><a href=\"https://lists.cam.ac.uk/sympa/arc/cl-isabelle-users/2022-03/msg00005.html\">https://lists.cam.ac.uk/sympa/arc/cl-isabelle-users/2022-03/msg00005.html</a></p>\n<p>In short, I broke this in 2014 when moving to the new datatypes and it's not easy to repair. I doubt I will ever find the time to do it myself -- it requires some concentration. If anybody is interested in repairing this, I would be more than happy to supervise them.</p>\n<p>Best,<br>\nJasmin</p>",
        "id": 369652673,
        "sender_full_name": "Email Gateway",
        "timestamp": 1687776750
    }
]