[
    {
        "content": "<p>From: 伊藤洋介 &lt;<a href=\"mailto:glacier345@gmail.com\">glacier345@gmail.com</a>&gt;<br>\nDear Isabelle developers,</p>\n<p>There is the lemma Lim_right_bound in HOL/Analysis/Elementary_Topology.thy:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">Lim_right_bound</span><span class=\"o\">:</span>\n<span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'a :: {linorder_topology, conditionally_complete_linorder,</span>\n<span class=\"s\">no_top} </span><span class=\"ss\">\\&lt;Rightarrow&gt;</span>\n<span class=\"s\">    'b::{linorder_topology, conditionally_complete_linorder}\"</span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"n\">mono</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"ss\">\\&lt;And&gt;</span><span class=\"s\">a b. a </span><span class=\"ss\">\\&lt;in&gt;</span><span class=\"s\"> I </span><span class=\"ss\">\\&lt;Longrightarrow&gt;</span><span class=\"s\"> b </span><span class=\"ss\">\\&lt;in&gt;</span><span class=\"s\"> I</span>\n<span class=\"ss\">\\&lt;Longrightarrow&gt;</span><span class=\"s\"> x &lt; a </span><span class=\"ss\">\\&lt;Longrightarrow&gt;</span><span class=\"s\"> a </span><span class=\"ss\">\\&lt;le&gt;</span><span class=\"s\"> b </span><span class=\"ss\">\\&lt;Longrightarrow&gt;</span><span class=\"s\"> f a</span>\n<span class=\"ss\">\\&lt;le&gt;</span><span class=\"s\"> f b\"</span>\n<span class=\"w\">    </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"n\">bnd</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"ss\">\\&lt;And&gt;</span><span class=\"s\">a. a </span><span class=\"ss\">\\&lt;in&gt;</span><span class=\"s\"> I </span><span class=\"ss\">\\&lt;Longrightarrow&gt;</span><span class=\"s\"> x &lt; a </span><span class=\"ss\">\\&lt;Longrightarrow&gt;</span>\n<span class=\"s\">K </span><span class=\"ss\">\\&lt;le&gt;</span><span class=\"s\"> f a\"</span>\n<span class=\"w\">  </span><span class=\"kp\">shows</span><span class=\"w\"> </span><span class=\"s\">\"(f </span><span class=\"ss\">\\&lt;longlongrightarrow&gt;</span><span class=\"s\"> Inf (f ` ({x&lt;..} </span><span class=\"ss\">\\&lt;inter&gt;</span><span class=\"s\"> I))) (at x</span>\n<span class=\"s\">within ({x&lt;..} </span><span class=\"ss\">\\&lt;inter&gt;</span><span class=\"s\"> I))\"</span>\n</code></pre></div>\n<p>However, the dual of this lemma (on the left-hand limit) is missing.<br>\nCould you consider adding the following code to Elementary_Topology.thy?<br>\nIf there is an appropriate way to suggest improvements, please let me know.</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">Lim_left_bound</span><span class=\"o\">:</span>\n<span class=\"w\">  </span><span class=\"kp\">fixes</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"'a :: {linorder_topology, conditionally_complete_linorder,</span>\n<span class=\"s\">no_bot} </span><span class=\"ss\">\\&lt;Rightarrow&gt;</span>\n<span class=\"s\">    'b :: {linorder_topology, conditionally_complete_linorder}\"</span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"n\">mono</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"ss\">\\&lt;And&gt;</span><span class=\"s\">a b. a </span><span class=\"ss\">\\&lt;in&gt;</span><span class=\"s\"> I </span><span class=\"ss\">\\&lt;Longrightarrow&gt;</span><span class=\"s\"> b </span><span class=\"ss\">\\&lt;in&gt;</span><span class=\"s\"> I</span>\n<span class=\"ss\">\\&lt;Longrightarrow&gt;</span><span class=\"s\"> b &lt; x </span><span class=\"ss\">\\&lt;Longrightarrow&gt;</span><span class=\"s\"> a </span><span class=\"ss\">\\&lt;le&gt;</span><span class=\"s\"> b </span><span class=\"ss\">\\&lt;Longrightarrow&gt;</span><span class=\"s\"> f a</span>\n<span class=\"ss\">\\&lt;le&gt;</span><span class=\"s\"> f b\"</span>\n<span class=\"w\">    </span><span class=\"kp\">and</span><span class=\"w\"> </span><span class=\"n\">bnd</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"ss\">\\&lt;And&gt;</span><span class=\"s\">b. b </span><span class=\"ss\">\\&lt;in&gt;</span><span class=\"s\"> I </span><span class=\"ss\">\\&lt;Longrightarrow&gt;</span><span class=\"s\"> b &lt; x </span><span class=\"ss\">\\&lt;Longrightarrow&gt;</span>\n<span class=\"s\">f b </span><span class=\"ss\">\\&lt;le&gt;</span><span class=\"s\"> K\"</span>\n<span class=\"w\">  </span><span class=\"kp\">shows</span><span class=\"w\"> </span><span class=\"s\">\"(f </span><span class=\"ss\">\\&lt;longlongrightarrow&gt;</span><span class=\"s\"> Sup (f ` ({..&lt;x} </span><span class=\"ss\">\\&lt;inter&gt;</span><span class=\"s\"> I))) (at x</span>\n<span class=\"s\">within ({..&lt;x} </span><span class=\"ss\">\\&lt;inter&gt;</span><span class=\"s\"> I))\"</span>\n<span class=\"k\">proof</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">cases</span><span class=\"w\"> </span><span class=\"s\">\"{..&lt;x} </span><span class=\"ss\">\\&lt;inter&gt;</span><span class=\"s\"> I = {}\"</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"n\">True</span>\n<span class=\"w\">  </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">thesis</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">simp</span>\n<span class=\"k\">next</span>\n<span class=\"w\">  </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"n\">False</span>\n<span class=\"w\">  </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">thesis</span>\n<span class=\"w\">  </span><span class=\"k\">proof</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"n\">order_tendstoI</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"k\">fix</span><span class=\"w\"> </span><span class=\"n\">b</span>\n<span class=\"w\">    </span><span class=\"k\">assume</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"Sup (f ` ({..&lt;x} </span><span class=\"ss\">\\&lt;inter&gt;</span><span class=\"s\"> I)) &lt; b\"</span>\n<span class=\"w\">    </span><span class=\"ow\">{</span>\n<span class=\"w\">      </span><span class=\"k\">fix</span><span class=\"w\"> </span><span class=\"n\">y</span>\n<span class=\"w\">      </span><span class=\"k\">assume</span><span class=\"w\"> </span><span class=\"s\">\"y </span><span class=\"ss\">\\&lt;in&gt;</span><span class=\"s\"> {..&lt;x} </span><span class=\"ss\">\\&lt;inter&gt;</span><span class=\"s\"> I\"</span>\n<span class=\"w\">      </span><span class=\"k\">with</span><span class=\"w\"> </span><span class=\"n\">False</span><span class=\"w\"> </span><span class=\"n\">bnd</span><span class=\"w\"> </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"s\">\"f y </span><span class=\"ss\">\\&lt;le&gt;</span><span class=\"s\"> Sup (f ` ({..&lt;x} </span><span class=\"ss\">\\&lt;inter&gt;</span><span class=\"s\"> I))\"</span><span class=\"w\"> </span><span class=\"k\">by</span>\n<span class=\"o\">(</span><span class=\"n\">auto</span><span class=\"w\"> </span><span class=\"n\">intro</span><span class=\"o\">!:</span><span class=\"w\"> </span><span class=\"n\">cSup_upper</span><span class=\"w\"> </span><span class=\"n\">bdd_aboveI2</span><span class=\"o\">)</span>\n<span class=\"w\">      </span><span class=\"k\">with</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"s\">\"f y &lt; b\"</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">order</span>\n<span class=\"w\">    </span><span class=\"ow\">}</span>\n<span class=\"w\">    </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"s\">\"eventually (</span><span class=\"ss\">\\&lt;lambda&gt;</span><span class=\"s\">x. f x &lt; b) (at x within ({..&lt;x}</span>\n<span class=\"ss\">\\&lt;inter&gt;</span><span class=\"s\"> I))\"</span>\n<span class=\"w\">      </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">auto</span><span class=\"w\"> </span><span class=\"n\">simp</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">eventually_at_filter</span><span class=\"w\"> </span><span class=\"n\">intro</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">exI</span><span class=\"o\">[</span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"o\">_</span><span class=\"w\"> </span><span class=\"n\">1</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">zero_less_one</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"k\">next</span>\n<span class=\"w\">    </span><span class=\"k\">fix</span><span class=\"w\"> </span><span class=\"n\">b</span>\n<span class=\"w\">    </span><span class=\"k\">assume</span><span class=\"w\"> </span><span class=\"s\">\"b &lt; Sup (f ` ({..&lt;x} </span><span class=\"ss\">\\&lt;inter&gt;</span><span class=\"s\"> I))\"</span>\n<span class=\"w\">    </span><span class=\"k\">from</span><span class=\"w\"> </span><span class=\"n\">less_cSupD</span><span class=\"o\">[</span><span class=\"n\">OF</span><span class=\"w\"> </span><span class=\"o\">_</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"n\">False</span><span class=\"w\"> </span><span class=\"k\">obtain</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"kp\">where</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"y &lt; x\"</span><span class=\"w\"> </span><span class=\"s\">\"y </span><span class=\"ss\">\\&lt;in&gt;</span><span class=\"s\"> I\"</span>\n<span class=\"s\">\"b &lt; f y\"</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">auto</span>\n<span class=\"w\">    </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"s\">\"eventually (</span><span class=\"ss\">\\&lt;lambda&gt;</span><span class=\"s\">x. x </span><span class=\"ss\">\\&lt;in&gt;</span><span class=\"s\"> I </span><span class=\"ss\">\\&lt;longrightarrow&gt;</span><span class=\"s\"> b &lt; f x)</span>\n<span class=\"s\">(at_left x)\"</span>\n<span class=\"w\">      </span><span class=\"k\">unfolding</span><span class=\"w\"> </span><span class=\"n\">eventually_at_right</span><span class=\"o\">[</span><span class=\"n\">OF</span><span class=\"w\"> </span><span class=\"ss\">\\&lt;open&gt;</span><span class=\"s\">y &lt; x</span><span class=\"ss\">\\&lt;close&gt;</span><span class=\"o\">]</span>\n<span class=\"w\">      </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">smt</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">verit</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">best</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"o\">(</span><span class=\"n\">1</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"n\">basic_trans_rules</span><span class=\"o\">(</span><span class=\"n\">23</span><span class=\"o\">)</span>\n<span class=\"n\">eventually_at_left</span><span class=\"w\"> </span><span class=\"n\">less_le</span><span class=\"w\"> </span><span class=\"n\">not_le</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"s\">\"eventually (</span><span class=\"ss\">\\&lt;lambda&gt;</span><span class=\"s\">x. b &lt; f x) (at x within ({..&lt;x}</span>\n<span class=\"ss\">\\&lt;inter&gt;</span><span class=\"s\"> I))\"</span>\n<span class=\"w\">      </span><span class=\"k\">unfolding</span><span class=\"w\"> </span><span class=\"n\">eventually_at_filter</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">eventually_elim</span><span class=\"w\"> </span><span class=\"n\">simp</span>\n<span class=\"w\">  </span><span class=\"k\">qed</span>\n<span class=\"k\">qed</span>\n</code></pre></div>\n<p>Best regards,</p>\n<p>-- <br>\n伊藤 洋介<br>\nYosuke ITO<br>\n+81 80-5057-6931<br>\n<a href=\"mailto:glacier345@gmail.com\">glacier345@gmail.com</a></p>",
        "id": 516359192,
        "sender_full_name": "Email Gateway",
        "timestamp": 1746513087
    },
    {
        "content": "<p>From: Lawrence Paulson via isabelle-dev &lt;<a href=\"mailto:isabelle-dev@mailman.proof.cit.tum.de\">isabelle-dev@mailman.proof.cit.tum.de</a>&gt;<br>\nGood idea. Many thanks!</p>\n<blockquote>\n<p>On 6 May 2025, at 07:30, 伊藤洋介 &lt;<a href=\"mailto:glacier345@gmail.com\">glacier345@gmail.com</a>&gt; wrote:</p>\n<p>However, the dual of this lemma (on the left-hand limit) is missing.<br>\nCould you consider adding the following code to Elementary_Topology.thy?<br>\nIf there is an appropriate way to suggest improvements, please let me know.<br>\n</p>\n</blockquote>",
        "id": 516509312,
        "sender_full_name": "Email Gateway",
        "timestamp": 1746556001
    }
]