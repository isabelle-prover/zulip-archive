[
    {
        "content": "<p>From: Lawrence Paulson via isabelle-dev &lt;<a href=\"mailto:isabelle-dev@mailman.proof.cit.tum.de\">isabelle-dev@mailman.proof.cit.tum.de</a>&gt;<br>\nOn my M2 MacBook Pro, I’m getting</p>\n<p>I/O error: /Users/lp15/.isabelle/contrib/polyml-5.9.2/x86_64_32-darwin/poly (No such file or directory)</p>\n<p>And of course the x86 version isn’t the one I should be needing anyway.</p>\n<p>f08c8e96a2b4</p>\n<p>Larry</p>",
        "id": 546298032,
        "sender_full_name": "Email Gateway",
        "timestamp": 1761069474
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 21/10/2025 19:57, Lawrence Paulson via isabelle-dev wrote:</p>\n<blockquote>\n<p>On my M2 MacBook Pro, I’m getting</p>\n<p>I/O error: /Users/lp15/.isabelle/contrib/polyml-5.9.2/x86_64_32-darwin/poly <br>\n(No such file or directory)</p>\n<p>And of course the x86 version isn’t the one I should be needing anyway.</p>\n<p>f08c8e96a2b4</p>\n</blockquote>\n<p>I've actually forgotten to build the Intel/macOS platform: for Poly/ML we need <br>\nto do this on an actual Intel Mac, while e.g. for VSCodium this is a hybrid <br>\nbuild works on ARM64 for both platforms.</p>\n<p>What is still odd: Why does your local setup demand x86_64_32-darwin/poly? It <br>\ncould be something in etc/preferences: ML_platform.</p>\n<p>On my usual ARM64 test machines, it works fine.</p>\n<p>And yes: We might rightly ask when the Intel Mac platform is to be <br>\ndiscontinued. Maybe in 2 years.</p>\n<p>Makarius</p>",
        "id": 546299603,
        "sender_full_name": "Email Gateway",
        "timestamp": 1761069974
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 21/10/2025 20:05, Makarius wrote:</p>\n<blockquote>\n<p>What is still odd: Why does your local setup demand x86_64_32-darwin/poly? It <br>\ncould be something in etc/preferences: ML_platform.</p>\n</blockquote>\n<p>This is how to query the local setup:</p>\n<p>isabelle getenv ML_PLATFORM<br>\nisabelle options -g ML_platform</p>\n<p>The default for both is empty: it means to use the standard platform, i.e. <br>\narm64_32-darwin.</p>\n<p>Makarius</p>",
        "id": 546300063,
        "sender_full_name": "Email Gateway",
        "timestamp": 1761070075
    },
    {
        "content": "<p>From: Lawrence Paulson via isabelle-dev &lt;<a href=\"mailto:isabelle-dev@mailman.proof.cit.tum.de\">isabelle-dev@mailman.proof.cit.tum.de</a>&gt;<br>\nIndeed, that was it. But why did it work before?</p>\n<p>Larry<br>\nOn 21 Oct 2025 at 19:05 +0100, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;, wrote:</p>\n<p>What is still odd: Why does your local setup demand x86_64_32-darwin/poly? It<br>\ncould be something in etc/preferences: ML_platform.</p>",
        "id": 546302828,
        "sender_full_name": "Email Gateway",
        "timestamp": 1761071010
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;</p>\n<blockquote>\n<p>On 21 Oct 2025 at 19:05 +0100, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;, wrote:</p>\n<blockquote>\n<p>What is still odd: Why does your local setup demand x86_64_32-darwin/poly? It<br>\ncould be something in etc/preferences: ML_platform.</p>\n</blockquote>\n</blockquote>\n<p>On 21/10/2025 20:11, Lawrence Paulson wrote:</p>\n<blockquote>\n<p>Indeed, that was it. But why did it work before?</p>\n</blockquote>\n<p>Because your settings to demand x86_64_32-darwin/poly could be resolved <br>\nproperly: You merely had a slightly slower Poly/ML, without taking notice.</p>\n<p>Of course, I will update the polyml component to provide the missing Intel <br>\nplatforms.</p>\n<p>And yes, we do need to discontinue Intel macOS in approx. 2-3 years, when <br>\nApple is going to ship macOS 28 without Rosetta 2. E.g. see <br>\n<a href=\"https://arstechnica.com/gadgets/2025/06/apple-details-the-end-of-intel-mac-support-and-a-phaseout-for-rosetta-2\">https://arstechnica.com/gadgets/2025/06/apple-details-the-end-of-intel-mac-support-and-a-phaseout-for-rosetta-2</a></p>\n<p>That means me need to make more efforts to phase out remaining x86_64-darwin <br>\nexecutables, of some external tools. In particular:</p>\n<p>- spass<br>\n   - vampire<br>\n   - verit<br>\n   - smbc<br>\n   - zipperposition<br>\n   - z3</p>\n<p>Makarius</p>",
        "id": 546303728,
        "sender_full_name": "Email Gateway",
        "timestamp": 1761071341
    },
    {
        "content": "<p>From: Lawrence Paulson via isabelle-dev &lt;<a href=\"mailto:isabelle-dev@mailman.proof.cit.tum.de\">isabelle-dev@mailman.proof.cit.tum.de</a>&gt;<br>\nThanks. I surely hope that we have ARM versions of all of those.</p>\n<p>Larry<br>\nOn 21 Oct 2025 at 19:28 +0100, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;, wrote:</p>\n<p>That means me need to make more efforts to phase out remaining x86_64-darwin<br>\nexecutables, of some external tools. In particular:</p>\n<ul>\n<li>spass</li>\n<li>vampire</li>\n<li>verit</li>\n<li>smbc</li>\n<li>zipperposition</li>\n<li>z3</li>\n</ul>",
        "id": 546304066,
        "sender_full_name": "Email Gateway",
        "timestamp": 1761071486
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 21/10/2025 20:31, Lawrence Paulson wrote:</p>\n<blockquote>\n<p>On 21 Oct 2025 at 19:28 +0100, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;, wrote:</p>\n<blockquote>\n<p>That means me need to make more efforts to phase out remaining x86_64-darwin<br>\nexecutables, of some external tools. In particular:</p>\n<ul>\n<li>spass</li>\n<li>vampire</li>\n<li>verit</li>\n<li>smbc</li>\n<li>zipperposition</li>\n<li>z3</li>\n</ul>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>Thanks. I surely hope that we have ARM versions of all of those.</p>\n</blockquote>\n<p>I also hope it, but this hope is sometimes unfounded.</p>\n<p>In recent years, I have tried hard to support arm64-linux, but a few <br>\nexecutables are still missing.</p>\n<p>This year, I have continued under the assumption that x86_64-darwin will stop <br>\nworking soon, but did not yet manage to build all tools yet.</p>\n<p>In particular, the z3 situation is very bad: Could we update that eventually, <br>\nor discontinue it altogether?</p>\n<p>Makarius</p>",
        "id": 546305185,
        "sender_full_name": "Email Gateway",
        "timestamp": 1761071954
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@ifi.lmu.de\">jasmin.blanchette@ifi.lmu.de</a>&gt;<br>\nHi Makarius,</p>\n<blockquote>\n<p>In particular, the z3 situation is very bad: Could we update that eventually, or discontinue it altogether?</p>\n</blockquote>\n<p>To summarize a discussion we had together one or two months ago: Z3 has moved on in 11 years, and it would probably be hard to support its new proofs. It's not hard enough for a research project and probably too hard for a BSc and possibly MSc (or at least very supervision-intensive). So we might consider getting rid of Z3 support.</p>\n<p>This means: (1) Sledgehammer should stop generating Z3-based \"smt\" proofs; (2) we should ask the AFP authors to get rid of their Z3-smt calls (using the more stable veriT or other proofs), maybe with some help from a task force (which I could lead). Do we agree?</p>\n<p>Also unclear in all of this is the role of cvc5. Unlike veriT, it's under active development and is a more complex piece of software (i.e., harder to build). Do we also want to avoid it?</p>\n<p>Best,<br>\nJasmin</p>\n<p>--<br>\nProf. Dr. Jasmin Blanchette<br>\nChair of Theoretical Computer Science and Theorem Proving<br>\nLudwig-Maximilians-Universität München<br>\nOettingenstr. 67, 80538 München, Germany<br>\nTel.: +49 (0)89 2180 9341<br>\nWeb: <a href=\"https://www.tcs.ifi.lmu.de/mitarbeiter/jasmin-blanchette_de.html\">https://www.tcs.ifi.lmu.de/mitarbeiter/jasmin-blanchette_de.html</a></p>\n<blockquote>\n<p>On 21. Oct 2025, at 20:38, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n<p>On 21/10/2025 20:31, Lawrence Paulson wrote:</p>\n<blockquote>\n<p>On 21 Oct 2025 at 19:28 +0100, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;, wrote:</p>\n<blockquote>\n<p>That means me need to make more efforts to phase out remaining x86_64-darwin<br>\nexecutables, of some external tools. In particular:</p>\n<ul>\n<li>spass</li>\n<li>vampire</li>\n<li>verit</li>\n<li>smbc</li>\n<li>zipperposition</li>\n<li>z3</li>\n</ul>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>Thanks. I surely hope that we have ARM versions of all of those.</p>\n</blockquote>\n<p>I also hope it, but this hope is sometimes unfounded.</p>\n<p>In recent years, I have tried hard to support arm64-linux, but a few executables are still missing.</p>\n<p>This year, I have continued under the assumption that x86_64-darwin will stop working soon, but did not yet manage to build all tools yet.</p>\n<p>In particular, the z3 situation is very bad: Could we update that eventually, or discontinue it altogether?</p>\n<p>Makarius<br>\n</p>\n</blockquote>",
        "id": 546306026,
        "sender_full_name": "Email Gateway",
        "timestamp": 1761072307
    },
    {
        "content": "<p>From: Lawrence Paulson via isabelle-dev &lt;<a href=\"mailto:isabelle-dev@mailman.proof.cit.tum.de\">isabelle-dev@mailman.proof.cit.tum.de</a>&gt;<br>\nDid you see the ITP paper \"Improving the SMT Proof Reconstruction Pipeline in Isabelle/HOL”? It was for cvc5.</p>\n<p>Larry<br>\nOn 21 Oct 2025 at 19:38 +0100, Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@ifi.lmu.de\">jasmin.blanchette@ifi.lmu.de</a>&gt;, wrote:</p>\n<p>Also unclear in all of this is the role of cvc5. Unlike veriT, it's under active development and is a more complex piece of software (i.e., harder to build). Do we also want to avoid it?</p>",
        "id": 546306408,
        "sender_full_name": "Email Gateway",
        "timestamp": 1761072471
    },
    {
        "content": "<p>From: Lawrence Paulson via isabelle-dev &lt;<a href=\"mailto:isabelle-dev@mailman.proof.cit.tum.de\">isabelle-dev@mailman.proof.cit.tum.de</a>&gt;<br>\nStrangely, fixing this (leaving ML_PLATFORM unset) had no effect on build times.</p>\n<p>Larry<br>\nOn 21 Oct 2025 at 19:28 +0100, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;, wrote:</p>\n<p>Because your settings to demand x86_64_32-darwin/poly could be resolved<br>\nproperly: You merely had a slightly slower Poly/ML, without taking notice.</p>",
        "id": 546306581,
        "sender_full_name": "Email Gateway",
        "timestamp": 1761072542
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 21/10/2025 20:44, Jasmin Blanchette wrote:</p>\n<blockquote>\n<p>Also unclear in all of this is the role of cvc5. Unlike veriT, it's under <br>\nactive development and is a more complex piece of software (i.e., harder to <br>\nbuild). Do we also want to avoid it?</p>\n</blockquote>\n<p>From my side, cvc5 is OK: we merely download the executables for all <br>\nplatform. See also <a href=\"https://github.com/cvc5/cvc5/releases\">https://github.com/cvc5/cvc5/releases</a></p>\n<p>Makarius</p>",
        "id": 546307859,
        "sender_full_name": "Email Gateway",
        "timestamp": 1761073115
    },
    {
        "content": "<p>From: Lawrence Paulson via isabelle-dev &lt;<a href=\"mailto:isabelle-dev@mailman.proof.cit.tum.de\">isabelle-dev@mailman.proof.cit.tum.de</a>&gt;<br>\nSurely this paper addresses the issues with cvc5, and it’s supposed to be included in the next release.</p>\n<p><a href=\"https://drops.dagstuhl.de/storage/00lipics/lipics-vol352-itp2025/LIPIcs.ITP.2025.26/LIPIcs.ITP.2025.26.pdf\">https://drops.dagstuhl.de/storage/00lipics/lipics-vol352-itp2025/LIPIcs.ITP.2025.26/LIPIcs.ITP.2025.26.pdf</a></p>\n<p>Larry<br>\nOn 21 Oct 2025 at 20:44 +0100, wrote:</p>\n<p>Also unclear in all of this is the role of cvc5. Unlike veriT, it's under<br>\nactive development and is a more complex piece of software (i.e., harder to<br>\nbuild). Do we also want to avoid it?</p>",
        "id": 546324474,
        "sender_full_name": "Email Gateway",
        "timestamp": 1761079447
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;</p>\n<p>On 22/10/2025 03:44, Jasmin Blanchette wrote:</p>\n<blockquote>\n<p>Hi Makarius,</p>\n<blockquote>\n<p>In particular, the z3 situation is very bad: Could we update that eventually, <br>\nor discontinue it altogether?</p>\n</blockquote>\n<p>To summarize a discussion we had together one or two months ago: Z3 has moved on <br>\nin 11 years, and it would probably be hard to support its new proofs. It's not <br>\nhard enough for a research project and probably too hard for a BSc and possibly <br>\nMSc (or at least very supervision-intensive). So we might consider getting rid <br>\nof Z3 support.</p>\n</blockquote>\n<p>No problem from my perspective: cvc5 outperforms the current z3. And the new z3, <br>\nwell, it would be nice, but I see the problem. Do any other ITPs use the latest z3?</p>\n<blockquote>\n<p>This means: (1) Sledgehammer should stop generating Z3-based \"smt\" proofs; (2) <br>\nwe should ask the AFP authors to get rid of their Z3-smt calls (using the more <br>\nstable veriT or other proofs), maybe with some help from a task force (which I <br>\ncould lead). Do we agree?</p>\n</blockquote>\n<p>I guess we haver to bite the bullet.</p>\n<blockquote>\n<p>Also unclear in all of this is the role of cvc5. Unlike veriT, it's under active <br>\ndevelopment and is a more complex piece of software (i.e., harder to build). Do <br>\nwe also want to avoid it?</p>\n</blockquote>\n<p>Cvc5 is a major asset, we need it!</p>\n<p>Tobias</p>\n<blockquote>\n<p>Best,<br>\nJasmin</p>\n<p>--<br>\nProf. Dr. Jasmin Blanchette<br>\nChair of Theoretical Computer Science and Theorem Proving<br>\nLudwig-Maximilians-Universität München<br>\nOettingenstr. 67, 80538 München, Germany<br>\nTel.: +49 (0)89 2180 9341<br>\nWeb: <a href=\"https://www.tcs.ifi.lmu.de/mitarbeiter/jasmin-blanchette_de.html\">https://www.tcs.ifi.lmu.de/mitarbeiter/jasmin-blanchette_de.html</a></p>\n<blockquote>\n<p>On 21. Oct 2025, at 20:38, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n<p>On 21/10/2025 20:31, Lawrence Paulson wrote:</p>\n<blockquote>\n<p>On 21 Oct 2025 at 19:28 +0100, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;, wrote:</p>\n<blockquote>\n<p>That means me need to make more efforts to phase out remaining x86_64-darwin<br>\nexecutables, of some external tools. In particular:</p>\n<ul>\n<li>spass</li>\n<li>vampire</li>\n<li>verit</li>\n<li>smbc</li>\n<li>zipperposition</li>\n<li>z3</li>\n</ul>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>Thanks. I surely hope that we have ARM versions of all of those.</p>\n</blockquote>\n<p>I also hope it, but this hope is sometimes unfounded.</p>\n<p>In recent years, I have tried hard to support arm64-linux, but a few <br>\nexecutables are still missing.</p>\n<p>This year, I have continued under the assumption that x86_64-darwin will stop <br>\nworking soon, but did not yet manage to build all tools yet.</p>\n<p>In particular, the z3 situation is very bad: Could we update that eventually, <br>\nor discontinue it altogether?</p>\n<p>Makarius</p>\n</blockquote>\n</blockquote>\n<p><a href=\"/user_uploads/14278/NjuSP802Hnf3qEHb_VqKYG-V/smime.p7s\">smime.p7s</a></p>",
        "id": 546350198,
        "sender_full_name": "Email Gateway",
        "timestamp": 1761095422
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@ifi.lmu.de\">jasmin.blanchette@ifi.lmu.de</a>&gt;<br>\nHi all,</p>\n<p>Tobias wrote:</p>\n<blockquote>\n<p>Do any other ITPs use the latest z3?</p>\n</blockquote>\n<p>SMTCoq (sic) only uses veriT and CVC4. I think HOLyHammer (for HOL4 and HOL Light) uses Z3 to find proofs, but so do we. Tjark Weber's Z3 proof reconstruction code (ITP 2010) might still be alive in HOL4, but I suspect it might not work with a recent Z3.</p>\n<blockquote>\n<p>Cvc5 is a major asset, we need it!</p>\n</blockquote>\n<p>To clarify, there are two uses of cvc5: for finding proofs and for reconstruction. I was talking about the latter. I see the consensus is for keeping cvc5, also in that role. Good! That will be less work for the \"task force\" (and more work for the developers of the \"cvc5\" integration to keep it somewhat up to date so we don't end up in the same situation as with Z3).</p>\n<p>To answer Larry: I have no doubts that the cvc5 pipeline has improved. But suppose it's not developed further for 10 years, during which time Apple invents a new processor architecture. We'll face the same choice we're facing now with Z3: try to compile old cvc5 sources from 10 years ago for the new architecture or port our integration code.</p>\n<p>Now, I just tried this example with Isabelle/a356fd7ca1c4:</p>\n<p>lemma \"a = b ⟹ f a = f b\"<br>\n      using [[smt_trace]]<br>\n      by (smt (cvc5))</p>\n<p>and it doesn't work. I get the error \"Error in option parsing: proof-format=alethe is experimental in this version. If you know what you are doing, you can try --proof-alethe-experimental\". So it doesn't look to me as if we can use cvc5 for reconstruction quite yet, which also postpones the work of the \"task force\".</p>\n<p>Could one of the multiple authors of Lachnitt et al. (ITP 2025) comment on the status of their project (hoping at least one of them is on this mailing list)?</p>\n<p>Best,<br>\nJasmin</p>\n<p>--<br>\nProf. Dr. Jasmin Blanchette<br>\nChair of Theoretical Computer Science and Theorem Proving<br>\nLudwig-Maximilians-Universität München<br>\nOettingenstr. 67, 80538 München, Germany<br>\nTel.: +49 (0)89 2180 9341<br>\nWeb: <a href=\"https://www.tcs.ifi.lmu.de/mitarbeiter/jasmin-blanchette_de.html\">https://www.tcs.ifi.lmu.de/mitarbeiter/jasmin-blanchette_de.html</a></p>\n<blockquote>\n<p>On 22. Oct 2025, at 03:10, Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt; wrote:</p>\n<p>On 22/10/2025 03:44, Jasmin Blanchette wrote:</p>\n<blockquote>\n<p>Hi Makarius,</p>\n<blockquote>\n<p>In particular, the z3 situation is very bad: Could we update that eventually, or discontinue it altogether?<br>\nTo summarize a discussion we had together one or two months ago: Z3 has moved on in 11 years, and it would probably be hard to support its new proofs. It's not hard enough for a research project and probably too hard for a BSc and possibly MSc (or at least very supervision-intensive). So we might consider getting rid of Z3 support.</p>\n</blockquote>\n</blockquote>\n<p>No problem from my perspective: cvc5 outperforms the current z3. And the new z3, well, it would be nice, but I see the problem. Do any other ITPs use the latest z3?</p>\n<blockquote>\n<p>This means: (1) Sledgehammer should stop generating Z3-based \"smt\" proofs; (2) we should ask the AFP authors to get rid of their Z3-smt calls (using the more stable veriT or other proofs), maybe with some help from a task force (which I could lead). Do we agree?</p>\n</blockquote>\n<p>I guess we haver to bite the bullet.</p>\n<blockquote>\n<p>Also unclear in all of this is the role of cvc5. Unlike veriT, it's under active development and is a more complex piece of software (i.e., harder to build). Do we also want to avoid it?</p>\n</blockquote>\n<p>Cvc5 is a major asset, we need it!</p>\n<p>Tobias</p>\n<blockquote>\n<p>Best,<br>\nJasmin<br>\n--<br>\nProf. Dr. Jasmin Blanchette<br>\nChair of Theoretical Computer Science and Theorem Proving<br>\nLudwig-Maximilians-Universität München<br>\nOettingenstr. 67, 80538 München, Germany<br>\nTel.: +49 (0)89 2180 9341<br>\nWeb: <a href=\"https://www.tcs.ifi.lmu.de/mitarbeiter/jasmin-blanchette_de.html\">https://www.tcs.ifi.lmu.de/mitarbeiter/jasmin-blanchette_de.html</a></p>\n<blockquote>\n<p>On 21. Oct 2025, at 20:38, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n<p>On 21/10/2025 20:31, Lawrence Paulson wrote:</p>\n<blockquote>\n<p>On 21 Oct 2025 at 19:28 +0100, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;, wrote:</p>\n<blockquote>\n<p>That means me need to make more efforts to phase out remaining x86_64-darwin<br>\nexecutables, of some external tools. In particular:</p>\n<ul>\n<li>spass</li>\n<li>vampire</li>\n<li>verit</li>\n<li>smbc</li>\n<li>zipperposition</li>\n<li>z3</li>\n</ul>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>Thanks. I surely hope that we have ARM versions of all of those.</p>\n</blockquote>\n<p>I also hope it, but this hope is sometimes unfounded.</p>\n<p>In recent years, I have tried hard to support arm64-linux, but a few executables are still missing.</p>\n<p>This year, I have continued under the assumption that x86_64-darwin will stop working soon, but did not yet manage to build all tools yet.</p>\n<p>In particular, the z3 situation is very bad: Could we update that eventually, or discontinue it altogether?</p>\n<p>Makarius</p>\n</blockquote>\n</blockquote>\n</blockquote>",
        "id": 546378430,
        "sender_full_name": "Email Gateway",
        "timestamp": 1761116472
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:manuel@pruvisto.org\">manuel@pruvisto.org</a>&gt;<br>\nJust a random idea I just had: Apple might be discontinuing Rosetta, but <br>\nthe fact that Rosetta exists in the first place shows that emulation of <br>\nx86_64 with ARM (and presumably also any other architecture with any <br>\nother architecture) can be done in a way that's not ridiculously slow.</p>\n<p>That ought to mean that one should be able to build a standalone tool <br>\nthat does this as well, or take an existing executable and \"wrap\" it <br>\nwith a kind of x86_64 interpreter that itself runs on ARM.</p>\n<p>Obviously I'm not suggesting any of us build such a tool, but I would <br>\nimagine somebody will, or perhaps already has. Then we could, as a last <br>\nresort if nothing else works, use that to e.g. provide an ARM version of <br>\nZ3 (or a version for whatever architecture of whatever software will <br>\ngive us trouble in the future). It's probably going to be slower than a <br>\nnative version, but even if it's slower by a factor of 2 or 3 it might <br>\nnot be a show stopper, especially if there aren't that many uses of Z3.</p>\n<p>Cheers,</p>\n<p>Manuel</p>\n<p>On 22/10/2025 09:00, Jasmin Blanchette wrote:</p>\n<blockquote>\n<p>Hi all,</p>\n<p>Tobias wrote:</p>\n<blockquote>\n<p>Do any other ITPs use the latest z3?</p>\n</blockquote>\n<p>SMTCoq (sic) only uses veriT and CVC4. I think HOLyHammer (for HOL4 <br>\nand HOL Light) uses Z3 to find proofs, but so do we. Tjark Weber's Z3 <br>\nproof reconstruction code (ITP 2010) might still be alive in HOL4, but <br>\nI suspect it might not work with a recent Z3.</p>\n<blockquote>\n<p>Cvc5 is a major asset, we need it!</p>\n</blockquote>\n<p>To clarify, there are two uses of cvc5: for finding proofs and for <br>\nreconstruction. I was talking about the latter. I see the consensus is <br>\nfor keeping cvc5, also in that role. Good! That will be less work for <br>\nthe \"task force\" (and more work for the developers of the \"cvc5\" <br>\nintegration to keep it somewhat up to date so we don't end up in the <br>\nsame situation as with Z3).</p>\n<p>To answer Larry: I have no doubts that the cvc5 pipeline has improved. <br>\nBut suppose it's not developed further for 10 years, during which time <br>\nApple invents a new processor architecture. We'll face the same choice <br>\nwe're facing now with Z3: try to compile old cvc5 sources from 10 <br>\nyears ago for the new architecture or port our integration code.</p>\n<p>Now, I just tried this example with Isabelle/a356fd7ca1c4:</p>\n<p>lemma \"a = b ⟹ f a = f b\"<br>\nusing [[smt_trace]]<br>\nby (smt (cvc5))</p>\n<p>and it doesn't work. I get the error \"Error in option parsing: <br>\nproof-format=alethe is experimental in this version. If you know what <br>\nyou are doing, you can try --proof-alethe-experimental\". So it doesn't <br>\nlook to me as if we can use cvc5 for reconstruction quite yet, which <br>\nalso postpones the work of the \"task force\".</p>\n<p>Could one of the multiple authors of Lachnitt et al. (ITP 2025) <br>\ncomment on the status of their project (hoping at least one of them is <br>\non this mailing list)?</p>\n<p>Best,<br>\nJasmin</p>\n<p>--<br>\nProf. Dr. Jasmin Blanchette<br>\nChair of Theoretical Computer Science and Theorem Proving<br>\nLudwig-Maximilians-Universität München<br>\nOettingenstr. 67, 80538 München, Germany<br>\nTel.: +49 (0)89 2180 9341<br>\nWeb: <a href=\"https://www.tcs.ifi.lmu.de/mitarbeiter/jasmin-blanchette_de.html\">https://www.tcs.ifi.lmu.de/mitarbeiter/jasmin-blanchette_de.html</a></p>\n<blockquote>\n<p>On 22. Oct 2025, at 03:10, Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt; wrote:</p>\n<p>On 22/10/2025 03:44, Jasmin Blanchette wrote:</p>\n<blockquote>\n<p>Hi Makarius,</p>\n<blockquote>\n<p>In particular, the z3 situation is very bad: Could we update that <br>\neventually, or discontinue it altogether?<br>\nTo summarize a discussion we had together one or two months ago: Z3 <br>\nhas moved on in 11 years, and it would probably be hard to support <br>\nits new proofs. It's not hard enough for a research project and <br>\nprobably too hard for a BSc and possibly MSc (or at least very <br>\nsupervision-intensive). So we might consider getting rid of Z3 support.</p>\n</blockquote>\n</blockquote>\n<p>No problem from my perspective: cvc5 outperforms the current z3. And <br>\nthe new z3, well, it would be nice, but I see the problem. Do any <br>\nother ITPs use the latest z3?</p>\n<blockquote>\n<p>This means: (1) Sledgehammer should stop generating Z3-based \"smt\" <br>\nproofs; (2) we should ask the AFP authors to get rid of their Z3-smt <br>\ncalls (using the more stable veriT or other proofs), maybe with some <br>\nhelp from a task force (which I could lead). Do we agree?</p>\n</blockquote>\n<p>I guess we haver to bite the bullet.</p>\n<blockquote>\n<p>Also unclear in all of this is the role of cvc5. Unlike veriT, it's <br>\nunder active development and is a more complex piece of software <br>\n(i.e., harder to build). Do we also want to avoid it?</p>\n</blockquote>\n<p>Cvc5 is a major asset, we need it!</p>\n<p>Tobias</p>\n<blockquote>\n<p>Best,<br>\nJasmin<br>\n--<br>\nProf. Dr. Jasmin Blanchette<br>\nChair of Theoretical Computer Science and Theorem Proving<br>\nLudwig-Maximilians-Universität München<br>\nOettingenstr. 67, 80538 München, Germany<br>\nTel.: +49 (0)89 2180 9341<br>\nWeb: <a href=\"https://www.tcs.ifi.lmu.de/mitarbeiter/jasmin-blanchette_de.html\">https://www.tcs.ifi.lmu.de/mitarbeiter/jasmin-blanchette_de.html</a></p>\n<blockquote>\n<p>On 21. Oct 2025, at 20:38, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n<p>On 21/10/2025 20:31, Lawrence Paulson wrote:</p>\n<blockquote>\n<p>On 21 Oct 2025 at 19:28 +0100, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;, wrote:</p>\n<blockquote>\n<p>That means me need to make more efforts to phase out remaining <br>\nx86_64-darwin<br>\nexecutables, of some external tools. In particular:</p>\n<ul>\n<li>spass</li>\n<li>vampire</li>\n<li>verit</li>\n<li>smbc</li>\n<li>zipperposition</li>\n<li>z3</li>\n</ul>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>Thanks. I surely hope that we have ARM versions of all of those.</p>\n</blockquote>\n<p>I also hope it, but this hope is sometimes unfounded.</p>\n<p>In recent years, I have tried hard to support arm64-linux, but a <br>\nfew executables are still missing.</p>\n<p>This year, I have continued under the assumption that x86_64-darwin <br>\nwill stop working soon, but did not yet manage to build all tools yet.</p>\n<p>In particular, the z3 situation is very bad: Could we update that <br>\neventually, or discontinue it altogether?</p>\n<p>Makarius<br>\n</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>",
        "id": 546379713,
        "sender_full_name": "Email Gateway",
        "timestamp": 1761116879
    },
    {
        "content": "<p>From: Lawrence Paulson via isabelle-dev &lt;<a href=\"mailto:isabelle-dev@mailman.proof.cit.tum.de\">isabelle-dev@mailman.proof.cit.tum.de</a>&gt;<br>\nI'm pretty sure Hanna said that this would be in the next release. Hanna, can you offer any more details?</p>\n<p>Larry</p>\n<blockquote>\n<p>On 22 Oct 2025, at 08:00, Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@ifi.lmu.de\">jasmin.blanchette@ifi.lmu.de</a>&gt; wrote:</p>\n<p>Now, I just tried this example with Isabelle/a356fd7ca1c4:</p>\n<p>lemma \"a = b ⟹ f a = f b\"<br>\n  using [[smt_trace]]<br>\n  by (smt (cvc5))</p>\n<p>and it doesn't work. I get the error \"Error in option parsing: proof-format=alethe is experimental in this version. If you know what you are doing, you can try --proof-alethe-experimental\". So it doesn't look to me as if we can use cvc5 for reconstruction quite yet, which also postpones the work of the \"task force\".</p>\n<p>Could one of the multiple authors of Lachnitt et al. (ITP 2025) comment on the status of their project (hoping at least one of them is on this mailing list)?<br>\n</p>\n</blockquote>",
        "id": 546420028,
        "sender_full_name": "Email Gateway",
        "timestamp": 1761129154
    },
    {
        "content": "<p>From: Lawrence Paulson via isabelle-dev &lt;<a href=\"mailto:isabelle-dev@mailman.proof.cit.tum.de\">isabelle-dev@mailman.proof.cit.tum.de</a>&gt;<br>\nThey appeared to be nearly 1300 occurrences of “smt (z3\" in over 300 different files. Ideally the change would be automated. One would like to think that one of the other solvers would be good enough to serve as a drop-in replacement for 15 year-old code, but maybe not.</p>\n<p>Larry</p>\n<blockquote>\n<p>On 21 Oct 2025, at 19:44, Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@ifi.lmu.de\">jasmin.blanchette@ifi.lmu.de</a>&gt; wrote:</p>\n<p>So we might consider getting rid of Z3 support.</p>\n<p>This means: (1) Sledgehammer should stop generating Z3-based \"smt\" proofs; (2) we should ask the AFP authors to get rid of their Z3-smt calls (using the more stable veriT or other proofs), maybe with some help from a task force (which I could lead). Do we agree?</p>\n</blockquote>",
        "id": 546420756,
        "sender_full_name": "Email Gateway",
        "timestamp": 1761129359
    },
    {
        "content": "<p>From: Mathias Fleury &lt;<a href=\"mailto:mathias.fleury12@gmail.com\">mathias.fleury12@gmail.com</a>&gt;<br>\nHi all,</p>\n<p>On 10/22/25 09:00, Jasmin Blanchette wrote:</p>\n<blockquote>\n<p>Hi all,</p>\n<p>Tobias wrote:</p>\n<blockquote>\n<p>Do any other ITPs use the latest z3?</p>\n</blockquote>\n<p>SMTCoq (sic) only uses veriT and CVC4. I think HOLyHammer (for HOL4 <br>\nand HOL Light) uses Z3 to find proofs, but so do we. Tjark Weber's Z3 <br>\nproof reconstruction code (ITP 2010) might still be alive in HOL4, but <br>\nI suspect it might not work with a recent Z3.</p>\n</blockquote>\n<p>Irvin on Zulip (#General &gt; Making isabelle run on modern z3. <br>\n&lt;<a href=\"#narrow/channel/202961-General/topic/Making.20isabelle.20run.20on.20modern.20z3.2E/with/546366457\">https://isabelle.zulipchat.com/#narrow/channel/202961-General/topic/Making.20isabelle.20run.20on.20modern.20z3.2E/with/546366457</a>&gt;) <br>\ntried to update it and found how HOL4 is supporting the new version:</p>\n<p><a href=\"https://github.com/HOL-Theorem-Prover/HOL/commit/8f8bd67b8c5a3d799144a14206aa8d4266edd36b\">https://github.com/HOL-Theorem-Prover/HOL/commit/8f8bd67b8c5a3d799144a14206aa8d4266edd36b</a><br>\n<a href=\"https://github.com/HOL-Theorem-Prover/HOL/commit/def62b7000cb313b19c84cabe8c1867e63a9c624\">https://github.com/HOL-Theorem-Prover/HOL/commit/def62b7000cb313b19c84cabe8c1867e63a9c624</a> <br>\n<a href=\"https://github.com/HOL-Theorem-Prover/HOL/commit/4324a79a32b7cccf11efbef4ecee637784ad28c4\">https://github.com/HOL-Theorem-Prover/HOL/commit/4324a79a32b7cccf11efbef4ecee637784ad28c4</a> <br>\n<a href=\"https://github.com/HOL-Theorem-Prover/HOL/commit/313365a0e83c847c9767d67ab52b2f69135dcaba\">https://github.com/HOL-Theorem-Prover/HOL/commit/313365a0e83c847c9767d67ab52b2f69135dcaba</a> <br>\n<a href=\"https://github.com/HOL-Theorem-Prover/HOL/commit/4b763209b040de35cf9d408e76a9c4898ce848d5\">https://github.com/HOL-Theorem-Prover/HOL/commit/4b763209b040de35cf9d408e76a9c4898ce848d5</a> <br>\n<a href=\"https://github.com/HOL-Theorem-Prover/HOL/commit/120e7bb43bc3ffcca4efb2cafbeed0605d620bff\">https://github.com/HOL-Theorem-Prover/HOL/commit/120e7bb43bc3ffcca4efb2cafbeed0605d620bff</a> <br>\n<a href=\"https://github.com/HOL-Theorem-Prover/HOL/commit/525694a1f1c7016dea954894bea6e6e396f7d6b3\">https://github.com/HOL-Theorem-Prover/HOL/commit/525694a1f1c7016dea954894bea6e6e396f7d6b3</a></p>\n<p>So it should be possible to port this to Isabelle. However, Irvin gave up.</p>\n<p>Mathias</p>\n<blockquote>\n<blockquote>\n<p>Cvc5 is a major asset, we need it!</p>\n</blockquote>\n<p>To clarify, there are two uses of cvc5: for finding proofs and for <br>\nreconstruction. I was talking about the latter. I see the consensus is <br>\nfor keeping cvc5, also in that role. Good! That will be less work for <br>\nthe \"task force\" (and more work for the developers of the \"cvc5\" <br>\nintegration to keep it somewhat up to date so we don't end up in the <br>\nsame situation as with Z3).</p>\n<p>To answer Larry: I have no doubts that the cvc5 pipeline has improved. <br>\nBut suppose it's not developed further for 10 years, during which time <br>\nApple invents a new processor architecture. We'll face the same choice <br>\nwe're facing now with Z3: try to compile old cvc5 sources from 10 <br>\nyears ago for the new architecture or port our integration code.</p>\n<p>Now, I just tried this example with Isabelle/a356fd7ca1c4:</p>\n<p>lemma \"a = b ⟹ f a = f b\"<br>\nusing [[smt_trace]]<br>\nby (smt (cvc5))</p>\n<p>and it doesn't work. I get the error \"Error in option parsing: <br>\nproof-format=alethe is experimental in this version. If you know what <br>\nyou are doing, you can try --proof-alethe-experimental\". So it doesn't <br>\nlook to me as if we can use cvc5 for reconstruction quite yet, which <br>\nalso postpones the work of the \"task force\".</p>\n<p>Could one of the multiple authors of Lachnitt et al. (ITP 2025) <br>\ncomment on the status of their project (hoping at least one of them is <br>\non this mailing list)?</p>\n<p>Best,<br>\nJasmin</p>\n<p>--<br>\nProf. Dr. Jasmin Blanchette<br>\nChair of Theoretical Computer Science and Theorem Proving<br>\nLudwig-Maximilians-Universität München<br>\nOettingenstr. 67, 80538 München, Germany<br>\nTel.: +49 (0)89 2180 9341<br>\nWeb: <a href=\"https://www.tcs.ifi.lmu.de/mitarbeiter/jasmin-blanchette_de.html\">https://www.tcs.ifi.lmu.de/mitarbeiter/jasmin-blanchette_de.html</a></p>\n<blockquote>\n<p>On 22. Oct 2025, at 03:10, Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt; wrote:</p>\n<p>On 22/10/2025 03:44, Jasmin Blanchette wrote:</p>\n<blockquote>\n<p>Hi Makarius,</p>\n<blockquote>\n<p>In particular, the z3 situation is very bad: Could we update that <br>\neventually, or discontinue it altogether?<br>\nTo summarize a discussion we had together one or two months ago: Z3 <br>\nhas moved on in 11 years, and it would probably be hard to support <br>\nits new proofs. It's not hard enough for a research project and <br>\nprobably too hard for a BSc and possibly MSc (or at least very <br>\nsupervision-intensive). So we might consider getting rid of Z3 support.</p>\n</blockquote>\n</blockquote>\n<p>No problem from my perspective: cvc5 outperforms the current z3. And <br>\nthe new z3, well, it would be nice, but I see the problem. Do any <br>\nother ITPs use the latest z3?</p>\n<blockquote>\n<p>This means: (1) Sledgehammer should stop generating Z3-based \"smt\" <br>\nproofs; (2) we should ask the AFP authors to get rid of their Z3-smt <br>\ncalls (using the more stable veriT or other proofs), maybe with some <br>\nhelp from a task force (which I could lead). Do we agree?</p>\n</blockquote>\n<p>I guess we haver to bite the bullet.</p>\n<blockquote>\n<p>Also unclear in all of this is the role of cvc5. Unlike veriT, it's <br>\nunder active development and is a more complex piece of software <br>\n(i.e., harder to build). Do we also want to avoid it?</p>\n</blockquote>\n<p>Cvc5 is a major asset, we need it!</p>\n<p>Tobias</p>\n<blockquote>\n<p>Best,<br>\nJasmin<br>\n--<br>\nProf. Dr. Jasmin Blanchette<br>\nChair of Theoretical Computer Science and Theorem Proving<br>\nLudwig-Maximilians-Universität München<br>\nOettingenstr. 67, 80538 München, Germany<br>\nTel.: +49 (0)89 2180 9341<br>\nWeb: <a href=\"https://www.tcs.ifi.lmu.de/mitarbeiter/jasmin-blanchette_de.html\">https://www.tcs.ifi.lmu.de/mitarbeiter/jasmin-blanchette_de.html</a></p>\n<blockquote>\n<p>On 21. Oct 2025, at 20:38, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n<p>On 21/10/2025 20:31, Lawrence Paulson wrote:</p>\n<blockquote>\n<p>On 21 Oct 2025 at 19:28 +0100, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;, wrote:</p>\n<blockquote>\n<p>That means me need to make more efforts to phase out remaining <br>\nx86_64-darwin<br>\nexecutables, of some external tools. In particular:</p>\n<ul>\n<li>spass</li>\n<li>vampire</li>\n<li>verit</li>\n<li>smbc</li>\n<li>zipperposition</li>\n<li>z3</li>\n</ul>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>Thanks. I surely hope that we have ARM versions of all of those.</p>\n</blockquote>\n<p>I also hope it, but this hope is sometimes unfounded.</p>\n<p>In recent years, I have tried hard to support arm64-linux, but a <br>\nfew executables are still missing.</p>\n<p>This year, I have continued under the assumption that x86_64-darwin <br>\nwill stop working soon, but did not yet manage to build all tools yet.</p>\n<p>In particular, the z3 situation is very bad: Could we update that <br>\neventually, or discontinue it altogether?</p>\n<p>Makarius<br>\n</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>",
        "id": 546449018,
        "sender_full_name": "Email Gateway",
        "timestamp": 1761137283
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@ifi.lmu.de\">jasmin.blanchette@ifi.lmu.de</a>&gt;<br>\nHi Hanna,</p>\n<p>Thanks for the update. I wish you good luck with the last steps! The icing on the cake of any programming project is of course when it gets integrated upstream. Let me know if there's anything I can do to help (but I suspect the combined expertise of you and your coauthors is more than enough to succeed).</p>\n<p>Best,<br>\nJasmin</p>\n<p>--<br>\nProf. Dr. Jasmin Blanchette<br>\nChair of Theoretical Computer Science and Theorem Proving<br>\nLudwig-Maximilians-Universität München<br>\nOettingenstr. 67, 80538 München, Germany<br>\nTel.: +49 (0)89 2180 9341<br>\nWeb: <a href=\"https://www.tcs.ifi.lmu.de/mitarbeiter/jasmin-blanchette_de.html\">https://www.tcs.ifi.lmu.de/mitarbeiter/jasmin-blanchette_de.html</a></p>\n<blockquote>\n<p>On 23. Oct 2025, at 02:13, Hanna Elif Lachnitt &lt;<a href=\"mailto:lachnitt@stanford.edu\">lachnitt@stanford.edu</a>&gt; wrote:</p>\n<p>Hi everyone,</p>\n<p>unfortunately we don't think that we can have it ready for the RC1 in two weeks. We strive to put it in the official repo as soon as possible.</p>\n<p>We made extensive changes and additions to the code as cvc5's proofs are far more detailed than veriT's. We also want to optimize good performance before users start using it. Since parsing is slow, having more steps can be detrimental, so we are investigating how to improve the size of cvc5 proofs.</p>\n<p>Best,<br>\nHanna</p>\n<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a> &lt;mailto:<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;&gt;<br>\nSent: Wednesday, October 22, 2025 03:32<br>\nTo: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@ifi.lmu.de\">jasmin.blanchette@ifi.lmu.de</a> &lt;mailto:<a href=\"mailto:jasmin.blanchette@ifi.lmu.de\">jasmin.blanchette@ifi.lmu.de</a>&gt;&gt;; Hanna Elif Lachnitt &lt;<a href=\"mailto:lachnitt@stanford.edu\">lachnitt@stanford.edu</a> &lt;mailto:<a href=\"mailto:lachnitt@stanford.edu\">lachnitt@stanford.edu</a>&gt;&gt;<br>\nCc: DEV Isabelle Mailinglist &lt;<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a> &lt;mailto:<a href=\"mailto:isabelle-dev@in.tum.de\">isabelle-dev@in.tum.de</a>&gt;&gt;<br>\nSubject: Re: Architecture problem</p>\n<p>I'm pretty sure Hanna said that this would be in the next release. Hanna, can you offer any more details?</p>\n<p>Larry</p>\n<blockquote>\n<p>On 22 Oct 2025, at 08:00, Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@ifi.lmu.de\">jasmin.blanchette@ifi.lmu.de</a> &lt;mailto:<a href=\"mailto:jasmin.blanchette@ifi.lmu.de\">jasmin.blanchette@ifi.lmu.de</a>&gt;&gt; wrote:</p>\n<p>Now, I just tried this example with Isabelle/a356fd7ca1c4:</p>\n<p>lemma \"a = b ⟹ f a = f b\"<br>\n  using [[smt_trace]]<br>\n  by (smt (cvc5))</p>\n<p>and it doesn't work. I get the error \"Error in option parsing: proof-format=alethe is experimental in this version. If you know what you are doing, you can try --proof-alethe-experimental\". So it doesn't look to me as if we can use cvc5 for reconstruction quite yet, which also postpones the work of the \"task force\".</p>\n<p>Could one of the multiple authors of Lachnitt et al. (ITP 2025) comment on the status of their project (hoping at least one of them is on this mailing list)?<br>\n</p>\n</blockquote>\n</blockquote>",
        "id": 546609144,
        "sender_full_name": "Email Gateway",
        "timestamp": 1761205039
    },
    {
        "content": "<p>From: Tjark Weber &lt;<a href=\"mailto:tjark.weber@it.uu.se\">tjark.weber@it.uu.se</a>&gt;<br>\nOn Wed, 2025-10-22 at 09:00 +0200, Jasmin Blanchette wrote:<br>\nTjark Weber's Z3 proof reconstruction code (ITP 2010) might still be alive in HOL4, but I suspect it might not work with a recent Z3.</p>\n<p>Ricardo Correia has made numerous improvements to that code and recently updated the supported Z3 version to 4.15.3 (the latest release).</p>\n<p>Best,<br>\nTjark</p>\n<p>När du har kontakt med oss på Uppsala universitet med e-post så innebär det att vi behandlar dina personuppgifter. För att läsa mer om hur vi gör det kan du läsa här: <a href=\"http://www.uu.se/om-uu/dataskydd-personuppgifter/\">http://www.uu.se/om-uu/dataskydd-personuppgifter/</a></p>\n<p>E-mailing Uppsala University means that we will process your personal data. For more information on how this is performed, please read here: <a href=\"http://www.uu.se/en/about-uu/data-protection-policy\">http://www.uu.se/en/about-uu/data-protection-policy</a></p>",
        "id": 546665888,
        "sender_full_name": "Email Gateway",
        "timestamp": 1761222210
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@ifi.lmu.de\">jasmin.blanchette@ifi.lmu.de</a>&gt;<br>\nThanks for the clarification!</p>\n<p>Inspired by this successful porting effort, we could consider updating our code to the latest Z3 as well. I have a bad memory of a previous such port (from 2010 to 2014), but maybe it would go more smoothly this time.</p>\n<p>Jasmin</p>\n<p>--<br>\nProf. Dr. Jasmin Blanchette<br>\nChair of Theoretical Computer Science and Theorem Proving<br>\nLudwig-Maximilians-Universität München<br>\nOettingenstr. 67, 80538 München, Germany<br>\nTel.: +49 (0)89 2180 9341<br>\nWeb: <a href=\"https://www.tcs.ifi.lmu.de/mitarbeiter/jasmin-blanchette_de.html\">https://www.tcs.ifi.lmu.de/mitarbeiter/jasmin-blanchette_de.html</a></p>\n<blockquote>\n<p>On 23. Oct 2025, at 14:22, Tjark Weber &lt;<a href=\"mailto:tjark.weber@it.uu.se\">tjark.weber@it.uu.se</a>&gt; wrote:</p>\n<p>On Wed, 2025-10-22 at 09:00 +0200, Jasmin Blanchette wrote:</p>\n<blockquote>\n<p>Tjark Weber's Z3 proof reconstruction code (ITP 2010) might still be alive in HOL4, but I suspect it might not work with a recent Z3.</p>\n</blockquote>\n<p>Ricardo Correia has made numerous improvements to that code and recently updated the supported Z3 version to 4.15.3 (the latest release).</p>\n<p>Best,<br>\nTjark</p>\n<p>När du har kontakt med oss på Uppsala universitet med e-post så innebär det att vi behandlar dina personuppgifter. För att läsa mer om hur vi gör det kan du läsa här: <a href=\"http://www.uu.se/om-uu/dataskydd-personuppgifter/\">http://www.uu.se/om-uu/dataskydd-personuppgifter/</a> </p>\n<p>E-mailing Uppsala University means that we will process your personal data. For more information on how this is performed, please read here: <a href=\"http://www.uu.se/en/about-uu/data-protection-policy\">http://www.uu.se/en/about-uu/data-protection-policy</a></p>\n</blockquote>",
        "id": 546667909,
        "sender_full_name": "Email Gateway",
        "timestamp": 1761222764
    }
]