[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThere has been a significant slowdown of HOL-ex and HOL-Codegenerator_Test due <br>\nto the following changeset:</p>\n<p>changeset:   83131:7d6e6531de61<br>\nuser:        paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\ndate:        Sun Sep 07 22:37:57 2025 +0100<br>\nfiles:       src/HOL/ROOT<br>\ndescription:<br>\nRemoving \"HOL-Library\" as ancestor theory</p>\n<p>The log message keeps the motivation (or justification) secret, but I can <br>\nimagine certain situations where <em>removing</em> of intermediate session images <br>\ngenerally improves the build process. In AFP. my standard log message is <br>\n\"build faster without intermediate session image\", often with concrete <br>\nindication about actually saved time.</p>\n<p>Above this did not quite work, notably for HOL-ex and HOL-Codegenerator_Test, <br>\nwhere a lot of material from the parent session is actually used. Here are <br>\nsome timings on my AMD Ryzen 9 7950X 16-Core Processor (with threads=8).</p>\n<p>87c96d455992, which includes 7d6e6531de61:<br>\nFinished HOL (0:01:52 elapsed time, 0:06:04 cpu time, factor 3.23)<br>\nFinished HOL-Computational_Algebra (0:00:41 elapsed time, 0:02:20 cpu time, <br>\nfactor 3.38)<br>\nFinished HOL-Number_Theory (0:00:31 elapsed time, 0:02:13 cpu time, factor 4.22)<br>\nFinished HOL-ex (0:02:08 elapsed time, 0:11:03 cpu time, factor 5.15)<br>\nFinished HOL-Codegenerator_Test (0:04:22 elapsed time, 0:13:12 cpu time, <br>\nfactor 3.02)</p>\n<p>87c96d455992, after \"hg backout 7d6e6531de61\":<br>\nFinished HOL (0:01:51 elapsed time, 0:05:57 cpu time, factor 3.20)<br>\nFinished HOL-Library (0:01:20 elapsed time, 0:05:43 cpu time, factor 4.28)<br>\nFinished HOL-Computational_Algebra (0:00:37 elapsed time, 0:01:58 cpu time, <br>\nfactor 3.19)<br>\nFinished HOL-Number_Theory (0:00:31 elapsed time, 0:02:05 cpu time, factor 3.97)<br>\nFinished HOL-ex (0:01:45 elapsed time, 0:07:39 cpu time, factor 4.34)<br>\nFinished HOL-Codegenerator_Test (0:03:20 elapsed time, 0:06:49 cpu time, <br>\nfactor 2.04)</p>\n<p>After my new change 746983070fca the situation is mostly back to normal:</p>\n<p>Finished HOL (0:01:54 elapsed time, 0:06:06 cpu time, factor 3.19)<br>\nFinished HOL-Library (0:01:20 elapsed time, 0:05:42 cpu time, factor 4.28)<br>\nFinished HOL-ex (0:01:50 elapsed time, 0:08:17 cpu time, factor 4.50)<br>\nFinished HOL-Codegenerator_Test (0:03:08 elapsed time, 0:07:11 cpu time, <br>\nfactor 2.28)</p>\n<p>Thus the cluster build also becomes faster again, but it might be hard to <br>\nmeasure exactly due to its persistent history of build times used for <br>\nscheduling. On my local machine, a regular \"isabelle build -j2 -a\" is <br>\nsomething like 26min vs. 25min.</p>\n<p>Side-remark: for interactive development in Isabelle/jEdit, the session build <br>\nhierarchy can be trimmed-down on the spot. For example:</p>\n<p>isabelle jedit -A HOL -R HOL-ex</p>\n<p>or even:</p>\n<p>isabelle jedit -A Pure -R HOL-ex</p>\n<p>Thus only one image is built in parallel with 8 threads:</p>\n<p>Finished HOL-ex_requirements(Pure) (0:02:56 elapsed time, 0:13:07 cpu time, <br>\nfactor 4.45). That is 20s shorter than sequential HOL + HOL-Library.</p>\n<p>Makarius</p>",
        "id": 539358706,
        "sender_full_name": "Email Gateway",
        "timestamp": 1757794321
    },
    {
        "content": "<p>From: Lawrence Paulson via isabelle-dev &lt;<a href=\"mailto:isabelle-dev@mailman.proof.cit.tum.de\">isabelle-dev@mailman.proof.cit.tum.de</a>&gt;<br>\nFeel free to revert, at least for those two. The original impetus was HOL-Computational_Algebra, which was taking forever to build when importing the whole of HOL-Library.</p>\n<blockquote>\n<p>On 13 Sep 2025, at 21:11, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n<p>Above this did not quite work, notably for HOL-ex and HOL-Codegenerator_Test, where a lot of material from the parent session is actually used. Here are some timings on my AMD Ryzen 9 7950X 16-Core Processor (with threads=8).</p>\n</blockquote>",
        "id": 539419524,
        "sender_full_name": "Email Gateway",
        "timestamp": 1757867008
    }
]