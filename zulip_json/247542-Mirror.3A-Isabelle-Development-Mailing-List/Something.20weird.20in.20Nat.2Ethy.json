[
    {
        "content": "<p>From: Lawrence Paulson via isabelle-dev &lt;<a href=\"mailto:isabelle-dev@mailman.proof.cit.tum.de\">isabelle-dev@mailman.proof.cit.tum.de</a>&gt;<br>\nThis theory sets up type “nat” as a standard datatype. But then it hides everything. I am okay with the hide_const for pred, but some of the facts being hidden are useful and are even derived again later in an ad-hoc manner. Any ideas why?</p>\n<p>hide_const (open) Nat.pred ― ‹hide everything related to the selector›<br>\nhide_fact<br>\n  nat.case_eq_if<br>\n  nat.collapse<br>\n  nat.expand<br>\n  nat.sel<br>\n  nat.exhaust_sel<br>\n  nat.split_sel<br>\n  nat.split_sel_asm</p>\n<p>Larry</p>",
        "id": 489848485,
        "sender_full_name": "Email Gateway",
        "timestamp": 1734559437
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@ifi.lmu.de\">jasmin.blanchette@ifi.lmu.de</a>&gt;<br>\nHi Larry,</p>\n<p>According to \"hg annotate\", I'm the guilty party here. I think the idea was that these lemmas were indeed already derived ad hoc and I wanted to avoid duplicates -- and probably I was too lazy or not courageous enough to get rid of the ad hoc versions and enforce the new versions throughout. By all means, if you or anybody else wants to refactor this, go ahead.</p>\n<p>Best,<br>\nJasmin</p>\n<p>--<br>\nProf. Dr. Jasmin Blanchette<br>\nChair of Theoretical Computer Science and Theorem Proving<br>\nLudwig-Maximilians-Universität München<br>\nOettingenstr. 67, 80538 München, Germany<br>\nTel.: +49 (0)89 2180 9341<br>\nWeb: <a href=\"https://www.tcs.ifi.lmu.de/mitarbeiter/jasmin-blanchette_de.html\">https://www.tcs.ifi.lmu.de/mitarbeiter/jasmin-blanchette_de.html</a></p>\n<blockquote>\n<p>On 18. Dec 2024, at 22:53, Lawrence Paulson via isabelle-dev &lt;<a href=\"mailto:isabelle-dev@mailman.proof.cit.tum.de\">isabelle-dev@mailman.proof.cit.tum.de</a>&gt; wrote:</p>\n<p>This theory sets up type “nat” as a standard datatype. But then it hides everything. I am okay with the hide_const for pred, but some of the facts being hidden are useful and are even derived again later in an ad-hoc manner. Any ideas why?</p>\n<p>hide_const (open) Nat.pred ― ‹hide everything related to the selector›<br>\nhide_fact<br>\n nat.case_eq_if<br>\n nat.collapse<br>\n nat.expand<br>\n nat.sel<br>\n nat.exhaust_sel<br>\n nat.split_sel<br>\n nat.split_sel_asm</p>\n<p>Larry<br>\n</p>\n</blockquote>\n<p><a href=\"/user_uploads/14278/sM21Se4YgVNFBoHU92uETgov/smime.p7s\">smime.p7s</a></p>",
        "id": 489917358,
        "sender_full_name": "Email Gateway",
        "timestamp": 1734599786
    },
    {
        "content": "<p>From: Lawrence Paulson via isabelle-dev &lt;<a href=\"mailto:isabelle-dev@mailman.proof.cit.tum.de\">isabelle-dev@mailman.proof.cit.tum.de</a>&gt;<br>\nI don't understand why any refactoring would be necessary. If it is a case of for example replacing nat_induct by nat.induct, sure, although explicit references are rare (38 to be precise)</p>\n<p>Larry</p>\n<blockquote>\n<p>On 19 Dec 2024, at 09:15, Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@ifi.lmu.de\">jasmin.blanchette@ifi.lmu.de</a>&gt; wrote:</p>\n<p>According to \"hg annotate\", I'm the guilty party here. I think the idea was that these lemmas were indeed already derived ad hoc and I wanted to avoid duplicates -- and probably I was too lazy or not courageous enough to get rid of the ad hoc versions and enforce the new versions throughout. By all means, if you or anybody else wants to refactor this, go ahead.<br>\n</p>\n</blockquote>",
        "id": 489992061,
        "sender_full_name": "Email Gateway",
        "timestamp": 1734623341
    }
]