[
    {
        "content": "<p>Hi all, I am working with the vector/matrix framework provided  by Jordan_Normal_Form from the AFP. I am wondering if there are connections between this framework and topological notions. For instance, given n, I'd like to state that the n-dimensional sphere (as a subset of <code>carrier_vec n</code>) is compact.</p>",
        "id": 441350029,
        "sender_full_name": "Sage Binder",
        "timestamp": 1717029690
    },
    {
        "content": "<p>There is a weak connection that requires work. The Jordan Normal Form matrices have been connected to <a href=\"https://isabelle.in.tum.de/dist/library/HOL/HOL-Analysis/Finite_Cartesian_Product.html\">HOL matrices</a> (their type denoted <code>'a ^ 'n</code>). See what the authors claim in <a href=\"https://www.isa-afp.org/entries/Perron_Frobenius.html\">this AFP entry</a>. If you find that they are using an isomorphism, you could prove the following:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"s\">\"compact (sphere x r)\"</span><span class=\"w\"> </span><span class=\"kp\">for</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"('a::{metric_space, heine_borel})^'n\"</span>\n<span class=\"w\">  </span><span class=\"k\">unfolding</span><span class=\"w\"> </span><span class=\"n\">compact_eq_bounded_closed</span>\n<span class=\"w\">  </span><span class=\"k\">unfolding</span><span class=\"w\"> </span><span class=\"n\">bounded_def</span><span class=\"w\"> </span><span class=\"n\">closed_def</span><span class=\"w\"> </span><span class=\"n\">open_contains_ball</span>\n<span class=\"w\">  </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"n\">safe</span>\n<span class=\"w\">   </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">metis</span><span class=\"w\"> </span><span class=\"n\">less_eq_real_def</span><span class=\"w\"> </span><span class=\"n\">mem_sphere</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"n\">clarsimp</span>\n<span class=\"w\">  </span><span class=\"n\">subgoal</span><span class=\"w\"> </span><span class=\"kp\">for</span><span class=\"w\"> </span><span class=\"n\">y</span>\n<span class=\"w\">    </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">cases</span><span class=\"w\"> </span><span class=\"s\">\"dist x y &gt; r\"</span><span class=\"o\">)</span>\n<span class=\"w\">     </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">rule_tac</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"s\">\"dist x y - r\"</span><span class=\"w\"> </span><span class=\"kp\">in</span><span class=\"w\"> </span><span class=\"n\">exI</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">clarsimp</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">metis</span><span class=\"w\"> </span><span class=\"n\">add.commute</span><span class=\"w\"> </span><span class=\"n\">add_less_cancel_left</span><span class=\"w\"> </span><span class=\"n\">diff_add_cancel</span><span class=\"w\"> </span><span class=\"n\">dist_commute</span><span class=\"w\"> </span><span class=\"n\">dist_triangle</span><span class=\"w\"> </span><span class=\"n\">linorder_not_less</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">rule_tac</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"s\">\"r - dist x y\"</span><span class=\"w\"> </span><span class=\"kp\">in</span><span class=\"w\"> </span><span class=\"n\">exI</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">clarsimp</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"kp\">apply</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">metis</span><span class=\"w\"> </span><span class=\"n\">add.commute</span><span class=\"w\"> </span><span class=\"n\">add_less_cancel_left</span><span class=\"w\"> </span><span class=\"n\">diff_add_cancel</span><span class=\"w\"> </span><span class=\"n\">dist_commute</span><span class=\"w\"> </span><span class=\"n\">dist_triangle</span><span class=\"w\"> </span><span class=\"n\">linorder_not_less</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"k\">done</span>\n<span class=\"w\">  </span><span class=\"k\">done</span>\n</code></pre></div>\n<p>and then you could try to connect this result to the JNF-matrices via their isomorphism.</p>\n<p>Unfortunately, using the <code>find_theorems</code> command (i.e. <code>find_theorems name: compact name: sphere</code>) from the Perron_Frobenius AFP entry, only throws the standard theorem from HOL-Analysis (<code>Elementary_Normed_Spaces.compact_sphere</code>). Also, <code>SErAPIS</code> does not show anything after a <a href=\"https://behemoth.cl.cam.ac.uk/search/index.php?id=1663cc25a05621&amp;sid=16658475d80a6b&amp;query=compact+sphere&amp;kind=any&amp;method=method8\">quick search</a>.</p>",
        "id": 441425432,
        "sender_full_name": "Jonathan Julian Huerta y Munive",
        "timestamp": 1717063947
    },
    {
        "content": "<p>Ah, thank you for the direction! The connection in that AFP entry looks alright to work with.</p>\n<p>For posterity: after asking the question, I came across a similar kind of isomorphism between the HOL matrices and JNF matrices provided by the Complex_Bounded_Operators AFP entry, but to my (inexperienced) eye, it looked more difficult to work with than the connection in Perron_Frobenius.</p>",
        "id": 441649078,
        "sender_full_name": "Sage Binder",
        "timestamp": 1717144355
    }
]