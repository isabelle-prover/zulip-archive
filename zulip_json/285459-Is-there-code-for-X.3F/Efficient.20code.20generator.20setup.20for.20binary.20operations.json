[
    {
        "content": "<p>I'm wondering if there is any code generator setup <strong>on type int/nat</strong> for bit operations like AND, OR, XOR, NOT as well as bit shifts, bitlen, etc. Even when I include <code>HOL-Library.Code_Target_Numeral</code> these get translated to horribly inefficient integer arithmetic involving multiplication/division.</p>\n<p>I am aware of the word library, which does these things for fixed-width integers, but I need it for arbitrary-precision integers.</p>\n<p>I do have a proof-of-concept code generator  setup for SML and Haskell that I could put in the distribution, but I want to make sure I'm not reinventing the wheel here.</p>",
        "id": 443079904,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1717685642
    },
    {
        "content": "<p>I just found this: <a href=\"https://www.isa-afp.org/entries/Native_Word.html\">https://www.isa-afp.org/entries/Native_Word.html</a></p>\n<p>That does include some of the things I want, but not all of them; in particular no support for things like <code>bitlen</code> or <code>floorlog2</code>.</p>\n<p>In any case I think this should really go into the distribution.</p>",
        "id": 443080776,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1717685891
    },
    {
        "content": "<p>Agreed. On the other hand,  I am always curious why many other more dedicated projects like 'MicroJava' and several protocol verifications are in the distribution. Not sure if they are re-used that often these days.</p>",
        "id": 443252293,
        "sender_full_name": "Wenda Li",
        "timestamp": 1717752352
    },
    {
        "content": "<p>Historic reasons. These predate the AFP, I think. The last time I suggested that they be moved to the AFP I think I was told that these are not interesting enough or not \"nice\" enough to be moved there.</p>",
        "id": 443252934,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1717752539
    },
    {
        "content": "<p>I see. Probably something we can do in the future. I do think the standard library should ideally be more actively maintained/reused than an 'archive'~</p>",
        "id": 443256837,
        "sender_full_name": "Wenda Li",
        "timestamp": 1717753809
    },
    {
        "content": "<p>I would definitely second that.</p>",
        "id": 443257208,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1717753936
    },
    {
        "content": "<p>But generally there is the problem that the barrier between the distribution and the AFP is not very well-defined</p>",
        "id": 443257278,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1717753955
    },
    {
        "content": "<p>There's also all these \"ex\"/\"examples\" theories in the distribution, but I think I don't really mind those.</p>",
        "id": 443257370,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1717753986
    },
    {
        "content": "<p>I did e.g. move Bernoulli from there to the AFP once though because I needed it.</p>",
        "id": 443257424,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1717754002
    },
    {
        "content": "<p>(and significantly extended it in the process)</p>",
        "id": 443257466,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1717754012
    }
]