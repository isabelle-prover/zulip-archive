[
    {
        "content": "<p>Is there a concurrent separation logic in Isabelle for imperative language? I found <a href=\"https://www.isa-afp.org/entries/Separation_Logic_Imperative_HOL.html\">A Separation Logic Framework for Imperative HOL</a> but that's not designed for concurrent imperative language like C and I wonder if there is a such framework as <a href=\"https://iris-project.org/\">Iris</a> in Coq? Maybe the framework developed by <a href=\"https://people.mpi-sws.org/~viktor/cslsound/\">Viktor Vafeiadis</a> is the most relevant one. But I wonder if there is a more well-developed framework that supports better syntax and detailed features.  Further, Is there an implementation of RGSep or local rely guarantee in Isabelle?</p>",
        "id": 312175732,
        "sender_full_name": "HuanSun",
        "timestamp": 1669379281
    },
    {
        "content": "<p>The closest to Iris in Isabelle is the experimental <a href=\"https://github.com/firefighterduck/isariris\">isariris</a></p>",
        "id": 312177500,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1669379780
    },
    {
        "content": "<p>Thanks a lot!  How about the RGSep or LRG? Are there some implementations in Isabelle?</p>",
        "id": 312185862,
        "sender_full_name": "HuanSun",
        "timestamp": 1669382499
    },
    {
        "content": "<p>I don't know about that.</p>",
        "id": 312190456,
        "sender_full_name": "Fabian Huch",
        "timestamp": 1669383893
    },
    {
        "content": "<p>That's ok, you have helped me a lot!</p>",
        "id": 312190985,
        "sender_full_name": "HuanSun",
        "timestamp": 1669384046
    }
]