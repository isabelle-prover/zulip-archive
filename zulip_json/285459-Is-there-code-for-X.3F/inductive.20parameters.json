[
    {
        "content": "<p>Hi all,<br>\nI can get most information about an inductive predicate in HOL by using <code>Inductive.the_inductive</code> — but that does not seem to contain the number of inductive parameters that was given in the definition (or any other information about them). Anyone know of a way to get that information?</p>",
        "id": 295020358,
        "sender_full_name": "stuebinm",
        "timestamp": 1661338196
    },
    {
        "content": "<p>mmh, isn't that information contained in the type?</p>",
        "id": 295058712,
        "sender_full_name": "Mathias Fleury",
        "timestamp": 1661351391
    },
    {
        "content": "<p>You mean the type returned by <code>the_inductive</code>? I don't think it is — it returns a value of type <code>info</code>, which is defined as <code>{names: string list, coind: bool} * result</code>, with <code>result</code> being <code>{preds: term list, elims: thm list, raw_induct: thm, induct: thm, inducts: thm list, intrs: thm list, eqs: thm list}</code>. Of course the number of parameters is <em>indirectly</em> contained in e.g. the induction rule <code>induct</code>, but reconstructing it from that seems very brittle (not to mention hacky), and I'm not sure how to do it reliably.</p>",
        "id": 295077293,
        "sender_full_name": "stuebinm",
        "timestamp": 1661357130
    }
]