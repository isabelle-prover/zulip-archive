[
    {
        "content": "<p>I want a function to convert nat to string and satisfies that <code> n1 ≠ n2  ⟹  f n1 ≠ f n2 </code>.  A question in <a href=\"https://stackoverflow.com/questions/23864965/string-of-nat-in-isabelle\">stackoverflow</a> have provided serval functions that convert a nat to its corresponding string. However, It seems not easy to prove the property <code> n1 ≠ n2  ⟹  f n1 ≠ f n2 </code>. So is there a simple proof for functions in <a href=\"https://stackoverflow.com/questions/23864965/string-of-nat-in-isabelle\">stackoverflow</a> or just a easier way to define a function that satisfies <code> n1 ≠ n2  ⟹  f n1 ≠ f n2 </code>?</p>",
        "id": 316036791,
        "sender_full_name": "HuanSun",
        "timestamp": 1671109917
    },
    {
        "content": "<p>My quick attempt at this:</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">theory</span><span class=\"w\"> </span><span class=\"n\">NatToString</span><span class=\"w\"> </span><span class=\"kp\">imports</span><span class=\"w\"> </span><span class=\"n\">Main</span>\n<span class=\"k\">begin</span>\n\n<span class=\"k\">fun</span><span class=\"w\"> </span><span class=\"n\">char_of_digit</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"nat ⇒ char\"</span><span class=\"w\"> </span><span class=\"kp\">where</span>\n<span class=\"w\">  </span><span class=\"s\">\"char_of_digit n = char_of (n + 48)\"</span>\n\n<span class=\"k\">fun</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">::</span><span class=\"w\"> </span><span class=\"s\">\"nat ⇒ string\"</span><span class=\"w\"> </span><span class=\"kp\">where</span>\n<span class=\"w\">  </span><span class=\"s\">\"f n = (if n &lt; 10 then [char_of_digit n] else (f (n div 10) @ [(char_of_digit (n mod 10))]))\"</span>\n\n<span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"n\">nat_notequal_mod_10</span><span class=\"o\">:</span>\n<span class=\"w\">  </span><span class=\"kp\">assumes</span><span class=\"w\"> </span><span class=\"s\">\"(n::nat) ≠ m\"</span><span class=\"w\"> </span><span class=\"kp\">shows</span><span class=\"w\"> </span><span class=\"s\">\"(n div 10 ≠ m div 10 ∨ n mod 10 ≠ m mod 10 )\"</span>\n<span class=\"k\">proof</span><span class=\"w\"> </span><span class=\"o\">-</span>\n<span class=\"w\">  </span><span class=\"ow\">{</span>\n<span class=\"w\">    </span><span class=\"k\">assume</span><span class=\"w\"> </span><span class=\"s\">\"n div 10 = m div 10 ∧ n mod 10 = m mod 10\"</span>\n<span class=\"w\">    </span><span class=\"k\">hence</span><span class=\"w\"> </span><span class=\"s\">\"n div 10 * 10 + n mod 10 = m div 10 * 10 + m mod 10\"</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">presburger</span>\n<span class=\"w\">    </span><span class=\"k\">hence</span><span class=\"w\"> </span><span class=\"s\">\"n = m\"</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">presburger</span>\n<span class=\"w\">    </span><span class=\"k\">with</span><span class=\"w\"> </span><span class=\"n\">assms</span><span class=\"w\"> </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"n\">False</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">blast</span>\n<span class=\"w\">  </span><span class=\"ow\">}</span>\n<span class=\"w\">  </span><span class=\"k\">thus</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"n\">thesis</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">blast</span>\n<span class=\"k\">qed</span>\n\n<span class=\"kn\">lemma</span><span class=\"w\"> </span><span class=\"s\">\"n ≠ m ⟹ f n ≠ f m\"</span>\n<span class=\"k\">proof</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">induction</span><span class=\"w\"> </span><span class=\"n\">arbitrary</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"n\">rule</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">f.induct</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">1</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"o\">)</span>\n<span class=\"w\">  </span><span class=\"ow\">{</span>\n<span class=\"w\">    </span><span class=\"k\">assume</span><span class=\"w\"> </span><span class=\"s\">\"m div 10 ≠ n div 10\"</span>\n<span class=\"w\">    </span><span class=\"k\">with</span><span class=\"w\"> </span><span class=\"n\">1</span><span class=\"o\">(</span><span class=\"n\">1</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"k\">have</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">auto</span>\n<span class=\"w\">  </span><span class=\"ow\">}</span><span class=\"w\"> </span><span class=\"k\">note</span><span class=\"w\"> </span><span class=\"n\">case1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">this</span>\n<span class=\"w\">  </span><span class=\"ow\">{</span>\n<span class=\"w\">    </span><span class=\"k\">assume</span><span class=\"w\"> </span><span class=\"s\">\"m mod 10 ≠ n mod 10\"</span>\n<span class=\"w\">    </span><span class=\"k\">hence</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">auto</span>\n<span class=\"w\">  </span><span class=\"ow\">}</span><span class=\"w\"> </span><span class=\"k\">note</span><span class=\"w\"> </span><span class=\"n\">case2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">this</span>\n<span class=\"w\">  </span><span class=\"ow\">{</span>\n<span class=\"w\">    </span><span class=\"k\">assume</span><span class=\"w\"> </span><span class=\"s\">\"m div 10 = n div 10\"</span><span class=\"w\"> </span><span class=\"s\">\"m mod 10 = n mod 10\"</span>\n<span class=\"w\">    </span><span class=\"k\">hence</span><span class=\"w\"> </span><span class=\"n\">False</span><span class=\"w\"> </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">nat_notequal_mod_10</span><span class=\"w\"> </span><span class=\"s\">‹n ≠ m›</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">simp</span>\n<span class=\"w\">  </span><span class=\"ow\">}</span><span class=\"w\"> </span><span class=\"k\">note</span><span class=\"w\"> </span><span class=\"n\">case3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">this</span>\n<span class=\"w\">  </span><span class=\"k\">from</span><span class=\"w\"> </span><span class=\"n\">case1</span><span class=\"w\"> </span><span class=\"n\">case2</span><span class=\"w\"> </span><span class=\"n\">case3</span><span class=\"w\"> </span><span class=\"k\">show</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"k\">by</span><span class=\"w\"> </span><span class=\"n\">blast</span>\n<span class=\"k\">qed</span>\n\n<span class=\"k\">end</span>\n<span class=\"sx\">``</span>\n</code></pre></div>",
        "id": 328192437,
        "sender_full_name": "Adrián Löwenberg",
        "timestamp": 1676540930
    }
]