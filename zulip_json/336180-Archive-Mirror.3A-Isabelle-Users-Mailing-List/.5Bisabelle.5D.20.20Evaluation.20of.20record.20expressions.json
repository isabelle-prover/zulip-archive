[
    {
        "content": "<p>From: Michael Vu &lt;<a href=\"mailto:michael.vu@rwth-aachen.de\">michael.vu@rwth-aachen.de</a>&gt;<br>\nDear isabelle experts,</p>\n<p>I am currently working with records and I'm trying to write a small automation tool for generating calculations. But I'm stuck at proving some simple expressions like this one:</p>\n<p>record state =<br>\n  t  :: real<br>\n  c :: real</p>\n<p>lemma weakly_bounded:<br>\n\"0 &lt; a ⟹<br>\n    a &lt; 1 ⟹<br>\n    0 &lt; b ⟹<br>\n    b &lt; 1 ⟹<br>\n    0 &lt; a + b - a * b ⟹<br>\n    ∀s. t s = 0 ∨ t s = 1 ⟹<br>\n    ∀s. c s = 0 ∨ c s = 1 ⟹<br>\n    λs. (if t s = 0 ∧ c s = 0 then 1 else 0) + (if t s = 0 ∧ c s = 1 then 1 else 0) * a / (a + b - a * b) +<br>\n        (if t s = 1 ∧ c s = 1 then 1 else 0) * (1 - b) * a /<br>\n        (a + b -<br>\n         a * b) ⊩ λs. (if c s ≠ 1 then 1 else 0) *\n                      ((if t s = 0 ∧ c s = 0 then 1 else 0) + (if t s = 0 ∧ c s = 1 then 1 else 0) * a / (a + b - a * b) +<br>\n                       (if t s = 1 ∧ c s = 1 then 1 else 0) * (1 - b) * a / (a + b - a * b))\"</p>\n<p>I thought simp would be enough to evaluate this, but it seems not to be the case. So I am looking for a way to make isabelle automatically verify<br>\nall possible states (the space is finite due to the conditions). I would appreciate every help.</p>\n<p>And secondly I've another cosmetic question. Given following subgoals:</p>\n<ol>\n<li>0 &lt; a ⟹ a &lt; 1 ⟹ 0 &lt; b ⟹ b &lt; 1 ⟹ 0 ≤ a</li>\n<li>0 &lt; a ⟹ a &lt; 1 ⟹ 0 &lt; b ⟹ b &lt; 1 ⟹ 0 ≤ 1 - b</li>\n<li>0 &lt; a ⟹ a &lt; 1 ⟹ 0 &lt; b ⟹ b &lt; 1 ⟹ 0 ≤ a</li>\n<li>some complicated subgoal<br>\napply(simp) <br>\napply(simp)<br>\napply(simp) </li>\n</ol>\n<p>Is there any more elegant way other than to invoke simp 3 times? I also tried \"auto\" but it gets stuck on subgoal 4. </p>\n<p>Thanks in advance!<br>\nMichael</p>",
        "id": 294253546,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660911711
    }
]