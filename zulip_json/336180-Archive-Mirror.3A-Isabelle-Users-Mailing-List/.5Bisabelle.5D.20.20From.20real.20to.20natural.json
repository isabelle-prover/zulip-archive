[
    {
        "content": "<p>From: José Manuel Rodriguez Caballero &lt;<a href=\"mailto:josephcmac@gmail.com\">josephcmac@gmail.com</a>&gt;<br>\nHello,<br>\n  In informal mathematics, when an identity is true for real numbers, it is<br>\nautomatically true for natural numbers. How this informal principle could<br>\nbe formalized in Isabelle?</p>\n<p>For example, I want to prove that</p>\n<p>\"a ≥ 1 ⟹ (k::nat)<em>(k+2</em>a-1) + 2<em>(a + k) = (Suc k)</em>((Suc k)+2*a-1)\"</p>\n<p>My idea was to prove it for real numbers first (without the unnecessary<br>\nrestriction a ≥ 1) and then to use reductio ad absurdum with natural<br>\nnumbers, but I think that there should be an easier way to do it. Also, if<br>\nI'm not mistaken, it is easier to prove identities for real in Isabelle<br>\nthan for nat.</p>\n<p>Kind Regards,<br>\nJose M.</p>\n<p>lemma HDGFHFreal: \"(k::real)<em>(k+2</em>a-1) + 2<em>(a + k) = (k+1)</em>((k+1)+2*a-1)\"<br>\n  by (smt mult.commute semiring_normalization_rules(3))</p>\n<p>lemma HDGFHF: \"a ≥ 1 ⟹ (k::nat)<em>(k+2</em>a-1) + 2<em>(a + k) = (Suc k)</em>((Suc<br>\nk)+2*a-1)\"<br>\nproof (rule classical)<br>\n  obtain kk where \"kk = real k\" by simp<br>\n  obtain aa where \"aa = real a\" by simp<br>\n  assume \"a ≥ 1\"<br>\n  assume \"¬ (k<em>(k+2</em>a-1) + 2<em>(a + k) = (Suc k)</em>((Suc k)+2*a-1))\"<br>\n  then have \"(k<em>(k+2</em>a-1) + 2<em>(a + k) ≠ (k+1)</em>((k+1)+2*a-1))\" by simp<br>\n  then have \"real  (k<em>(k+2</em>a-1) + 2<em>(a + k)) ≠ real ((k+1)</em>((k+1)+2*a-1))\"<br>\n    using of_nat_eq_iff by blast<br>\n  then have  \"(kk<em>(kk+2</em>aa-1) + 2<em>(aa + kk)) ≠ ((kk+1)</em>((kk+1)+2*aa-1))\"<br>\n    using diff_mult_distrib2 by auto<br>\n  then have False<br>\n    using ‹k * (k + 2 * a - 1) + 2 * (a + k) ≠ (k + 1) * (k + 1 + 2 * a -<br>\n1)› diff_mult_distrib2 by auto<br>\n  then show ?thesis by blast<br>\n  qed</p>",
        "id": 294738427,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190630
    }
]