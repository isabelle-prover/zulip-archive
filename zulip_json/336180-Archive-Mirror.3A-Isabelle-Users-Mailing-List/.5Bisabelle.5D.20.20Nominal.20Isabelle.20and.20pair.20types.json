[
    {
        "content": "<p>From: Christian Urban &lt;<a href=\"mailto:urbanc@in.tum.de\">urbanc@in.tum.de</a>&gt;<br>\nHi Rob,</p>\n<p>I am slightly unsure what exactly you are trying to do. If you<br>\nwant to have pairs built up by simple_labels and formulae,<br>\nthen the following works</p>\n<p>atom_decl simple_label prop_var</p>\n<p>datatype formula =<br>\n     Atom \"prop_var\"<br>\n   | Impl \"formula\" \"formula\"<br>\n   | Conj \"formula\" \"formula\"<br>\n   | Disj \"formula\" \"formula\"<br>\n   | Bottom</p>\n<p>types labelled_formula = \"simple_label * formula\"</p>\n<p>constdefs<br>\n   get_label :: \"labelled_formula =&gt; simple_label\"<br>\n   \"get_label lf == (fst lf)\"<br>\n   get_formula :: \"labelled_formula =&gt; formula\"<br>\n   \"get_formula lf == (snd lf)\"</p>\n<p>Note that the construction \\&lt;guillemotleft&gt;simple_label\\&lt;guillemotright&gt;<br>\nis for a binder of type simple_label. Your formulae, however, do not<br>\ncontain any simple_labels, so the binding would always be vacuous. This<br>\nis nearly always not what is intended.</p>\n<blockquote>\n<p>I am experimenting with using Nominal Isabelle for labelled  <br>\ndeductive systems.</p>\n</blockquote>\n<p>Feel free to subscribe to the dedicated Nominal Isabelle mailing list.<br>\nSee</p>\n<p><a href=\"http://isabelle.in.tum.de/nominal/\">http://isabelle.in.tum.de/nominal/</a></p>\n<p>Hope this helps,<br>\nChristian</p>",
        "id": 294063975,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660824771
    }
]