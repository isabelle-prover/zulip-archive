[
    {
        "content": "<p>From: \"Eugene W. Stark\" &lt;<a href=\"mailto:isabelle-users@starkeffect.com\">isabelle-users@starkeffect.com</a>&gt;<br>\nI was surprised by this, and I was wondering if it is supposed to be able to happen.<br>\nI have the following lemma:</p>\n<p>lemma bij_betw_Arr_arr:<br>\n    shows \"bij_betw Some (Collect Arr) (Collect C.arr)\"</p>\n<p>I can prove it in two ways:</p>\n<p>proof (intro bij_betwI)<br>\n      show \"Some ∈ Collect Arr → Collect C.arr\" using arr_char by auto<br>\n      show \"the ∈ Collect C.arr → Collect Arr\" using arr_char by auto<br>\n      show \"⋀x. x ∈ Collect Arr ⟹ the (Some x) = x\" by auto<br>\n      show \"⋀y. y ∈ Collect C.arr ⟹ Some (the y) = y\" using arr_char by auto<br>\n    qed (* Succeeds *)</p>\n<p>using arr_char<br>\n      by (smt bij_betwI' mem_Collect_eq option.collapse option.distinct(1) option.sel)<br>\n      (* Succeeds *)</p>\n<p>However, the following fails:</p>\n<p>apply (intro bij_betwI) using arr_char apply auto (* subgoal appears false *)<br>\n      try (* Nitpick produces counterexample *)</p>\n<p>For some reason, I had in my mind that auto should not produce false subgoals from<br>\nprovable goals.</p>\n<p>By the way, the lemma occurs in a locale context, but I have elsewhere shown the<br>\nlocale consistent by exhibiting a concrete interpretation.  So it is not the case<br>\nthat the locale assumptions are inconsistent.</p>\n<p>- Gene Stark</p>",
        "id": 294663263,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661170744
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nIn my experience, this is uncommon, but it does happen, and to my <br>\nknowledge, this is perfectly normal.</p>\n<p>I did not look at your example (the definitions of Arr etc. are missing, <br>\nif I see it correctly), but my guess would be that in this case, the <br>\nproblem is with schematic variables. Applying \"existential\" rules (like <br>\nexI) introduces schematic variable into the goals, and at some point, <br>\nyou have to decide how to instantiate them. If \"auto\" instantiates one <br>\nof these schematic variables incorrectly, you may well end up with <br>\nsomething unprovable.</p>\n<p>Cheers,</p>\n<p>Manuel</p>",
        "id": 294663284,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661170750
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear Eugene,</p>\n<p>It is normal behaviour that auto transforms a provable goal into something unprovable. <br>\nThis happens particularly often if (1) you have declared a rule as safe (intro!, elim!, <br>\ndest!) which is actually not safe or (2) your subgoals contain schematic variables (?x).<br>\nThe latter may be the reason in your case because the \"intro bij_betwI\" introduces the <br>\nschematic variable ?g in your goal state.</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 294663293,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661170756
    },
    {
        "content": "<p>From: \"Eugene W. Stark\" &lt;<a href=\"mailto:isabelle-users@starkeffect.com\">isabelle-users@starkeffect.com</a>&gt;<br>\nI wouldn't be surprised if the resulting subgoal was simply unprovable.<br>\nWhat I am surprised about is the fact that it is false.  But I suppose<br>\nthat an incorrect instantiation of a schematic variable could produce<br>\nthis behavior.  In my limited mind's eye view of how theorem provers work,<br>\nI was assuming that the instances would be generated by unification<br>\nduring resolution or something, which would not reduce true goals to<br>\nfalse (not merely unprovable) subgoals.</p>\n<p>- Gene Stark</p>",
        "id": 294663307,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661170763
    }
]