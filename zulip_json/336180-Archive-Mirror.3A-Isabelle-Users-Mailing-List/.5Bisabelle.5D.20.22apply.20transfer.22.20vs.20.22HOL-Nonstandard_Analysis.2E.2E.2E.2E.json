[
    {
        "content": "<p>From: José Manuel Rodríguez Caballero &lt;<a href=\"mailto:josephcmac@gmail.com\">josephcmac@gmail.com</a>&gt;<br>\nHello,<br>\n  I tried to import the nonstandard analysis libraries but there is a<br>\nproblem with \"apply transfer\" in the instantiation below. More concretely,<br>\nwhen I add to \"import\" the library</p>\n<p>\"HOL-Nonstandard_Analysis.HSEQ\"</p>\n<p>I obtain the following error message:</p>\n<p>Failed to refine any pending goal<br>\nLocal statement fails to refine any pending goal<br>\nFailed attempt to solve goal by exported rule:<br>\n  (bounded_clinear ?aa2) ⟹<br>\n  (bounded_clinear ?ba2) ⟹<br>\n  (bounded_clinear ?ca2) ⟹<br>\n  Abs_bounded (λt. Rep_bounded (Abs_bounded (λt. ?aa2 t + ?ba2 t)) t + ?ca2<br>\nt) =<br>\n  Abs_bounded (λt. ?aa2 t + Rep_bounded (Abs_bounded (λt. ?ba2 t + ?ca2 t))<br>\nt)</p>\n<p>Without importing this library, the proof was fine. This is the code where<br>\nthe problem appeared:</p>\n<p>instantiation bounded :: (complex_normed_vector, complex_normed_vector)<br>\n\"semigroup_add\"<br>\nbegin<br>\nlift_definition plus_bounded :: \"('a,'b) bounded ⇒ ('a,'b) bounded ⇒<br>\n('a,'b) bounded\" is<br>\n  ‹λ f g. Abs_bounded (λ t. (Rep_bounded f) t + (Rep_bounded g) t)›.<br>\ninstance<br>\nproof<br>\n  fix a b c :: ‹('a::complex_normed_vector, 'b::complex_normed_vector)<br>\nbounded›<br>\n  show ‹a + b + c = a + (b + c)›<br>\n    apply transfer<br>\n  proof transfer<br>\n    fix a b c::‹'a ⇒ 'b›<br>\n    assume ‹bounded_clinear a›<br>\n      and ‹bounded_clinear b›<br>\n      and ‹bounded_clinear c›<br>\n    have  ‹(λt.  ( (λt. a t + b t)) t + c t)<br>\n          = (λt. a t +  ( (λt. b t + c t)) t)›<br>\n      by (simp add: ordered_field_class.sign_simps(1))<br>\n    hence  ‹(λt.  ( (λt. a t + b t)) t + c t)<br>\n          = (λt. a t + Rep_bounded (Abs_bounded (λt. b t + c t)) t)›<br>\n      by (simp add: Abs_bounded_inverse ‹bounded_clinear b›<br>\n‹bounded_clinear c› bounded_clinear_add)<br>\n    hence  ‹(λt. Rep_bounded (Abs_bounded (λt. a t + b t)) t + c t)<br>\n          = (λt. a t + Rep_bounded (Abs_bounded (λt. b t + c t)) t)›<br>\n      using Abs_bounded_inverse<br>\n      by (simp add: Abs_bounded_inverse ‹bounded_clinear a›<br>\n‹bounded_clinear b› bounded_clinear_add)<br>\n    thus ‹Abs_bounded<br>\n        (λt. Rep_bounded (Abs_bounded (λt. a t + b t)) t + c t) =<br>\n       Abs_bounded<br>\n        (λt. a t + Rep_bounded (Abs_bounded (λt. b t + c t)) t)›<br>\n      by simp<br>\n  qed<br>\nqed<br>\nend</p>\n<p>Link:<br>\n<a href=\"https://github.com/dominique-unruh/bounded-operators/blob/master/Bounded_Operators.thy\">https://github.com/dominique-unruh/bounded-operators/blob/master/Bounded_Operators.thy</a></p>\n<p>Kind Regards,<br>\nJosé M.</p>",
        "id": 294758582,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661198523
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:mail@andreas-lochbihler.de\">mail@andreas-lochbihler.de</a>&gt;<br>\nDear Jose,</p>\n<p>Non-standard analysis defines its own proof method \"transfer\", which transfers first-order <br>\nstatements about the standard numbers to the non-standard numbers. So the \"transfer\" proof <br>\nmethod from the Transfer package is shadowed. You can still access it by its full name <br>\n\"Transfer.transfer\".</p>\n<p>Hope this helps,<br>\nAndreas</p>",
        "id": 294758645,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661198545
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nDear all,</p>\n<p>it could be worth thinking about giving that particular nonstandard<br>\nanalysis transfer machinery qualified names, but so far I did not come<br>\nup with a suitable prefix.</p>\n<p>Cheers,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/OSeIaisHdx06yYp46xPbQw2c/signature.asc\">signature.asc</a></p>",
        "id": 294758819,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661198621
    },
    {
        "content": "<p>From: José Manuel Rodriguez Caballero &lt;<a href=\"mailto:josephcmac@gmail.com\">josephcmac@gmail.com</a>&gt;<br>\nI agree with Florian’s proposal for changing some names in the library of Nonstandard Analysis (see below). Another problem with the compatibility is that in this library, the Greek letter epsilon is used in a rather unfamiliar way and the role of the traditional epsilon in Analysis is played by the letter e, which collapses with the notation for Euler’s number.</p>\n<p>It is important to remark that nonstandard numbers play an important role in model theory, e.g., in the proof that Goodstein theorem cannot be proved using just Peano Axioms. There is a project to formalize that in Coq by Prof. Pierre Casteran.</p>\n<p>Kind Regards,<br>\nJosé M.</p>\n<p>Sent from my iPhone</p>",
        "id": 294758847,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661198633
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:mail@andreas-lochbihler.de\">mail@andreas-lochbihler.de</a>&gt;<br>\nDear Florian,</p>\n<p>What about \"nsa_transfer\"? Non-standard analysis used to be abbreviated as NSA for a long <br>\ntime in Isabelle.</p>\n<p>Andreas</p>",
        "id": 294758917,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661198650
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;</p>\n<blockquote>\n<p>What about \"nsa_transfer\"? Non-standard analysis used to be abbreviated<br>\nas NSA for a long time in Isabelle.</p>\n</blockquote>\n<p>Did we ever consider »hyper«?</p>\n<p>I.e. »hyper.transfer«, »»hyper.transfer_intro« etc.</p>\n<p>Florian</p>\n<blockquote>\n<p>Andreas</p>\n<p>On 23/06/2019 11:25, Florian Haftmann wrote:</p>\n<blockquote>\n<p>Dear all,</p>\n<blockquote>\n<p>Non-standard analysis defines its own proof method \"transfer\", which<br>\ntransfers first-order statements about the standard numbers to the<br>\nnon-standard numbers. So the \"transfer\" proof method from the Transfer<br>\npackage is shadowed. You can still access it by its full name<br>\n\"Transfer.transfer\".</p>\n</blockquote>\n<p>it could be worth thinking about giving that particular nonstandard<br>\nanalysis transfer machinery qualified names, but so far I did not come<br>\nup with a suitable prefix.</p>\n<p>Cheers,<br>\n    Florian<br>\n</p>\n</blockquote>\n<p><a href=\"/user_uploads/14278/VqA0UauVRLDphNtOpNcFd9ee/signature.asc\">signature.asc</a></p>\n</blockquote>",
        "id": 294758923,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661198652
    },
    {
        "content": "<p>From: Jacques Fleuriot &lt;<a href=\"mailto:jdf@inf.ed.ac.uk\">jdf@inf.ed.ac.uk</a>&gt;<br>\nNSA is a standard acronym for nonstandard analysis, so nsa.transfer would make sense.</p>\n<p>Jacques</p>",
        "id": 294758942,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661198658
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nThat’s interesting to know. I hope that somebody will feel inspired to do something with this library.</p>\n<p>Larry</p>",
        "id": 294759023,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661198695
    }
]