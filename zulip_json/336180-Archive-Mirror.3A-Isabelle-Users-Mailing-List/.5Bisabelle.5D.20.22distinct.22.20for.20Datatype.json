[
    {
        "content": "<p>From: 後藤　裕貴 &lt;<a href=\"mailto:auf75646@kwansei.ac.jp\">auf75646@kwansei.ac.jp</a>&gt;<br>\nDear Sirs/Madams,</p>\n<p>I'd like to ask a question.<br>\nThe contents are as follows:</p>\n<p>datatype<br>\n  char = A | B | C | D | E | F</p>\n<p>type_synonym str = \"char list\"</p>\n<p>datatype  Type = PInt | PDouble</p>\n<p>datatype Gvar = GV Type str</p>\n<p>fun gvar_changename :: \"str \\&lt;Rightarrow&gt; Gvar list \\&lt;Rightarrow&gt; Gvar list\" where<br>\n\"gvar_changename xs gl = map (%x. case x of (GV x y) \\&lt;Rightarrow&gt; (GV x (xs@y)) ) gl\"</p>\n<p>fun gvl2strl :: \"Gvar list \\&lt;Rightarrow&gt; str list\" where<br>\n\"gvl2strl gl = map (%x. case x of (GV a b) \\&lt;Rightarrow&gt; b) gl\"</p>\n<p>lemma limitation_gl_test : \"(distinct (gvl2strl gl)) &amp; (\\&lt;forall&gt;x \\&lt;in&gt; set (gvl2strl gl). x \\&lt;noteq&gt; []  )<br>\n  \\&lt;Longrightarrow&gt; (distinct (gvl2strl (gvar_changename pr gl)  ))\"<br>\napply (simp only:gvl2strl.simps)<br>\napply (simp add:distinct_map)<br>\napply (simp add:inj_on_def)<br>\napply auto</p>\n<p>This lemma is not solved.<br>\nI want to make \"distinct (str list)\", but \"distinct gl\" originally appears in the premise part.<br>\nYour help would be appreciated.</p>\n<p>Sincerely,</p>\n<p>Goto</p>\n<hr>\n<p>Yuki Goto<br>\nInformation Technology Major<br>\nKwansei Gakuin University<br>\nHyogo, Japan<br>\nE-mail: <a href=\"mailto:auf75646@kwansei.ac.jp\">auf75646@kwansei.ac.jp</a></p>\n<hr>",
        "id": 294222524,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660898271
    }
]