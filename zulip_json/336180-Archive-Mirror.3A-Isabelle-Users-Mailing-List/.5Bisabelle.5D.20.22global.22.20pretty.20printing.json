[
    {
        "content": "<p>From: Steffen Juilf Smolka &lt;<a href=\"mailto:steffen.smolka@in.tum.de\">steffen.smolka@in.tum.de</a>&gt;<br>\nHi,<br>\nwhat is the difference between the normal and the global pretty printing functions defined in syntax.ML?</p>\n<p>Best regards,<br>\nSteffen</p>",
        "id": 294242926,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660907753
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nHere is a relevant quotation from the \"implementation\" manual:</p>\n<p>\\item The name component @{ML_text global} means that this works<br>\n   with the background theory instead of the regular local context<br>\n   (\\secref{sec:context}), sometimes for historical reasons, sometimes<br>\n   due a genuine lack of locality of the concept involved, sometimes as<br>\n   a fall-back for the lack of a proper context in the application<br>\n   code.  Whenever there is a non-global variant available, the<br>\n   application should be migrated to use it with a proper local<br>\n   context.</p>\n<p>Under normal circumstances you don't use global things, other than for <br>\nhistorical reasons, or very special situations.</p>\n<p>Sometimes people think that the normal local Proof.context is too complex, <br>\nand should thus be avoided by falling back on good-old global stuff, but <br>\nthat is the wrong approach.  It requires quite some expertise on both <br>\nlocal vs. global operations to use old global stuff in the proper way.</p>\n<p>Makarius</p>",
        "id": 294243384,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660907931
    }
]