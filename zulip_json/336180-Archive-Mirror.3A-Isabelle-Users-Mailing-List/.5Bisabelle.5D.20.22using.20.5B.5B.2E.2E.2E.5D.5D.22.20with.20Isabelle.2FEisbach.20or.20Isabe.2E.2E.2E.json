[
    {
        "content": "<p>From: Christian Sternagel &lt;<a href=\"mailto:c.sternagel@gmail.com\">c.sternagel@gmail.com</a>&gt;<br>\nDear all,</p>\n<p>what is the equivalent to e.g.</p>\n<p>lemma \"...\"<br>\n  ...<br>\n  using [[simproc del: s]]<br>\n  ...</p>\n<p>in Eisbach methods (or if that doesn't work with Isabelle/ML).</p>\n<p>cheers</p>\n<p>chris</p>",
        "id": 294670835,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661173353
    },
    {
        "content": "<p>From: Daniel Matichuk &lt;<a href=\"mailto:Daniel.Matichuk@nicta.com.au\">Daniel.Matichuk@nicta.com.au</a>&gt;<br>\nHi Christian,</p>\n<p>The match method can be slightly abused to get the desired effect:</p>\n<p>method my_simproc_env methods m =<br>\n  (match termI in H[simproc del: bad_simproc]:_ ⇒ ‹m›)</p>\n<p>Here the match against the “termI” fact only produces one result, which we name and then use as a handle for making our “simproc del:” declaration.</p>\n<p>We can then use this as a usual higher-order method:</p>\n<p>apply (my_simproc_env ‹simp›)</p>\n<p>However, it is relatively straightforward to write a method in ML that will accomplish this a bit more generically.</p>\n<p>method_setup noting =<br>\n ‹Scan.lift (Parse.and_list1 Parse.xthms1  --| Args.$$$ \"in\") --  Method_Closure.method_text &gt;&gt; (fn (args, m) =&gt; fn ctxt =&gt;<br>\n   let<br>\n     fun no_binding args = map (pair (Binding.empty, [])) args;</p>\n<p>val ctxt' = ctxt<br>\n       |&gt; Proof_Context.note_thmss \"\"<br>\n        (Attrib.map_facts_refs (map (Attrib.attribute_cmd ctxt)) (Proof_Context.get_fact ctxt) (no_binding args))<br>\n       |&gt; snd</p>\n<p>in Method_Closure.method_evaluate m ctxt' end)<br>\n›</p>\n<p>Which then looks a bit like the “note” command:</p>\n<p>apply (noting [[simproc del: bad_simproc]]<br>\n            in ‹simp›)</p>\n<p>Regards,<br>\nDan</p>\n<hr>\n<p>The information in this e-mail may be confidential and subject to legal professional privilege and/or copyright. National ICT Australia Limited accepts no liability for any damage caused by this email or its attachments.</p>",
        "id": 294670942,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661173378
    }
]