[
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nI was able to diagnose your problem by enabling the option show_consts:</p>\n<p>goal (1 subgoal):</p>\n<ol>\n<li>xa : carrier (free_group gens1) ==&gt; xa : carrier (free_group gens1)<br>\nconstants:<br>\n...<br>\n  free_group ::<br>\n    ('b =&gt; bool)<br>\n    =&gt; (| carrier :: (bool * 'b) list =&gt; bool,<br>\n          mult :: (bool * 'h) list =&gt; (bool * 'h) list =&gt; (bool * 'h) list, one :: (bool * 'h) list |)<br>\n...<br>\n  free_group ::<br>\n    ('b =&gt; bool)<br>\n    =&gt; (| carrier :: (bool * 'b) list =&gt; bool,<br>\n          mult :: (bool * 'i) list =&gt; (bool * 'i) list =&gt; (bool * 'i) list, one :: (bool * 'i) list |)</li>\n</ol>\n<p>The two occurrences of free_group have different types! You can correct this situation by inserting type constraints.</p>\n<p>Larry Paulson</p>",
        "id": 294107019,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660835541
    },
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:mail@joachim-breitner.de\">mail@joachim-breitner.de</a>&gt;<br>\nHi,</p>\n<p>thaks, works perfectly. I can turn off quick_and_dirty mode again, feels<br>\nmuch better :-)</p>\n<p>Greetings,<br>\nJoachim<br>\n<a href=\"/user_uploads/14278/7tabJfyQjIjASdSaYs_bfPff/signature.asc\">signature.asc</a></p>",
        "id": 294107108,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660835580
    },
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:mail@joachim-breitner.de\">mail@joachim-breitner.de</a>&gt;<br>\nHi,</p>\n<p>I’m currently working on a submission to the AFP, formalizing the<br>\nconstruction of Free Groups. While proving that bijective sets of<br>\ngenerators produce isomorphic Free Groups, I came across a problem where<br>\nI cannot continue, and it seems to be an Isabelle bug.</p>\n<p>In line of 337 of<br>\n<a href=\"http://darcs.nomeata.de/afp-Free-Groups/Free-Groups.thy\">http://darcs.nomeata.de/afp-Free-Groups/Free-Groups.thy</a><br>\nI try to do this<br>\n    assume \"x ∈ image (map (prod_fun id f)) (carrier (free_group gens1))\"<br>\n    then obtain y :: \"(bool × 'b) list\" where \"x = map (prod_fun id f) y\"<br>\n                    and \"y ∈ carrier (free_group gens1)\"<br>\nand expected to close this using \"by auto\", as I did in similar<br>\nsituations before. This fails. Unwrapping the proof and trying to do it<br>\nmanually with Isar steps, I end up with this state (as given by i3p):</p>\n<p>proof (prove): step 38</p>\n<p>goal (1 subgoal):</p>\n<ol>\n<li>xa ∈ carrier (free_group gens1) ⟹ xa ∈ carrier (free_group gens1)<br>\nvariables:<br>\n  thesis :: bool<br>\n  f :: 'b ⇒ 'c<br>\n  x :: (bool × 'c) list<br>\n  gens1 :: 'b ⇒ bool<br>\n  xa :: (bool × 'b) list<br>\ntype variables:<br>\n  'b, 'c, 'h, 'i :: type</li>\n</ol>\n<p>but \"apply assumption\" does not work. It is also not a i3p bug, as the<br>\nIsaMakefile also fails to build the theory.</p>\n<p>I’d be grateful if someone else could try it and see if he can reproduce<br>\nthe problem, and maybe tell me how I can work around the issue. The<br>\ntheory Free-Groups also uses<br>\n<a href=\"http://darcs.nomeata.de/afp-Free-Groups/Cancelation.thy\">http://darcs.nomeata.de/afp-Free-Groups/Cancelation.thy</a><br>\nand if you have darcs installed, you can just run<br>\ndarcs get <a href=\"http://darcs.nomeata.de/afp-Free-Groups/\">http://darcs.nomeata.de/afp-Free-Groups/</a></p>\n<p>Thanks,<br>\nJoachim<br>\n<a href=\"/user_uploads/14278/OuDORCxyUAEOnXXWlof_D_EM/signature.asc\">signature.asc</a></p>",
        "id": 294109114,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660836203
    }
]