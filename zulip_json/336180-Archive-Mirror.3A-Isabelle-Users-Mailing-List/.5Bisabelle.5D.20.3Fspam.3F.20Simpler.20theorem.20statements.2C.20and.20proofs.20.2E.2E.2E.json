[
    {
        "content": "<p>From: Christoph LANGE &lt;<a href=\"mailto:c.lange@cs.bham.ac.uk\">c.lange@cs.bham.ac.uk</a>&gt;<br>\n2012-11-22 14:31 Tobias Nipkow:</p>\n<blockquote>\n<blockquote>\n<p>fixes ... and i<br>\nassumes \"p x\"<br>\nshows \"q x\"</p>\n</blockquote>\n<p>Unless you want to give the type of i, you don't need to fix it.</p>\n</blockquote>\n<p>Thanks!  Now I'm not quite sure what's better style.  On paper you do <br>\nnot always give types, if it's clear from the context.  But when it is <br>\nnot clear, it helps to mention types explicitly.</p>\n<blockquote>\n<p>\"If you look at the documentation page<br>\n<a href=\"http://isabelle.in.tum.de/documentation.html\">http://isabelle.in.tum.de/documentation.html</a> you will find that the first<br>\ndocument is the relatively new Programming and Proving in Isabelle/HOL, which<br>\ndoes cover structured proofs (which is why I wrote it). The Tutorial is now only<br>\nsecond choice because of the foucus on \"apply\".\"</p>\n</blockquote>\n<p>Sorry, I just had not yet got back to that old recommendation you made. <br>\n  Indeed I had had a look into \"Programming and Proving\" meanwhile and <br>\nfound it very instructive.  Thanks!</p>\n<blockquote>\n<p>That is also where you find the induction method.</p>\n</blockquote>\n<p>That's right, but \"Programming and Proving\" is not a full reference of <br>\nall proof methods and their options; that's what I was referring to.</p>\n<blockquote>\n<blockquote>\n<p>Is there a single, up to<br>\ndate reference manual that documents all proof methods?</p>\n</blockquote>\n<p>Yes, the reference manual (more or less).</p>\n</blockquote>\n<p>OK, thanks, I see.</p>\n<p>BTW, about \"Programming and Proving\": I had noticed this manual when I <br>\ngot started with Isabelle, but then didn't take a closer look, as I was <br>\nmisled by the \"Programming\".  I thought it was some specific guide on <br>\nverifying functional programs.</p>\n<blockquote>\n<p>Indeed, for inductions, the most convenient way is stating them as implications<br>\n(with ==&gt;). The manuals above will also tell you about the naming conventions of<br>\nassumptions in each case.</p>\n</blockquote>\n<p>OK, I'll add this to my to-do list.</p>\n<p>Cheers,</p>\n<p>Christoph</p>",
        "id": 294226354,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660900173
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nIn a way it is. It starts from a functional programming perspective. If you have<br>\na suggestion for a better title, let me know.</p>\n<p>Tobias</p>",
        "id": 294226491,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660900240
    }
]