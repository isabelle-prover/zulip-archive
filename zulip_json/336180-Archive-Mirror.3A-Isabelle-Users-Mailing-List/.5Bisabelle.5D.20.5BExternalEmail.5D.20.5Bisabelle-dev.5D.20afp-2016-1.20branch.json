[
    {
        "content": "<p>From: <a href=\"mailto:Gerwin.Klein@data61.csiro.au\">Gerwin.Klein@data61.csiro.au</a><br>\nAs of 61df7b06f131 there is now a new branch afp-2016-1, which will become the new afp release branch when Isabelle2016-1 is released.</p>\n<p>Any further changes to afp-devel will now by default not show up in this branch.</p>\n<p>Cheers,<br>\nGerwin</p>",
        "id": 294699235,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661178628
    },
    {
        "content": "<p>From: Randy Pollack &lt;<a href=\"mailto:rpollack@inf.ed.ac.uk\">rpollack@inf.ed.ac.uk</a>&gt;<br>\nGerwin,</p>\n<p>I was looking at the Flyspeck_Tame entry in the AFP today.  The<br>\ncurrent version of proofs built in Isabelle 2016 in a few minutes.<br>\nBut there is more to this development than checking the proofs.  There<br>\nare \"Proofs by evaluation using generated code\" that are only executed<br>\nif ISABELLE_FULL_TEST=true.  These proofs by evaluation take several<br>\nhours to run.</p>\n<p>I wonder if these proofs by evaluation are checked when the AFP is<br>\nbrought up-to-date with a new release of Isabelle?  Similarly, do<br>\nother AFP entries have parts that may not be getting checked with new<br>\nreleases.</p>\n<p>Thanks for any info.</p>\n<p>--Randy</p>",
        "id": 294702474,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661179634
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nI don't know whether or not this was done in the past, but Lars Hupel<br>\nremoved this conditional evaluation from Flyspeck_Tame in April 2016 [1]<br>\nwhen he introduced the new CI infrastructure.</p>\n<p>All of Flyspeck_Tame now gets tested once a day (it is part of the<br>\nisabelle-nightly-slow job in Isabelle/Jenkins [2]).</p>\n<p>As for other AFP entries, like Flyspeck_Tame, we have a few ones that<br>\nare too big to test on every push like the rest of the AFP and those get<br>\ntested in isabelle-nightly-slow. I don't know the AFP in enough detail<br>\nto say with certainty that none of them contains any parts that are<br>\nskipped during these tests like Flyspeck_Tame used to, but I don't think<br>\nso, given that that testing such things is the express purpose of<br>\nnightly-slow.</p>\n<p>Cheers,</p>\n<p>Manuel</p>\n<p>[1]<br>\n<a href=\"https://bitbucket.org/isa-afp/afp-devel/diff/thys/Flyspeck-Tame/ArchComp.thy?diff1=65cbeb22452d5e6f526758d8ff98bb942f1f0077&amp;diff2=cac201d3f3f9&amp;at=default\">https://bitbucket.org/isa-afp/afp-devel/diff/thys/Flyspeck-Tame/ArchComp.thy?diff1=65cbeb22452d5e6f526758d8ff98bb942f1f0077&amp;diff2=cac201d3f3f9&amp;at=default</a></p>\n<p>[2] <a href=\"https://ci.isabelle.systems/jenkins/job/isabelle-nightly-slow/\">https://ci.isabelle.systems/jenkins/job/isabelle-nightly-slow/</a></p>",
        "id": 294702495,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661179641
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nI did check for build conditions and occurrences of ISABELLE_FULL_TEST.<br>\nAll of these should have been eliminated. In case anyone notices<br>\nleftover conditional builds (except for code generator checks), that<br>\nwould be a bug.</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294702535,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661179652
    },
    {
        "content": "<p>From: <a href=\"mailto:Gerwin.Klein@data61.csiro.au\">Gerwin.Klein@data61.csiro.au</a><br>\nHi Randy,</p>\n<p>there are a few sessions with the tag “slow” in the AFP, of which Flyspeck_Tame is one. These are tested once a day. All other sessions are tested with each push.</p>\n<p>Cheers,<br>\nGerwin</p>",
        "id": 294702552,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661179659
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe word \"bug\" always triggers critical questions. Can you explain the<br>\npoint of removing the conditional build?</p>\n<p>We are talking about these two changesets:</p>\n<p>changeset:   2646:3dcc6b9eae2b<br>\nuser:        wenzelm<br>\ndate:        Wed Jan 11 21:30:05 2012 +0100<br>\nfiles:       thys/Flyspeck-Tame/ArchComp.thy<br>\ndescription:<br>\nmethod \"cond_eval\" reduces total runtime to a few minutes if<br>\nFLYSPECK_SKIP_PROOFS=true;</p>\n<p>changeset:   6524:cac201d3f3f9<br>\nuser:        Lars Hupel &lt;<a href=\"mailto:lars.hupel@mytum.de\">lars.hupel@mytum.de</a>&gt;<br>\ndate:        Fri Apr 15 17:28:43 2016 +0200<br>\nfiles:       thys/Flyspeck-Tame/ArchComp.thy thys/Flyspeck-Tame/ROOT<br>\ndescription:<br>\nfull test for Flyspeck-Tame; get rid of ISABELLE_FULL_TEST</p>\n<p>The optional version of Flyspeck-Tame had the advantage that the<br>\nrelevant part for the test always happens quickly (without \"slow\" or<br>\n\"very_slow\" categorization). The full test -- which never failed in its<br>\nwhole history -- was done once and a while (I think weekly).</p>\n<p>This saved both CPU time and interactive testing time: I now find myself<br>\ndoing manual Flyspeck-Tests, imitating the missing condition in the<br>\nProver IDE by hand.</p>\n<p>Makarius</p>",
        "id": 294702790,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661179732
    }
]