[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:mail@andreas-lochbihler.de\">mail@andreas-lochbihler.de</a>&gt;<br>\nDear Gerwin,</p>\n<p>AFAIK there's no way to prevent setup_lifting overwriting the code generator setup. (There <br>\nused to be a no_code option, but that's gone for a few releases.) However, datatype_compat <br>\nis a fairly heavyweight command to just fix the code generator setup. For example, this <br>\ncommand can change the default induction rules for mutually recursive datatypes. So <br>\ninstead, I recommend to use</p>\n<p>code_datatype &lt;list of all constructors of the datatype&gt;</p>\n<p>right after the setup_lifting command. When you define constants with lift_definition, you <br>\nmust derive your own code equations, though.</p>\n<p>If this command does not suffice for quickcheck, you can restore the quickcheck setup with</p>\n<p>quickcheck_generators &lt;type name&gt; constructors: &lt;list of all constructors of the datatype&gt;</p>\n<p>Hope this helps,<br>\nAndreas</p>",
        "id": 294725630,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661186318
    },
    {
        "content": "<p>From: <a href=\"mailto:Gerwin.Klein@data61.csiro.au\">Gerwin.Klein@data61.csiro.au</a><br>\nThanks, that is indeed a bit less hacky!</p>\n<p>Cheers,<br>\nGerwin</p>",
        "id": 294725643,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661186321
    }
]