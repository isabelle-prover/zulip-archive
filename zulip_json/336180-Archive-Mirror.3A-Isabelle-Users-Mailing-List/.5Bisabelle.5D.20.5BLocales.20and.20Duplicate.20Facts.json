[
    {
        "content": "<p>From: Paulo Em√≠lio de Vilhena &lt;<a href=\"mailto:pevilhena2@gmail.com\">pevilhena2@gmail.com</a>&gt;<br>\nDear all,</p>\n<p>I‚Äôve noticed an interesting behavior on locales and duplicate facts: it is<br>\npossible to have duplicate facts (same name and result) for the same locale<br>\non different files, but if one tries to make an interpretation of this<br>\nlocale on a context that imports both files, Isabelle realizes the<br>\nduplication and reports an error. This can get even more subtle:  if you<br>\nprove a lemma for a locale B and prove that A is a sublocale of B, so if<br>\nthe fact was already given earlier for A, one gets the same problem only<br>\nwhen trying to instantiate the locale A.</p>\n<p>If someone decides to work on this issue, I‚Äôm available to help.</p>\n<p>Cheers,</p>\n<p>Paulo.</p>",
        "id": 294733331,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661188874
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nWould any locale experts like to tackle this problem? It can be demonstrated by visiting HOL/Algebra/IntRing.thy and adding Divisibility to the list of imports. Suddenly you get failures all over the place, starting at the line</p>\n<p>interpretation int: abelian_group ùíµ </p>\n<p>The problem is that Divisibility adds some duplicate names to the locale, such as l_cancel, r_cancel, Units_m_closed.</p>\n<p>Larry</p>",
        "id": 294735084,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189512
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nAt the bottom of it is a generally looming danger with theory merges:<br>\n\"containers\" from either theory might be incompatible and fail to merge.<br>\nThis happens so rarely in practice, that users often think of a merge as<br>\ntotal.</p>\n<p>There might be workarounds for locale interpretation, but I can't say on<br>\nthe spot how it works in detail.</p>\n<p>Spontaneously, I would say it is a mistake in the HOL-Algebra library to<br>\nuse such hidden duplicates. Wasn't it part of the project at Cambridge<br>\nto clean up fact names in this part?</p>\n<p>Makarius</p>",
        "id": 294735199,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189543
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nThe name clashes come about in pretty obscure ways. Theory Group proves certain lemmas in the locale group. Theory Divisibility creates a new locale, monoid_cancel, assuming the exact same lemmas as axioms and with the same names. Then it goes on to prove</p>\n<p>sublocale group ‚äÜ monoid_cancel<br>\n  by standard simp_all</p>\n<p>There is still no sign of anything wrong, although already (I think) locale group now has conflicting names and can't be instantiated any more. The name clash should be flagged at this point.</p>\n<p>Larry</p>",
        "id": 294735302,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189580
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:mail@andreas-lochbihler.de\">mail@andreas-lochbihler.de</a>&gt;<br>\nThe problem is not just the sublocale declaration. For example, the lemma Units_m_closed <br>\nin Divisibility is put into the locale monoid, but the same lemma has been proven in the <br>\nsame locale in theory Group. This is not detected in theory Divisibility because the names <br>\nfor the two theorems in the background theory are different due to the different theory <br>\nnames. The problem only manifests when an interpretation tries to interpret the monoid <br>\nlocale because this notes the theorem twice. There is no workaround in Isabelle2017 for this.</p>\n<p>For the l_cancel problem, there is a workaround, but it needs two theories.</p>\n<ol>\n<li>\n<p>In theory 1, import only Group, but not Divisibility and add an interpretation of the <br>\nlocale monoid under a suitable qualifier q.</p>\n</li>\n<li>\n<p>In theory 2, import theory 1 and Divisibility. Interpret the locale monoid_cancel with <br>\na different qualifier q'. Then interpret group with qualifier q.</p>\n</li>\n</ol>\n<p>In step 2, the first interpretation ensures that the locale roundup algorithm will not <br>\nattempt to interpret monoid_cancel during the second interpretation. The drawbacks of this <br>\nsolution are:</p>\n<p>a. The theorems that divisibility adds to monoid are not available in either theory.<br>\nb. The definitions and theorems from monoid_cancel must be reference with qualifier q' <br>\ninstead of q.</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 294735347,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189598
    }
]