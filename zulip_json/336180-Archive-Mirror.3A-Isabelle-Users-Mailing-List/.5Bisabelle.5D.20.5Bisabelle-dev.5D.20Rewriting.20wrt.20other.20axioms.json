[
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:brianh@cs.pdx.edu\">brianh@cs.pdx.edu</a>&gt;<br>\nTry using the \"simplified\" attribute, like this:</p>\n<p>thm a1 [simplified a2]</p>\n<ul>\n<li>Brian</li>\n</ul>",
        "id": 294129191,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660842212
    },
    {
        "content": "<p>From: <a href=\"mailto:munddr@gmail.com\">munddr@gmail.com</a><br>\nOn Feb 16, 2011 5:31am, Brian Huffman &lt;<a href=\"mailto:brianh@cs.pdx.edu\">brianh@cs.pdx.edu</a>&gt; wrote:</p>\n<blockquote>\n<p>On Tue, Feb 15, 2011 at 8:52 PM, John Munroe <a href=\"mailto:munddr@gmail.com\">munddr@gmail.com</a>&gt; wrote:</p>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>Hi,</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>&gt;</p>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>Does anyone know of a good way to rewrite a definition wrt. other</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>axioms? For example, given:</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>&gt;</p>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>a1: \"ALL x. fx = gx + h x\"</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>a2: \"ALL x. gx = mx * n x\"</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>&gt;</p>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>I'm trying to get a new axiom:</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>&gt;</p>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>ax1': \"ALL x. fx = (mx * nx) + h x\", ie rewriting a1 using a2. Is</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>there already an existing mechanism that does this? Otherwise, what is</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>the best angle to approach this?</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>Try using the \"simplified\" attribute, like this:</p>\n</blockquote>\n<blockquote>\n<p>thm a1 [simplified a2]</p>\n</blockquote>\n<p>Thanks. Do you know what the ML functions are for getting the same result  <br>\nat the ML level?</p>\n<p>Thanks<br>\nJohn</p>\n<blockquote>\n<ul>\n<li>Brian</li>\n</ul>\n</blockquote>",
        "id": 294129253,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660842231
    },
    {
        "content": "<p>From: Jeremy Dawson &lt;<a href=\"mailto:jlcaadawson@netspeed.com.au\">jlcaadawson@netspeed.com.au</a>&gt;<br>\nJohn,</p>\n<p>the ML functions are simplify, asm_full_simplify, etc (I think the <br>\nlatter is the precise equivalent of thm a1 [simplified a2], see s9.4 of <br>\nthe Reference Manual (ref.{dvi,pdf})</p>\n<p>They take a simpset argument - I think to get the equivalent of<br>\n  thm a1 [simplified a2] you would want something like<br>\nasm_full_simplify (HOL_basic_ss addsimps [a2]) a1 ;</p>\n<p>Unfortunately HOL_basic_ss doesn't seem to exist anymore. You could try <br>\nempty_ss instead (I've never used it myself). (see s9.2.2)</p>\n<p>Or try rewrite_rule [a2] a1 (see s4.1.3 of the Reference Manual)</p>\n<p>Jeremy</p>",
        "id": 294129325,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660842245
    },
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:brianh@cs.pdx.edu\">brianh@cs.pdx.edu</a>&gt;<br>\nOn Wed, Feb 16, 2011 at 4:57 AM, Jeremy Dawson<br>\n&lt;<a href=\"mailto:jlcaadawson@netspeed.com.au\">jlcaadawson@netspeed.com.au</a>&gt; wrote:</p>\n<blockquote>\n<p>Unfortunately HOL_basic_ss doesn't seem to exist anymore. You could try<br>\nempty_ss instead (I've never used it myself). (see s9.2.2)</p>\n</blockquote>\n<p>HOL_basic_ss still exists! I am using it all over the place in the<br>\nimplementation of the HOLCF domain package, and a quick grep of the<br>\ncurrent sources shows that it is used in plenty of other places too.</p>\n<blockquote>\n<p>Or try rewrite_rule [a2] a1 (see s4.1.3 of the Reference Manual)</p>\n</blockquote>\n<p>I believe that Meta_Simplifier.rewrite_rule corresponds precisely to<br>\nthe \"unfolded\" attribute, which is similar to \"simplified\", except<br>\nthat it uses a more basic kind of rewriting (no pre-processing of<br>\nrules, no using local assumptions, no congruence rules, etc.)</p>\n<ul>\n<li>Brian</li>\n</ul>",
        "id": 294129336,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660842249
    },
    {
        "content": "<p>From: Jeremy Dawson &lt;<a href=\"mailto:jeremy@rsise.anu.edu.au\">jeremy@rsise.anu.edu.au</a>&gt;<br>\nBrian Huffman wrote:<br>\nsorry - my mistake - I'd only loaded Pure (which was all I'd ever built <br>\nfor Isabelle2009-2)</p>\n<p>Jeremy</p>",
        "id": 294129424,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660842281
    }
]