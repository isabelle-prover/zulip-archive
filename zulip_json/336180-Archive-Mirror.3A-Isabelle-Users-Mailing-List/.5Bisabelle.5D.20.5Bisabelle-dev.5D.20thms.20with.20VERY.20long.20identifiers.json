[
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:huffman@in.tum.de\">huffman@in.tum.de</a>&gt;<br>\nIt seems that the numeric indexing works if you omit the double quotes:</p>\n<p>@{thm Semiring_Normalization.comm_semiring_1_class.normalizing_semiring_rules(29)}</p>",
        "id": 294153876,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660850383
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nI guess the quotes version would be</p>\n<p>@{thm<br>\n\"Semiring_Normalization.comm_semiring_1_class.normalizing_semiring_rules\"(29)}</p>\n<p>Florian<br>\n<a href=\"/user_uploads/14278/ezRY-yUATr4BW8tZH43Fn1Ha/signature.asc\">signature.asc</a></p>",
        "id": 294153997,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660850430
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nIt is both correct according to the syntax as explained in the isar-ref manual. <br>\nThe rules for quotes or non-quotes are not very difficult, if one knows them. <br>\nIt is a bit like reading French, or Arabic ... -- a bit of interpolation is <br>\nrequired.</p>\n<p>In the above case of ML antiquotations, I usually use the first version, <br>\nbecause it corresponds to what is usually written in Isar source as well. The <br>\nouter @{...} already tells that the whole thing is anti-quoted.</p>\n<p>The second version is more like an imitation of ML string literals.  It <br>\nprobably stems from the old-style practice of refering to thm or const names <br>\ndirectly in raw ML, without the Isar context to take care of antiquotations: <br>\ne.g. former Const (\"foo\", _) is occasionally seen as<br>\nConst (@{const_name \"foo\"}, _) even though the extra quotes are redundant.</p>\n<p>Makarius</p>",
        "id": 294153999,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660850432
    }
]