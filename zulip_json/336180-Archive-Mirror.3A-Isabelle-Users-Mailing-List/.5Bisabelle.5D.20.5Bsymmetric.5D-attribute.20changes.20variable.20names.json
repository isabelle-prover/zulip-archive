[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nHi all,</p>\n<p>I recently stumbled over the following quite confusing behaviour:</p>\n<p>definition \"foo x \\&lt;equiv&gt; x\"<br>\nthm foo_def[symmetric]</p>\n<blockquote>\n<p>Outputs ?y = foo ?y</p>\n</blockquote>\n<p>Is it really necessary that symmetric is allowed to change variable<br>\nnames in the theorem? For a user, it may be quite confusing having to<br>\nwrite<br>\n  foo[where x=\"bar\"], but foo[symmetric, where y=\"bar\"]</p>\n<p>-- Peter</p>",
        "id": 294226864,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660900412
    },
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:huffman@in.tum.de\">huffman@in.tum.de</a>&gt;<br>\nIt looks like this only happens for definitions whose right-hand side<br>\nis just a variable. Also, note that this behavior is not due to the<br>\n\"symmetric\" attribute per se; it really starts with Thm.biresolution.<br>\n\"thm foo_def [THEN symmetric]\" yields the same result.</p>\n<p>Here's what I think is happening: When you resolve two theorems like<br>\n\"rule1 [THEN rule2]\", and two variable patterns are unified, the<br>\nresult takes the variable name from rule2.</p>\n<p>This seems like a sensible design for Thm.biresolution, because it is<br>\nused most often to apply rules during a proof; here rule2 corresponds<br>\nto the goal state, and rule1 is the applied rule. It makes sense to<br>\npreserve the names of schematic variables during a proof.</p>\n<ul>\n<li>Brian</li>\n</ul>",
        "id": 294227002,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660900455
    }
]