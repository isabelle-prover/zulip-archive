[
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nIn ProofGeneral, numerals of type 'a are explicitly flagged with their type in<br>\nthe output. It is an incredibly useful little feature, not just but in<br>\nparticular for novices. Which is why we introduced it. Any reason not to have it<br>\nwith jedit as well?</p>\n<p>Tobias</p>",
        "id": 294255229,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912334
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Mon, 18 Nov 2013, Tobias Nipkow wrote:</p>\n<blockquote>\n<p>In ProofGeneral, numerals of type 'a are explicitly flagged with their <br>\ntype in the output. It is an incredibly useful little feature, not just <br>\nbut in particular for novices. Which is why we introduced it.</p>\n</blockquote>\n<p>I introduced that feature many years ago, and even the idea to make a <br>\nconstraint as \"inlined warning\" to give it the proper syntactic context. <br>\n(An explicit warning message within syntax translations technically does <br>\nnot work, even today, and even though I've seen this occasionally in other <br>\nsyntax translations over the years.)</p>\n<blockquote>\n<p>Any reason not to have it with jedit as well?</p>\n</blockquote>\n<p>You mean Isabelle/jEdit, or rather the Isabelle/Scala document model <br>\nbehind it; jEdit is just a plain text editor.</p>\n<p>The reason why the constraint is not immediately visible in the output is <br>\nthe much richer term markup introduced in Isabelle2013:</p>\n<p>* Configuration option show_markup controls direct inlining of markup<br>\n   into the printed representation of formal entities --- notably type<br>\n   and sort constraints.  This enables Prover IDE users to retrieve that<br>\n   information via tooltips in the output window, for example.</p>\n<p>The old TTY / ProofGeneral behaviour can be recovered by something like <br>\nthis:</p>\n<p>declare [[show_markup = false]]</p>\n<p>but this also looses the benefit of constraints that can be retrieved as <br>\ntooltips on demand.</p>\n<p>To make further progress, without looking back on old features, there are <br>\ntwo things in the pipeline for quite some time (and with some priority):</p>\n<p>* Highlighting of places in terms where extra polymorphism is<br>\n     introduced.  (Users are more often confused about basic type-inference<br>\n     than just the special case of 0, 1, etc.)</p>\n<p>* Routine printing of terms with just the right amount of type/sort<br>\n     constraints, such that the result is uniquely determined.</p>\n<p>Makarius</p>",
        "id": 294255276,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912348
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nAm 18/11/2013 12:12, schrieb Makarius:</p>\n<blockquote>\n<p>On Mon, 18 Nov 2013, Tobias Nipkow wrote:</p>\n<blockquote>\n<p>In ProofGeneral, numerals of type 'a are explicitly flagged with their type in<br>\nthe output. It is an incredibly useful little feature, not just but in<br>\nparticular for novices. Which is why we introduced it.</p>\n</blockquote>\n<p>I introduced that feature many years ago, and even the idea to make a constraint<br>\nas \"inlined warning\" to give it the proper syntactic context. (An explicit<br>\nwarning message within syntax translations technically does not work, even<br>\ntoday, and even though I've seen this occasionally in other syntax translations<br>\nover the years.)</p>\n<blockquote>\n<p>Any reason not to have it with jedit as well?</p>\n</blockquote>\n<p>You mean Isabelle/jEdit, or rather the Isabelle/Scala document model behind it;<br>\njEdit is just a plain text editor.<br>\n</p>\n</blockquote>\n<p>You may observe that I intentionally wrote \"with jedit\" (rather than, eg, \"in<br>\njedit\"). The word \"with\" indicates a contextual dependence, just like in Isar.<br>\nAnybody on this mailing list will immediately deduce from my previous mention of<br>\nPG that I am talking about the user interface to Isabelle. This is known as<br>\nnatural language. Luckily you had no problem to follow it, as the rest of your<br>\nemail clearly shows.</p>\n<p>Tobias</p>\n<blockquote>\n<p>The reason why the constraint is not immediately visible in the output is the<br>\nmuch richer term markup introduced in Isabelle2013:</p>\n<p>* Configuration option show_markup controls direct inlining of markup<br>\n  into the printed representation of formal entities --- notably type<br>\n  and sort constraints.  This enables Prover IDE users to retrieve that<br>\n  information via tooltips in the output window, for example.</p>\n<p>The old TTY / ProofGeneral behaviour can be recovered by something like this:</p>\n<p>declare [[show_markup = false]]</p>\n<p>but this also looses the benefit of constraints that can be retrieved as<br>\ntooltips on demand.</p>\n<p>To make further progress, without looking back on old features, there are two<br>\nthings in the pipeline for quite some time (and with some priority):</p>\n<p>* Highlighting of places in terms where extra polymorphism is<br>\n    introduced.  (Users are more often confused about basic type-inference<br>\n    than just the special case of 0, 1, etc.)</p>\n<p>* Routine printing of terms with just the right amount of type/sort<br>\n    constraints, such that the result is uniquely determined.</p>\n<p>Makarius</p>\n</blockquote>",
        "id": 294255403,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912410
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nSee also the introductory section of the new Isabelle/jEdit manual:</p>\n<p>...</p>\n<p>The subtle differences of Isabelle/ML versus Standard ML,<br>\n   Isabelle/Scala versus Scala, Isabelle/jEdit versus jEdit need to be<br>\n   taken into account when discussing any of these PIDE building blocks<br>\n   in public forums, mailing lists, or even scientific publications.</p>\n<p>Right now we still have the situation that people on this mailing list use <br>\n\"jedit\" as a sloppy shorthand for anything after Isabelle Proof General. <br>\nIf this habit is continued, it will cause a lot of confusion.</p>\n<p>For example, questions on Stackoverflow are occasionally tagged as <br>\n\"isabelle\" and \"jedit\".  In the context of that forum, the natural <br>\nlanguage wording of the text needs to be right, or people out there will <br>\nnot understand what it is about.  (Postings are occasionally removed for <br>\nsuch reasons.)</p>\n<p>Even just in the context of the isabelle-users mailing list, we should <br>\nsoon see users of Isabelle/Eclipse and CLIDE (web front-end from Bremen), <br>\nwhich both use the underlying Isabelle/Scala document model.  In that <br>\nsense Isabelle/jEdit is just an example application.</p>\n<p>Not every user is required to understand all the details of the overall <br>\nPIDE architecture.  Just sticking to certain names by habit is sufficient. <br>\nAnd the author has the natural authority to determine name and title of <br>\nhis own work.</p>\n<p>Makarius</p>",
        "id": 294255770,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912532
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nAm 20/11/2013 13:14, schrieb Makarius:</p>\n<blockquote>\n<p>On Mon, 18 Nov 2013, Tobias Nipkow wrote:</p>\n<blockquote>\n<blockquote>\n<p>You mean Isabelle/jEdit, or rather the Isabelle/Scala document model behind<br>\nit; jEdit is just a plain text editor.</p>\n</blockquote>\n<p>You may observe that I intentionally wrote \"with jedit\" (rather than, eg, \"in<br>\njedit\"). The word \"with\" indicates a contextual dependence, just like in Isar.<br>\nAnybody on this mailing list will immediately deduce from my previous mention<br>\nof PG that I am talking about the user interface to Isabelle. This is known as<br>\nnatural language. Luckily you had no problem to follow it, as the rest of your<br>\nemail clearly shows.</p>\n</blockquote>\n<p>See also the introductory section of the new Isabelle/jEdit manual:</p>\n<p>...</p>\n<p>The subtle differences of Isabelle/ML versus Standard ML,<br>\n  Isabelle/Scala versus Scala, Isabelle/jEdit versus jEdit need to be<br>\n  taken into account when discussing any of these PIDE building blocks<br>\n  in public forums, mailing lists, or even scientific publications.</p>\n</blockquote>\n<p>I recommend PRISM to identify offenders.</p>\n<p>Tobias</p>\n<blockquote>\n<p>Right now we still have the situation that people on this mailing list use<br>\n\"jedit\" as a sloppy shorthand for anything after Isabelle Proof General. If this<br>\nhabit is continued, it will cause a lot of confusion.</p>\n<p>For example, questions on Stackoverflow are occasionally tagged as \"isabelle\"<br>\nand \"jedit\".  In the context of that forum, the natural language wording of the<br>\ntext needs to be right, or people out there will not understand what it is<br>\nabout.  (Postings are occasionally removed for such reasons.)</p>\n<p>Even just in the context of the isabelle-users mailing list, we should soon see<br>\nusers of Isabelle/Eclipse and CLIDE (web front-end from Bremen), which both use<br>\nthe underlying Isabelle/Scala document model.  In that sense Isabelle/jEdit is<br>\njust an example application.</p>\n<p>Not every user is required to understand all the details of the overall PIDE<br>\narchitecture.  Just sticking to certain names by habit is sufficient. And the<br>\nauthor has the natural authority to determine name and title of his own work.</p>\n<p>Makarius</p>\n</blockquote>",
        "id": 294255818,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912551
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThis is getting a bit ridiculous.</p>\n<p>I have already seen papers related to the Prover IDE efforts, where <br>\n\"jedit\" was used in a non-sensical way, even more non-sensical then on <br>\nthis thread so far.</p>\n<p>Is this the end of proper science?</p>\n<p>Makarius</p>",
        "id": 294255857,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912563
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nAm 20/11/2013 16:20, schrieb Makarius:</p>\n<blockquote>\n<p>On Wed, 20 Nov 2013, Tobias Nipkow wrote:</p>\n<blockquote>\n<blockquote>\n<p>See also the introductory section of the new Isabelle/jEdit manual:</p>\n<p>...</p>\n<p>The subtle differences of Isabelle/ML versus Standard ML,<br>\n  Isabelle/Scala versus Scala, Isabelle/jEdit versus jEdit need to be<br>\n  taken into account when discussing any of these PIDE building blocks<br>\n  in public forums, mailing lists, or even scientific publications.</p>\n</blockquote>\n<p>I recommend PRISM to identify offenders.</p>\n</blockquote>\n<p>This is getting a bit ridiculous.</p>\n</blockquote>\n<p>I am so glad we finally agree :-)</p>\n<p>Tobias</p>\n<blockquote>\n<p>I have already seen papers related to the Prover IDE efforts, where \"jedit\" was<br>\nused in a non-sensical way, even more non-sensical then on this thread so far.</p>\n<p>Is this the end of proper science?</p>\n<p>Makarius</p>\n</blockquote>",
        "id": 294255911,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912581
    }
]