[
    {
        "content": "<p>From: Christoph LANGE &lt;<a href=\"mailto:math.semantic.web@gmail.com\">math.semantic.web@gmail.com</a>&gt;<br>\nHi Makarius,</p>\n<p>in Isabelle 2013 when I wrote \"statement try\", or try0, and try found a<br>\nproof, clicking on this proof in the output panel replaced the \"try\"<br>\nkeyword in the edited source by the proof.  This is no longer the case<br>\nin 2013-1-RC1.  Instead the proof (e.g. \"by blast\") is placed after the<br>\n\"try\", which remains.</p>\n<p>Cheers,</p>\n<p>Christoph</p>",
        "id": 294251223,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660910802
    },
    {
        "content": "<p>From: Christoph LANGE &lt;<a href=\"mailto:math.semantic.web@gmail.com\">math.semantic.web@gmail.com</a>&gt;<br>\n2013-10-03 20:04 Christoph LANGE:<br>\nAfter some more playing I'm starting to realise that this might be a<br>\n_feature_.  Suppose you try to prove something with Sledgehammer, and it<br>\nsuggests several possibilities, which you would then minimise, all<br>\npossibilities are retained in the document until you finally decide for<br>\none proof.  However you would have to clean up yourself all those<br>\nalternatives you don't like.</p>\n<p>Cheers,</p>\n<p>Christoph</p>",
        "id": 294251761,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660911004
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThere is indeed a slight change of the behaviour in \"sendback\" text <br>\nproduced by commands like sledgehammer, nitpick, try0 etc.  Before <br>\nIsabelle2013-1 there was no specific support for what is now called \"query <br>\noperation\", and there were some temporarary approximations to a workflow <br>\nwhere you insert commands in the buffer and get them replaced eventually.</p>\n<p>With the implicit \"auto sledgehammer\" and explicit \"slegdehammer panel\" <br>\nyou normally don't put query commands in the buffer anymore, and the <br>\nediting behaviour has been adapted accordingly.  Thus you gain a lot, but <br>\nyou loose a little bit with commands that still don't have their own query <br>\npanel, such as 'try0'.  (Supporting both the old and the current behaviour <br>\nturned out to lead in an unmaintainable confusion of the code, which would <br>\ninevitably lead to bad system rather soon.)</p>\n<p>Looking ahead even a bit further, the next stage is to support more <br>\nstructured editing of the text with assistance by the prover and the <br>\neditor.  Then the replacement policies would be determined by the text <br>\nitself, not funny properties in the sendback messages we still see today.</p>\n<p>Makarius</p>",
        "id": 294252870,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660911453
    }
]