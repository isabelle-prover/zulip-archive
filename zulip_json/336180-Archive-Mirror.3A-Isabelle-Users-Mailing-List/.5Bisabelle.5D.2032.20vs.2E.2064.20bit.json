[
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nAs far as I understand it, the 32 bit reduces heap requirements in the<br>\nfirst place. Also, it gives better performance. For example, AODV with<br>\nthreads=8 takes 1h39m on 64 bit, but just 1h20m on 32 bit.*</p>\n<p>As an interesting side note: I've found that under low memory pressure,<br>\nthat session may reserve north of 50 GB memory (using 64 bit), but it is<br>\nalso fine to run with less than 4 GB (using 32 bit). My initial<br>\nsuspicion that 64 bit might be faster for huge sessions by reducing GC<br>\ntime turned out to be false.</p>\n<p>Cheers<br>\nLars</p>\n<ul>\n<li>This thread also reminded me that I haven't yet installed the 32 bit<br>\nlibraries on the Jenkins nodes.</li>\n</ul>",
        "id": 294667787,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661172371
    },
    {
        "content": "<p>From: David Matthews &lt;<a href=\"mailto:dm@prolingua.co.uk\">dm@prolingua.co.uk</a>&gt;<br>\nTypically 64-bit mode takes around twice as much memory as 32-bit.  Most <br>\nof the data is things like cons-cells that are twice as big.</p>\n<p>I suspect that your application has a great deal of shareable data in <br>\nit.  When memory is tight the Poly/ML GC runs a sharing pass that looks <br>\nfor common data and uses that to reduce the size of the live data.  It's <br>\nexpensive to run and the results are only known when the run is complete <br>\nso it is only used when absolutely necessary.  In 32-bit mode the heap <br>\nsize is limited by the system to somewhere around 3.5G so it's much more <br>\nlikely to run the sharing pass there than with a larger available heap <br>\nin 64-bit mode.  It may well be that in your particular case the heap <br>\ncan be reduced quite substantially.  I seem to recall that NinjaThreads <br>\nthe first time the sharing pass was run it achieved somewhere around an <br>\n80% reduction.</p>\n<p>It could be worth trying your example in 64-bit mode but limiting the <br>\nheap with --maxheap to say 8G.  Maybe there ought to be a way to tell <br>\nthe heap sizer that this application may benefit from running the <br>\nsharing pass sooner rather than later.</p>\n<p>David</p>",
        "id": 294667932,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661172420
    }
]