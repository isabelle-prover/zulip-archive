[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nNote that concerning the prover backend, both \\&lt;II&gt; \\&lt;RR&gt; <em>are</em> allowed <br>\nwithin identifiers; the prover gets these ASCII sequences only.  You don't <br>\nsee the corresponding unicode glyph in Isabelle/jEdit, though. (The <br>\ntraditional dropout is \\&lt;lambda&gt;, which is still not possible in <br>\nidentifiers as \\&lt;lambda&gt;' etc.)</p>\n<p>The problem of \\&lt;II&gt; and \\&lt;RR&gt; is an overlap with the Unicode rendering of <br>\n\\&lt;Re&gt; and \\&lt;Im&gt;.  Unlike TeX, the second copy of fraktur I and R is <br>\nmissing from the Unicode 6.1 standard, cf. <br>\n<a href=\"http://unicode.org/charts/PDF/U1D400.pdf\">http://unicode.org/charts/PDF/U1D400.pdf</a></p>\n<p>\"Fraktur symbols</p>\n<p>This style is sometimes known as black-letter. Black-letter symbols<br>\n   already encoded in the Letterlike Symbols block are omitted here to<br>\n   avoid duplicate encoding.\"</p>\n<p>Donald Knuth and the AMS knew better, and provided separate copies, with <br>\nslightly different shape.</p>\n<p>Our IsabelleText font happens to have I and R glyphs in the Fraktur slot <br>\nunofficially, but I did not use them in the default mapping of <br>\nIsabelle2012/etc/symbols.  Instead of stretching unicode too far, I am <br>\nconsidering to remove the default rendering for \\&lt;Re&gt; and \\&lt;Im&gt; instead, <br>\nto make the fraktur alphabet more uniform.</p>\n<p>(And yes, Unicode is notorious to require long explanations and <br>\nconsiderations for seemingly trivial things.)</p>\n<p>Makarius</p>",
        "id": 294165375,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854557
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThere is indeed a big difference of sledgehammer in Isabelle2011-1 vs. <br>\nIsabelle2012.  The current release might still have some drop-outs, <br>\nthough.  If you spot anything specific, keep telling us (either the <br>\nmailing list, or Jasmin Blanchette, or me).</p>\n<p>In particular, I suspect that E prover 1.4/1.5 still has too much shell <br>\nscripting built-in to work smoothly on Cygwin.  It might also help to <br>\npoint out such observations to Stephan Schulz from <a href=\"http://eprover.org\">eprover.org</a>, to <br>\nmotivate him to improve it further.</p>\n<p>Makarius</p>",
        "id": 294165381,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854561
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nHi,</p>\n<p>I don't like making this mailing list my personal playground, and after <br>\nthis email, I'll make a belated New Year's resolution to make a <br>\nconcerted effort to use this list for what it's best used for, showing <br>\nexperts a piece a code with a problem, which the experts are good at <br>\nanalyzing fast and can reply to fast.</p>\n<p>If I had a blog, which I do, I could turn this email into a preliminary <br>\nproduct review for Isabelle, which I won't at this time. If there's any <br>\nvalue in this, it could be that a potential user out there has some of <br>\nthe same questions I had.</p>\n<p>You can also consider me an early representative of the new wave of <br>\nusers who will come here and either complain about the product and <br>\ndisrespect the product, because they don't know what they're looking at, <br>\nor tell you how awesome it is, because they've figured out what they're <br>\nlooking at.</p>\n<p>[I interrupt this email for an important message. I don't know if I <br>\nwould have been excited enough to write this email if I wouldn't have <br>\ngotten a structured proof out of sledgehammer on my first try. My <br>\ncurrent run of sledgehammer failed on the structured proof. I'll try to <br>\nset the timeout longer. However, I did get a couple of lines that say <br>\nsomething like \"Found proof (284 ms)\", but I don't know which ATP proved <br>\nit. Anyway, I got a screenshot of the first results. Getting any proof <br>\ncould be considered exciting, but the structured proof gives more visual <br>\nexcitement.]</p>\n<p>Not trying anymore to make this into a polished review, I throw out some <br>\nideas.</p>\n<p>I dropped Isabelle for about 6 months, up until about May 2012, but in a <br>\nperiod of about 4 to 5 months, I satisfied at least 5 \"proof of concept\" <br>\nquestions I had, where there was and always will be the ongoing question <br>\nof how powerful Isabelle's logic engine is.</p>\n<p>(1) Can proofs in Isabelle be made to look and flow like traditional <br>\nmathematical proofs?</p>\n<p>I answered that fairly quickly after working through <br>\n<a href=\"http://dream.inf.ed.ac.uk/projects/isabelle/Isabelle_Primer.pdf\">http://dream.inf.ed.ac.uk/projects/isabelle/Isabelle_Primer.pdf</a>. Many <br>\npeople don't take the time and make the choices to make their proofs <br>\nlook great, but formatting a document to look good takes time.</p>\n<p>(2) Can I become an advanced user of Isabelle with minimal help?</p>\n<p>It took me a while to get confidence about that, because I knew I would <br>\nhave a need to understand some of the distribution source, and the style <br>\nof proofs in the distribution source is all over the place; the theories <br>\nhave been, after all, produced over many years. After reading Makarius's <br>\ntwenty ways to prove (A /\\ B) --&gt; (B /\\ A) in his PhD thesis, along with <br>\nall the documentation that I've collected, I got the confidence that I'm <br>\nnot going to hit a brick learning wall I can't get over.</p>\n<p>(3) Can the syntax of Isabelle be made to look very, very mathematical?</p>\n<p>I already knew about the available math symbols, and the structured <br>\nproofs, which was part of the initial attraction. I showed in a recent <br>\nemail that Isar identifiers can be made to look mathematical. Let no man <br>\nor woman say that single, subscripted Latin, Greek, mathcal, or mathfrak <br>\nalphabet characters do not meet the requirements of looking mathematical.</p>\n<p>For those who don't know, an Isar identifier can use 0-9, ', and _, <br>\nthough it can't start with those characters. In addition, it can use <br>\na-z, A-Z, \\&lt;a&gt; - \\&lt;z&gt;, \\&lt;A&gt; - \\&lt;Z&gt;, \\&lt;aa&gt; - \\&lt;zz&gt;, \\&lt;AA&gt; - \\&lt;ZZ&gt; (but <br>\nnot II and RR) , and the lower and upper case Greek alphabet, such as <br>\n\\&lt;alpha&gt;. You can use \\&lt;^isub&gt; and \\&lt;^isup&gt; followed by the <br>\naforementioned characters anywhere you want, and as many times as you <br>\nwant. That's some major naming options, compared to most programming <br>\nlanguages.</p>\n<p>(4) Can I get axiomatic ZF sets in HOL?</p>\n<p>This whole thing of axiomatic sets in Isabelle is a big subject. I make <br>\nsure here that I don't go off telling you all my thoughts and opinions <br>\non this subject. I only say that there are many practical reasons why I <br>\nchoose Isabelle/HOL over Isabelle/ZF, and I have a sufficient interest <br>\nin sets to want to try my hand at reinventing the wheel.</p>\n<p>Also, what has evolved is my understanding of the concept of <br>\nmeta-languages and object languages. I leave it at that. Sort of. I'll <br>\nactually be working through Jech and Hrbacek's \"Introduction to Set <br>\nTheory, 3rd\", which is one of the standard texts on axiomatic sets. My <br>\nintent is to try to imitate their development of sets. Got to have goals <br>\nin life, even if the goals don't always work out.</p>\n<p>(5) Does Isabelle allow me to choose between proving a proof step <br>\nautomatically and explicitly specifying how to prove the step?</p>\n<p>Yes. For this, I'm already starting to forget that this was a \"big <br>\nquestion issue\". I assure you, if Isabelle only had the ability to <br>\nprovide \"mysterious proof results\" by auto, I wouldn't be trying to <br>\nlearn it. On the other hand, if I knew I was never ever going to have <br>\nthe option to not prove every little detail, then I would be buckling <br>\ndown for some major brainwave pain in the future.</p>\n<p>A TALE TO TELL</p>\n<p>The above questions were some of my questions. It's not that they've set <br>\nthings in stone, but up to this point, the answers to my big questions <br>\nhave been positive.</p>\n<p>Last year, I started looking at HOL.thy very early in the game to try <br>\nand figure out if \"I can learn this\". From November to May, I did <br>\nnothing and was simply waiting on the next release. Recently, when I got <br>\nto \"type_synonym\" on page 12, the light bulb came on for a way to try <br>\nand set up sets. I put down a little bit of code just to try my hand at <br>\nusing some of the keywords.</p>\n<p>I layed down some type commands, a few axioms, defined the first theorem <br>\nto be proved (that the empty set is unique), and tried my hand at using <br>\n\"apply(auto)\", which requires, of course, knowing how to type on the <br>\nkeyboard.</p>\n<p>It was a no go, which was okay because I wasn't trying to be in \"serious <br>\nprover mode\". A few days passed, and it occurred to me, \"How about that <br>\naxiom of extension, bro? Defining set equality would be a good thing, <br>\ndon't you think?\"</p>\n<p>So I put in the axiom of extension and tried auto again. No go. But, <br>\nhey, doing the easy stuff can count for a lot, because last year I put <br>\nquite a bit of effort into looking at sledgehammer's options. The idea <br>\nis, if sledgehammer gives you the option to try something, then make it <br>\ntry it. It turns out that I end up using fairly simple options for <br>\nsledgehammer.</p>\n<p>Last year, I had viper installed, but I only have the default setup now, <br>\nso I give it these options:</p>\n<p>sledgehammer_params [provers = \"e cvc3 spass z3 z3_tptp metis\", <br>\nverbose=true, isar_proof=true]</p>\n<p>What you should know is that with Isabelle2011-1, sledgehammer running <br>\nunder Cygwin was useless. It wouldn't ever come back, or it would <br>\ntimeout. I knew sledgehammer worked because I tried it out under Linux.</p>\n<p>I tried sledgehammer, not expecting any results. I got results. In <br>\nparticular, the structured proof stood out because it's not a one-line <br>\nstatement telling you, \"Found proof\".</p>\n<p>Having a healthy amount of paranoia, and preferring to think like a <br>\nlawyer, I wouldn't consider an auto proof meaningful without trying to <br>\nfigure out any details it gives me, checking my code setup, and, in <br>\ngeneral, trying to decide whether I gave sledgehammer meaningful <br>\ninformation.</p>\n<p>However, I took out the axiom of extension, and sledgehammer found no <br>\nsolution. I put it back in, and sledghammer finds a solution. <br>\nConclusive? No. But not bad news either. The easy part is done, I <br>\nassume. Using the axiom of separation and the power set? I don't know <br>\nabout that. Oh yea, and replacing the auto proof with a non-auto proof.</p>\n<p>Okay. I completed this to partly get this type of thing out of my <br>\nsystem. I could have waited months, or a year, and said, \"Hey, this <br>\nJech's set theory thing worked out.\" It may not work out. It's no big <br>\ndeal if it doesn't, since there would probably be a good reason why it <br>\ndidn't work out.</p>\n<p>It's also to say, \"Hey, I like that magic\". And to say, \"Dude, how do <br>\nyou do that? But please, don't even try to tell me.\"</p>\n<p>Two screen shots are attached. One shows the structured proof that it <br>\nfound that it doesn't find anymore. I assume it's because CPU resources <br>\ngot sucked up by Windows for something else. I'll try setting the <br>\noptions later.</p>\n<p>Regards,<br>\nGB<br>\n<a href=\"/user_uploads/14278/2ZLPzNt64UmANu3CYTIt03H6/120712_structured_proof_found.png\">120712_structured_proof_found.png</a><br>\n<a href=\"/user_uploads/14278/MTYndwMh5E1O84dWXfSQbIGf/120712_axiom_setup.png\">120712_axiom_setup.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/2ZLPzNt64UmANu3CYTIt03H6/120712_structured_proof_found.png\" title=\"120712_structured_proof_found.png\"><img src=\"/user_uploads/14278/2ZLPzNt64UmANu3CYTIt03H6/120712_structured_proof_found.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/14278/MTYndwMh5E1O84dWXfSQbIGf/120712_axiom_setup.png\" title=\"120712_axiom_setup.png\"><img src=\"/user_uploads/14278/MTYndwMh5E1O84dWXfSQbIGf/120712_axiom_setup.png\"></a></div>",
        "id": 294219498,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660896697
    }
]