[
    {
        "content": "<p>From: Juho Kupiainen &lt;<a href=\"mailto:juho.kupiainen.general.ai.group@gmail.com\">juho.kupiainen.general.ai.group@gmail.com</a>&gt;<br>\nHow could I go about obtaining a small proof checker for Isabelle HOL, that<br>\ntakes a theory file and checks that it's valid? I would like it to be<br>\nsimple to understand and as few lines of code as possible, yet it should<br>\ninclude the axioms of the system and be able to check the whole archive of<br>\nformal proofs.</p>",
        "id": 294764707,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661201394
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nIt sound like you ask for an \"uninformative green light\" for your<br>\ntheories, but that is neither realistic nor useful.</p>\n<p>You need to be more specific about what you mean, and what the<br>\napplication actually context is. So many things can go wrong. You need<br>\nto think about what you want to get right in which way.</p>\n<p>Makarius</p>",
        "id": 294764720,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661201400
    },
    {
        "content": "<p>From: Mark Adams &lt;<a href=\"mailto:mark@proof-technologies.com\">mark@proof-technologies.com</a>&gt;<br>\nHi Juho,</p>\n<p>The problem is that something that would correctly process an Isabelle <br>\ntheory file and reliably check it would need to be almost as big and <br>\ncomplicated as Isabelle itself.  The solution is to tweak Isabelle so <br>\nthat, after it processes the theory file, it somehow captures it <br>\ninternally so that it can exported in a much simpler form (a \"proof <br>\nobject\") that a simple proof checker could process.  This simple proof <br>\nchecker would ideally also print out the statements of the theorems it <br>\nhas checked, so that there is no need to trust anything about the <br>\noriginal exporting system.</p>\n<p>There are various projects that have worked on this idea, including Open <br>\nTheory, Dedukti and Common HOL (anyone know of any other ones?).  I <br>\ndon't know whether anyone got something working reliably for Isabelle <br>\ntheory files, but I don't see any fundamental reason why it couldn't be <br>\ndone.</p>\n<p>Mark.</p>",
        "id": 294764851,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661201452
    },
    {
        "content": "<p>From: mukesh tiwari &lt;<a href=\"mailto:mukeshtiwari.iiitm@gmail.com\">mukeshtiwari.iiitm@gmail.com</a>&gt;<br>\nHi Everyone,</p>\n<p>I was also looking for answer for this question and ended up finding a<br>\ncouple of proof checker HOL-Zero [1], Coqchk [2] (I believe it's the<br>\nextracted code from [3], but I am not sure), and reference Lean<br>\nchecker [4].</p>\n<p>[1] <a href=\"http://www.proof-technologies.com/holzero/\">http://www.proof-technologies.com/holzero/</a><br>\n[2] <a href=\"https://coq.inria.fr/refman/practical-tools/coq-commands.html#compiled-libraries-checker-coqchk\">https://coq.inria.fr/refman/practical-tools/coq-commands.html#compiled-libraries-checker-coqchk</a><br>\n[3] <a href=\"https://github.com/coq-contribs/coq-in-coq\">https://github.com/coq-contribs/coq-in-coq</a><br>\n[4] <a href=\"https://github.com/leanprover/tc\">https://github.com/leanprover/tc</a></p>",
        "id": 294764868,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661201460
    }
]