[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@kit.edu\">andreas.lochbihler@kit.edu</a>&gt;<br>\nHi Joachim,</p>\n<p>you can exploit one of Isar's features. When you do a fix-assume-show, Isar <br>\nmerely tries to unify this sequence with one of the goals. You do not need to <br>\nstate the precise goal. Hence, you can do something like the following:</p>\n<p>next<br>\n   fix P<br>\n   show P P P P P P P P P P sorry<br>\nqed</p>\n<p>where the number of P's in the show statement equals the number of unproven <br>\ncases. Although this is not as concise as a sorry qed, it should be doable.</p>\n<p>Andreas</p>",
        "id": 294161602,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660853333
    },
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:breitner@kit.edu\">breitner@kit.edu</a>&gt;<br>\nHi,</p>\n<p>Right now I was in the middle for a multi-case induction proof,<br>\nsomething like</p>\n<p>have \"foo\"<br>\n        proof(induct ...)<br>\n        case (A ...)<br>\n          ...<br>\n          show ?case by ...<br>\n        next<br>\n        case (B ...)<br>\n          ...<br>\n          show ?case by ...<br>\n        next</p>\n<p>with many cases remaining. At this point, I wanted to stop working on<br>\nthis proof and do something else. With apply-scripts I’d just write<br>\n\"sorry\" instead of \"done\" and be done with it. But what can I do here,<br>\nbesides writing down each missing case and solving it with \"sorry\"? I<br>\ntried</p>\n<p>show \"foo\" sorry<br>\n        qed</p>\n<p>but of course \"foo\" is not the current goal any more. Things like</p>\n<p>qed sorry</p>\n<p>or</p>\n<p>apply_end(sorry)<br>\n        qed</p>\n<p>or<br>\n     qed(cheating)</p>\n<p>(the “cheating” coming from A.1.3 of isar-ref, but seemingly not meant<br>\nliterarly) of course don’t make sense either. Is there a clean way to<br>\nstop the proof here?</p>\n<p>Thanks,<br>\nJoachim<br>\n<a href=\"/user_uploads/14278/sWXfQkAXBXvfeg1A37CHXjhU/signature.asc\">signature.asc</a></p>",
        "id": 294165279,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854506
    },
    {
        "content": "<p>From: Johannes Hölzl &lt;<a href=\"mailto:hoelzl@in.tum.de\">hoelzl@in.tum.de</a>&gt;<br>\nYou can use \"oops\". The theorem is not proved, but you are back to the<br>\ntop level and you can start a new theorem.</p>\n<ul>\n<li>Johannes</li>\n</ul>",
        "id": 294165287,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854511
    },
    {
        "content": "<p>From: John Wickerson &lt;<a href=\"mailto:jpw48@cam.ac.uk\">jpw48@cam.ac.uk</a>&gt;<br>\nHm, but the problem there is that with \"sorry\" you can use the unsafe theorem in later lemmas, but with \"oops\" the theorem can't be used later.</p>",
        "id": 294165315,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854523
    }
]