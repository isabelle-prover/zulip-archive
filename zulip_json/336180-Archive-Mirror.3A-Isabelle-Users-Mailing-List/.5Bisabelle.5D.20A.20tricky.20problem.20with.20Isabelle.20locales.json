[
    {
        "content": "<p>From: \"W. Li\" &lt;<a href=\"mailto:wl302@cam.ac.uk\">wl302@cam.ac.uk</a>&gt;<br>\nDear Isabelle pros,</p>\n<p>I have encountered a tricky problem with Isabelle locales. Is there anyone <br>\nkind enough to help?</p>\n<p>Suppose we have a dummy locale and a definition:<br>\n  locale dummy = fixes x::bool assumes x_true:x<br>\n  definition (in dummy) f::bool where \"f ≡ ∀y::bool. y∨x\"</p>\n<p>We can show the following lemma by unfolding 'f' first:<br>\n  lemma (in dummy) f<br>\n  proof (unfold f_def,rule)<br>\n    fix y <br>\n    show \"y∨x\" using x_true  by auto<br>\n  qed</p>\n<p>However, when trying to prove a similar lemma, I don't know how to unfold <br>\n'f' :(<br>\n  lemma (in dummy) \"dummy.f True\"</p>\n<p>Any help is highly appreciated.<br>\nBest regards,<br>\nWenda Li</p>",
        "id": 294236829,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660905125
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nHallo,</p>\n<p>first of all, I cannot quite see the purpose of declaring the second<br>\nlemma as \"in dummy\".</p>\n<p>The reason why you cannot simply unfold the definition of f in your<br>\nsecond lemma is that the definition lemma dummy.f_def is conditional:<br>\nTry \"thm dummy.f_def\" and you'll get:</p>\n<p>dummy ?x ⟹ dummy.f ?x ≡ ∀y. y ∨ ?x</p>\n<p>i.e. your definition of is is conditional; it only exists inside the<br>\nlocale, and therefore you must first prove that the assumptions of the<br>\nlocale hold, i.e. \"dummy True\" in your case, since you want to show that<br>\n\"dummy.f True\" holds; \"True\" is the parameter x that you give to the<br>\nlocale. Your proof could then look like this:</p>\n<p>What you can do is this:</p>\n<p>lemma \"dummy.f True\"<br>\nproof-<br>\n  have \"dummy True\" by (unfold_locales, rule)<br>\n  from dummy.f_def[OF this] show \"dummy.f True\" by simp<br>\nqed</p>\n<p>Cheers,<br>\nManuel</p>",
        "id": 294236840,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660905134
    }
]