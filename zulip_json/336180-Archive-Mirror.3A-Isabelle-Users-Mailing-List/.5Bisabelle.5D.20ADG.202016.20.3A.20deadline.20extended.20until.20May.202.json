[
    {
        "content": "<p>From: Filip Marić &lt;<a href=\"mailto:filipmatfbgacrs@gmail.com\">filipmatfbgacrs@gmail.com</a>&gt;<br>\nADG 2016<br>\nEleventh International Workshop on Automated Deduction in Geometry<br>\n                         Strasbourg, June, 27-29<br>\n<a href=\"http://icube-web.unistra.fr/adg2016/\">http://icube-web.unistra.fr/adg2016/</a></p>\n<p><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong>*<br>\n<strong>*</strong><br>\n<strong>*</strong><br>\n<strong>*</strong>         New submission deadline: May 2                 <strong>*</strong><br>\n<strong>*</strong><br>\n<strong>*</strong><br>\n<strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong>*</p>\n<p>EXTENDED DEADLINE May 2</p>\n<p>Overview:</p>\n<p>ADG is a forum to exchange ideas and views, to present research<br>\nresults and progress, and to demonstrate software tools at the<br>\nintersection between geometry and automated deduction. The workshop is<br>\nheld every two years. The previous editions of ADG were held in<br>\nCoimbra in 2014, Edinburgh in 2012, Munich in 2010, Shanghai in 2008,<br>\nPontevedra in 2006, Gainesville in 2004, Hagenberg in 2002, Zurich in<br>\n2000, Beijing in 1998, and Toulouse in 1996. The 11th edition, ADG<br>\n2016, will be held in Strasbourg, France, June 27 – 29, 2016.</p>\n<p>Scope:</p>\n<p>Relevant topics include (but are not limited to):</p>\n<p>polynomial algebra, invariant and coordinate-free methods,<br>\nprobabilistic, synthetic, and logic approaches, techniques for<br>\nautomated geometric reasoning from discrete mathematics,<br>\ncombinatorics, and numerics;<br>\nsymbolic and numeric methods for geometric computation, geometric<br>\nconstraint solving, automated generation/reasoning and manipulation<br>\nwith diagrams;<br>\ndesign and implementation of geometry software, special-purpose tools,<br>\nautomated theorem provers, experimental studies;<br>\napplications of ADG to mechanics, geometric modelling, CAGD/CAD,<br>\ncomputer vision, robotics and education.<br>\nSubmission Guidelines:</p>\n<p>We invite the following types of submissions:<br>\nExtended abstracts<br>\nFull paper (maximum 20 pages)<br>\nThe extended abstracts must address the following aspects explicitly.<br>\nProblem: What is the problem/question/objective?<br>\nMotivation: Why do we work on the problem? What is the importance?<br>\nState of the Art: What has been done already on the problem?<br>\nContribution: What is the main original contribution?<br>\nMain Idea: What is the main idea underlying the contribution?<br>\nThe submissions should follow the standard Springer LNCS Proceedings format.<br>\nElectronic submission as PDF is required via EasyChair (at<br>\n<a href=\"http://www.easychair.org/conferences/?conf=adg2016\">http://www.easychair.org/conferences/?conf=adg2016</a>).<br>\nIf you have any problems with the submission of your paper, or<br>\nquestions concerning ADG 2016 or EasyChair, please contact<br>\n<a href=\"mailto:adg2016@easychair.org\">adg2016@easychair.org</a>.<br>\nRefereeing and Publication:</p>\n<p>The submitted contributions will be subject to a summary review by the<br>\nProgram Committee, bearing in mind that this first review is mainly<br>\nfor presentation, NOT for publication.<br>\nDigital publication of the full papers accepted for presentation will<br>\nbe available at the workshop.<br>\nThe authors of the full papers accepted for presentation at the<br>\nworkshop will be to submit their full and/or revised papers for<br>\npublication in a formal proceedings of ADG 2016 after the workshop.<br>\nThe full papers (submitted after the meeting) will be formally<br>\nreviewed by PC members and external referees.<br>\nAll participants are encouraged to bring along posters on their<br>\ngeometric work (irrespective of whether it was presented at the<br>\nworkshop or not) for display during ADG 2016.<br>\nThe accepted full papers will be published in the Springer Lecture<br>\nNotes in Artificial Intelligence (LNAI) series or Lecture Notes in<br>\nComputer Science (LNCS) series.<br>\nThe proceedings of ADG 1996, ADG 1998, ADG 2000, ADG 2002, and ADG<br>\n2004, ADG 2006,  ADG 2010, ADG 2012 and ADG 2014 appeared as LNAI<br>\n1360, LNAI 1669, LNAI 2061, LNAI 2930, LNAI 3763, LNAI 4869, LNCS<br>\n6877, LNAI 7993 and LNAI 9201 respectively.<br>\nInvited Speakers:</p>\n<p>Predrag Janicic, Faculty of Mathematics, University of Belgrade</p>\n<p>Title: Geometrisation of Geometry</p>\n<p>Abstract: Coherent logic (CL) or geometry logic is a (semi-decidable)<br>\nfragment of FOL that can be considered to be an extension of<br>\nresolution logic. CL is suitable for formalization and automation of<br>\nvarious mathematical theories, including geometry. This talk will give<br>\nan overview of developments in geometry based on CL: automated theorem<br>\nprovers for CL, CL-based formalizations of geometry, CL-based proof<br>\nrepresentation for geometry, links between CL and geometry<br>\nconstruction problems, links between CL and geometrical illustrations,<br>\netc.</p>\n<p>Dominique Michelucci, University of Burgundy.</p>\n<p>Title: Solving Constraints without Equations, Why and How</p>\n<p>Abstract: Classically, when we solve geometric constraints, the latter<br>\nare represented with mathematical equations, or inequalities. These<br>\nequations or inequalities are represented explicitly, with trees or<br>\nDAGs or polynomials, etc. So it is easy to symbolically compute<br>\nderivatives, etc. It is possible to make proofs of geometric theorems.</p>\n<p>But, recently, we meet more and more frequently problems for which<br>\nequations are not available for many reasons, e.g. when the shape is<br>\nthe result of a procedure (subdivision surfaces; fractals). In this<br>\nnew framework, shapes or geometric figures are the results of the<br>\nevaluation of black box procedures / algorithms / subprograms, feed<br>\nwith some parameters. These programs contain if-then-else constructs,<br>\nloops, they compute fixed points, they call ODE and PDE solvers. Some<br>\nparameters are free : how to compute their values to satisfy specified<br>\nconstraints ? How to solve without equations ?</p>\n<p>Program Committee</p>\n<p>Chair: Ileana Streinu (USA)</p>\n<p>Members:</p>\n<p>Michael Beeson (USA)<br>\nFrancisco Botana (Spain)<br>\nJohn Bowers (USA)<br>\nXiaoyu Chen (China)<br>\nXiao-Shan Gao (China)<br>\nTetsuo Ida (Japan)<br>\nFilip Maric (Serbia)<br>\nPascal Mathis (France)<br>\nJulien Narboux (France)<br>\nPavel Pech (Czech Republic)<br>\nPedro Quaresma (Portugal)<br>\nTomas Recio (Spain)<br>\nPascal Schreck (France)<br>\nMeera Sitharam (USA)<br>\nDongming Wang (China)<br>\nBican Xia (China)</p>",
        "id": 294672894,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661173937
    }
]