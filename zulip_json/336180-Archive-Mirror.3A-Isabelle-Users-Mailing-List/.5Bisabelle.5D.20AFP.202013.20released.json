[
    {
        "content": "<p>From: Gerwin Klein &lt;<a href=\"mailto:Gerwin.Klein@nicta.com.au\">Gerwin.Klein@nicta.com.au</a>&gt;<br>\nThe entries in the Archive of Formal proofs are now available for Isabelle2013 at [http://afp.sf.net].</p>\n<p>The following new entries are available from the front page:</p>\n<p>Open Induction<br>\nby Mizuhito Ogawa and Christian Sternagel (submitted 2012-11-02)<br>\n[http://afp.sourceforge.net/entries/Open_Induction.shtml]</p>\n<p>Abstract:<br>\nA proof of the open induction schema based on J.-C. Raoult, Proving<br>\nopen properties by induction, Information Processing Letters 29,<br>\n1988, pp.19-23.</p>\n<p>Ribbon Proofs<br>\nby John Wickerson (submitted 2013-01-19)<br>\n[http://afp.sourceforge.net/entries/Ribbon_Proofs.shtml]</p>\n<p>Abstract:<br>\nThis document concerns the theory of ribbon proofs: a diagrammatic<br>\nproof system, based on separation logic, for verifying program<br>\ncorrectness. We include the syntax, proof rules, and soundness<br>\nresults for two alternative formalisations of ribbon proofs.<br>\nCompared to traditional proof outlines, ribbon proofs emphasise the<br>\nstructure of a proof, so are intelligible and pedagogical. Because<br>\nthey contain less redundancy than proof outlines, and allow each<br>\nproof step to be checked locally, they may be more scalable. Where<br>\nproof outlines are cumbersome to modify, ribbon proofs can be visually<br>\nmanoeuvred to yield proofs of variant programs.</p>\n<p>Cheers,<br>\nGerwin</p>\n<hr>\n<p>The information in this e-mail may be confidential and subject to legal professional privilege and/or copyright. National ICT Australia Limited accepts no liability for any damage caused by this email or its attachments.</p>",
        "id": 294234132,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660903978
    }
]