[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOperations like Sessions.load or Sessions.selection provide an object of<br>\ntype Sessions.T, which contains all session infos (with dependencies).<br>\nSuch Session.Info entries contain the main session directory: it can be<br>\nused here to filter entries that are within the $AFP hierarchy like this:</p>\n<p>val sessions = Sessions.load(options, dirs = List(Path.explode(\"$AFP\")))</p>\n<p>val afp_prefix = Path.explode(\"$AFP\").canonical_file.toPath</p>\n<p>val afp_sessions = for (info &lt;- sessions.imports_topological_order if<br>\ninfo.dir.canonical_file.toPath.startsWith(afp_prefix)) yield <a href=\"http://info.name\">info.name</a></p>\n<p>Makarius</p>",
        "id": 294718020,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661183903
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nDoes that work correctly wrt \"in\" clauses? In the past we had some<br>\nsession that used \"in ~~/...\" or similar, and IIRC, the \"info.dir\" would<br>\nthen point to the path specified by \"in\". The script should check that<br>\nno such thing is present in a \"ROOT\" file. (It currently does it, by<br>\nselecting all sessions from \"$AFP\" and looking at \"info.dir\".)</p>",
        "id": 294718045,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661183909
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 25/09/17 14:12, Lars Hupel wrote:</p>\n<blockquote>\n<blockquote>\n<p>Operations like Sessions.load or Sessions.selection provide an object of<br>\ntype Sessions.T, which contains all session infos (with dependencies).<br>\nSuch Session.Info entries contain the main session directory: it can be<br>\nused here to filter entries that are within the $AFP hierarchy like this:</p>\n</blockquote>\n<p>Does that work correctly wrt \"in\" clauses?</p>\n</blockquote>\n<p>info.dir correctly refers to the logical session directory, i.e.<br>\nwhatever is specified implicitly or explicitly via 'in', but this is not<br>\nwhat you want here.</p>\n<p>Note that systematic Isabelle/Scala operations on the <em>syntax</em> of<br>\nsession ROOT entries would require access to Session_Entry, but that is<br>\nprivate to Sessions.Parser.</p>\n<blockquote>\n<p>In the past we had some<br>\nsession that used \"in ~~/...\" or similar, and IIRC, the \"info.dir\" &gt;would<br>\nthen point to the path specified by \"in\". The script should check that<br>\nno such thing is present in a \"ROOT\" file.</p>\n</blockquote>\n<p>This sounds very odd.</p>\n<p>I would say it belongs to the normal editorial routine to put ROOT<br>\nentries into a canonical form, such that oddities are easily spotted and<br>\nremoved: i.e. a no-nonsense no-junk policy for AFP ROOT entries.</p>\n<p>I've done such cleanup myself very often (apart from keeping AFP running<br>\nin the first place), but I've also seen a slight decline in this respect<br>\nin recent years.</p>\n<p>Makarius</p>",
        "id": 294718085,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661183919
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;</p>\n<blockquote>\n<p>This sounds very odd.</p>\n</blockquote>\n<p>The purpose of this script is to enforce canonical form of session<br>\nspecifications. Or do you think the requirement to not use \"in\" is odd?</p>\n<p>To clarify: as you have already said, we can't detect whether or not<br>\n\"in\" is syntactically present, but we can at least detect whether it<br>\npoints to a subdirectory in \"$AFP\" or not. If it does, it is acceptable.<br>\nIf not, it isn't.</p>\n<blockquote>\n<p>I've done such cleanup myself very often (apart from keeping AFP running<br>\nin the first place), but I've also seen a slight decline in this respect<br>\nin recent years.</p>\n</blockquote>\n<p>Great, but you're not the only one taking care of this. In the future<br>\nthe \"afp_check_roots\" script might become part of the submission system.<br>\nAfter I've introduced this script there should be very little<br>\nnon-canonical session specifications left.</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294718106,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661183924
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 25/09/17 16:31, Lars Hupel wrote:</p>\n<blockquote>\n<p>To clarify: as you have already said, we can't detect whether or not<br>\n\"in\" is syntactically present, but we can at least detect whether it<br>\npoints to a subdirectory in \"$AFP\" or not. If it does, it is acceptable.<br>\nIf not, it isn't.</p>\n</blockquote>\n<p>We can't detect it in Isabelle2017, but in principle one could go back<br>\nto this later an look at the actual ROOT syntax (presently private). But<br>\nI am myself still unsure about this approach.</p>\n<p>Another possibility is to revisit the duplicate session directory<br>\nproblem after the release.</p>\n<blockquote>\n<p>In the future the \"afp_check_roots\" script might become part of the submission system.</p>\n</blockquote>\n<p>I have no proper overview of AFP admin tools and their requirements.<br>\nMaybe it all needs some general cleanup, and a bit more support in the<br>\nIsabelle/Scala library.</p>\n<p>Concerning really hard checks on ROOT files, I would expect that as part<br>\nof the submission system in the first place. Anything pushed into AFP<br>\nshould be somewhat sane already.</p>\n<blockquote>\n<p>After I've introduced this script there should be very little<br>\nnon-canonical session specifications left.</p>\n</blockquote>\n<p>Non-canonical also means bad formatting and other informal garbage,<br>\nwhich such tools cannot easily detect.</p>\n<p>I say this here, because the session-qualified theory names reform is<br>\nonly half finished: I've spent a very long time struggling with odd AFP<br>\nROOT entries, both syntactically and semantically.</p>\n<p>Makarius</p>",
        "id": 294718190,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661183946
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;</p>\n<blockquote>\n<p>We can't detect it in Isabelle2017, but in principle one could go back<br>\nto this later an look at the actual ROOT syntax (presently private). But<br>\nI am myself still unsure about this approach.</p>\n</blockquote>\n<p>In that case I will refrain from changing the scripts and will recommend<br>\nthe AFP editors to continue using the AFP as a component and not<br>\nregistering the \"$AFP\" directory as a session root.</p>\n<blockquote>\n<p>Concerning really hard checks on ROOT files, I would expect that as part<br>\nof the submission system in the first place. Anything pushed into AFP<br>\nshould be somewhat sane already.</p>\n</blockquote>\n<p>AFP contributors can freely edit ROOT files in afp-devel after<br>\nacceptance, so more automation is better.</p>",
        "id": 294718229,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661183959
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nAs I understand there are already a lot of AFP entries that have been edited<br>\nto use session qualified imports. These will not work if those sessions' ROOT<br>\nfiles are not registered</p>\n<p>Peter</p>",
        "id": 294718258,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661183971
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nNormal AFP users and contributors have no need to follow this<br>\nrecommendation, which only concerns AFP editors that run maintenance<br>\nscripts on the AFP.</p>",
        "id": 294718275,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661183977
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nHere is a slightly different approach, using the syntactic Position.T<br>\nfield of Sessions.Info:</p>\n<p>val infos =<br>\n  for {<br>\n    info &lt;- sessions.imports_topological_order<br>\n    file &lt;- Position.File.unapply(info.pos)<br>\n    if Path.explode(file).canonical_file.toPath.startsWith(afp_prefix)<br>\n  } yield <a href=\"http://info.name\">info.name</a></p>\n<p>This use of Position.File is a bit fragile, though. It is not quite<br>\ncanonical Isabelle/Scala systems programming. For the AFP admin tools it<br>\nshould be OK for now.</p>\n<p>Makarius</p>",
        "id": 294718333,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661183992
    }
]