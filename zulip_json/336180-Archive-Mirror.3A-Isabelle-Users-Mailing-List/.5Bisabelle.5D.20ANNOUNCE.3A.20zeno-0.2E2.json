[
    {
        "content": "<p>From: Will Sonnex &lt;<a href=\"mailto:will@sonnex.name\">will@sonnex.name</a>&gt;<br>\nWe've recently finished an update to Zeno, an automated theorem<br>\nproving system for Haskell program properties. It now outputs proofs<br>\nand programs as Isabelle/HOL theories and automatically invokes<br>\nIsabelle to check them. Properties to be checked are expressed in<br>\nHaskell itself, for example:</p>\n<p>reverse_twice xs<br>\n  = prove (reverse (reverse xs) :=: xs)<br>\nelem_append xs ys y<br>\n  = givenBool (elem y ys)<br>\n  $ proveBool (elem y (xs ++ ys))</p>\n<p>There's a much more thorough description to be found on the wiki page<br>\n(<a href=\"http://www.haskell.org/haskellwiki/Zeno\">http://www.haskell.org/haskellwiki/Zeno</a>), or you can try it online<br>\nwith TryZeno (<a href=\"http://www.doc.ic.ac.uk/~ws506/tryzeno\">http://www.doc.ic.ac.uk/~ws506/tryzeno</a>). I'm very<br>\ninexpert with Isabelle so I'm sure the proofs it outputs could be<br>\nimproved.</p>\n<p>Cheers,</p>\n<p>Will</p>",
        "id": 294135940,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660844331
    }
]