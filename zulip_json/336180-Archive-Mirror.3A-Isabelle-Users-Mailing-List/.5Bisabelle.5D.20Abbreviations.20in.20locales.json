[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nHi all,</p>\n<p>I have a problem/question how abbreviations in locales are handled.<br>\nRegard the following toy example:</p>\n<p>locale foo =<br>\n  fixes a :: 'a<br>\nbegin<br>\n  abbreviation \"f == (a,a,a)\"<br>\nend</p>\n<p>locale bar1 = s1!: foo a for a<br>\nbegin<br>\n  term \"s1.f\" -- printed as s1.f<br>\nend</p>\n<p>locale bar2 = s1!: foo b for b<br>\nbegin<br>\n  term \"s1.f\" -- printed as (b,b,b)<br>\nend</p>\n<p>Why is the abbreviation in the second case valid input syntax, but not<br>\npretty-printed in output? And how can I change this behaviour, towards<br>\nalso using the abbreviation in the output?</p>\n<p>A similar problem arises when interpreting the locales. <br>\nAfter interpretation bar2 c (for constant c), the abbreviation \"s1.f\"<br>\nonly works as input.</p>\n<p>The current behaviour is somewhat strange, as it depends on the<br>\nconincidence of the parameter name in the locale expression <br>\n\"s1!: foo a for a\" and the fixed variable name \"a\" that was used when<br>\ndeclaring the locale.</p>\n<p>In my concrete example, I use quite a lot of abbreviations, and one gets<br>\neasily confused if one always sees them expanded in the output. Concrete<br>\nexample: \"s1.lookup\" vs. \"map_op_lookup ops1\"</p>\n<p>Thanks in advance for any help/hints <br>\n  Peter</p>",
        "id": 294221921,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660897941
    }
]