[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear all,</p>\n<p>I am struggling with abbreviations that involve constants which have been registered with <br>\nadhoc_overloading. My problem is that I cannot get Isabelle's pretty-printer to fold the <br>\nabbreviations again.</p>\n<p>Below is the minimal example (for Isabelle2015).</p>\n<p>consts foo :: \"'a ⇒ 'a\"<br>\nconsts foo_nat :: \"nat ⇒ nat\"<br>\nadhoc_overloading foo foo_nat</p>\n<p>abbreviation bar :: \"nat ⇒ nat\" where \"bar == id foo_nat\" (* use unoverloaded constant *)<br>\nterm bar (* prints \"id foo\" *)</p>\n<p>abbreviation bar' :: \"nat ⇒ nat\" where \"bar' == id foo\" (* use overloaded constant *)<br>\nterm bar' (* prints \"id foo\" *)</p>\n<p>How can I make Isabelle's pretty printer contract the right-hand sides of bar or bar' (all <br>\nthis should work also inside a locale).</p>\n<p>Some background context on my use case. I have a locale l for abstracting over a <br>\nmonomorphic monad in some definition d. Later, I instantiate the monad operations in <br>\ndifferent ways using locale import or interpretation. Unfortunately, I get huge terms <br>\nmentioning the global version l.d applied to all the instantiated locale parameters rather <br>\nthan just &lt;my chosen prefix&gt;.d.</p>\n<p>Thanks in advance for any hints,<br>\nAndreas</p>",
        "id": 294648477,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165125
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Andreas,</p>\n<p>this seems yet another instance of the fact that abbreviations, class<br>\noperations and adhoc-overloading in its current implementation do not<br>\ninteract smoothly.  It requires substantial reforms here to get these<br>\nmore robust.</p>\n<p>Cheers,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/va_4iTA5Diw8o1fHk8lcxlHa/signature.asc\">signature.asc</a></p>",
        "id": 294651520,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661166261
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Florian,</p>\n<p>On 06/08/15 11:16, Florian Haftmann wrote:</p>\n<blockquote>\n<p>Hi Andreas,</p>\n<p>Am 31.07.2015 um 12:16 schrieb Andreas Lochbihler:</p>\n<blockquote>\n<p>Dear all,</p>\n<p>I am struggling with abbreviations that involve constants which have<br>\nbeen registered with adhoc_overloading. My problem is that I cannot get<br>\nIsabelle's pretty-printer to fold the abbreviations again.</p>\n<p>Below is the minimal example (for Isabelle2015).</p>\n<p>consts foo :: \"'a ⇒ 'a\"<br>\nconsts foo_nat :: \"nat ⇒ nat\"<br>\nadhoc_overloading foo foo_nat</p>\n<p>abbreviation bar :: \"nat ⇒ nat\" where \"bar == id foo_nat\" (* use<br>\nunoverloaded constant *)<br>\nterm bar (* prints \"id foo\" *)</p>\n<p>abbreviation bar' :: \"nat ⇒ nat\" where \"bar' == id foo\" (* use<br>\noverloaded constant *)<br>\nterm bar' (* prints \"id foo\" *)</p>\n<p>How can I make Isabelle's pretty printer contract the right-hand sides<br>\nof bar or bar' (all this should work also inside a locale).</p>\n</blockquote>\n<p>this seems yet another instance of the fact that abbreviations, class<br>\noperations and adhoc-overloading in its current implementation do not<br>\ninteract smoothly.<br>\nYou are probably right. If I disable adhoc-overloading for the uncheck phase using <br>\n[[show_variants]], the abbreviations are contracted again.</p>\n</blockquote>\n<blockquote>\n<p>It requires substantial reforms here to get these more robust.<br>\nSo for the time being, I have to decide between nice monad syntax and folded abbreviations.</p>\n</blockquote>\n<p>Best,<br>\nAndreas</p>",
        "id": 294651555,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661166273
    }
]