[
    {
        "content": "<p>From: Ken Kubota &lt;<a href=\"mailto:mail@kenkubota.de\">mail@kenkubota.de</a>&gt;<br>\nDear Ramana Kumar and List Members,</p>\n<p>Thank you for your criticism and questions available at<br>\n<a href=\"https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2015-July/msg00149.html\">https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2015-July/msg00149.html</a><br>\nconcerning my project announcement at<br>\n<a href=\"https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2015-July/msg00147.html\">https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2015-July/msg00147.html</a></p>\n<p>There are two motivations for this project besides the elegance of Q0:</p>\n<ol>\n<li>\n<p>The implementation of Q0 should be realized as a Hilbert-style system, since <br>\naxiomatic (Hilbert-style) systems and natural deduction systems show a <br>\ndifferent behavior.<br>\nTheorems (and each line of a proof) in Hilbert-style systems always have a <br>\nconstant number (one or zero) of occurrences of the deduction symbol <br>\n(turnstile), hence the theorem proved in the files available at <br>\n<a href=\"http://dx.doi.org/10.4444/100.102\">http://dx.doi.org/10.4444/100.102</a> cannot be expressed, and Goedel's First <br>\nIncompleteness Theorem cannot be obtained in a Hilbert-style system (like any <br>\nother theorem with two or more occurrences of the deduction symbol, unless it <br>\nis a metatheorem, i.e., it makes use of syntactical variables).<br>\nSince Q0 is a Hilbert-style system, the proof of Goedel's First Incompleteness <br>\nTheorem fails in it (step 7101.4 has no syntactic justification), although this <br>\nis not caused by unwanted restrictions of Q0. For details, please see: <br>\n<a href=\"http://dx.doi.org/10.4444/100.101\">http://dx.doi.org/10.4444/100.101</a><br>\nThus axiomatic (Hilbert-style) systems and natural deduction systems differ not <br>\nonly in terms of the proof style, but also in terms of the expressiveness of <br>\nthe language.<br>\nI do not want to discard the results of natural deduction systems as a whole, <br>\nbut the class of theorems that can be obtained in natural deduction systems <br>\nonly seems problematic to me. For this reason, I prefer axiomatic <br>\n(Hilbert-style) systems such as Q0.<br>\n(The Isabelle implementations of higher-order logic are natural deduction <br>\nsystems, as of my knowledge, and Isabelle is the only proof assistant software <br>\nI know of that is easy and convenient to handle according to the specification <br>\nin the announcement.)</p>\n</li>\n<li>\n<p>On the basis of an implementation of Q0, an implementation of my own <br>\n(currently unpublished) system R0 within Isabelle might be possible, which <br>\nallows for type variables and binding of type variables with lambda and <br>\ntherefore has the expressiveness of polymorphic and dependent type theory, thus <br>\nremoving the limitations of Q0. I already finished the R0 software <br>\nimplementation as an independent proof verification system on my own and <br>\ncarried out many of Andrews' proofs in it, but for the layer of proof <br>\nautomation on top of that, a machinery is desirable, the development and <br>\nmaintenance of which would go beyond the capabilities of a single person.</p>\n</li>\n</ol>\n<p>If there are any further questions, please check my website (see below) instead <br>\nof the mailing list only, as I might include a project page there. Also, I <br>\nmight need some time to answer appropriately.</p>\n<p>Kind regards,</p>\n<p>Ken Kubota</p>\n<hr>\n<p>Ken Kubota<br>\ndoi: 10.4444/100<br>\n<a href=\"http://dx.doi.org/10.4444/100\">http://dx.doi.org/10.4444/100</a></p>",
        "id": 294648404,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165089
    }
]