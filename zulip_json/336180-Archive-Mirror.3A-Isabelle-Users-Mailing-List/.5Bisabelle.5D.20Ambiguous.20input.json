[
    {
        "content": "<p>From: mahmoud abdelazim &lt;<a href=\"mailto:m.abdelazim@icloud.com\">m.abdelazim@icloud.com</a>&gt;<br>\nHi<br>\n<a href=\"/user_uploads/14278/eAzp3J5Tpx1AL3V4HeqAdLCd/Test.thy\">Test.thy</a></p>",
        "id": 294320540,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660926743
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;</p>\n<blockquote>\n<p>in Test.thy file i have made an abbreviation subset_b<br>\nbut in output it gave me in output an Ambiguous input but i don’t know why ? and where is the problem ?</p>\n</blockquote>\n<p>The problem already occurs earlier, in your function definition:</p>\n<blockquote>\n<p>Variable \"subst\" occurs on right hand side only:<br>\n⋀x a a1 a2 subst. substb x a (Less a1 a2) = Less (subst x a a1) (subst x a a2)</p>\n</blockquote>\n<p>It seems to me that you defined \"subst\" somewhere else, but didn't<br>\ninclude it in the theory file you attached.</p>\n<p>After fixing this, the ambiguity error goes away. You might still want<br>\nto define some other syntax, or at least give a fixity annotation,<br>\nbecause \"[a/b]\" could also denote the list containing the value \"a/b\".</p>",
        "id": 294320555,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660926747
    },
    {
        "content": "<p>From: René Thiemann &lt;<a href=\"mailto:rene.thiemann@uibk.ac.at\">rene.thiemann@uibk.ac.at</a>&gt;<br>\nDear Mahmoud,</p>\n<p>as Lars already wrote, the problem is that \"[a/b]\" may be the singleton list with the one element: \"a divided by b\".<br>\nBut unlike to Lars I only detect the ambiguity first in the abbreviation, not in the function definition:</p>\n<p>After the abbreviation, a term like \"p[x/a]\" could either be the substb-function with arguments p, x, and a, or, <br>\nit can be a function \"p\" applied to the list \"[x/a]\".</p>\n<p>Best regards,<br>\nRené</p>\n<p>theory Test<br>\nimports Main <br>\nbegin</p>\n<p>(* added <br>\ntype_synonym vname = string<br>\ndatatype aexp = V vname | N nat<br>\ndatatype bexp = Bc bool | Not bexp | And bexp bexp | Less aexp aexp</p>\n<p>fun subst :: \"vname ⇒ aexp ⇒ aexp ⇒ aexp\" where<br>\n\"subst x a (V v) = (if x = v then a else (V v))\" |<br>\n\"subst x a (N n) = N n\"<br>\n*)</p>\n<p>fun substb :: \"vname =&gt; aexp =&gt; bexp =&gt; bexp\" where<br>\n\"substb x a (Bc v) = Bc v\" |<br>\n\"substb x a (Not b) = Not (substb x a b)\" |<br>\n\"substb x a (And b1 b2) = And (substb x a b1) (substb x a b2)\" |<br>\n\"substb x a (Less a1 a2) = Less (subst x a a1) (subst x a a2)\"</p>\n<p>abbreviation b_subst :: \"bexp =&gt; aexp =&gt; vname =&gt; bexp\"<br>\n  (\"_[_'/_]\" [1000,0,0] 999)<br>\nwhere \"p[a/x] == substb x a p\"</p>\n<p>value \" (And (Less (V ''x'') (N 1)) (Bc True))[(N 1)/''x'']\"<br>\nend</p>",
        "id": 294320588,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660926757
    }
]