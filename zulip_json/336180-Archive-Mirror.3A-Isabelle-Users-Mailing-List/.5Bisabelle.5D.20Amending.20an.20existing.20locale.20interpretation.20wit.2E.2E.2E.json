[
    {
        "content": "<p>From: mailing-list anonymous &lt;<a href=\"mailto:mailing.list.anonymous@gmail.com\">mailing.list.anonymous@gmail.com</a>&gt;<br>\nDear All,</p>\n<p>I would like to amend a locale interpretation with additional rewrite<br>\nrules. A (nearly) minimal example in the code listing below summarises the<br>\nproblem. I also make an attempt to explain my problem explicitly in the<br>\nform of the following enumerated list:</p>\n<p>1. I create locales A and B and provide an interpretation of A in B via<br>\n   the command sublocale.</p>\n<p>2. After the interpretation, I provide several new constants with the<br>\n   intention to state additional theorems about these constants in the context<br>\n   of A.</p>\n<p>3. Once the constants are introduced, I would like to add additional<br>\n   rewrite rules (for these constants) to the existing interpretation of A in<br>\n   B in a way such that the theorems stated in the context of A after the<br>\n   introduction of the rewrite rules appear in their rewritten form in the<br>\n   context of B. I would like to know if this is something that can be<br>\n   achieved using the existing technology: a naive approach of reinterpreting<br>\n   A in B with the new rewrite rules fails.</p>\n<p>section ‹Example›<br>\ntheory example<br>\n  imports Main<br>\nbegin</p>\n<p>locale ord =<br>\n  fixes le :: \"'a ⇒ 'a ⇒ bool\" (infix \"≤⇩T\" 50)<br>\n    and ls :: \"'a ⇒ 'a ⇒ bool\" (infix \"&lt;⇩T\" 50)<br>\nbegin</p>\n<p>notation<br>\n  le (\"'(≤⇩T')\") and<br>\n  le (infix \"≤⇩T\" 50) and<br>\n  ls (\"'(&lt;⇩T')\") and<br>\n  ls (infix \"&lt;⇩T\" 50)</p>\n<p>abbreviation (input) ge (infix \"≥⇩T\" 50)<br>\n  where \"x ≥⇩T y ≡ y ≤⇩T x\"<br>\nabbreviation (input) gt (infix \"&gt;⇩T\" 50)<br>\n  where \"x &gt;⇩T y ≡ y &lt;⇩T x\"</p>\n<p>end</p>\n<p>locale preorder = ord le ls for le ls +<br>\n  assumes less_le_not_le: \"ls x y ⟷ le x y ∧ ¬ (le y x)\"<br>\n    and order_refl[iff]: \"le x x\"<br>\n    and order_trans: \"le x y ⟹ le y z ⟹ le x z\"</p>\n<p>locale preorder_dual = preorder</p>\n<p>context preorder_dual<br>\nbegin</p>\n<p>(* if the following interpretation is deleted,<br>\nthen the desired behaviour is achieved *)<br>\nsublocale dual: preorder ge gt<br>\n  apply unfold_locales<br>\n  subgoal using less_le_not_le by blast<br>\n  subgoal by auto<br>\n  subgoal using order_trans by blast<br>\n  done</p>\n<p>end</p>\n<p>(* new definitions *)<br>\ndefinition min :: \"('a ⇒ 'a ⇒ bool) ⇒ 'a ⇒ 'a ⇒ 'a\" where<br>\n  \"min le a b = (if le a b then a else b)\"<br>\ndefinition max :: \"('a ⇒ 'a ⇒ bool) ⇒ 'a ⇒ 'a ⇒ 'a\" where<br>\n  \"max le a b = (if le b a then a else b)\"</p>\n<p>(* an attempt to reinterpret preorder in preorder_dual *)<br>\ncontext preorder_dual<br>\nbegin</p>\n<p>sublocale dual: preorder ge gt<br>\n  rewrites \"min ge ≡ max le\"<br>\n  sorry</p>\n<p>end</p>\n<p>(* new theorems in preorder *)<br>\ncontext preorder<br>\nbegin</p>\n<p>lemma min_absorb1: \"x ≤⇩T y ⟹ min le x y = x\"<br>\n  by (simp add: min_def)</p>\n<p>(*at this point dual.min_absorb1 does not exist *)</p>\n<p>end</p>\n<p>(*Demonstration of the failed attempt to introduce an additional rewrite<br>\nrule*)<br>\ncontext preorder_dual<br>\nbegin</p>\n<p>thm dual.min_absorb1<br>\n(*</p>\n<p>thm dual.min_absorb1 returns</p>\n<p>y ≤⇩T x ⟹ min (λx y. y ≤⇩T x) x y = x</p>\n<p>instead of the desired</p>\n<p>y ≤⇩T x ⟹ max le x y = x</p>\n<p>*)</p>\n<p>end</p>\n<p>end</p>\n<p>Thank you</p>",
        "id": 294763006,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661200560
    },
    {
        "content": "<p>From: Clemens Ballarin &lt;<a href=\"mailto:ballarin@in.tum.de\">ballarin@in.tum.de</a>&gt;<br>\nThis feature is only available internally, for use by the class package, <br>\nand only for what corresponds to the \"interpretation\" command, not for <br>\n\"sublocale\".</p>\n<p>Making it available in Isar for \"interpretation\" would be <br>\nstraightforward.  For \"sublocale\" the matter is more involved: the <br>\nsublocale graph is labelled with morphisms, and I was never able to <br>\nconvince myself that amending these morphisms in the described manner <br>\nwould be robust enough.  It is conceivable that such an amendment could <br>\nbreak the locale hierarchy in unexpected cases.  For symmetry, the <br>\nfeature is not provided for \"interpretation\" either.</p>\n<p>Clemens</p>",
        "id": 294763312,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661200683
    },
    {
        "content": "<p>From: mailing-list anonymous &lt;<a href=\"mailto:mailing.list.anonymous@gmail.com\">mailing.list.anonymous@gmail.com</a>&gt;<br>\nDear Clemens Ballarin,</p>\n<p>Thank you for your reply. My personal opinion is that a possibility to<br>\namend an interpretation with new rewrite rules could be a very useful<br>\nfeature for the locale infrastructure, provided that it becomes available<br>\nboth for 'interpretation' and 'sublocale'. However, of course, I appreciate<br>\nthat enabling it may be involved and I will proceed based on the assumption<br>\nthat it will not become available in the foreseeable future.</p>\n<p>Thank you</p>",
        "id": 294763333,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661200695
    }
]