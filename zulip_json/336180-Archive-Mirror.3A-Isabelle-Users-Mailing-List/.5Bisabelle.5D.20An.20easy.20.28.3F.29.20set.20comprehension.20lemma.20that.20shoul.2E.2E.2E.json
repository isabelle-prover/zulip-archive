[
    {
        "content": "<p>From: Christoph LANGE &lt;<a href=\"mailto:math.semantic.web@gmail.com\">math.semantic.web@gmail.com</a>&gt;<br>\nHi all,</p>\n<p>I wanted to improve the readability of an easy lemma about set theory<br>\nand used the following set comprehension syntax, for some concrete<br>\nfunction f and set S:</p>\n<p>{ f x | x . x ∈ S }</p>\n<p>After this step my lemma turned out to be very hard to prove.</p>\n<p>But it turned out that, once I had the following lemma in place, my<br>\noriginal lemma was again quite easy to prove with metis:</p>\n<p>lemma \"{ f x | x . x ∈ S } = f ` S\" by auto</p>\n<p>So maybe this lemma should be part of Set.thy?  I didn't know how to<br>\nname it appropriately, but I think the name should somehow contain the<br>\nparts \"image\", \"Collect\" and \"mem\".</p>\n<p>Cheers,</p>\n<p>Christoph</p>",
        "id": 294247210,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660909363
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nSurely — I'm surprised it isn't there already.<br>\nLarry Paulson</p>",
        "id": 294247224,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660909373
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nI am reluctant to add this lemma because there are many related lemmas one might<br>\nalso want, eg {f x|x. x : S &amp; P x} = f <code> {x:S. P x}. This looks like it would\nbetter be treated by a general procedure for converting set comprehensions into\npointfree form. In fact, Lukas installed such a simproc, but it is only\nactivated when the set comprehension occurs inside \"finite\". For example,\n\"finite{f x|x. x:S}\" is rewritten to \"finite (f </code> S)\", although this is not<br>\nalways a blessing. If we provided the underlying rewrite procedure explicitly,<br>\nit would perform all the rewrites you want, but you would first need to know<br>\nthat it exists at all.</p>\n<p>In short, I am not quite sure how to handle such conversions best and am not<br>\nconvinced that one such lemma helps that much, esp since auto already proves it<br>\n(but not s/h...).</p>\n<p>Tobias</p>",
        "id": 294247244,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660909379
    }
]