[
    {
        "content": "<p>From: \"Yannick Duchêne (Hibou57 )\" &lt;<a href=\"mailto:yannick_duchene@yahoo.fr\">yannick_duchene@yahoo.fr</a>&gt;<br>\nWas probably already the same with prior version, still a quick comment on  <br>\ndocument generation.</p>\n<p>When a proof contains a “sorry” and the proof is closed with an “oops”,  <br>\nthat's not really cheating, so may be building a document from a theory  <br>\ncontaining not so real cheating, could terminate successfully without a  <br>\n“Cheating requires quick_and_dirty mode!”.</p>",
        "id": 294260380,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914152
    },
    {
        "content": "<p>From: \"Yannick Duchêne (Hibou57 )\" &lt;<a href=\"mailto:yannick_duchene@yahoo.fr\">yannick_duchene@yahoo.fr</a>&gt;<br>\nI don't know if it's on purpose or not, at least surprising, an example of  <br>\nwhat may be returned by Sledgehammer:</p>\n<p>proof -<br>\n       have \"t1 ≅ t2 ⟶ ω (t1 ∖ c) ≅ ω (t2 ∖ c)\"<br>\n         using eqt rec by auto<br>\n     qed</p>\n<p>There is no show/thus.</p>\n<p>With this case, the goal was:</p>\n<p>\"¬ t1 ≅ t2 ∨ ω (t1 ∖ c) ≅ ω (t2 ∖ c)\"</p>\n<p>I just added</p>\n<p>thus \"¬ t1 ≅ t2 ∨ ω (t1 ∖ c) ≅ ω (t2 ∖ c)\" by simp</p>\n<p>… which it forgets.</p>\n<p>The similar happens from time to time.</p>",
        "id": 294260405,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914163
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nOn Mo, 2013-12-16 at 04:45 +0100, Yannick Duchêne (Hibou57) wrote:</p>\n<blockquote>\n<p>Le Fri, 06 Dec 2013 12:00:51 +0100, Makarius  <br>\n&lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; a écrit:</p>\n<blockquote>\n<p>Isabelle2013-2 is now available.</p>\n<p>[…]</p>\n</blockquote>\n<p>Was probably already the same with prior version, still a quick comment on  <br>\ndocument generation.</p>\n<p>When a proof contains a “sorry” and the proof is closed with an “oops”,  <br>\nthat's not really cheating, so may be building a document from a theory  <br>\ncontaining not so real cheating, could terminate successfully without a  <br>\n“Cheating requires quick_and_dirty mode!”.</p>\n</blockquote>\n<p>I guess that this is technically nearly impossible, as \"sorry\" already<br>\n\"proves\" theorems in the kernel, that may escape the proof before you<br>\nabort it with oops.</p>\n<p>&gt;</p>",
        "id": 294260438,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914170
    },
    {
        "content": "<p>From: \"Yannick Duchêne (Hibou57 )\" &lt;<a href=\"mailto:yannick_duchene@yahoo.fr\">yannick_duchene@yahoo.fr</a>&gt;<br>\nI found what is I believe an issue with Sledgehammer and its “Isar proofs”  <br>\noption.</p>\n<p>In the test theory below (also as attached file), if I move the caret next  <br>\nto “using r1 r2” then in the Sledgehammer pan, check “Isar proofs”, then  <br>\nclick “Apply”, something strange happens: if first run up to displaying a  <br>\nproof, then something appears in the output pan saying “ENTER MATCH”, then  <br>\nthe content in the Sledgehammer pan disappears then the content of the  <br>\noutput pan is back to what is was just before it displayed “ENTER MATCH”  <br>\nand Sledgehammer continue running and cannot be stopped with “Cancel”.</p>\n<p>The issue does not occur if “Isar proofs” is not checked.</p>\n<p>Test.thy:</p>\n<p>theory Test<br>\n     imports BNF<br>\n     begin</p>\n<p>declare [[rule_trace]]</p>\n<p>type_synonym 'a pp = \"['a, 'a] ⇒ bool\"</p>\n<p>inductive ppinduct :: \"'a pp ⇒ 'a list pp\" where<br>\n         r1: \"ppinduct _ [] []\"<br>\n       | r2: \"⟦f h1 h2; ppinduct f t1 t2⟧ ⟹ ppinduct f (h1 # t1) (h2 # t2)\"</p>\n<p>lemma \"ppinduct f (h # t) [] ⟹ False\" using r1 r2</p>\n<p>end<br>\n<a href=\"/user_uploads/14278/xnGHoWsU3ctvWx-TxdGOW-h0/Test.thy\">Test.thy</a></p>",
        "id": 294260816,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914311
    },
    {
        "content": "<p>From: \"Yannick Duchêne (Hibou57 )\" &lt;<a href=\"mailto:yannick_duchene@yahoo.fr\">yannick_duchene@yahoo.fr</a>&gt;<br>\nBy the way, I've made an error as I forget the “for” part in the sample  <br>\ncase which I noticed it in the real case when I failed with a proof. I  <br>\nfixed the sample in the while to see if it behave the same, and it  <br>\ndiffers. With this case, the issue does not occur. The original case is  <br>\nstill an issue, as it should behave correctly in all circumstances, even  <br>\nwith definitions not written as intended.</p>\n<p>Test_2.thy (also as attached file):</p>\n<p>theory Test_2<br>\n     imports BNF<br>\n     begin</p>\n<p>declare [[rule_trace]]</p>\n<p>type_synonym 'a pp = \"['a, 'a] ⇒ bool\"</p>\n<p>inductive ppinduct :: \"'a pp ⇒ 'a list pp\" for f where<br>\n         r1: \"ppinduct f [] []\"<br>\n       | r2: \"⟦f h1 h2; ppinduct f t1 t2⟧ ⟹ ppinduct f (h1 # t1) (h2 # t2)\"</p>\n<p>lemma \"ppinduct f (h # t) [] ⟹ False\" using r1 r2</p>\n<p>end<br>\n<a href=\"/user_uploads/14278/iNT_qfAlM9iAoOVI9BcpwAsC/Test_2.thy\">Test_2.thy</a></p>",
        "id": 294260830,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914317
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nIsabelle2013-2 is now available.</p>\n<p>This version supersedes Isabelle2013-1, which in turn consolidated<br>\nIsabelle2013 and introduced numerous improvements.  See the NEWS file<br>\nin the distribution for more details.  Some highlights are:</p>\n<ul>\n<li>\n<p>Significantly improved Isabelle/jEdit Prover IDE.</p>\n</li>\n<li>\n<p>Consolidated multi-platform support: Linux, Windows, Mac OS X.</p>\n</li>\n<li>\n<p>Added and updated manuals: datatypes, implementation, isar-ref, jedit.</p>\n</li>\n<li>\n<p>New Spec_Check tool: Quickcheck for Isabelle/ML.</p>\n</li>\n<li>\n<p>HOL library enhancements: Complex_Main, HOL-Library,<br>\n   HOL-Multivariate_Analysis.</p>\n</li>\n<li>\n<p>HOL tool enhancements: Codegenerator, Function, Lifting, Transfer,<br>\n   Nitpick, Sledgehammer.</p>\n</li>\n<li>\n<p>HOL-BNF: significantly improved BNF-based (co)datatype package.</p>\n</li>\n</ul>\n<p>You may get Isabelle2013-2 from the following mirror sites:</p>\n<p>Cambridge (UK)       <a href=\"http://www.cl.cam.ac.uk/research/hvg/Isabelle/\">http://www.cl.cam.ac.uk/research/hvg/Isabelle/</a><br>\n   Munich (Germany)     <a href=\"http://isabelle.in.tum.de/\">http://isabelle.in.tum.de/</a><br>\n   Sydney (Australia)   <a href=\"http://mirror.cse.unsw.edu.au/pub/isabelle/\">http://mirror.cse.unsw.edu.au/pub/isabelle/</a></p>",
        "id": 294262639,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914944
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThanks to everybody who participated in the second round of testing.</p>\n<p>Don't forget to dispose your local copies of any \"RC\" versions, and update <br>\nto the proper release.</p>\n<p>Makarius</p>",
        "id": 294262644,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914949
    }
]