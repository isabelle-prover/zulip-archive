[
    {
        "content": "<p>From: John Ridgway &lt;<a href=\"mailto:john@jacelridge.com\">john@jacelridge.com</a>&gt;<br>\nFriends -<br>\nI'm stuck, so I'm asking for help.  I have a somewhat complex mutually inductive set definition, that I have carved down to a (nonsensical) minimum, and when I try to run the definitions I get the following mess when Isabelle is attempting to prove monotonicity.  I'm hoping that someone can point me in the right direction...</p>\n<p>Note: I need to use an anonymous function here because (in the real version) I refer to other variables outside of the function.</p>\n<p>The definitions follow:</p>\n<p>theory test<br>\nimports Main<br>\nbegin</p>\n<p>typedecl \"ExnMech\"<br>\ndatatype \"PrimEff\" = exception  \"ExnMech\"<br>\ntype_synonym \"Effects\" = \"(PrimEff set)\"</p>\n<p>inductive_set<br>\n  \"mechanismshavetype\" :: \"(Effects * Effects) set\" and<br>\n  \"exnshavetype\" :: \"(Effects * Effects) set\"<br>\nwhere<br>\nExn_types: \" <br>\n  [| oepsilons = <br>\n     (\\&lt;lambda&gt; f . (if (epsilon_91, epsilon_93) \\&lt;in&gt; mechanismshavetype<br>\n             then Some epsilon_91<br>\n             else None)) `<br>\n     epsilon_91 |]<br>\n  ==&gt;<br>\n  (epsilon_91, {}) \\&lt;in&gt; exnshavetype\"</p>\n<p>end</p>\n<p>and the result from Isabelle is:</p>\n<p>*** Proof failed.<br>\n*** mono (\\&lt;lambda&gt;p b x1 x2.<br>\n***          \\&lt;exists&gt;oepsilons epsilon_91 epsilon_93.<br>\n***             b \\&lt;and&gt; x1 = epsilon_91 \\&lt;and&gt;<br>\n***                 x2 = {} \\&lt;and&gt;<br>\n***                 oepsilons = (\\&lt;lambda&gt;f. if p False epsilon_91 epsilon_93 then Some epsilon_91 else None) <code> epsilon_91)\n***  1. \\&lt;And&gt;x y xa xb xc oepsilons epsilon_91 epsilon_93.\n***        x (?x14 x y xa xb xc oepsilons epsilon_91 epsilon_93) (?x15 x y xa xb xc oepsilons epsilon_91 epsilon_93)\n***         (?x16 x y xa xb xc oepsilons epsilon_91 epsilon_93) \\&lt;longrightarrow&gt;\n***        y (?x14 x y xa xb xc oepsilons epsilon_91 epsilon_93) (?x15 x y xa xb xc oepsilons epsilon_91 epsilon_93)\n***         (?x16 x y xa xb xc oepsilons epsilon_91 epsilon_93) \\&lt;Longrightarrow&gt;\n***        oepsilons = (\\&lt;lambda&gt;f. if x False epsilon_91 epsilon_93 then Some epsilon_91 else None) </code> epsilon_91 \\&lt;longrightarrow&gt;<br>\n***        oepsilons = (\\&lt;lambda&gt;f. if y False epsilon_91 epsilon_93 then Some epsilon_91 else None) <code> epsilon_91\n*** 1 unsolved goal(s)!\n*** The error(s) above occurred for the goal statement:\n*** mono (\\&lt;lambda&gt;p b x1 x2.\n***          \\&lt;exists&gt;oepsilons epsilon_91 epsilon_93.\n***             b \\&lt;and&gt; x1 = epsilon_91 \\&lt;and&gt;\n***                 x2 = {} \\&lt;and&gt;\n***                 oepsilons = (\\&lt;lambda&gt;f. if p False epsilon_91 epsilon_93 then Some epsilon_91 else None) </code> epsilon_91)<br>\n***  (line 9 of \"/Users/ridgway/NewRIPLS/FICS2008/test.thy\")<br>\n*** At command \"inductive_set\" (line 9 of \"/Users/ridgway/NewRIPLS/FICS2008/test.thy\")</p>\n<p>Peace</p>\n<ul>\n<li>John</li>\n</ul>",
        "id": 294153032,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660850039
    }
]