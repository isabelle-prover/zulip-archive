[
    {
        "content": "<p>From: \"John F. Hughes\" &lt;<a href=\"mailto:jfh@cs.brown.edu\">jfh@cs.brown.edu</a>&gt;<br>\nI often get to a situation where the \"Proof state\" panel shows that what I<br>\n<em>have</em> and what I'd <em>like</em> to prove appear identical. For instance, at the<br>\n\"try\" in the following incomplete proof ...</p>\n<p>theorem parallel_restate_left:<br>\n  fixes l<br>\n  fixes m<br>\n  assumes \"(l = m ∨  (∀ P. (¬ a2meets P l)  ∨ (¬a2meets P m)))\"<br>\n  shows \" a2parallel l m\"<br>\n  unfolding a2parallel_def<br>\nproof -<br>\n  have c1: \"(l = m ∨  (∀ P. (¬ a2meets P l)  ∨ (¬a2meets P m)))\"  using<br>\nassms by blast<br>\n  have c2: \"(l = m ∨  (∀ P. ¬ (( a2meets P l) ∧ (a2meets P m))))\" using c1<br>\nby blast<br>\n  have c3: \"(l = m ∨  ¬ (∃ P. ( a2meets P l) ∧ (a2meets P m)))\" using c2 by<br>\nblast<br>\n  try</p>\n<p>The proof-state panel shows</p>\n<p>proof (state)<br>\nthis:<br>\n  l = m ∨<br>\n  (∄P. a2meets P l ∧<br>\n       a2meets P m)</p>\n<p>goal (1 subgoal):</p>\n<ol>\n<li>l = m ∨<br>\n    (∄P. a2meets P l ∨<br>\n         a2meets P m)</li>\n</ol>\n<p>====<br>\nI feel as if I could be reasonably forgiven for saying, \"OK, seriously,<br>\nwhat more could you want?\"</p>\n<p>\"try\", of course, says \"Tried in vain\". My usual incantations like \"show<br>\n?thesis try\" or \"thus ?thesis try\", etc., get me nowhere; the latter<br>\nreports \"Failed to refine any pending goal<br>\nLocal statement fails to refine any pending goal<br>\nFailed attempt to solve goal by exported rule:<br>\n  l a2|| m\"</p>\n<p>[I'm assuming that the particulars of my definitions like \"a2meets\" are<br>\nirrelevant here; the gist is that \"a2meets P m\" means the point P in the<br>\ncartesian plane -- i.e., a pair of real numbers -- lies on the line m<br>\n(which is either a vertical line defined by an equation like x = 1, or an<br>\n\"ordinary\" line defined by an equation like y = ax + b.]</p>\n<p>Any suggestions for getting myself beyond such states?</p>",
        "id": 294823054,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243087
    },
    {
        "content": "<p>From: Mathias Fleury &lt;<a href=\"mailto:mathias.fleury12@gmail.com\">mathias.fleury12@gmail.com</a>&gt;<br>\nHi John,</p>\n<p>in the example you give, the goals are not identical. When I don't see<br>\ndifferences, my usual solution is to use git diff: I paste both versions in<br>\ntwo files and I compare them. In your case, this yields:</p>\n<p>$ git diff --no-index --ignore-all-space --word-diff goal1 goal2<br>\ndiff --git a/tmp/ubf1 b/tmp/buf2<br>\nindex 2635544..03381fc 100644<br>\n--- a/tmp/goal1<br>\n+++ b/tmp/goal2<br>\n@@ -1,3 +1,3 @@<br>\nl = m ∨<br>\n   (∄P. a2meets P l [-∧-]{+∨+}<br>\n        a2meets P m)</p>\n<p>(the git options are important for readability!)</p>\n<p>Now, on the second part on the question ?thesis is bound before<br>\n<code>unfolding a2parallel_def</code><br>\nand thus <code>show</code> does not work: You need to write <code> l = m ∨ (∄P. a2meets P l\n∨ a2meets P m)</code> instead of ?thesis.</p>\n<p>Best,<br>\nMathias</p>",
        "id": 294823061,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243094
    },
    {
        "content": "<p>From: \"John F. Hughes\" &lt;<a href=\"mailto:jfh@cs.brown.edu\">jfh@cs.brown.edu</a>&gt;<br>\nThank you very much. I love the \"diff\" idea, esp. because the situation<br>\nwith truly identical \"have\" and \"goals\" <em>does</em> come up at other times (when<br>\nI've got unjustified assumptions in force, for instance. I was completely<br>\nconvinced this was one of those situations. :(</p>\n<p>--John</p>",
        "id": 294823071,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243099
    },
    {
        "content": "<p>From: \"<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>\" &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nAnother beginner's pitfall are types, which are not displayed by default. It's<br>\ntoo easy to end up with something like \"P (f []) ==&gt; P (f [])\", which, after<br>\nnote [[show_types]] looks like P (f ([] ::'a list)) ==&gt; P (f ([] ::'b list))  </p>\n<p>Peter</p>",
        "id": 294823090,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243105
    }
]