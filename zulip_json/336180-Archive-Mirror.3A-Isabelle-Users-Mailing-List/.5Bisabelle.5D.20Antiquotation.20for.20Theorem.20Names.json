[
    {
        "content": "<p>From: Christian Sternagel &lt;<a href=\"mailto:christian.sternagel@uibk.ac.at\">christian.sternagel@uibk.ac.at</a>&gt;<br>\nHi!</p>\n<p>In the meantime I modified my antiquotation function as follows</p>\n<p>fun output_names [name] = [Pretty.str name]<br>\n   | output_names [n1, n2] = [Pretty.str n1, Pretty.str \" and \", <br>\nPretty.str n2]<br>\n   | output_names names =<br>\n     let val (ns, n) = split_last (map Pretty.str names) in<br>\n       Pretty.commas ns @ [Pretty.str \", and \", n]<br>\n     end</p>\n<p>fun output_thm_names<br>\n   ({context = ctxt, ...} : {state : Toplevel.state, source : Args.src,<br>\n     context: Proof.context})<br>\n   names =<br>\n   let<br>\n     val _ = map (PureThy.get_fact (Context.Proof ctxt)<br>\n      (ProofContext.theory_of ctxt) o Facts.named) names<br>\n   in<br>\n     ThyOutput.output [Pretty.block (output_names names)]<br>\n   end</p>\n<p>This works in principle (for single names). E.g.,</p>\n<p>lemma bla: ...</p>\n<p>text {* @{lemmas bla} *}</p>\n<p>produces \"bla\" in the resulting pdf. However, this does not work for <br>\n'local facts'. E.g.,</p>\n<p>...<br>\ncase (Suc n)<br>\ntxt {* @{lemmas Suc} *}</p>\n<p>results in the error: *** Unknown fact \"Suc\"</p>\n<p>Is it impossible to refer to 'local facts' in antiquotations?</p>\n<p>cheers</p>\n<p>chris</p>",
        "id": 294104234,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660834718
    },
    {
        "content": "<p>From: Alexander Krauss &lt;<a href=\"mailto:krauss@in.tum.de\">krauss@in.tum.de</a>&gt;<br>\nHi Chris,</p>\n<blockquote>\n<p>In the meantime I modified my antiquotation function as follows</p>\n</blockquote>\n<p>[...]</p>\n<blockquote>\n<p>let<br>\n    val _ = map (PureThy.get_fact (Context.Proof ctxt)<br>\n     (ProofContext.theory_of ctxt) o Facts.named) names</p>\n</blockquote>\n<p>this only takes the facts from the theory. Did you try something like<br>\nProofContext.get_fact(s) / .get_thm(s) ?</p>\n<p>Alex</p>",
        "id": 294104275,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660834730
    }
]