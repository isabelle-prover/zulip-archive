[
    {
        "content": "<p>From: Martin Desharnais &lt;<a href=\"mailto:martin.desharnais@gmail.com\">martin.desharnais@gmail.com</a>&gt;<br>\nDear Isabelle users,</p>\n<p>with the document preparation system, it is possible to use<br>\nantiquotations such as @{thm a} to print a lemma or @{term t} to print a<br>\nterm. I could not, however, find a way to print an existing definition.<br>\nI am especially interested in datatypes, functions, and locales<br>\ndefinitions. My use case is as follows.</p>\n<p>I import external theories and want to write about their definitions.<br>\nThe only way I could find is to copy-paste said definitions in an<br>\nunnamed context and annotate them as private.</p>\n<p>(<em>&lt;</em>)<br>\ncontext begin<br>\n(<em>&gt;</em>)</p>\n<p>text ‹...›</p>\n<p>(<em>&lt;</em>) private (<em>&gt;</em>)<br>\ndatatype 'a option =<br>\n  None |<br>\n  Some (the: 'a)</p>\n<p>text ‹...›</p>\n<p>(<em>&lt;</em>) private (<em>&gt;</em>)<br>\nprimrec append :: \"'a list ⇒ 'a list ⇒ 'a list\" (infixr \"@\" 65) where<br>\n  append_Nil:  \"append [] ys = ys\" |<br>\n  append_Cons: \"append (x#xs) ys = x # append xs ys\"</p>\n<p>text ‹...›</p>\n<p>(<em>&gt;</em>)<br>\nend<br>\n(<em>&lt;</em>)</p>\n<p>Just printing the simplification theorems @{thm append.simps} is not an<br>\noption, because the number of simplification theorems quickly explodes<br>\nfor functions depending on the linear \"first match succeeds\" of pattern<br>\nmatching.</p>\n<p>What I would like, is a way to avoid this copy-pasting. Ideally, a<br>\nsolution would take the form of antiquotations such as @{type_def list},<br>\n@{const_def append}, or @{locale_def somelocale}.</p>\n<ol>\n<li>Is there any existing way to avoid copy-pasting?</li>\n<li>If there currently exists no ways, would such an extension be feasible?</li>\n</ol>\n<p>Regards,<br>\nMartin Desharnais</p>",
        "id": 294763665,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661200845
    }
]