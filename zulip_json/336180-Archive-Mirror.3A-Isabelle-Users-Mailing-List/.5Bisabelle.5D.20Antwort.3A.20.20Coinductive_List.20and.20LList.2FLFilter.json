[
    {
        "content": "<p>From: Jens Doll &lt;<a href=\"mailto:jd@cococo.de\">jd@cococo.de</a>&gt;<br>\nWow, the theory covers 27 DIN A4 pages. Is there a way of decomposition <br>\nand plausification of the proof/theorems?<br>\nJens</p>",
        "id": 294080831,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660830612
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:lochbihl@ipd.info.uni-karlsruhe.de\">lochbihl@ipd.info.uni-karlsruhe.de</a>&gt;<br>\nHi Jens,</p>\n<blockquote>\n<p>Wow, the theory covers 27 DIN A4 pages. Is there a way of<br>\ndecomposition and plausification of the proof/theorems?</p>\n</blockquote>\n<p>these theories are not mine. Larry Paulson wrote LFilter and Stephan <br>\nMerz LList2. I merely ported them such that they now use <br>\nCoinductive_List from HOL/Library instead of Induct/LList.</p>\n<p>LFilter simply defines the filter functional for lazy lists.</p>\n<p>A rough outline of LList2 is:</p>\n<ol>\n<li>\n<p>Lazy lists over an alphabet<br>\nThere are various sets: \"alllsts A\" are all lists with elements from A, <br>\n\"finlsts A\" are only the finite lazy lists with elements from A.<br>\n\"inflsts A\" are the infinite ones, \"fpslsts A\" are non-empty, finite <br>\nllists, \"poslsts A\" are all non-empty llists.<br>\nMost lemmas in LList2 deal with these sets and how some functions on <br>\nlists behave w.r.t. these sets.</p>\n</li>\n<li>\n<p>The recursion operator finlsts_rec for finite llists.</p>\n</li>\n<li>\n<p>Some functions for llists:</p>\n</li>\n</ol>\n<ul>\n<li>\n<p>ll2f somewhat models nth for llist, but returns an option: None if the <br>\nindex exceeds the list.</p>\n</li>\n<li>\n<p>ltake, ldrop, lset are their list-counterpart for llists</p>\n</li>\n<li>llength, llast, lrev, lbutlast, llast are defined for finite llists</li>\n<li>lconst (the infinite list where all elements are the same)</li>\n</ul>\n<ol start=\"4\">\n<li>\n<p>The prefix order on llist.</p>\n</li>\n<li>\n<p>The set of all prefixes / suffixes / infinite suffixes of a list</p>\n</li>\n<li>\n<p>Some safety and liveliness properties</p>\n</li>\n</ol>\n<p>For 2. to 6., numerous lemmas are proved about the various notions for <br>\ndifferent combinations of the above types of llists over alphabets.<br>\nWhat Stephan Merz used these theories for, I do not know. Neither am I <br>\nsure that being focused on the various kinds of lazy lists over some <br>\nalphabet is the best way to work with lazy lists. Moreover, one might <br>\nquestion some design decisions (like ll2f returning an option, llength <br>\nbeing only defined for finite llists).</p>\n<p>Andreas</p>",
        "id": 294080866,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660830627
    }
]