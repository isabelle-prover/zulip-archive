[
    {
        "content": "<p>From: \"K. Nienhuis\" &lt;<a href=\"mailto:kn307@cam.ac.uk\">kn307@cam.ac.uk</a>&gt;<br>\nHi,</p>\n<p>In the attached example, blast fails when given an elim of the form \"P <br>\n/\\ Q /\\ R\" but succeeds when given the same rule with parenthesis \"(P /\\ <br>\nQ) /\\ R\". What is the explanation for that behaviour?</p>\n<p>Thanks,<br>\nKyndylan<br>\n<a href=\"/user_uploads/14278/R2rWGcOrhZBiK0v_Wd82CkV-/BracketsAndBlast.pdf\">BracketsAndBlast.pdf</a><br>\n<a href=\"/user_uploads/14278/K9GX-lZNww36sH26_rlZ3YPZ/BracketsAndBlast.thy\">BracketsAndBlast.thy</a></p>",
        "id": 294632894,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661158988
    },
    {
        "content": "<p>From: Larry Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nThis is quite a strange example, indeed they should all work. But it’s worth pointing out that the result you express using “obtains” should be free of conjunctions:</p>\n<p>obtains “bar\" “True\" \"∀x. True\"</p>\n<p>In this case, it does work correctly.</p>\n<p>Larry Paulson</p>",
        "id": 294632962,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661159023
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nNote that \"blast\" is a variant of the so-called Classical Reasoner, which <br>\nis explained in the \"isar-ref\" manual section 9.  In particular, section <br>\n9.4.6 on single-step tactics helps to develop a sense how these tools <br>\nnormally work, e.g. via \"apply step\" you similate a crude trace mode.</p>\n<p>That should eventually provide clues about \"fast\" and \"best\", and might <br>\nhelp to bridges over to \"blast\" and \"auto\", although these tools have <br>\ntheir own specialities.</p>\n<p>Makarius</p>",
        "id": 294633089,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661159060
    }
]