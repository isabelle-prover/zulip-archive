[
    {
        "content": "<p>From: Norbert Schirmer via Cl-isabelle-users &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nDear Isabelle users,</p>\n<p>When adding a theorem with a simp attribute via ‘Global_Theory.add_thm' within a local theory by ‘Local_Theory.background_theory’, I have the following surprising behaviour:</p>\n<p>While the theorem can be retrieved by its name it is not added to the simplest of the resulting local theory. Only after reinitialising the local theory the theorem also appears in the simpset. Is this expected behaviour?</p>\n<p>Further remarks: </p>\n<ul>\n<li>Global_Theory.note_thms has the same effect as Global_Theory.add_thm.</li>\n<li>Local_Theory.notes also adds the theorem to the simpset (as expected).</li>\n</ul>\n<p>The following ML code snippet illustrates this:</p>\n<p>val foo = @{lemma \"x = x\" by simp}</p>\n<p>fun add_foo thy = Global_Theory.add_thm ((<a href=\"http://Binding.name\">Binding.name</a> \"foo\", foo), [Simplifier.simp_add]) thy |&gt; snd</p>\n<p>val lthy = Named_Target.theory_init @{theory}<br>\n |&gt; Local_Theory.background_theory add_foo</p>\n<p>val target_ctxt = Local_Theory.target_of lthy<br>\nval reinit_ctxt = Proof_Context.init_global (Proof_Context.theory_of lthy)<br>\nval exit_ctxt = Local_Theory.exit lthy<br>\nval reenter_lthy = Named_Target.theory_init (Local_Theory.exit_global lthy)</p>\n<p>fun get_foo ctxt = Proof_Context.get_thm ctxt \"foo\"<br>\nfun get_foo_from_ss ctxt = Simplifier.simpset_of ctxt <br>\n |&gt; dest_ss |&gt; #simps |&gt; map fst |&gt; find_first (String.isSubstring \"foo\")<br>\nfun get ctxt = (get_foo ctxt, get_foo_from_ss ctxt)</p>\n<p>val res_lthy = get lthy (* (\"?x = ?x\", NONE) *)<br>\nval res_target  = get target_ctxt (* (\"?x = ?x\", NONE) *)<br>\nval res_exit  = get exit_ctxt  (* (\"?x = ?x\", NONE) *)</p>\n<p>val res_reinit  = get reinit_ctxt (* (\"?x = ?x\", SOME \"<a href=\"http://background_theory.foo\">background_theory.foo</a>\") *)<br>\nval res_reenter = get reenter_lthy (* (\"?x = ?x\", SOME \"<a href=\"http://background_theory.foo\">background_theory.foo</a>\") *)</p>\n<p>Regards,<br>\nNorbert<br>\n<a href=\"/user_uploads/14278/WhdApMH4_kAdDHveXRR46d-4/background_theory.thy\">background_theory.thy</a></p>",
        "id": 294822751,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661242950
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Norbert,</p>\n<p>this is as expected: Local_Theory.notes is the application proper<br>\ninterface, whereas the others are part of the primitive devices from<br>\nwhich the interfaces are built.</p>\n<p>What is your reason to hesitate using Local_Theory.notes or what's your<br>\noveral application?</p>\n<p>Cheers,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/CX-MVfBkb3b-CMMoDJ431_Ge/signature.asc\">signature.asc</a></p>",
        "id": 294822781,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661242964
    },
    {
        "content": "<p>From: Norbert Schirmer via Cl-isabelle-users &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nHi Florian,</p>\n<p>The reason is the integration of “legacy tools” that are still defined as 'thy -&gt; thy’ (e.g. the HOL record package) into a chain of “local_theory -&gt; local_theory” tools. I had the impression that this is one of purposes of  “Local_Theory.background_theory”. In case of the simpset one can explicitly merge them afterwards, but my general concern is that I don’t know which other data might also be affected and not propagated to the local_theory. Is there a better way?</p>\n<p>Regards,</p>\n<p>Norbert</p>",
        "id": 294822791,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661242971
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Norbert,</p>\n<blockquote>\n<p>The reason is the integration of “legacy tools” that are still defined as 'thy -&gt; thy’ (e.g. the HOL record package) into a chain of “local_theory -&gt; local_theory” tools. I had the impression that this is one of purposes of  “Local_Theory.background_theory”. In case of the simpset one can explicitly merge them afterwards, but my general concern is that I don’t know which other data might also be affected and not propagated to the local_theory. Is there a better way?</p>\n</blockquote>\n<p>it is not so simple – otherwise localizing packages would be trivial.</p>\n<p>Your application seems quite ambitious.  Is there are chance that e. g.<br>\nwe both could have look at it face-to-face?  Discussing all the details<br>\nof localization by mail is tedious.</p>\n<p>Cheers,<br>\n    Florian</p>\n<blockquote>\n<p>Regards,</p>\n<p>Norbert</p>\n<p>On 5. Feb 2020, at 19:00, Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt; wrote:</p>\n<blockquote>\n<p>Hi Norbert,</p>\n<blockquote>\n<p>When adding a theorem with a simp attribute via ‘Global_Theory.add_thm' within a local theory by ‘Local_Theory.background_theory’, I have the following surprising behaviour:</p>\n<p>While the theorem can be retrieved by its name it is not added to the simplest of the resulting local theory. Only after reinitialising the local theory the theorem also appears in the simpset. Is this expected behaviour?</p>\n<p>Further remarks: \n* Global_Theory.note_thms has the same effect as Global_Theory.add_thm.\n* Local_Theory.notes also adds the theorem to the simpset (as expected).</p>\n</blockquote>\n<p>this is as expected: Local_Theory.notes is the application proper<br>\ninterface, whereas the others are part of the primitive devices from<br>\nwhich the interfaces are built.</p>\n<p>What is your reason to hesitate using Local_Theory.notes or what's your<br>\noveral application?</p>\n<p>Cheers,<br>\n Florian<br>\n</p>\n</blockquote>\n<p><a href=\"/user_uploads/14278/pXnuZcWXPMxKq4ZnhJl_-9nR/signature.asc\">signature.asc</a></p>\n</blockquote>",
        "id": 294823418,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243246
    }
]