[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear experts of contexts,</p>\n<p>I would like to report the following annoying behaviour (bug?) in Isabelle2013-2 and a <br>\nrecent version of repository (761e40ce91bc). When I use the THEN attribute to transform a <br>\nproved lemma in an auxiliary context, I cannot refer to theorems imported by local <br>\ninterpretations. My guess is that attributes in lemma statements somehow use a wrong context.</p>\n<p>Below is a minimal example with THEN, but the same error also occurs for other attributes <br>\nlike unfolded. In my use case, I prove a statement in a simple form and then automatically <br>\ntransform it into a usable form by composing it with a lemma that I get from a local <br>\ninterpretation. It would be great if I could do this directly at the lemma statement.</p>\n<p>theory Scratch imports Main begin</p>\n<p>locale l begin<br>\nlemma foo: \"A ==&gt; A\" .<br>\nend</p>\n<p>context begin<br>\ninterpretation e!: l .</p>\n<p>thm <a href=\"http://e.foo\">e.foo</a> (* works *)<br>\nthm TrueI[THEN e.foo] (* works *)</p>\n<p>lemmas bar1 = TrueI[THEN e.foo] (* works *)<br>\nlemmas bar2[THEN e.foo] = TrueI (* works *)</p>\n<p>lemma bar [THEN e.foo]: \"True\" by simp (* does not work: Unknown fact \"<a href=\"http://e.foo\">e.foo</a>\" *)<br>\nend</p>\n<p>end</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 294263627,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660915293
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Andreas,</p>\n<p>I guess there is a conceptual problem here: since attribute ingredients<br>\nmust all be subject to morphism application, it is not possible to<br>\nreference facts which are only present in the hypothetical context since<br>\nthese have no counterpart in the deeper layers of the target context stack.</p>\n<p>This would definitely deserve hints in the documentation.</p>\n<p>Cheers,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/M2k6ZjGfkunrjQiiBawcJUsz/signature.asc\">signature.asc</a></p>",
        "id": 294268786,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660916508
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Florian,</p>\n<p>Thanks for the explanation, but I am afraid that I don't see the point you are trying to <br>\nmake. If attribute ingredients are to work under morphisms, I would expect that the same <br>\nrestrictions apply for using attribute with lemmas and with lemma. However, it works with <br>\nlemmas, but not with lemma. What makes the difference?</p>\n<p>Andreas</p>",
        "id": 294268803,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660916514
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Mon, 27 Jan 2014, Andreas Lochbihler wrote:</p>\n<blockquote>\n<p>I would like to report the following annoying behaviour (bug?) in <br>\nIsabelle2013-2 and a recent version of repository (761e40ce91bc). When I <br>\nuse the THEN attribute to transform a proved lemma in an auxiliary <br>\ncontext, I cannot refer to theorems imported by local interpretations. <br>\nMy guess is that attributes in lemma statements somehow use a wrong <br>\ncontext.</p>\n</blockquote>\n<p>This got delayed due my initial filtering for meaningless words like <br>\n\"bug\".  I did not feel like giving again a lecture about that non-sense, <br>\nwith the majority of people having no clue what it is about.</p>\n<blockquote>\n<p>theory Scratch imports Main begin</p>\n<p>locale l begin<br>\nlemma foo: \"A ==&gt; A\" .<br>\nend</p>\n<p>context begin<br>\ninterpretation e!: l .</p>\n<p>thm <a href=\"http://e.foo\">e.foo</a> (* works *)<br>\nthm TrueI[THEN e.foo] (* works *)</p>\n<p>lemmas bar1 = TrueI[THEN e.foo] (* works *)<br>\nlemmas bar2[THEN e.foo] = TrueI (* works *)</p>\n<p>lemma bar [THEN e.foo]: \"True\" by simp (* does not work: Unknown fact \"<a href=\"http://e.foo\">e.foo</a>\" <br>\n*)<br>\nend</p>\n<p>end</p>\n</blockquote>\n<p>What you see in lemma bar [THEN e.foo] above is the classic dynamic <br>\nscoping of fact expressions (so-called \"notes\") that was the standard <br>\nbehaviour until about 2 years ago.  It was known from the outset (around <br>\n1999) that dynamic scoping is generally a bad thing --- even though <br>\nclassic LISP dialects still do it --- but I initially considered it <br>\ninfeasible to implement proper static scoping for attributes and proof <br>\nmethods.</p>\n<p>I came back to statically applied attributes only much later, see the NEWS <br>\nof Isabelle2012 (May 2012):</p>\n<p>* Rule attributes in local theory declarations (e.g. locale or class)<br>\n   are now statically evaluated: the resulting theorem is stored instead<br>\n   of the original expression.  INCOMPATIBILITY in rare situations, where<br>\n   the historic accident of dynamic re-evaluation in interpretations<br>\n   etc. was exploited.</p>\n<p>Here the wording is the result of spending a long time with old <br>\napplications (from AFP etc.) to get them updated to a better world.  As <br>\nusual there are both accidental and intentional uses of such \"features\" in <br>\ncorner cases that make reforms always a challenge.</p>\n<p>I can't say on the spot if there were reasons of not making the situation <br>\nabove statically scoped as well in 2012.  Just a few days ago, I passed by <br>\nthat part of the sources and was wondering about it.  A quick try now <br>\nimmediately produces obscure failure elsewhere, but I might come back to <br>\nit before the Isabelle2014 release this summer.  (Major renovations in the <br>\nmanagement of facts and attribute expressions are in the pipeline.)</p>\n<p>Makarius</p>",
        "id": 294272487,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660917648
    }
]