[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt;<br>\nHi all,</p>\n<p>I'm looking for an Isabelle-formalization of nondeterministic finite<br>\nautomata, that also generates executable code.</p>\n<p>In particular, I need the following operations:<br>\n  Membership query (directly on nondet. automata, without converting to<br>\ndet. automata first)<br>\n  Union, Intersection,<br>\n  Substitution, in its general case, i.e. by a function :: \\Sigma -&gt;<br>\n\\Gamma fsm</p>\n<p>Especially the substitution operation seems tricky with the<br>\nFunctional-Automata  formalization in afp, because it stores no explicit<br>\ninformation about the alphabet.</p>\n<p>Are there other formalizations of FSMs out there, from which I could start ?<br>\nOr can I extend the Functional-Automata in that direction ?</p>\n<p>Regards, and thanks in advance for any suggestions<br>\n  Peter</p>",
        "id": 294071610,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660827379
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nStefan Berghofer and Markus Reiter have developed a library of <br>\nexecutable constructions on automata. It is a bit specialized (the <br>\nalphabet are bit vectors) and does not have all your operations, but it <br>\nmay be a good starting point.</p>\n<p>Tobias</p>\n<p>Peter Lammich wrote:</p>",
        "id": 294071773,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660827438
    }
]