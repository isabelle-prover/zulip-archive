[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt;<br>\nHi all,</p>\n<p>I have to prove the following lemma:<br>\n  lemma \"[| a &lt;= sup b c; e &lt;= sup d a |] ==&gt; e &lt;= sup (sup d b) <br>\n(c::'a::upper_semilattice)\"</p>\n<p>auto, force,blast,fast, etc cannot prove this automatically.<br>\nIs there any way to prove this automatically, or to feed the right <br>\nlemmas to auto?</p>\n<p>Best,<br>\n  Peter</p>",
        "id": 294108987,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660836153
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nThis is what sledgehammer (with the help of Spass and minimization)<br>\ngives me quite quickly:</p>\n<p>by (metis le_sup_iff order_trans_rules(23) sup_ge1 sup_ge2).</p>\n<p>Tobias</p>\n<p>Peter Lammich wrote:</p>",
        "id": 294109005,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660836159
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt;<br>\nHi<br>\nTobias Nipkow schrieb:</p>\n<blockquote>\n<p>This is what sledgehammer (with the help of Spass and minimization)<br>\ngives me quite quickly:</p>\n<p>by (metis le_sup_iff order_trans_rules(23) sup_ge1 sup_ge2).</p>\n<p>I also got something similar by sledge-hammering and minimization using <br>\nSpass.<br>\nHowever, I interrupted the metis-prover after approx 3 minutes, b/c it <br>\ndid not terminate. (I'm using Isabelle2009-1)<br>\nFor your proposal, metis also did not yet terminate within 5 minutes ...</p>\n</blockquote>\n<p>Best and thanks,<br>\n  Peter</p>\n<blockquote>\n<p>Tobias</p>\n<p>Peter Lammich wrote:</p>\n<blockquote>\n<p>Hi all,</p>\n<p>I have to prove the following lemma:<br>\n lemma \"[| a &lt;= sup b c; e &lt;= sup d a |] ==&gt; e &lt;= sup (sup d b)<br>\n(c::'a::upper_semilattice)\"</p>\n<p>auto, force,blast,fast, etc cannot prove this automatically.<br>\nIs there any way to prove this automatically, or to feed the right<br>\nlemmas to auto?</p>\n<p>Best,<br>\n Peter<br>\n</p>\n</blockquote>\n</blockquote>",
        "id": 294109024,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660836165
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nUnfortunately you are right. I thought I had tried the metis call, but<br>\nhad not. :-(</p>\n<p>Tobias</p>\n<p>Peter Lammich wrote:</p>",
        "id": 294109042,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660836171
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\napply (metis ge_sup_conv le_iff_sup sup_absorb1 sup_assoc sup_commute sup_ge1)</p>\n<p>Larry</p>",
        "id": 294109059,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660836177
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@gmail.com\">jasmin.blanchette@gmail.com</a>&gt;<br>\nHi Peter,</p>\n<p>Using the lattest repository version of Isabelle, I invoked Sledgehammer with the \"[isar_proof, isar_shrink_factor = 2]\" options and got the following structured proof, which is quite fast to process:</p>\n<p>proof -<br>\n  assume A1: \"a \\&lt;le&gt; sup b c\"<br>\n  assume \"e \\&lt;le&gt; sup d a\"<br>\n  hence F1: \"\\&lt;forall&gt;u\\&lt;ge&gt;sup d a. e \\&lt;le&gt; u\" by (metis xtrans(6))<br>\n  have F2: \"\\&lt;forall&gt;u. a \\&lt;le&gt; sup (sup b c) u\" by (metis A1 sup_ge1 xtrans(6))<br>\n  have \"\\&lt;forall&gt;u. a \\&lt;le&gt; u \\&lt;and&gt; d \\&lt;le&gt; u \\&lt;longrightarrow&gt; e \\&lt;le&gt; u\" by (metis F1 le_supI semilattice_sup_class.sup.commute)<br>\n  hence \"e \\&lt;le&gt; sup b (sup c d)\" by (metis F2 le_supE semilattice_sup_class.sup.assoc sup_ge2)<br>\n  hence \"e \\&lt;le&gt; sup c (sup b d)\" by (metis semilattice_sup_class.sup.left_commute)<br>\n  thus \"e \\&lt;le&gt; sup (sup d b) c\" by (metis semilattice_sup_class.sup.commute)<br>\nqed</p>\n<p>The names of some of the theorems have changed in the meantime. Some of the steps could be simplified.</p>\n<p>Jasmin</p>\n<p>P.S. Tobias: On my machine \"isar_proof\" works perfectly well. I'll try to reproduce your problems on a Linux machine.</p>",
        "id": 294109072,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660836183
    },
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:brianh@cs.pdx.edu\">brianh@cs.pdx.edu</a>&gt;<br>\nHere's a proof using \"fast\" that works quickly:</p>\n<p>by (fast elim: order_trans intro: le_supI1 le_supI2 sup_least)</p>\n<p>By the way, what is up with sledgehammer returning theorem names like<br>\n\"order_trans_rules(23)\"? Shouldn't it prefer names of individual<br>\ntheorems like \"order_trans\" instead?</p>\n<ul>\n<li>Brian</li>\n</ul>",
        "id": 294109100,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660836196
    }
]