[
    {
        "content": "<p>From: Holden Lee &lt;<a href=\"mailto:hl422@cam.ac.uk\">hl422@cam.ac.uk</a>&gt;<br>\nAt a certain point in my proof I have the goal</p>\n<p>m = 0 ==&gt; N = 0 ==&gt; card {l. l = [] ∧ (∀n∈set l. n = 0)} = Suc 0</p>\n<p>OK, Isabelle failed to do this with auto so I inserted some statements<br>\nbefore:</p>\n<p>have l: \"{l::int list. l = [] ∧ (∀n∈set l. n = 0)} = {[]}\"<br>\n      by auto<br>\n    hence l2: \"card {l::int list. l = [] ∧ (∀n∈set l. n = 0)} = 1\"<br>\n      by auto</p>\n<p>Now apply (insert l2, auto) gives</p>\n<p>m = 0 ==&gt;<br>\n    N = 0 ==&gt;<br>\n    card {l. l = [] ∧ (∀n∈set l. n = 0)} = Suc 0 ==&gt; card {l. l = [] ∧<br>\n(∀n∈set l. n = 0)} = Suc 0</p>\n<p>The two statements are exactly the same (I checked the color of the<br>\nvariables too, anyway they're all bound). try0 fails and sledgehammer<br>\nhangs. What gives?</p>\n<p>-Holden</p>",
        "id": 294291065,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660923479
    },
    {
        "content": "<p>From: Holden Lee &lt;<a href=\"mailto:hl422@cam.ac.uk\">hl422@cam.ac.uk</a>&gt;<br>\nNever mind: it turned out one of the statements is l::nat list instead.<br>\nStill, sneaky...</p>\n<p>-Holden</p>",
        "id": 294291114,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660923484
    },
    {
        "content": "<p>From: Johannes Hölzl &lt;<a href=\"mailto:hoelzl@in.tum.de\">hoelzl@in.tum.de</a>&gt;<br>\nBtw, you can proof this with the simplifier by:</p>\n<p>simp cong: conj_cong</p>\n<p>Then </p>\n<p>{l. l = [] ∧ (∀n∈set l. n = 0)}<br>\n     = with conj_cong<br>\n  {l. l = [] ∧ (∀n∈set []. n = 0)}<br>\n     =<br>\n  {[]}</p>\n<ul>\n<li>Johannes</li>\n</ul>",
        "id": 294291136,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660923490
    }
]