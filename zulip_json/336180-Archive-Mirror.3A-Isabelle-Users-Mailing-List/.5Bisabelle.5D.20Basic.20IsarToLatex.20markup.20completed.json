[
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nHi,</p>\n<p>I don't expect anything back on this, and I'm not trying to convince <br>\nanyone of anything, but I send it in anyway. I got the important parts <br>\nof my IsarToLatex markup language finished/started, and now I'm ready to <br>\nstart using it. The goal is, after all, to prove things, not just mess <br>\naround with software.</p>\n<p>My last email I thought there wouldn't be anything for anyone to say, <br>\nbut then I got an important proof from Christian Sternagel; though the <br>\nproof is trivial,  the result is not unimportant, and the discussion is <br>\nand was instructive.</p>\n<p>My use of that proof would be Example 1.1.8, Theorem 1.1.9, and Proof <br>\n1.1.9.1 of the attached PDF, pages 3 and 4.</p>\n<p>My nifty script allows you to see from the PDF what line numbers to look <br>\nfor in the THY, which would be lines 168, 220, and 226.</p>\n<p>The basic idea of my humble man's WYSIWYG is:</p>\n<p>1) Create markup delimiters by subscripting or superscripting select <br>\nASCII or \\&lt;...&gt; characters,<br>\n2) in non-standard ways,<br>\n3) that make the symbols smaller and more discrete,<br>\n4) but yet you can still recognize them and not confuse them for similar <br>\nlooking characters, even when using a small font.</p>\n<p>As to why I want a humble man's WYSIWYG, I won't explain that.</p>\n<p>I have it to where there's a close correlation between how the THY <br>\nlooks, and how the PDF looks. I still have to compile to make sure I <br>\nhaven't made mistakes, but by not having to put in newlines for arrays, <br>\nI should make a few less mistakes.</p>\n<p>I have the basic LaTeX commands implemented where I currently don't have <br>\nto use \\, {, } and \\\\. The basics commands are inline math, math <br>\nsymbols, equations and array environments, \\label, \\ref, \\eqref, \\cite, <br>\n\\index, \\texttt, and the very important theorem environments, which I <br>\nuse in conjunction with a verbatim environment.</p>\n<p>There are three attachments. My working THY, sTs01.thy, which is the <br>\nprimary file used to produce sTs.pdf. There's a jEdit screenshot for <br>\npeople who can't or don't want to load the THY. I printed out sTs01.thy <br>\nwith a PDF printer driver, but it doesn't do justice to what you see in <br>\njEdit, and the printout was 700K, where the PDF generated from LaTeX is <br>\n125K.</p>\n<p>The screenshot shows some of my markup characters, and I'm using a size <br>\n10 font. The spellchecker is underlining some things.</p>\n<p>I got some good ideas from the standard way Isabelle does the LaTeX build.</p>\n<p>The import file \"i\" is not needed in sTs01.thy. The margins for the PDF <br>\nare chosen for the way I prefer to read a PDF on a computer.</p>\n<p>As to generating other THY files from a working file like sTs01.thy, <br>\nsuch as a THY that ASCII lovers would find acceptable and useful, that's <br>\na future possibility, but not to be done if unnecessary. These days, <br>\nmost people don't expect HTML pages to be converted to TXT files.</p>\n<p>Regards,<br>\nGB<br>\n<a href=\"/user_uploads/14278/YhxQn8Xaygf8PhRwN_IjZUuE/jEdit-markup.png\">jEdit markup.png</a><br>\n<a href=\"/user_uploads/14278/kzwC_s99folTJcm4sHpDBPGp/sTs.pdf\">sTs.pdf</a><br>\n<a href=\"/user_uploads/14278/PD05EHNte7ceCFMgl0POMvgY/sTs01.thy\">sTs01.thy</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/YhxQn8Xaygf8PhRwN_IjZUuE/jEdit-markup.png\" title=\"jEdit markup.png\"><img src=\"/user_uploads/14278/YhxQn8Xaygf8PhRwN_IjZUuE/jEdit-markup.png\"></a></div>",
        "id": 294227063,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660900495
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Wed, 28 Nov 2012, Gottfried Barrow wrote:</p>\n<blockquote>\n<p>I got the important parts of my IsarToLatex markup language <br>\nfinished/started, and now I'm ready to start using it. The goal is, <br>\nafter all, to prove things, not just mess around with software.</p>\n</blockquote>\n<blockquote>\n<p>The basic idea of my humble man's WYSIWYG is:</p>\n<p>1) Create markup delimiters by subscripting or superscripting select ASCII or <br>\n\\&lt;...&gt; characters,<br>\n2) in non-standard ways,<br>\n3) that make the symbols smaller and more discrete,<br>\n4) but yet you can still recognize them and not confuse them for similar <br>\nlooking characters, even when using a small font.</p>\n</blockquote>\n<p>Interesting what can be done with a few control symbols.  It appears to be <br>\ngenerally in line with the \"markdown\" family of tools.  Do you have your <br>\nown implementation somewhere on the web?</p>\n<p>I would have never got the idea to make a subscripted ASCII prime.  Such <br>\nthings depend a lot on the actual font being used, though.</p>\n<blockquote>\n<p>There's a jEdit screenshot for people who can't or don't want to load <br>\nthe THY.</p>\n</blockquote>\n<blockquote>\n<p>The screenshot shows some of my markup characters, and I'm using a size <br>\n10 font. The spellchecker is underlining some things.</p>\n</blockquote>\n<p>Which spellchecker are you using here?  Are you satisfied with it? At some <br>\npoint I would like to wire-up a reasonably good one with Isabelle/jEdit in <br>\na way that it knows about the formal vs. informal parts of the text.  So <br>\nit won't hilight the formal option \"SAT4J\", for example.</p>\n<blockquote>\n<p>As to generating other THY files from a working file like sTs01.thy, <br>\nsuch as a THY that ASCII lovers would find acceptable and useful, that's <br>\na future possibility, but not to be done if unnecessary. These days, <br>\nmost people don't expect HTML pages to be converted to TXT files.</p>\n</blockquote>\n<p>At some point I would like to see the Isabelle/Isar sources rendered <br>\nnicely in HTML, based on similar pseudo-markup symbols as you have here, <br>\nor like a variant of Markdown that is using non-ASCII characters.</p>\n<p>Luckily Isabelle has an infinite amount of \\&lt;foo&gt; symbols to play with, <br>\nand they can be assigned to Unicode glyphs on demand.</p>\n<p>Makarius</p>",
        "id": 294227259,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660900584
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nOn 11/30/2012 5:03 PM, Makarius wrote:</p>\n<blockquote>\n<p>Interesting what can be done with a few control symbols.  It appears <br>\nto be generally in line with the \"markdown\" family of tools.  Do you <br>\nhave your own implementation somewhere on the web?</p>\n</blockquote>\n<p>No. It's just me hacking around with the scripting language of WinEdit, <br>\nwhich is a LaTeX editor with it's own flavor of regular expressions: <br>\n<a href=\"http://winedt.com/\">http://winedt.com/</a></p>\n<p>Consequently, the scripts aren't suitable for public distribution for a <br>\nproduct that's tied into jEdit. I'd like to switch over to jython, so I <br>\ncan give Isabelle users any scripts I write, but that's not going to <br>\nhappen for a long time.</p>\n<p>I'm also not motivated at this time to get anyone to do anything that <br>\ncreates forks off of what's being done using only the official <br>\ndistribution. And there's plenty of time to wait, because I'll be making <br>\nlots of additions and changes as I use what I'm doing more and more. For <br>\nexample, I only had a long form for \\eqref, like Equation &lt;ymdhMMa&gt;, and <br>\nI've added a short form, like &lt;Eq`ymdhMMa&gt;, so that only the equation <br>\nnumber gets printed.</p>\n<p>This ties into what Christian Sternagel said in the message thread that <br>\npreceded this one, that if possible, it's best to get features <br>\nimplemented officially.</p>\n<p>You can have anything you want of what I've done. To give you the <br>\nscripts, I would probably have to zip up the WinEdit executable so you <br>\ncould figure out how the scripting language works, along with using the <br>\nhelp file.</p>\n<p>What I don't want to publicly distribute right now is my \"Greek theme <br>\nlayout\". I'd like to use it a while before I give people the LaTeX <br>\nsources, not that people couldn't easily figure out what I'm doing.</p>\n<p>What I'm doing is a 3900 line LaTeX preamble, with a ton of clutter and <br>\ncommented lines, and a 825 line WinEdit script, which is at least half <br>\ncommented lines.</p>\n<blockquote>\n<p>I would have never got the idea to make a subscripted ASCII prime.  <br>\nSuch things depend a lot on the actual font being used, though.</p>\n</blockquote>\n<p>It wasn't obvious to me, but you made it available as an identifier <br>\ncharacter, and one thing led to another. For markup tags, the <br>\nsubscripted reverse tick, <code>, is an excellent character, at least with \nthe default jEdit font on Windows 7. A subscripted </code> and subscripted ' <br>\nare distinguishable, whereas, a subscripted ' looks the same as lots of <br>\nother subscripted characters.</p>\n<p>But you bring up a good point that hasn't occurred to me, that all my <br>\nchoices of subscripted characters, though I can distinguish them with my <br>\nfont, other people might not be able to.</p>\n<p>With Isar identifiers, using subscripted ' is not a problem because <br>\nthere are only a few non-alphabet or non-numeric characters that can be <br>\nused, but there are a bunch of different subscripted characters that <br>\nmake a small little dot, and people should be able to know what <br>\ncharacter they're looking at.</p>\n<p>So maybe I'll put some thought into trying to get away from using <br>\nsubscripted ', `, and *.</p>\n<blockquote>\n<p>Which spellchecker are you using here?  Are you satisfied with it? At <br>\nsome point I would like to wire-up a reasonably good one with <br>\nIsabelle/jEdit in a way that it knows about the formal vs. informal <br>\nparts of the text.  So it won't hilight the formal option \"SAT4J\", for <br>\nexample.</p>\n</blockquote>\n<p>I use the VoxSpell plugin: <a href=\"http://plugins.jedit.org/plugins/?VoxSpell\">http://plugins.jedit.org/plugins/?VoxSpell</a></p>\n<p>It comes with a dictionary. I tried the SpellCheck plugin, which can use <br>\nAspell and several other dictionaries, including VoxSpell, if I remember <br>\nright.</p>\n<p>VoxSpell is the only one that checks your spelling as you type. Yea, I <br>\nlike it. You can't edit its dictionary directly, so I couldn't figure <br>\nout how to remove a word from its dictionary, after I had added, but if <br>\nyou've added an underlined word, such as \"word\", if you right click on <br>\n\"word\", there's an item in the menu which says \"reset 'word'\".</p>\n<blockquote>\n<blockquote>\n<p>...but not to be done if unnecessary. These days, most people don't <br>\nexpect HTML pages to be converted to TXT files.</p>\n</blockquote>\n<p>At some point I would like to see the Isabelle/Isar sources rendered <br>\nnicely in HTML, based on similar pseudo-markup symbols as you have <br>\nhere, or like a variant of Markdown that is using non-ASCII characters.</p>\n<p>Luckily Isabelle has an infinite amount of \\&lt;foo&gt; symbols to play <br>\nwith, and they can be assigned to Unicode glyphs on demand.</p>\n</blockquote>\n<p>As far as interface, I try not to make any requests, since you were way <br>\nahead of everyone anyway.  I'm sure the HTML feature will be useful, but <br>\nit's not like I need to wait on it to get what I need now. The basics of <br>\nwhat I need now is pretty much there, and I didn't do anything.</p>\n<p>I will make a pseudo-request, but first, you mention our ability to add <br>\n\\&lt;foo&gt; commands to our etc/symbols, and that ties into a fundamental <br>\nrule I try to follow which is, \"Try to never require anything of another <br>\nIsabelle user other than the default distribution\".</p>\n<p>So, if I put new \\&lt;foo&gt;s in my etc/symbols that I use for markup tags, <br>\nthen other people will need to use my etc/symbols file to see what I <br>\nsee, and I can be pretty sure that no one will want to do that.</p>\n<p>This leads into the \\&lt;^isub&gt; command. What I want is not just characters <br>\nfor markup tags, but subscripted characters. Your point is good about <br>\nthe possibility of subscripted primes not being distinguishable under <br>\ncertain fonts, but subscripted \\&lt;rhd&gt;, \\&lt;lhd&gt;, \\&lt;lless&gt;, and <br>\n\\&lt;ggreater&gt;, which I'm using for equations, would probably work under <br>\nmost fonts.</p>\n<p>Here are three things that would make for safer markup:</p>\n<p>1) You leave \\&lt;^isub&gt; and \\&lt;^isup&gt; in Isar.<br>\n2) They and the character that follows them get ignored, other than the <br>\nfact that the character gets subscripted or superscripted.<br>\n3) They're highlighted different than the characters following \\&lt;^sub&gt; <br>\nand \\&lt;^sup&gt;.</p>\n<p>Without item three, it might just end up confusing people, if they're <br>\ntrying to figure out what the markup tags are. Is it \\&lt;^isub&gt;' or <br>\n\\&lt;^sub&gt;'? You wouldn't be able to tell.</p>\n<p>That's not a request. It's merely a pseudo-request. I wouldn't know <br>\nwhat's best.</p>\n<p>Regards,<br>\nGB</p>",
        "id": 294228358,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901130
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Fri, 30 Nov 2012, Gottfried Barrow wrote:</p>\n<blockquote>\n<p>Here are three things that would make for safer markup:</p>\n<p>1) You leave \\&lt;^isub&gt; and \\&lt;^isup&gt; in Isar.</p>\n</blockquote>\n<blockquote>\n<p>2) They and the character that follows them get ignored, other than the fact <br>\nthat the character gets subscripted or superscripted.</p>\n</blockquote>\n<p>Does that mean you want to write \"foo\\&lt;^sub&gt;\\&lt;lless&gt;\" as identifier?<br>\nOr \\&lt;^sub&gt;\\&lt;lless&gt; anywhere in the Isar outer syntax to be like a blank?</p>\n<blockquote>\n<p>3) They're highlighted different than the characters following \\&lt;^sub&gt; and <br>\n\\&lt;^sup&gt;.</p>\n<p>Without item three, it might just end up confusing people, if they're trying <br>\nto figure out what the markup tags are. Is it \\&lt;^isub&gt;' or \\&lt;^sub&gt;'? You <br>\nwouldn't be able to tell.</p>\n</blockquote>\n<p>The confusion of \\&lt;^isub&gt; version \\&lt;^sub&gt; has been there all the time, <br>\nstarting when \\&lt;^isub&gt; was introduced. There were historical reasons to <br>\nhave subscripts within an identifier different from subscripts as part of <br>\nnotation, because there was a built-in notation using it (a variant of <br>\napplication).  So there might actually be a chance now to unify identifier <br>\nsyntax to use \\&lt;^sub&gt; only, and drop the special rendering of \\&lt;^isub&gt; <br>\n\\&lt;^isup&gt; in Isabelle/jEdit.</p>\n<p>In general, the jEdit text view can render \"\\&lt;^foo&gt;\\&lt;bar&gt;\" or \"\\&lt;^foo&gt;a\" <br>\nin almost arbitrary ways that fit on a 1-dimensional line of text.  Any <br>\naffine transformation on the font can be applied.  For \\&lt;^sub&gt;a the glyph <br>\nfor \\&lt;^sub&gt; is made very thin (and in the next release also with 100% <br>\ntransparency) and the \"a\" is scaled/translated to give a nice subscript <br>\n(nicer than the official Java subscript style).</p>\n<p>One could also change the font family on the spot, for each of the two <br>\nsymbols separately, but this is presently not done.</p>\n<p>Makarius</p>",
        "id": 294228545,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901234
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nOn 12/1/2012 4:02 AM, Makarius wrote:</p>\n<blockquote>\n<p>On Fri, 30 Nov 2012, Gottfried Barrow wrote:</p>\n<blockquote>\n<p>Here are three things that would make for safer markup:</p>\n<p>1) You leave \\&lt;^isub&gt; and \\&lt;^isup&gt; in Isar.</p>\n</blockquote>\n<blockquote>\n<p>2) They and the character that follows them get ignored, other than <br>\nthe fact that the character gets subscripted or superscripted.</p>\n</blockquote>\n<p>Does that mean you want to write \"foo\\&lt;^sub&gt;\\&lt;lless&gt;\" as identifier?<br>\nOr \\&lt;^sub&gt;\\&lt;lless&gt; anywhere in the Isar outer syntax to be like a blank?</p>\n</blockquote>\n<p>I answer those questions after a few preliminary remarks.</p>\n<p>In place of \\&lt;^isub&gt;, I'll call what I want \\&lt;^msub&gt;, for user-markup <br>\nsubscript. I want to have two different subscript commands, the normal <br>\none, \\&lt;^sub&gt; (which you've said will be the only one), and this new <br>\ncommand \\&lt;^msub&gt;.</p>\n<p>I want to write something like this:</p>\n<p>--\"\\&lt;^msub&gt;' Please consider the equation  \\&lt;^msub&gt;'x+1\\&lt;^msub&gt;'  in <br>\ntheorem \\&lt;^msub&gt;*my\\&lt;^sub&gt;'theorem\\&lt;^msub&gt;*.\"</p>\n<p>This above is an Isar comment that will become normal LaTeX text, that <br>\nis, text in a text{<em>...</em>}.</p>\n<p>1) The  --\"\\&lt;^msub&gt;'...\" marks it as normal LaTeX text that's outside of <br>\nany other environment.<br>\n2) The \\&lt;^msub&gt;'....\\&lt;^msub&gt;' is a math inline equation.<br>\n3) The \\&lt;^msub*.....\\&lt;^msub&gt;* is typewriter font.<br>\n4) The \"my\\&lt;^sub&gt;'theorem\" is a normal Isar identifier with the allowed <br>\nsubscripted prime, \\&lt;^sub&gt;', in the name. I will have possibly copied <br>\nand pasted \"my\\&lt;^sub&gt;'theorem\" into the comment. Plus, if \\&lt;^sub&gt;' is <br>\nformally part of the identifier, then I definitely don't want to use <br>\nanother character in its place, even if its in a comment.</p>\n<p>I used the word \"ignored\" because I got confused a little. I've only <br>\nbeen talking about using \\&lt;^isub&gt; inside a comment, --\"...\", where I can <br>\nalready do what I want with it.</p>\n<p>I'll expand on describing these new commands, \\&lt;^msub&gt; and \\&lt;^msup&gt;.</p>\n<p>1) They are reserved for user's use. A user can interpret a \\&lt;^msub&gt; or <br>\n\\&lt;^msup&gt; subscripted or superscripted character any way they want.<br>\n2) They hide nothing. They subscript or superscript the character that <br>\nfollows them in a reasonably normal manner.<br>\n3) The character that they subscript or superscript is distinguishable <br>\nfrom characters subscripted and superscripted with \\&lt;^sub&gt; and \\&lt;^sup&gt;.<br>\n4) They can be used anywhere in a THY file.</p>\n<p>Item 4 would be where you would sometimes need to \"ignore\" a \\&lt;^msub&gt; or <br>\n\\&lt;^msup&gt;, and the character after them.</p>\n<p>I haven't even been wanting to markup anything outside of a --\"...\" <br>\ncomment, but I throw out item 4 to make the use of \\&lt;^msub&gt; and \\&lt;^msup&gt; <br>\nas general as possible.</p>\n<p>Having said all that, I specifically answer your two questions to make <br>\nsure I have.</p>\n<p>1) \"Does that mean you want to write \"foo\\&lt;^sub&gt;\\&lt;lless&gt;\" as identifier?\"</p>\n<p>No. The rules and available characters for identifiers are fine with me. <br>\nPart of the reason I want a \\&lt;^msub&gt; is because I heavily use \\&lt;^isub&gt;' <br>\nin identifier names, so trying to use \\&lt;^isub&gt;'.....\\&lt;^isub&gt;' as <br>\ndelimited text can't easily be done. In general I have to be careful <br>\nabout trying to use \\&lt;^isub&gt;' to create pairs of delimiters, and ' is a <br>\ngreat subscripted character because it's subtle and it's easy to type.</p>\n<p>2) \"Or \\&lt;^sub&gt;\\&lt;lless&gt; anywhere in the Isar outer syntax to be like a <br>\nblank? \".</p>\n<p>No. With this simple markup I'm talking about, I don't want anything to <br>\nbe completely hidden. If I decide to use markup, like</p>\n<p>\\&lt;^msub&gt;\\&lt;lless&gt;a big equation array\\&lt;^msub&gt;\\&lt;ggreater&gt;,</p>\n<p>though I want \\&lt;lless&gt; and \\&lt;ggreater&gt; to be small, I want to know that <br>\nthey're there, and recognize what they are.</p>\n<p>If you have something fancy in mind to give us, that's fine, but my <br>\nsystem is simply based on typing characters in a normal way. We need to <br>\nsee what we typed.</p>\n<blockquote>\n<p>In general, the jEdit text view can render \"\\&lt;^foo&gt;\\&lt;bar&gt;\" or <br>\n\"\\&lt;^foo&gt;a\" in almost arbitrary ways that fit on a 1-dimensional line <br>\nof text.  Any affine transformation on the font can be applied.  For <br>\n\\&lt;^sub&gt;a the glyph for \\&lt;^sub&gt; is made very thin (and in the next <br>\nrelease also with 100% transparency) and the \"a\" is scaled/translated <br>\nto give a nice subscript (nicer than the official Java subscript style).</p>\n<p>One could also change the font family on the spot, for each of the two <br>\nsymbols separately, but this is presently not done.<br>\n</p>\n</blockquote>\n<p>This brings up a restatement of one of my rules, which would be, \"The <br>\nTHY can only be edited in a way which conforms to the rules\".</p>\n<p>I can do all the preprocessing I want on a THY before I feed it to <br>\nLaTeX, but if someone wants to open up one of my THYs, then I want them <br>\nto see what I have been seeing, and I don't them to get any errors.</p>\n<p>Basically, even if I could figure out a way to do a lot of preprocessing <br>\non the text in a THY before it got to your prover engine, I wouldn't <br>\nwant to do it, unless it performed some great magic, but not I'm a <br>\nmagician in these matters. The only \"One\" making changes would be you. I <br>\njust work within the rules.</p>\n<p>Regards,<br>\nGB</p>",
        "id": 294228965,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901437
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nFirst, I now use \\&lt;^usub&gt; and \\&lt;^usup&gt; as the new, hypothetical commands <br>\nyou will supply in Isar. The \"u\" is to emphasize \"user reserved\". It <br>\ncould be that you want your own \\&lt;^psub&gt; and \\&lt;^psup&gt; \"prover reserved\" <br>\nmarkup commands.</p>\n<p>(1) To clarify, \"ignore\" means that \\&lt;^usub&gt;&lt;ASCII or Unicode character&gt; <br>\nwill get parsed for correct syntax, then get displayed as a subscripted <br>\ncharacter (different looking than the use of \\&lt;^sub&gt;), but not get used <br>\nin any way by the prover engine, and not get flagged as an error, no <br>\nmatter where it is in a THY file.</p>\n<p>Here, I make a pseudo sales speech. For myself, I don't have to have any <br>\nof this. I can modify my script to accommodate how I use Isar.</p>\n<p>Suppose you gave us three control characters that behave as described <br>\nby, or similar to, (1): \\&lt;^usub&gt;, \\&lt;^usup&gt;, and \\&lt;^uchar&gt;, where <br>\n\\&lt;^uchar&gt; simply displays the character in a uniquely visible way.</p>\n<p>You would then free up every ASCII and Unicode character to be used as a <br>\nmarkup tag in a THY.</p>\n<p>The markup we're talking about is more general than HTML or LaTeX <br>\nmarkup. We could call it \"preprocessing markup\". It would give the user <br>\nthe ability to use single characters, single subscripted characters, and <br>\nsingle superscripted characters as markup tags for any kind of <br>\npreprocessing they would want to do.</p>\n<p>Myself, I would be using a lot of single characters tags, and I don't <br>\nthink I would ever have to use more than two characters to create my <br>\ndelimiters.</p>\n<p>Regards,<br>\nGB</p>",
        "id": 294229096,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901504
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nIt seems like this would all turn out to be something like one character <br>\ncomments that get implemented like (<em>...</em>), other than having to come up <br>\nwith a good way to fit in how they would look.</p>\n<p>But I would have eventually settled on using \\&lt;^sub&gt; for this, since <br>\nI've only been using \\&lt;^isub&gt;. It pays to get a little information here <br>\nand there. It would have been a rude awakening after it occurred to me <br>\nthat \\&lt;^sub&gt; was the perfect solution all along, and after using the <br>\nperfect solution for 4 months, the perfect solution then disappeared in <br>\nthe upgrade in 2013.</p>\n<p>You can upgrade my psuedo-request and psuedo-sales speech to the real thing.</p>\n<p>Regards,<br>\nGB</p>",
        "id": 294229240,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901572
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Sat, 1 Dec 2012, Gottfried Barrow wrote:</p>\n<blockquote>\n<p>In place of \\&lt;^isub&gt;, I'll call what I want \\&lt;^msub&gt;, for user-markup <br>\nsubscript. I want to have two different subscript commands, the normal <br>\none, \\&lt;^sub&gt; (which you've said will be the only one), and this new <br>\ncommand \\&lt;^msub&gt;.</p>\n<p>I want to write something like this:</p>\n<p>--\"\\&lt;^msub&gt;' Please consider the equation  \\&lt;^msub&gt;'x+1\\&lt;^msub&gt;'  in theorem <br>\n\\&lt;^msub&gt;*my\\&lt;^sub&gt;'theorem\\&lt;^msub&gt;*.\"</p>\n<p>This above is an Isar comment that will become normal LaTeX text, that is, <br>\ntext in a text{<em>...</em>}.</p>\n<p>1) The  --\"\\&lt;^msub&gt;'...\" marks it as normal LaTeX text that's outside of any <br>\nother environment.<br>\n2) The \\&lt;^msub&gt;'....\\&lt;^msub&gt;' is a math inline equation.<br>\n3) The \\&lt;^msub*.....\\&lt;^msub&gt;* is typewriter font.</p>\n</blockquote>\n<blockquote>\n<p>I'll expand on describing these new commands, \\&lt;^msub&gt; and \\&lt;^msup&gt;.</p>\n<p>1) They are reserved for user's use. A user can interpret a \\&lt;^msub&gt; or <br>\n\\&lt;^msup&gt; subscripted or superscripted character any way they want.<br>\n2) They hide nothing. They subscript or superscript the character that <br>\nfollows them in a reasonably normal manner.<br>\n3) The character that they subscript or superscript is distinguishable from <br>\ncharacters subscripted and superscripted with \\&lt;^sub&gt; and \\&lt;^sup&gt;.</p>\n</blockquote>\n<p>I would call that control symbol \\&lt;^mark&gt; to make its logical function <br>\nmore clear.  The rendering engine would merely have to assign it to some <br>\nfont style + color change, like it does already for \\&lt;^sub&gt; in a hardwired <br>\nmanner.  That would have to become a bit more flexible, to allow <br>\netc/symbols changing the behaviour of control symbols.</p>\n<p>(This is merely a summary of what I distilled from above, not any promise <br>\nthat this will come in the next release.)</p>\n<blockquote>\n<p>4) They can be used anywhere in a THY file.</p>\n<p>Item 4 would be where you would sometimes need to \"ignore\" a \\&lt;^msub&gt; or <br>\n\\&lt;^msup&gt;, and the character after them.</p>\n</blockquote>\n<blockquote>\n<p>I haven't even been wanting to markup anything outside of a --\"...\" <br>\ncomment, but I throw out item 4 to make the use of \\&lt;^msub&gt; and \\&lt;^msup&gt; <br>\nas general as possible.</p>\n</blockquote>\n<p>When it is not required there is no point to think about it too much.</p>\n<p>Assigning phyisical rendering to control symbols is one thing, but <br>\nspecifying a certain meaning as part of the syntax is another.  The latter <br>\nis usually avoided, and the etc/symbols file does not cover that at all. <br>\nE.g. you can't say that something should be a \"letter\", \"digit\", \"blank\" <br>\nthat was not known as such before.</p>\n<blockquote>\n<p>This brings up a restatement of one of my rules, which would be, \"The <br>\nTHY can only be edited in a way which conforms to the rules\".</p>\n<p>I can do all the preprocessing I want on a THY before I feed it to <br>\nLaTeX, but if someone wants to open up one of my THYs, then I want them <br>\nto see what I have been seeing, and I don't them to get any errors.</p>\n</blockquote>\n<p>Inventing Isabelle symbols that are not used elsewhere is perfectly within <br>\nthe rules of the free-form typesetting of Isabelle documents.  You can <br>\nhave your scripts to post-process the symbols in the \"text\" ranges, and <br>\npeople have done that before.  It merely needs an awarenes that you don't <br>\n\"declare\" use of special symbols formally, so there is always a potential <br>\nto clash with other people's scripts and tools.  But this is the same in <br>\nregular LaTeX.</p>\n<p>Makarius</p>",
        "id": 294229336,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901640
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nSo I was being overly ambitious to help other people out, not myself.</p>\n<p>For myself, all I need is this:</p>\n<p>(1) What is now called \\&lt;^isub&gt;, you rename to \\&lt;^sub&gt;.<br>\n(2) What is now called \\&lt;^sub&gt;, you rename to \\&lt;^mark&gt;.</p>\n<p>Item (1) is what you've already implemented in the development version <br>\n(so I understand).</p>\n<p>Item (2) is merely renaming a control symbol that has been freed up.</p>\n<p>I wouldn't need anything special to distinguish between the use of <br>\n\\&lt;^sub&gt; and \\&lt;^mark&gt;. Context would tell me which was being used.</p>\n<p>If you were to tell me today that item (2) is what's going to be done, <br>\nthen I would just start using \\&lt;^sub&gt; as my markup command. It would <br>\nmake the search and replace in my script fairly mindless, which is the <br>\nway I like it.</p>\n<p>Thanks for the hypothetical gift. I appreciate it, hypothetically.</p>\n<p>If inclined, you would also rename what is now \\&lt;^sup&gt; to make it a <br>\nmarkup control symbol. The result would be that, effectively, no <br>\ncommands are being taken away from Isar. If \\&lt;^mark&gt; was being used, and <br>\nit looked like \\&lt;^sub&gt;, that just means that when a THY was being marked <br>\nup, it would require more experience from the user.</p>\n<p>Regards,<br>\nGB</p>",
        "id": 294229475,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901707
    }
]