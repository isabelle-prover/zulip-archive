[
    {
        "content": "<p>From: Gopalan Nadathur &lt;<a href=\"mailto:gopalan@cs.umn.edu\">gopalan@cs.umn.edu</a>&gt;<br>\nDale Miller and I are happy to announce the recent publication of our<br>\nbook entitled \"Programming with Higher-Order Logic\" by Cambridge<br>\nUniversity Press. The table of contents and other details about the<br>\nbook can be found at <a href=\"https://sites.google.com/site/proghol/\">https://sites.google.com/site/proghol/</a>.</p>\n<p>The book argues for using higher-order intuitionistic logic as the<br>\nfoundations of logic programming. In elaborating this argument, the<br>\nbook presents</p>\n<p>- a sequent calculus based characterization of logic programming;<br>\n  - a proof search approach to computation;<br>\n  - higher-order logic programming;<br>\n  - polymorphic typing;<br>\n  - modular programming and abstract data types; and<br>\n  - simply-typed lambda-terms and their unification.</p>\n<p>The book also emphasizes the practical application of higher-order<br>\nlogic programming by showing that it can be used to provide elegant<br>\nformalizations and implementations of computations that manipulate<br>\nbindings in syntax.  In addition to a general exposition of this<br>\napproach, individual chapters present extended examples relating to</p>\n<p>- implementing proof systems,<br>\n  - computing with functional programs, and<br>\n  - encoding the pi-calculus.</p>\n<p>The lambda Prolog language is used to illustrate the underlying<br>\ncomputation-related ideas and their applications. The website for the<br>\nbook provides all the lambda Prolog code used in the book. The reader<br>\ncan experiment with this code using the Teyjus system available from<br>\n<a href=\"http://teyjus.cs.umn.edu/\">http://teyjus.cs.umn.edu/</a>.</p>",
        "id": 294223489,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660898732
    }
]