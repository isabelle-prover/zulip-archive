[
    {
        "content": "<p>From: \"Roger H.\" &lt;<a href=\"mailto:s57076@hotmail.com\">s57076@hotmail.com</a>&gt;<br>\nHello Johannes,<br>\nan update: In HOLCF, I can prove that bool is a pcpo (see below). Based on this, how can i prove that set is a cpo:<br>\ninstance set :: (type) cpo<br>\nThank you!</p>\n<p>---Proof that bool is a pcpo:<br>\ntext {* If one defines the @{text \"⊑\"} operator as the @{text \"--&gt;\"} operator on booleans,  one obtains a partial order. *}<br>\ninstantiation bool :: pobegin  definition less_bool_def: \"(op ⊑) = (op --&gt;)\"instanceby (intro_classes, unfold less_bool_def, safe)end<br>\ntext {* Now we will establish that the partial order on bools is complete. *}<br>\ntext {* Chains of bools are always finite *}instance bool :: chfinproof  fix S:: \"nat ⇒ bool\"  assume S: \"chain S\"  then have \"finite (range S)\" by simp  from S and this have \"finite_chain S\" by (rule finite_range_imp_finch)  thus \"∃ n. max_in_chain n S\" by (unfold finite_chain_def, simp)qed<br>\ninstance bool :: cpoproofqed<br>\ntext {* Bools are also pointed with @{text \"False\"} as minimal element. *}instance bool :: pcpoproof  have \"∀y::bool. False ⊑ y\" unfolding less_bool_def by simp  thus \"∃x::bool. ∀y. x ⊑ y\" ..qed</p>",
        "id": 294656391,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661168185
    },
    {
        "content": "<p>From: \"Roger H.\" &lt;<a href=\"mailto:s57076@hotmail.com\">s57076@hotmail.com</a>&gt;<br>\nHello, thank you for your help, it was sucessfully proven and this issue is closed.Excuse me for duplicat post.<br>\nBest regards!</p>",
        "id": 294656466,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661168223
    }
]