[
    {
        "content": "<p>From: Nemouchi Yakoub &lt;<a href=\"mailto:y.nemouchi@gmail.com\">y.nemouchi@gmail.com</a>&gt;<br>\nDear all,</p>\n<p>***Description:</p>\n<p>**Which Eisbach functionality ?<br>\n   Eisbach matching, namely:</p>\n<p>(match conclusion  in _\"  ⇒ _)</p>\n<p>The bug is related to matching conclusions in proof goals that comes with<br>\nschematic variables.</p>\n<p>**Example:</p>\n<p>If the conclusion of the proof goal is of the form ⦃?ps5⦄_⦃_⦄ then:<br>\n  apply (match conclusion  in ⦃?ps5⦄_⦃_⦄ \"  ⇒ succeed) --&gt;This WORKS FINE</p>\n<p>However,  If the conclusion of the proof goal is of the form ⦃ ?ps2.5 ⦄_⦃_⦄ or<br>\n ⦃ ?p⇩5 ⦄_⦃_⦄  then:</p>\n<p>apply (match conclusion  in ⦃ ?ps2.5 ⦄_⦃_⦄ \"  ⇒ succeed)   --&gt;<br>\n     This WILL NOT WORK because of   ?ps2.5</p>\n<p>apply (match conclusion  in ⦃ ?p⇩5  ⦄_⦃_⦄ \"  ⇒ succeed)<br>\n This WILL NOT WORK because of    ?p⇩5</p>\n<p>In Other words If you have a schematic variable coming from a \"fact\" that<br>\nuses a free variable with<br>\nan underscore like \" p⇩5 \" or the \"fact\" uses a free variable followed by a<br>\nnumeral like \" p5 \", Eisbach will not manage to<br>\nmatch it. This is because of the generated schematic variable by Isabelle<br>\nafter using the \"fact\" will have the form \" ?p⇩5 \" and  \"?p2.5\"<br>\nrespectively.</p>\n<p>Best wishes,</p>\n<p>Yakoub.</p>",
        "id": 294735594,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189670
    },
    {
        "content": "<p>From: Nemouchi Yakoub &lt;<a href=\"mailto:y.nemouchi@gmail.com\">y.nemouchi@gmail.com</a>&gt;<br>\nHi again,</p>\n<p>I just figure out it has nothing to do with schematic variables.</p>\n<p>However, the bug is even worst. Namely:</p>\n<p>1) apply ((match conclusion<br>\n          in \"⦃_⦄_⦃_⦄\"  ⇒ ‹succeed›), rule H)</p>\n<p>2)apply ((match conclusion<br>\n          in \"⦃_⦄_⦃_⦄\"  ⇒ ‹ rule H ›) )</p>\n<p>(1) Here (1) works fine and (2) does NOT work!</p>\n<p>For me (1) and (2) should always behave the same!</p>\n<p>Best wishes,</p>\n<p>Yakoub.</p>",
        "id": 294735608,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189676
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:mail@andreas-lochbihler.de\">mail@andreas-lochbihler.de</a>&gt;<br>\nHi Yakoub,</p>\n<p>Eisbach's match does not like schematic variables in goal states much. match works similar <br>\nto the subgoal command, which turns all schematic variables into goal parameters, i.e., <br>\nthey cannot be instantiated afterwards any more. This is by design because it removes the <br>\ninterdependency between different goals and therefore allows for parallel proof <br>\nprocessing. If you want to work with goals with schematics in them, don't use match or <br>\nsubgoal.</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 294735615,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189678
    },
    {
        "content": "<p>From: Nemouchi Yakoub &lt;<a href=\"mailto:y.nemouchi@gmail.com\">y.nemouchi@gmail.com</a>&gt;<br>\nHi Andreas,</p>\n<p>Is it a side-effect of the tactics match and  subgoal  on Isabelle state?<br>\nOr match and  subgoal   see schematic variables differently?</p>\n<p>Best,</p>\n<p>Yakoub.</p>\n<p>2018-06-08 1:22 GMT-04:00 Andreas Lochbihler &lt;<a href=\"mailto:mail@andreas-lochbihler.de\">mail@andreas-lochbihler.de</a>&gt;:</p>",
        "id": 294738228,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190564
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:mail@andreas-lochbihler.de\">mail@andreas-lochbihler.de</a>&gt;<br>\nHi Yakoub,</p>\n<p>match and subgoal both internally use a function called Subgoal.FOCUS to zoom in on a <br>\nsingle subgoal. This function turns all schematic variables in the goal state into goal <br>\nparameters that cannot be instantiated until the FOCUS is removed again. If you must <br>\ninstantiate schematic variables, you simply cannot use match or subgoal.</p>\n<p>Andreas</p>",
        "id": 294738247,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190572
    }
]