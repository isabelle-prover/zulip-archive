[
    {
        "content": "<p>From: Holger Gast &lt;<a href=\"mailto:gast@informatik.uni-tuebingen.de\">gast@informatik.uni-tuebingen.de</a>&gt;<br>\nDear Isabelle users,</p>\n<p>I have just upgraded my (Ubuntu) emacs to 22.2.1<br>\nand see the following funny behaviour:</p>\n<p>lemma \"[| A; B |] ==&gt; A\"</p>\n<p>yields:</p>\n<p>goal (1 subgoal):</p>\n<p>1. A ==&gt; B ==&gt; A</p>\n<p>with ProofGeneral 3.7.1 (advertised as latest stable),<br>\nwhile starting the command line \"isabelle -I\" gives (correctly):</p>\n<blockquote>\n<p>lemma \"[| A; B |] ==&gt; A\";<br>\nproof (prove): step 0</p>\n</blockquote>\n<p>goal (1 subgoal):</p>\n<p>1. [| A; B |] ==&gt; A</p>\n<p>XSymbols and everything else seems to be working properly,<br>\nI also re-byte-compiled ProofGeneral.</p>\n<p>Has any of you encountered a similar problem?</p>\n<p>Thanks,</p>\n<p>Holger</p>",
        "id": 294070838,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660827114
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Holger,</p>\n<p>the printing of folded implications is controlled by the printmode; for<br>\nPG you can set it using the PROOFGENERAL_OPTIONS in your<br>\n~/.isabelle/etc/settings file.  Can you check</p>\n<p>isabelle getenv PROOFGENERAL_OPTIONS</p>\n<p>If it contains \"-m no_brackets\", implications are <em>not</em> printed using<br>\nthose funny brackets [| |].  If you really want them, adapt your<br>\n~/.isabelle/etc/settings accordingly and everything should be fine.</p>\n<p>Hope this helps<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/Gv_GBnO39H8Xs1nkqeTkK5f6/signature.asc\">signature.asc</a></p>",
        "id": 294070911,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660827129
    },
    {
        "content": "<p>From: Christian Sternagel &lt;<a href=\"mailto:christian.sternagel@uibk.ac.at\">christian.sternagel@uibk.ac.at</a>&gt;<br>\nI think the standard behavior is to prefer <code>[| A; B |] ==&gt; A' over\n</code>A ==&gt; B ==&gt; A' for output. But I would not consider it a bug, if it is <br>\ndone the other way round (since both formulas are logically equivalent). <br>\nI can't believe, however, that output behavior depends on the emacs <br>\nversion. I think you just have a different Isabelle or ProofGeneral version.</p>\n<p>cheers</p>\n<p>christian</p>\n<p>Holger Gast wrote:</p>",
        "id": 294070963,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660827150
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nAs far as I know, the situation is still the same as it has been for more <br>\nthan 10 years already.  The system allows to write iterated arrows (both<br>\n=&gt; on types, and ==&gt; on props, i.e. \"types of proofs\") in<br>\nalternative bracket notation, e.g. like this:</p>\n<p>'a =&gt; 'b =&gt; 'c    vs.   ['a, 'b] =&gt; 'c<br>\n  A ==&gt; B ==&gt; C     vs.   [| A; B |] ==&gt; C</p>\n<p>Printing is controlled by print modes, with positive and negative modes to <br>\nallow explicit control independent of defaults coming from somewhere:</p>\n<p>no_type_brackets        type_brackets<br>\n  no_brackets             brackets</p>\n<p>The default of the Isabelle distribution is no_type_brackets and brackets.  <br>\n(Personally I always use no_type_brackets and no_brackets, both for <br>\nuniformity and for improved readability of nested rules; it also requires <br>\nless explanations to new users, assuming that \"currying\" is known <br>\nalready.)</p>\n<p>Makarius</p>",
        "id": 294071029,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660827174
    }
]