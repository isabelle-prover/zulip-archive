[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nHi List,</p>\n<p>I just discovered a bug in the code-setup of Imperative/HOL.<br>\nFor SML/OCaml/Scala, the \"code_type\" command binds the type <br>\n\"'a Heap\" to \"unit -&gt; _\".</p>\n<p>However, when generating code for a function of type \"'a Heap =&gt; _\", the<br>\ncode-generator will generate a signature of type <br>\n  \"unit -&gt; 'a -&gt; _\". <br>\nThe correct signature would be<br>\n  \"(unit -&gt; 'a) -&gt; _\".<br>\nWhen compiling the code, this results in an error (Mismatch between<br>\nstructure and signature).</p>\n<p>Adding parantheses in the code_type-command solves the problem:<br>\n  code_type Heap (SML \"(unit/ -&gt;/ _)\")</p>\n<p>I have added this fix as changeset f6d1ca0c6faf.</p>\n<p>However, conceptually, I think the code-generator's pretty-printer<br>\nshould care about the parantheses, and not the user who assumes that<br>\nwhat he specifies as code_type is actually interpreted as a type, and<br>\nnot somehow intermixed with other types.</p>",
        "id": 294243226,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660907876
    }
]