[
    {
        "content": "<p>From: Pedro Sánchez Terraf &lt;<a href=\"mailto:sterraf@famaf.unc.edu.ar\">sterraf@famaf.unc.edu.ar</a>&gt;<br>\nDear all,</p>\n<p>I've posted &lt;<a href=\"https://stackoverflow.com/q/59931542/5135870\">https://stackoverflow.com/q/59931542/5135870</a>&gt; the following <br>\nquestion on Stackoverflow and there I received the suggestion of <br>\nbringing it here. Thanks in advance for any help.</p>\n<hr>\n<p>I've been working on an Isabelle 2019 session which has grown a bit <br>\nlarge, and at some point I wasn't able to build it anymore using <br>\nisabelle build in my 8G RAM machine. Nevertheless, when I open the main <br>\ntheory file using jEdit (running isabelle jedit -d .), the session is <br>\nbuilt with no problems.</p>\n<p>/How can I tune the building process so it works as smoothly as the <br>\ngraphical interface?//<br>\n/<br>\nNext, I give some more details.</p>\n<p>The main symptom is that the Poly/ML process stalls at some point; it <br>\ndoesn't really fail but does not terminate within a reasonable amount of <br>\ntime (~20min, when a successful build would take 3' in my computer).</p>\n<p>Amidst of the development, adjusting using ML_OPTIONS to \"--minheap <br>\n5500\" was enough to solve this, but afterwards we decided to split the <br>\nsession in two (no more code added, just a change in the ROOT file) and <br>\nafter that no further adjustment solved the issue. On the other hand, a <br>\nmachine with 16G RAM builds with no problem without any further setting.</p>\n<p>Later, I checked the options used by jEdit; those relevant (I believe) <br>\nare --minheap 500  --gcthreads 0 (the last being a default). I tried <br>\nwith these with no success. I also noted that the build command has a <br>\ndistinct --eval Command_Line.tool0 (fn () =&gt; (<a href=\"http://Build.build\">Build.build</a> <br>\n\"/tmp/isabelle-pedro/buildNNNNNNNNNNNNN\")) option, where NNNNNNNNNNNNN <br>\nare some numbers.</p>\n<p>Finally, I found a post concerning some old behavior of Poly/ML that <br>\nmight be related: <br>\n<a href=\"https://polyml.inf.ed.ac.narkive.com/wb7p8r1B/heap-does-not-grow-up-to-maxheap\">https://polyml.inf.ed.ac.narkive.com/wb7p8r1B/heap-does-not-grow-up-to-maxheap</a>.</p>\n<p>PST.-<br>\n<a href=\"http://cs.famaf.unc.edu.ar/~pedro/home_en\">cs.famaf.unc.edu.ar/~pedro/home_en</a> <br>\n&lt;<a href=\"https://cs.famaf.unc.edu.ar/~pedro/home_en.html\">https://cs.famaf.unc.edu.ar/~pedro/home_en.html</a>&gt;</p>",
        "id": 294822001,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661242591
    },
    {
        "content": "<p>From: Christian Weinz &lt;<a href=\"mailto:christian.weinz@stud.uni-goettingen.de\">christian.weinz@stud.uni-goettingen.de</a>&gt;<br>\nDear Pedro,</p>\n<p>I've also had and still have ongoing problems with high memory usage of<br>\nIsabelle. The data Isabelle keeps in memory apparently has exploitable<br>\nredundancy, and transparently compressing it has solved my memory<br>\nproblem for now wherever I was able to do so. I accomplish that using<br>\nzram in linux.</p>\n<p>Picking a higher level theory in the dropdown menu in the panel<br>\n\"Theories\" has helped me reducing the memory usage, too. Note that<br>\nchanging the selection does not take effect directly. I restart<br>\nIsabelle for it to take effect.</p>\n<p>Does anybody other ways of working with Isabelle on memory constraints<br>\nmachines?</p>\n<p>Best,<br>\nChristian</p>",
        "id": 294822101,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661242645
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nAdd more memory?</p>\n<p>Isabelle is a high-end IDE and requires resources above average. As a <br>\nrule of thumb:</p>\n<p>(1) small examples: 2 cores, 8 GB<br>\n   (2) regular applications: 4 cores, 16 GB<br>\n   (3) big applications: 8 cores, 32 GB</p>\n<p>It also helps a lot to have proper SSD storage instead of old-style HD.</p>\n<p>All of this is mid-range hardware and available rather cheaply.</p>\n<p>Makarius</p>",
        "id": 294822632,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661242902
    },
    {
        "content": "<p>From: Pedro Sánchez Terraf &lt;<a href=\"mailto:sterraf@famaf.unc.edu.ar\">sterraf@famaf.unc.edu.ar</a>&gt;<br>\nThank you very much for your reply, Makarius.</p>\n<p>I only want to emphasize the point that actually the IDE works fine in <br>\nmy laptop, but the build process is the one that doesn't.</p>\n<p>So, either building the session does more things than what the IDE does <br>\nwhile verifying its theories, or there are some parameters that are <br>\noptimized when called from the IDE. That I would like to figure out.</p>\n<p>Best regards,</p>\n<p>PST.-<br>\n<a href=\"http://cs.famaf.unc.edu.ar/~pedro/home_en\">cs.famaf.unc.edu.ar/~pedro/home_en</a> <br>\n&lt;<a href=\"https://cs.famaf.unc.edu.ar/~pedro/home_en.html\">https://cs.famaf.unc.edu.ar/~pedro/home_en.html</a>&gt;<br>\nEl 4/2/20 a las 16:42, Makarius escribió:</p>",
        "id": 294822644,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661242909
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThere are many differences of PIDE processing (e.g. in Isabelle/jEdit) <br>\nvs. batch builds via \"isabelle build\". Notably, the latter also uses <br>\nmore parallelism: you may experiment with \"isabelle build -o threads=1\" <br>\nto see if it becomes more stable.</p>\n<p>Poly/ML heap management depends on many side-conditions, depending on <br>\ntotal memory and overall timing. You can add something like this in <br>\n$ISABELLE_HOME_USER/etc/settings to experiment with it:</p>\n<p>ML_OPTIONS=\"--minheap 1000 --maxheap=4000\"</p>\n<p>Both sides might require non-obvious adjustments towards the top or the <br>\nbottom, to work in such a low-memory situation.</p>\n<p>Makarius</p>",
        "id": 294822663,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661242921
    },
    {
        "content": "<p>From: Pedro Sánchez Terraf &lt;<a href=\"mailto:sterraf@famaf.unc.edu.ar\">sterraf@famaf.unc.edu.ar</a>&gt;<br>\nEl 5/2/20 a las 04:26, Makarius escribió:<br>\nThank you very much. This setting (using one thread) solved the issue. <br>\nFor two threads, I tried several combinations of heap limits but none of <br>\nthem worked. Nevertheless, it seems that the PIDE is using two threads.</p>\n<p>Best,</p>\n<p>PST.-<br>\n<a href=\"http://cs.famaf.unc.edu.ar/~pedro/home_en\">cs.famaf.unc.edu.ar/~pedro/home_en</a> <br>\n&lt;<a href=\"https://cs.famaf.unc.edu.ar/~pedro/home_en.html\">https://cs.famaf.unc.edu.ar/~pedro/home_en.html</a>&gt;</p>",
        "id": 294822807,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661242977
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nYes, both PIDE and build are using multiple threads by default, but the<br>\noverall profile of the parallel application comes out quite differently. E.g.<br>\nin PIDE proofs are only parallel in terminal positions (e.g. 'by').</p>\n<p>You can also try this:</p>\n<p>isabelle build -o parallel_proofs=0</p>\n<p>I.e. multithreading is enabled, but proofs are not forked.</p>\n<p>What is the timing output in your application of \"isabelle build\" with<br>\nthreads=1 vs. parallel_proofs=0?</p>\n<p>Makarius</p>",
        "id": 294822830,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661242988
    },
    {
        "content": "<p>From: Pedro Sánchez Terraf &lt;<a href=\"mailto:sterraf@famaf.unc.edu.ar\">sterraf@famaf.unc.edu.ar</a>&gt;<br>\nEl 6/2/20 a las 06:52, Makarius escribió:</p>\n<blockquote>\n<p>Yes, both PIDE and build are using multiple threads by default, but the<br>\noverall profile of the parallel application comes out quite differently. E.g.<br>\nin PIDE proofs are only parallel in terminal positions (e.g. 'by').</p>\n<p>You can also try this:</p>\n<p>isabelle build -o parallel_proofs=0</p>\n</blockquote>\n<p>It also worked.</p>\n<blockquote>\n<p>I.e. multithreading is enabled, but proofs are not forked.</p>\n<p>What is the timing output in your application of \"isabelle build\" with<br>\nthreads=1 vs. parallel_proofs=0?</p>\n<p>threads=1:<br>\n0:03:41 elapsed time, 0:03:36 cpu time, factor 0.98</p>\n</blockquote>\n<p>parallel_proofs=0:<br>\n0:03:02 elapsed time, 0:03:47 cpu time, factor 1.25</p>\n<p>So, this seems to be the right setting for me.</p>\n<p>PST.-<br>\n<a href=\"http://cs.famaf.unc.edu.ar/~pedro/home_en\">cs.famaf.unc.edu.ar/~pedro/home_en</a> <br>\n&lt;<a href=\"https://cs.famaf.unc.edu.ar/~pedro/home_en.html\">https://cs.famaf.unc.edu.ar/~pedro/home_en.html</a>&gt;</p>",
        "id": 294822903,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243031
    }
]