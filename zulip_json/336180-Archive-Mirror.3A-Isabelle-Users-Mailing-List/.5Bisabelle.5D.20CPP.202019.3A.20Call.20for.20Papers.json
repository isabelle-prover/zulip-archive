[
    {
        "content": "<p>From: Magnus Myreen &lt;<a href=\"mailto:myreen@chalmers.se\">myreen@chalmers.se</a>&gt;<br>\nCertified Programs and Proofs (CPP) is an international forum on<br>\ntheoretical and practical topics in all areas, including computer<br>\nscience, mathematics, and education, that consider certification as an<br>\nessential paradigm for their work. Certification here means formal,<br>\nmechanized verification of some sort, preferably with production of<br>\nindependently checkable certificates.</p>\n<p>In 2019, CPP will be coÂ­located with Principles of Programming<br>\nLanguages (POPL) in Cascais/Lisbon, Portugal.</p>\n<p>Important Dates (AoE, UTC-12h)</p>\n<p>Abstract Deadline: Wednesday, 11 October 2018<br>\n     Paper Submission Deadline: Wednesday, 18 October 2018<br>\n     Author Notification: Wednesday, 22 November 2018<br>\n     Conference dates: 14 January - 15 January 2019</p>\n<p>Topics of interest</p>\n<p>We welcome submissions in research areas related to formal<br>\ncertification of programs and proofs. The following is a suggested<br>\nlist of topics of interests to CPP. This is a non-exhaustive list and<br>\nshould be read as a guideline rather than a requirement.</p>\n<p>- certified or certifying programming, compilation, linking, OS<br>\n    kernels, runtime systems, and security monitors;</p>\n<p>- program logics, type systems, and semantics for certified code;<br>\n  - certified decision procedures, mathematical libraries, and<br>\n    mathematical theorems;</p>\n<p>- proof assistants and proof theory;<br>\n  - new languages and tools for certified programming;<br>\n  - program analysis, program verification, and proof-carrying code;<br>\n  - certified secure protocols and transactions;<br>\n  - certificates for decision procedures, including linear algebra,<br>\n    polynomial systems, SAT, SMT, and unification in algebras of<br>\n    interest;</p>\n<p>- certificates for semi-decision procedures, including equality,<br>\n    first-order logic, and higher-order unification;</p>\n<p>- certificates for program termination;<br>\n  - logics for certifying concurrent and distributed programs;<br>\n  - higher-order logics, logical systems, separation logics, and<br>\n    logics for security;</p>\n<p>- teaching mathematics and computer science with proof assistants.</p>\n<p>Submission Guidelines</p>\n<p>Papers should be submitted in PDF format through the EasyChair<br>\nsubmission page at</p>\n<p><a href=\"https://easychair.org/conferences/?conf=cpp2019\">https://easychair.org/conferences/?conf=cpp2019</a></p>\n<p>Submitted papers must be formatted following the ACM SIGPLAN<br>\nProceedings format using the acmart format with the sigplan option,<br>\nusing 10 point font for the main text, and a header for single blind<br>\nreview submission, e.g.,</p>\n<p>\\documentclass[sigplan,10pt,review]{acmart}\\settopmatter{printfolios=true,printccs=false,printacmref=false}</p>\n<p>Submitted papers should not exceed 12 pages, including tables and<br>\nfigures, but excluding bibliography. Shorter papers are welcome and<br>\nwill be given equal consideration.</p>\n<p>Submissions must be written in English and provide sufficient detail<br>\nto allow the program committee to assess the merits of the paper. They<br>\nshould begin with a succinct statement of the issues, a summary of the<br>\nmain results, and a brief explanation of their significance and<br>\nrelevance to the conference, all phrased for the<br>\nnon-specialist. Technical and formal developments directed to the<br>\nspecialist should follow. References and comparisons with related work<br>\nshould be included. Submitted papers are not allowed to have an<br>\nappendix. Papers not conforming to the above requirements concerning<br>\nformat and length may be rejected without further consideration.</p>\n<p>Whenever appropriate, the submission should come along with a formal<br>\ndevelopment, using whatever prover, e.g., Agda, Coq, Dafny, Elf, HOL,<br>\nHOL-Light, Isabelle, Lean, Matita, Mizar, NQTHM, PVS, Vampire,<br>\netc. Such formal developments must be submitted together with the<br>\npaper as auxiliary material, and will be taken into account during the<br>\nreviewing process. Please do so by including a link to your files in<br>\nthe text of your paper, or by sending a zip or tar file to the PC<br>\nchairs at <a href=\"mailto:cpp2019@easychair.org\">cpp2019@easychair.org</a> with your paper number included in the<br>\nsubject of your email.</p>\n<p>The results must be unpublished and not submitted for publication<br>\nelsewhere, including the proceedings of other published conferences or<br>\nworkshops. The PC chairs should be informed of closely related work<br>\nsubmitted to a conference or journal in advance of<br>\nsubmission. Original formal proofs of known results in mathematics or<br>\ncomputer science are welcome. One author of each accepted paper is<br>\nexpected to present it at the conference.</p>\n<p>For any questions about the formatting or submission of papers, please<br>\nconsult the PC chairs (<a href=\"mailto:cpp2019@easychair.org\">cpp2019@easychair.org</a>).</p>\n<p>Conference webpage: <a href=\"https://popl19.sigplan.org/track/CPP-2019\">https://popl19.sigplan.org/track/CPP-2019</a></p>",
        "id": 294739132,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190853
    }
]