[
    {
        "content": "<p>From: grechukbogdan &lt;<a href=\"mailto:grechukbogdan@yandex.ru\">grechukbogdan@yandex.ru</a>&gt;<br>\nDear Isabelle Users</p>\n<p>If A and B are sets, direct sum C of A and B is a set of pairs (a, b)  where a \\in A and b \\in B. <br>\nMy first question – is this direct sum defined somewhere in Isabelle?</p>\n<p>Now, in my case A is a subset of R^n and B is a subset of R^m. In this case, clearly, C is a subset of R^{n+m}. Currently, finite Cartesian product  R^n formalized as type real^'n where 'n is some finite type. Now, is it possible to say that C is a subset of real^('n+'m) ? It seems that I can add types (theory Sum_Type),  so I would imagine definition of direct sum as a function from  (real^'n,  real^'m)  to real^('n+'m) such that first n coordinates of  sum(x, y) coincides with x, and the next m coordinates - with y. Any ideas how to write down such a definition, which theories to look at, or may be suggestions how to formalize this in a different, more convenient way, would be appreciated.    </p>\n<p>Sincerely,<br>\nBogdan Grechuk</p>",
        "id": 294109363,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660836279
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\ngrechukbogdan schrieb:</p>\n<blockquote>\n<p>Dear Isabelle Users</p>\n<p>If A and B are sets, direct sum C of A and B is a set of pairs (a, b)  where a \\in A and b \\in B. <br>\nMy first question – is this direct sum defined somewhere in Isabelle?</p>\n</blockquote>\n<p>Yes. It is written \"A &lt;<em>&gt; B\". See Product_Type.thy. (Search for \"&lt;</em>&gt;\")</p>\n<blockquote>\n<p>Now, in my case A is a subset of R^n and B is a subset of R^m. In this case, clearly, C is a subset of R^{n+m}.</p>\n</blockquote>\n<p>I'm afraid not the way that these types are defined in HOL. C is only<br>\nisomorphic to R^(n+m). You can spell out the type isomorphism explicitly<br>\nor define a special product construction on finite Cartesian products.<br>\nIn either case I leave it to the experts to show you how to do it.</p>\n<p>Tobias</p>\n<blockquote>\n<p>Currently, finite Cartesian product  R^n formalized as type real^'n where 'n is some finite type. Now, is it possible to say that C is a subset of real^('n+'m) ? It seems that I can add types (theory Sum_Type),  so I would imagine definition of direct sum as a function from  (real^'n,  real^'m)  to real^('n+'m) such that first n coordinates of  sum(x, y) coincides with x, and the next m coordinates - with y. Any ideas how to write down such a definition, which theories to look at, or may be suggestions how to formalize this in a different, more convenient way, would be appreciated.    </p>\n<p>Sincerely,<br>\nBogdan Grechuk</p>\n</blockquote>",
        "id": 294109413,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660836298
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nOnce again, this formalisation of finite Cartesian products is showing itself to be unsuitable for abstract mathematics. It is only useful if you intend to work in one fixed dimension. I hope it isn't used extensively.<br>\nLarry</p>",
        "id": 294109419,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660836300
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nLawrence Paulson schrieb:</p>\n<blockquote>\n<p>Once again, this formalisation of finite Cartesian products is showing itself to be unsuitable for abstract mathematics.</p>\n</blockquote>\n<p>I'm interested: how do you model the problem in any formalism such that<br>\nA^m * B^n = A^(m+n) without resorting to an explicit isomorphism along<br>\nthe way? Unless I am mistaken, the datatypes you provide in your<br>\nformalization of ZF do not do the job either.</p>\n<blockquote>\n<p>It is only useful if you intend to work in one fixed dimension. I hope it isn't used extensively.</p>\n</blockquote>\n<p>It is. Luckily it works quite well for concrete mathematics.</p>\n<p>Tobias</p>\n<blockquote>\n<p>Larry</p>\n<p>On 28 Jun 2010, at 17:56, grechukbogdan wrote:</p>\n<blockquote>\n<p>If A and B are sets, direct sum C of A and B is a set of pairs (a, b)  where a \\in A and b \\in B. <br>\nMy first question – is this direct sum defined somewhere in Isabelle?</p>\n<p>Now, in my case A is a subset of R^n and B is a subset of R^m. In this case, clearly, C is a subset of R^{n+m}. Currently, finite Cartesian product  R^n formalized as type real^'n where 'n is some finite type. Now, is it possible to say that C is a subset of real^('n+'m) ? It seems that I can add types (theory Sum_Type),  so I would imagine definition of direct sum as a function from  (real^'n,  real^'m)  to real^('n+'m) such that first n coordinates of  sum(x, y) coincides with x, and the next m coordinates - with y. Any ideas how to write down such a definition, which theories to look at, or may be suggestions how to formalize this in a different, more convenient way, would be appreciated.    <br>\n</p>\n</blockquote>\n</blockquote>",
        "id": 294109441,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660836306
    },
    {
        "content": "<p>From: Johannes Hölzl &lt;<a href=\"mailto:hoelzl@in.tum.de\">hoelzl@in.tum.de</a>&gt;<br>\nAm Montag, den 28.06.2010, 20:56 +0400 schrieb grechukbogdan:</p>\n<blockquote>\n<p>Dear Isabelle Users</p>\n<p>If A and B are sets, direct sum C of A and B is a set of pairs (a, b)  where a \\in A and b \\in B. <br>\nMy first question – is this direct sum defined somewhere in Isabelle?</p>\n</blockquote>\n<p>This is defined in Isabelle/HOL as \"A \\&lt;times&gt; B\" or \"A &lt;*&gt;B\" (in<br>\nASCII).</p>\n<blockquote>\n<p>Now, in my case A is a subset of R^n and B is a subset of R^m. In this case, clearly, C is a subset<br>\nof R^{n+m}. Currently, finite Cartesian product  R^n formalized as type real^'n where 'n is some finite<br>\ntype. Now, is it possible to say that C is a subset of real^('n+'m) ? It seems that I can add types<br>\n(theory Sum_Type),  so I would imagine definition of direct sum as a function from  (real^'n,  real^'m)<br>\nto real^('n+'m) such that first n coordinates of  sum(x, y) coincides with x, and the next m coordinates<br>\n- with y. Any ideas how to write down such a definition, which theories to look at, or may be suggestions<br>\nhow to formalize this in a different, more convenient way, would be appreciated.    </p>\n</blockquote>\n<p>In the current _development_ version of Isabelle (unfortunately not in<br>\nIsabelle2009-2) real^'n is a euclidean space. When we add the type class<br>\ninstantiation for products of euclidean spaces:</p>\n<p>instantiation * :: (real_basis, real_basis) real_basis<br>\n...</p>\n<p>instantiation * :: (euclidean_space, euclidean_space) euclidean_space<br>\n...</p>\n<p>instantiation * :: (ordered_euclidean_space, ordered_euclidean_space) ordered_euclidean_space<br>\n...</p>\n<p>(with the appropriate definition for basis etc)</p>\n<p>This should be a very convenient way as no isomorphisms need to be<br>\nspecified to transfer between real^'n * real^'m and real^('n + 'm).<br>\nEverything including integration was updated to operate on euclidean<br>\nspaces.</p>\n<p>This is already proved in Isabelle, I will push it tomorrow.</p>\n<p>Greetings,<br>\n  Johannes</p>\n<blockquote>\n<p>Sincerely,<br>\nBogdan Grechuk</p>\n</blockquote>",
        "id": 294109527,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660836331
    },
    {
        "content": "<p>From: grechukbogdan &lt;<a href=\"mailto:grechukbogdan@yandex.ru\">grechukbogdan@yandex.ru</a>&gt;<br>\nDear Johannes</p>\n<p>I have download the last Development Snapshot from <a href=\"http://isabelle.in.tum.de/devel/\">http://isabelle.in.tum.de/devel/</a></p>\n<p>It is called Isabelle_01-Jul-2010.tar.gz</p>\n<p>( By the way, website says that \"version is built automatically every night from the repository sources.\" -- why the last version is July 1 not July 5th ?)</p>\n<p>Are your changes included in this version already?<br>\n( I see new theory Cartesian_Euclidean_Space.thy, but I do not see something like<br>\n  instantiation * :: (euclidean_space, euclidean_space) euclidean_space<br>\n)</p>\n<p>If your changes are there, how exactly can I use this?<br>\nFor example, what is now a correct formulation of the following lemma</p>\n<p>Lemma: If A :: (real^'n set) is convex, and B :: (real^'m set) is convex, then A &lt;*&gt;B is a convex set in real^('n + 'm).</p>\n<p>Will Isabelle automatically understand that if A :: (real^'n set) and B :: (real^'m set), then A &lt;*&gt;B lives in real^('n + 'm) ?</p>\n<p>Sincerely,<br>\nBogdan.</p>",
        "id": 294111690,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660837045
    },
    {
        "content": "<p>From: Johannes Hölzl &lt;<a href=\"mailto:hoelzl@in.tum.de\">hoelzl@in.tum.de</a>&gt;<br>\nI don't know why the Isabelle snapshots are not updated, however when<br>\nyou directly clone the mercurial repository<br>\n<a href=\"http://isabelle.in.tum.de/repos/isabelle\">http://isabelle.in.tum.de/repos/isabelle</a><br>\nyou get a version with the euclidean spaces.</p>\n<p>Lemma: If A :: (real^'n set) is convex, and B :: (real^'m set) is <br>\n       convex, then A &lt;*&gt;B is a convex set in real^('n + 'm).</p>\n<p>Does not work, as real^'n * real^'m = real^('n + 'm), however you can<br>\nstate:</p>\n<p>lemma<br>\n  fixes A :: \"'a::euclidean_space set\"<br>\n  fixes B :: \"'b::euclidean_space set\"<br>\n  assumes \"convex A\" and \"convex B\"<br>\n  shows \"convex (A &lt;*&gt; B)\"</p>\n<p>Of course now \"A &lt;*&gt; B\" is of type A * B, which is also in the<br>\neuclidean_space type class.</p>\n<p>Probably you need to update you theories to use euclidean space instead<br>\nof real^'n. The changes are usual very easy, rewrite \"x :: real^'n\" to<br>\n\"x :: 'n :: euclidean_space\" (or ordered_euclidean_space)</p>\n<p>\\&lt;chi&gt; _ . _   -&gt;   \\&lt;chi&gt;\\&lt;chi&gt; _ . _\n   _ $ _          -&gt;   _ $$ _</p>\n<p>The theorem names shouldn't be a problem. Sometimes you need to add the<br>\nassumption that a index is &lt; DIM('a) as the indices are now more<br>\nselected from a finite type but just natural numbers.</p>\n<p>Hope this helps!</p>\n<p>Greetings,<br>\n  Johannes</p>",
        "id": 294111703,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660837049
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nBecause that build may fail, and even if it succeeds the result may be up <br>\nto surprises.  Embarking on snapshots or raw repository versions means you <br>\nstop being a user and become an alpha/beta tester instead.  Any problems <br>\nyou encounter can be discussed on the isabelle-dev mailing list.</p>\n<p>Makarius</p>",
        "id": 294111937,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660837115
    }
]