[
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nDear list,</p>\n<p>consider the following class:</p>\n<p>class \"term\" =<br>\n  fixes<br>\n    \"consts\" :: \"'a ⇒ string set\"<br>\n  assumes<br>\n    \"consts t ⊆ {}\"</p>\n<p>(this is a stripped-down example, obviously)</p>\n<p>I thought I could write a trivial instance proof:</p>\n<p>instantiation unit :: \"term\" begin</p>\n<p>instance proof (standard, goal_cases)<br>\n  case (1 t)<br>\n  show ?case sorry<br>\nqed</p>\n<p>end</p>\n<p>But \"show ?case\" prints:</p>\n<p>Failed to refine any pending goal</p>\n<p>I'm at a loss for an explanation. It happens in Isabelle/82add6bf8a42 too.</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294710881,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661182161
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@inria.fr\">jasmin.blanchette@inria.fr</a>&gt;<br>\nHi Lars,</p>\n<blockquote>\n<p>I thought I could write a trivial instance proof:</p>\n</blockquote>\n<p>Why did you think that? The class specifies a constant and makes an assumption on that constant. If you add a definition, e.g.,</p>\n<p>definition \"consts_unit = (λu :: unit. UNIV::string set)\"</p>\n<p>then it all works out.</p>\n<p>Also, I presume by \"consts t ⊆ {}\" you meant \"{} ⊆ consts t\", but again Isabelle just won't let you continue, apparently because you haven't defined a constant that must be defined in all type classes.</p>\n<p>Cheers,</p>\n<p>Jasmin</p>",
        "id": 294710896,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661182167
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nI feel stupid now – thanks for clearing that up. I was under the<br>\nimpression that I could leave constants unspecified. Somehow I didn't<br>\nmake the connection that this could be the cause for the error.</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294710913,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661182173
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nTo be fair, Lars had me take a look at it, too, and I didn't spot the<br>\nproblem either, although, in retrospect, it is of course completely obvious.</p>\n<p>That may indicate that the error message is not ideal in this case.</p>\n<p>Manuel</p>",
        "id": 294710929,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661182180
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Lars,</p>\n<p>you <em>can</em> leave constants unspecified in type class instantiations. The problem only <br>\narises when you want to do the type class instantiation proof in Isar. It all works out in <br>\napply-style:</p>\n<p>class \"term\" = fixes \"consts\" :: \"'a ⇒ string set\"<br>\n   assumes \"{} ⊆ consts t\"<br>\ninstantiation unit :: \"term\" begin<br>\ninstance apply intro_classes apply simp done<br>\nend</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 294710941,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661182186
    }
]