[
    {
        "content": "<p>From: Abel Martin &lt;<a href=\"mailto:abel.martin314@gmail.com\">abel.martin314@gmail.com</a>&gt;<br>\nHello</p>\n<p>I am trying to define in a Isabelle theory  the property of right<br>\ncancellation  for function composition but<br>\nthere are some errors that I can't to fix.</p>\n<p>The definition I would like specify in Isabelle is the following:</p>\n<p>f : A → B has the property of right cancellation property  iff<br>\n ∀ C : (∀ g, h : B → C ) : g ◦ f = h ◦ f =⇒ g = h</p>\n<p>Is it possible? Or more precisely, is it possible to quantify over a type?</p>\n<p>Thanks in advance</p>",
        "id": 294821772,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661242485
    },
    {
        "content": "<p>From: \"Thiemann, René\" &lt;<a href=\"mailto:Rene.Thiemann@uibk.ac.at\">Rene.Thiemann@uibk.ac.at</a>&gt;<br>\nDear Martin,</p>\n<p>as far as I know, the quantification over types as your ∀ C is not expressible in Isabelle/HOL.<br>\nYou can provide a polymorphic version though where the type C is given as additional argument.</p>\n<p>definition right_cancellation :: \"('a ⇒ 'b) ⇒ 'c itself ⇒ bool\"  where<br>\n  \"right_cancellation f type_argument = (∀ g h :: 'b ⇒ 'c. g o f = h o f --&gt; g = h)” </p>\n<p>Moreover, I wondered whether right-cancellation isn’t the same as surjectivity. </p>\n<p>If f is not surjective, then it does not have the right-cancellation-property: <br>\nProof: define g and h of type B -&gt; {0,1} as follows:<br>\n  g(x) = 0<br>\n  h(x) = if x in image f then 0 else 1<br>\n  Then clearly g o f = h o f, but g != h since image f != B</p>\n<p>On the other hand, let f be surjective and g o f = h o f<br>\nand consider an arbitrary x in B. Hence, there must be some y in A such that f(y) = x.<br>\nfrom g o f = h o f conclude g(f(y)) = h(f(y)), so g(x) = h(x) and thus g = h.</p>\n<p>Best,<br>\nRené</p>",
        "id": 294821826,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661242513
    }
]