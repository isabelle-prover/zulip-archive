[
    {
        "content": "<p>From: Christoph Dittmann &lt;<a href=\"mailto:f-isabellelist@yozora.eu\">f-isabellelist@yozora.eu</a>&gt;<br>\nHi,</p>\n<p>sometimes when I prove a lemma with multiple subgoals one after the<br>\nother, the number of subgoals does not shrink and in the end there are<br>\nunsolved subgoals that I don't understand.</p>\n<p>The following is a minimal example of what happened:</p>\n<p>theory Test imports Main begin<br>\nlemma foo:<br>\n  assumes \"R = {}\"<br>\n  shows \"⋀x y. (x, y) ∈ R ⟹ x = y\" \"⋀x y. (y, x) ∈ R ⟹ (x, y) ∈ R\" proof-<br>\n  show \"⋀x y. (x, y) ∈ R ⟹ x = y\" sorry<br>\n  show \"⋀x y. (y, x) ∈ R ⟹ (x, y) ∈ R\" sorry<br>\n  (* 2 remaining subgoals at this point:</p>\n<p>1. ⋀x y. (x, y) ∈ R ⟹ (y, x) ∈ R<br>\n     2. ⋀x y. (y, x) ∈ R ⟹ (x, y) ∈ R<br>\n  *)<br>\nqed<br>\n(*<br>\nFailed to finish proof:<br>\n  goal (2 subgoals):</p>\n<p>1. ⋀x y. (x, y) ∈ R ⟹ (y, x) ∈ R<br>\n   2. ⋀x y. (y, x) ∈ R ⟹ (x, y) ∈ R<br>\n*)<br>\nend</p>\n<p>In the lemma, after positioning the cursor in jedit behind proof-, it<br>\nshows me the two subgoals I expect.  After solving these two subgoals,<br>\nthere are now still 2 goals remaining and the proof fails.</p>\n<p>The last unsolved subgoal looks to me exactly like the one I proved<br>\nexplicitly with the second show line, so I am somewhat puzzled as to why<br>\nit remains.</p>\n<p>Where did I go wrong?  Is this the expected behavior?</p>\n<p>(In case it is relevant, I work with Isabelle2015.)</p>\n<p>Thanks,<br>\nChristoph</p>",
        "id": 294648206,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165009
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nHi Christoph,</p>\n<blockquote>\n<p>Where did I go wrong?  Is this the expected behavior?</p>\n</blockquote>\n<p>the short answer: yes, this is expected behaviour.</p>\n<p>The longer answer: The statement</p>\n<p>show \"P ⟹ Q\"</p>\n<p>doesn't do what you think it does. Let's say, your goal state looks like<br>\nthis:</p>\n<ol>\n<li>P ⟹ Q</li>\n</ol>\n<p>When you prove something with \"show\", then the goal state gets<br>\n<em>resolved</em> against what you proved. This allows you e.g. to prove<br>\nsomething more general than what the subgoal says.</p>\n<p>In this particular case, you would end up with the new subgoal</p>\n<ol>\n<li>P ⟹ P</li>\n</ol>\n<p>However, you can easily avoid that behaviour. You can structure your<br>\nproof as follows:</p>\n<p>proof -<br>\n  assume assm: P<br>\n  show Q<br>\n    using assm ...<br>\nnext<br>\n  assume assm: Q<br>\n  show P<br>\n    using assm ...<br>\nqed</p>\n<p>By explicitly stating \"P\" as an assumption, the system knows – sloppily<br>\nspeaking – that it should solve the whole subgoal.</p>\n<p>The whole situation is a little bit more complex and it's going to<br>\nchange (it has already changed in the development version), but the<br>\nabove is how you would generally structure your proof.</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294648379,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165076
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nThe short answer is: Don't use \"_ ==&gt; _\" in show statements. For a<br>\nlonger explanation, see the following answer on Stackoverflow:</p>\n<p><a href=\"http://stackoverflow.com/questions/25285797/taming-meta-implication-in-isar-proofs/25442787#25442787\">http://stackoverflow.com/questions/25285797/taming-meta-implication-in-isar-proofs/25442787#25442787</a></p>\n<p>-- Lars</p>",
        "id": 294648484,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165132
    },
    {
        "content": "<p>From: Christoph Dittmann &lt;<a href=\"mailto:f-isabellelist@yozora.eu\">f-isabellelist@yozora.eu</a>&gt;<br>\nThank you and also Lars Hupel for your answers.  This list is indeed<br>\nvery helpful!</p>\n<p>I was using show statements with ==&gt; mostly because I had lots of them<br>\nfrom unfolding a locale and most of them were rather trivial one-line<br>\nproofs.  So I was looking for a way to avoid Isar style verbose proofs<br>\nin this specific case without resorting to apply scripts.</p>\n<p>Christoph</p>",
        "id": 294648533,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165150
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nWhen they are really trivial, you might also be able to solve them by<br>\ngiving a single proof method to the closing \"qed\".</p>\n<p>-- Lars</p>",
        "id": 294648550,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165156
    }
]