[
    {
        "content": "<p>From: Temur Kutsia &lt;<a href=\"mailto:kutsia@risc.jku.at\">kutsia@risc.jku.at</a>&gt;<br>\n=========================<br>\nSCSS 2020<br>\nThe 9th International Symposium on Symbolic Computation in Software Science<br>\n  -- In the era of Computational and Artificial Intelligence  --</p>\n<p>September 10-13, 2020, Gammarth, Tunisia<br>\n<a href=\"https://scss2020.doodlekit.com/\">https://scss2020.doodlekit.com/</a><br>\n=========================</p>\n<p>Overview</p>\n<hr>\n<p>Symbolic Computation is the science of computing with symbolic objects<br>\n(terms, formulae, programs, representations of algebraic objects etc.).<br>\nPowerful algorithms have been developed during the past decades for the<br>\nmajor subareas of symbolic computation: computer algebra and<br>\ncomputational logic. These algorithms and methods are successfully<br>\napplied in various fields, including software science, which covers a<br>\nbroad range of topics about software construction and analysis.</p>\n<p>Meanwhile, artificial intelligence methods and machine learning<br>\nalgorithms are widely used nowadays in various domains and, in<br>\nparticular, combined with symbolic computation. Several approaches mix<br>\nartificial intelligence and symbolic methods and tools deployed over<br>\nlarge corpora to create what is known as cognitive systems. Cognitive<br>\ncomputing focuses on building systems which interact with humans<br>\nnaturally by reasoning, aiming at learning at scale.</p>\n<p>The purpose of SCSS 2020 is to promote research on theoretical and<br>\npractical aspects of symbolic computation in software science, combined<br>\nwith modern artificial intelligence techniques.</p>\n<p>Scope</p>\n<hr>\n<p>SCSS 2020 solicits submissions on all aspects of symbolic computation<br>\nand their applications in software science, in combination with<br>\nartificial intelligence and cognitive computing techniques. The topics<br>\nof the symposium include, but are not limited to the following:</p>\n<ul>\n<li>\n<p>automated reasoning, knowledge reasoning, common-sense reasoning and<br>\nreasoning in science</p>\n</li>\n<li>\n<p>algorithm (program) synthesis and/or verification, alignment and joint<br>\nprocessing of formal, semi-formal, and informal libraries.</p>\n</li>\n<li>\n<p>formal methods for the analysis of network and system security</p>\n</li>\n<li>termination analysis and complexity analysis of algorithms (programs)</li>\n<li>extraction of specifications from algorithms (programs)</li>\n<li>\n<p>theorem proving methods and techniques, collaboration between<br>\nautomated and interactive theorem proving</p>\n</li>\n<li>\n<p>proof carrying code</p>\n</li>\n<li>generation of inductive assertion for algorithm (programs)</li>\n<li>algorithm (program) transformations</li>\n<li>combinations of linguistic/learning-based and semantic/reasoning methods</li>\n<li>\n<p>formalization and computerization of knowledge (maths, medicine,<br>\neconomy, etc.)</p>\n</li>\n<li>\n<p>methods for large-scale computer understanding of mathematics and science</p>\n</li>\n<li>\n<p>artificial intelligence, machine learning and big-data methods in<br>\ntheorem proving and mathematics</p>\n</li>\n<li>\n<p>formal verification of artificial intelligence and machine learning<br>\nalgorithms, explainable artificial intelligence, symbolic artificial<br>\nintelligence</p>\n</li>\n<li>\n<p>cognitive computing, cognitive vision, perception systems and<br>\nartificial reasoners for robotics</p>\n</li>\n<li>\n<p>component-based programming</p>\n</li>\n<li>computational origami</li>\n<li>query languages (in particular for XML documents)</li>\n<li>semantic web and cloud computing</li>\n</ul>\n<p>Important Dates</p>\n<hr>\n<p>Title and abstract due: May 8, 2020<br>\nManuscript due: May 15, 2020<br>\nAuthor notification: July 6, 2020<br>\nEarly registration: July 31, 2020<br>\nCamera ready papers: August 10, 2020<br>\nConference dates: September 10-13, 2020</p>\n<p>Invited Speakers</p>\n<hr>\n<p>Tateaki Sasaki (University of Tsukuba, Japan)<br>\nJean-Pierre Jouannaud (Ecole Normale Superieure de Paris-Saclay, France)</p>\n<p>General Chairs</p>\n<hr>\n<p>Adel Bouhoula (Sup'Com, Carthage University, Tunisia)<br>\nTetsuo Ida (Tsukuba University, Japan)</p>\n<p>Program Chair</p>\n<hr>\n<p>Temur Kutsia (Johannes Kepler University, Austria)</p>\n<p>Program Committee</p>\n<hr>\n<p>Hassan Ait-Kaci (HAK Language Technologies)<br>\nChangbo Chen (Chinese Academy of Sciences, China)<br>\nRachid Echahed (CNRS, Grenoble, France)<br>\nSeyed Hossein Haeri (UC Louvain, Belgium)<br>\nMohamed-Bécha Kaâniche (Sup’Com, Carthage University, Tunisia)<br>\nCezary Kaliszyk (University of Innsbruck, Austria)<br>\nYukiyoshi Kameyama (University of Tsukuba, Japan)<br>\nMichael Kohlhase (University of Erlangen–Nuremberg, Germany)<br>\nLaura Kovacs (Vienna University of Technology, Austria)<br>\nTemur Kutsia (Johannes Kepler University, Austria) Chair<br>\nZied Lachiri (ENIT, University of Tunis El Manar, Tunisia)<br>\nChristopher Lynch (Clarkson University, USA)<br>\nYasuhiko Minamide (Tokyo Institute of Technology, Japan)<br>\nYoshihiro Mizoguchi (Kyushu University, Japan)<br>\nJulien Narboux (Strasbourg University, France)<br>\nMichaël Rusinowitch (INRIA, France)<br>\nSofiane Tahar (Concordia University, Canada)<br>\nMateu Villaret (University of Girona, Spain)<br>\nDongming Wang (CNRS, Paris, France)</p>\n<p>Local Organization Committee</p>\n<hr>\n<p>Mohamed-Bécha Kaâniche (Sup’Com, Carthage University, Tunisia) (Chair)<br>\nFaouzi Jaidi (ESPRIT University, Tunisia) (Website Admin)<br>\nTarek Abbess (Sfax University, Tunisia)<br>\nTakoua Kefi (Kairouan University, Tunisia)<br>\nAida ben Chehida (ENIT, University of Tunis El Manar, Tunisia)<br>\nWejdane Saied (Carthage University, Tunisia)</p>\n<p>Submission</p>\n<hr>\n<p>Submission is via EasyChair:</p>\n<p><a href=\"https://easychair.org/conferences/?conf=scss2020\">https://easychair.org/conferences/?conf=scss2020</a></p>\n<p>Submissions are invited in two categories: regular research papers and<br>\ntool papers. They should be prepared using the EPTCS LaTeX Class format<br>\n(<a href=\"http://eptcs.web.cse.unsw.edu.au/eptcsstyle.zip\">http://eptcs.web.cse.unsw.edu.au/eptcsstyle.zip</a>). Regular research<br>\npapers must not exceed 12 pages, with up to 3 additional pages for<br>\ntechnical appendices. Tool papers must not exceed 6 pages. They should<br>\ninclude information about a URL from where the tool can be downloaded or<br>\naccessed on-line. Each accepted paper should be presented at the meeting<br>\nby one of its authors.</p>\n<p>SCSS 2020 Student Abstract and Poster Program</p>\n<hr>\n<p>SCSS 2020 invites submissions to the student abstract and poster<br>\nprogram. The goal of this program is to provide a forum in which<br>\nstudents can present and discuss their work during its early stages,<br>\nmeet some of their peers who have related interests, and introduce<br>\nthemselves to more senior members of the field. These papers must not<br>\nexceed 4 pages in the EPTCS LaTeX Class format<br>\n(<a href=\"http://eptcs.web.cse.unsw.edu.au/eptcsstyle.zip\">http://eptcs.web.cse.unsw.edu.au/eptcsstyle.zip</a>).</p>\n<p>Publication</p>\n<hr>\n<p>The proceedings of SCSS 2020 will be published in the Electronic<br>\nProceedings in Theoretical Computer Science (EPTCS).</p>\n<p>A special issue of Annals of Mathematics and Artificial Intelligence<br>\n(AMAI) is organized after the symposium. Submitted full-length papers<br>\nwill be refereed according to the usual standards of the journal.</p>",
        "id": 294822913,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243039
    }
]