[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nWith the new semanmtics, is there any way to get notation that works by<br>\nsubscripting letters. I have no idea how to port the following two<br>\nnotations, that I'm using quite frequently:</p>\n<p>abbreviation is_LINEAR (\"_\\&lt;^sub&gt;L\") where \"x\\&lt;^sub&gt;L == LIN_ANNOT x<br>\nLINEAR\"<br>\nabbreviation is_NON_LINEAR (\"_\\&lt;^sub&gt;N\") where \"x\\&lt;^sub&gt;N == LIN_ANNOT x<br>\nNON_LINEAR\"</p>\n<p>Any hints,<br>\n  Peter</p>",
        "id": 294247820,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660909612
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Peter,</p>\n<p>The problem should only occur if you annotate an identifier (i.e., a variable or a <br>\nconstant), but not for compound terms. If you make sure that \\&lt;^sub&gt;L does not directly <br>\nfollow an identifier, then your notation still works. For example, you can write the <br>\nfollowing:<br>\n   x \\&lt;^sub&gt;L<br>\n   (x)\\&lt;^sub&gt;L</p>\n<p>If you do not like the parentheses or the spaces, you can abuse bsub/esub as follows, but <br>\nthis is not what bsub/esub originally were meant for.</p>\n<p>abbreviation is_LINEAR (\"_\\&lt;^bsub&gt;L\\&lt;^esub&gt;\")<br>\nwhere \"x\\&lt;^bsub&gt;L\\&lt;^esub&gt; == LIN_ANNOT x LINEAR\"</p>\n<p>Hope this helps,<br>\nAndreas</p>",
        "id": 294247861,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660909630
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nThanks for this hint ... however, I chose to change my annotations to<br>\nsuperscripts, that still work as usual.</p>",
        "id": 294247884,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660909642
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nAs usual, Andreas is fully up-to-date concerning the state-of-the-art with <br>\nsub/subscript identifiers vs. notation, probably based on careful reading <br>\nof incoming changesets of the main Isabelle repository and AFP.</p>\n<p>I would give both approaches above a &gt; 50% rating.  They are not perfect, <br>\nbut not so bad.  \\&lt;^bsub&gt;..\\&lt;^esub&gt; has indeed a specific meaning for <br>\noptional term arguments in notation that depends on a \"structure\". <br>\nHOL-Algebra has many examples of its regular use.  A second use as <br>\nfall-back notation as above is OK.  In Isabelle/jEdit you won't see an <br>\nactual subscript, though.</p>\n<p>(Somehow this thread got displaced on isabelle-users, which is about <br>\nofficial Isabelle releases, not arbitrary Isabelle repository snapshots. <br>\nWe are still 3-4 weeks before any public release candidates of <br>\nIsabelle2013-1, which will be announced here.  The official launch of <br>\nIsabelle2013-1 is anticipated for early November 2013.)</p>\n<p>Makarius</p>",
        "id": 294247949,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660909673
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThat is also a way, and conforms better to the idea behind it: subscript <br>\nfor identifiers, superscript for notation.</p>\n<p>\"Works as usual\" should not be a guiding principle, just because something <br>\nworks accidentally a certain way over a certain period of time.  The <br>\nongoing homeopathic changes of Isabelle behaviour are meant to converge to <br>\nthe Right Thing eventually, hopefully without major set backs.</p>\n<p>(This detail about sub/superscripts is only relevant for the coming <br>\nIsabelle2013-1 release to emerge this Fall.)</p>\n<p>Makarius</p>",
        "id": 294247961,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660909679
    }
]