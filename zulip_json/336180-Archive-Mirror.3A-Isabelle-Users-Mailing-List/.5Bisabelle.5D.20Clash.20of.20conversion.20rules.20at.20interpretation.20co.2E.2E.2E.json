[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:lochbihl@infosun.fim.uni-passau.de\">lochbihl@infosun.fim.uni-passau.de</a>&gt;<br>\nI am trying to do multiple interpretations of the same locale with<br>\ndifferent parameters, which gives me an error message at the end of the<br>\ninterpretation proof.</p>\n<p>For example, in a theory Test, suppose we have a locale with one<br>\nparameter and no assumptions which does an inductive set definition, say</p>\n<p>locale loc =<br>\n  fixes r :: \"('a * 'a) set\"<br>\nbegin</p>\n<p>inductive_set R :: \"('a * 'a) set\"<br>\nwhere<br>\n  \"(a, b) : r ==&gt; (a, b) : R\"<br>\nend</p>\n<p>Then, I try to interpret this locale with two different (named)<br>\ninstantiations for r:</p>\n<p>interpretation i: loc[\"UNIV\"] .<br>\ninterpretation j: loc[\"{}\"] .</p>\n<p>At the . command of the second interpretation, Isabelle complains about<br>\na \"Clash of conversion rules for operator Test.loc.R\"</p>\n<p>Is there a way to make Isabelle accept both interpretations?</p>\n<p>Andreas</p>",
        "id": 294055917,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660821574
    },
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:brianh@cs.pdx.edu\">brianh@cs.pdx.edu</a>&gt;<br>\nI found that the \"Clash of conversion rules for operator\" message  <br>\noriginates in HOL/Tools/inductive_set_package.ML, and it has something  <br>\nto do with a theorem attribute for converting between predicates and  <br>\nsets.</p>\n<p>I can reproduce the same error message, without doing any  <br>\ninterpretations, by running the following commands:</p>\n<p>declare loc.Rp_R_eq [where r=UNIV, pred_set_conv]<br>\ndeclare loc.Rp_R_eq [where r=\"{}\", pred_set_conv]</p>\n<p>Looking at the code, it seems that the error is caused by having two  <br>\npred_set_conv rules for the same predicate at the same type. If you  <br>\ninstantiate r to a more specific type in one or both cases, the error  <br>\ngoes away. Unfortunately, there doesn't seem to be a way to undeclare  <br>\nthe pred_set_conv attribute, so I don't see a workaround.</p>\n<p>Apparently each locale instantiation tries to declare its own  <br>\npred_set_conv rule for R, when there really only needs to be one of  <br>\nthem. I think this should be considered a bug.</p>\n<ul>\n<li>Brian</li>\n</ul>\n<p>Quoting Andreas Lochbihler &lt;<a href=\"mailto:lochbihl@infosun.fim.uni-passau.de\">lochbihl@infosun.fim.uni-passau.de</a>&gt;:</p>",
        "id": 294055955,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660821590
    },
    {
        "content": "<p>From: Stefan Berghofer &lt;<a href=\"mailto:berghofe@in.tum.de\">berghofe@in.tum.de</a>&gt;<br>\nBrian Huffman wrote:</p>\n<blockquote>\n<p>Unfortunately, there doesn't seem to be a way to undeclare  <br>\nthe pred_set_conv attribute, so I don't see a workaround.</p>\n</blockquote>\n<p>If your theory does not depend on R being a set, a workaround would be to<br>\nuse inductive (which does not need pred_set_conv) instead of inductive_set.</p>\n<p>Greetings,<br>\nStefan</p>",
        "id": 294056599,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660821814
    }
]