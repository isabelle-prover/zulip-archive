[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nHi, I ran into the following problem, where a code generation to SML<br>\nproduces invalid SML code:</p>\n<p>theory Scratch<br>\nimports Main <br>\nbegin<br>\n<br>\ndefinition \"foo ≡ Some (Some o fst)\"<br>\n<br>\nexport_code foo checking SML <br>\n  (*** ROOT.ML:7: error: Type ('a * 'b -&gt; 'a option) option includes a<br>\nfree type variable *)</p>\n<p>When, however, unfolding the function composition, everything works<br>\nfine:</p>\n<p>definition \"bar ≡ Some (λx. Some (fst x))\"<br>\nexport_code bar checking SML<br>\n  (* No error *)</p>\n<p>What happened here? Is this a bug in the code generator, or a known<br>\nlimitation?</p>",
        "id": 294722141,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661185198
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Peter,</p>\n<p>Your feeling is right, this is an instance of the value restriction problem.</p>\n<p>SOME (fn x =&gt; ...) is a syntactic value, so the declaration</p>\n<p>val bar = SOME (fn x =&gt; ...)</p>\n<p>is valid because syntactic values may be polymorphic. Conversely,</p>\n<p>SOME (SOME o Product_Type.fst)</p>\n<p>is not a syntactic value, so ML chokes upon the polymorphism.</p>\n<p>Andreas</p>",
        "id": 294722257,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661185228
    }
]