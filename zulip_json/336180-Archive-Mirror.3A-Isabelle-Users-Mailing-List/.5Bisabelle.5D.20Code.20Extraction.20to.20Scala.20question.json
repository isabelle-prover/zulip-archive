[
    {
        "content": "<p>From: Manfred Kerber &lt;<a href=\"mailto:mnfrd.krbr@gmail.com\">mnfrd.krbr@gmail.com</a>&gt;<br>\nDear All,</p>\n<p>I use the type real in Isabelle and extract code to Scala. In an easy<br>\nexample with</p>\n<p>definition c1 :: real<br>\nwhere \"c1 = 1.2\"</p>\n<p>I get in Isabelle with value c something that I can read immediately, namely<br>\n\"6/5\" :: \"real\".</p>\n<p>However, when printing the extracted value in Scala via<br>\nprintln(c) I get something quite unreadable:</p>\n<p>Ratreal(Frct((Pos(Bit0(Bit1(One()))),Pos(Bit1(Bit0(One()))))))</p>\n<p>Is there an easy way to transform it to either 6/5 or to 1.2?</p>\n<p>Many thanks,<br>\nManfred</p>",
        "id": 294705029,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661180394
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nOn 27/01/2017 10:27, Manfred Kerber wrote:</p>\n<blockquote>\n<p>Dear All,</p>\n<p>I use the type real in Isabelle and extract code to Scala. In an easy<br>\nexample with</p>\n<p>definition c1 :: real<br>\nwhere \"c1 = 1.2\"</p>\n</blockquote>\n<p>Floating point numbers are just notation. When you look at the definition</p>\n<p>thm c1_def</p>\n<p>you'll see that 1.2 became 12/10.</p>\n<blockquote>\n<p>I get in Isabelle with value c something that I can read immediately, namely<br>\n\"6/5\" :: \"real\".</p>\n<p>However, when printing the extracted value in Scala via<br>\nprintln(c) I get something quite unreadable:</p>\n<p>Ratreal(Frct((Pos(Bit0(Bit1(One()))),Pos(Bit1(Bit0(One()))))))</p>\n</blockquote>\n<p>This is because reals are defined on top of nat and int and you inherit the <br>\ndefault binary notation. You can improve matters by importing <br>\n\"~~/src/HOL/Library/Code_Target_Int\". The Scala code now becomes</p>\n<p>def c1: Real.real =<br>\n   Real.divide_real(Real.Ratreal(Rat.of_int(Int.int_of_integer(BigInt(12)))),<br>\n                     Real.Ratreal(Rat.of_int(Int.int_of_integer(BigInt(10)))))</p>\n<p>If you are brave, you could import <br>\n\"~~/src/HOL/Library/Code_Real_Approx_By_Float\" which sets up a logicallt unsound <br>\ntranslation to floats in the target language. Unfortunately, it has not been set <br>\nup for Scala, although that should be easy to add.</p>\n<p>Tobias</p>\n<blockquote>\n<p>Is there an easy way to transform it to either 6/5 or to 1.2?</p>\n<p>Many thanks,<br>\nManfred</p>\n<p><a href=\"/user_uploads/14278/VyCaDfqUdxuk8gaEfeQxkhvd/smime.p7s\">smime.p7s</a></p>\n</blockquote>",
        "id": 294705056,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661180401
    }
]