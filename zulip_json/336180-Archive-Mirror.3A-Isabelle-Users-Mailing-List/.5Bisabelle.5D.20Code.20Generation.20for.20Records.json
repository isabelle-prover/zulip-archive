[
    {
        "content": "<p>From: Tjark Weber &lt;<a href=\"mailto:webertj@in.tum.de\">webertj@in.tum.de</a>&gt;<br>\nI noticed that the (SML/OCaml) code generator translates Isabelle/HOL<br>\nrecord types into tuple-based data types.  This works reasonably well<br>\n(and is understandable, given the internal representation of records in<br>\nIsabelle/HOL).  Still, it would be nicer if the code generator instead<br>\nused SML/OCaml records where possible.  There is no easy way to achieve<br>\nthis, is there?</p>\n<p>Tjark</p>",
        "id": 294109176,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660836226
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Tjark,</p>\n<p>you are touching a couple of issues here.</p>\n<p>The deeper reason why there is no record-specific support in the code<br>\ngenerator is that, given HOL, SML, OCaml, Haskell, the concept of<br>\nrecords is very different, prohibiting a faithful translation except on<br>\nthe foundational level (I still hope to come up with a better naming<br>\nscheme which makes the internal record identifiers less cryptic,<br>\nthough).  Maybe for SML in there is a quick-and-dirty solution using<br>\ncode_type and code_const.</p>\n<p>Hope this helps,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/sTiC-KF_HTOtE8ywF0dytucU/signature.asc\">signature.asc</a></p>",
        "id": 294109269,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660836245
    }
]