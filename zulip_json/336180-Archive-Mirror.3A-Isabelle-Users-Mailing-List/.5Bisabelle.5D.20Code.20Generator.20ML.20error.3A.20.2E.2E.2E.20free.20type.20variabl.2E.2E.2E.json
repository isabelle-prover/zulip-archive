[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt;<br>\nHi all,</p>\n<p>I'm having trouble with the code generator of Isabelle 2009 (the one<br>\ninvoked by export_code-keyword). I boiled it down to the following<br>\nexample, where I try to export<br>\na record to ML-code.<br>\nThe code is generated, and I can also write it to a file. However, ML<br>\ndoes not accept the code, it sais:<br>\n    &gt; Scratch.tree_struct_rec_ext_type includes a free type variable<br>\nFound near val </p>\n<p>What is the problem here? How to fix it?</p>\n<p>Many thanks in advance,<br>\n  Peter</p>\n<p>Attached is the theory where I get the error:</p>\n<p>theory Scratch<br>\nimports Main<br>\nbegin<br>\nrecord ('N,'L) tree_struct_rec =<br>\n  t_lab :: \"'N \\&lt;Rightarrow&gt; 'L\"        -- \"Label of a node\"<br>\n  t_chn :: \"'N \\&lt;Rightarrow&gt; 'N list\"   -- \"Children of a node\"</p>\n<p>datatype ('P,'\\&lt;Gamma&gt;,'L) ptree =<br>\n  PTNIL 'P '\\&lt;Gamma&gt; |<br>\n  PTSPAWN 'L \"('P,'\\&lt;Gamma&gt;,'L) ptree\" \"('P,'\\&lt;Gamma&gt;,'L) ptree\"</p>\n<p>datatype ('P,'\\&lt;Gamma&gt;,'L) ptree_label =<br>\n  PTLNIL 'P '\\&lt;Gamma&gt; |<br>\n  PTLSPAWN 'L</p>\n<p>fun pt_lab where<br>\n  \"pt_lab (PTNIL p \\&lt;gamma&gt;) = PTLNIL p \\&lt;gamma&gt;\" |<br>\n  \"pt_lab (PTSPAWN l _ _) = PTLSPAWN l\"</p>\n<p>fun pt_chn where<br>\n  \"pt_chn (PTNIL p \\&lt;gamma&gt;) = []\" |<br>\n  \"pt_chn (PTSPAWN l ts t) = [ts,t]\"</p>\n<p>definition \"pt_ts == \\&lt;lparr&gt; t_lab = pt_lab, t_chn = pt_chn \\&lt;rparr&gt;\"</p>\n<p>export_code pt_lab pt_chn in SML<br>\n(* Works !*)</p>\n<p>export_code pt_ts in SML<br>\n(*<br>\n*** Error: Type (('a, 'b, 'c) Scratch.ptree, ('a, 'b, 'c)<br>\nScratch.ptree_label, unit)<br>\n*** Scratch.tree_struct_rec_ext_type includes a free type variable Found<br>\nnear val<br>\n***    pt_ts :<br>\n***          (('a, 'b, 'c) Scratch.ptree, ('a, ...) Scratch.ptree_label,<br>\nunit)<br>\n***          Scratch.tree_struct_rec_ext_type<br>\n***       =<br>\n***       tree_struct_rec_ext(pt_lab)(pt_chn)(()) (line 21 of \"generated<br>\ncode\")<br>\n*** Exception- Fail \"Static errors (pass2)\" raised<br>\n*** At command \"export_code\".<br>\n*)</p>",
        "id": 294079607,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660830220
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Peter,</p>\n<p>the problem you have run into is ML's infamous value restriction (c.f.<br>\n<a href=\"http://users.cs.fiu.edu/~smithg/cop4555/valrestr.html\">http://users.cs.fiu.edu/~smithg/cop4555/valrestr.html</a>).  There are at<br>\nleast two ways to circumvent this problem:</p>\n<ul>\n<li>specialise the type to pt_ts to something monomorphic</li>\n<li>add a unit closure to pt_ts</li>\n</ul>\n<p>Then everything should work fine.</p>\n<p>Hope this helps,<br>\n    Florian</p>\n<p>Peter Lammich schrieb:<br>\n<a href=\"/user_uploads/14278/SPg306AkgN7W4F7umC_0JRNB/signature.asc\">signature.asc</a></p>",
        "id": 294079617,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660830223
    }
]