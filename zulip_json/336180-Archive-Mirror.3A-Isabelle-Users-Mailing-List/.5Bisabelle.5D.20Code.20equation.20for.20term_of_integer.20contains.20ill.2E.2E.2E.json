[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear experts on code generation,</p>\n<p>The term reconstruction setup for the integer type seems to be broken in Isabelle2013-2 <br>\nand the development version (tested with 801a72ad52d3). This makes quickcheck-narrowing <br>\nraise an exception as soon as the query contains a function variable whose domain is <br>\nrelated to the target-language numerals. If I import ~~/src/HOL/Library/Code_Target_Int, <br>\nfunctions with domain int are also affected.</p>\n<p>Here's a minimal example:</p>\n<p>theory Scratch imports \"~~/src/HOL/Library/Code_Target_Int\" begin</p>\n<p>lemma \"f = (g :: int =&gt; bool)\"<br>\nquickcheck[narrowing]</p>\n<p>*** Illegal numeral expression: illegal term,<br>\n*** in equation Code_Evaluation.term_of_integer_inst.term_of_integer (Code_Numeral.Neg ?a) <br>\n== ...</p>\n<p>I am not particularly familiar with all this term reconstruction stuff, but I found the <br>\nfollowing. In Code_Evaluation, there's a custom serialisation of term_of for integer for <br>\nthe target Eval. Narrowing, however, uses the target Haskell_Quickcheck, which is not a <br>\nsub-target of Eval. Is there just an adaptation missing?</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 294270920,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660917201
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Andreas,</p>\n<p>I interpret this as that the regular evaluation using »value [code] …«<br>\netc. is operative but Quickcheck Narrowing breaks.  I follow your<br>\nanalysis that a corresponding adaption for integer is missing for<br>\nHaskell_Quickcheck.  Never did I attempt to understand fully the rather<br>\nfancy and specialist adaption setup for Haskell_Quickcheck, but I guess<br>\nyou easily find out what to add by experimenting with a setup for<br>\nterm_of similar to that of Eval.</p>\n<p>Hope this helps,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/jSq6hVIwzbkgXs_SBjipne2i/signature.asc\">signature.asc</a></p>",
        "id": 294276420,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660918926
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Florian,</p>\n<p>The setup for Haskell_Quickcheck is indeed fragile and should be improved.<br>\nIn 3b2db6132bfd, I've added the serialisation for term_of that makes all my examples work.<br>\nIt is just as ugly as the whole serialisation setup.</p>\n<p>Andreas</p>",
        "id": 294276600,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660918992
    }
]