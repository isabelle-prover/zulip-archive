[
    {
        "content": "<p>From: \"Max W. Haslbeck\" &lt;<a href=\"mailto:max.haslbeck@gmx.de\">max.haslbeck@gmx.de</a>&gt;<br>\nHi,</p>\n<p>I have the following two theories in Isabelle/HOL with an up to date AFP-2020.</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">theory</span> <span class=\"n\">Test_Map1</span>\n\n<span class=\"kp\">imports</span>\n  <span class=\"s\">\"HOL-Library.RBT_Mapping\"</span>\n  <span class=\"n\">Containers.Containers</span>\n<span class=\"k\">begin</span>\n\n<span class=\"k\">export_code</span> <span class=\"n\">Mapping.ordered_keys</span>\n<span class=\"k\">export_code</span> <span class=\"n\">RBT_Mapping</span> <span class=\"kp\">in</span> <span class=\"n\">Haskell</span>\n\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>and</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"k\">theory</span> <span class=\"n\">Test_Map2</span>\n\n<span class=\"kp\">imports</span>\n  <span class=\"n\">Containers.Containers</span>\n  <span class=\"s\">\"HOL-Library.RBT_Mapping\"</span>\n<span class=\"k\">begin</span>\n\n<span class=\"k\">export_code</span> <span class=\"n\">Mapping.ordered_keys</span>\n<span class=\"k\">export_code</span> <span class=\"n\">RBT_Mapping</span> <span class=\"kp\">in</span> <span class=\"n\">Haskell</span>\n\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>In theory 1 <code>export_code Mapping.ordered_keys</code> fails with</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"s\">\"RBT_Mapping.Mapping\"</span> <span class=\"kp\">is</span> <span class=\"n\">not</span> <span class=\"n\">a</span> <span class=\"n\">constructor</span><span class=\"o\">,</span> <span class=\"n\">on</span> <span class=\"n\">left</span> <span class=\"n\">hand</span> <span class=\"n\">side</span> <span class=\"n\">of</span> <span class=\"n\">equation</span><span class=\"o\">,</span> <span class=\"kp\">in</span> <span class=\"kn\">theorem</span><span class=\"o\">:</span>\n<span class=\"n\">Mapping.ordered_keys</span> <span class=\"o\">(</span><span class=\"n\">RBT_Mapping.Mapping</span> <span class=\"o\">?</span><span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"err\">≡</span> <span class=\"n\">RBT.keys</span> <span class=\"o\">?</span><span class=\"n\">t</span>\n<span class=\"sx\">```.</span>\n<span class=\"sx\">In theory 2 `</span><span class=\"k\">export_code</span> <span class=\"n\">RBT_Mapping</span> <span class=\"kp\">in</span> <span class=\"n\">Haskell</span><span class=\"sx\">` fails with</span>\n</code></pre></div>\n<p>No code equations for RBT_Mapping</p>\n<div class=\"codehilite\" data-code-language=\".\"><pre><span></span><code>The user guide for Containers in AFP [1] says to import Containers.Containers last. I can fix theory 1 by adding\n</code></pre></div>\n<p>lemma [code]: \"Mapping.ordered_keys = sorted_list_of_set o Mapping.keys\"<br>\n  by (auto simp add: Mapping.ordered_keys_def)</p>\n<div class=\"codehilite\" data-code-language=\"Isabelle\"><pre><span></span><code><span class=\"n\">before</span> <span class=\"n\">the</span> <span class=\"n\">code</span> <span class=\"n\">export.</span>\n\n<span class=\"n\">So</span> <span class=\"n\">an</span> <span class=\"n\">update</span> <span class=\"n\">to</span> <span class=\"n\">Containers</span> <span class=\"kp\">in</span> <span class=\"n\">the</span> <span class=\"n\">AFP</span> <span class=\"n\">could</span> <span class=\"n\">probably</span> <span class=\"k\">fix</span> <span class=\"k\">theory</span> <span class=\"n\">1</span><span class=\"ow\">.</span>\n\n<span class=\"n\">The</span> <span class=\"n\">problem</span> <span class=\"n\">came</span> <span class=\"n\">up</span> <span class=\"n\">when</span> <span class=\"n\">I</span> <span class=\"n\">wanted</span> <span class=\"n\">to</span> <span class=\"n\">export</span> <span class=\"n\">code</span> <span class=\"kp\">in</span> <span class=\"n\">Isabelle</span><span class=\"err\">/</span><span class=\"n\">HOL</span> <span class=\"k\">using</span> <span class=\"n\">theories</span> <span class=\"k\">from</span> <span class=\"n\">IsaFoR</span> <span class=\"kp\">and</span> <span class=\"n\">the</span> <span class=\"n\">AFP.</span> <span class=\"n\">Some</span>\n<span class=\"n\">theories</span> <span class=\"kp\">in</span> <span class=\"n\">IsaFoR</span> <span class=\"kp\">and</span> <span class=\"n\">the</span> <span class=\"n\">AFP</span> <span class=\"n\">import</span> <span class=\"n\">RBT_Mapping</span> <span class=\"kp\">and</span> <span class=\"n\">I</span> <span class=\"n\">use</span> <span class=\"n\">Mapping.ordered_keys</span> <span class=\"kp\">in</span> <span class=\"n\">my</span> <span class=\"n\">theories.</span> <span class=\"n\">Therefore</span> <span class=\"n\">I</span> <span class=\"n\">ran</span>\n<span class=\"n\">into</span> <span class=\"n\">the</span> <span class=\"n\">above</span> <span class=\"n\">problem.</span>\n\n<span class=\"n\">Gruß</span>\n<span class=\"n\">Max</span>\n\n<span class=\"o\">[</span><span class=\"n\">1</span><span class=\"o\">]:</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"err\">//</span><span class=\"n\">www.isa</span><span class=\"o\">-</span><span class=\"n\">afp.org</span><span class=\"err\">/</span><span class=\"n\">browser_info</span><span class=\"err\">/</span><span class=\"n\">current</span><span class=\"err\">/</span><span class=\"n\">AFP</span><span class=\"err\">/</span><span class=\"n\">Containers</span><span class=\"err\">/</span><span class=\"n\">document.pdf</span>\n</code></pre></div>",
        "id": 294829907,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661246154
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:mail@andreas-lochbihler.de\">mail@andreas-lochbihler.de</a>&gt;<br>\nDear Max,</p>\n<p>Thanks for the report. Indeed, Containers in AFP 2020 doesn't provide an implementation <br>\nfor the ordered_keys operation. In commit <br>\n<a href=\"https://foss.heptapod.net/isa-afp/afp-devel/-/commit/d5c01e7ecb2a098ffd0212b07362e345b31510ae\">https://foss.heptapod.net/isa-afp/afp-devel/-/commit/d5c01e7ecb2a098ffd0212b07362e345b31510ae</a>,<br>\nI've now added code equations for further operations on mappings. (I didn't find the time <br>\nfor binary operations like combine and combine_with_key where it is not clear which <br>\nimplementation should be preferred.) You can probably back-port them to your copy of AFP <br>\n2020 or include them in your own theory until the next AFP release.</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 294830254,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661246286
    }
]