[
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Dominique,</p>\n<p>that is more or less all you can do at the moment.</p>\n<p>There has been a thread on the dev mailing list dealing with the issue<br>\n<a href=\"https://mailmanbroy.informatik.tu-muenchen.de/pipermail/isabelle-dev/2016-January/006552.html\">https://mailmanbroy.informatik.tu-muenchen.de/pipermail/isabelle-dev/2016-January/006552.html</a><br>\nwhich AFAIKS came to the same conclusion.</p>\n<p>Cheers,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/Mg0WfZtlkodpNi2__pQ-fo-M/signature.asc\">signature.asc</a></p>",
        "id": 294755605,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661197326
    },
    {
        "content": "<p>From: Dominique Unruh &lt;<a href=\"mailto:unruh@ut.ee\">unruh@ut.ee</a>&gt;<br>\nHello,</p>\n<p>I ran into a case where the code generation produces invalid ML code <br>\n(with the default code generator setup).</p>\n<p>The problem seems to be related to ML code for type classes which under <br>\ncertain circumstances leads to a polymorphic value (instead of a <br>\npolymorphic function) for representation of the type class. And <br>\npolymorphic values aren't really polymorphic in ML. The attached theory <br>\nshows this. (Tested with 2019-RC0)</p>\n<p>It gives an error as follows:</p>\n<p>Error: Type mismatch in type constraint.<br>\n        Value: {uniformity = uniformity_lista} : {uniformity: 'a}<br>\n        Constraint: 'a list uniformity<br>\n        Reason:<br>\n           Can't unify 'a to ('a list * 'a list) filter<br>\n              (Type variable is free in surrounding scope)<br>\n    {uniformity = uniformity_lista} : 'a list uniformity<br>\n    At (line 15 of \"generated code\")<br>\n    Exception- Fail \"Static Errors\" raised</p>\n<p>How can I change my code setup so that the code compiles? (Without <br>\nchanging the class hierarchy.)</p>\n<p>Best wishes,<br>\nDominique.<br>\n<a href=\"/user_uploads/14278/tOxF7vVcl3Hz-jOnuXr_lmwQ/Scratch.thy\">Scratch.thy</a></p>",
        "id": 294757050,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661197971
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Dominique,</p>\n<p>there are some borderline cases in code generation which do not work out<br>\nof the box indeed.  Your example involving filters is problematic since<br>\nfilters are not executable in general at all, so resolving the<br>\ndictionary issue won't help.  Do you have a less synthetic example at hand?</p>\n<p>Cheers,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/gdRQV117AJi1LpxnEs7O8wK8/signature.asc\">signature.asc</a></p>",
        "id": 294757379,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661198106
    }
]