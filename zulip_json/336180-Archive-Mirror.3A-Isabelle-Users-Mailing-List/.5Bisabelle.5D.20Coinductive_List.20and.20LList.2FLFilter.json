[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:lochbihl@ipd.info.uni-karlsruhe.de\">lochbihl@ipd.info.uni-karlsruhe.de</a>&gt;<br>\nHi all,</p>\n<p>there are two formalisations of coinductive lists in Isabelle/HOL 2009:<br>\nLibrary/Coinductive_List and Induct/LList, Induct/LFilter.</p>\n<p>When I want to use coinductive lists, which one is recommended?<br>\nAre there any libraries with additional functions for either of them <br>\navailable (with functions like zip, set, list_all2 in List.thy)?</p>\n<p>Regards,<br>\nAndreas</p>",
        "id": 294079194,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660830105
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nLList and LFilter go back to very early work by Larry Paulson from <br>\n1997/1998.  There is some add-on material in AFP/Lazy-Lists-II based on <br>\nthese theories.  All of this is a bit dated.</p>\n<p>Library/Coinductive_List is a renovated version of LList, although that is <br>\nalready some years old now.</p>\n<p>If you are serious about coinduction, you should try to port the old stuff <br>\nto make it work with Coinductive_List and submit the result to AFP. Then <br>\nwe can delete the very old versions and future users won't get confused <br>\nagain.</p>\n<p>Makarius</p>",
        "id": 294079741,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660830259
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:lochbihl@ipd.info.uni-karlsruhe.de\">lochbihl@ipd.info.uni-karlsruhe.de</a>&gt;<br>\nI am serious about coinduction. Making LList2 from the AFP work with <br>\nCoinductive_List was straightforward: I just had to change a few <br>\ncoinductive proofs that use induction rules from LList. I also tuned a <br>\nfew proofs to use the induct/coinduct method options that probably have <br>\nnot been available when LList2 was originally developed.<br>\nLarry's LFilter was a little more work, because it was purely <br>\napply-style before and relied much more on LList than LList2 did. Now, <br>\nit is (almost) completely in Isar.</p>\n<p>Since I don't think that these ports are worth an AFP entry of their <br>\nown, I have attached them, so you can decide what to do with them.</p>\n<p>Andreas<br>\n<a href=\"/user_uploads/14278/0sNx_Gb0spGupDdl3DMk4mkq/LList2.thy\">LList2.thy</a><br>\n<a href=\"/user_uploads/14278/P4JAIxuRhTC4v6wz0K3wbeO-/LFilter.thy\">LFilter.thy</a></p>",
        "id": 294080708,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660830580
    }
]