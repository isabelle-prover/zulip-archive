[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt;<br>\nSorry if I posted this question already a few month ago:</p>\n<p>Having a locale with two parameters</p>\n<p>locale A =<br>\n    fixes X :: \"'a\"<br>\n    fixes Y :: \"'a\"</p>\n<p>I want to derive a locale from that, where the type of the parameters is <br>\nconstrained, for example:<br>\n  locale B = A +<br>\n    constrains X :: \"'a list\"</p>\n<p>this will result in the error message:<br>\n*** exception TYPE raised: unify_parms: failed to unify types ?'a and 'b<br>\n*** At command \"locale\".</p>\n<p>Whereas<br>\n  locale B = A +<br>\n    assumes \"False ==&gt; X = (X::('a list))\"</p>\n<p>as well as<br>\n  locale B = A +<br>\n    constrains X :: \"'a list\"<br>\n    constrains Y :: \"'a list\"</p>\n<p>gives the expected result. Is there any reason for the first declaration <br>\nto fail ?<br>\nThe second one is obviously a \"dirty hack\", while the 3rd one can be <br>\ntedious to write down if having many fixed parameters with related types.</p>\n<p>Greeting and thanks in advance for any hints<br>\n  Peter Lammich</p>",
        "id": 294040843,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660815202
    },
    {
        "content": "<p>From: Clemens Ballarin &lt;<a href=\"mailto:ballarin@in.tum.de\">ballarin@in.tum.de</a>&gt;<br>\nOn 1 Aug 2006, at 13:57, Peter Lammich wrote:</p>\n<blockquote>\n<p>Is there any reason for the first declaration to fail ?</p>\n</blockquote>\n<p>The reason is, of course, rooted in the implementation.  Unlike <br>\nassumes, constrains elements currently don't fully participate in type <br>\ninference.  This phenomenon should disappear eventually.</p>\n<blockquote>\n<p>The second one is obviously a \"dirty hack\", while the 3rd one can be <br>\ntedious to write down if having many fixed parameters with related <br>\ntypes.</p>\n<p>locale B = A +<br>\n   constrains X :: \"'a list\"<br>\n   constrains Y :: \"'a list\"</p>\n</blockquote>\n<p>You shouldn't worry about this too much.  There are not many examples <br>\nof useful locales where parameter types are instances of another <br>\nlocale, and that do not have any additional assumptions.  <br>\n(Endomorphisms vs. Homomorphisms is one.)</p>\n<p>Clemens</p>",
        "id": 294041001,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660815269
    }
]