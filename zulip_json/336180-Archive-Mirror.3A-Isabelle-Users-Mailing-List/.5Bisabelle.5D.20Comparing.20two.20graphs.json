[
    {
        "content": "<p>From: John Munroe &lt;<a href=\"mailto:munddr@gmail.com\">munddr@gmail.com</a>&gt;<br>\nHi,</p>\n<p>I have two graphs, f :: real =&gt; (real * real) and g :: real =&gt; (real *\nreal) -- the output is simply the x and y value for the input x value.</p>\n<p>Now, if if I have a lemma \"f &lt; g\", I get an error saying</p>\n<p>\"No type arity prod :: ord\"</p>\n<p>I see that two pairs can't be compared with each other, but in my<br>\nsituation I'd like to say that one is less than another if its y<br>\n(second) value is lower. As for comparing two such graphs, then it's a<br>\nmatter of summing up all of the y (second) values and see which is<br>\nsmaller.</p>\n<p>Does anyone know of a good way of achieving this kind of comparison?</p>\n<p>Thanks a lot for your time.</p>\n<p>John</p>",
        "id": 294223812,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660898897
    },
    {
        "content": "<p>From: Johannes HÃ¶lzl &lt;<a href=\"mailto:hoelzl@in.tum.de\">hoelzl@in.tum.de</a>&gt;<br>\nAm Mittwoch, den 12.09.2012, 17:38 +0100 schrieb John Munroe:</p>\n<blockquote>\n<p>Hi,</p>\n<p>I have two graphs, f :: real =&gt; (real * real) and g :: real =&gt; (real *\nreal) -- the output is simply the x and y value for the input x value.</p>\n</blockquote>\n<blockquote>\n<p>Now, if if I have a lemma \"f &lt; g\", I get an error saying</p>\n</blockquote>\n<blockquote>\n<p>\"No type arity prod :: ord\"</p>\n</blockquote>\n<p>When you load Multivariate_Analysis you get it for free.</p>\n<p>Here the order on pairs of reals is overwritten:<br>\n (x :: real, y :: real) &lt; (a, b) &lt;-&gt; x &lt; a /\\ y &lt; b</p>\n<p>and for the function you have:</p>\n<p>f &lt; g &lt;-&gt; ALL x. f x &lt; g x</p>\n<p>If you don't want to import Multivariate_Analysis why not just comparing</p>\n<p>(snd o f) &lt; (snd o g)</p>\n<p>this compares the second components of f and g.</p>\n<blockquote>\n<p>I see that two pairs can't be compared with each other, but in my<br>\nsituation I'd like to say that one is less than another if its y<br>\n(second) value is lower. As for comparing two such graphs, then it's a<br>\nmatter of summing up all of the y (second) values and see which is<br>\nsmaller.</p>\n<p>Does anyone know of a good way of achieving this kind of comparison?</p>\n<p>Thanks a lot for your time.</p>\n<p>John<br>\n</p>\n</blockquote>",
        "id": 294223826,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660898909
    },
    {
        "content": "<p>From: John Munroe &lt;<a href=\"mailto:munddr@gmail.com\">munddr@gmail.com</a>&gt;</p>\n<blockquote>\n<p>Here the order on pairs of reals is overwritten:<br>\n (x :: real, y :: real) &lt; (a, b) &lt;-&gt; x &lt; a /\\ y &lt; b</p>\n<p>and for the function you have:</p>\n<p>f &lt; g &lt;-&gt; ALL x. f x &lt; g x</p>\n<p>If you don't want to import Multivariate_Analysis why not just comparing</p>\n<p>(snd o f) &lt; (snd o g)</p>\n<p>this compares the second components of f and g.</p>\n</blockquote>\n<p>Thanks. If my notion of &lt; compares the snd of each pair, should I<br>\nimport Multivariate_Analysis and then overwrite &lt; or should I just<br>\ndefine my own &lt; without Multivariate_Analysis?</p>\n<p>Thanks</p>\n<p>John</p>\n<blockquote>\n<blockquote>\n<p>I see that two pairs can't be compared with each other, but in my<br>\nsituation I'd like to say that one is less than another if its y<br>\n(second) value is lower. As for comparing two such graphs, then it's a<br>\nmatter of summing up all of the y (second) values and see which is<br>\nsmaller.</p>\n<p>Does anyone know of a good way of achieving this kind of comparison?</p>\n<p>Thanks a lot for your time.</p>\n<p>John<br>\n</p>\n</blockquote>\n</blockquote>",
        "id": 294224010,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660899007
    }
]