[
    {
        "content": "<p>From: Rafal Kolanski &lt;<a href=\"mailto:xs@xaph.net\">xs@xaph.net</a>&gt;<br>\nHi,</p>\n<p>I am having difficulty figuring out what the right forum is to cover<br>\nthis issue, but in 2012 people were complaining that copy-paste from the<br>\ngoals / query window does not work if you try select and then<br>\nmiddle-paste. I don't think anyone except Isabelle users really uses<br>\nJEdit anymore, so I'll try here.</p>\n<p>I've encountered people who assume that this is because \"it works in<br>\nJEdit and Makarius just overwrote the settings because he doesn't care<br>\nabout X11 throwbacks or something\". This is not the case.</p>\n<p>JEdit code instructs plugin authors to use JEditEmbeddedTextArea<br>\n(superclass: TextArea), which the JEdit plugin does correctly.<br>\nFor the main text area, JEdit uses JEditTextArea (superclass: TextArea).</p>\n<p>JEditEmbeddedTextArea uses TextAreaMouseHandler for its mouse setup.<br>\nJEditTextArea uses MouseHandler (superclass: TextAreaMouseHandler)for<br>\nits mouse setup.</p>\n<p>Now here's where it all went wrong: someone in the distant past<br>\n(pre-2012 where the svn history ends) added the mouse copy-paste<br>\nfunctionality, but only added it in MouseHandler. In fact, as it stands<br>\nTextAreaMouseHandler's mouseClicked and mouseReleased are just outdated<br>\nversions of those in MouseHandler. They are nearly identical, except for<br>\nthe copy-paste functionality and some better error checking.</p>\n<p>The attached patch updates the TextAreaMouseHandler mouseClicked and<br>\nmouseReleased actions to contain all the updated functionality of<br>\nMouseHandler, making embedded text areas behave like the main text area<br>\nfor all editing purposes.<br>\nI did leave one difference in: embedded text areas don't send out<br>\nanything on the EditBus by default. That should be up to the plugin<br>\nauthors to do.</p>\n<p>I'd like to contribute this to the JEdit repository, but there are so<br>\nmany outstanding patches and bug reports on the sourceforge page that I<br>\ndon't think there's anyone left who actually cares. Any advice?</p>\n<p>If you want to patch this yourself, you can find a version of jEdit<br>\nsources in the contrib directory:</p>\n<p>e.g. ~/.isabelle/contrib/jedit_build-20150228/contrib/jEdit-patched.tar.gz</p>\n<p>Unpack that somewhere.<br>\nGo in there  (jEdit-patched folder from inside the archive) and do:</p>\n<p>patch -p0 &lt; jedit_embeddedtextarea_mousehandler_fix.patch</p>\n<p>then:</p>\n<p>ant build</p>\n<p>That takes about 4-5 minutes the first time as it'll fetch all the sources.</p>\n<p>Don't forget to copy the resulting build/jedit.jar over the one in</p>\n<p>~/.isabelle/contrib/jedit_build-20150228/contrib/jedit-5.2.0-patched</p>\n<p>Happy copy-pasting.</p>\n<p>Rafal Kolanski<br>\n<a href=\"/user_uploads/14278/y6B9kZlPL72PpqRvULiFbW27/jedit_embeddedtextarea_mousehandler_fix.patch\">jedit_embeddedtextarea_mousehandler_fix.patch</a></p>",
        "id": 294650583,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165966
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe proper name and spelling of jEdit is \"jEdit\".  Its Sourceforge project <br>\nis here: <a href=\"http://sourceforge.net/projects/jedit\">http://sourceforge.net/projects/jedit</a></p>\n<p>There are various trackers to submit artifacts, such as \"Patches\" for <br>\nproposed changes to the main jEdit code base: <br>\n<a href=\"http://sourceforge.net/p/jedit/patches\">http://sourceforge.net/p/jedit/patches</a></p>\n<p>For example, this is what happened to my own submissions in the past few <br>\nyears: <a href=\"http://sourceforge.net/p/jedit/patches/search/?q=makarius\">http://sourceforge.net/p/jedit/patches/search/?q=makarius</a> -- it was <br>\nmostly \"closed-accepted\".  Only my very first patch was \"closed-rejected\" <br>\nfor various reasons.</p>\n<p>Discussions about jEdit development often happen right in the tracker <br>\nthreads -- all of that is copied automatically to the jedit-devel mailing <br>\nlist.  It is also possible to open threads just on the mailing list, e.g. <br>\nfor general discussions.</p>\n<p>Makarius</p>",
        "id": 294650959,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661166070
    },
    {
        "content": "<p>From: Rafal Kolanski &lt;<a href=\"mailto:xs@xaph.net\">xs@xaph.net</a>&gt;<br>\nOn 28/08/15 21:51, Makarius wrote:</p>\n<blockquote>\n<p>On Thu, 27 Aug 2015, Rafal Kolanski wrote:</p>\n<blockquote>\n<p>I am having difficulty figuring out what the right forum is to cover<br>\nthis issue, but in 2012 people were complaining that copy-paste from<br>\nthe goals / query window does not work if you try select and then<br>\nmiddle-paste. I don't think anyone except Isabelle users really uses<br>\nJEdit anymore, so I'll try here.</p>\n</blockquote>\n<p>The proper name and spelling of jEdit is \"jEdit\".  Its Sourceforge<br>\nproject is here: <a href=\"http://sourceforge.net/projects/jedit\">http://sourceforge.net/projects/jedit</a></p>\n</blockquote>\n<p>I think it got stuck after typing JEdit* class names for a week.</p>\n<blockquote>\n<p>There are various trackers to submit artifacts, such as \"Patches\" for<br>\nproposed changes to the main jEdit code base:<br>\n<a href=\"http://sourceforge.net/p/jedit/patches\">http://sourceforge.net/p/jedit/patches</a></p>\n<p>For example, this is what happened to my own submissions in the past few<br>\nyears: <a href=\"http://sourceforge.net/p/jedit/patches/search/?q=makarius\">http://sourceforge.net/p/jedit/patches/search/?q=makarius</a> -- it<br>\nwas mostly \"closed-accepted\".  Only my very first patch was<br>\n\"closed-rejected\" for various reasons.</p>\n</blockquote>\n<p>Submitted there.</p>\n<p>I still welcome comments from you on the actual content, as it affects<br>\nIsabelle plugin users mainly. No other plugin uses<br>\nJEditEmbeddedTextArea, and so it is a second-class citizen. Note how you<br>\nhave to rebind ctrl+c yourself to do copy from the output/query buffers.<br>\nAnother feature that people think is easy, but really isn't for this<br>\nreason: how nice it would be to hop over to the output/query buffer with<br>\nyour keyboard, select some text to copy and hop back.</p>\n<p>My small workaround I sent to isabelle-dev received a similar reaction<br>\nfrom you to this one: no discussion of patch content / functionality.<br>\nThere is no patch tracker to submit that to.</p>\n<p>Rafal Kolanski.</p>",
        "id": 294650988,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661166083
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Sat, 29 Aug 2015, Rafal Kolanski wrote:</p>\n<blockquote>\n<p>Submitted there.</p>\n<p>I still welcome comments from you on the actual content, as it affects<br>\nIsabelle plugin users mainly. No other plugin uses<br>\nJEditEmbeddedTextArea, and so it is a second-class citizen.</p>\n</blockquote>\n<p>I will look at it a bit later.  The jEdit guys do care about <br>\nJEditEmbeddedTextArea as a separate thing -- they've spent quite some <br>\nefforts on it in the past.</p>\n<blockquote>\n<p>My small workaround I sent to isabelle-dev received a similar reaction<br>\nfrom you to this one: no discussion of patch content / functionality.</p>\n</blockquote>\n<p>I did not look at it yet -- I am presently lagging behind 4-8 weeks <br>\nconcerning various mailing list threads.  We don't have real-time <br>\nreactivity on the mailing lists.  Things are handled eventually, and are <br>\nnormally not forgotten.</p>\n<blockquote>\n<p>There is no patch tracker to submit that to.</p>\n</blockquote>\n<p>Patch trackers usually slow down reactivity by at least a factor of two. <br>\nI experience that routinely on various projects, including jEdit.</p>\n<p>The fastest raction I've ever seen was on the Cygwin mailing list -- they <br>\nare really old-school, and reject fancy trackers outright.</p>\n<p>Makarius</p>",
        "id": 294651026,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661166101
    },
    {
        "content": "<p>From: Rafal Kolanski &lt;<a href=\"mailto:xs@xaph.net\">xs@xaph.net</a>&gt;<br>\nOn 29/08/15 07:37, Makarius wrote:</p>\n<blockquote>\n<blockquote>\n<p>Submitted there.</p>\n<p>I still welcome comments from you on the actual content, as it affects<br>\nIsabelle plugin users mainly. No other plugin uses<br>\nJEditEmbeddedTextArea, and so it is a second-class citizen.</p>\n</blockquote>\n<p>I will look at it a bit later.  The jEdit guys do care about<br>\nJEditEmbeddedTextArea as a separate thing -- they've spent quite some<br>\nefforts on it in the past.</p>\n</blockquote>\n<p>Of course. It does make perfect sense to have a separate embedded text<br>\narea, but in our case so is having the option of a middle ground that<br>\nallows the obvious (w.r.t. jEdit shortcut setup) keyboard navigation and<br>\ncopy/paste setup.</p>\n<p>For the mouse, I have made a conservative modification that should be<br>\nsafe and useful for everyone.</p>\n<p>For the keyboard, I have investigated some kind of \"if no text area in<br>\nan edit pane has focus at present, ask the dockable window manager for<br>\nif it has a focused text area we could apply the bound command to\". So<br>\nthen next-char, select-paragraph, copy etc. would work in the output<br>\nbuffer. Sadly, this approach is a total hack and has the feeling of<br>\nswimming upstream against better judgment. Hence my desire for feedback<br>\nfrom those more experienced.</p>\n<blockquote>\n<blockquote>\n<p>My small workaround I sent to isabelle-dev received a similar reaction<br>\nfrom you to this one: no discussion of patch content / functionality.</p>\n</blockquote>\n<p>I did not look at it yet -- I am presently lagging behind 4-8 weeks<br>\nconcerning various mailing list threads.  We don't have real-time<br>\nreactivity on the mailing lists.  Things are handled eventually, and are<br>\nnormally not forgotten.</p>\n</blockquote>\n<p>No worries. I apologize and understand, I just really wanted to start<br>\nsome kind of dialogue with you on this topic. We can resume this in a<br>\nwhile, but for the record, the overall larger situation is:</p>\n<p>I am instrumenting Chunk.java a bit to allow access to painting the<br>\nglyphs that jEdit already has cached for us. Because they are the<br>\nultimate source of information on chunk positioning in a text area and<br>\nalready include the necessary font substitutions, we can leverage it to<br>\npaint those same glyphs overlaid with text colors from Isabelle.</p>\n<p>In that case:</p>\n<ul>\n<li>\n<p>The code in paint_chunk_list (Rich_Text_Area) doesn't have to worry<br>\n   about fonts and font metrics anymore, only specify glyph colors.<br>\n   Since the fonts are all resolved already, the painted glyphs will<br>\n   line up perfectly with the jEdit chunk sizes in the background.</p>\n</li>\n<li>\n<p>The user_font() setup in Token_Markup doesn't need to request extra<br>\n   chunk splits based on etc/symbols.</p>\n</li>\n<li>\n<p>fewer chunks means less memory used and faster draw code<br>\n   (probably not significant)</p>\n</li>\n<li>\n<p>19*2 fewer potential entries reserved in the chunk ID for extended<br>\n   styles. As the limit is 127, that may let us have more Isabelle-based<br>\n   styles in future that are respected by jEdit's chunk creator<br>\n   (parser?)</p>\n</li>\n<li>\n<p>fonts will not need to be specified in etc/symbols at all, making my<br>\n   earlier workaround patch completely unnecessary by (hopefully)<br>\n   obviating it with correct design</p>\n</li>\n</ul>\n<p>I'm pretty sure I will have this working in a week for my own setup, as<br>\nI have a mental layout that makes me compulsively customize colors and<br>\nfonts. What I don't know is if anyone else would be interested in this<br>\nchange, in particular the creator and primary maintainer of the Isabelle<br>\nplugin.</p>\n<blockquote>\n<blockquote>\n<p>There is no patch tracker to submit that to.</p>\n</blockquote>\n<p>Patch trackers usually slow down reactivity by at least a factor of two.<br>\nI experience that routinely on various projects, including jEdit.</p>\n<p>The fastest raction I've ever seen was on the Cygwin mailing list --<br>\nthey are really old-school, and reject fancy trackers outright.</p>\n</blockquote>\n<p>Please do not think I'm suggesting we have a patch tracker! I am merely<br>\ntrying to make sure I am approaching the situation correctly. I have<br>\nbeen away from the Isabelle side of things for a while, and want to<br>\nstart making constructive contributions again.</p>\n<p>This is also why you haven't heard anything from me when Isabelle 2015<br>\nwas in its release candidate status.</p>\n<p>Though I still miss my vim input emulation, I am very impressed with<br>\nwhat you have done.</p>\n<p>The editor is still scriptable (earlier this week I implemented a \"jump<br>\nto first Isabelle error in the file\" macro, a \"set my color scheme\"<br>\nmacro, a \"what markup element does Isabelle think this is\" macro).<br>\nI was also pondering whether it would be possible to write macros in<br>\nScala, because trying to pass a closure to Isabelle code from the<br>\nBeanShell is truly a \"just don't\" moment.</p>\n<p>I'm glad to hear from you, and thank you for your time!</p>\n<p>Rafal Kolanski</p>",
        "id": 294651038,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661166107
    },
    {
        "content": "<p>From: \"Eugene W. Stark\" &lt;<a href=\"mailto:isabelle-users@starkeffect.com\">isabelle-users@starkeffect.com</a>&gt;<br>\nIf I am reading this right, then the inability to copy and middle-paste<br>\nfrom the output window did indeed annoy me for a time, but then I found<br>\nthat I could work around using CTRL-C/CTRL-V to copy and paste from the<br>\noutput window into the source code window.  This has been very handy<br>\nrecently when the SMT sledgehammer tools in Isabelle2015 claim that a<br>\nproof does not succeed, when in fact it does, if you can only copy and<br>\npaste the suggestion.</p>\n<p>I personally am not planning on rebuilding jEdit to try the patch,<br>\nbut I hope Isabelle developers will do so, as it would be nice if it<br>\nworked with middle-click as well.</p>\n<p>- Gene Stark</p>",
        "id": 294651069,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661166118
    },
    {
        "content": "<p>From: Rafal Kolanski &lt;<a href=\"mailto:xs@xaph.net\">xs@xaph.net</a>&gt;<br>\nIf you want a weaker version of this functionality right now, for<br>\nIsabelle-2015, without recompiling jEdit you can apply the attached<br>\npatch with \"git apply\" in your isabelle source folder. It won't work for<br>\nmultiple-click select (e.g. triple-click), but it's a passable bandaid<br>\nfor click-and-drag selection.</p>\n<p>I created this so my co-workers had something while I hunted for a more<br>\ncanonical solution.</p>\n<p>I Hope this helps you out for the time being.</p>\n<p>Rafal Kolanski<br>\n<a href=\"/user_uploads/14278/4nP7w6OMsw3qojB09BagaLSL/mouse-selection-workaround-in-output-query-window.patch\">mouse-selection-workaround-in-output-query-window.patch</a></p>",
        "id": 294651070,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661166119
    }
]