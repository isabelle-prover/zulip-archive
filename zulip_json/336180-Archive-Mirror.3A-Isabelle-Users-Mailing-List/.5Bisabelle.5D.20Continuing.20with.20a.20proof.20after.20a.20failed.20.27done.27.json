[
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nDear list,</p>\n<p>I'm currently working on refactoring a rather large Isar proof. In<br>\nthere, I have a small number of short 'apply' scripts. When these break,<br>\nI get \"Failed to finish proof\" as expected on 'done'. However, unlike a<br>\nfailed 'by' proof, I can't continue with the rest of the proof.</p>\n<p>Consider this small example:</p>\n<p>lemma<br>\n  assumes P Q<br>\n  shows \"P ∧ Q\"<br>\nproof<br>\n  show P<br>\n    by rule<br>\nnext<br>\n  show Q<br>\n    sorry<br>\nqed</p>\n<p>Here, the \"show Q\" part can be checked as normal. However:</p>\n<p>lemma<br>\n  assumes P Q<br>\n  shows \"P ∧ Q\"<br>\nproof<br>\n  show P<br>\n    apply rule<br>\n    done<br>\nnext<br>\n  show Q<br>\n    sorry<br>\nqed</p>\n<p>... everything after 'done' is red.</p>\n<p>(I guess this counts as a \"feature request\".)</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294680201,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661176438
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Lars,</p>\n<p>Just insert a \"sorry\" after the failing \"done\" and you can go on.</p>\n<p>Andreas</p>",
        "id": 294680256,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661176444
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nHi Andreas,</p>\n<blockquote>\n<p>Just insert a \"sorry\" after the failing \"done\" and you can go on.</p>\n</blockquote>\n<p>of course, that's a possibility, but I don't understand why 'done' and<br>\n'by' behave differently there in the first place.</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294680283,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661176456
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Lars,</p>\n<p>Neither do I understand why they behave differently. Probably only Makarius knows. The <br>\nshort forms \".\" and \"..\" also behave like done and differently from their long forms \"by <br>\nthis\" and \"by rule\". It looks like \"by\" is the outsider, because \"proof(rule) qed\" does <br>\nnot close the proof block, either.</p>\n<p>Andreas</p>",
        "id": 294680296,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661176462
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nRight, I forgot about 'qed'. This one is not as easy to work around<br>\nusing a single strategically placed 'sorry'.</p>",
        "id": 294680309,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661176469
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nAfter so many years, PIDE document editing still lacks substructural<br>\nerror-recovery.</p>\n<p>The 'by' command is based on a special trick, using<br>\nProof.future_terminal_proof: it pretends to be finished on the toplevel<br>\nand forks the actual work.</p>\n<p>The 'sorry' and '\\&lt;proof&gt;' commands always finish, imitating the same<br>\nbehaviour.</p>\n<p>All other proof commands just work sequentially on the surface.</p>\n<p>Only recently, I have started to introduce some formal source structure<br>\nfor indentation in the editor. More will come eventually, and error<br>\nhandling in continuous checking should somehow participate.</p>\n<p>Makarius</p>",
        "id": 294680315,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661176474
    }
]