[
    {
        "content": "<p>From: Christoph LANGE &lt;<a href=\"mailto:math.semantic.web@gmail.com\">math.semantic.web@gmail.com</a>&gt;<br>\nHi Tobias,</p>\n<p>2013-09-15 20:52 Tobias Nipkow:</p>\n<blockquote>\n<p>Thanks, I'll import it into List as merge_eq.</p>\n</blockquote>\n<p>let me use this occasion to ask what the general procedure is for<br>\ncontributing functionality to the library.  I said earlier that I have<br>\nsome material ready for submitting to the AFP, and I will do so within<br>\nthe next few weeks as soon as I find time.</p>\n<p>However, some of my code is not \"specialist\" functionality, but<br>\nfunctionality I would actually have expected to find in the standard<br>\nlibrary.  Please see, at<br>\n<a href=\"https://github.com/formare/auctions/tree/master/isabelle/Auction\">https://github.com/formare/auctions/tree/master/isabelle/Auction</a>, the<br>\nfiles *Utils.thy, which are named after their library counterparts.<br>\nNone of them introduce new concepts (except for the notion of a<br>\n\"trivial\" set in SetUtils), but they merely add lemmas, which I found<br>\nuseful in my work, to existing library concepts.  Some of them may be<br>\nsuitable as simp rules, but so far I have not yet gained sufficient<br>\nexperience as to what lemmas I should reasonably make simp rules.</p>\n<p>I had so far been thinking of submitting these *Utils.thy theories as a<br>\nseparate AFP submission, on which my other, actual AFP submissions would<br>\ndepend, and then suggesting that some of it may be merged into the<br>\nlibrary.  Our license is compatible anyway.</p>\n<p>But now, if there is a faster track to the library, I'll be happy to<br>\ntake it.</p>\n<p>Cheers,</p>\n<p>Christoph</p>",
        "id": 294250416,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660910511
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nIf you have a small theory of some types and/or functions, the AFP is the right<br>\nplace. Such theories can be small to be reusable. Only in exceptional cases<br>\nshould they go into Main. Manuel's function is borderline: the theory is tiny<br>\nand the functions is generic enough that I felt I would want it in List itself.</p>\n<p>Theories that are merely collections of lemmas are not suitable as separate AFP<br>\nentries. If one of the lemmas is non-trivial, it could go into Main. Your Utils<br>\ntheories however seem to consist mostly of variations and combinations of<br>\nexisting lemmas, which may well be useful in certain situations but are not<br>\nclearly \"needed\" - a library can also become difficult to use if there is too<br>\nmuch in it. However, some of your lemmas should clearly go in Main, eg</p>\n<p>\"{}\\&lt;inverse&gt; = {}\"</p>\n<p>I will look through your Utils for more such nuggets.</p>\n<p>The question of when something should become a simp lemma is delicate unless it<br>\nis so obvious as in the above example. Usually there is no way around trying it<br>\nout and seeing if many proofs break.</p>\n<p>Tobias</p>",
        "id": 294250435,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660910520
    }
]