[
    {
        "content": "<p>From: Thomas Genet &lt;<a href=\"mailto:thomas.genet@irisa.fr\">thomas.genet@irisa.fr</a>&gt;<br>\nDear all,</p>\n<p>Is there any way to perform step by step simplification of an expression <br>\nin a lemma? This is for teaching purposes.</p>\n<p>For instance, if I define:</p>\n<p>fun member:: \"'a =&gt; 'a list =&gt; bool\"<br>\nwhere<br>\n\"member e [] = False\" |<br>\n\"member e (x#xs) = (if e=x then True else (member e xs))\"</p>\n<p>I would like to show:</p>\n<p>lemma \"member (2::nat) [1,2,3] = True\"</p>\n<p>by applying the equations of member.simps step by step, and see the goal <br>\nevoluate as follows</p>\n<p>apply (???)<br>\n(if 2=1 then True else (member 2 [2,3])) = True</p>\n<p>apply (???)<br>\n(member 2 [2,3]) = True</p>\n<p>apply (???)<br>\n(if 2=2 then True else (member 2 [3])) = True</p>\n<p>apply (???)<br>\nTrue = True</p>\n<p>Is this possible? For the moment, I am using:</p>\n<p>using [[simp_trace=true]]<br>\napply auto</p>\n<p>that is already nice but a little to much verbose for my purpose... and <br>\nif I am right tweaking simp_trace_depth_limit will not help me.</p>\n<p>Thanks in advance,</p>\n<p>Thomas</p>",
        "id": 294654935,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661167652
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nlemma \"member (2::nat) [1,2,3] = True\"<br>\n  apply (rewrite member.simps)<br>\n  apply (simp only: semiring_norm)<br>\n  apply (rewrite member.simps)<br>\n  apply (simp only: semiring_norm)<br>\n  done</p>\n<p>The \"rewrite\" proof method is from \"~~/src/HOL/Library/Rewrite\". You<br>\ncould also use \"subst\" instead. Both perform a single rewrite step, but<br>\nrewrite allows for better control where to rewrite (which isn't needed<br>\nhere).</p>\n<p>\"semiring_norm\" refers to a set of theorems concerned with the<br>\nsimplification of arithmetic expressions on numerals.</p>\n<p>I found it by searching for theorems of the form:</p>\n<p>\"numeral _ = numeral _ &lt;-&gt; _ = _\"</p>\n<p>Note that this isn't really \"step by step simplification\", as the<br>\nsimplification of arithmetic expressions takes more then a single step.</p>\n<p>Best regards,<br>\n  Lars</p>",
        "id": 294654950,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661167658
    },
    {
        "content": "<p>From: Thomas Genet &lt;<a href=\"mailto:thomas.genet@irisa.fr\">thomas.genet@irisa.fr</a>&gt;<br>\nLe 16/09/2015 16:38, Lars Noschinski a Ã©crit :</p>\n<blockquote>\n<p>lemma \"member (2::nat) [1,2,3] = True\"<br>\n   apply (rewrite member.simps)<br>\n   apply (simp only: semiring_norm)<br>\n   apply (rewrite member.simps)<br>\n   apply (simp only: semiring_norm)<br>\n   done</p>\n<p>The \"rewrite\" proof method is from \"~~/src/HOL/Library/Rewrite\". You<br>\ncould also use \"subst\" instead. Both perform a single rewrite step, but<br>\nrewrite allows for better control where to rewrite (which isn't needed<br>\nhere).</p>\n</blockquote>\n<p>Great!<br>\nThe rewrite proof method does not seem to be part of Isabelle2014 that I <br>\nuse with my students, but subst is! I'll get by with it.</p>\n<blockquote>\n<p>Note that this isn't really \"step by step simplification\", as the<br>\nsimplification of arithmetic expressions takes more then a single step.</p>\n</blockquote>\n<p>Yes but this is exactly what I want to highlight.</p>\n<p>Thank you very much, again.</p>\n<p>Thomas</p>",
        "id": 294655067,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661167689
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nOn 16.09.2015 17:24, Thomas Genet wrote:</p>\n<blockquote>\n<p>The rewrite proof method does not seem to be part of Isabelle2014 that I<br>\nuse with my students, but subst is! I'll get by with it.</p>\n</blockquote>\n<p>Indeed, \"rewrite\" is only part of Isabelle since 2015.</p>\n<blockquote>\n<blockquote>\n<p>Note that this isn't really \"step by step simplification\", as the<br>\nsimplification of arithmetic expressions takes more then a single step.</p>\n</blockquote>\n<p>Yes but this is exactly what I want to highlight.</p>\n</blockquote>\n<p>I guessed so ;)</p>\n<p>-- Lars</p>",
        "id": 294655090,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661167701
    }
]