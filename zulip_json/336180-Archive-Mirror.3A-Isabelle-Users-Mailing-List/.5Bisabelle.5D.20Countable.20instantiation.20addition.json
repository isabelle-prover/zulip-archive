[
    {
        "content": "<p>From: Mathieu Giorgino &lt;<a href=\"mailto:mathieu.giorgino@irit.fr\">mathieu.giorgino@irit.fr</a>&gt;<br>\nHi all,</p>\n<p>I have written a little ML library allowing to automatically prove, in most <br>\ncases, instantiations of types (typedefs, records and datatypes) as countable <br>\n(see ~~/src/HOL/Library/Countable). The style of the library is still a little <br>\nrough but I think it could be a nice addition to the Isabelle Library with <br>\nsome more work, mostly for Imperative_HOL (~~/src/HOL/Imperative_HOL) which <br>\ncan only store values of countable types in its heap.</p>\n<p>However, as Lukas Bulwhan said to me, improving it and integrating it in <br>\nIsabelle while nobody use it would certainly be a lost of time.</p>\n<p>So here is my question: would anybody be interested in this addition ?</p>\n<p>I attach this library with a theory containing tests/examples.</p>\n<p>Anyway, if you have some advices for improving it, they would be welcome.</p>\n<p>Regards,</p>\n<p>Mathieu Giorgino<br>\n<a href=\"/user_uploads/14278/FjIcTN17rD8p14UepOqjjSKa/Countable.ML\">Countable.ML</a><br>\n<a href=\"/user_uploads/14278/pVZ6IgUbZRl4w3AIfbb2ixb9/Countable_Examples.thy\">Countable_Examples.thy</a></p>",
        "id": 294139303,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845299
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt;<br>\nThis is definitely a useful tool for ImperativeHOL ... One could <br>\nprobably integrate<br>\nit into the datatype package, such that datatypes automatically become <br>\ncountable (like Haskell infers some typeclasses automatically (on demand))</p>\n<p>Peter</p>\n<p>Mathieu Giorgino schrieb:</p>",
        "id": 294139321,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845304
    }
]