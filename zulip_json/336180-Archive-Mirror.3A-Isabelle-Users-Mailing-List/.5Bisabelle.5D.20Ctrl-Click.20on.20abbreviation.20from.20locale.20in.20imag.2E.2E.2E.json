[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear Makarius,</p>\n<p>I noticed that when I open a locale that has been defined in the image of the session and <br>\nCtrl-Click on an identifer which refers to an abbreviation in that locale, then <br>\nIsabelle/jEdit jumps to the begin of the context block. I would have expected that it <br>\njumps to the declaration of the abbreviation as it does for definitions. Here's a MWE for <br>\nIsabelle2013-1:</p>\n<p>theory Scratch imports Main begin<br>\n(<em>1</em>)context partial_function_definitions begin<br>\nterm \"fixp_fun\"<br>\nend<br>\nend</p>\n<p>Ctrl-Click on fixp_fun jumps to (<em>1</em>), but I would prefer line 130 of Partial_Function.thy.</p>\n<p>Andreas</p>",
        "id": 294262142,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914765
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThis is a general shortcoming due to the way how formal entities and their <br>\npositions are managed internally.  I have been aware of it when I <br>\nintroduced the concept some years ago, even before a usable Prover IDE <br>\nfront-end was available. Similar inconveniences happen when declarations <br>\nand attributed fact expressions are processed in various situations of <br>\nlocal context.</p>\n<p>Further refinement of this area needs to be postponed until more serious <br>\nproblems are solved.</p>\n<p>You are mentioning Isabelle2013-1 above.  Can you also give quick try to <br>\n<a href=\"http://isabelle.in.tum.de/website-Isabelle2013-2-RC3/\">http://isabelle.in.tum.de/website-Isabelle2013-2-RC3/</a> ?  There are at <br>\nleast 24h more time, before I consider making the final snapshot for <br>\nIsabelle2013-2.</p>\n<p>Isabelle2013-1 did not work out so well, due to too few people putting <br>\nhard measures of testing on it.  You are the expert on getting to the <br>\nlimits of what is possible and what not ...</p>\n<p>Makarius</p>",
        "id": 294262153,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914770
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear Makarius,</p>\n<blockquote>\n<p>You are mentioning Isabelle2013-1 above.  Can you also give quick try to<br>\n<a href=\"http://isabelle.in.tum.de/website-Isabelle2013-2-RC3/\">http://isabelle.in.tum.de/website-Isabelle2013-2-RC3/</a> ?  There are at least 24h more time,<br>\nbefore I consider making the final snapshot for Isabelle2013-2.<br>\nAt the moment, I am hooked on the repository version, I have simply checked that the same <br>\nbehaviour also occurs with Isabelle2013-1. But I'll see whether I find some time tomorrow <br>\nto give it a try.</p>\n</blockquote>\n<blockquote>\n<p>Isabelle2013-1 did not work out so well, due to too few people putting hard measures of<br>\ntesting on it.<br>\nWell, I did test Isabelle2013-1-RC* over several weeks, but mostly ProofGeneral.</p>\n</blockquote>\n<blockquote>\n<p>You are the expert on getting to the limits of what is possible and what not ...<br>\nWell, but I only hit the limits during my normal work; a quick check usually does not take <br>\nme there.</p>\n</blockquote>\n<p>Andreas</p>",
        "id": 294262253,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914807
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThere were various changes for Isabelle2013-2 that affect interaction and <br>\nprocess management in general: TTY, Proof General, PIDE document editing. <br>\nSo it is important to see if it still works for you.</p>\n<p>Makarius</p>",
        "id": 294262271,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914814
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear Makarius,</p>\n<p>I quickly testes Isabelle2013-2-RC3 with XEmacs and ProofGeneral 3.7.1.1 and in terms of <br>\nUI, everything seems to work as good as it did before (I am already used to the problem <br>\nthat interruptions sometimes get PG out of sync with Isabelle and I have to retract the <br>\ntheory or restart Isabelle, but this does not seem to happen more often than with <br>\nIsabelle2013).</p>\n<p>However, something else no longer works in Isabelle2013-2-RC3 although it worked in <br>\nIsabelle2013-1. I have written a small script that compiles generated code and executes it <br>\nto test whether my code generator setup works. So far, I used the following:</p>\n<p>ML {*<br>\nfun using_master_directory thy p =<br>\n   p<br>\n   |&gt; Path.explode<br>\n   |&gt; Path.append (Thy_Load.master_directory thy)<br>\n   |&gt; Path.append (File.pwd ())<br>\n   |&gt; Path.implode</p>\n<p>fun compile thy script_name params =<br>\n   let<br>\n     val script = using_master_directory thy script_name;<br>\n     val (output, exit) = Isabelle_System.bash_output (script ^ \" \" ^ params)<br>\n   in<br>\n     if exit = 0 then () else<br>\n       error (\"Compile test failed for \" ^ script_name ^ \" and \" ^ params ^<br>\n              \".\\nreturn code: \" ^ Int.toString exit ^ \"\\noutput:\\n\" ^ output)<br>\n   end</p>\n<p>fun run thy program expected =<br>\n   let<br>\n     val prog = \"cd \" ^ using_master_directory thy \".\" ^ \"; \" ^ program<br>\n     val (output, exit) = Isabelle_System.bash_output prog<br>\n   in<br>\n     if exit = 0 andalso output = expected then () else<br>\n       error (\"Execution failed for \" ^ program ^ \"\\nreturn code: \" ^ Int.toString exit ^<br>\n              \"\\nexpected output:\\n\" ^ expected ^ \"\\nactual output:\\n\" ^ output)<br>\n   end<br>\n*}</p>\n<p>export_code run_hello_world same in SML file \"SML/hello_world.ML\"<br>\nML {*<br>\n   compile @{theory} \"SML/build.sh\" \"SML/hello_world StdIO_Ex.run_hello_world\";<br>\n   run @{theory} \"SML/hello_world\" \"Hello world!\\n\";<br>\n*}</p>\n<p>where the script SML/build.sh looks as follows (it creates a test driver for the exported <br>\ncode, compiles it with polyml and cc to produce a stand-alone executable, such that the <br>\nrun function can then execute it.</p>\n<p>#! /bin/bash<br>\nPOLYHOME=~/.isabelle/contrib/polyml-5.5.0-3/x86_64-linux/<br>\nPOLYLIB=${POLYHOME}</p>\n<p>BUILD=$1_build.ML<br>\ncp $1.ML $BUILD<br>\necho \"PolyML.export (\\\"$1\\\", $2);\" &gt;&gt; $BUILD<br>\ncat $BUILD | $POLYHOME/polyml<br>\nret_code=$?<br>\nif [ ${ret_code} == 0 ]; then<br>\n   LD_RUN_PATH=${POLYLIB}:${LD_RUN_PATH} cc -ggdb -o $1 -L${POLYLIB} -lpolymain -lpolyml $1.o<br>\n   ret_code=$?<br>\nfi<br>\nrm $BUILD $1.o<br>\nexit ${ret_code}</p>\n<p>In Isabelle2013-1, this worked fine, but in Isabelle2013-2-RC3, I always get a return code <br>\nof 1 (instead of 0) form <a href=\"http://build.sh\">build.sh</a> even though it returns 0 when I execute it from my <br>\ncommand line shell. Do you know what goes wrong here and what I have to adapt?</p>\n<p>Andreas</p>",
        "id": 294262425,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914861
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Thu, 5 Dec 2013, Andreas Lochbihler wrote:</p>\n<blockquote>\n<p>However, something else no longer works in Isabelle2013-2-RC3 although it <br>\nworked in Isabelle2013-1. I have written a small script that compiles <br>\ngenerated code and executes it to test whether my code generator setup works. <br>\nSo far, I used the following:</p>\n<p>ML {*<br>\nfun using_master_directory thy p =<br>\n p<br>\n |&gt; Path.explode<br>\n |&gt; Path.append (Thy_Load.master_directory thy)<br>\n |&gt; Path.append (File.pwd ())<br>\n |&gt; Path.implode</p>\n<p>fun compile thy script_name params =<br>\n let<br>\n   val script = using_master_directory thy script_name;<br>\n   val (output, exit) = Isabelle_System.bash_output (script ^ \" \" ^ params)<br>\n in<br>\n   if exit = 0 then () else<br>\n     error (\"Compile test failed for \" ^ script_name ^ \" and \" ^ params ^<br>\n            \".\\nreturn code: \" ^ Int.toString exit ^ \"\\noutput:\\n\" ^ output)<br>\n end</p>\n<p>fun run thy program expected =<br>\n let<br>\n   val prog = \"cd \" ^ using_master_directory thy \".\" ^ \"; \" ^ program<br>\n   val (output, exit) = Isabelle_System.bash_output prog<br>\n in<br>\n   if exit = 0 andalso output = expected then () else<br>\n     error (\"Execution failed for \" ^ program ^ \"\\nreturn code: \" ^ <br>\nInt.toString exit ^<br>\n            \"\\nexpected output:\\n\" ^ expected ^ \"\\nactual output:\\n\" ^ <br>\noutput)<br>\n end<br>\n*}</p>\n<p>export_code run_hello_world same in SML file \"SML/hello_world.ML\"<br>\nML {*<br>\n compile @{theory} \"SML/build.sh\" \"SML/hello_world <br>\nStdIO_Ex.run_hello_world\";<br>\n run @{theory} \"SML/hello_world\" \"Hello world!\\n\";<br>\n*}</p>\n</blockquote>\n<p>There seem to be some parts missing to run the example, e.g. <br>\nrun_hello_world.  Do I need this?</p>\n<blockquote>\n<p>where the script SML/build.sh looks as follows (it creates a test driver for <br>\nthe exported code, compiles it with polyml and cc to produce a stand-alone <br>\nexecutable, such that the run function can then execute it.</p>\n<p>#! /bin/bash<br>\nPOLYHOME=~/.isabelle/contrib/polyml-5.5.0-3/x86_64-linux/<br>\nPOLYLIB=${POLYHOME}</p>\n<p>BUILD=$1_build.ML<br>\ncp $1.ML $BUILD<br>\necho \"PolyML.export (\\\"$1\\\", $2);\" &gt;&gt; $BUILD<br>\ncat $BUILD | $POLYHOME/polyml<br>\nret_code=$?<br>\nif [ ${ret_code} == 0 ]; then<br>\n LD_RUN_PATH=${POLYLIB}:${LD_RUN_PATH} cc -ggdb -o $1 -L${POLYLIB} <br>\n-lpolymain -lpolyml $1.o<br>\n ret_code=$?<br>\nfi<br>\nrm $BUILD $1.o<br>\nexit ${ret_code}</p>\n<p>In Isabelle2013-1, this worked fine, but in Isabelle2013-2-RC3, I always <br>\nget a return code of 1 (instead of 0) form <a href=\"http://build.sh\">build.sh</a> even though it <br>\nreturns 0 when I execute it from my command line shell. Do you know what <br>\ngoes wrong here and what I have to adapt?</p>\n</blockquote>\n<p>The script makes many assumptions about the particular operating system <br>\nenvironment.  I did not manage to run it myself yet.</p>\n<p>Maybe there is just some confusion about LD_RUN_PATH vs. LD_LIBRARY_PATH, <br>\nwhich is changed when the Isabelle process is run. With \"set -x\" in the <br>\nscript you should see in the output what actually fails.</p>\n<p>Depending on $ISABELLE_HOME_USER/etc/settings you may get different <br>\nPoly/ML versions, also x86 vs. x86_64, that might cause a conflict with <br>\nthe one used above for batch compilation.  Note that official releases <br>\nhave disjoint $ISABELLE_HOME_USER directories, so there could be some of <br>\nyour settings missing.</p>\n<p>Looking also at the history diff of Isabelle2013-1 vs. Isabelle2013-2-RC3, <br>\nthe only change is related to shell command invocation is this: <br>\n<a href=\"https://bitbucket.org/isabelle_project/isabelle-release/commits/d71e7908eec3\">https://bitbucket.org/isabelle_project/isabelle-release/commits/d71e7908eec3</a> <br>\nIt should only affect the signalling, though, not any return codes.</p>\n<p>Makarius</p>",
        "id": 294262443,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914869
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nAfter some more tinkering with the script, it somehow works for me with <br>\npolyml-5.5.0-3, using the following in $ISABELLE_HOME_USER/etc/settings:</p>\n<p>ML_PLATFORM=x86_64-linux<br>\nML_HOME=\"$HOME/.isabelle/contrib/polyml-5.5.0-3/$ML_PLATFORM\"<br>\nML_SYSTEM=polyml-5.5.0<br>\nML_OPTIONS=\"-H 1000 --gcthreads 4\"<br>\nML_SOURCES=\"$ML_HOME/../src\"</p>\n<p>I've run the <a href=\"http://build.sh\">build.sh</a> either via \"isabelle env ...\" in the shell or via<br>\nML {* Isabelle_System.bash ...*}, which should provide the same process <br>\nenvironment in both situations.</p>\n<p>Note that David Matthews changed the ways of Poly/ML batch compilation in <br>\nPoly/ML 5.5.1, which is bundled with Isabelle2013-1 and Isabelle2013-2 <br>\n(uniformly for all release candidates).  The new polyc script might <br>\nactually help to make this more robust.</p>\n<p>For now, I merely need a confirmation that the issues is just one of local <br>\nsettings, not due to any change in the long chain of release candidates.</p>\n<p>Makarius<br>\n<a href=\"/user_uploads/14278/CEYz03-vuRvx8v6BxsZu6jeu/build.sh\">build.sh</a></p>",
        "id": 294262454,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914875
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Makarius,</p>\n<blockquote>\n<p>There seem to be some parts missing to run the example, e.g. run_hello_world.  Do I need<br>\nthis?<br>\nNo, I just sent you the (partial) source code to see whether you have a quick idea what <br>\nmight be going wrong. A fully working example would have been a rather large attachment.</p>\n</blockquote>\n<blockquote>\n<p>The script makes many assumptions about the particular operating system environment.  I<br>\ndid not manage to run it myself yet.<br>\nI know that it is just a crude hack, but I have not yet had the time to develop an <br>\ninteroperable, proper solution. It would be great if Isabelle had some support to actually <br>\ncompile and execute generated code. \"export_code ... checking SML Haskell Scala OCaml\" is <br>\nalready great, but it checks only syntactic correctness of the generated code.</p>\n</blockquote>\n<p>I will keep on refining my attempt until some day it is maybe mature enough to be usable <br>\nby others, too.</p>\n<blockquote>\n<p>Maybe there is just some confusion about LD_RUN_PATH vs. LD_LIBRARY_PATH, which is changed<br>\nwhen the Isabelle process is run. With \"set -x\" in the script you should see in the output<br>\nwhat actually fails.<br>\nThanks for the hint with \"set -x\". That made me realise that the build script expects to <br>\nbe run in the directory of the theory, but the function compile did not ensure this. <br>\nApparently, I had started the Isabelle sessions from different directories and that caused <br>\nthe difference between Isabelle2013-1 and Isabelle2013-2-RC3.</p>\n</blockquote>\n<p>Andreas</p>",
        "id": 294262464,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914881
    }
]