[
    {
        "content": "<p>From: Daniel Kirchner &lt;<a href=\"mailto:daniel@ekpyron.org\">daniel@ekpyron.org</a>&gt;<br>\nDear Isabelle mailing list,</p>\n<p>Is there a reason why the ML function \"Syntax_Phases.parsetree_to_ast\" is not <br>\nexposed as public API?</p>\n<p>I haven't seen another way to translate a parse tree to an AST or to further <br>\nprocess a parse tree in any way using the ML API for that matter. It looks <br>\nlike the exposed API allows to generate a parse tree, but I haven't seen a way <br>\nto continue from there. Currently I work around that problem by just copying <br>\n\"Syntax_Phases.parsetree_to_ast\", but that's of course not particularly nice. <br>\nOr am I missing another way to do this?</p>\n<p>To provide some background for the question:</p>\n<p>I'm currently working on implementing a custom parser for inner syntax packed <br>\nin string constants for implementing an embedded object logic with a syntactic <br>\nstructure that cannot be parsed otherwise (e.g. single letter identifiers with <br>\nno whitespace delimiters, etc., requiring a customized parsing process). The <br>\nidea is to end up with a syntax like \" ⊨ ''&lt;formula of embedded logic&gt;'' \". <br>\nThis is already working quite well, basically using \"Syntax.tokenize -&gt; <br>\nSyntax.parse -&gt; Syntax_Phases.parsetree_to_ast\" with some custom adjustments <br>\nbetween the steps, but unfortunately \"Syntax_Phases.parsetree_to_ast\" seems to <br>\nbe private to \"Syntax_Phases\" at the moment.</p>\n<p>On a related note: packing formulas in custom syntax plus a string constant is <br>\nthe only way to prevent the parsing process from trying to parse children first <br>\nand to be able to intervene on string or token level using a <br>\n\"parse_ast_translation\", right? The otherwise very great tutorial at https://<br>\n<a href=\"http://nms.kcl.ac.uk/christian.urban/Cookbook/\">nms.kcl.ac.uk/christian.urban/Cookbook/</a> is unfortunately still lacking <br>\ninformation on parse translations and generally on intervening on the inner <br>\nsyntax parsing process - in fact I'm considering to contribute to it once my <br>\nown project is done.</p>\n<p>Best wishes,<br>\nDaniel Kirchner<br>\n<a href=\"/user_uploads/14278/NppAkH3l_3Inf6yMnsbvcFXG/signature.asc\">signature.asc</a></p>",
        "id": 294763548,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661200800
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI've seen this and was somewhat worried about it, because it means that<br>\nI have again explain more things about how Isabelle really works.</p>\n<p>People who prefer a non-canonical view on Isabelle are free to do that,<br>\nbut I will not support it.</p>\n<p>Makarius</p>",
        "id": 294763731,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661200886
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 26/09/2019 15:58, Daniel Kirchner wrote:</p>\n<blockquote>\n<p>Is there a reason why the ML function \"Syntax_Phases.parsetree_to_ast\" is not <br>\nexposed as public API?</p>\n</blockquote>\n<p>Usually to prevent violation of implicit structural assumptions about<br>\nthe system. Note that many of these modules are more open than they<br>\nshould. Low-level tinkering with \"syntax phases\" is unlikely to work out<br>\nproperly -- now and in the longer run.</p>\n<p>It requires very careful study of the overall situation to figure out if<br>\npreviously unintended applications of certain modules can be made official.</p>\n<blockquote>\n<p>I'm currently working on implementing a custom parser for inner syntax packed <br>\nin string constants for implementing an embedded object logic with a syntactic <br>\nstructure that cannot be parsed otherwise (e.g. single letter identifiers with <br>\nno whitespace delimiters, etc., requiring a customized parsing process). The <br>\nidea is to end up with a syntax like \" ⊨ ''&lt;formula of embedded logic&gt;'' \". <br>\nThis is already working quite well, basically using \"Syntax.tokenize -&gt; <br>\nSyntax.parse -&gt; Syntax_Phases.parsetree_to_ast\" with some custom adjustments <br>\nbetween the steps, but unfortunately \"Syntax_Phases.parsetree_to_ast\" seems to <br>\nbe private to \"Syntax_Phases\" at the moment.</p>\n</blockquote>\n<p>The standard way to embed sublanguages is via cartouches, e.g. see<br>\nIsabelle2019/HOL/ex/Cartouche_Examples.thy for some experiments and<br>\nexamples.</p>\n<p>This does not solve the problem of imitation the Isabelle term language.<br>\nAt some point there might be more official ways to do that, e.g.<br>\nsomething like antiquotations with control symbol and cartouch within terms.</p>\n<blockquote>\n<p>The otherwise very great tutorial at https://<br>\n<a href=\"http://nms.kcl.ac.uk/christian.urban/Cookbook/\">nms.kcl.ac.uk/christian.urban/Cookbook/</a> is unfortunately still lacking <br>\ninformation on parse translations and generally on intervening on the inner <br>\nsyntax parsing process - in fact I'm considering to contribute to it once my <br>\nown project is done.</p>\n</blockquote>\n<p>That document is \"fan-fiction\". In its early years, I tried to<br>\ncontribute to it and rectify its somewhat misleading approach at<br>\n\"Isabelle system hacking\", but I've given up on it long ago.</p>\n<p>Makarius<br>\n<a href=\"/user_uploads/14278/jixdT6q1h-pL5pCAPzWkkhCj/signature.asc\">signature.asc</a></p>",
        "id": 294763953,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661201008
    },
    {
        "content": "<p>From: Jeremy Dawson &lt;<a href=\"mailto:Jeremy.Dawson@anu.edu.au\">Jeremy.Dawson@anu.edu.au</a>&gt;<br>\nAt an earlier stage of this document there was a chapter on parsing.  I <br>\nhave two copies of pdf versions of the document, of which one says</p>\n<p>Jeremy Dawson wrote the ﬁrst version of chapter 5 about parsing.</p>\n<p>and the other (I think more recent) says</p>\n<p>Jeremy Dawson wrote the ﬁrst version of chapter ?? about parsing.</p>\n<p>I understood this to indicate that parsing in Isabelle had changed so <br>\nsignificantly that the chapter was no longer useful, and that the <br>\nauthors of these changes failed to update the documentation.</p>\n<p>Unfortunately I can't recall enough about the chapter to tell whether it <br>\nwould have given exactly what you want.</p>\n<p>(I have no idea what \"fan-fiction\" or the somewhat misleading approach <br>\nat \"Isabelle system hacking\" mean)</p>\n<p>Cheers,</p>\n<p>Jeremy</p>",
        "id": 294764111,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661201076
    },
    {
        "content": "<p>From: \"Urban,   Christian via Cl-isabelle-users\" &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nThanks for the praise from everybody....I would have interpreted \"darkfic\"<br>\nas criticism. ;o)</p>\n<p>Anyway, if anybody likes to contribute \"fix-fic\" [*], you download the sources, make<br>\nchanges and send back the diffs. Norbert Schirmer did this recently by getting<br>\nthe fan-fiction back into a compilable state with Isabelle 2019. All praise to him!</p>\n<p>Best wishes,<br>\nChristian</p>\n<p>[*] <a href=\"https://en.m.wikipedia.org/wiki/Fan_fiction\">https://en.m.wikipedia.org/wiki/Fan_fiction</a></p>",
        "id": 294764612,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661201348
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nI would like to congratulate Christian on his sense of humour!</p>\n<p>Tobias<br>\n<a href=\"/user_uploads/14278/Rg81Y97yeZJNFNPvNTSBe2bQ/smime.p7s\">smime.p7s</a></p>",
        "id": 294764787,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661201414
    }
]