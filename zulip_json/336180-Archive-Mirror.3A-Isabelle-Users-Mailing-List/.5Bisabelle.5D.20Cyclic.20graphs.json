[
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\ncode_deps eliminates circles internally by collapsing to <em>one</em> node.  I<br>\nhave considerable confidence that it will not expose any problems.</p>\n<p>Florian<br>\n<a href=\"/user_uploads/14278/E3IMTU6x270TaKCJMd0YND5R/signature.asc\">signature.asc</a></p>",
        "id": 294640028,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661161710
    },
    {
        "content": "<p>From: Dmitriy Traytel &lt;<a href=\"mailto:traytel@in.tum.de\">traytel@in.tum.de</a>&gt;<br>\nHi,</p>\n<p>I have just introduced the following locale dependencies</p>\n<p>locale foo = fixes m :: nat<br>\nlocale bar = m!: foo m + n!: foo n for m n :: nat<br>\nsublocale foo &lt; bar m m by unfold_locales</p>\n<p>This works well, even though it is cyclic, and I get the expected <br>\ntheorems of bar inside of foo.</p>\n<p>Now, using the new graph browser in Isabelle2015-RC3, I (and anybody who <br>\nwill import my theory) cannot look at the locale graph anymore (it just <br>\nsays \"Cyclic graph\"). The old browser used to ignore cyclic arrows.</p>\n<p>I guess this is what Florian meant by \"but cycles make problems here\" in <br>\nthis thread [1], but is there some workaround such as filtering (similar <br>\nto what is now available for class_deps)?</p>\n<p>Dmitriy</p>\n<p>[1] <br>\n<a href=\"https://www.mail-archive.com/isabelle-dev@mailbroy.informatik.tu-muenchen.de/msg05849.html\">https://www.mail-archive.com/isabelle-dev@mailbroy.informatik.tu-muenchen.de/msg05849.html</a></p>",
        "id": 294643025,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661162918
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Dmitriy,</p>\n<blockquote>\n<p>I have just introduced the following locale dependencies</p>\n<p>locale foo = fixes m :: nat<br>\nlocale bar = m!: foo m + n!: foo n for m n :: nat<br>\nsublocale foo &lt; bar m m by unfold_locales</p>\n<p>This works well, even though it is cyclic, and I get the expected<br>\ntheorems of bar inside of foo.</p>\n<p>Now, using the new graph browser in Isabelle2015-RC3, I (and anybody who<br>\nwill import my theory) cannot look at the locale graph anymore (it just<br>\nsays \"Cyclic graph\"). The old browser used to ignore cyclic arrows.</p>\n</blockquote>\n<p>yes, this is what bites here.</p>\n<blockquote>\n<p>I guess this is what Florian meant by \"but cycles make problems here\" in<br>\nthis thread [1], but is there some workaround such as filtering (similar<br>\nto what is now available for class_deps)?</p>\n</blockquote>\n<p>I guess in the short run the best you can do is to replace<br>\nGraph_Display.display_graph by Graph_Display.display_graph_old.</p>\n<p>If we want to maintain locale_deps seriously, we have to come up with a<br>\ndifferent concept.</p>\n<p>Florian<br>\n<a href=\"/user_uploads/14278/imnNv2tFhdmndYkhTear1vFB/signature.asc\">signature.asc</a></p>",
        "id": 294643104,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661162948
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Thu, 7 May 2015, Florian Haftmann wrote:</p>\n<blockquote>\n<p>Hi Dmitriy,</p>\n<blockquote>\n<p>I have just introduced the following locale dependencies</p>\n<p>locale foo = fixes m :: nat<br>\nlocale bar = m!: foo m + n!: foo n for m n :: nat<br>\nsublocale foo &lt; bar m m by unfold_locales</p>\n<p>This works well, even though it is cyclic, and I get the expected<br>\ntheorems of bar inside of foo.</p>\n<p>Now, using the new graph browser in Isabelle2015-RC3, I (and anybody who<br>\nwill import my theory) cannot look at the locale graph anymore (it just<br>\nsays \"Cyclic graph\"). The old browser used to ignore cyclic arrows.</p>\n</blockquote>\n<p>yes, this is what bites here.</p>\n</blockquote>\n<p>The algorithm behind both graph browsers is the same, and specifically for <br>\nacyclic graphs.  The original paper by Georg Sander (DIMACS GD'94 <br>\npublished 1995) discusses this restriction initially and proposes a simple <br>\npreprocessor to allow cycles as well.  When Stefan Berghofer implemented <br>\nthe browser first in 1996, we were discussing this detail and left out the <br>\npreprocessor on purpose, because our graphs were always acyclic.</p>\n<p>So as far as I can say, the behaviour of the old browser is undefined / <br>\narbitrary / unspecified for cyclic graphs.  The new Graphview properly <br>\nchecks that and shows nothing that an error message.</p>\n<blockquote>\n<blockquote>\n<p>I guess this is what Florian meant by \"but cycles make problems here\" in<br>\nthis thread [1], but is there some workaround such as filtering (similar<br>\nto what is now available for class_deps)?</p>\n</blockquote>\n<p>I guess in the short run the best you can do is to replace<br>\nGraph_Display.display_graph by Graph_Display.display_graph_old.</p>\n<p>If we want to maintain locale_deps seriously, we have to come up with a <br>\ndifferent concept.</p>\n</blockquote>\n<p>The locale_deps command was first advertized in Isabelle2013 (February <br>\n2013).  Was it actually ever used productively?  Trying it in Isabelle/HOL <br>\nMain, it merely shows a big mess.</p>\n<p>Anyway, for now in <br>\n<a href=\"https://bitbucket.org/isabelle_project/isabelle-release/commits/83de10e27007\">https://bitbucket.org/isabelle_project/isabelle-release/commits/83de10e27007</a> <br>\nI've switched locale_deps back to Graph_Display.display_graph_old.  It is <br>\na bit depressing, because the new Graphview started out as a locale graph <br>\nbrowser project.</p>\n<p>So we have the following situation:</p>\n<p>Graph_Display.display_graph_old:</p>\n<p>locale_deps<br>\n     thm_deps</p>\n<p>Graph_Display.display_graph:</p>\n<p>thy_deps<br>\n     class_deps<br>\n     code_deps</p>\n<p>Both locale_deps and thm_deps may be considered as never quite finished <br>\nexperiments, so using the old browser merely emphasizes the bad state.</p>\n<p>Hopefully thy_deps, class_deps, code_deps are all in good shape.  I've <br>\nhade a close look at thy_deps and class_deps recently.  Is code_deps <br>\nbeyond doubt and properly usable?</p>\n<p>Makarius</p>",
        "id": 294643383,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661163053
    }
]