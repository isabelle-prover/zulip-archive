[
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nFor anyone interested, this is mainly to provide a sed script which will <br>\nallow you to run the Sledgehammer ATP agsyHOL.exe, which is built using <br>\nHaskell Platform ghc.</p>\n<p>It's been over a year since I looked at building ATPs. Basically, I've <br>\nfound 4 ATPs that are easy to build and install for Cygwin: LEO-II, <br>\nYices, agsyHOL, and Satallax. I show the script for agsyHOL at the end.</p>\n<p>Yices is easy because the binaries are already built. Of note is there's <br>\nnot a remote version of it. For Windows, there is a Cygwin \"yices\" and a <br>\nWindows \"yices.exe\". If you modify the script I give for using <br>\nagsyHOL.exe, you can use \"yices.exe\". There's a Yices 2, but it doesn't <br>\nwork with Sledgehammer for me. Yices 1 is here:</p>\n<p><a href=\"http://yices.csl.sri.com\">http://yices.csl.sri.com</a></p>\n<p>For me, remote_leo2 and remote_satallax are finding proofs more than <br>\nleo2 and satallax, but the locals will still be useful when I'm not <br>\nonline. LEO-II works in conjuction with other ATPs, so the remote <br>\nversion may be configured different. If you use Sledgehammer <br>\n\"overlord=true\", and look at the problem file generated in <br>\nISABELLE_HOME_USER, you'll see that leo2 is given the ATP \"e\".</p>\n<p>I never saw LEO-II v1.4.3 prove anything, so I probably built a slow <br>\nversion. This time, I built with the suggestion in INSTALL, \"make opt <br>\ndebug=false\". Both remote_leo2 and leo2 are finding proofs now.</p>\n<p>To build Cygwin satallax and leo2, use Isabelle2012-2/Cygwin-Setup.bat <br>\nto install these extras: zlib-devel, make, OCaml devel, gcc devel, g++ <br>\ndevel, libstdc++6-devel.</p>\n<p>LEO-II is here: <a href=\"http://www.leoprover.org\">http://www.leoprover.org</a></p>\n<p>Satallax is here: <a href=\"http://www.ps.uni-saarland.de/~cebrown/satallax/\">http://www.ps.uni-saarland.de/~cebrown/satallax/</a></p>\n<p>Finally, for agsyHOL, the sources are on github: <br>\n<a href=\"https://github.com/frelindb/agsyHOL\">https://github.com/frelindb/agsyHOL</a></p>\n<p>It's worth installing because remote_agsyhol gives up sometimes much <br>\neasier than the local install.</p>\n<p>The README links to <a href=\"http://www.haskell.org/ghc/\">http://www.haskell.org/ghc/</a> for the ghc, but that <br>\ndidn't have everything needed for the build, but this does: <br>\n<a href=\"http://www.haskell.org/platform/\">http://www.haskell.org/platform/</a></p>\n<p>I didn't find any magic Haskell installs for Cygwin.</p>\n<p>To run agsyHOL.exe under Cygwin, the scripts below (and attached) <br>\nconvert Cygwin/Unix paths and filenames so that agsyHOL.exe can use them.</p>\n<p>Regards,<br>\nGB</p>\n<p>FILE: agsyHOL</p>\n<p>#!/usr/bin/env bash<br>\necho $0 $@ | <br>\n/cygdrive/e/E_2/dev/isaATP/agsyHOL-131206/win7/agsyHOL_cyg2win.sed | bash<br>\n#Change to this to check the filter.<br>\n#echo $0 $@ | <br>\n/cygdrive/e/E_2/dev/isaATP/agsyHOL-131206/win7/agsyHOL_cyg2win.sed &gt; <br>\n/cygdrive/e/E_2/dev/isaATP/agsyHOL-131206/win7/agsyHOL_cyg2win_out.txt</p>\n<p>#*) With Sledgehammer option \"overlord=true\", the input to ATP agsyhol <br>\nwill be a</p>\n<h1>command in the file $ISABELLE_HOME_USER/prob_agsyhol_1, something like:</h1>\n<h1>'/cygdrive/e/E_2/dev/isaATP/agsyHOL-131206/win7/agsyHOL' --proof</h1>\n<p>--time-out 60 <br>\n'/cygdrive/e/E_1/02-p/pi/home/.isabelle/Isabelle2013-2/prob_agsyhol_1'<br>\n#*) The command run through agsyHOL_cyg2win.sed should look something like</p>\n<h1>E:/E_2/dev/isaATP/agsyHOL-131206/win7/agsyHOL.exe --time-out 60</h1>\n<p>E:/E_1/02-p/pi/home/.isabelle/Isabelle2013-2/prob_agsyhol_1<br>\n#*) With \"overlord=false\", the problem file will be created in Cygwin /tmp,</p>\n<h1>which is not seen as /tmp to Windows.</h1>\n<p>FILE: agsyHOL_cyg2win.sed</p>\n<p>#!/usr/bin/sed -f<br>\n{<br>\n   s@/tmp@E:/E_2/dev/Isabelle2013-2/contrib/cygwin/tmp@g<br>\n   s@/cygdrive/e@E:@g<br>\n   s@win7/agsyHOL@win7/agsyHOL.exe@g<br>\n   s@--proof@@g<br>\n}</p>\n<h1>s@/cygdrive/e@E:@g is needed for \"overlord=true\".</h1>\n<h1>Change \"E:/E_2/dev/Isabelle2013-2\" to your Isabelle install folder.</h1>\n<h1>Change \"win7\" to some part of your path that's before agsyHOL.exe</h1>\n<h1>The scripts \"agsyHOL\" and \"agsyHOL_cyg2win.sed\" should in the folder.</h1>\n<h1>*) With Sledgehammer option \"overlord=false\", the input will be</h1>\n<p>something like:</p>\n<h1>'/cygdrive/e/E_2/dev/isaATP/agsyHOL-131206/win7/agsyHOL' --proof</h1>\n<p>--time-out 60 '/tmp/isabelle-jv9020/prob1616544_1'</p>\n<h1>*) The sed script does the following:</h1>\n<h1>*) Changes tmp path from a Cygwin path to a Windows path.</h1>\n<h1>*) Changes \"/cygdrive/e\" to \"E:\".</h1>\n<h1>*) Adds the \"exe\" extension to \"agsyHOL\"; the \"win7\" is just for</h1>\n<p>something</p>\n<h1>unique in the path to search on.</h1>\n<h1>*) Eliminates \"--proof\" because it causes an error.</h1>\n<p><a href=\"/user_uploads/14278/P_jBqLgbB3BnY8dkF7QhNU1f/agsyHOL\">agsyHOL</a><br>\n<a href=\"/user_uploads/14278/MhSbNVXwn3shPwWUoutsekZs/agsyHOL_cyg2win.sed\">agsyHOL_cyg2win.sed</a></p>",
        "id": 294262927,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660915042
    }
]