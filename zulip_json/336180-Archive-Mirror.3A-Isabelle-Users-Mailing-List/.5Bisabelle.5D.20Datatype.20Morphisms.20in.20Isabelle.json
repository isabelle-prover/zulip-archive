[
    {
        "content": "<p>From: Alfio Martini &lt;<a href=\"mailto:alfio.martini@acm.org\">alfio.martini@acm.org</a>&gt;<br>\nDear Isabelle Users,</p>\n<p>This is a very simple question:</p>\n<p>Assume a language L specifiied by a datatype D, where L = Lang(D). If L is<br>\na subset of L', how<br>\ncan I write in Isabelle a datatype D', that extends D  such that Lang(D')=<br>\nL'?</p>\n<p>More generally, how can I model datatype morphisms in Isabelle, so that the<br>\ncase above<br>\nis just a simple inclusion arrow.</p>\n<p>Many thanks!</p>",
        "id": 294229579,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901762
    },
    {
        "content": "<p>From: Alfio Martini &lt;<a href=\"mailto:alfio.martini@acm.org\">alfio.martini@acm.org</a>&gt;<br>\nWell...I see two ways to do it with my little knowledge of Isabelle:</p>\n<p>1)  I have just to write a recursive function from D into D' and this is<br>\n     the morphism I wanted (similar to what is done with boolean datatypes<br>\nin the LNCS Tutorial).</p>\n<p>2)just to include D as a type (prefixed by a dummy constructor)<br>\n   in the definition of D'. This seems to be the easiest way, if the D is a<br>\nproper subset of D',<br>\n     and the one I decided to use.</p>\n<p>Best!</p>",
        "id": 294229616,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901768
    }
]