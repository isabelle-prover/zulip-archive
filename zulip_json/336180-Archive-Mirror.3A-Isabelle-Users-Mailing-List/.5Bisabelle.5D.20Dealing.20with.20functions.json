[
    {
        "content": "<p>From: \"Aaron W. Hsu\" &lt;<a href=\"mailto:arcfide@sacrideo.us\">arcfide@sacrideo.us</a>&gt;<br>\nHello all:</p>\n<p>I have a function that I have defined like this:</p>\n<p>fun sv2vl :: \"nat  'a::scalar list  'a::scalar list  'a::scalar list\" where<br>\n    \"sv2vl 0 orig lst = []\"<br>\n  | \"sv2vl cnt [] [] = (replicate cnt fill)\"<br>\n  | \"sv2vl (Suc cnt) (oel # ors) [] = (oel # (sv2vl cnt (oel # ors) ors))\"<br>\n  | \"sv2vl (Suc cnt) orig (elm # rst) = (elm # (sv2vl cnt orig rst))\"</p>\n<p>And I am trying to prove that the length of the result of this function <br>\nis equal to the first argument. However, unlike with primrec or <br>\nsome other elements, I am having a hard time figuring out how to <br>\nexpress the various cases of the body to Isabelle. That is, I am thinking <br>\nthat you would prove this inductively by showing the base case <br>\ntrivially, and then showing that for the case (Suc n) you have three <br>\ncases where this could be true, and in each one of them, the length <br>\nis what I want.</p>\n<p>However, how do I say this in Isar or whatever else I am doing? </p>\n<p>Yours truly,</p>\n<p>Aaron W. Hsu</p>",
        "id": 294223246,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660898627
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nBecause fun generates the right induction principle, the proof is a one-liner:</p>\n<p>by (induct n xs ys rule: sv2vl.induct) auto</p>\n<p>See the documentation (eg Tutorial on Function Definitions or the new<br>\nProgramming and Proving tutorial) for more info.</p>\n<p>Of course you can also use this induction rule in more verbose Isar proofs.</p>\n<p>Tobias</p>",
        "id": 294223270,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660898639
    },
    {
        "content": "<p>From: \"Aaron W. Hsu\" &lt;<a href=\"mailto:arcfide@sacrideo.us\">arcfide@sacrideo.us</a>&gt;<br>\nTobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt; writes:</p>\n<p>Thanks so much! I took a look at the documentation in question and <br>\nthat clears things up, though I do not understand why the explicit <br>\n\"rule\" part is necessary. Why would it not automatically choose that <br>\nrule? Do you normally want the other induction rules instead of this <br>\none in proofs?</p>",
        "id": 294223342,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660898658
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nThere needs to be some indication which induction principle is wanted. Just<br>\ngiving variable names indicates structural induction. Other induction principles<br>\nwould need other hints. One could imagine writing something like \"sv2vl n xs ys\"<br>\nto indicate that, but that would be a significant extension of induction, and it<br>\nis already too complicated as it is.</p>\n<p>Moreover you will find that the limiting factor in writing proofs is not stating<br>\nan induction rule.</p>\n<p>Tobias</p>",
        "id": 294223524,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660898756
    }
]