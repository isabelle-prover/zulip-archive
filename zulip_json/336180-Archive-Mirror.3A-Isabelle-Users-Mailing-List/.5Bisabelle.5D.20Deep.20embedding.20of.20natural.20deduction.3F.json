[
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:breitner@kit.edu\">breitner@kit.edu</a>&gt;<br>\nDear List,</p>\n<p>I’m searching for a formal description of natural deduction, preferably<br>\nformalized in Isabelle.</p>\n<p>What I found was for example this theory<br>\n<a href=\"https://github.com/logic-tools/nadea/blob/master/Isabelle/NaDeA.thy\">https://github.com/logic-tools/nadea/blob/master/Isabelle/NaDeA.thy</a><br>\n(part of <a href=\"https://nadea.compute.dtu.dk/\">https://nadea.compute.dtu.dk/</a> by Jørgen Villadsen)<br>\nbut it hard-codes the terms and inference rules; I’m interested in <br>\nsomething more general, where the terms (or at least the connectives)<br>\nare abstract, and also the set of inference rules is not fixed.</p>\n<p>In other words: I’m looking for a data type that can describe arbitrary<br>\nterms (with binders), inference rules and derivation tree using them,<br>\nand can determine whether the derivation tree is valid (terms match,<br>\nonly the given inference rules are used, scoping of variables is<br>\ncorrect).</p>\n<p>Do you know of such a thing?</p>\n<p>Greetings,<br>\nJoachim<br>\n<a href=\"/user_uploads/14278/RjvfCY2qz3s2eviyZINTotAP/signature.asc\">signature.asc</a></p>",
        "id": 294664317,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661171157
    },
    {
        "content": "<p>From: Dmitriy Traytel &lt;<a href=\"mailto:traytel@inf.ethz.ch\">traytel@inf.ethz.ch</a>&gt;<br>\nHi Joachim,</p>\n<p>here are some related references (none of which has all you need):</p>\n<ol>\n<li>Margetson, Ridge: <a href=\"http://afp.sourceforge.net/entries/Completeness.shtml\">http://afp.sourceforge.net/entries/Completeness.shtml</a> &lt;<a href=\"http://afp.sourceforge.net/entries/Completeness.shtml\">http://afp.sourceforge.net/entries/Completeness.shtml</a>&gt; (see also the TPHOLs 2005 paper <a href=\"http://dx.doi.org/10.1007/11541868_19\">http://dx.doi.org/10.1007/11541868_19</a>)</li>\n</ol>\n<p>Similar to Jørgen Villadsen’s theory it hard-codes formulas and natural deduction inference rules. It has a notion of valid trees and used de Bruijn indices for variables. The entry proves soundness and completeness of FOL.</p>\n<ol start=\"2\">\n<li>Berghofer: <a href=\"http://afp.sourceforge.net/entries/FOL-Fitting.shtml\">http://afp.sourceforge.net/entries/FOL-Fitting.shtml</a> &lt;<a href=\"http://afp.sourceforge.net/entries/FOL-Fitting.shtml\">http://afp.sourceforge.net/entries/FOL-Fitting.shtml</a>&gt;</li>\n</ol>\n<p>Another formalization of FOL soundness and completeness (+Löwenheim-Skolem) for a natural deduction calculus. No derivation trees though (Stefan follows a semantic approach, which does not require them).</p>\n<ol start=\"3\">\n<li>Blanchette, Popescu, Traytel: <a href=\"http://afp.sourceforge.net/entries/Abstract_Completeness.shtml\">http://afp.sourceforge.net/entries/Abstract_Completeness.shtml</a> &lt;<a href=\"http://afp.sourceforge.net/entries/Abstract_Completeness.shtml\">http://afp.sourceforge.net/entries/Abstract_Completeness.shtml</a>&gt; (see also the IJCAR’14 paper <a href=\"http://dx.doi.org/10.1007/978-3-319-08587-6_4\">http://dx.doi.org/10.1007/978-3-319-08587-6_4</a> &lt;<a href=\"http://dx.doi.org/10.1007/978-3-319-08587-6_4\">http://dx.doi.org/10.1007/978-3-319-08587-6_4</a>&gt; or its extended draft article <a href=\"http://people.inf.ethz.ch/trayteld/papers/fol_completeness2/compl2.pdf\">http://people.inf.ethz.ch/trayteld/papers/fol_completeness2/compl2.pdf</a>)</li>\n</ol>\n<p>This one has abstract (syntax-independent) notions of valid proof trees. It aims at formulating the completeness property as abstractly as possible. (The journal version also shows abstract soundness for classic FOL and extensions; the archive attachment  <br>\n<a href=\"http://people.inf.ethz.ch/trayteld/compl-journal-devel.tgz\">http://people.inf.ethz.ch/trayteld/compl-journal-devel.tgz</a> &lt;<a href=\"http://people.inf.ethz.ch/trayteld/compl-journal-devel.tgz\">http://people.inf.ethz.ch/trayteld/compl-journal-devel.tgz</a>&gt; contains the formalizations of these extensions). In the AFP there is only a toy instantiation of the abstract machinery with propositional logic.</p>\n<p>There is also a sophisticated instantiation with many-sorted FOL by and a natural deduction proof system Andrei and Jasmin (for their Mechanization of Sledgehammer’s metatheory) that uses Andrei’s theory of Syntax with Bindings. All of this is not in the AFP but available separately, <a href=\"http://www21.in.tum.de/~traytel/compl_devel.zip\">http://www21.in.tum.de/~traytel/compl_devel.zip</a> &lt;<a href=\"http://www21.in.tum.de/~traytel/compl_devel.zip\">http://www21.in.tum.de/~traytel/compl_devel.zip</a>&gt;, tested with Isabelle2013-2 ;-) ; see readme.txt there.</p>\n<ol start=\"4\">\n<li>Sternagel, Thiemann, et al.: IsaFoR (<a href=\"http://cl-informatik.uibk.ac.at/software/ceta/index.php\">http://cl-informatik.uibk.ac.at/software/ceta/index.php</a> &lt;<a href=\"http://cl-informatik.uibk.ac.at/software/ceta/index.php\">http://cl-informatik.uibk.ac.at/software/ceta/index.php</a>&gt;)</li>\n</ol>\n<p>It has the most developed formalization of first-order terms (including matching, unification, and what not).</p>\n<ol start=\"5\">\n<li>Blanchette, Fleury, Schlichtkrull, Traytel: IsaFoL (<a href=\"https://bitbucket.org/jasmin_blanchette/isafol\">https://bitbucket.org/jasmin_blanchette/isafol</a>)</li>\n</ol>\n<p>Formalizes logical calculi (ongoing work, so far with a focus on resolution and superposition, not so much on natural deduction).</p>\n<p>I’m not sure what your precise application is (formalization of the incredible proof machine?, what do you want to prove there?). If you aim for soundness and completeness, building on top of 3 and 4 might be a way to go.</p>\n<p>Hope that helps,<br>\nDmitriy</p>",
        "id": 294664467,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661171200
    },
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:breitner@kit.edu\">breitner@kit.edu</a>&gt;<br>\nHi,</p>\n<p>thanks for the overview, especially for the comments!</p>\n<p>good guess :-)</p>\n<p>I want to show that proof graphs, as they are used by the Incredible<br>\nProof Machines, correspond to “normal” natural deduction trees, by<br>\ngiving a mapping from proof blocks to inference rules and from graphs<br>\nto derivation trees, and at least show soundness, preferably also<br>\ncompleteness.</p>\n<p>Greetings,<br>\nJoachim<br>\n<a href=\"/user_uploads/14278/4MifYMAPS1qgPqioqAXuS-I4/signature.asc\">signature.asc</a></p>",
        "id": 294664477,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661171205
    }
]