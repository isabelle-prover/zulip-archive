[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:lochbihl@ipd.info.uni-karlsruhe.de\">lochbihl@ipd.info.uni-karlsruhe.de</a>&gt;<br>\nHi all,</p>\n<p>I am currently converting my theories to Isabelle 2009 and stumbled <br>\nacross the following problem with locales:</p>\n<p>In Isabelle 2008, things like the following worked very well:</p>\n<p>locale foo =<br>\n   fixes x :: \"'a =&gt; 'a =&gt; bool\"<br>\n   and y :: \"'a =&gt; 'a =&gt; bool\"<br>\n   and P :: \"'a =&gt; bool\"<br>\n   and xs :: \"'a =&gt; 'a =&gt; bool\" (\"_ -&gt;* _\")<br>\n   defines xs_def: \"xs == (%a b. x a b &amp; y a b)^**\"<br>\n   assumes \"a -&gt;* b ==&gt; P b\"</p>\n<p>interpretation f: foo[\"%a b. a &gt; 0 &amp; b &lt;= Suc 0\" \"%a b. a &lt; 10\"<br>\n                       \"%a.True\"]<br>\napply(simp)<br>\napply(unfold_locales)<br>\napply(rule TrueI)<br>\ndone</p>\n<p>Here, I use the defines feature to introduce an abbreviation and <br>\nnotation for some complex term which can then be used to state the <br>\nassumptions. Inside the locale, the defined parameter behaves like a <br>\ndefinition whereas when interpreting these locales, these definitions <br>\nare automatically unfolded.</p>\n<p>If I try to do this to Isabelle 2009, everything seems to break. The <br>\nlocale definition works as before, but interpreting foo is terrible:</p>\n<p>1st try:</p>\n<p>interpretation f: foo \"%a b. a &gt; 0 &amp; b &lt;= Suc 0\" \"%a b. a &lt; 10\"<br>\n                       \"%a.True\"</p>\n<p>This does not work because the defined parameter is not instantiated, <br>\nbut left as a free variable, which must be shown equal to the definition <br>\nof xs in the locale.</p>\n<p>2nd try:</p>\n<p>interpretation f: foo \"%a b. a &gt; 0 &amp; b &lt;= Suc 0\" \"%a b. a &lt; 10\"<br>\n                       \"%a. True\"<br>\n                       \"(%a b. a &gt; 0 &amp; b &lt;= Suc 0 &amp; a &lt; 10)^**\"</p>\n<p>Now the explicit parameter is given, but unfold_locales nor <br>\nintro_locales longer work any longer (empty result sequence). It seems <br>\nthat I have to prove the interpretation manually by (rule foo.intro, <br>\nsimp_all).</p>\n<ul>\n<li>\n<p>Can I still do this trick of having parameters defined in a locale <br>\ndeclaration that are unfolded automatically for all interpretations and <br>\nthat can be used in the assumptions (with additional syntax)?</p>\n</li>\n<li>\n<p>How must interpretations be written such that such defined parameters <br>\nneed not be specified?</p>\n</li>\n<li>\n<p>Why do unfold_locales/intro_locales not work here? What else should I use?</p>\n</li>\n</ul>\n<p>Regards,<br>\nAndreas Lochbihler</p>",
        "id": 294076578,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660829143
    },
    {
        "content": "<p>From: Clemens Ballarin &lt;<a href=\"mailto:ballarin@in.tum.de\">ballarin@in.tum.de</a>&gt;<br>\nQuoting Andreas Lochbihler &lt;<a href=\"mailto:lochbihl@ipd.info.uni-karlsruhe.de\">lochbihl@ipd.info.uni-karlsruhe.de</a>&gt;:</p>\n<blockquote>\n<p>locale foo =<br>\n  fixes x :: \"'a =&gt; 'a =&gt; bool\"<br>\n  and y :: \"'a =&gt; 'a =&gt; bool\"<br>\n  and P :: \"'a =&gt; bool\"<br>\n  and xs :: \"'a =&gt; 'a =&gt; bool\" (\"_ -&gt;* _\")<br>\n  defines xs_def: \"xs == (%a b. x a b &amp; y a b)^**\"<br>\n  assumes \"a -&gt;* b ==&gt; P b\"</p>\n<p>interpretation f: foo[\"%a b. a &gt; 0 &amp; b &lt;= Suc 0\" \"%a b. a &lt; 10\"<br>\n                      \"%a.True\"]</p>\n</blockquote>\n<p>The feature that defined parameters may be omitted in interpretation  <br>\nhas been withdrawn in an attempt to make defines more similar to  <br>\nassumes.</p>\n<blockquote>\n<p>2nd try:</p>\n<p>interpretation f: foo \"%a b. a &gt; 0 &amp; b &lt;= Suc 0\" \"%a b. a &lt; 10\"<br>\n                      \"%a. True\"<br>\n                      \"(%a b. a &gt; 0 &amp; b &lt;= Suc 0 &amp; a &lt; 10)^**\"</p>\n<p>Now the explicit parameter is given, but unfold_locales nor<br>\nintro_locales longer work any longer (empty result sequence).</p>\n</blockquote>\n<p>In apply-style you can do \"apply -\" to break up the goal followed by  <br>\nexplicit goal addressing (\"apply unfold_locales [1]\" or similar).  In  <br>\nproper Isar proofs, \"proof\" breaks up the goal for you.</p>\n<p>Clemens</p>",
        "id": 294076723,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660829179
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nIn fact, this break up of simultaneous goals is implicit in any regular method <br>\napplication (with the exception of special simultaneous methods like \"induct\").</p>\n<p>This means you can finish the proof script like this:</p>\n<p>interpretation f:<br>\n   foo \"%a b. a &gt; 0 &amp; b &lt;= Suc 0\" \"%a b. a &lt; 10\" \"%a. True\"<br>\n     \"(%a b. a &gt; 0 &amp; b &lt;= Suc 0 &amp; a &lt; 10)^**\"<br>\n   apply (unfold_locales)[1]<br>\n    apply (rule TrueI)<br>\n   apply simp<br>\n   done</p>\n<p>Makarius</p>",
        "id": 294076755,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660829192
    },
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:brianh@cs.pdx.edu\">brianh@cs.pdx.edu</a>&gt;<br>\nSo what (if any) is the difference between \"defines\" and \"assumes\" now? It<br>\nseems that with the current locale package, locale \"foo\" might as well be<br>\ndefined as below, with \"assumes xs_def\". Am I missing something?</p>\n<p>locale foo =<br>\n fixes x :: \"'a =&gt; 'a =&gt; bool\"<br>\n and y :: \"'a =&gt; 'a =&gt; bool\"<br>\n and P :: \"'a =&gt; bool\"<br>\n and xs :: \"'a =&gt; 'a =&gt; bool\" (\"_ -&gt;* _\")<br>\n assumes xs_def: \"xs == (%a b. x a b &amp; y a b)^**\"<br>\n assumes \"a -&gt;* b ==&gt; P b\"</p>\n<ul>\n<li>Brian</li>\n</ul>",
        "id": 294076770,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660829198
    }
]