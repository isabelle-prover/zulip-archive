[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nHi List.</p>\n<p>Refering to Isabelle/jedit 2014-RC1:</p>\n<p>How can I define shortcuts for actions in general, and, in particular,<br>\nfor the action of clicking \"Update\" in the output panel.</p>\n<p>This action does not occur as \"command\" in jedit's shortcut menu, nor<br>\ndoes the \"action bar\" mention it, nor does macro-recording work for it.</p>\n<p>So I have no clue where to start.</p>",
        "id": 294285550,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660921729
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Wed, 30 Jul 2014, Peter Lammich wrote:</p>\n<blockquote>\n<p>Refering to Isabelle/jedit 2014-RC1:</p>\n<p>How can I define shortcuts for actions in general</p>\n</blockquote>\n<p>The Isabelle/jEdit manual briefly mentions that, and refers to the <br>\noriginal jEdit documentation for further information.  Both are accessible <br>\nin the Documentation panel.</p>\n<blockquote>\n<p>in particular, for the action of clicking \"Update\" in the output panel.</p>\n</blockquote>\n<p>That is not an action, so it cannot be bound to shortcuts etc.  I can't <br>\nsay on the spot if it could be made an action with reasonable effort.</p>\n<p>Makarius</p>",
        "id": 294285684,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660921778
    },
    {
        "content": "<p>From: Fabian Immler &lt;<a href=\"mailto:immler@in.tum.de\">immler@in.tum.de</a>&gt;<br>\nHi Peter,</p>\n<p>You could use a BeanShell macro which emulates clicking on \"Update\", e.g. as follows:</p>\n<p>import isabelle.jedit.*;<br>\nsetAccessibility(true);<br>\noutput = Isabelle.output_dockable(view);<br>\nif (output.isDefined()) output.get().update.doClick();</p>\n<p>Then bind this macro to a shortcut, but I suppose the clicking-emulation could be made an action as well.</p>\n<p>Fabian</p>",
        "id": 294286243,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660921953
    },
    {
        "content": "<p>From: Carst Tankink &lt;<a href=\"mailto:carst.tankink@inria.fr\">carst.tankink@inria.fr</a>&gt;<br>\nThe following works, but I am not sure if I missed corner cases:</p>\n<ul>\n<li>\n<p>Add the following method to src/Tools/jEdit/src/output_dockable.scala:</p>\n<p>def update_now() { handle_update(true, None) }</p>\n</li>\n<li>\n<p>Add the following snippet to src/Tools/jEdit/src/actions.xml:</p>\n<p>&lt;ACTION NAME=\"isabelle.update_output\"&gt;<br>\n   &lt;CODE&gt;<br>\n     wm.addDockableWindow(\"isabelle-output\");<br>\n     wm.getDockableWindow(\"isabelle-output\").update_now();<br>\n   &lt;/CODE&gt;<br>\n &lt;/ACTION&gt;</p>\n</li>\n<li>\n<p>Add the following to src/Tools/jEdit/src/jEdit.props (Isabelle.props <br>\nprobably works as well):</p>\n<p>isabelle.update_output.label=Update output window</p>\n</li>\n</ul>\n<p>Recompile and repackage jEdit, obviously.<br>\nThis will actually open the output dockable if it is not yet open, <br>\nremoving the addDockableWindow call would prevent this behaviour.</p>\n<p>Carst</p>",
        "id": 294286304,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660921974
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nExcellent.  I am impressed by the flexibility of jEdit and BeanShell in <br>\nparticular.</p>\n<p>Yet another very practical proof that the Java guys started out as LISP <br>\nguys -- J. Gosling even had his own version of Emacs in his youth.</p>\n<p>Makarius</p>",
        "id": 294291696,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660923668
    }
]