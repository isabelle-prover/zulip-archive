[
    {
        "content": "<p>From: \"J.V. Paiva-Miranda-De-Siqueira\" &lt;<a href=\"mailto:jvp27@cam.ac.uk\">jvp27@cam.ac.uk</a>&gt;<br>\nDear Isabelle Users,</p>\n<p>I'm a mathematician recently introduced to Isabelle, and am working on a <br>\ncertain theory<br>\nrequiring the usage of locales. I ran into a problem while trying to <br>\ndefine operations on<br>\na certain set, which I want to be recognized as an instance of a locale <br>\n\"Ring\" of an imported<br>\ntheory.</p>\n<p>This set is named \"stalk x\", where x is a parameter, i.e, I have stalk:: <br>\n\"'a ⇒( ('a set × 'a) set) set\"<br>\nwhere \"stalk x = {germ x U s |U s. (U,s) ∈ prestalk x}\" (here prestalk <br>\nis of type \"'a  ⇒('a set × 'a) set\"<br>\nand germ is of type \"'a ⇒  'a set ⇒ 'a ⇒ ('a set × 'a) set\").</p>\n<p>I'm trying to have stalk x as the carrier of a ring, so I need to define <br>\noperations and thus<br>\nattempted the following:</p>\n<p>definition  stalk_pop :: \"'a ⇒ [('a set × 'a) set , ('a set × 'a) set]<br>\n  ⇒ ('a set × 'a) set  \" where<br>\n\"stalk_pop x (germ x U s) (germ x V t) =  germ x (U∩V)<br>\n(  (restrictionsmap (U, U∩V) s)±⇘objectsmap (U∩V)⇙<br>\n  (restrictionsmap (V, U∩V) t)) \"</p>\n<p>The RHS seems to be correct, but the definition command complains about <br>\nthe arguments on the LHS<br>\n(the germs, namely). I can't define this operation for everything of <br>\ntype [('a set × 'a) set , ('a set × 'a) set]<br>\nin a way it reduces to what I want (the RHS) over stalk x and nothing <br>\nhere is recursively defined.<br>\nIs there a good way to define this operation strictly over ('a set × 'a) <br>\nsets of the form germ x U s?</p>\n<p>Thanks for your time and pardon the potentially silly question.</p>\n<p>Sincerely,</p>\n<p>José Siqueira</p>",
        "id": 294679622,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661176251
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nThe \"definition\" command allows only variables on the lhs. You can use the <br>\n\"function\" command instead. But there is no free lunch. This will generate two <br>\nkinds of subgoals:</p>\n<ul>\n<li>\n<p>that all cases have been covered; in your case you haven't. HOL functions are <br>\ntotal; in the worst case you can return the value \"undefined\" in all other cases.</p>\n</li>\n<li>\n<p>that cases involving non-patterns make sense; in your case: are independent of <br>\nthe choices of x U s, x V t.</p>\n</li>\n</ul>\n<p>For details see \"Defining Recursive Functions in Isabelle/HOL\".</p>\n<p>Tobias<br>\n<a href=\"/user_uploads/14278/2AlZsmGfvj3VJkKKMuaJdQjh/smime.p7s\">smime.p7s</a></p>",
        "id": 294679707,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661176279
    }
]