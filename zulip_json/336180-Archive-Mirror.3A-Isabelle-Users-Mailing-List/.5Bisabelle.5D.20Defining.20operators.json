[
    {
        "content": "<p>From: Christopher Hoskin &lt;<a href=\"mailto:christopher.hoskin@gmail.com\">christopher.hoskin@gmail.com</a>&gt;<br>\nHello,</p>\n<p>I'm trying to teach myself Isabelle, and have come across something I<br>\ndon't understand. I'm trying to model Jordan *-triples (e.g. the<br>\ncomplex numbers equipped with the ternary product {a b c} =<br>\n1/2(ab^*c+cb^*a) where ^* denotes conjugation. The triple product has<br>\na quadratic operator associated with it defined by Q(a)b = {a b a}.</p>\n<p>I can model the ternary multiplication as:</p>\n<p>class triple = ab_group_add +<br>\n  fixes triple :: \"'a ⇒ 'a ⇒ 'a ⇒ 'a\" (\"⦃ _ _ _ ⦄\" [100,100,100] 1000)</p>\n<p>(There are other axioms which I have omitted for simplicity as<br>\nremoving them doesn't affect the outcome described below.)</p>\n<p>I then attempt to define the quadratic operator as:</p>\n<p>fixes Qsig :: \"'a ⇒ 'a ⇒ 'a\" (\"Q⇩_ _ \" 1000)<br>\n  assumes Qdef: \"Q⇩a b = ⦃ a b a ⦄\"</p>\n<p>Clearly I have introduced some rules beyond what I intended, as<br>\nIsabelle is then able to prove statements which aren't in general true<br>\nin the mathematical theory. e.g.</p>\n<p>lemma Qop: \"Q⇩u (Q⇩u (Q⇩u a)) = ⦃ u a u ⦄\" by (rule local.Qdef)</p>\n<p>is considered true. (This should require the additional assumption<br>\nthat u is a tripotent i.e. ⦃ u u u ⦄ = u along with the omitted axioms<br>\non the multiplication.)</p>\n<p>How is Isabelle actually interpreting what I have entered, and what<br>\nshould I have put?</p>\n<p>(Sorry if this is a very basic question. I am still new to this and<br>\nfinding it hard going.)</p>\n<p>Thank you for any help you are able to offer.</p>\n<p>Christopher Hoskin</p>",
        "id": 294760484,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661199306
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nThe problem is that ⇩ (\\&lt;^sub&gt;) is considered part of an identifier,<br>\ne.g. when you type Q⇩a, it gets parsed as a single identifier. You can<br>\nsee that by inspecting the theorem \"Qdef\": It contains a universally<br>\nquantified variable Q⇩a.</p>\n<p>The best solution to this would probably be to use \\&lt;^bsub&gt; and \\&lt;^esub&gt;<br>\ninstead of \\&lt;^sub&gt;. That also has the additional advantage of allowing<br>\nyou to have parameters for a that are more than a single character long<br>\nwithout looking ugly.</p>\n<p>class triple = ab_group_add +<br>\n  fixes triple :: \"'a ⇒ 'a ⇒ 'a ⇒ 'a\" (\"⦃ _ _ _ ⦄\" [100,100,100] 1000)<br>\n  fixes Qsig :: \"'a ⇒ 'a ⇒ 'a\" (\"Q⇘_⇙ _ \" [100,100] 1000)<br>\n  assumes Qdef: \"Q⇘a⇙ b = ⦃ a b a ⦄\"<br>\nbegin</p>\n<p>(I also adjusted the precedences a little bit to avoid ambiguous parse<br>\ntrees)</p>\n<p>However, I would also suggest to reconsider whether you really need that<br>\nmuch custom syntax. Syntax /can/ be useful to increase readability, but<br>\nin this case I'm not sure if it's not easier to just write e.g. \"Q a b\".</p>\n<p>Cheers,</p>\n<p>Manuel</p>",
        "id": 294760547,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661199333
    },
    {
        "content": "<p>From: Christopher Hoskin &lt;<a href=\"mailto:christopher.hoskin@gmail.com\">christopher.hoskin@gmail.com</a>&gt;<br>\nThanks. After experimenting a bit more I found I could move the definition of the quadratic operator to the body of the class as:</p>\n<p>definition quad :: \"'a ⇒ ('a ⇒ 'a)\" (\"Q _ \" [100] 900) where \"(Q a) b = ⦃ a b a ⦄\"</p>\n<p>(A more standard notation would be Q(a)b rather than (Q a) b, but this caused a Type unification error.)</p>\n<p>Isabelle can then correctly prove:</p>\n<p>lemma cube1:<br>\n  assumes \"tripotent u\"<br>\n  shows \"( Q(u) ∘ Q(u) ∘ Q(u) ) a = (Q u) a\"</p>\n<p>However, what I'd then like to conclude is:</p>\n<p>lemma cube2:<br>\n  assumes \"tripotent u\"<br>\n  shows \"Q(u) ∘ Q(u)  ∘ Q(u) = Q(u)\"</p>\n<p>which I was hoping would be an immediate consequence of fun_eq_iff from HOL.thy, but it seems not?</p>\n<p>Thanks for any pointers you can give.</p>\n<p>Christopher</p>",
        "id": 294760583,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661199356
    }
]