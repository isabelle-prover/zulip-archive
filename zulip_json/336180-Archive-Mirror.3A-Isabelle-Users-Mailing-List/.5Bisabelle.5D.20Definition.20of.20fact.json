[
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nI noticed that ‘fact’ (the factorail function) is defined as</p>\n<p>fun fact :: \"nat ⇒ ('a::semiring_char_0)\"</p>\n<p>as opposed to</p>\n<p>fun (in semiring_char_0) fact :: \"nat ⇒ 'a\"<br>\n   where \"fact 0 = 1\" | \"fact (Suc n) = of_nat (Suc n) * fact n\"</p>\n<p>There are similar issues with some other constants like exp and <br>\nhas_derivative that make it impossible to use fact/exp/has_derivative <br>\netc. inside type class assumptions.</p>\n<p>Is there an actual reason for this? If not, I think this should be changed.</p>\n<p>Cheers,</p>\n<p>Manuel</p>",
        "id": 294656729,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661168339
    },
    {
        "content": "<p>From: Johannes Hölzl &lt;<a href=\"mailto:hoelzl@in.tum.de\">hoelzl@in.tum.de</a>&gt;<br>\nFor functions like 'fact' and 'exp' it is possible to define it in the<br>\nlocale of the type class. Here it is welcomed to change.</p>\n<p>Unfortunately, for has_derivative this is not possible, as it is defined<br>\nbetween two types.</p>\n<ul>\n<li>Johannes</li>\n</ul>",
        "id": 294658204,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661168904
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\n(This is an underground part of the thread, resurfaced.)</p>\n<p>Which documentation do you mean, \"isar-ref\" or \"locales\"?  Things can be <br>\nonly improved when the authors of relevant sections know about it.</p>\n<p>Makarius</p>",
        "id": 294659980,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661169556
    }
]