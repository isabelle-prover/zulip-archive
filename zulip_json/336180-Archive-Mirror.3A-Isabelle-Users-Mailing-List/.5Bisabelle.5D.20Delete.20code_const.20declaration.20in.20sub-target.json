[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nI have set up the code generator with code_const and code_type to use the type and <br>\noperations from the SML standard basis library, namely the Word16 structure. <br>\nUnfortunately, PolyML does not provide this optional structure, so I would like to <br>\nconfigure the Eval target of the code generator such that the code generator forgets about <br>\nthese configurations from the super-target SML and uses the Isabelle code equations for <br>\nevaluation. How can I delete a code_const / code_type declaration in a sub-target? None of <br>\nthe following seems worked:</p>\n<ol>\n<li>\n<p>code_type ... (Eval \"\")<br>\n   raises Match in code_printer.ML upon export_code</p>\n</li>\n<li>\n<p>code_type ... (Eval -)<br>\n   (inspired by the Haskell code_instance example in the code generator tutorial)<br>\n   gives an outer syntax error at -</p>\n</li>\n<li>\n<p>code_type ... (Eval \"-\")<br>\n   raises Match in code_printer.ML upon value [code]</p>\n</li>\n</ol>\n<p>Andreas</p>",
        "id": 294247671,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660909548
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Andreas,</p>\n<p>Indeed.  I will consider multi-inheritance for code targets, but not in<br>\nthe near future.  In the meanwhile maybe it's best to clone the target<br>\nsetup from Heap_Monad.thy for a target SML_word_imp.</p>\n<p>Hope this helps,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/__Cp9KLUxRnTXaQTJh0z7kyH/signature.asc\">signature.asc</a></p>",
        "id": 294247691,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660909561
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Andreas,</p>\n<p>How can I delete a code_const / code_type<br>\nthe short answer is: that is not possible – it's the ancient issue that<br>\nmonotonicity does not go well along with deletions.</p>\n<p>Concerning your problem, I would recommend to setup a separate target<br>\ne.g. »SML_word« derived from »SML« (see Imperative-HOL for examples).<br>\nThis is IMHO even the cleaner approach, because target setup for »SML«<br>\nshould not rely on anything not in PolyML.</p>\n<p>Hope this helps,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/aVtzREalpp_pvAoe2_C61KfV/signature.asc\">signature.asc</a></p>",
        "id": 294249242,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660910115
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Florian,</p>\n<p>Thanks for the suggestion with a separate sub-target. Before I go that way, I would like <br>\nto double check that I understand the implications. AFAIK the targets in the code <br>\ngenerator are arranged in an inheritance tree, i.e., one cannot \"merge\" different setups. <br>\nSo, if I introduce such a target SML_word, then I won't be able to use the Imperative_HOL <br>\nvariant SML_imp. Right?</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 294250419,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660910513
    }
]