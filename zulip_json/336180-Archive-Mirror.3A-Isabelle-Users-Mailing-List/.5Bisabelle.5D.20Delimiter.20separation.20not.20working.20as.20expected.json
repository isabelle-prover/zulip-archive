[
    {
        "content": "<p>From: Wolfgang Jeltsch &lt;<a href=\"mailto:wolfgang-it@jeltsch.info\">wolfgang-it@jeltsch.info</a>&gt;<br>\nHi!</p>\n<p>Say I have the following declaration of a notation:</p>\n<p>notation False (‹†' ‡›)</p>\n<p>Strangely, neither the term ‹† ‡› not the term ‹†‡› is accepted<br>\nafterwards. If I remove the apostrophe from the mixfix declaration, both<br>\nterms are accepted.</p>\n<p>What’s the reason for this behavior? In my opinion, whether the<br>\napostrophe is present or absent shouldn’t make any difference for<br>\nparsing.</p>\n<p>I’m using Isabelle2019.</p>\n<p>All the best,<br>\nWolfgang</p>",
        "id": 294824736,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243878
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI don't understand the \"opinion\". Is this based on the documentation (isar-ref<br>\nmanual section 8.2.1)?</p>\n<p>A single quote escapes the next meta character, but a space is not allowed<br>\nhere. So this is an undefined case, and there should probably be a better<br>\nerror instead of just documentation.</p>\n<p>Maybe you actually intended to do the following:</p>\n<p>notation False (‹†()‡›)</p>\n<p>Now you get two separate delimiters, and the whitespace becomes optional for<br>\ninput.</p>\n<p>Makarius</p>",
        "id": 294824912,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243964
    },
    {
        "content": "<p>From: Wolfgang Jeltsch &lt;<a href=\"mailto:wolfgang-it@jeltsch.info\">wolfgang-it@jeltsch.info</a>&gt;<br>\nAm Donnerstag, den 12.03.2020, 22:10 +0100 schrieb Makarius:</p>\n<blockquote>\n<p>On 07/03/2020 02:20, Wolfgang Jeltsch wrote:</p>\n<blockquote>\n<p>Say I have the following declaration of a notation:</p>\n<p>notation False (‹†' ‡›)</p>\n<p>Strangely, neither the term ‹† ‡› not the term ‹†‡› is accepted<br>\nafterwards. If I remove the apostrophe from the mixfix declaration, <br>\nboth terms are accepted.</p>\n<p>What’s the reason for this behavior? In my opinion, whether the<br>\napostrophe is present or absent shouldn’t make any difference for<br>\nparsing.</p>\n</blockquote>\n<p>I don't understand the \"opinion\". Is this based on the documentation<br>\n(isar-ref manual section 8.2.1)?</p>\n</blockquote>\n<p>Yes. It says:</p>\n<blockquote>\n<p>A single quote followed by a blank separates delimiters, without<br>\naffecting printing, but input tokens may have additional white space<br>\nhere.</p>\n</blockquote>\n<blockquote>\n<p>Maybe you actually intended to do the following:</p>\n<p>notation False (‹†()‡›)</p>\n<p>Now you get two separate delimiters, and the whitespace becomes<br>\noptional for input.</p>\n</blockquote>\n<p>A had been considering this. However, I wasn’t sure about unintended<br>\nconsequences. The parentheses would introduce an empty “pretty-printing<br>\nblock”. Would this mean the pretty printer could insert a line break<br>\nthere?</p>\n<p>All the best,<br>\nWolfgang</p>",
        "id": 294825017,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243998
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 13/03/2020 00:56, Wolfgang Jeltsch wrote:</p>\n<blockquote>\n<p>Am Donnerstag, den 12.03.2020, 22:10 +0100 schrieb Makarius:</p>\n<blockquote>\n<p>On 07/03/2020 02:20, Wolfgang Jeltsch wrote:</p>\n<blockquote>\n<p>Say I have the following declaration of a notation:</p>\n<p>notation False (‹†' ‡›)</p>\n<p>Strangely, neither the term ‹† ‡› not the term ‹†‡› is accepted<br>\nafterwards. If I remove the apostrophe from the mixfix declaration, <br>\nboth terms are accepted.</p>\n<p>What’s the reason for this behavior? In my opinion, whether the<br>\napostrophe is present or absent shouldn’t make any difference for<br>\nparsing.</p>\n</blockquote>\n<p>I don't understand the \"opinion\". Is this based on the documentation<br>\n(isar-ref manual section 8.2.1)?</p>\n</blockquote>\n<p>Yes. It says:</p>\n<blockquote>\n<p>A single quote followed by a blank separates delimiters, without<br>\naffecting printing, but input tokens may have additional white space<br>\nhere.</p>\n</blockquote>\n</blockquote>\n<p>You are right. This text has been there since Feb-1995 with implementation of<br>\nthe feature, but it was never used and accidentally destroyed in Mar-1998. The<br>\nrelevant changesets are as follows (by myself!):</p>\n<p><a href=\"https://isabelle-dev.sketis.net/rISABELLE55754d6d399c\">https://isabelle-dev.sketis.net/rISABELLE55754d6d399c</a></p>\n<p><a href=\"https://isabelle-dev.sketis.net/rISABELLEbe8a8d60d962\">https://isabelle-dev.sketis.net/rISABELLEbe8a8d60d962</a></p>\n<p>The latter talks about \"baroque chars\" in the wrong spelling. The concept is<br>\nnow known as \"Isabelle symbols\" and has served us very well since its<br>\nintroduction in 1998.</p>\n<blockquote>\n<blockquote>\n<p>Maybe you actually intended to do the following:</p>\n<p>notation False (‹†()‡›)</p>\n<p>Now you get two separate delimiters, and the whitespace becomes<br>\noptional for input.</p>\n</blockquote>\n<p>A had been considering this. However, I wasn’t sure about unintended<br>\nconsequences. The parentheses would introduce an empty “pretty-printing<br>\nblock”. Would this mean the pretty printer could insert a line break<br>\nthere?</p>\n</blockquote>\n<p>The empty-block technique has been standard for more than 20 years. There is<br>\nno problem to insert such a dummy into the pretty tree: breaks cannot happen<br>\nunless you say so (via \"/\" in the mixfix template).</p>\n<p>Nonetheless, I have now made another change for Isabelle2020 to reactivate<br>\nthis ancient detail. See now:</p>\n<p><a href=\"https://isabelle-dev.sketis.net/rISABELLEb0b16088ccf2\">https://isabelle-dev.sketis.net/rISABELLEb0b16088ccf2</a></p>\n<p>As a consequence, a trailing single quote is no longer included in delimiter<br>\nby accident, but needs to be escaped as documented. E.g. see:</p>\n<p><a href=\"https://isabelle-dev.sketis.net/rISABELLEd350aabace23\">https://isabelle-dev.sketis.net/rISABELLEd350aabace23</a></p>\n<p>Overall these single quotes are a bit odd, stemming from a time of ASCII-art.<br>\nAfter the Isabelle2020 release, I will revisit that eventually and provide a<br>\nmore contemporary solution, e.g. like this via the \\&lt;^verbatim&gt; control symbol:</p>\n<p>notation False  (‹▩‹†›▩‹‡››)</p>\n<p>Thus we could even discontinue the single quote as a mixfix meta character<br>\nlater on.</p>\n<p>Makarius</p>",
        "id": 294825089,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661244010
    }
]