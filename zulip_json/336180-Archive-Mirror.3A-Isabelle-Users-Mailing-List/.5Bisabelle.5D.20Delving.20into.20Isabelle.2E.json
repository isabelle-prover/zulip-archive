[
    {
        "content": "<p>From: Layus &lt;<a href=\"mailto:layus.on@gmail.com\">layus.on@gmail.com</a>&gt;<br>\nHi,  </p>\n<p>I am currently trying to get a grasp at the internals of Isabelle.  <br>\nI would like to expose some higher order unification within a proof.  </p>\n<p>I started with some simple theorem.  </p>\n<p>theorem Isa : \"? P. ( P x &amp; P y )\"  <br>\n  apply (intro exI)  <br>\n  apply (intro conjI)  <br>\n  using [[simp_trace]]  <br>\n  apply simp  <br>\n  apply eval (* anything solves True *)  <br>\ndone  </p>\n<p>This behaves as expected, and shows second order unification,  <br>\nbut I cannot see how the simp tactic gets rid of my first subgoal.  </p>\n<p>To state it in another way :  <br>\nWhat is the magic in HOL that is able to simplify \"?P x\" into a proven<br>\nsubgoal.  </p>\n<p>The trace shows nothing except that the second goal changes from \"?P x\" to<br>\n\"True\",  <br>\nwhich means that somehow \"P\" got unified with \"%x . True\".  </p>\n<p>Any pointer would be welcome.  </p>\n<p>Best regards,  <br>\nGuillaume.</p>",
        "id": 294228928,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901418
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nAm 16/12/2012 02:24, schrieb Layus:</p>\n<blockquote>\n<p>Hi,</p>\n<p>I am currently trying to get a grasp at the internals of Isabelle.<br>\nI would like to expose some higher order unification within a proof.</p>\n<p>I started with some simple theorem.</p>\n<p>theorem Isa : \"? P. ( P x &amp; P y )\" <br>\n  apply (intro exI)<br>\n  apply (intro conjI)<br>\n  using [[simp_trace]]<br>\n  apply simp<br>\n  apply eval (* anything solves True *)<br>\ndone</p>\n<p>This behaves as expected, and shows second order unification,<br>\nbut I cannot see how the simp tactic gets rid of my first subgoal.</p>\n<p>To state it in another way :<br>\nWhat is the magic in HOL that is able to simplify \"?P x\" into a proven subgoal.</p>\n</blockquote>\n<p>At the end of the simplification process, the simplifier tries to solve the goal<br>\nby some trivial means, for example by unifying it with True.</p>\n<p>Tobias</p>\n<blockquote>\n<p>The trace shows nothing except that the second goal changes from \"?P x\" to \"True\",<br>\nwhich means that somehow \"P\" got unified with \"%x . True\".</p>\n<p>Any pointer would be welcome.</p>\n<p>Best regards,<br>\nGuillaume.</p>\n</blockquote>",
        "id": 294228943,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901425
    }
]