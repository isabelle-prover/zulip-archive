[
    {
        "content": "<p>From: \"W. Douglas Maurer\" &lt;<a href=\"mailto:maurer@gwu.edu\">maurer@gwu.edu</a>&gt;<br>\nOn 22 Apr 2015, Alfio Martini &lt;<a href=\"mailto:alfio.martini@acm.org\">alfio.martini@acm.org</a>&gt; wrote:</p>\n<blockquote>\n<p>While trying to prove the correctness of a simple function that returns<br>\nthe sum of the values between integers  l and u, I stumbled upon<br>\nan unexpected problem: I was not able to prove that</p>\n<p>(Sum k=l..(u+1). k) = (u+1) + (Sum k=l...u) if l&lt;u+1, which should<br>\nhold by the definition of an indexed sum.</p>\n</blockquote>\n<p>I asked this question on March 6th, 2015, in the following more general form:</p>\n<blockquote>\n<p>I am having problems with forward proofs by induction. I would like <br>\nfor Isar to be able to prove that 1+4+9+...+n*n = <br>\n(n<em>(n+1)</em>(2*n+1))/6 and the like. In order to do the inductive <br>\nproof, I have to know that m&lt;=n implies (f(m)+f(m+1)+...+f(n+1)) = <br>\n(f(m)+f(m+1)+...+f(n))+f(n+1), for integers m and n. In Isar, this <br>\nbecomes that m&lt;=n implies (setsum f {m..n+1} = (setsum f {m..n}) + <br>\nf(n+1)). This would seem to be a fundamental rule, and yet I cannot <br>\nseem to find it anywhere in either the library or the supplemental <br>\nlibrary.</p>\n</blockquote>\n<p>This appeared in Cl-isabelle-users Digest, Vol 117, Issue 10, #6, and <br>\nAndreas Lochbihler replied to it as follows:</p>\n<blockquote>\n<p>There are far fewer theorems about setsum over intervals of integers <br>\nthan over natural numbers. Still, there are enough theorems in the <br>\nlibrary to prove what you want. Sledgehammer finds the following <br>\nproof for me:</p>\n<p>lemma \"m ? n ? setsum f {m..n + 1} = setsum f {m..n} + f (n + 1 :: int)\"<br>\nby(metis add.commute atLeastAtMostPlus1_int_conv<br>\n          atLeastLessThanPlusOne_atLeastAtMost_int atLeastLessThan_iff<br>\n          finite_atLeastAtMost_int linear not_less setsum.insert <br>\nzle_add1_eq_le)</p>\n<p>Hope this helps,<br>\nAndreas</p>\n</blockquote>\n<p>This appeared in Cl-isabelle-users Digest, Vol 117, Issue 10, #7.</p>",
        "id": 294636002,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661160153
    },
    {
        "content": "<p>From: Alfio Martini &lt;<a href=\"mailto:alfio.martini@acm.org\">alfio.martini@acm.org</a>&gt;<br>\nHi Douglas,</p>\n<p>I followed that discussion very closely. In fact, from those messages<br>\nI took the idea of structuring the proof that I emailed in a previous<br>\nthy file in this thread. Somehow I have missed this particular remark<br>\nfrom Andreas who is,  amongst many other experts in this list,<br>\nalways very helpful.</p>\n<p>There are far fewer theorems about setsum over intervals of integers than</p>",
        "id": 294636013,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661160158
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThere is Isabelle2015-RC1 already, to try if the situation has improved. <br>\nIf not, we also need a bit of information about your hardware and <br>\noperating system version.</p>\n<p>I am not aware of any such problems in Isabelle2014 or Isabelle2015-RC1, <br>\nso unless there are tangible problem reports, the problems don't exist.</p>\n<p>Makarius</p>",
        "id": 294636040,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661160176
    },
    {
        "content": "<p>From: Alfio Martini &lt;<a href=\"mailto:alfio.martini@acm.org\">alfio.martini@acm.org</a>&gt;<br>\nHi Makarius,</p>\n<p>There is Isabelle2015-RC1 already, to try if the situation has improved. If</p>\n<blockquote>\n<p>not, we also need a bit of information about your hardware and operating<br>\nsystem version.<br>\nI am not aware of any such problems in Isabelle2014 or Isabelle2015-RC1,<br>\nso unless there are tangible problem reports, the problems don't exist.</p>\n</blockquote>\n<p>My machine (laptop) configuration:</p>\n<p>Operating System: Windows 8.1, 64-bit operating system<br>\nRam Memory: 8GB<br>\nProcessor: intel i5-3230M, 64 bit processor</p>\n<p>Lemmas I tried with sledgehammer</p>\n<p>lemma \"[a] = [b] ⟹ a = b\" oops<br>\nlemma aux: \"m &lt; n+1 ⟹setsum f {m..n + 1} = setsum f {m..n} + f (n + 1 ::<br>\nint)\"<br>\noops</p>\n<p>When I run the theory file (attached) with Isabelle2015-RC1 I get the<br>\nfollowing messages in the output window:</p>\n<p>Sledgehammering...</p>\n<blockquote>\n<p>\"remote_vampire\": Error: SystemOnTPTP is not available.</p>\n<p>\"spass\": Timed out.<br>\n\"cvc4\": Timed out.<br>\n\"z3\": Timed out</p>\n</blockquote>\n<p>And with Isabelle2014, similar messages appear:</p>\n<p>\"remote_vampire\": Error: SystemOnTPTP is not available.</p>\n<blockquote>\n<p>\"z3\": Timed out.<br>\n\"e\": Timed out.<br>\n\"spass\": Timed out.</p>\n</blockquote>\n<p>One information might be useful: Usually (but not always) I have to exit<br>\nChrome before starting<br>\nIsabelle 2014 or Isabelle 2015-RC1. Otherwise I get the error message:<br>\n\"error starting  Java VM\".</p>\n<p>Thank you in advance for any help with this. I never complained before<br>\nabout this because I always felt guilty when using sledgehammer. I had the<br>\nimpression<br>\nthat I did not wanted to work hard enough. That I was cheating.<br>\nBut that feeling of guilt does not exists anymore. Hopefully it is not<br>\nbecause<br>\nI gave up working hard.</p>\n<p>Best!</p>\n<p>On Thu, Apr 23, 2015 at 6:28 AM, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n<blockquote>\n<p>On Wed, 22 Apr 2015, Alfio Martini wrote:</p>\n<p>I use the Windows installation of  Isabelle 2014 and my sledgehammer</p>\n<blockquote>\n<p>installation does not find any proof for this lemma. Actually, it never<br>\nfinds any proof whatsoever. I have just realized that it does not solve<br>\neven that lemma in section 3 (First Steps) of the Sledgehammer tutorial. I<br>\nhave always used Sledgehammer as it is packaged. I just set z3<br>\nnon-commercial<br>\nuse to \"yes\". The prover \"remote-vampire\" is never available (literally),<br>\nwhile e, spass and z3 always time out.</p>\n<p>I will have to take a look into this. This is really making may Isabelle<br>\nexperience miserable  at the moment.<br>\n</p>\n</blockquote>\n<p>There is Isabelle2015-RC1 already, to try if the situation has improved.<br>\nIf not, we also need a bit of information about your hardware and operating<br>\nsystem version.</p>\n<p>I am not aware of any such problems in Isabelle2014 or Isabelle2015-RC1,<br>\nso unless there are tangible problem reports, the problems don't exist.</p>\n<p>Makarius</p>\n</blockquote>",
        "id": 294636152,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661160219
    },
    {
        "content": "<p>From: Alfio Martini &lt;<a href=\"mailto:alfio.martini@acm.org\">alfio.martini@acm.org</a>&gt;<br>\nForgot to attatch the theory file.<br>\n---------- Forwarded message ----------<br>\nFrom: Alfio Martini &lt;<a href=\"mailto:alfio.martini@acm.org\">alfio.martini@acm.org</a>&gt;<br>\nDate: Thu, Apr 23, 2015 at 4:01 PM<br>\nSubject: Re: [isabelle] Difficulties with \"setsum\" (Alfio Martini)<br>\nTo: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;, \"<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>\" &lt;<br>\n<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;</p>\n<p>Hi Makarius,</p>\n<p>There is Isabelle2015-RC1 already, to try if the situation has improved. If</p>\n<blockquote>\n<p>not, we also need a bit of information about your hardware and operating<br>\nsystem version.<br>\nI am not aware of any such problems in Isabelle2014 or Isabelle2015-RC1,<br>\nso unless there are tangible problem reports, the problems don't exist.</p>\n</blockquote>\n<p>My machine (laptop) configuration:</p>\n<p>Operating System: Windows 8.1, 64-bit operating system<br>\nRam Memory: 8GB<br>\nProcessor: intel i5-3230M, 64 bit processor</p>\n<p>Lemmas I tried with sledgehammer</p>\n<p>lemma \"[a] = [b] ⟹ a = b\" oops<br>\nlemma aux: \"m &lt; n+1 ⟹setsum f {m..n + 1} = setsum f {m..n} + f (n + 1 ::<br>\nint)\"<br>\noops</p>\n<p>When I run the theory file (attached) with Isabelle2015-RC1 I get the<br>\nfollowing messages in the output window:</p>\n<p>Sledgehammering...</p>\n<blockquote>\n<p>\"remote_vampire\": Error: SystemOnTPTP is not available.</p>\n<p>\"spass\": Timed out.<br>\n\"cvc4\": Timed out.<br>\n\"z3\": Timed out</p>\n</blockquote>\n<p>And with Isabelle2014, similar messages appear:</p>\n<p>\"remote_vampire\": Error: SystemOnTPTP is not available.</p>\n<blockquote>\n<p>\"z3\": Timed out.<br>\n\"e\": Timed out.<br>\n\"spass\": Timed out.</p>\n</blockquote>\n<p>One information might be useful: Usually (but not always) I have to exit<br>\nChrome before starting<br>\nIsabelle 2014 or Isabelle 2015-RC1. Otherwise I get the error message:<br>\n\"error starting  Java VM\".</p>\n<p>Thank you in advance for any help with this. I never complained before<br>\nabout this because I always felt guilty when using sledgehammer. I had the<br>\nimpression<br>\nthat I did not wanted to work hard enough. That I was cheating.<br>\nBut that feeling of guilt does not exists anymore. Hopefully it is not<br>\nbecause<br>\nI gave up working hard.</p>\n<p>Best!</p>\n<p>On Thu, Apr 23, 2015 at 6:28 AM, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n<blockquote>\n<p>On Wed, 22 Apr 2015, Alfio Martini wrote:</p>\n<p>I use the Windows installation of  Isabelle 2014 and my sledgehammer</p>\n<blockquote>\n<p>installation does not find any proof for this lemma. Actually, it never<br>\nfinds any proof whatsoever. I have just realized that it does not solve<br>\neven that lemma in section 3 (First Steps) of the Sledgehammer tutorial. I<br>\nhave always used Sledgehammer as it is packaged. I just set z3<br>\nnon-commercial<br>\nuse to \"yes\". The prover \"remote-vampire\" is never available (literally),<br>\nwhile e, spass and z3 always time out.</p>\n<p>I will have to take a look into this. This is really making may Isabelle<br>\nexperience miserable  at the moment.<br>\n</p>\n</blockquote>\n<p>There is Isabelle2015-RC1 already, to try if the situation has improved.<br>\nIf not, we also need a bit of information about your hardware and operating<br>\nsystem version.</p>\n<p>I am not aware of any such problems in Isabelle2014 or Isabelle2015-RC1,<br>\nso unless there are tangible problem reports, the problems don't exist.</p>\n<p>Makarius</p>\n</blockquote>\n<p>-- <br>\nAlfio Ricardo Martini<br>\nPhD in Computer Science (TU Berlin)<br>\nAssociate Professor at Faculty of Informatics (PUCRS)<br>\n<a href=\"http://www.inf.pucrs.br/alfio\">www.inf.pucrs.br/alfio</a><br>\nAv. Ipiranga, 6681 - Prédio 32 - Faculdade de Informática<br>\n90619-900 -Porto Alegre - RS - Brasil</p>\n<p>-- <br>\nAlfio Ricardo Martini<br>\nPhD in Computer Science (TU Berlin)<br>\nAssociate Professor at Faculty of Informatics (PUCRS)<br>\n<a href=\"http://www.inf.pucrs.br/alfio\">www.inf.pucrs.br/alfio</a><br>\nAv. Ipiranga, 6681 - Prédio 32 - Faculdade de Informática<br>\n90619-900 -Porto Alegre - RS - Brasil<br>\n<a href=\"/user_uploads/14278/JPfSUWPgQTpRZoEUoxaDwByU/SledgeFail.thy\">SledgeFail.thy</a></p>",
        "id": 294636169,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661160228
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Thu, 23 Apr 2015, Alfio Martini wrote:</p>\n<blockquote>\n<p>My machine (laptop) configuration:</p>\n<p>Operating System: Windows 8.1, 64-bit operating system<br>\nRam Memory: 8GB<br>\nProcessor: intel i5-3230M, 64 bit processor</p>\n</blockquote>\n<p>Fine so far.  It is an up-to-date low-end machine and should work without <br>\nproblems, at least in theory.</p>\n<blockquote>\n<p>Lemmas I tried with sledgehammer</p>\n<p>lemma \"[a] = [b] ⟹ a = b\" oops<br>\nlemma aux: \"m &lt; n+1 ⟹setsum f {m..n + 1} = setsum f {m..n} + f (n + 1 ::<br>\nint)\"<br>\noops</p>\n<p>When I run the theory file (attached) with Isabelle2015-RC1 I get the<br>\nfollowing messages in the output window:</p>\n<p>Sledgehammering...</p>\n<blockquote>\n<p>\"remote_vampire\": Error: SystemOnTPTP is not available.</p>\n<p>\"spass\": Timed out.<br>\n\"cvc4\": Timed out.<br>\n\"z3\": Timed out</p>\n</blockquote>\n</blockquote>\n<p>I've tried this with Isabelle2015-RC2.  It is generally better to test <br>\nsledgehammer with these parameters:</p>\n<p>sledgehammer_params [dont_try0]</p>\n<p>Doing that, it basically works for me (on 12 cores), but cvc4 breaks down <br>\nas follows:</p>\n<p>SMT: Result:<br>\n     (error \"Error in option parsing: option `produce-unsat-cores' requires a proofs-enabled build of CVC4; this binary was not built with proof support\")<br>\n   \"cvc4\": A prover error occurred:<br>\n   Solver \"cvc4\" failed -- enable tracing using the \"smt_trace\" option for details</p>\n<p>This means there is something wrong with the bundled cvc4 component, and <br>\nJasmin needs to look at it.</p>\n<p>Makarius</p>",
        "id": 294636428,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661160329
    },
    {
        "content": "<p>From: Alfio Martini &lt;<a href=\"mailto:alfio.martini@acm.org\">alfio.martini@acm.org</a>&gt;<br>\nHi Makarius  and Jasmim,</p>\n<p>Even with dont_try0 as a sledgehammer parameter, I get the same old timeout<br>\nresults both<br>\nwith Isa2014 and Isa2015-RC1. I haven´t tried with Isa2015RC2 yet,</p>\n<p>Best!.</p>",
        "id": 294636445,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661160337
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@inria.fr\">jasmin.blanchette@inria.fr</a>&gt;<br>\nHi Makarius,</p>\n<p>It turns out the Windows binary is compiled without proof output. CVC4’s predecessor, CVC3, used to only work in that mode, but CVC4 now supports unsat core output (i.e. it can print the list of used axioms for a proof, which is useful to Sledgehammer). Unfortunately, the CVC4 developers compile out proof output from CVC4.</p>\n<p>The ultimate solution will be to build a proper binary for CVC4 for Windows, but I’m currently not in a position to do it. (I need to get a Windows license first etc., and I’m not at the lab next week.)</p>\n<p>What I have to offer instead is less efficient: brute-force minimization. This is what we used to do with CVC3 and Yices. It works surprisingly well, esp. that CVC4 is blindingly fast. Please apply the following exported patch to “isabelle-release”.</p>\n<p>Thanks,</p>\n<p>Jasmin<br>\n<a href=\"/user_uploads/14278/13a3423lW7kD-CodvrsTpnIs/cvc4.export\">cvc4.export</a></p>",
        "id": 294636473,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661160352
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThat CPU has 2 cores and hyperthreading, i.e. 4 virtual cores.  Can you <br>\ntry this:</p>\n<p>ML \"Multithreading.max_threads_value ()\"</p>\n<p>There is some chance that it gives 4, because Cygwin is not reliable in <br>\nreporting virtual CPU cores.  Since starting external processes in <br>\nparallel imposes an extra load on Cygwin, it might explain the timeout of <br>\nthe provers.</p>\n<p>The Isabelle/jEdit plugin options offer the possibility to set \"threads\" <br>\nexplicitly, e.g. to 2.  Does this change the situation?</p>\n<p>Makarius</p>",
        "id": 294636476,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661160354
    },
    {
        "content": "<p>From: Alfio Martini &lt;<a href=\"mailto:alfio.martini@acm.org\">alfio.martini@acm.org</a>&gt;<br>\nHi Makarius,</p>\n<p>At least I got some progress, yet the overall situation is still far from<br>\nideal.</p>\n<p>I got the best results with Threads=1 (instead of the default 0). \"ML<br>\nMultithreading...\" returns 4.<br>\nFollowing your suggestions, here is the summary of my tests with 2014, RC1<br>\nand RC2.</p>\n<p>It seems that 2014 is the best option so far. So what is next?</p>\n<p>Best!</p>\n<hr>\n<p>Isabelle  2014<br>\nsledgehammer_params [dont_try0] (* can't be used, otherwise<br>\nsledgehammer runs forever and can't be canceled. I had to kill<br>\nIsabelle *)</p>\n<p>Num. Threads = 1</p>\n<p>lemma \"[a] = [b] ==&gt; a = b\"<br>\n\"e\": Try this: by (metis the_elem_set) (13 ms).<br>\n\"spass\": Timed out.<br>\n\"remote_vampire\": Try this: by (metis list.inject) (15 ms).<br>\n\"z3\": Try this: by (metis list.inject) (19 ms).</p>\n<p>lemma aux: \"m &lt; n+1 ==&gt; setsum f {m..n + 1} =<br>\n    setsum f {m..n} + f (n + 1 :: int)\"<br>\n\"e\": Timed out.<br>\n\"spass\": Timed out.<br>\n\"remote_vampire\": Timed out.<br>\n\"z3\": Timed out.</p>\n<hr>\n<p>Isabelle RC1<br>\nsledgehammer_params [dont_try0] (* mandatory *)<br>\nNum. Threads = 1</p>\n<p>lemma \"[a] = [b] ==&gt; a = b\"</p>\n<p>\"cvc4\": Timed out.<br>\n\"remote_vampire\": Try this: by (metis list.inject) (63 ms).<br>\n\"z3\": Try this: by (metis list.inject) (63 ms).<br>\n\"spass\": Try this: by (metis list.inject) (31 ms).<br>\n\"e\": Try this: by (metis the_elem_set) (62 ms).</p>\n<p>lemma aux: \"m &lt; n+1 ==&gt; setsum f {m..n + 1} =<br>\n    setsum f {m..n} + f (n + 1 :: int)\"<br>\n\"cvc4\": A prover error occurred:<br>\nSolver \"cvc4\" failed -- enable tracing using the \"smt_trace\" option for<br>\ndetails<br>\n\"remote_vampire\": Timed out.<br>\n\"z3\": Timed out.<br>\n\"spass\": Timed out.<br>\n\"e\": Timed out.</p>\n<hr>\n<p>Isabelle RC2<br>\nsledgehammer_params [dont_try0] (* mandatory *)<br>\nNum_Threads = 1</p>\n<p>lemma \"[a] = [b] ==&gt; a = b\"</p>\n<p>\"cvc4\": A prover error occurred:<br>\nSolver \"cvc4\" failed -- enable tracing using the \"smt_trace\" option for<br>\ndetails<br>\n\"remote_vampire\": Try this: by (metis list.inject) (63 ms).<br>\n\"z3\": Try this: by (metis list.inject) (47 ms).<br>\n\"spass\": Timed out.<br>\n\"e\": Try this: by (metis append_Cons append_Nil list.inject) (62 ms).</p>\n<p>lemma aux: \"m &lt; n+1 ==&gt; setsum f {m..n + 1} =<br>\n    setsum f {m..n} + f (n + 1 :: int)\"<br>\n\"cvc4\": A prover error occurred:<br>\nSolver \"cvc4\" failed -- enable tracing using the \"smt_trace\" option for<br>\ndetails<br>\n\"remote_vampire\": Timed out.<br>\n\"z3\": Timed out.<br>\n\"spass\": Timed out.<br>\n\"e\": Timed out.</p>",
        "id": 294636487,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661160360
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nNext you can try the adhoc snapshot <br>\n<a href=\"http://www4.in.tum.de/~wenzelm/unofficial/Isabelle_25-Apr-2015\">http://www4.in.tum.de/~wenzelm/unofficial/Isabelle_25-Apr-2015</a> -- it <br>\ncontains the change of CVC4 by Jasmin, and a checkbox to control the <br>\n\"try0\" or \"dont_try0\" option in the Sledgehammer panel.</p>\n<p>Your SledgeFail.thy contains two examples:</p>\n<p>lemma \"[a] = [b] ⟹ a = b\"</p>\n<p>lemma \"m &lt; n + 1 ⟹ setsum f {m..n + 1} = setsum f {m..n} + f (n + 1 :: int)\"</p>\n<p>The first works smoothly for me with or without \"try methods\", both on <br>\nLinux and Windows.</p>\n<p>The second takes a bit longer to produce the following results (without <br>\n\"try methods\").  The following is on Linux:</p>\n<p>\"cvc4\": Try this: by (smt add.commute atLeastAtMostPlus1_int_conv atLeastAtMost_iff finite_atLeastAtMost_int setsum.insert) (122 ms).<br>\n\"e\": Try this: by (metis add.commute atLeastAtMostPlus1_int_conv atLeastLessThanPlusOne_atLeastAtMost_int atLeastLessThan_iff <br>\nfinite_atLeastAtMost_int less_irrefl setsum.insert zle_add1_eq_le zless_add1_eq) (761 ms).<br>\n\"z3\": Try this: by (smt add.commute atLeastAtMostPlus1_int_conv atLeastAtMost_iff finite_atLeastAtMost_int setsum.insert) (158 ms).<br>\n\"spass\": Timed out.<br>\n\"remote_vampire\": Timed out.</p>\n<p>This is on Windows 7, with sledgehammer_timeout = 60 (see plugin options):</p>\n<p>\"cvc4\": Try this: by (smt add.commute atLeastAtMostPlus1_int_conv atLeastAtMost_iff finite_atLeastAtMost_int setsum.insert) (203 ms).<br>\n\"remote_vampire\": Timed out.<br>\n\"spass\": Timed out.<br>\n\"z3\": Try this: by (smt add.commute atLeastAtMostPlus1_int_conv atLeastAtMost_iff finite_atLeastAtMost_int setsum.insert) (1.2 s).<br>\n\"e\": Timed out.</p>\n<p>That is less than nothing, although not as smooth as on a proper Unix <br>\nsystem.</p>\n<p>Do you have an extra virus checker that somehow delays external program <br>\nexecution?</p>\n<p>Makarius</p>",
        "id": 294636535,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661160366
    },
    {
        "content": "<p>From: Alfio Martini &lt;<a href=\"mailto:alfio.martini@acm.org\">alfio.martini@acm.org</a>&gt;<br>\nHi Makarius,</p>\n<p>First of all, many thanks for helping me working around this problem, and<br>\nduring the weekend!</p>\n<blockquote>\n<p>Do you have an extra virus checker that somehow delays external program<br>\nexecution?<br>\nGood point. I have found some obscure McAffe internet security software in<br>\nmy machine. I do not<br>\nknow  how it got there. I only use Avast. Anyway, I deleted and used time<br>\nout = 60.</p>\n</blockquote>\n<p>Now I solve the harder lemma both in Isabelle 2014 and Isabelle 2015-RC2. I<br>\nwill<br>\nremove cvc4 from the provers list until that bug is corrected. Things get<br>\nmuch faster<br>\nwithout it. In any case, sledgehammer seems to solve problems a lot faster<br>\nin Isabelle<br>\n2014  than in RC2. Who would expect that?</p>\n<p>Here are my results. Thanks a lot!</p>\n<p>Isabelle  2014<br>\nsledgehammer_params [dont_try0] (* can't be used, otherwise<br>\nsledgehammer runs forever and can't be canceled. I had to kill<br>\nIsabelle *)</p>\n<p>Num. Threads = 1</p>\n<p>lemma \"[a] = [b] ==&gt; a = b\"<br>\n\"e\": Try this: by (metis the_elem_set) (13 ms).<br>\n\"spass\": Timed out.<br>\n\"remote_vampire\": Try this: by (metis list.inject) (15 ms).<br>\n\"z3\": Try this: by (metis list.inject) (19 ms).</p>\n<p>lemma aux: \"m &lt; n+1 ==&gt; setsum f {m..n + 1} =<br>\n    setsum f {m..n} + f (n + 1 :: int)\"<br>\n\"e\": Try this: by (metis add.commute atLeastAtMostPlus1_int_conv<br>\natLeastAtMost_iff finite_atLeastAtMost_int linorder_not_less set_upto<br>\nsetsum.insert zle_add1_eq_le zless_add1_eq) (1.15 s).<br>\n\"spass\": Timed out.<br>\n\"remote_vampire\": Timed out.<br>\n\"z3\": Timed out.</p>\n<hr>\n<p>Isabelle RC2<br>\nsledgehammer_params [dont_try0] (* mandatory *)<br>\ntimeout = 60<br>\nNum_Threads = 1</p>\n<p>lemma aux: \"m &lt; n+1 ==&gt; setsum f {m..n + 1} =<br>\n    setsum f {m..n} + f (n + 1 :: int)\"<br>\n\"cvc4\": A prover error occurred:<br>\nSolver \"cvc4\" failed -- enable tracing using the \"smt_trace\" option for<br>\ndetails<br>\n\"remote_vampire\": Timed out.<br>\n\"z3\": Try this: by (smt add.commute atLeastAtMostPlus1_int_conv<br>\natLeastAtMost_upto atLeastLessThanPlusOne_atLeastAtMost_int<br>\natLeastLessThan_iff finite_atLeastAtMost_int setsum.insert) (&gt; 1.0 s, timed<br>\nout).<br>\n\"spass\": Timed out.<br>\n\"e\": Timed out.</p>",
        "id": 294636550,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661160379
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThis is bounced back to isabelle-users.  I am actually not the expert on <br>\nsledgehammer, only the (sole?) maintainer of multiplatform support.</p>\n<p>Makarius</p>\n<p>---------- Forwarded message ----------<br>\nDate: Mon, 27 Apr 2015 17:28:24 -0300<br>\nFrom: Alfio Martini &lt;<a href=\"mailto:alfio.martini@acm.org\">alfio.martini@acm.org</a>&gt;<br>\nTo: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nSubject: Re: [isabelle] Difficulties with \"setsum\" (Alfio Martini)</p>\n<p>HI Makarius,</p>\n<p>Next you can try the adhoc snapshot</p>\n<blockquote>\n<p><a href=\"http://www4.in.tum.de/~wenzelm/unofficial/Isabelle_25-Apr-2015\">http://www4.in.tum.de/~wenzelm/unofficial/Isabelle_25-Apr-2015</a> -- it<br>\ncontains the change of CVC4 by Jasmin, and a checkbox to control the \"try0\"<br>\nor \"dont_try0\" option in the Sledgehammer panel.</p>\n</blockquote>\n<p>I have tried this snapshot version and it fails to solve that lemma about<br>\nindexed sums. All provers time out with  sledgehammer_params [dont_try0,<br>\ntimeout=60] .</p>\n<p>I set up Avast not consider any Isabelle directory, but I am sure that it<br>\nis not the problem. Meanwhile,<br>\nI installed a virtual machine with Linux Mint and installed Isabelle 2014.<br>\nSledgehammer works<br>\nreasonably well with Threads = 1, without try methods and with timeout=60,<br>\nespecially with<br>\nZ3, which seems to be the best of them by far. I will wait for<br>\nRC3 and test again with Windows &amp; Linux. In the worst case scenario, I will<br>\nuse Isabelle normally<br>\non Windows and if I need sledgehammer, then I will use it in my virtual<br>\nLinux installation. My God,<br>\nthe look and feel of Isabelle/jEdit in Linux it is not that pretty (to put<br>\nit mildly), especially if one is already used<br>\nto the Windows version.</p>\n<p>I am not sending these messages to the list anymore. It is just me that is<br>\nhaving this problem,<br>\nI think.</p>\n<p>Best!</p>\n<p>On Sat, Apr 25, 2015 at 5:48 PM, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n<blockquote>\n<p>On Sat, 25 Apr 2015, Alfio Martini wrote:</p>\n<p>At least I got some progress, yet the overall situation is still far from</p>\n<blockquote>\n<p>ideal.</p>\n<p>I got the best results with Threads=1 (instead of the default 0). \"ML<br>\nMultithreading...\" returns 4. Following your suggestions, here is the<br>\nsummary of my tests with 2014, RC1 and RC2.</p>\n<p>It seems that 2014 is the best option so far. So what is next?<br>\n</p>\n</blockquote>\n<p>Next you can try the adhoc snapshot<br>\n<a href=\"http://www4.in.tum.de/~wenzelm/unofficial/Isabelle_25-Apr-2015\">http://www4.in.tum.de/~wenzelm/unofficial/Isabelle_25-Apr-2015</a> -- it<br>\ncontains the change of CVC4 by Jasmin, and a checkbox to control the \"try0\"<br>\nor \"dont_try0\" option in the Sledgehammer panel.</p>\n<p>Your SledgeFail.thy contains two examples:</p>\n<p>lemma \"[a] = [b] ⟹ a = b\"</p>\n<p>lemma \"m &lt; n + 1 ⟹ setsum f {m..n + 1} = setsum f {m..n} + f (n + 1 ::<br>\nint)\"</p>\n<p>The first works smoothly for me with or without \"try methods\", both on<br>\nLinux and Windows.</p>\n<p>The second takes a bit longer to produce the following results (without<br>\n\"try methods\").  The following is on Linux:</p>\n<p>\"cvc4\": Try this: by (smt add.commute atLeastAtMostPlus1_int_conv<br>\natLeastAtMost_iff finite_atLeastAtMost_int setsum.insert) (122 ms).<br>\n\"e\": Try this: by (metis add.commute atLeastAtMostPlus1_int_conv<br>\natLeastLessThanPlusOne_atLeastAtMost_int atLeastLessThan_iff<br>\nfinite_atLeastAtMost_int less_irrefl setsum.insert zle_add1_eq_le<br>\nzless_add1_eq) (761 ms).<br>\n\"z3\": Try this: by (smt add.commute atLeastAtMostPlus1_int_conv<br>\natLeastAtMost_iff finite_atLeastAtMost_int setsum.insert) (158 ms).<br>\n\"spass\": Timed out.<br>\n\"remote_vampire\": Timed out.</p>\n<p>This is on Windows 7, with sledgehammer_timeout = 60 (see plugin options):</p>\n<p>\"cvc4\": Try this: by (smt add.commute atLeastAtMostPlus1_int_conv<br>\natLeastAtMost_iff finite_atLeastAtMost_int setsum.insert) (203 ms).<br>\n\"remote_vampire\": Timed out.<br>\n\"spass\": Timed out.<br>\n\"z3\": Try this: by (smt add.commute atLeastAtMostPlus1_int_conv<br>\natLeastAtMost_iff finite_atLeastAtMost_int setsum.insert) (1.2 s).<br>\n\"e\": Timed out.</p>\n<p>That is less than nothing, although not as smooth as on a proper Unix<br>\nsystem.</p>\n<p>Do you have an extra virus checker that somehow delays external program<br>\nexecution?</p>\n<p>Makarius</p>\n</blockquote>",
        "id": 294636929,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661160532
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Mon, 27 Apr 2015, Makarius wrote:</p>\n<blockquote>\n<p>---------- Forwarded message ----------<br>\nDate: Mon, 27 Apr 2015 17:28:24 -0300<br>\nFrom: Alfio Martini &lt;<a href=\"mailto:alfio.martini@acm.org\">alfio.martini@acm.org</a>&gt;<br>\nTo: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nSubject: Re: [isabelle] Difficulties with \"setsum\" (Alfio Martini)</p>\n<p>I installed a virtual machine with Linux Mint and installed Isabelle 2014.</p>\n</blockquote>\n<p>Linux Mint had a lot of attention initially, but was of rather bad quality <br>\nthe last time I checked it (which is already 1-2 years ago).  For me the <br>\ncanonical Linux distribution remains Ubuntu (or Xubuntu) despite the may <br>\nattempts to ruin the open-source OS world by endless forks.</p>\n<blockquote>\n<p>My God, the look and feel of Isabelle/jEdit in Linux it is not that <br>\npretty (to put it mildly), especially if one is already used to the <br>\nWindows version.</p>\n</blockquote>\n<p>That is normal on Linux/X11. <br>\n On Windows and Mac OS X, the rendering is <br>\nfine.  I usually use Mac OS X for presentation, and restrict Linux to <br>\nprivate use at home, when nobody is looking.</p>\n<p>Makarius</p>",
        "id": 294636935,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661160538
    },
    {
        "content": "<p>From: Matthew Fernandez &lt;<a href=\"mailto:matthew.fernandez@nicta.com.au\">matthew.fernandez@nicta.com.au</a>&gt;<br>\nOn 28 April 2015 07:18:47 GMT+10:00, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n<blockquote>\n<p>On Mon, 27 Apr 2015, Makarius wrote:</p>\n<blockquote>\n<p>---------- Forwarded message ----------<br>\nDate: Mon, 27 Apr 2015 17:28:24 -0300<br>\nFrom: Alfio Martini &lt;<a href=\"mailto:alfio.martini@acm.org\">alfio.martini@acm.org</a>&gt;<br>\nTo: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nSubject: Re: [isabelle] Difficulties with \"setsum\" (Alfio Martini)</p>\n<p>I installed a virtual machine with Linux Mint and installed Isabelle<br>\n2014.</p>\n</blockquote>\n<p>Linux Mint had a lot of attention initially, but was of rather bad<br>\nquality<br>\nthe last time I checked it (which is already 1-2 years ago).  For me<br>\nthe<br>\ncanonical Linux distribution remains Ubuntu (or Xubuntu) despite the<br>\nmay<br>\nattempts to ruin the open-source OS world by endless forks.</p>\n</blockquote>\n<p>FWIW one of my machines has run Isabelle on Linux Mint for the last 2 years with no problems. My own experience is that Mint is now more stable and polished than Xubuntu, though Ubuntu still gets the most UI/UX attention, and these things are obviously subjective.</p>\n<blockquote>\n<blockquote>\n<p>My God, the look and feel of Isabelle/jEdit in Linux it is not that<br>\npretty (to put it mildly), especially if one is already used to the<br>\nWindows version.</p>\n</blockquote>\n<p>That is normal on Linux/X11. <br>\n On Windows and Mac OS X, the rendering is</p>\n<p>fine.  I usually use Mac OS X for presentation, and restrict Linux to<br>\nprivate use at home, when nobody is looking.</p>\n</blockquote>\n<p>This is not really an Isabelle/jEdit issue, but rather that Java (or Java developers?) makes only a token effort at making its applications look/behave like native applications.</p>\n<hr>\n<p>The information in this e-mail may be confidential and subject to legal professional privilege and/or copyright. National ICT Australia Limited accepts no liability for any damage caused by this email or its attachments.</p>",
        "id": 294636952,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661160544
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe problem here is that there is no native UI framework on Linux.  Or do <br>\nyou mean Motif?  It is still supported by Java/AWT/Swing, but unusable.</p>\n<p>GTk is sometimes considered native, but it is merely one of many forks <br>\nthat make the platform a big mess.  I do use the GTk look-and-feel of <br>\nJava/Swing myself, because it does the GUI scaling almost right -- this is <br>\nessential for 4K displays.</p>\n<p>Makarius</p>",
        "id": 294636965,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661160550
    },
    {
        "content": "<p>From: Matthew Fernandez &lt;<a href=\"mailto:matthew.fernandez@nicta.com.au\">matthew.fernandez@nicta.com.au</a>&gt;<br>\nI did not mean any specific framework, as I'm not even familiar with the latest Java UI options. I<br>\nmeant that when you open a Java application, it is immediately obvious to you from the UI and<br>\nbehaviour that it is a Java application.</p>\n<p>You're right that I potentially muddied the waters by using \"native\" to mean GTK. I consider GTK<br>\n\"native\" on Gnome (+ Cinnamon, etc.). To clarify my comments, I wasn't meaning this as a criticism<br>\nof the Java platform. Applications from other ecosystems like KDE and Wine look equally out of place<br>\nin a GTK environment.</p>\n<hr>\n<p>The information in this e-mail may be confidential and subject to legal professional privilege and/or copyright. National ICT Australia Limited accepts no liability for any damage caused by this email or its attachments.</p>",
        "id": 294636975,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661160556
    },
    {
        "content": "<p>From: \"W. Douglas Maurer\" &lt;<a href=\"mailto:maurer@gwu.edu\">maurer@gwu.edu</a>&gt;<br>\nI've been following the 'Difficulties with \"setsum\"' thread for some <br>\ntime now, and, after much discussion, I still don't know what the <br>\nbest way is, to introduce the lemma 'aux:' above into my proofs. I <br>\nneed it in order, for example, to prove:<br>\n\"1^2-2^2+3^2-4^2+...+(-1)^(n+1)*n^2 = ((-1)^(n+1))<em>n</em>(n+1)/2\"<br>\nThis one has to be done by using int, not nat, because the answer <br>\nmight be negative. There are over a dozen others, given as exercises <br>\non pp. 49-50 of Johnsonbaugh, R., \"Discrete Mathematics\" (2nd <br>\nedition). My ultimate goal (which will probably take over a year to <br>\nget off the ground) is for students of discrete mathematics to get <br>\nstarted with at least the lowest-level features of Isar as part of <br>\ntheir study. I can get them through proofs by contradiction, proofs <br>\nby cases, and (if they involve exponents, such as proving that 8^k - <br>\n2^k is always divisible by 6), proofs by induction, since exponents <br>\nare natural numbers; but I'm stuck, on more general proofs by <br>\ninduction, until I can somehow introduce this one fact (aux: above). <br>\n-WDMaurer</p>",
        "id": 294637017,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661160569
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nOn 28/04/2015 06:58, W. Douglas Maurer wrote:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>Lemmas I tried with sledgehammer</p>\n<blockquote>\n<p>lemma \"[a] = [b] ? a = b\" oops<br>\nlemma aux: \"m &lt; n+1 ?setsum f {m..n+1} = setsum f {m..n} + f (n+1 :: int)\"</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>I asked sledgehammer and it told me</p>\n<p>by (simp add: add.commute atLeastAtMostPlus1_int_conv)</p>\n<p>Maybe my s/h is bigger (or more recent) than yours ;-)</p>\n<p>Tobias</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>oops</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>I've been following the 'Difficulties with \"setsum\"' thread for some time now,<br>\nand, after much discussion, I still don't know what the best way is, to<br>\nintroduce the lemma 'aux:' above into my proofs. I need it in order, for<br>\nexample, to prove:<br>\n\"1^2-2^2+3^2-4^2+...+(-1)^(n+1)*n^2 = ((-1)^(n+1))<em>n</em>(n+1)/2\"<br>\nThis one has to be done by using int, not nat, because the answer might be<br>\nnegative. There are over a dozen others, given as exercises on pp. 49-50 of<br>\nJohnsonbaugh, R., \"Discrete Mathematics\" (2nd edition). My ultimate goal (which<br>\nwill probably take over a year to get off the ground) is for students of<br>\ndiscrete mathematics to get started with at least the lowest-level features of<br>\nIsar as part of their study. I can get them through proofs by contradiction,<br>\nproofs by cases, and (if they involve exponents, such as proving that 8^k - 2^k<br>\nis always divisible by 6), proofs by induction, since exponents are natural<br>\nnumbers; but I'm stuck, on more general proofs by induction, until I can somehow<br>\nintroduce this one fact (aux: above). -WDMaurer<br>\n<a href=\"/user_uploads/14278/n2AeFggUJ9MAdByJBg1e6f8e/smime.p7s\">smime.p7s</a></p>\n</blockquote>",
        "id": 294637036,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661160581
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@inria.fr\">jasmin.blanchette@inria.fr</a>&gt;<br>\nDear Alfio,</p>\n<p>It is hard to make any definite judgment on the basis of a single example. This is even more true because Sledgehammer, since Isabelle2014, uses machine learning. This means that if you try to prove a goal that is similar (or identical) to a formula you have already proved, it is likely to be faster the second time around. Machine learning must be disabled before taking any measurements.</p>\n<p>In the past months, in fact, also weeks, we have run evaluations of Sledgehammer, and the results look as usual. In fact, 2015-RC should be a bit better than 2014, thanks to improvements both to the machine learning (MaSh) and the Isar proof generation framework, including the new one-liner proofs with various proof methods (“simp”, “auto”, “blast”, etc.).</p>\n<p>However, there has been some bugs in that last feature (witness Lars Hupel’s bug report, which I answered tonight), and there might be technical issues on Windows. If you have the clear impression that Sledgehammer is weaker and can repeat this on many examples, ideally with the “fact_filter = mepo” option (using the “sledgehammer” command directly, or “sledgehammer_params”), I would like to hear again from you.</p>\n<p>Sledgehammer should be becoming better, not worse.</p>\n<p>As for CVC4, we will look into building a Windows executable for it with proof output enabled, which should make it fast — in fact, the best prover by a good margin.</p>\n<p>Cheers,</p>\n<p>Jasmin</p>",
        "id": 294640784,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661162004
    }
]