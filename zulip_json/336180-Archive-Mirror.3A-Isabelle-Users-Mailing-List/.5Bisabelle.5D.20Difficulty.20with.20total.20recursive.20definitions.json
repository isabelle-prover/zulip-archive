[
    {
        "content": "<p>From: Peter Vincent Homeier &lt;<a href=\"mailto:palantir@trustworthytools.com\">palantir@trustworthytools.com</a>&gt;<br>\n(Note: This is a repaired version of this previous question, where<br>\nexpressions pasted from Proof General now have the Ascii expansions.<br>\nThe X-symbols did not copy well.)</p>\n<p>I am having difficulty understanding how to make total recursive<br>\nfunction definitions in Isabelle/HOL when the termination argument<br>\nneeds more information than just the well-founded measure to be<br>\nproven.  As an example, consider the example from the Tutorial,<br>\nsection 3.5.2, page 49:</p>\n<p>recdef qs \"measure length\"<br>\n  \"qs [] = []\"<br>\n  \"qs (x#xs) = qs(filter (\\&lt;lambda&gt;y. y\\&lt;le&gt;x) xs) @ [x] @ qs(filter<br>\n(\\&lt;lambda&gt;y. x&lt;y) xs)\"<br>\n(hints recdef_simp: less_Suc_eq_le)</p>\n<p>This of course works as the tutorial shows.  What is not clear is how<br>\nin general one arrives at the correct set of hints.  In this case, I<br>\nthought it would be even easier to prove termination for this if I<br>\nproved the expression in the original error message:</p>\n<p>*** Bad final proof state:<br>\n*** ALL x xs. length [y:xs. y &lt;= x] &lt; Suc (length xs)<br>\n***  1. ALL x xs. length [y:xs. y &lt;= x] &lt; Suc (length xs)<br>\n*** 1 unsolved goals!<br>\n*** Proof failed!<br>\n*** At command \"recdef\".</p>\n<p>So I set this up as a lemma and proved it:</p>\n<p>lemma tst [simp]:<br>\n  \"length length [y:xs. y &lt;= x] &lt; Suc (length xs)\"<br>\napply(simp add: less_Suc_eq_le)<br>\ndone</p>\n<p>and then tried using \"tst\" as the hint in place of \"less_Suc_eq_le\":</p>\n<p>recdef qs \"measure length\"<br>\n \"qs [] = []\"<br>\n \"qs (x#xs) = qs(filter (\\&lt;lambda&gt;y. y\\&lt;le&gt;x) xs) @ [x] @ qs(filter<br>\n(\\&lt;lambda&gt;y. x&lt;y) xs)\"<br>\n(hints recdef_simp: tst)</p>\n<p>*** Bad final proof state:<br>\n*** ALL x xs. length (filter (op &lt; x) xs) &lt; Suc (length xs)<br>\n***  1. ALL x xs. length (filter (op &lt; x) xs) &lt; Suc (length xs)<br>\n*** 1 unsolved goals!<br>\n*** Proof failed!<br>\n*** At command \"recdef\".</p>\n<p>According to the error message, the hint supplied is exactly what was<br>\nrequested.  What is going wrong here?</p>\n<p>Peter</p>",
        "id": 294052235,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660819986
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nYou supplied a lemma for &lt;=, which fixed the first recursive call, but <br>\nnow a similar lemma for &lt; is needed. Your two \"Bad final proof states\" <br>\nare different.</p>\n<p>Tobias</p>\n<p>Peter Vincent Homeier schrieb:</p>",
        "id": 294052371,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660820057
    }
]