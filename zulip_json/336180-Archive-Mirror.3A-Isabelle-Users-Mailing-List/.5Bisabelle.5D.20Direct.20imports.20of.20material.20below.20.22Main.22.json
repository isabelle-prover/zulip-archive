[
    {
        "content": "<p>From: Alexander Krauss &lt;<a href=\"mailto:krauss@in.tum.de\">krauss@in.tum.de</a>&gt;<br>\nDear list,</p>\n<p>I have loaded the theory dependency graph of the Isabelle distribution,<br>\nthe AFP and IsaFoR into structure101<br>\n(<a href=\"https://structure101.com/products/studio/\">https://structure101.com/products/studio/</a>), a comercial architecture<br>\nanalysis tool that I sometimes use at work on software projects. I just<br>\nwanted to see what insights can be gained by applying this to formal<br>\ntheories.</p>\n<p>One such insight is the following: There is the convention of not<br>\nimporting theories that are included in \"Main\", but instead using Main<br>\nitself, which avoids various technical bootstrapping issues.</p>\n<p>I can now report that there are 52 violations of this rule. Here is a<br>\nlist of them, extracted from Isabelle-2018-RC1 and the current snapshots<br>\nof AFP and IsaFoR. One might consider correcting them, just to avoid<br>\nanomalies:</p>\n<p>AFP/Berlekamp_Zassenhaus/Arithmetic_Record_Based.thy    ---&gt;    Fields.thy  <br>\nAFP/CISC-Kernel/trace/Rushby-with-Control/K.thy ---&gt;    Set.thy <br>\nAFP/CISC-Kernel/trace/Rushby-with-Control/K.thy ---&gt;    List.thy    <br>\nAFP/CISC-Kernel/trace/Rushby-with-Control/K.thy ---&gt;    Transitive_Closure.thy  <br>\nAFP/CISC-Kernel/trace/Rushby-with-Control/List_Theorems.thy ---&gt;    List.thy    <br>\nAFP/CISC-Kernel/trace/Rushby-with-Control/Option_Binders.thy    ---&gt;<br>\nOption.thy  <br>\nAFP/Call_Arity/Arity.thy    ---&gt;    Lifting.thy <br>\nAFP/Collections/GenCF/Impl/Impl_List_Map.thy    ---&gt;    List.thy    <br>\nAFP/Consensus_Refined/Same_Vote.thy ---&gt;    Map.thy <br>\nAFP/Consensus_Refined/Voting.thy    ---&gt;    Map.thy <br>\nAFP/DPT-SAT-Solver/DPT_SAT_Solver.thy   ---&gt;    SAT.thy <br>\nAFP/Deep_Learning/Tensor_Plus.thy   ---&gt;    Option.thy  <br>\nAFP/Encodability_Process_Calculi/Relations.thy  ---&gt;    Order_Relation.thy  <br>\nAFP/Formal_SSA/SSA_CFG.thy  ---&gt;    Relation.thy    <br>\nAFP/Group-Ring-Module/Algebra4.thy  ---&gt;    Zorn.thy    <br>\nAFP/InfPathElimination/Conf.thy ---&gt;    Finite_Set.thy  <br>\nAFP/InfPathElimination/SymExec.thy  ---&gt;    Finite_Set.thy  <br>\nAFP/Iptables_Semantics/Primitive_Matchers/Ports.thy ---&gt;    String.thy  <br>\nAFP/Jordan_Hoelder/GroupIsoClasses.thy  ---&gt;    List.thy    <br>\nAFP/Jordan_Hoelder/GroupIsoClasses.thy  ---&gt;    Groups.thy  <br>\nAFP/KBPs/Extra.thy  ---&gt;    Equiv_Relations.thy <br>\nAFP/Koenigsberg_Friendship/KoenigsbergBridge.thy    ---&gt;    Enum.thy    <br>\nAFP/Koenigsberg_Friendship/KoenigsbergBridge.thy    ---&gt;    Map.thy <br>\nAFP/Network_Security_Policy_Verification/TopoS_Library.thy  ---&gt;    String.thy  <br>\nAFP/Nominal2/Nominal2_Abs.thy   ---&gt;    Quotient.thy    <br>\nAFP/Orbit_Stabiliser/Orbit_Stabiliser.thy   ---&gt;    Fun.thy <br>\nAFP/Partial_Order_Reduction/Extensions/Relation_Extensions.thy  ---&gt;<br>\nWellfounded.thy <br>\nAFP/Polynomial_Interpolation/Improved_Code_Equations.thy    ---&gt;<br>\nCode_Numeral.thy    <br>\nAFP/Polynomial_Interpolation/Missing_Polynomial.thy ---&gt;    Set_Interval.thy    <br>\nAFP/PropResPI/Prime_Implicates.thy  ---&gt;    Finite_Set.thy  <br>\nAFP/PropResPI/Propositional_Resolution.thy  ---&gt;    Finite_Set.thy  <br>\nAFP/Random_Graph_Subgraph_Threshold/Ugraph_Lemmas.thy   ---&gt;    Lattices_Big.thy    <br>\nAFP/Simple_Firewall/Primitives/Iface.thy    ---&gt;    String.thy  <br>\nAFP/Vickrey_Clarke_Groves/RelationProperties.thy    ---&gt;<br>\nConditionally_Complete_Lattices.thy <br>\nAFP/pGCL/Induction.thy  ---&gt;    Conditionally_Complete_Lattices.thy <br>\nIsaFoR/Orderings/Ordered_Algebra.thy    ---&gt;    Lattices.thy    <br>\nIsaFoR/Orderings/Quasi_Order.thy    ---&gt;    Complete_Lattices.thy   <br>\nIsaFoR/Simplex/Simplex.thy  ---&gt;    Order_Relation.thy  <br>\nIsabelle/HOL/Cardinals/Cardinal_Arithmetic.thy  ---&gt;<br>\nBNF_Cardinal_Arithmetic.thy <br>\nIsabelle/HOL/Cardinals/Cardinal_Order_Relation.thy  ---&gt;<br>\nBNF_Cardinal_Order_Relation.thy <br>\nIsabelle/HOL/Cardinals/Wellorder_Constructions.thy  ---&gt;<br>\nBNF_Wellorder_Constructions.thy <br>\nIsabelle/HOL/Cardinals/Wellorder_Embedding.thy  ---&gt;<br>\nBNF_Wellorder_Embedding.thy <br>\nIsabelle/HOL/Cardinals/Wellorder_Relation.thy   ---&gt;<br>\nBNF_Wellorder_Relation.thy  <br>\nIsabelle/HOL/Computational_Algebra/Primes.thy   ---&gt;    Binomial.thy    <br>\nIsabelle/HOL/Library/Lattice_Syntax.thy ---&gt;    Complete_Lattices.thy   <br>\nIsabelle/HOL/Matrix_LP/Compute_Oracle/Compute_Oracle.thy    ---&gt;    HOL.thy <br>\nIsabelle/HOL/Prolog/HOHH.thy    ---&gt;    HOL.thy <br>\nIsabelle/HOL/Quotient_Examples/Quotient_Int.thy ---&gt;    Nat.thy <br>\nIsabelle/HOL/ex/Computations.thy    ---&gt;    Code_Numeral.thy    <br>\nIsabelle/HOL/ex/Computations.thy    ---&gt;    Nat.thy <br>\nIsabelle/HOL/ex/Computations.thy    ---&gt;    Fun_Def.thy <br>\nIsabelle/HOL/ex/Computations.thy    ---&gt;    Num.thy </p>\n<p>Alex</p>",
        "id": 294738390,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190612
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nHi Alex,</p>\n<p>this is some cool analysis.</p>\n<p>Given that there are already a lot of these \"linting\" rules – mainly <br>\nconcerning the ROOT files – in the AFP, I'm tempted to add such a check <br>\nthere as well.</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294738471,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190654
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nThe following is the result of about an hour of hacking:</p>\n<p>&lt;<a href=\"https://github.com/larsrh/isabelle-lint\">https://github.com/larsrh/isabelle-lint</a>&gt;</p>\n<p>Instructions are in the README. When run on the distribution (\"isabelle<br>\nlint -a\"), it produces a similar result as Alex's:</p>\n<p>Found dubious imports:<br>\nHOL-Library.Lattice_Syntax -&gt; HOL.Complete_Lattices<br>\nHOL-Matrix_LP.Compute_Oracle -&gt; HOL.HOL<br>\nHOL-Library.Countable -&gt; HOL.Rat<br>\nHOL-Computational_Algebra.Primes -&gt; HOL.Binomial<br>\nHOL-Nitpick_Examples.Manual_Nits -&gt; HOL.Real<br>\nHOL-Cardinals.Cardinal_Arithmetic -&gt; HOL.BNF_Cardinal_Arithmetic<br>\nHOL-Cardinals.Cardinal_Order_Relation -&gt; HOL.BNF_Cardinal_Order_Relation<br>\nHOL-Cardinals.Wellorder_Constructions -&gt; HOL.BNF_Wellorder_Constructions<br>\nHOL-Cardinals.Wellorder_Embedding -&gt; HOL.BNF_Wellorder_Embedding<br>\nHOL-Cardinals.Wellorder_Relation -&gt; HOL.BNF_Wellorder_Relation<br>\nHOL-ex.Computations -&gt; HOL.Code_Numeral<br>\nHOL-ex.Computations -&gt; HOL.Fun_Def<br>\nHOL-ex.Computations -&gt; HOL.Nat<br>\nHOL-ex.Computations -&gt; HOL.Num<br>\nHOL-Quotient_Examples.Quotient_Rat -&gt; HOL.Archimedean_Field<br>\nHOL-Quotient_Examples.Quotient_Int -&gt; HOL.Nat<br>\nHOL-Prolog.HOHH -&gt; HOL.HOL</p>\n<p>Curiously, that list appears to contain more members than what<br>\nstructure101 produced.</p>",
        "id": 294738544,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190685
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nNote that there is already an administrative tool \"isabelle<br>\ncheck_sources\" -- it is not active in the normal Isabelle distribution,<br>\nonly repository versions.</p>\n<p>It would be great if the AFP checks would somehow include that, then I<br>\nwould have to do fewer things manually.</p>\n<p>Checks of theory imports have so far not been part of it, because only<br>\nIsabelle2018 has become sufficiently strict to allow this.</p>\n<p>Makarius</p>",
        "id": 294738563,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190693
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;</p>\n<blockquote>\n<p>Note that there is already an administrative tool \"isabelle<br>\ncheck_sources\" -- it is not active in the normal Isabelle distribution,<br>\nonly repository versions.</p>\n</blockquote>\n<p>I somehow forgot that this exists. However, it does not work if not<br>\ninvoked on a Mercurial repository.</p>\n<blockquote>\n<p>It would be great if the AFP checks would somehow include that, then I<br>\nwould have to do fewer things manually.</p>\n</blockquote>\n<p>Good point. I saw that a lot of AFP entries have an violations there.<br>\nLuckily, they can be fixed with a simple \"sed\". (I'll do that.)</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294738580,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190697
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI usually work with \"perl -pi -e ...\" because that is more portable than<br>\n\"sed\" -- just a habit of cross-platform shell scripting.</p>\n<p>Traditionally, I have applied \"isabelle check_sources\" in a relative<br>\nlenient manner, e.g. it is often difficult to say what the private<br>\nmeaning of a hard TAB in the source really is -- it requires<br>\ninvestigation of repository history and private mail threads to work<br>\nthat out.</p>\n<p>If these checks become more routine, we may tighten them eventually.</p>\n<p>I propose to include your imports check soon. Is it relevant for the<br>\nIsabelle2018 release?</p>\n<p>Makarius</p>",
        "id": 294738595,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190703
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nUsing the tool by Lars I removed most such \"dubious imports\" in the AFP. <br>\nHowever, this has one drawback: in many cases I replaced an import of Rat or <br>\nReal by Complex_Main. This is a loss of information.</p>\n<p>Note for the future: I believe there is an agreement that Complex_Main is too <br>\nlarge and Complex should go somewhere else. When that happens, please check all <br>\nimports and see if Complex_Main is really needed or Real_Main (or whatever it <br>\nwill be called) suffices.</p>\n<p>Tobias<br>\n<a href=\"/user_uploads/14278/WaJqjSeZFkE5793hIjfKFC43/smime.p7s\">smime.p7s</a></p>",
        "id": 294738615,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190710
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;</p>\n<blockquote>\n<p>I propose to include your imports check soon. Is it relevant for the<br>\nIsabelle2018 release?</p>\n</blockquote>\n<p>I don't think so. It's fine to do that afterwards.</p>",
        "id": 294738630,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190715
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nOK, I'll hold back on that then.</p>",
        "id": 294738706,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190728
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nHOL.Rat, HOL.Real, HOL.Complex (instead of Complex_Main) sound<br>\nsufficiently prominent as further entry points, but I am not an expert<br>\non the structure of these libraries.</p>\n<p>One could also formalize this explicitly, and have something like<br>\n\"private theory Nat\" to say that HOL.Nat should be only accessible<br>\nwithin its own session.</p>\n<p>In any case it is something to be reconsidered after the release.</p>\n<p>Makarius</p>",
        "id": 294738730,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190736
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nOn 18/07/2018 19:20, Makarius wrote:</p>\n<blockquote>\n<p>On 18/07/18 17:08, Tobias Nipkow wrote:</p>\n<blockquote>\n<p>Using the tool by Lars I removed most such \"dubious imports\" in the AFP.<br>\nHowever, this has one drawback: in many cases I replaced an import of<br>\nRat or Real by Complex_Main. This is a loss of information.</p>\n<p>Note for the future: I believe there is an agreement that Complex_Main<br>\nis too large and Complex should go somewhere else. When that happens,<br>\nplease check all imports and see if Complex_Main is really needed or<br>\nReal_Main (or whatever it will be called) suffices.</p>\n</blockquote>\n<p>HOL.Rat, HOL.Real, HOL.Complex (instead of Complex_Main) sound<br>\nsufficiently prominent as further entry points, but I am not an expert<br>\non the structure of these libraries.</p>\n</blockquote>\n<p>In the light of that comment and the fact that nobody voiced dissent, I will <br>\nprobably go back to the more specific imports in the AFP.</p>\n<p>Tobias</p>\n<blockquote>\n<p>One could also formalize this explicitly, and have something like<br>\n\"private theory Nat\" to say that HOL.Nat should be only accessible<br>\nwithin its own session.</p>\n<p>In any case it is something to be reconsidered after the release.</p>\n<p>Makarius</p>\n<p><a href=\"/user_uploads/14278/jkmJzDq3kKa9mZi5PmnoSIqc/smime.p7s\">smime.p7s</a></p>\n</blockquote>",
        "id": 294738791,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190759
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nJust for the record: some imports in the distribution have been<br>\ncanonized in 4ce18f389f53.</p>\n<p>Cheers,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/_W_PEv2uPsuTTZ-l2yV6DsCl/signature.asc\">signature.asc</a></p>",
        "id": 294742396,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661192072
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nSomething like that came also to my mind, but it is challenging to come<br>\nup with reasonable default rules – you do not want to lock up<br>\nspecifications by default as you would do with implementations.</p>\n<p>Florian<br>\n<a href=\"/user_uploads/14278/3HWWbFhVLGUQAUPGRyZs1Ys7/signature.asc\">signature.asc</a></p>",
        "id": 294742411,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661192078
    }
]