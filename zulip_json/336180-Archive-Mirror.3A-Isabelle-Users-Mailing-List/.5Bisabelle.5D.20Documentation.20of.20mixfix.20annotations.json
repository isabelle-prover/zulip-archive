[
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nHi everyone,</p>\n<p>I was confused to find that the grammar specified by a mixfix annotation <br>\nseems to depend on the pretty printing annotations:</p>\n<p>(\"⦃_⦄/ _ /(⦃_⦄,/ ⦃_⦄!)\") parses only ⦃ P ⦄ f ⦃ Q ⦄, ⦃ A ⦄!</p>\n<p>while</p>\n<p>(\"⦃_⦄/ _ /(⦃_⦄,/ ⦃_⦄)!\") parses also ⦃ P ⦄ f ⦃ Q ⦄, ⦃ A ⦄ !</p>\n<p>I.e., if the ! is inside the pretty printing block specified by (), <br>\nthere must not be a space before the !. If it is outside, it may be <br>\npreceded by a space.</p>\n<p>This kind of makes sense (if you don't allow a space after a pretty <br>\nprinting block you cannot insert a break) but this behaviour contradicts <br>\nthe reference manual, which explicitly states right before the syntax of <br>\npretty printing blocks (p.149):</p>\n<p>This and the following specifications do not affect parsing at all.</p>\n<p>-- Lars</p>",
        "id": 294243046,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660907794
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nIt affects the collection of literal tokens that are determined by that <br>\ngrammar production. The above is one of the standard traps about <br>\ntokenization, and I reckon that it is explained somewhere in our massive <br>\namounts of manuals.</p>\n<p>The usual way to specify separate tokens <em>without</em> additional white space <br>\nwhen printed is to use an empty pretty-printing block \"()\" in between.</p>\n<p>Makarius</p>",
        "id": 294243444,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660907961
    }
]