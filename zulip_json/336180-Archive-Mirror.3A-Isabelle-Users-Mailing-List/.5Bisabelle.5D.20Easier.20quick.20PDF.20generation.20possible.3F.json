[
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:breitner@kit.edu\">breitner@kit.edu</a>&gt;<br>\nHi,</p>\n<p>I just create a small theory to do a quick experiment, and I wanted to<br>\nshare it with someone. Isabelle can create pretty PDF output, so I<br>\nwanted to share it as such, but this turns out to be a task that is<br>\nunnecessary complicated.</p>\n<p>Here is my log:</p>\n<ol>\n<li>run \"isabelle mkroot\"</li>\n<li>notice that I ran it wrong, \"rm ROOT\"</li>\n<li>run \"isabelle mkroot -d\"</li>\n<li>\n<p>add my theory to ROOT, removed the theories [document = false]<br>\n   section, because empty sections are not allowed</p>\n</li>\n<li>\n<p>run \"isabelle build -D\"</p>\n</li>\n<li>noticed that a few other theories were pulled in that I did not want</li>\n<li>\n<p>tried to add their theory names to the [document = false] section,<br>\n   for which I first had to look up the syntax in another ROOT file</p>\n</li>\n<li>\n<p>noticed that this did not work. Put in the theory path (i.e. <br>\n   \"~~/src/HOL/Library/Extended_Real\") in there</p>\n</li>\n<li>\n<p>adjusted document/root.txt to have a proper title and not disclose my<br>\n   local username</p>\n</li>\n</ol>\n<p>Here is what I would have liked to do:</p>\n<ol>\n<li>run \"isabelle thy2pdf Foo.thy\"</li>\n</ol>\n<p>So if anyone agrees that this would be useful, and is able to implement<br>\nthis minor feature suggestion, I’d appreciate that!</p>\n<p>Thanks,<br>\nJoachim<br>\n<a href=\"/user_uploads/14278/UQMQ__BFKhHEwH4nTVCbfW0Q/signature.asc\">signature.asc</a></p>",
        "id": 294318248,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660926134
    },
    {
        "content": "<p>From: Andrew Butterfield &lt;<a href=\"mailto:Andrew.Butterfield@scss.tcd.ie\">Andrew.Butterfield@scss.tcd.ie</a>&gt;<br>\nJoachim, all,</p>\n<p>Gets +1 from me !</p>\n<p>Regards, Andrew</p>\n<hr>\n<p>Andrew Butterfield     Tel: +353-1-896-2517     Fax: +353-1-677-2204<br>\nLero@TCD, Head of Foundations &amp; Methods Research Group<br>\nSchool of Computer Science and Statistics,<br>\nRoom G.39, O'Reilly Institute, Trinity College, University of Dublin<br>\n<a href=\"http://www.scss.tcd.ie/Andrew.Butterfield/\">http://www.scss.tcd.ie/Andrew.Butterfield/</a></p>\n<hr>",
        "id": 294318262,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660926140
    },
    {
        "content": "<p>From: Gergely Buday &lt;<a href=\"mailto:gbuday@gmail.com\">gbuday@gmail.com</a>&gt;<br>\nI could even imagine a button in Isabelle/JEdit to generate the<br>\ndocument and place it in the Document tab on the right.</p>\n<p>And, isabelle build seems to be slow, does it use the information from<br>\nthe continuous proof checking? I guess not. If it were part of<br>\nIsabelle/JEdit, it would be much different.</p>",
        "id": 294318309,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660926156
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThis might require further explanations, apart from the small section <br>\n\"2.5 Scala console\" in the Isabelle/jEdit manual.</p>\n<p>The Scala toplevel is similar to really ancient ML toplevels, but to see <br>\nthe signature of some function one needs to provide some dummy argument. <br>\nE.g. like this:</p>\n<p><a href=\"http://Build.build\">Build.build</a> _</p>\n<p>The source for that is in $ISABELLE_HOME/src/Pure/Tools/build.scala which <br>\ncan be opened as plain-text file in Isabelle/jEdit precisely like that, <br>\nbut there is no particular IDE support.  Here is the full signature for <br>\nthat function in the source:</p>\n<p>def build(<br>\n     options: Options,<br>\n     progress: Progress = Ignore_Progress,<br>\n     requirements: Boolean = false,<br>\n     all_sessions: Boolean = false,<br>\n     build_heap: Boolean = false,<br>\n     clean_build: Boolean = false,<br>\n     dirs: List[Path] = Nil,<br>\n     select_dirs: List[Path] = Nil,<br>\n     session_groups: List[String] = Nil,<br>\n     max_jobs: Int = 1,<br>\n     list_files: Boolean = false,<br>\n     no_build: Boolean = false,<br>\n     system_mode: Boolean = false,<br>\n     verbose: Boolean = false,<br>\n     sessions: List[String] = Nil): Int</p>\n<p>Scala allows positional and named arguments with default.  Here is a <br>\ntypical invocation:</p>\n<p>Build.build(PIDE.options.value, new Build.Console_Progress, select_dirs = List(Path.explode(\"~/Papers/Isabelle_Workshop_2014\")))</p>\n<p>PIDE.options.value refers to the options of the Prover IDE, which are <br>\nedited in the Plugin Options / Isabelle dialog.  It is also possible to <br>\nprovide separate options, taking Options.init() as a start.</p>\n<p>Build.Progress objects need to be provided afresh for each invokation. <br>\nHere it is connected to the enclosing console, which also allows to use <br>\nthe \"Stop\" button to interrupt the running job.</p>\n<p>All other arguments are optional; select_dirs above corresponds to option <br>\n-D in the shell command-line.</p>\n<p>Bypassing the system shell and using the Scala loop directly saves some <br>\nprecious seconds in the edit-build cycle, which is particularly important <br>\nto write papers, manuals, books etc.  I have done that routinely for <br>\nrecenr manual updates, notable the Isabelle/jEdit itself.  Together with <br>\nthe spell-checker in Isabelle2014 works already quite nicely.</p>\n<p>In the next round of improvements, I hope to see full integration into the <br>\nIDE: document preparation without funny build jobs, just some button to <br>\nrun Isabelle LaTeX on some theories.</p>\n<p>Makarius</p>\n<hr>\n<p><a href=\"http://stop-ttip.org\">http://stop-ttip.org</a>  787,983 people so far</p>\n<hr>",
        "id": 294320066,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660926600
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Thu, 23 Oct 2014, Joachim Breitner wrote:</p>\n<blockquote>\n<p>Here is my log:</p>\n<ol>\n<li>run \"isabelle mkroot\"</li>\n<li>notice that I ran it wrong, \"rm ROOT\"</li>\n<li>run \"isabelle mkroot -d\"</li>\n<li>add my theory to ROOT, removed the theories [document = false]<br>\n  section, because empty sections are not allowed</li>\n<li>run \"isabelle build -D\"</li>\n<li>noticed that a few other theories were pulled in that I did not want</li>\n<li>tried to add their theory names to the [document = false] section,<br>\n  for which I first had to look up the syntax in another ROOT file</li>\n<li>noticed that this did not work. Put in the theory path (i.e.<br>\n  \"~~/src/HOL/Library/Extended_Real\") in there</li>\n<li>adjusted document/root.txt to have a proper title and not disclose my<br>\n  local username</li>\n</ol>\n<p>Here is what I would have liked to do:</p>\n<ol>\n<li>run \"isabelle thy2pdf Foo.thy\"</li>\n</ol>\n</blockquote>\n<p>Note that Isabelle command-line tools are very old-fashioned, and many new <br>\nthings don't have a shell wrapper anymore.  The direct way is via <br>\nIsabelle/Scala.  It is also possible to invoke Scala functionality in <br>\nIsabelle/jEdit with the Console/Scala plugin.</p>\n<p>This older thread gives some hints about document preparation via <br>\n<a href=\"http://Build.build\">Build.build</a>: <br>\n<a href=\"https://lists.cam.ac.uk/mailman/htdig/cl-isabelle-users/2014-January/msg00021.html\">https://lists.cam.ac.uk/mailman/htdig/cl-isabelle-users/2014-January/msg00021.html</a> <br>\nIn Isabelle2014 this works a bit more smoothly, but there is still no <br>\ndirect IDE support.</p>\n<blockquote>\n<p>So if anyone agrees that this would be useful, and is able to implement<br>\nthis minor feature suggestion</p>\n</blockquote>\n<p>Above you describe too missing things in the current PIDE setup:</p>\n<p>(1) management of \"projects\", i.e. sorting out ROOT files</p>\n<p>(2) document-preparation within the IDE</p>\n<p>These are not \"minor\" things, but quite important. Both of that is in the <br>\npipeline for a long time.  Last winter I tried hard to revisit point (2), <br>\nbut got entangled in old TTY / Proof General features.  Since the latter <br>\nhas been cleared out at last, some more progress is to be expected <br>\neventually.</p>\n<p>Makarius</p>\n<hr>\n<p><a href=\"http://stop-ttip.org\">http://stop-ttip.org</a>  777,071 people so far</p>\n<hr>",
        "id": 294321330,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660926974
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe perceived slowness of invoking \"isabelle build\" from the command-line <br>\nis mainly the JVM startup and warmup time (to have the just-in-time <br>\ncompiler go through the massive amounts of byte code).</p>\n<p>It is much faster if invoked directly from the running PIDE in the <br>\nConsole/Scala plugin of Isabelle/jEdit.  After 2-3 runs of <a href=\"http://Build.build\">Build.build</a> the <br>\nexploration of dependencies is actually quite fast.</p>\n<p>Of course, exploration of dependencies for document preparation is a bit <br>\npointless in the first place.  It is a left-over from the old times of <br>\n\"make\", and even until today people sometimes think they have to invoke <br>\nthat ancient tool to make something, although it slows downs things a lot.</p>\n<p>Makarius</p>\n<hr>\n<p><a href=\"http://stop-ttip.org\">http://stop-ttip.org</a>  777,087 people so far</p>\n<hr>",
        "id": 294321509,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660927042
    },
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:breitner@kit.edu\">breitner@kit.edu</a>&gt;<br>\nGreat! I’m looking forward to that.</p>\n<p>Greetings,<br>\nJoachim<br>\n<a href=\"/user_uploads/14278/v0XWCzbqPRUmX1XtVu8LiWND/signature.asc\">signature.asc</a></p>",
        "id": 294321730,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660927109
    }
]