[
    {
        "content": "<p>From: Zhe Hou &lt;<a href=\"mailto:zhe.hou@hotmail.com\">zhe.hou@hotmail.com</a>&gt;<br>\nDear Eisbach developers,</p>\n<p>I ran into a problem when using drule in match. It seems that drule is not supported, but rule is. For example, let's first define a silly lemma here:</p>\n<p>lemma dummy: \"A ∧ B ⟹ B\"<br>\nby auto</p>\n<p>Then, when proving the following lemma, I try:</p>\n<p>lemma \"A ∧ B ⟹ A ∨ B\"<br>\napply (match premises in \"A ∧ B\" ⇒ ‹drule dummy›)</p>\n<p>But Isabelle says \"Failed to apply proof method\". However, the following is ok:</p>\n<p>lemma \"A ∧ B ⟹ A ∨ B\"<br>\napply (drule dummy)</p>\n<p>Is there a way to use drule inside match? Or, is there an alternative to drule?</p>\n<p>Thanks a lot,</p>\n<p>Zhe</p>",
        "id": 294679566,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661176221
    },
    {
        "content": "<p>From: Thomas Sewell &lt;<a href=\"mailto:thomas.sewell@nicta.com.au\">thomas.sewell@nicta.com.au</a>&gt;<br>\nHello Zhe.</p>\n<p>I'm not an Eisbach developer, but I think I know what the problem is.<br>\nWhen you match in the premises, the premises get lifted out of the usual<br>\ngoal state. The matched premise becomes available as a rule, but isn't<br>\nin the goal any more.</p>\n<p>So you could do this:</p>\n<p>lemma \"A &amp; B ==&gt; A | B\"<br>\n    apply (match premises in f: \"A &amp; B\" ⇒ ‹cut_tac dummy[OF f]›)<br>\n    by assumption</p>\n<p>or this (put it back then drule):</p>\n<p>lemma \"A &amp; B ⟹ True ⟹ A | B\"<br>\n   by (match premises in f: \"A &amp; B\" ⇒ ‹cut_tac f, drule dummy›)</p>\n<p>Does that help?</p>\n<p>Cheers,<br>\n     Thomas.</p>\n<hr>\n<p>The information in this e-mail may be confidential and subject to legal professional privilege and/or copyright. National ICT Australia Limited accepts no liability for any damage caused by this email or its attachments.</p>",
        "id": 294679721,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661176284
    },
    {
        "content": "<p>From: <a href=\"mailto:Matthew.Brecknell@data61.csiro.au\">Matthew.Brecknell@data61.csiro.au</a><br>\nOn Fri, 2016-07-22 at 17:22 +0800, Zhe Hou wrote:</p>\n<blockquote>\n<p>Dear Eisbach developers,</p>\n</blockquote>\n<p>I'm not an Eisbach developer, but I'll try to answer as best I can!</p>\n<blockquote>\n<p>I ran into a problem when using drule in match. It seems that drule<br>\nis not supported, but rule is. For example, let's first define a<br>\nsilly lemma here:</p>\n<p>lemma dummy: \"A ∧ B ⟹ B\"<br>\nby auto</p>\n<p>Then, when proving the following lemma, I try:</p>\n<p>lemma \"A ∧ B ⟹ A ∨ B\"<br>\napply (match premises in \"A ∧ B\" ⇒ ‹drule dummy›)</p>\n<p>But Isabelle says \"Failed to apply proof method\". However, the<br>\nfollowing is ok:</p>\n<p>lemma \"A ∧ B ⟹ A ∨ B\"<br>\napply (drule dummy)</p>\n</blockquote>\n<p>This is not anything to do with drule in particular. Rather, it's<br>\nrelated to the subgoal focusing performed by the match method. You<br>\nmight want to reread section 2.1 of the Eisbach user manual:</p>\n<p><a href=\"https://isabelle.in.tum.de/dist/Isabelle2016/doc/eisbach.pdf\">https://isabelle.in.tum.de/dist/Isabelle2016/doc/eisbach.pdf</a></p>\n<p>In particular, drule is looking for an unstructured premise, but match<br>\nhas removed these from the subgoal focus. Within the inner method, only<br>\nnamed premises are accessible.</p>\n<blockquote>\n<p>Is there a way to use drule inside match? Or, is there an alternative<br>\nto drule?</p>\n</blockquote>\n<p>One way to make drule work would be to explicitly re-insert the premise<br>\nof interest:</p>\n<p>lemma \"A ∧ B ⟹ A ∨ B\"<br>\n  apply (match premises in H[thin]: \"A ∧ B\" ⇒<br>\n          ‹insert H; drule conjunct2›)<br>\n  oops</p>\n<p>Note that we had to name the matched premise to make it accessible.<br>\nI've also use the <code>thin</code> attribute to remove the original premise on<br>\nreturn from the match.</p>\n<p>Perhaps this is a slight improvement:</p>\n<p>lemma \"A ∧ B ⟹ A ∨ B\"<br>\n  apply (match premises in H[thin]: \"A ∧ B\" ⇒<br>\n<br>\n    ‹insert conjunct2[OF H]›)<br>\n  oops</p>\n<blockquote>\n<p>Thanks a lot,</p>\n<p>Zhe<br>\n</p>\n</blockquote>\n<p>You're welcome!</p>\n<p>Matthew</p>",
        "id": 294679874,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661176325
    }
]