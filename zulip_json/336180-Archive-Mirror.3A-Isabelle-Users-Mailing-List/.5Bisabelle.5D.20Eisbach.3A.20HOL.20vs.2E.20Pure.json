[
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nDear Makarius and Dan,</p>\n<p>what is the reason for Eisbach residing in HOL instead of Pure? As far<br>\nas I can tell, the only dependency on HOL is for the \"match\" method,<br>\nwhich treats \"Trueprop\" specially (makes sense to me), but appears to<br>\nalso deal with numerals (I don't understand the corresponding sources).</p>\n<p>Anyway, making an exact copy of \"Eisbach.thy\", removing the line</p>\n<p>ML_file \"match_method.ML\"</p>\n<p>... and changing the import from \"Main\" to \"Pure\", it still works. I've<br>\nmade a tiny experiment with some \"simp\" and \"rule\" invocations and the<br>\nmethod I defined behaves exactly as expected.</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294645603,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661163935
    },
    {
        "content": "<p>From: Daniel Matichuk &lt;<a href=\"mailto:daniel.matichuk@nicta.com.au\">daniel.matichuk@nicta.com.au</a>&gt;<br>\nYou're correct, there is no deeper reason for residing in HOL other than giving it a default place to live.<br>\nThe match method's dependence on HOL is also superficial and could be removed by using the proper Object_Logic interface where appropriate.<br>\nThe use of numerals is a workaround for limitations in the method combinators, in order to pass information inside of a goal state. The proper fix here is to have a more rich type for methods (which has already been discussed), but the existing workaround could be adjusted to use more primitive operations (ultimately it just needs \"int -&gt; term\" and \"term -&gt; int\" regardless of the encoding).</p>\n<p>These are all things that would disappear if/when Eisbach is integrated into Isar proper, rather than being a separate entity.</p>\n<hr>\n<p>The information in this e-mail may be confidential and subject to legal professional privilege and/or copyright. National ICT Australia Limited accepts no liability for any damage caused by this email or its attachments.</p>",
        "id": 294645720,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661163966
    },
    {
        "content": "<p>From: Larry Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nI agree that it would be right for Eisbach to be installed generically, and available to all object-logics. Everything is Isabelle/HOL these days, but you never know when Isabelle/ZF might get a small revival. The original idea of Isabelle is that everything is available everywhere as much as possible.</p>\n<p>Larry Paulson</p>",
        "id": 294645781,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661163997
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nIndeed, I still subscribe to this principle.  Apart from Isabelle/ZF, <br>\nsomeone might even re-activate the ancient Martin-LÃ¶f Type Theory <br>\n(Isabelle/CTT), which has become popular again due to the HoTT movement.</p>\n<p>The reasons why Eisbach ended up as isolated subsession derived from HOL <br>\nare pragmatic. Due to this convenient place in the session hierarchy for <br>\nits own development, it was possible to make many last-minute changes and <br>\nstill ship everything on-time for the release.</p>\n<p>Next time it should be done more according to the Pure rules of Isabelle, <br>\nbut it also requires a second big reform on the instantiation are (\"where\" <br>\nand \"of\" attributes).  More than half of Eisbach are actually just the <br>\nusual reforms, to make the application then rather obvious.</p>\n<p>Makarius</p>",
        "id": 294645867,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661164040
    }
]