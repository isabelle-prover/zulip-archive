[
    {
        "content": "<p>From: Aleks Kissinger &lt;<a href=\"mailto:aleks0@gmail.com\">aleks0@gmail.com</a>&gt;<br>\nI maintain a graph rewriting library that can run either inside of<br>\nIsabelle or standalone. In the latter case, it needs to emulate a<br>\nfragment of the Isabelle/ML toplevel in poly/ML. I'm currently in the<br>\nprocess of updating this for Isabelle 2015.</p>\n<p>It's mostly working, except Future.fork is throwing a mysterious<br>\nexception. The emulation is done via:</p>\n<p><a href=\"https://github.com/Quantomatic/quantomatic/blob/isabelle2015/core/isabelle_env.ML\">https://github.com/Quantomatic/quantomatic/blob/isabelle2015/core/isabelle_env.ML</a></p>\n<p>which expects the \"Pure\" directory from Isabelle 2015 to be a<br>\nsubdirectory. Here's what happens:</p>\n<p>$ ML_SYSTEM=polyml ML_PLATFORM=unknown poly --use isabelle_env.ML</p>\n<p>...</p>\n<blockquote>\n<p>Future.fork (fn() =&gt; 0);</p>\n</blockquote>\n<p>Exception trace for exception - ERROR raised in library.ML line 257</p>\n<p>End of trace</p>\n<p>val it =<br>\n   Future<br>\n    {task =<br>\n     Task<br>\n      {id = 3, pos = Pos ((0, 0, 0), []), pri = SOME 0, name = \"fork\",<br>\n       group =<br>\n       Group<br>\n        {id = 2, parent = NONE, status =<br>\n         Var {var = ref NONE, cond = ?, lock = ?, name = \"group_status\"}},<br>\n       timing = NONE}, result =<br>\n     Var {var = ref NONE, cond = ?, lock = ?, name = \"future\"}, promised =<br>\n     false}: int future</p>\n<p>Any ideas? Also, is there some way to coerce Future.fork to give a<br>\nmore informative stacktrace? I've tried various combinations with<br>\nPolyML.exception_trace to little effect. I assume this has to do with<br>\nhow futures capture exceptions until they are join'ed.</p>\n<p>Aleks</p>",
        "id": 294657225,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661168529
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe exception trace is already in Simple_Thread.fork, but it does not <br>\nprint the exception value, only names.  I've changed that temporarily to <br>\nprint General.exnMessage, and it reveals that some future worker thread <br>\ncomplains about the absence of system option \"threads_stack_limit\".</p>\n<p>Since there might be more subtle additions in Isabelle2015, I've carefully <br>\nlooked through isabelle_env.ML, after putting it into the canonical order <br>\nof that release.  The result is attached here.</p>\n<p>More notes on your original version:</p>\n<p>* exception Interrupt was created afresh (!) independently on the one<br>\n     special exception SML90.Interrupt</p>\n<p>* the Poly/ML bootstrap file has a version, for Isabelle2015 it is<br>\n     \"ML-Systems/polyml-5.5.2.ML\"</p>\n<p>* tracing was unsynchronized, and in fact a duplicate from output.ML<br>\n     loaded later</p>\n<p>Makarius<br>\n<a href=\"/user_uploads/14278/YHC-XWt6or_KXom_wFT0rwra/isabelle_env.ML\">isabelle_env.ML</a></p>",
        "id": 294657296,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661168573
    },
    {
        "content": "<p>From: Aleks Kissinger &lt;<a href=\"mailto:aleks0@gmail.com\">aleks0@gmail.com</a>&gt;<br>\nExcellent! Probably the issue came from using poly/ML 5.5.0, which<br>\nbecame clear as soon as \"poly-5.5.2.ML\" understandably failed to<br>\ntypecheck....</p>\n<p>For future ref, how can I reconstruct \"canonical\" order from the<br>\nsources? Is it (roughly) the bootstrap file, followed by Pure/ROOT.ML<br>\n?</p>",
        "id": 294657301,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661168579
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nYes, Pure/ROOT.ML defines the order.  It is often re-shuffled in subtle <br>\nways as years are coming and going.</p>\n<p>I merely walked through your isabelle_env.ML, and re-ordered it according <br>\nto what was written in Isabelle2015/ROOT.ML.</p>\n<p>Makarius</p>",
        "id": 294657313,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661168585
    }
]