[
    {
        "content": "<p>From: John Munroe &lt;<a href=\"mailto:munddr@gmail.com\">munddr@gmail.com</a>&gt;<br>\nHi,</p>\n<p>Does anyone know where I can find how the existential quantifier is<br>\nencoded using quantifier constants and lambda terms? I see</p>\n<p>Ex_def:       \"Ex(P)     == !Q. (!x. P x --&gt; Q) --&gt; Q\"</p>\n<p>in HOL.thy. Is \"Ex\" here same as \"\\exists\" and \"!\" same as \"\\forall\"?<br>\n\"!\" is a binder for \"All\", which is the constant for universal<br>\nquantifier, right?</p>\n<p>Thanks for the help in advance.</p>\n<p>John</p>",
        "id": 294231592,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902757
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nAm 09/01/2013 06:13, schrieb John Munroe:</p>\n<blockquote>\n<p>Hi,</p>\n<p>Does anyone know where I can find how the existential quantifier is<br>\nencoded using quantifier constants and lambda terms? I see</p>\n<p>Ex_def:       \"Ex(P)     == !Q. (!x. P x --&gt; Q) --&gt; Q\"</p>\n<p>in HOL.thy. Is \"Ex\" here same as \"\\exists\" and \"!\" same as \"\\forall\"?<br>\n\"!\" is a binder for \"All\", which is the constant for universal<br>\nquantifier, right?</p>\n</blockquote>\n<p>Right.</p>\n<p>Tobias</p>\n<blockquote>\n<p>Thanks for the help in advance.</p>\n<p>John<br>\n</p>\n</blockquote>",
        "id": 294231603,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902762
    }
]