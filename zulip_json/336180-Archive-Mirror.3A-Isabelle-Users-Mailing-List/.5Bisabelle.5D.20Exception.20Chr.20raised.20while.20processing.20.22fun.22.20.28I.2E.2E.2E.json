[
    {
        "content": "<p>From: \"Eugene W. Stark\" &lt;<a href=\"mailto:isabelle-users@starkeffect.com\">isabelle-users@starkeffect.com</a>&gt;<br>\nAny ideas about the following?</p>\n<p>theory Barf<br>\nimports Main<br>\nbegin</p>\n<p>datatype 't \"term\" =<br>\n      Const 't<br>\n    | U<br>\n    | T \"'t term * 't term\"<br>\n    | C \"'t term * 't term\"<br>\n    | L \"'t term\"<br>\n    | L' \"'t term\"<br>\n    | R \"'t term\"<br>\n    | R' \"'t term\"<br>\n    | A \"'t term * 't term * 't term\"<br>\n    | A' \"'t term * 't term * 't term\"</p>\n<p>fun F :: \"'a term ⇒ int\"<br>\n    where \"F (T (T (U, b), c)) = 1 + F (T (U, T (b, c)))\"<br>\n        | \"F (T (T (a, b), c)) = 1 + F a + F (T (b, c))\"<br>\n        | \"F (T (U, b)) = 1 + F b\"<br>\n        | \"F (T (a, U)) = 1 + F a\"<br>\n        | \"F (T (a, b)) = (F a) + (F b)\"<br>\n        | \"F a = undefined\"</p>\n<p>(* exception Chr raised (line 268 of \"./basis/String.sml\") *)<br>\nend<br>\n<a href=\"/user_uploads/14278/yG5d2kUNp9ZePcj-tf1BgjKt/Barf.thy\">Barf.thy</a></p>",
        "id": 294691134,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661177812
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nHi Eugene,</p>\n<blockquote>\n<p>(* exception Chr raised (line 268 of \"./basis/String.sml\") *)</p>\n</blockquote>\n<p>this is a fun problem!</p>\n<p>By looking at the exception trace (to be enabled with \"declare<br>\n[[ML_exception_trace]]\" before \"fun\"), we can see the culprit:</p>\n<p>Lexicographic_Order.no_order_msg</p>\n<p>This function formats the message you see when the function package is<br>\nunable to find a termination order. In this specific case it fails<br>\nbecause it tries to come up with some alphabetic index:</p>\n<p>val gc = map (fn i =&gt; chr (i + 96)) (1 upto length table)</p>\n<p>Because there function definition explodes in size internally, the<br>\nargument passed to \"chr\" is simply out of range.</p>\n<p>I'm pretty sure the author of the function package did not anticipate<br>\nsuch large functions ...</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294691149,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661177818
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Eugene,</p>\n<p>The problem seems to be with lexicographic_order (it probably tries to generate some error <br>\nor info message in which a conversion to characters fails). If you use size_change in the <br>\ntermination proof, it works:</p>\n<p>function (sequential) F :: \"'a term ⇒ int\"<br>\n     where \"F (T (T (U, b), c)) = 1 + F (T (U, T (b, c)))\"<br>\n         | \"F (T (T (a, b), c)) = 1 + F a + F (T (b, c))\"<br>\n         | \"F (T (U, b)) = 1 + F b\"<br>\n         | \"F (T (a, U)) = 1 + F a\"<br>\n         | \"F (T (a, b)) = (F a) + (F b)\"<br>\n         | \"F a = undefined\"<br>\n       by pat_completeness auto<br>\n     termination by size_change</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 294691162,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661177824
    }
]