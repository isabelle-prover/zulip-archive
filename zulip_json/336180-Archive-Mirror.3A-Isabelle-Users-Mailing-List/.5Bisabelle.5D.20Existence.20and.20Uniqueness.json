[
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nYou can use the unique choice operator \"The\". You can write something<br>\nlike \"THE x. P x\", and that gives you the unique value x for which P<br>\nholds, or something undefined if no such value exists.</p>\n<p>If you've already proven unique existence (with ∃!), there are a few<br>\ntheorems (theI', the1_equality) that you can use to get the properties<br>\nyou want.</p>\n<p>There is also the general choice combinator \"Some\" (Hilbert's epsilon<br>\noperator) for cases where the value being chosen is not unique.</p>\n<p>There is also the \"specification\" command which allows you to do pretty<br>\nmuch to the same thing: Convert an existence proof into an actual value.<br>\nThe following example defines a \"n-th prime\" function:</p>\n<p>consts f :: \"nat ⇒ nat\"</p>\n<p>specification (f)<br>\n  prime_f: \"prime (f n)\"<br>\n  card_primes_less_f: \"card {q. prime q ∧ q &lt; f n} = n\"<br>\n(* proof *)</p>\n<p>The specification command is basically a small wrapper around the choice<br>\noperator \"Some\", as can be seen by inspecting f_def after it. Frankly, I<br>\ndon't see it being used very often these days, and it only works on the<br>\ntoplevel, not inside proofs. So I personally usually just use \"The\" or<br>\n\"Some\" directly.</p>\n<p>Manuel<br>\n<a href=\"/user_uploads/14278/rBKopbGCZQUVthicdNmGuq0a/pEpkey.asc\">pEpkey.asc</a></p>",
        "id": 294745159,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661193133
    }
]