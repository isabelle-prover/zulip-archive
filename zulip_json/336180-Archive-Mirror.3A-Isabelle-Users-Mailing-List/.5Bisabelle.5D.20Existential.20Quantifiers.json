[
    {
        "content": "<p>From: <a href=\"mailto:jd@cococo.de\">jd@cococo.de</a><br>\nHello all,<br>\nafter having thought a lot about existential quantifiers in predicate <br>\nlogic I came to the conclusion, that there is no need for several <br>\ninstances of a specific quantifier. You can normalize each formula to a <br>\nprenex formula and afterwards combine the quantifiers to quantifiers over <br>\nvectors.  So only one existential quantifier and only one all quantifier <br>\nwould suffice. Am I right? a) If yes, can you tell a method for <br>\ndecomposition of vectorized quantifiers? b) If not, please give an <br>\nexample, where vectorization does not work.<br>\nJens</p>",
        "id": 294083023,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660831295
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nThis type of transformation may work in theory, but increases the  <br>\nlength of the proof enormously. Theory again tells us that the  <br>\nincrease in proof length could be non-elementary (inconceivably vast).<br>\nLarry Paulson</p>",
        "id": 294083038,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660831302
    },
    {
        "content": "<p>From: Tim McKenzie &lt;<a href=\"mailto:tjm1983@gmail.com\">tjm1983@gmail.com</a>&gt;<br>\nSo you want to group all the existential quantifiers together with <br>\neach other, and likewise all the universal ones together?  In <br>\ngeneral, ALL. EX. ALL. isn't the same as EX. ALL. ALL. or ALL. <br>\nALL. EX.  For example:</p>\n<p>ALL x. ALL y. EX z. z &gt; x + y</p>\n<p>is true (for various numerical types), but</p>\n<p>ALL x. EX z. ALL y. z &gt; x + y</p>\n<p>is not true.</p>\n<p>Tim<br>\n&lt;&gt;&lt;<br>\n<a href=\"/user_uploads/14278/ykDt7f07wWfI27JqCVpioJ10/signature.asc\">signature.asc</a></p>",
        "id": 294083145,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660831327
    },
    {
        "content": "<p>From: Tjark Weber &lt;<a href=\"mailto:webertj@in.tum.de\">webertj@in.tum.de</a>&gt;<br>\nThat is correct, of course.  On the other hand,</p>\n<p>ALL x. EX z. ALL y. z(y) &gt; x + y</p>\n<p><em>is</em> equivalent to the former (cf. Skolemization, axiom of choice).</p>\n<p>Perhaps <a href=\"http://en.wikipedia.org/wiki/Skolem_normal_form\">http://en.wikipedia.org/wiki/Skolem_normal_form</a> is instructive.</p>\n<p>Regards,<br>\nTjark</p>",
        "id": 294083161,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660831333
    },
    {
        "content": "<p>From: <a href=\"mailto:jd@cococo.de\">jd@cococo.de</a><br>\nHello Tim and Tjark,<br>\nthanks for the examples and explanations. Now I understand my point of <br>\nview better. Because I am into constructive proofs versus existential <br>\nstatements, I am interested in resolving existential quantifiers to their <br>\n(minimal) solutions, which may be formulas or halting programs. When <br>\nreplacing</p>\n<p>\"Ex x.P(y)\", where P is some predicate</p>\n<p>by it's solution</p>\n<p>\"x=f(y)\"</p>\n<p>I currently only consider the minimal solutions for f(y), which is unique. <br>\nI understand, that there are situations, when our rational mathematics <br>\nleads to existential statements, especially when considering sequences <br>\nlike</p>\n<p>\"iterate until x-y**2&lt;eps\".</p>\n<p>Regards,<br>\nJens</p>",
        "id": 294083206,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660831351
    }
]