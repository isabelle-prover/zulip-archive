[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear experts of the type class implementation,</p>\n<p>I have the following problem. In one theory, a constant (fractrel) is defined in the <br>\ntarget of a type class (idom) and the definition depends on some of the parameters of the <br>\ntype class. In another theory, a subclass (euclidean_ring) of this type class is defined. <br>\nIn a third theory, which imports both theories, I prove in the type class target of the <br>\nsubclass a lemma which refers to the constant fractrel.</p>\n<p>After having left the type class target, I found that the theorem is not exported <br>\ncorrectly. The theorem refers to the foundational constant \"idom.fractrel ...\" rather than <br>\nthe overloaded constant \"fractrel\".</p>\n<p>Here is a minimal example:</p>\n<p>theory Scratch imports Main begin<br>\ndefinition (in idom) fractrel :: \"'a × 'a ⇒ 'a * 'a ⇒ bool\"<br>\n   where \"fractrel = (λx y. fst x * snd y = fst y * snd x)\"<br>\nend</p>\n<p>theory ScratchA imports Scratch \"~~/src/HOL/Number_Theory/Euclidean_Algorithm\" begin<br>\nlemma (in euclidean_ring) lem: \"b ≠ 0 ⟹ fractrel (a, b) (a, b)\" sorry<br>\nthm lem<br>\nend</p>\n<p>The \"thm lem\" command outputs</p>\n<p>?b ≠ 0 ⟹ idom.fractrel op * (?a, ?b) (?a, ?b)</p>\n<p>but it should be</p>\n<p>?b ≠ 0 ⟹ fractrel (?a, ?b) (?a, ?b)</p>\n<p>Obviously, lem in the current form is unusable, because \"idom.fractrel op *\" and <br>\n\"fractrel\" do not unify. What is going on here or am I doing something wrong? How do I get <br>\nthe theorem I'd like to have?</p>\n<p>Best,<br>\nAndreas</p>\n<p>PS: In my actual use case, the lemma lem refers to a constant defined in the context of <br>\neuclidean_ring, so I cannot just move it to the target idom, where the export from the <br>\ncontext works as expected. Also, the definition of fractrel should be in some other theory <br>\nthan the lemma; if they were in the same, the export works again as expected.</p>",
        "id": 294654337,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661167395
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nIndeed strange.  The mixin in the corresponding class seems somehow get<br>\nlost on theory merge.  It will take more rounds of investigation to find<br>\nout what is going wrong here.</p>\n<p>You can help yourself by introducing a new auxiliary class, cf. B.thy.</p>\n<p>Florian<br>\n<a href=\"/user_uploads/14278/gegFH-bkrPzdke0HWLa9yWis/A.thy\">A.thy</a><br>\n<a href=\"/user_uploads/14278/KCkd1j2PX30A-Zv7nRXF3Tzi/B.thy\">B.thy</a><br>\n<a href=\"/user_uploads/14278/PpQtWygIf25dlFQ5Jn_8VBQj/C.thy\">C.thy</a><br>\n<a href=\"/user_uploads/14278/_99hYkIbYjRkdSISR4On4-2e/signature.asc\">signature.asc</a></p>",
        "id": 294654622,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661167530
    }
]