[
    {
        "content": "<p>From: \"Gransden, Thomas\" &lt;<a href=\"mailto:tg75@student.le.ac.uk\">tg75@student.le.ac.uk</a>&gt;<br>\nHello all,</p>\n<p>I'm looking for some guidance to complete a task that I would like to do.</p>\n<p>In my theory file, I have the following code:</p>\n<p>ML {*<br>\nval thm = @{thm \"a1\"};<br>\nval prf = Proofterm.proof_of (Proofterm.strip_thm (Thm.proof_body_of thm));<br>\n*}</p>\n<p>ML {*<br>\nPretty.writeln (Proof_Syntax.pretty_proof @{context} prf'');<br>\n*}</p>\n<p>which gives me a proof term, as required. I would like to export the proof terms for each lemma in my theory file into a text file, so that I can do some analysis on the proof steps used in each proof.</p>\n<p>Firstly, is there any existing functionality to do this task? Something that will take each lemma in the theory file, and perform the above commands on them.</p>\n<p>If not, I realise that there might be a few alternatives, such as writing my own function in ML, modifying existing Isabelle functionality, or modifying Proof General, in which case I realise the Isabelle dev mailing list might be a better place to post.</p>\n<p>If anybody has any thoughts on this problem, I would be interested to hear them.</p>\n<p>All the best,</p>\n<p>Tom</p>",
        "id": 294227410,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660900678
    },
    {
        "content": "<p>From: Tjark Weber &lt;<a href=\"mailto:webertj@in.tum.de\">webertj@in.tum.de</a>&gt;<br>\nAround 2007 I wrote a tactical that exported proof terms in XML format,<br>\nbased on functionality by Stefan Berghofer. I am attaching my code<br>\n(which never made it into the Isabelle repository and most likely no<br>\nlonger works with Isabelle2012, but may still serve as a starting point<br>\nfor your own investigations). For explanations, see Section 5.5 of<br>\n<a href=\"http://user.it.uu.se/~tjawe125/publications/weber08satbased.pdf\">http://user.it.uu.se/~tjawe125/publications/weber08satbased.pdf</a></p>\n<p>Best regards,<br>\nTjark<br>\n<a href=\"/user_uploads/14278/OEX-dslesSV-XBPR0PnbFNoM/persistent.ML\">persistent.ML</a></p>",
        "id": 294227470,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660900690
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThese are actually two independent things: writing stuff to a file and <br>\nanalysing what the prover did internally.  Isabelle/ML is a quite able <br>\nlanguage to do analysis of symbolic datastructures, so if you stay within <br>\nthat environment you don't have to read or write files.  File-system <br>\noperations introduce statefulness that make it hard to work reliably in a <br>\nmulti-version multi-threaded environment like Isabelle --- unless you <br>\nforce it into sequential TTY mode and spoil the game.</p>\n<p>If you still do need to externalize and export material from Isabelle/ML, <br>\nthe current way to do it (in Isabelle2012) is via the XML data encoding, <br>\nand prefereably the YXML transfer syntax (then you don't have to struggle <br>\nwith XML parsers on the other side).  See $ISABELLE_HOME/src/Pure/PIDE/ <br>\nwith xml.ML and yxml.ML in particular.  There are also Scala versions of <br>\nthe same.  Example applications are $ISABELLE_HOME/src/Pure/term_xml.ML <br>\nfor the main logical datatypes of Isabelle.</p>\n<p>This is all perfectly normal Isabelle/ML user space.</p>\n<p>Moreover, see <a href=\"https://bitbucket.org/makarius/yxml\">https://bitbucket.org/makarius/yxml</a> where the same approach <br>\nis made independent of Isabelle/ML, to work in plain SML or OCaml.</p>\n<p>I still hope that more people will pick up this simple and efficient <br>\napproach to externalize ML datastructures, without the full burden of XML <br>\ngetting in the way.</p>\n<p>When doing the sort/typ/term application myself, I also tried the same for <br>\nthe proof datatype, and eliminate the old Pure/Tools/xml_syntax.ML in the <br>\ncourse.  Unfortunately, I failed to apply the proof reconstruction <br>\nfunctions in the way they were documented 10 years ago, and did not spend <br>\nfurther time to investigate the current situation.</p>\n<p>So ultimately, it is probably a matter to motivate Stefan Berghofer to <br>\nbrush up his proof term interfaces to work with current Isabelle and the <br>\nXML/YXML data representation smoothly.</p>\n<p>Makarius</p>",
        "id": 294227869,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660900909
    }
]