[
    {
        "content": "<p>From: Colin Farquhar &lt;<a href=\"mailto:cif30@hw.ac.uk\">cif30@hw.ac.uk</a>&gt;<br>\nDear Isabelle users,</p>\n<p>Im currently working on something which requires proofs constructed in<br>\nIsabelle to be translated into Prolog in order to work with a machine<br>\nlearning tool. After some testing I have found that using proof terms is the<br>\neasiest way to find the structure of a proof and which tactics are being<br>\nused and in which order, but I also need the details of the goals the<br>\ntactics are applied to.</p>\n<p>For example, take the following lemma:</p>\n<p>lemma a: A /\\ B à B /\\ A</p>\n<p>apply (rule impI)</p>\n<p>apply (erule conjE)</p>\n<p>apply (rule conjI)</p>\n<p>apply assumption</p>\n<p>apply assumption</p>\n<p>done</p>\n<p>Using full_prf a gives me the proof term, while using val pterm_a =<br>\nProofterm.Proof_of (Proofterm.strip_thm (Thm.proof_body_of @{thm a})) gives<br>\na detailed description. The code I have written already provides a list of<br>\ntactics in the order they are used, where each nested list contains the<br>\ntactic(s) applied to the subgoal(s) generated by the previous tactic, eg.<br>\nhere the list would be [impI [conje [conjI [assumption,assumption]]]]. Im<br>\ntrying to get something similar for goals where each nested list contains<br>\nthe subgoal(s) generated by applying a tactic to the previous goal ( eg. [A<br>\n/\\ B à B /\\ A [A /\\ B è B /\\ A [ A è B è B /\\ A [A è B è B, A è B è A]]]] )<br>\nwhich I can then map to the list of tactics to get a list of (tactic, goal)<br>\npairs. The problem is, I cant find a way to extract the details of the<br>\nsubgoals in the middle of the proof. Is this even possible using proof terms<br>\nin this way? If so, can anyone help me with where I can find the information<br>\nIm looking for?</p>\n<p>Thanks,</p>\n<p>Colin Farquhar</p>\n<hr>\n<p>We invite research leaders and ambitious early career researchers to <br>\njoin us in leading and driving research in key inter-disciplinary themes. <br>\nPlease see <a href=\"http://www.hw.ac.uk/researchleaders\">www.hw.ac.uk/researchleaders</a> for further information and how<br>\nto apply.</p>\n<p>Heriot-Watt University is a Scottish charity<br>\nregistered under charity number SC000278.</p>",
        "id": 294640106,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661161742
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI am not sure if you've got any further in this quest in the meantime.</p>\n<p>Proof terms are sometimes useful to see the foundational reasoning going <br>\non deep in the bottom of the inference engine, but they are hard to work <br>\nwith productively.  For two reasons:</p>\n<p>(1) Proof terms are very expensive for anything but rather small<br>\n     applications of Isabelle/HOL.</p>\n<p>(2) Analyzing proof terms is relatively difficult, because most of the<br>\n     original resoning structure is lost; in particular, the original<br>\n     tactical goal state is no longer there, as you have already noticed.</p>\n<p>So we are back to what \"proofs constructed in Isabelle to be translated <br>\ninto Prolog\" really means.  Does it refer to arbitrary proofs found in the <br>\nwild of actual applications, lets say the Archive of formal Proof?  Or <br>\ndoes it mean some specific proof examples that you construct yourself?</p>\n<p>Moreover, when you say \"tactic\" above, I guess that you mean \"theorem\". <br>\nIs this correct?</p>\n<p>Makarius</p>",
        "id": 294644682,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661163562
    }
]