[
    {
        "content": "<p>From: Holger Blasum &lt;<a href=\"mailto:hbl@sysgo.com\">hbl@sysgo.com</a>&gt;<br>\nDear all,</p>\n<p>I would ask that when you ctrl+hover on a function definition <br>\n(such as mysucc in attached hover.thy) then not only the <br>\ntyping information of mysucc (\"nat =&gt; nat\") shows up but <br>\nalso the body of the function (\"mysucc n = n + 1\"). Or does that <br>\nfeature already exist?</p>\n<p>best,<br>\n<a href=\"/user_uploads/14278/uw0PP1Nzz7svoI3z4X8tCvIu/hover.thy\">hover.thy</a></p>",
        "id": 294229018,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901468
    },
    {
        "content": "<p>From: John Wickerson &lt;<a href=\"mailto:jpw48@cam.ac.uk\">jpw48@cam.ac.uk</a>&gt;<br>\nHi Holger,</p>\n<p>I find that if you ctrl+click on a function name, then the focus jumps to the definition of that function.</p>\n<p>John</p>",
        "id": 294229030,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901474
    },
    {
        "content": "<p>From: Holger Blasum &lt;<a href=\"mailto:hbl@sysgo.com\">hbl@sysgo.com</a>&gt;<br>\nHi John,</p>\n<p>Ctrl+Click is certainly useful and well-intentioned. But I feel jumping <br>\nwith the focus disrupts workflow more than it would just show up as <br>\ntool tip (by Ctrl+hover). Also, if I understand correctly (again, maybe I <br>\nmiss sth) when I use Ctrl+Click on a function name then there is no <br>\nsingle-key way back (like pressing \"Esc\" or something ...) to where <br>\nthe focus was before. </p>\n<p>Best,</p>",
        "id": 294229047,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901480
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nYou could try playing around with the Navigator extension.</p>",
        "id": 294229054,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901486
    },
    {
        "content": "<p>From: Fabian Immler &lt;<a href=\"mailto:immler@in.tum.de\">immler@in.tum.de</a>&gt;<br>\nThere is also jEdits command \"Go to recent buffer\" with its predefined<br>\nshortcut Ctrl-`.</p>",
        "id": 294229071,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901492
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nTry using Markers.</p>\n<p>I just wish that they worked between files, and not just within a single file.</p>\n<p>Larry</p>",
        "id": 294229082,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901498
    },
    {
        "content": "<p>From: Fabian Immler &lt;<a href=\"mailto:immler@in.tum.de\">immler@in.tum.de</a>&gt;<br>\n... if the definition is in a separate file.</p>",
        "id": 294229113,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901511
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Mon, 17 Dec 2012, Fabian Immler wrote:</p>\n<blockquote>\n<p>There is also jEdits command \"Go to recent buffer\" with its predefined<br>\nshortcut Ctrl-`.</p>\n</blockquote>\n<p>I did not know this one yet -- Fabian is lucky with his US keyboard <br>\nlayout.</p>\n<p>Myself I do it in a more basic way: C-W to close the target buffer.  This <br>\nworks under the assumption that it is from the \"library\", i.e. you don't <br>\ncare having it open or not.</p>\n<blockquote>\n<p>2012/12/17 Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;:</p>\n<p>You could try playing around with the Navigator extension.</p>\n</blockquote>\n<p>I've found it unconvincing when I tried some months ago -- one of the <br>\nweaker jEdit plugins.  It looks like really good navigation needs to be <br>\nprovided as Isabelle/jEdit functionality.  Don't hold your breath for the <br>\ncoming release, though.  If someone can point to a good specification how <br>\nthis should work, lets say in Firefox, it can be accelerated.  Or someone <br>\nelse might sit down himself and improve the jEdit Navigator plugin <br>\nupstream.</p>\n<p>Another idea in the pipeline is to improve the content and flexibility of <br>\nthe Isabelle/jEdit popup window: it could show you the part of the <br>\nrelevant source outright, or some documentation.  The next release will <br>\nalready have a popup that is recursively again a jEdit text area at a <br>\nsmall scale, but without the extra functionality sketched here.</p>\n<p>Makarius</p>",
        "id": 294229185,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901529
    },
    {
        "content": "<p>From: Holger Blasum &lt;<a href=\"mailto:hbl@sysgo.com\">hbl@sysgo.com</a>&gt;<br>\nHi Makarius,</p>\n<p>On 12-17, Makarius wrote:</p>\n<blockquote>\n<p>Another idea in the pipeline is to improve the content and<br>\nflexibility of the Isabelle/jEdit popup window: it could show you<br>\nthe part of the relevant source outright, or some documentation.</p>\n</blockquote>\n<p>That was I what I had asked for. To understand it: is the definition<br>\nof a function (or an abbreviation, another use case, this is the one<br>\nI was originally asked when showing a theory with abbreviations to<br>\na coworker, where typing information \"bool\" wasn't really informative) <br>\nless \"available\" at run-time than its typing information?</p>\n<blockquote>\n<p>The next release will already have a popup that is recursively again<br>\na jEdit text area at a small scale, but without the extra<br>\nfunctionality sketched here.</p>\n</blockquote>\n<p>I've noticed this - being positively surprised how smoothly the stuff just<br>\nrandomly plucked from the repository today compiles and works :-)<br>\nOnly that I haven't figured out yet how to enter the window without<br>\nit disappearing from (a possibly non-standard-configured) fvwm, but <br>\nit works in xfce4. But anyway, the tool tip's presentation is orthogonal <br>\nto its content (and I think the former is more important).</p>\n<p>Best,</p>",
        "id": 294229213,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901547
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Mon, 17 Dec 2012, Holger Blasum wrote:</p>\n<blockquote>\n<p>On 12-17, Makarius wrote:</p>\n<blockquote>\n<p>Another idea in the pipeline is to improve the content and flexibility <br>\nof the Isabelle/jEdit popup window: it could show you the part of the <br>\nrelevant source outright, or some documentation.</p>\n</blockquote>\n<p>That was I what I had asked for. To understand it: is the definition of <br>\na function (or an abbreviation, another use case, this is the one I was <br>\noriginally asked when showing a theory with abbreviations to a coworker, <br>\nwhere typing information \"bool\" wasn't really informative) less <br>\n\"available\" at run-time than its typing information?</p>\n</blockquote>\n<p>First one needs to think about the canonical \"definition\" you want to see, <br>\nwhich is not necessarily the actual logical definition.  I did not engage <br>\nit that seriously so far, simply because it was too far off.</p>\n<p>There is also the question about volume of formal document content emitted <br>\nby the prover towards the front-end.  Types (and sorts in the coming <br>\nrelease) still work, but flooding with all possible term expansions by <br>\ndefault will pose problems.  It might have to be done more lazily, or on <br>\nexplicit request, but this is still underdeveloped.</p>\n<p>The sources where you define things in a certain external form are better <br>\nsuited.  No additional volume produced by the prover -- they are already <br>\nthere -- and no question how to present them -- you did it already <br>\nyourself.</p>\n<blockquote>\n<blockquote>\n<p>The next release will already have a popup that is recursively again<br>\na jEdit text area at a small scale, but without the extra<br>\nfunctionality sketched here.</p>\n</blockquote>\n<p>I've noticed this - being positively surprised how smoothly the stuff <br>\njust randomly plucked from the repository today compiles and works :-)</p>\n</blockquote>\n<p>Works usually means \"works for me\" in a restricted sense.  There are still <br>\nmany issues pending for the coming release, and we are already in the <br>\nconsolidation phase.  To continue the \"use of latest repository game\" <br>\nseriously, you have to subscribe to the isabelle-dev mailing list, for <br>\ntwo-way information exchange: you need to know about recent moves, and we <br>\nneed to get feedback about open problems.  The repository is no magic door <br>\nto get the latest features earlier than others, it rather means you have <br>\ntime to spend to work out issues you encounter.</p>\n<blockquote>\n<p>Only that I haven't figured out yet how to enter the window without it <br>\ndisappearing from (a possibly non-standard-configured) fvwm, but it <br>\nworks in xfce4. But anyway, the tool tip's presentation is orthogonal to <br>\nits content (and I think the former is more important).</p>\n</blockquote>\n<p>It's not quite orthogonal.  Having my own window popping up, allows to <br>\ndefine its content.  I started experimenting with that already in 2010, <br>\nand then stopped after desparation with different Java look-and-feels, <br>\nplatforms, window managers.  In the version for the coming release, I <br>\nactually did try twm with spontaneous focus change and it worked.  You <br>\nsurely have your own strange fvwm configuration.  Wasn't that fvwm2 back <br>\nthen in 1995?  Or do you have fvwm95 with the Windows 95 retro look?</p>\n<p>Makarius</p>",
        "id": 294229225,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901554
    },
    {
        "content": "<p>From: Holger Blasum &lt;<a href=\"mailto:hbl@sysgo.com\">hbl@sysgo.com</a>&gt;<br>\nHi Makarius,</p>\n<p>On 12-17, Makarius wrote:</p>\n<blockquote>\n<p>First one needs to think about the canonical \"definition\" you want<br>\nto see, which is not necessarily the actual logical definition.  I<br>\ndid not engage it that seriously so far, simply because it was too<br>\nfar off.</p>\n<p>There is also the question about volume of formal document content<br>\nemitted by the prover towards the front-end.  Types (and sorts in<br>\nthe coming release) still work, but flooding with all possible term<br>\nexpansions by default will pose problems.  It might have to be done<br>\nmore lazily, or on explicit request, but this is still<br>\nunderdeveloped.</p>\n<p>The sources where you define things in a certain external form are<br>\nbetter suited.  No additional volume produced by the prover -- they<br>\nare already there -- and no question how to present them -- you did<br>\nit already yourself.</p>\n</blockquote>\n<p>You're right what is interesting is the definition as defined by <br>\nthe user, not the one internally seen by Isabelle (iirc debuggers<br>\nalso do it this way). Does Isabelle internally only keep track of <br>\nwhere the definition begins (theory file, offset within the theory <br>\nfile) or also where it ends? (The latter would allow cutting the text ...)</p>\n<blockquote>\n<p>Works usually means \"works for me\" in a restricted sense.  There are<br>\nstill many issues pending for the coming release, and we are already<br>\nin the consolidation phase.  To continue the \"use of latest<br>\nrepository game\" seriously, you have to subscribe to the<br>\nisabelle-dev mailing list, for two-way information exchange: you<br>\nneed to know about recent moves, and we need to get feedback about<br>\nopen problems.  The repository is no magic door to get the latest<br>\nfeatures earlier than others, it rather means you have time to spend<br>\nto work out issues you encounter.</p>\n</blockquote>\n<p>Understood. In this case I was simply once-only checking whether<br>\nthe feature I was looking for perhaps was already implemented in<br>\nhead, and for that I was happy to get the thing started at all ... <br>\nCannot claim serious commitment to bleeding edge per se.</p>\n<blockquote>\n<p>You surely have your own strange fvwm configuration.<br>\nWasn't that fvwm2 back then in 1995?  Or do you have fvwm95 with the<br>\nWindows 95 retro look?</p>\n</blockquote>\n<p>Checked this (should have done so before), it was really just my<br>\nconfiguration, e.g. works fine with fvwm default configuration when<br>\nwheezy debian package is just installed without fiddling. Further<br>\ninspection revealed that inserting \"Style jEdit* SloppyFocus\" also fixes <br>\nthe disappearing jEdit subwindow for my configuration (without having to use <br>\nSloppyFocus elsewhere). I also begin to see the usefulness of <br>\nthe new-window feature because it allows (combined with above request for <br>\nputting meaningful text into it) that definitions or abbreviations could<br>\nbe unfolded step-by-step to arbitrary depth by the user.</p>\n<p>best,</p>",
        "id": 294229252,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901578
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Tue, 18 Dec 2012, Holger Blasum wrote:</p>\n<blockquote>\n<p>You're right what is interesting is the definition as defined by the <br>\nuser, not the one internally seen by Isabelle (iirc debuggers also do it <br>\nthis way). Does Isabelle internally only keep track of where the <br>\ndefinition begins (theory file, offset within the theory file) or also <br>\nwhere it ends? (The latter would allow cutting the text ...)</p>\n</blockquote>\n<p>There is sufficient information to determine the full definition range, <br>\nlets say the language element like \"fun ...\" with all its equations, or <br>\n\"function ...\" with the following proof.  For the latter example there is <br>\na special case, though: there is a second part following somewhere as <br>\n\"termination ...\" which is not directly connected.</p>\n<p>Anything else should work smoothly, one the reference to sources is wired <br>\nup properly in the editor.</p>\n<blockquote>\n<p>Further inspection revealed that inserting \"Style jEdit* SloppyFocus\" <br>\nalso fixes the disappearing jEdit subwindow for my configuration <br>\n(without having to use SloppyFocus elsewhere).</p>\n</blockquote>\n<p>I will look at this again myself.  Someone else has reported focus <br>\ninversion problems with the latest Unity/Compiz of Ubuntu 12.10, so this <br>\nmight be more than just an incident of vintage window managers.</p>\n<p>Makarius</p>",
        "id": 294229518,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901731
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nNo. At the moment, this information is unfortunately not available (as <br>\nthese theories are part of the heap image and were not processed in your <br>\njEdit session. To my knowledge, making this information available is on <br>\nMakarius' list of things to do, but there are a lot of things on this <br>\nlist ;)</p>\n<p>-- Lars</p>",
        "id": 294229640,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901780
    },
    {
        "content": "<p>From: Holger Blasum &lt;<a href=\"mailto:hbl@sysgo.com\">hbl@sysgo.com</a>&gt;<br>\nHello Makarius,</p>\n<p>On 12-22, Makarius wrote:</p>\n<blockquote>\n<p>On Tue, 18 Dec 2012, Holger Blasum wrote:</p>\n<blockquote>\n<p>You're right what is interesting is the definition as defined by<br>\nthe user, not the one internally seen by Isabelle (iirc debuggers<br>\nalso do it this way). Does Isabelle internally only keep track of<br>\nwhere the definition begins (theory file, offset within the theory<br>\nfile) or also where it ends? (The latter would allow cutting the<br>\ntext ...)</p>\n</blockquote>\n<p>There is sufficient information to determine the full definition<br>\nrange, lets say the language element like \"fun ...\" with all its<br>\nequations, or \"function ...\" with the following proof.  For the<br>\nlatter example there is a special case, though: there is a second<br>\npart following somewhere as \"termination ...\" which is not directly<br>\nconnected.</p>\n<p>Anything else should work smoothly, one the reference to sources is<br>\nwired up properly in the editor.</p>\n</blockquote>\n<p>\"Sufficient information to determine the full definition range\" <br>\nsounds promising :-) </p>\n<p>Why am I asking whether the end point information is available?<br>\nTo my post of 17 Dec I attached a file hover.thy:<br>\nIf we know that the definition of \"mysucc\" is in file hover.thy,<br>\ncharacters 0x49 to 0x5a, then it could perhaps be easy to implement<br>\nto display this information (that is, in this example, \"mysucc n = n + 1\") <br>\nonce you ctrl+hover on mysucc (without having to jump through<br>\nthe theories). From a usage perspective, I think<br>\nthis could be very convenient, especially if one reads a theory<br>\nsb else has written (\"what was this abbreviation she is using ...\").</p>\n<blockquote>\n<blockquote>\n<p>Further inspection revealed that inserting \"Style jEdit*<br>\nSloppyFocus\" also fixes the disappearing jEdit subwindow for my<br>\nconfiguration (without having to use SloppyFocus elsewhere).</p>\n</blockquote>\n<p>I will look at this again myself.  Someone else has reported focus<br>\ninversion problems with the latest Unity/Compiz of Ubuntu 12.10, so<br>\nthis might be more than just an incident of vintage window managers.</p>\n</blockquote>\n<p>Thanks for properly fixing this. That is, fvwm-wise, it now works not <br>\nonly with fvwm SloppyFocus pointer focus model, but also with the fvwm <br>\nFocusFollowsMouse pointer focus model.</p>\n<p>Happy 2013,</p>",
        "id": 294230916,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902456
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe \"definition range\" is the whole command span, starting with <br>\n\"definition ...\" and ending with \"mysucc n = n + 1\" in this example. <br>\nThis is what I meant to show in the popup eventually.</p>\n<p>In general, there is not just one equation defining a term, e.g. in \"fun\" <br>\nwith several recursive equations, or several functions defined at the same <br>\ntime.  Showing the whole specification text should give sufficient clues <br>\nto the user.  Lets see again how it looks when it is actually there (not <br>\nin the coming release.)</p>\n<p>Makarius</p>",
        "id": 294232333,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660903118
    },
    {
        "content": "<p>From: Alfio Martini &lt;<a href=\"mailto:alfio.martini@acm.org\">alfio.martini@acm.org</a>&gt;<br>\nDear Isabelle Users,</p>\n<p>I have a simple question (request?) considering this topic of  discussion.<br>\nI find this<br>\nfeature extremely helpful, especially when after Ctrl+Hover+click<br>\n transfers me<br>\na definition/rule/lemma in  any theory which happens to be part of  Main.</p>\n<p>For instance, in the last few days I have been a bit engaged in writing<br>\ndetailed<br>\nproofs in Isar which are concerned with the splitting of if´s. So after<br>\njumping<br>\nto HOL.thy   and  examining the split_if lemma I  wanted to continue<br>\nusing this (Ctrl+Hover+Click) feature and jumping to the definition of the<br>\ncase_split rule, for<br>\nexample.</p>\n<p>But this feature does not seem to available any more in the file HOL.thy or<br>\nany other<br>\ntheory loaded in jedit and which is part of Main. Am I doing<br>\nsomething wrong here [...probably...]?</p>\n<p>Best!</p>",
        "id": 294232464,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660903186
    }
]