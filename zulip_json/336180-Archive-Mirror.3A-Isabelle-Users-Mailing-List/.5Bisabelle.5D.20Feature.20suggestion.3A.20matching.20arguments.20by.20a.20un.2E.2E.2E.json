[
    {
        "content": "<p>From: Victor Porton &lt;<a href=\"mailto:porton@narod.ru\">porton@narod.ru</a>&gt;<br>\nAfter some experimentation I concluded that Isabelle 2011 does not support definitions of functions with pattern matching by a unique tag. For example the following does not work:</p>\n<p>typedecl tag</p>\n<p>consts t1::tag<br>\nconsts t2::tag</p>\n<p>definition \"f (t1, x) = t1\"<br>\ndefinition \"f (t2, x) = t2\"</p>\n<p>I think it is a good idea to make this working in a future version of Isabelle (or in an entirely new proof assistant).</p>",
        "id": 294141144,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845858
    },
    {
        "content": "<p>From: Tjark Weber &lt;<a href=\"mailto:webertj@in.tum.de\">webertj@in.tum.de</a>&gt;<br>\nVictor,</p>\n<p>The kind of \"matching by constant\" that you suggest may not be so useful<br>\nafter all.  Remember that t1 and t2 are just names for elements of tag.<br>\nWe don't know whether the tag type has other elements (in which case f<br>\nwould be underspecified), or whether t1 and t2 denote the same element<br>\n(in which case you are lucky that your definitions aren't inconsistent).</p>\n<p>However, Isabelle/HOL does support pattern matching for datatype<br>\nconstructors.  For instance, you could define</p>\n<p>datatype tag = t1 | t2</p>\n<p>fun f where<br>\n    \"f (t1, x) = t1\"<br>\n  | \"f (t2, x) = t2\"</p>\n<p>See the Isabelle documentation, specifically the Tutorial on Function<br>\nDefinitions, for details.</p>\n<p>Kind regards,<br>\nTjark</p>",
        "id": 294141202,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845880
    }
]