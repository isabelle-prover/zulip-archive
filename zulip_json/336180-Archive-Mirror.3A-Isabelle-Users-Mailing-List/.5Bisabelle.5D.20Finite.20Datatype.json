[
    {
        "content": "<p>From: Sven Schneider &lt;<a href=\"mailto:svens@cs.tu-berlin.de\">svens@cs.tu-berlin.de</a>&gt;<br>\nHi,</p>\n<p>is there a simple way to proof the following statement?<br>\nI have a proof but it contains a case-disinction over all elements in <br>\nthe datatype. This is inacceptable for the actual dataype which contains <br>\nseveral thousands of elements; the proof would require to much time.</p>\n<p>theory Test imports Main begin<br>\ndatatype A = A0 | A1<br>\ndatatype Label = B0 A A<br>\ninstance Label :: \"finite\"<br>\noops<br>\nend</p>\n<p>Regards,<br>\nSven</p>",
        "id": 294061615,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660823899
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nI don't think there is an easy way. If your datatype as more than 100 <br>\nconstructors, you will anyway find that it can take a very long time to <br>\neven define such a datatype, never mind any proofs based on it. If the <br>\nlarge number of elements comes from the fact that there is a hierarchy <br>\nof datatypes, like above, you should be able to prove finiteness in <br>\nlayers, and each layer should stay manageable.</p>\n<p>Since this is in essence a finite problem, Tjark Weber's SAT-solver link <br>\nmay be able to prove this automatically. Tjark?</p>\n<p>Tobias</p>",
        "id": 294061629,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660823911
    },
    {
        "content": "<p>From: Tjark Weber &lt;<a href=\"mailto:tjark.weber@gmx.de\">tjark.weber@gmx.de</a>&gt;<br>\nSven,</p>\n<p>I am afraid the SAT solver link currently works for (instances of)<br>\npropositional tautologies only.  (However, link-ups with other automated<br>\nprovers for more powerful logics are available as well.  See, e.g.,<br>\nmetis and sledgehammer.)  I suspect that in your case the performance<br>\nissue shows up before the proof goal is purely propositional.</p>\n<p>If you want to send me your proof though, I'll be happy to look at it in<br>\nmore detail.</p>\n<p>Best,<br>\nTjark</p>",
        "id": 294062351,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660824189
    }
]