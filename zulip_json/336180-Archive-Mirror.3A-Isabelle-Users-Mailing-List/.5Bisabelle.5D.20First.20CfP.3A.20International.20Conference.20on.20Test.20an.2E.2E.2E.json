[
    {
        "content": "<p>From: \"Achim D. Brucker\" &lt;<a href=\"mailto:brucker@spamfence.net\">brucker@spamfence.net</a>&gt;<br>\n(Apologies for duplicates) </p>\n<p>CALL FOR PAPERS<br>\nFull and short Research Paper, Industrial Expierence Papers, Tool Papers <br>\n    Abstract submission: Dec 14, 2011, Paper submission Dec 21, 2012 </p>\n<p>6th INTERNATIONAL CONFERENCE ON TEST AND PROOFS (TAP 2012)<br>\n<a href=\"http://lifc.univ-fcomte.fr/tap2012/\">http://lifc.univ-fcomte.fr/tap2012/</a><br>\n          May 31 - June 1, 2012, Prague, Czech Republic</p>\n<p>Part of the TOOLS Federated Conferences 2012<br>\n<a href=\"http://tools2012.fit.cvut.cz/\">http://tools2012.fit.cvut.cz/</a></p>\n<p>The TAP conference is devoted to the convergence of proofs and tests,<br>\nto the application of techniques from both sides and their combination<br>\nfor the advancement of software quality. Test and Proof seem to be<br>\ncontradictory techniques: if you have proved your program to be<br>\ncorrect, it is fruitless to comb it for bugs; and if you are testing<br>\nit, that is surely a sign that you have given up on any hope to prove<br>\nits correctness.  Accordingly, proofs and tests have, since the onset<br>\nof software engineering research, been pursued by distinct<br>\ncommunities.</p>\n<p>However, the development of both approaches lead to the discovery of<br>\ncommon issues and to the realization that each may need the other. The<br>\nemergence of model checking has been one of the first signs that<br>\ncontradiction may yield to complementarity. Further evidence give test<br>\ndata generation techniques from models or programs which boil down to<br>\nconstraint resolution techniques for relatively large formula; the<br>\nadvent of powerful SMT solvers have therefore powered new testing<br>\ntechniques.  Finally, since formal, proof-based verification is<br>\ncostly, testing invariants and background theories can be helpful to<br>\ndetect errors early and to improve cost effectivity.  Summing up, in<br>\nthe past few years an increasing number of research efforts have<br>\nencountered the need for combining proofs and tests, dropping earlier<br>\ndogmatic views of incompatibility and taking instead the best of what<br>\neach of these software engineering domains has to offer.</p>\n<p>The TAP conference aims to bring together researchers and practitioners<br>\nworking in the converging fields of testing and proving, and will offer<br>\na generous allocation of papers, panels and informal discussions.</p>\n<p>Topics of interest cover theory definitions, tool constructions and <br>\nexperimentations and include (other topics related to TAP are welcome):</p>\n<ul>\n<li>\n<p>Transfer of concepts from testing to proving (e.g., coverage criteria)<br>\n  and from proving to testing</p>\n</li>\n<li>\n<p>Program proving with the aid of testing techniques</p>\n</li>\n<li>\n<p>New problematics in automated reasoning emerging from specificities<br>\n  of test generation</p>\n</li>\n<li>\n<p>Verification and testing techniques combining proofs and tests</p>\n</li>\n<li>\n<p>Generation of test data, oracles, or preambles by deductive<br>\n  techniques such as: theorem proving, model checking, symbolic<br>\n  execution, constraint logic programming</p>\n</li>\n<li>\n<p>Model-based testing and verification</p>\n</li>\n<li>Generation of specifications by deduction</li>\n<li>Automatic bug finding</li>\n<li>Debugging of programs combining static and dynamic analysis</li>\n<li>Formal frameworks</li>\n<li>Tool descriptions and experience reports</li>\n<li>Case studies combining tests and proofs</li>\n<li>Applying combination of test and proof techniques to new application <br>\n  domains such as validating security procotols or vulnerability<br>\n  detection of programs </li>\n</ul>\n<p>Important Dates:<br>\n================<br>\nAbstract submission:    December 14, 2011 <br>\nPaper submission:       December 21, 2011<br>\nNotification:           March 2, 2012<br>\nCamera ready version:   March 19, 2012<br>\nTAP conference:         May 31 - June 1, 2012 (to be confirmed)</p>\n<p>TOOLS conferences (TOOLS, ICMT, SC, TAP): May 29 - June 01, 2012<br>\nConference Chairs: Bertrand Meyer<br>\nProgram Chairs:    Achim D. Brucker and Jacques Julliand</p>\n<p>Program Committee (to be extended): <br>\n===================================<br>\nNazareno Aguirre, Bernhard K. Aichernig, Paul Ammann, Dirk Beyer,<br>\nNikolaj Bjorner, Robert Clarisó, Marco Comini, Catherine Dubois,<br>\nGordon Fraser, Angelo Gargantini, Patrice Godefroid, Martin Gogolla,<br>\nArnaud Gotlieb, Reiner Hähnle, Bart Jacobs, Thierry Jéron, Gregory<br>\nKapfhammer, Nikolai Kosmatov, Victor Kuliamin, Karl Meinke, Holger<br>\nSchlingloff, T.H. Tse, Margus Veanes, Luca Viganò, Burkhart Wolff,<br>\nFatiha Zaidi</p>\n<p>Submission:<br>\n===========<br>\nPlease submit your papers via <a href=\"http://lifc.univ-fcomte.fr/tap2012/\">http://lifc.univ-fcomte.fr/tap2012/</a>. <br>\nTAP 2012 will accept two types of papers: </p>\n<ul>\n<li>\n<p>Research papers: full papers with at most 16 pages in LNCS format<br>\n  (pdf), which have to be original, unpublished and not submitted<br>\n  elsewhere.</p>\n</li>\n<li>\n<p>Short contributions: work in progress, (industrial) experience<br>\n  reports or tool demonstrations, position statements; an extended<br>\n  abstract with at most 6 pages in LNCS format (pdf) is expected.</p>\n</li>\n</ul>\n<p>Accepted papers will be published in the Springer LNCS series and will <br>\nbe available at the conference.  </p>\n<p>The contents of previous TAP proceedings is available at:<br>\n<a href=\"http://www.informatik.uni-trier.de/~ley/db/conf/tap/\">http://www.informatik.uni-trier.de/~ley/db/conf/tap/</a></p>",
        "id": 294144141,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660846893
    }
]