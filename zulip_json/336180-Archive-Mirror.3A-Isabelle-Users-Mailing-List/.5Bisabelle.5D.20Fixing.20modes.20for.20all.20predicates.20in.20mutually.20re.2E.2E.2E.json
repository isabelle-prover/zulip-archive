[
    {
        "content": "<p>From: Mark Wassell &lt;<a href=\"mailto:mpwassell@gmail.com\">mpwassell@gmail.com</a>&gt;<br>\nHello,</p>\n<p>I am finding that mode checking on a block of mutually recursive predicates<br>\nis taking a long time (5+ minutes) and this is hindering any sort of<br>\niterative development.</p>\n<p>I know the mode I want for each predicate in the block and although I can<br>\nfix the mode for one of the predicates in the code_pred command, it looks<br>\nlike all modes are being checked for the other predicates.</p>\n<p>Is there a way to fix the modes for all of the predicates so that the mode<br>\nchecking doesn't waste time exploring modes I have no interest in?</p>\n<p>Cheers</p>\n<p>Mark</p>",
        "id": 294753524,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661196382
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:mail@andreas-lochbihler.de\">mail@andreas-lochbihler.de</a>&gt;<br>\nDear Mark,</p>\n<p>You can specify the modes for each predicate with the code_pred command. The syntax is as <br>\nfollows:</p>\n<p>Given two mutually recursive predicates</p>\n<p>inductive P1 :: \"... =&gt; bool\"<br>\n   and P2 :: \"... =&gt; bool\" where ...</p>\n<p>you can write</p>\n<p>code_pred (modes: P1: i =&gt; ... =&gt; o =&gt; bool and P2: o =&gt; ... =&gt; i =&gt; bool) P1</p>\n<p>and the predicate compiler should no longer try all possible modes for P2.</p>\n<p>Is this what you are looking for?</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 294753553,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661196396
    },
    {
        "content": "<p>From: Mark Wassell &lt;<a href=\"mailto:mpwassell@gmail.com\">mpwassell@gmail.com</a>&gt;<br>\nYes it is and thank you.</p>\n<p>Mark</p>",
        "id": 294753568,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661196404
    }
]