[
    {
        "content": "<p>From: Stefan Hetzl &lt;<a href=\"mailto:hetzl@logic.at\">hetzl@logic.at</a>&gt;<br>\nDear all,</p>\n<p>I am working on a formalisation of the Cayley-Hamilton theorem in<br>\nIsabelle/HOL. I was planning to base it on the formalisation of<br>\nmatrices which is available in HOL/Multivariate_Analysis as it<br>\nincludes a number of useful properties of determinants.</p>\n<p>I would like to formalise operations that delete a single row and/or a<br>\nsingle column from a matrix. Taking into account the fact the matrices<br>\nof Multivariante_Analysis are vectors of vectors of elements and that<br>\nit is easy to define permutations of elements of a vector, the task<br>\ncan be boiled down to defining an operation which deletes the last<br>\nelement of a vector.</p>\n<p>I have run into a problem there: a vector is defined as a mapping from<br>\na type 'b of class finite to a type 'a. Based on<br>\nHOL/Library/Numeral_Type one can define something like</p>\n<p>definition dellastel32 :: \"('a, 3) vec \\&lt;Rightarrow&gt; ('a, 2) vec\"<br>\n  where \"dellastel32 v = (\\&lt;chi&gt; i. if i = 1 then (v $ 1) else (v $ 2))\"</p>\n<p>for every finite vector length. However, I do not see what to do for<br>\nthe general case.</p>\n<p>I am grateful for any help or pointer you can provide.</p>\n<p>Best regards,</p>\n<p>Stefan Hetzl</p>",
        "id": 294149759,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660848855
    },
    {
        "content": "<p>From: Steven Obua &lt;<a href=\"mailto:steven.obua@googlemail.com\">steven.obua@googlemail.com</a>&gt;<br>\nHi Stefan,</p>\n<p>I am not familiar with the Multivariate_Analysis package, but with the trick of representing matrix dimensions by types.<br>\nThis trick becomes pretty ugly in exactly this situation of mapping between matrices of variable dimensions.</p>\n<p>Nevertheless, a (n ugly) way of achieving your goal would proceed along the following lines:</p>\n<p>There is probably some sort of \"size\" function already defined, for example size : 'a -&gt; nat, that returns the number of elements of type 'a.<br>\nThen you turn the concrete dimensions in the type of the function you want to define into type variables, like this:</p>\n<p>definition del :: \"nat  -&gt; ('a, 'n) vec -&gt; ('a, 'm) vec\"<br>\nwhere \"del row v = <br>\n                let n = size (arbitrary : 'n),<br>\n                     m = size (arbitrary : 'm),<br>\n                in<br>\n                   if (row &lt; n &amp;&amp; m + 1 = n) then <br>\n                       ....<br>\n                   else<br>\n                       arbitrary<br>\n                   end<br>\n               end\" </p>\n<p>Cheers,</p>\n<p>Steven</p>",
        "id": 294149777,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660848862
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nDear Stefan,</p>\n<p>I took the liberty of forwarding your email to John Harrison, whose HOL<br>\nlight library our Multivariate_Analysis is based on. I have attched his<br>\nanswer and trust you will find it useful ;-)</p>\n<p>Tobias</p>",
        "id": 294149796,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660848868
    },
    {
        "content": "<p>From: \"Tim (McKenzie) Makarios\" &lt;<a href=\"mailto:tjm1983@gmail.com\">tjm1983@gmail.com</a>&gt;<br>\nI haven't checked this (partly because I usually use an old version of<br>\nIsabelle --- 2009-2), but if there is a general injection function</p>\n<p>finplus1inj :: \"'n -&gt; 'n + 1\"</p>\n<p>then I think you could get what you want by:</p>\n<p>definition dellastel :: \"('a, 'n + 1) vec \\&lt;Rightarrow&gt; ('a, 'n) vec\"<br>\n  where \"dellastel v = (\\&lt;chi&gt; i. (v $ (finplus1inj i)))\"</p>\n<p>So, does Isabelle have such an injection function in the general case?<br>\nAnd would my suggestion work if Isabelle does have it?</p>\n<p>Tim<br>\n&lt;&gt;&lt;<br>\n<a href=\"/user_uploads/14278/BnEu9B4Rc5_PUQrcaOGCIc3D/signature.asc\">signature.asc</a></p>",
        "id": 294149945,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660848929
    }
]