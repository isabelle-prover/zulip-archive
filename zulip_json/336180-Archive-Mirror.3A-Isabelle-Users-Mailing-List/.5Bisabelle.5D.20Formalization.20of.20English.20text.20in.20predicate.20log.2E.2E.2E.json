[
    {
        "content": "<p>From: David MENTRÉ &lt;<a href=\"mailto:David.MENTRE@bentobako.org\">David.MENTRE@bentobako.org</a>&gt;<br>\nHello,</p>\n<p>Context: I am a software engineer and private company researcher working<br>\nwith formal methods. While I have some experience with formal tools like<br>\nAbstract Interpretation on industrial software, I never used proof<br>\nassistants like Isabelle/HOL or Coq. I came to Isabelle/HOL through<br>\ndiscussion with other users (advocating its tooling) and through the<br>\nbook \"Concrete Semantics\" by Nipkow and Klein. I am interested in trying<br>\nto use Isabelle/HOL to formalize some basic English text and in<br>\nparticular software requirements using predicate logic. In particular, I<br>\nwould like to write documents combining informal English text and its<br>\nformal counterpart.</p>\n<p>I successfully installed Isabelle/HOL 2019 and started to play with it.<br>\nWhile there is a lot of documentation and examples, I nonetheless had<br>\nsome issues to define the right approach to work in a defined logical<br>\ncontext (i.e. define some predicates, some axioms, ...) due to the<br>\nrichness of Isabelle/HOL.</p>\n<p>In the end, it seems that using \"locale\" is the good(?) way, illustrated<br>\nby below example theory:</p>\n<p>\"\"\"<br>\ntheory example<br>\n  imports Main<br>\nbegin</p>\n<p>typedecl person</p>\n<p>locale my_context =<br>\n  fixes parent :: \"person ⇒ person ⇒ bool\"<br>\n  fixes ancestor :: \"person ⇒ person ⇒ bool\"<br>\n  fixes related :: \"person ⇒ person ⇒ bool\"<br>\n  assumes parent_is_ancestor : \"∀x y. parent x y ⟶ ancestor x y\"<br>\n  assumes ancestor_of_ancestor_is_ancestor :<br>\n    \"∀ x z.∃ y. ancestor x y ∧ ancestor y z ⟶ ancestor x z\"<br>\n  assumes related: \"∀x y. related x y = (∃z. ancestor z x ∧ ancestor z y)\"<br>\nbegin<br>\nlemma \" parent a b ∧ parent a c ⟶ related b c\"<br>\n  using parent_is_ancestor related by auto</p>\n<p>lemma \"True\"<br>\n  by auto<br>\nend</p>\n<p>end<br>\n\"\"\"</p>\n<p>After this experiment, I have several questions.</p>\n<p>Q1: Are there examples (perhaps as part of lessons on logic) of English<br>\ntext with corresponding Isabelle/HOL formalization? I would like to<br>\ncopy/paste and imitate typical formalization patterns. \"Concrete<br>\nSemantics\" is a good source, but it is focused on computer languages. I<br>\nam interested in more general models of daily life texts.</p>\n<p>Q2: Is the above approach using \"locale\" the correct way to do this kind<br>\nof formalization? Is there a simpler way?</p>\n<p>Q3: A big risk when defining axioms is to quickly produce<br>\ninconsistencies. Is there any good methodology or recommended approach<br>\nto avoid such inconsistencies? For example book \"A Proof Assistant for<br>\nHigher-Order Logic\" by Nipkow, Paulson and Wenzel recommend to use<br>\n\"datatype\" and \"primrec\" to avoid such inconsistencies. I could not find<br>\nhow to use them to reason in above simple example.</p>\n<p>Q4: Where is the documentation related to writing documents with<br>\nIsabelle/HOL, typically like AFP entries with pretty-printing, ...? I<br>\nhave no problem using LaTeX if needed.</p>\n<p>Best regards,<br>\nD. Mentré</p>",
        "id": 294821968,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661242567
    },
    {
        "content": "<p>From: Yakoub Nemouchi &lt;<a href=\"mailto:y.nemouchi@gmail.com\">y.nemouchi@gmail.com</a>&gt;<br>\nDear David,</p>\n<p>For general purpose on mixing English and formal Isabelle artefacts, I<br>\nencourage you to take a look on:<br>\n[1]<br>\n<a href=\"https://ore.exeter.ac.uk/repository/bitstream/handle/10871/38402/Isabelle_DOF-1.0.0_Isabelle2019.pdf?sequence=1&amp;isAllowed=y\">https://ore.exeter.ac.uk/repository/bitstream/handle/10871/38402/Isabelle_DOF-1.0.0_Isabelle2019.pdf?sequence=1&amp;isAllowed=y</a></p>\n<p>[1] has also an application on a certification standard, where textual<br>\nrequirements in English are mixed with formal Isabelle artefacts such as<br>\nlemmas, definitions, etc</p>\n<p>Another application on mixing formal and informal content in order to<br>\nassure security requirements for cyber physical systems, and uses [1] and<br>\nIsabelle is:</p>\n<p>[2] <a href=\"https://link.springer.com/chapter/10.1007/978-3-030-34968-4_21\">https://link.springer.com/chapter/10.1007/978-3-030-34968-4_21</a></p>\n<p>In [2] an assurance case pattern on the use formal artefacts in assurance<br>\ncases is proposed.</p>\n<p>Best wishes,</p>\n<p>Yakoub.</p>",
        "id": 294821984,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661242578
    },
    {
        "content": "<p>From: Alexandre Rademaker &lt;<a href=\"mailto:arademaker@gmail.com\">arademaker@gmail.com</a>&gt;<br>\nHi David,</p>\n<p>I am not sure if your question is:</p>\n<ol>\n<li>about the technicalities of mix formal language and informal language on the same document or </li>\n<li>related to the formalization of English sentences, probably involving common-sense knowledge, in interactive theorem provers like Isabelle, Coq, Lean...</li>\n</ol>\n<p>Your example suggests that you are looking for advising on the (2) above, am I right? I have done a simple experiment on the formalization of a TPTP problem in Lean; if you are interested, I can share the link with you. Not relevant for this mailing list, maybe. </p>\n<p>In another direction, you could want to take a look at semantic representation structures from computational linguistics such as AMR, MRS, etc. These are intermediary structures used to represent the semantics of a natural language sentence. Try some sentences in <a href=\"http://erg.delph-in.net\">http://erg.delph-in.net</a> and see the output. These are not formal logical language but a step to it.</p>\n<p>I am not very fluent in Isabelle, but things obvious for the knowledge representation people, like the representation of classes and class hierarchy, have a not so clear counterpart in dependent-types. Maybe somehow related to the <a href=\"https://en.wikipedia.org/wiki/Expression_problem\">https://en.wikipedia.org/wiki/Expression_problem</a>?!</p>\n<p>Best,</p>",
        "id": 294822032,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661242609
    },
    {
        "content": "<p>From: David MENTRÉ &lt;<a href=\"mailto:David.MENTRE@bentobako.org\">David.MENTRE@bentobako.org</a>&gt;<br>\nHello Alexandre and Yakoub,</p>\n<p>Le 31/01/2020 à 04:03, Alexandre Rademaker a écrit :</p>\n<blockquote>\n<p>I am not sure if your question is:</p>\n<ol>\n<li>about the technicalities of mix formal language and informal language on the same document or </li>\n</ol>\n</blockquote>\n<p>This was my question Q4 but this is not the core of my question. But<br>\nthis part nonetheless interests me. I am part of projects with<br>\ncertification aspects. As usual, people are using Word/Excel approach<br>\nbut I do think having a formal layout of the certification case<br>\narguments could be beneficial, in the spirit of \"Evidencial Tool Bus\" of<br>\nJohn Rushby. Therefore thanks Yakoub for providing me reminder about<br>\nIsabelle/DOF. I saw the announcement... but forgot about it. :-)</p>\n<blockquote>\n<ol start=\"2\">\n<li>related to the formalization of English sentences, probably involving common-sense knowledge, in interactive theorem provers like Isabelle, Coq, Lean...</li>\n</ol>\n<p>Your example suggests that you are looking for advising on the (2) above, am I right?</p>\n</blockquote>\n<p>Yes, this is exactly the core of my questions Q1, Q2 and Q3.</p>\n<blockquote>\n<p>I have done a simple experiment on the formalization of a TPTP problem in Lean; if you are interested, I can share the link with you. Not relevant for this mailing list, maybe. </p>\n</blockquote>\n<p>Yes, please send me your link.</p>\n<blockquote>\n<p>In another direction, you could want to take a look at semantic representation structures from computational linguistics such as AMR, MRS, etc. These are intermediary structures used to represent the semantics of a natural language sentence. Try some sentences in <a href=\"http://erg.delph-in.net\">http://erg.delph-in.net</a> and see the output. These are not formal logical language but a step to it.</p>\n<p>I am not very fluent in Isabelle, but things obvious for the knowledge representation people, like the representation of classes and class hierarchy, have a not so clear counterpart in dependent-types. Maybe somehow related to the <a href=\"https://en.wikipedia.org/wiki/Expression_problem\">https://en.wikipedia.org/wiki/Expression_problem</a>?!</p>\n</blockquote>\n<p>I am less interested in formal representation of natural language or<br>\nknowledge.</p>\n<p>I am more interested at building a formal model of a system or<br>\nrequirements described as English text using human expertise. I<br>\nunderstand each formalization is probably specific to each system<br>\ndescription, but nonetheless there might be patterns or best practices<br>\n(typically to avoid inconsistencies). I'm looking for such patterns or<br>\nbest practices, preferably in Isabelle/HOL, but examples in Lean or Coq<br>\nor other formal systems also interests me.</p>\n<p>Best regards,<br>\ndavid</p>",
        "id": 294822048,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661242615
    }
]