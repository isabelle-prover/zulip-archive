[
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nIt sort of escaped my notice that although I have</p>\n<p>theorem --\"(4)\"<br>\n   \"(!C.!D.(C | D --&gt; C)) --&gt; (A | B --&gt; A)\"<br>\nby auto</p>\n<p>I also have anything else I want to prove, for the simple fact that the <br>\nhypothesis is always false.</p>\n<p>theorem --\"(4a)\"<br>\n   \"(!C.!D.(C | D --&gt; C)) --&gt; P a\"<br>\nby auto</p>\n<p>This could be material for my book, \"How to Learn Basic Logic with <br>\nIsabelle\", or with the type of title I always hate, \"Logic for Dummies <br>\nwith Isabelle2012\".<br>\n<a href=\"http://www.amazon.com/Logic-For-Dummies-Mark-Zegarelli/dp/0471799416\">http://www.amazon.com/Logic-For-Dummies-Mark-Zegarelli/dp/0471799416</a></p>\n<p>It still appears that free variables aren't quantified, although my <br>\nreasoning might be warped. It may not be warped. If I just know what's <br>\ntrue, then I can sometimes straighten out my reasoning.</p>\n<p>This is my first use of Isabelle as a tool to confirm some basic logic. <br>\nNo one else is going to take any substantial time to clarify and remind <br>\nme of the basics that I mostly understand. There's nothing wrong with that.</p>\n<p>Regards,<br>\nGB</p>",
        "id": 294222392,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660898167
    },
    {
        "content": "<p>From: Alfio Martini &lt;<a href=\"mailto:alfio.martini@acm.org\">alfio.martini@acm.org</a>&gt;</p>\n<blockquote>\n<p>Hi Gottfried,</p>\n</blockquote>\n<p>I was more than convinced by the following answer from Paulson, stated in a<br>\nprevious e-mail (assuming<br>\nmy simpler question subsumes the one you posed):</p>\n<p>The formula (?x + ?y) + ?z = ?x + (?y + ?z) expresses a property about</p>\n<blockquote>\n<p>three quantities denoted by ?x, ?y and ?z. It is a convention in logic that<br>\nany theorem involving free variables denotes the \"universal closure\" of<br>\nthat formula, here<br>\n\"all x. all y. all y. (x+y)+z =  x + (y+z)\".<br>\nIsabelle is designed to work best a minimum of logical symbols, hence the<br>\npreference for stating theorems like<br>\n        P1 ==&gt; … Pn ==&gt; Q.<br>\nHardly any mathematics paper states such theorems as<br>\n        !x1 … xm. P1 &amp; … &amp; Pn —&gt; Q.</p>\n</blockquote>\n<p>So, they do not get quantified, but they have the same \"denotation\" (that<br>\nis to say, they are equivalent<br>\nunder all interpretations.)</p>\n<p>All the Best!<br>\nOn Fri, Sep 14, 2012 at 1:52 AM, Gottfried Barrow<br>\n&lt;gottfried.barrow@gmx.com&gt;wrote:</p>\n<blockquote>\n<p>Hello,</p>\n<p>I break this out so the simple point doesn't get lost in the noise I<br>\ncreated from the last thread.</p>\n<p>The question was: What's the difference between free variables and<br>\nuniversally quantified variables?</p>\n<p>A partial answer is: Free variables don't get quantified.</p>\n<p>The software gave me the answer to my question. Propositions, tautologies,<br>\ncontradictions. When a formula with free variables is a tautology or a<br>\ncontradiction, then it's equivalent to a quantified form of the same<br>\nformula. If it's not a tautology or contradiction, then there's no<br>\nequivalency. It's that simple, at least for my simple cases.</p>\n<p>The use of the phrase \"free variable\" is all over the place:<br>\n<a href=\"http://en.wikipedia.org/wiki/**Free_variables_and_bound_**variables&lt;http://en.wikipedia.org/wiki/Free_variables_and_bound_variables\">http://en.wikipedia.org/wiki/**Free_variables_and_bound_**variables&lt;http://en.wikipedia.org/wiki/Free_variables_and_bound_variables</a>&gt;</p>\n<p>In the context of FOL, you have formulas with free variables, but then you<br>\nput them in other formulas in which the variables get bound:<br>\n<a href=\"http://en.wikipedia.org/wiki/**First-order_logic&lt;http://en.wikipedia.org/wiki/First-order_logic\">http://en.wikipedia.org/wiki/**First-order_logic&lt;http://en.wikipedia.org/wiki/First-order_logic</a>&gt;</p>\n<p>\"A formula in first-order logic with no free variables is called<br>\na*first-ordersentence &lt;<a href=\"http://en.wikipedia.org/wiki/**\">http://en.wikipedia.org/wiki/**</a><br>\nSentence_%28mathematical_**logic%29&lt;<a href=\"http://en.wikipedia.org/wiki/Sentence_%28mathematical_logic%29&gt;&gt;*\">http://en.wikipedia.org/wiki/Sentence_%28mathematical_logic%29&gt;&gt;*</a>.<br>\nThese are the formulas that will have well-definedtruth values &lt;<br>\n<a href=\"http://en.wikipedia.org/wiki/**Truth_value&lt;http://en.wikipedia.org/wiki/Truth_value&gt;&gt;under\">http://en.wikipedia.org/wiki/**Truth_value&lt;http://en.wikipedia.org/wiki/Truth_value&gt;&gt;under</a><br>\nan interpretation.\"</p>\n<p>This wasn't a case where I needed to study any logic. The stuff I need to<br>\nstudy is not this basic, discrete math level logic. I was making the wrong<br>\nassumptions, and I also needed to sync up some vocabulary, and maybe have<br>\nmy mind refreshed just a little on stuff I haven't used on a daily basis.</p>\n<p>If I'm still wrong, all I can do, when the documentation doesn't cover a<br>\ntopic, is make conclusions based on what I get the software to do. The<br>\ntheorems below gave me the data to say what I said above.</p>\n<p>If \"free variables don't get quantified\" is supposed to be obvious because<br>\nof \"free variables\", it isn't. I gave the quote above, plus I had asked the<br>\nquestion, and I never got a simple, authoritative answer saying, \"Free<br>\nvariables don't get quantified\".</p>\n<p>Regards,<br>\nGB</p>\n<p>theorem --\"(1)\"<br>\n--\"As a test case, I show a quantified and free form equivalency, for a<br>\ntrue<br>\n   proposition that's a tautology.\"<br>\n  \"(A &amp; B --&gt; A) &lt;-&gt; (!C.!D.(C &amp; D --&gt; C))\"<br>\nby auto</p>\n<p>theorem --\"(2)\"<br>\n--\"I then negate the formula inside the quantified variables, to show that<br>\na<br>\n   false proposition works as well, when it's a contradiction.\"<br>\n  \"~(A &amp; B --&gt; A) &lt;-&gt; (!C.!D.~(C &amp; D --&gt; C))\"<br>\nby auto</p>\n<p>theorem --\"(3)\"<br>\n--\"I then try to show an equivalency with another proposition that is<br>\n    neither a tautology or contradiction. A counterexample is found.\"<br>\n  \"(A | B --&gt; A) &lt;-&gt; (!C.!D.(C | D --&gt; C))\"<br>\n--\"Nitpick found a counterexample:<br>\n   Free variables:<br>\n    (A?bool) = True<br>\n    (B?bool) = False\"<br>\noops</p>\n<p>theorem --\"(4)\"<br>\n--\"It turns out, free variable formulas are propositions. So a free<br>\nvariable<br>\n   formula is a tautology if a quantified form of it is proved to be true.<br>\nHere<br>\n   the software doesn't care that the LHS and the RHS is false.\"<br>\n  \"(!C.!D.(C | D --&gt; C)) --&gt; (A | B --&gt; A)\"<br>\nby auto</p>\n<p>theorem --\"(5)\"<br>\n--\"Here, the LHS is not quantified in any way, shape, or form, so it can't<br>\nbe<br>\n   used to prove the RHS.\"<br>\n  \"(A | B --&gt; A) --&gt; (!C.!D.(C | D --&gt; C))\"<br>\n--\"Nitpick found a counterexample:<br>\n   Free variables:<br>\n    (A?bool) = True<br>\n    (B?bool) = False<br>\n   Skolem constants:<br>\n    (C?bool) = False<br>\n    (D?bool) = True\"<br>\noops</p>\n</blockquote>",
        "id": 294222398,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660898173
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nOn 9/14/2012 6:13 PM, Alfio Martini wrote:</p>\n<blockquote>\n<p>I was more than convinced by the following answer from Paulson, stated in a<br>\nprevious e-mail (assuming my simpler question subsumes the one you posed):</p>\n<blockquote>\n<p>The formula (?x + ?y) + ?z = ?x + (?y + ?z) expresses a property about<br>\n  three quantities denoted by ?x, ?y and ?z. It is a convention in logic that</p>\n<blockquote>\n<p>any theorem involving free variables denotes the \"universal closure\" of<br>\n that formula,</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>Alfio,</p>\n<p>You say, \"assuming my simpler question subsumes the one you posed\".</p>\n<p>I'm pretty sure it doesn't. Please notice that I never use the schematic <br>\nvariable notation, whereas you and Larry do.</p>\n<p>(On that email, it was to you, but I replied to Larry as if it was to <br>\nme, which I thought it was, but I apologize for that.)</p>\n<p>I've been asking about the relationship between free variables and <br>\nquantified variables in a formula prior to the formula being proved <br>\n(although some of my tangents involved proofs). I think you and Larry <br>\nare talking about formulas that have been proved.</p>\n<p>It might be so obvious to people that free variables don't get <br>\nquantified that everyone thought I was talking about post-proof free <br>\nvariables in a proved theorem.</p>\n<p>First-order logic polluted my mind. I had the idea that any free <br>\nvariable in P gets implicitly bound by the prover engine when I put P in <br>\nthe statement  <code>theorem \"P\"</code>. It makes sense now that it wouldn't. <br>\nPropositions are more general than closed formulas.</p>\n<p>According to the tutorial, free variables get converted to schematic <br>\nvariables after a proof (page 7 tutorial.pdf). There is \"free variable\" <br>\npre-proof, and \"free/schematic variable\" post-proof.</p>\n<p>I was talking about free variables in the mere statement of a theorem, like,</p>\n<p>theorem --\"(3)\"<br>\n   \"(A | B --&gt;  A)&lt;-&gt;  (!C.!D.(C | D --&gt;  C))\"<br>\noops</p>\n<p>For (3), I now call the left-hand side a proposition, and I think of it <br>\nin terms of propositional logic. I call the right-hand side a closed <br>\nformula, and I think of it terms of first-order logic. A proposition <br>\ndoes not necessarily have a definite truth value, whereas a closed <br>\nformula does. That's what I showed below with my 5 examples.</p>\n<blockquote>\n<p>So, they do not get quantified, but they have the same \"denotation\" (that<br>\nis to say, they are equivalent under all interpretations.)</p>\n</blockquote>\n<p>So you would appreciate Larry's explanation more than me because I don't <br>\nknow anything about interpretations. My interpretation is that <br>\neverything resolves to a boolean value of either true or false, based on <br>\nmy basic understanding of logical connectives and quantifiers.</p>\n<p>Regards,<br>\nGB</p>\n<blockquote>\n<p>On Fri, Sep 14, 2012 at 1:52 AM, Gottfried Barrow<br>\n&lt;gottfried.barrow@gmx.com&gt;wrote:</p>\n<blockquote>\n<p>Hello,</p>\n<p>I break this out so the simple point doesn't get lost in the noise I<br>\ncreated from the last thread.</p>\n<p>The question was: What's the difference between free variables and<br>\nuniversally quantified variables?</p>\n<p>A partial answer is: Free variables don't get quantified.</p>\n<p>The software gave me the answer to my question. Propositions, tautologies,<br>\ncontradictions. When a formula with free variables is a tautology or a<br>\ncontradiction, then it's equivalent to a quantified form of the same<br>\nformula. If it's not a tautology or contradiction, then there's no<br>\nequivalency. It's that simple, at least for my simple cases.</p>\n<p>The use of the phrase \"free variable\" is all over the place:<br>\n<a href=\"http://en.wikipedia.org/wiki/**Free_variables_and_bound_**variables&lt;http://en.wikipedia.org/wiki/Free_variables_and_bound_variables\">http://en.wikipedia.org/wiki/**Free_variables_and_bound_**variables&lt;http://en.wikipedia.org/wiki/Free_variables_and_bound_variables</a>&gt;</p>\n<p>In the context of FOL, you have formulas with free variables, but then you<br>\nput them in other formulas in which the variables get bound:<br>\n<a href=\"http://en.wikipedia.org/wiki/**First-order_logic&lt;http://en.wikipedia.org/wiki/First-order_logic\">http://en.wikipedia.org/wiki/**First-order_logic&lt;http://en.wikipedia.org/wiki/First-order_logic</a>&gt;</p>\n<p>\"A formula in first-order logic with no free variables is called<br>\na*first-ordersentence&lt;<a href=\"http://en.wikipedia.org/wiki/**\">http://en.wikipedia.org/wiki/**</a><br>\nSentence_%28mathematical_**logic%29&lt;<a href=\"http://en.wikipedia.org/wiki/Sentence_%28mathematical_logic%29&gt;&gt;*\">http://en.wikipedia.org/wiki/Sentence_%28mathematical_logic%29&gt;&gt;*</a>.<br>\nThese are the formulas that will have well-definedtruth values&lt;<br>\n<a href=\"http://en.wikipedia.org/wiki/**Truth_value&lt;http://en.wikipedia.org/wiki/Truth_value&gt;&gt;under\">http://en.wikipedia.org/wiki/**Truth_value&lt;http://en.wikipedia.org/wiki/Truth_value&gt;&gt;under</a><br>\nan interpretation.\"</p>\n<p>This wasn't a case where I needed to study any logic. The stuff I need to<br>\nstudy is not this basic, discrete math level logic. I was making the wrong<br>\nassumptions, and I also needed to sync up some vocabulary, and maybe have<br>\nmy mind refreshed just a little on stuff I haven't used on a daily basis.</p>\n<p>If I'm still wrong, all I can do, when the documentation doesn't cover a<br>\ntopic, is make conclusions based on what I get the software to do. The<br>\ntheorems below gave me the data to say what I said above.</p>\n<p>If \"free variables don't get quantified\" is supposed to be obvious because<br>\nof \"free variables\", it isn't. I gave the quote above, plus I had asked the<br>\nquestion, and I never got a simple, authoritative answer saying, \"Free<br>\nvariables don't get quantified\".</p>\n<p>Regards,<br>\nGB</p>\n<p>theorem --\"(1)\"<br>\n--\"As a test case, I show a quantified and free form equivalency, for a<br>\ntrue<br>\n    proposition that's a tautology.\"<br>\n   \"(A&amp;  B --&gt;  A)&lt;-&gt;  (!C.!D.(C&amp;  D --&gt;  C))\"<br>\nby auto</p>\n<p>theorem --\"(2)\"<br>\n--\"I then negate the formula inside the quantified variables, to show that<br>\na<br>\n    false proposition works as well, when it's a contradiction.\"<br>\n   \"~(A&amp;  B --&gt;  A)&lt;-&gt;  (!C.!D.~(C&amp;  D --&gt;  C))\"<br>\nby auto</p>\n<p>theorem --\"(3)\"<br>\n--\"I then try to show an equivalency with another proposition that is<br>\n     neither a tautology or contradiction. A counterexample is found.\"<br>\n   \"(A | B --&gt;  A)&lt;-&gt;  (!C.!D.(C | D --&gt;  C))\"<br>\n--\"Nitpick found a counterexample:<br>\n    Free variables:<br>\n     (A?bool) = True<br>\n     (B?bool) = False\"<br>\noops</p>\n<p>theorem --\"(4)\"<br>\n--\"It turns out, free variable formulas are propositions. So a free<br>\nvariable<br>\n    formula is a tautology if a quantified form of it is proved to be true.<br>\nHere<br>\n    the software doesn't care that the LHS and the RHS is false.\"<br>\n   \"(!C.!D.(C | D --&gt;  C)) --&gt;  (A | B --&gt;  A)\"<br>\nby auto</p>\n<p>theorem --\"(5)\"<br>\n--\"Here, the LHS is not quantified in any way, shape, or form, so it can't<br>\nbe<br>\n    used to prove the RHS.\"<br>\n   \"(A | B --&gt;  A) --&gt;  (!C.!D.(C | D --&gt;  C))\"<br>\n--\"Nitpick found a counterexample:<br>\n    Free variables:<br>\n     (A?bool) = True<br>\n     (B?bool) = False<br>\n    Skolem constants:<br>\n     (C?bool) = False<br>\n     (D?bool) = True\"<br>\noops</p>\n</blockquote>\n</blockquote>",
        "id": 294222406,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660898180
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nAlfio,</p>\n<p>To try and summarize it, for you \"they\" are the formulas with free <br>\nvariables that get proved. I'm going to label these propositions that <br>\nyou're talking about as tautologies. They have the same denotation as <br>\nsome quantified formula.</p>\n<p>For me, \"they\" are the formulas with free variables which have no <br>\ndefinite truth value, like the (3) that I gave as an example. For these <br>\nformulas, there is not an equivalent quantified formula.</p>\n<p>You're focusing on the free variable formulas that can be proved, and <br>\ntheir equivalency to a quantified formula.</p>\n<p>I'm focusing on the free variable formulas that can't be proved, and <br>\nwhich don't have an equivalency to a quantified formula.</p>\n<p>I think that's the way it is.</p>\n<p>Regards,<br>\nGB</p>",
        "id": 294222414,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660898186
    },
    {
        "content": "<p>From: Alfio Martini &lt;<a href=\"mailto:alfio.martini@acm.org\">alfio.martini@acm.org</a>&gt;<br>\nHi Gottfried,</p>\n<p>You say, \"assuming my simpler question subsumes the one you posed\".</p>\n<blockquote>\n<p>I'm pretty sure it doesn't. Please notice that I never use the schematic<br>\nvariable notation, whereas you and Larry do.</p>\n</blockquote>\n<p>You are right, I missed that.</p>\n<p>For (3), I now call the left-hand side a proposition, and I think of it in</p>\n<blockquote>\n<p>terms of propositional logic. I call the right-hand side a closed formula,<br>\nand I think of it terms of first-order logic. A proposition does not<br>\nnecessarily have a definite truth value, whereas a closed formula does</p>\n</blockquote>\n<p>I understand  that a proposition is the same thing as sentence, as it is<br>\noften called and thus has<br>\nto have a definite logical truth-value. In this way, I always comeback to<br>\nthe definition of interpretation. In first-order logic<br>\nan interpretation assigns meanings only to the syntactic entities [of the<br>\nsignature or basis].<br>\nMeaning of free variables are fixed by the notion of a state, i.e., a<br>\nfunction from variables to values.</p>\n<p>So, in first-order logic, any formula that contains [for instance] a<br>\nfree-variable<br>\n\"x\" it is not [be called] a proposition, and it is actually a function(al)<br>\non that free-variable. It can be seen as having the<br>\ntype State=&gt;Bool, where State is a function Vars=&gt;D,  Vars is the set of<br>\nvariables used to build the set<br>\nof well-formed formulas and D is the domain in question. In this sense, the<br>\ntruth-value of this formula<br>\nis open. It depends on the value of this free variable. It does not assert<br>\nanything.</p>\n<p>Now, propositional logic is just a sublogic of first-order logic, with no<br>\nfunction symbols and where all predicate symbols<br>\nhave arity zero. The \"variables\" here are just predicates. Thus, it is<br>\nenough to fix an interpretation for these predicates in<br>\norder  to have the definite truth-value of the expression. So, from<br>\nthis point of view, every well-formed expression in propositional logic is<br>\na assertion, i.e., a sentence. That is why,<br>\nI think, it can be called propositional or sentential logic.</p>\n<p>I am not sure if this view (as written above) is shared by other people,<br>\nthough.</p>\n<p>All the Best!</p>\n<p>On Sat, Sep 15, 2012 at 12:30 AM, Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a></p>\n<blockquote>\n<p>wrote:</p>\n</blockquote>\n<blockquote>\n<p>On 9/14/2012 6:13 PM, Alfio Martini wrote:</p>\n<blockquote>\n<p>I was more than convinced by the following answer from Paulson, stated in<br>\na<br>\nprevious e-mail (assuming my simpler question subsumes the one you posed):</p>\n<blockquote>\n<p>The formula (?x + ?y) + ?z = ?x + (?y + ?z) expresses a property about<br>\n  three quantities denoted by ?x, ?y and ?z. It is a convention in logic<br>\nthat</p>\n<blockquote>\n<p>any theorem involving free variables denotes the \"universal closure\"<br>\nof<br>\n that formula,<br>\n</p>\n</blockquote>\n</blockquote>\n<p>Alfio,</p>\n</blockquote>\n<p>You say, \"assuming my simpler question subsumes the one you posed\".</p>\n<p>I'm pretty sure it doesn't. Please notice that I never use the schematic<br>\nvariable notation, whereas you and Larry do.</p>\n<p>(On that email, it was to you, but I replied to Larry as if it was to me,<br>\nwhich I thought it was, but I apologize for that.)</p>\n<p>I've been asking about the relationship between free variables and<br>\nquantified variables in a formula prior to the formula being proved<br>\n(although some of my tangents involved proofs). I think you and Larry are<br>\ntalking about formulas that have been proved.</p>\n<p>It might be so obvious to people that free variables don't get quantified<br>\nthat everyone thought I was talking about post-proof free variables in a<br>\nproved theorem.</p>\n<p>First-order logic polluted my mind. I had the idea that any free variable<br>\nin P gets implicitly bound by the prover engine when I put P in the<br>\nstatement  <code>theorem \"P\"</code>. It makes sense now that it wouldn't. Propositions<br>\nare more general than closed formulas.</p>\n<p>According to the tutorial, free variables get converted to schematic<br>\nvariables after a proof (page 7 tutorial.pdf). There is \"free variable\"<br>\npre-proof, and \"free/schematic variable\" post-proof.</p>\n<p>I was talking about free variables in the mere statement of a theorem,<br>\nlike,</p>\n<p>theorem --\"(3)\"</p>\n<p>\"(A | B --&gt;  A)&lt;-&gt;  (!C.!D.(C | D --&gt;  C))\"<br>\noops</p>\n<p>For (3), I now call the left-hand side a proposition, and I think of it in<br>\nterms of propositional logic. I call the right-hand side a closed formula,<br>\nand I think of it terms of first-order logic. A proposition does not<br>\nnecessarily have a definite truth value, whereas a closed formula does.<br>\nThat's what I showed below with my 5 examples.</p>\n<p>So, they do not get quantified, but they have the same \"denotation\" (that</p>\n<blockquote>\n<p>is to say, they are equivalent under all interpretations.)<br>\n</p>\n</blockquote>\n<p>So you would appreciate Larry's explanation more than me because I don't<br>\nknow anything about interpretations. My interpretation is that everything<br>\nresolves to a boolean value of either true or false, based on my basic<br>\nunderstanding of logical connectives and quantifiers.</p>\n<p>Regards,<br>\nGB</p>\n<p>On Fri, Sep 14, 2012 at 1:52 AM, Gottfried Barrow</p>\n<blockquote>\n<p>&lt;gottfried.barrow@gmx.com&gt;**wrote:</p>\n<p>Hello,</p>\n<blockquote>\n<p>I break this out so the simple point doesn't get lost in the noise I<br>\ncreated from the last thread.</p>\n<p>The question was: What's the difference between free variables and<br>\nuniversally quantified variables?</p>\n<p>A partial answer is: Free variables don't get quantified.</p>\n<p>The software gave me the answer to my question. Propositions,<br>\ntautologies,<br>\ncontradictions. When a formula with free variables is a tautology or a<br>\ncontradiction, then it's equivalent to a quantified form of the same<br>\nformula. If it's not a tautology or contradiction, then there's no<br>\nequivalency. It's that simple, at least for my simple cases.</p>\n<p>The use of the phrase \"free variable\" is all over the place:<br>\n<a href=\"http://en.wikipedia.org/wiki/*\u0002klzzwxh:0057\u0003*variables&lt;http://en.wikipedia.org/wiki/**Free_variables_and_bound_**variables\">http://en.wikipedia.org/wiki/*<strong><em>Free_variables_and_bound_</em></strong>*variables&lt;http://en.wikipedia.org/wiki/**Free_variables_and_bound_**variables</a>&gt;<br>\n&lt;http://en.wikipedia.<strong>org/wiki/Free_variables_and_</strong>bound_variables&lt;<a href=\"http://en.wikipedia.org/wiki/Free_variables_and_bound_variables\">http://en.wikipedia.org/wiki/Free_variables_and_bound_variables</a>&gt;<br>\n&gt;</p>\n<p>In the context of FOL, you have formulas with free variables, but then<br>\nyou<br>\nput them in other formulas in which the variables get bound:<br>\n<a href=\"http://en.wikipedia.org/wiki/****First-order_logic&lt;http://en.wikipedia.org/wiki/**First-order_logic\">http://en.wikipedia.org/wiki/****First-order_logic&lt;http://en.wikipedia.org/wiki/**First-order_logic</a>&gt;<br>\n&lt;http://en.<strong>wikipedia.org/wiki/First-</strong>order_logic&lt;<a href=\"http://en.wikipedia.org/wiki/First-order_logic\">http://en.wikipedia.org/wiki/First-order_logic</a>&gt;<br>\n&gt;</p>\n<p>\"A formula in first-order logic with no free variables is called<br>\na*first-ordersentence&lt;http://<strong>en.wikipedia.org/wiki/</strong>&lt;<a href=\"http://en.wikipedia.org/wiki/**\">http://en.wikipedia.org/wiki/**</a>&gt;<br>\nSentence_%28mathematical_<strong>**logic%29&lt;http://en.wikipedia.</strong><br>\norg/wiki/Sentence_%**28mathematical_logic%29&lt;<a href=\"http://en.wikipedia.org/wiki/Sentence_%28mathematical_logic%29\">http://en.wikipedia.org/wiki/Sentence_%28mathematical_logic%29</a>&gt;</p>\n<blockquote>\n<blockquote>\n<p>*.</p>\n</blockquote>\n</blockquote>\n<p>These are the formulas that will have well-definedtruth values&lt;<br>\n<a href=\"http://en.wikipedia.org/wiki/****Truth_value&lt;http://en.wikipedia.org/wiki/**Truth_value\">http://en.wikipedia.org/wiki/****Truth_value&lt;http://en.wikipedia.org/wiki/**Truth_value</a>&gt;<br>\n&lt;http://en.**wikipedia.org/wiki/Truth_value&lt;<a href=\"http://en.wikipedia.org/wiki/Truth_value\">http://en.wikipedia.org/wiki/Truth_value</a>&gt;<br>\n**&gt;&gt;under</p>\n<p>an interpretation.\"</p>\n<p>This wasn't a case where I needed to study any logic. The stuff I need to<br>\nstudy is not this basic, discrete math level logic. I was making the<br>\nwrong<br>\nassumptions, and I also needed to sync up some vocabulary, and maybe have<br>\nmy mind refreshed just a little on stuff I haven't used on a daily basis.</p>\n<p>If I'm still wrong, all I can do, when the documentation doesn't cover a<br>\ntopic, is make conclusions based on what I get the software to do. The<br>\ntheorems below gave me the data to say what I said above.</p>\n<p>If \"free variables don't get quantified\" is supposed to be obvious<br>\nbecause<br>\nof \"free variables\", it isn't. I gave the quote above, plus I had asked<br>\nthe<br>\nquestion, and I never got a simple, authoritative answer saying, \"Free<br>\nvariables don't get quantified\".</p>\n<p>Regards,<br>\nGB</p>\n<p>theorem --\"(1)\"<br>\n--\"As a test case, I show a quantified and free form equivalency, for a<br>\ntrue<br>\n    proposition that's a tautology.\"<br>\n   \"(A&amp;  B --&gt;  A)&lt;-&gt;  (!C.!D.(C&amp;  D --&gt;  C))\"</p>\n<p>by auto</p>\n<p>theorem --\"(2)\"<br>\n--\"I then negate the formula inside the quantified variables, to show<br>\nthat<br>\na<br>\n    false proposition works as well, when it's a contradiction.\"<br>\n   \"~(A&amp;  B --&gt;  A)&lt;-&gt;  (!C.!D.~(C&amp;  D --&gt;  C))\"</p>\n<p>by auto</p>\n<p>theorem --\"(3)\"<br>\n--\"I then try to show an equivalency with another proposition that is<br>\n     neither a tautology or contradiction. A counterexample is found.\"<br>\n   \"(A | B --&gt;  A)&lt;-&gt;  (!C.!D.(C | D --&gt;  C))\"<br>\n--\"Nitpick found a counterexample:<br>\n    Free variables:<br>\n     (A?bool) = True<br>\n     (B?bool) = False\"<br>\noops</p>\n<p>theorem --\"(4)\"<br>\n--\"It turns out, free variable formulas are propositions. So a free<br>\nvariable<br>\n    formula is a tautology if a quantified form of it is proved to be<br>\ntrue.<br>\nHere<br>\n    the software doesn't care that the LHS and the RHS is false.\"<br>\n   \"(!C.!D.(C | D --&gt;  C)) --&gt;  (A | B --&gt;  A)\"<br>\nby auto</p>\n<p>theorem --\"(5)\"<br>\n--\"Here, the LHS is not quantified in any way, shape, or form, so it<br>\ncan't<br>\nbe<br>\n    used to prove the RHS.\"<br>\n   \"(A | B --&gt;  A) --&gt;  (!C.!D.(C | D --&gt;  C))\"<br>\n--\"Nitpick found a counterexample:<br>\n    Free variables:<br>\n     (A?bool) = True<br>\n     (B?bool) = False<br>\n    Skolem constants:<br>\n     (C?bool) = False<br>\n     (D?bool) = True\"<br>\noops</p>\n</blockquote>\n</blockquote>\n</blockquote>",
        "id": 294222491,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660898241
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nOn 9/16/2012 10:00 AM, Alfio Martini wrote:</p>\n<blockquote>\n<blockquote>\n<p>For (3), I now call the left-hand side a proposition, and I think of it in terms of propositional logic. I call the right-hand side a closed formula, and I think of it terms of first-order logic. A proposition does not necessarily have a definite truth value, whereas a closed formula does<br>\nI understand  that a proposition is the same thing as sentence, as it is often called and thus has to have a definite logical truth-value. In this way, I always comeback to the definition of interpretation.</p>\n</blockquote>\n</blockquote>\n<p>Dear Alfio,</p>\n<p>(Another long email, so I put this here at the top. I work out ideas <br>\nwith these type of emails, but I also consider \"involved technical <br>\ndiscussions by text\" as acts in frustration. You can have the last word, <br>\nif you want the last word. My reply here is long enough to where I don't <br>\neven want to read it to proof it one final time.)</p>\n<p>First, my logic vocabulary is messed up in a lot of ways, but I also <br>\nthink we're running into some legitimate vocabulary problems.</p>\n<p>(I'd be happy to sit under you in Brasil to help straighten me out, but <br>\nBrasil sounds expensive, and I'm not a programmer, I already see my name <br>\ntoo much, so I don't reply to emails like \"Re: [isabelle] Eliminating <br>\ntwo quantifiers in structural proof\", and say, \"Alfio, very useful <br>\nexamples. Thanks\".)</p>\n<p>Isabelle/HOL \"subsumes\", naively or formally, many different formalized <br>\nlogics. These logics all have a different, though similar, vocabulary, <br>\nand two of these logics are propositional logic and first-order logic.</p>\n<p>I was taking \"sentence\" from first-order logic, which is formally <br>\ndefined to be a formula with no free variables.</p>\n<p>For \"definite truth value\", I meant that no matter what the assignment <br>\nof truth values to a sentence's FOL atomic formulas, a FOL sentence has <br>\nonly one truth value. For a proposition, the truth value of the <br>\nproposition may vary depending on the assignment of truth values to its <br>\natomic formulas. You cover those ideas below.</p>\n<p>My standard text for propositional and first-order logic is Bilaniuk's <br>\n\"A Problem Course in Mathematical Logic\", from which I have and will <br>\ncontinue to get my vocabulary, one reason is the book is free and <br>\nonline, and another is that I like his choice of words; below, I refer <br>\nto it as \"Bilaniuk\":</p>\n<p><a href=\"http://euclid.trentu.ca/math/sb/pcml/pcml.html\">http://euclid.trentu.ca/math/sb/pcml/pcml.html</a></p>\n<p>For this email, I supplement it with this article:</p>\n<p><a href=\"http://logic.stanford.edu/classes/cs157/2011/notes/chap02.html\">http://logic.stanford.edu/classes/cs157/2011/notes/chap02.html</a></p>\n<p>Continuing with your comments:</p>\n<blockquote>\n<p>In first-order logic an interpretation assigns meanings only to the syntactic entities [of the<br>\nsignature or basis]. Meaning of free variables are fixed by the notion of a state, i.e., a function from variables to values.</p>\n</blockquote>\n<p>But Alfio, now you're at a level of formalism that's not workable for <br>\npeople with a formal education in mathematics at the undergraduate <br>\nlevel, where I would have an undergraduate_plus level of education. I'm <br>\nlearning something here, and my use of \"interpretation\" might be <br>\nnecessary, but formalism that I can't pass on to lots of other people is <br>\nof limited use to me.</p>\n<blockquote>\n<p>So, in first-order logic, any formula that contains [for instance] a<br>\nfree-variable\"x\" it is not [be called] a proposition, and it is actually a function(al)<br>\non that free-variable. It can be seen as having the type State=&gt;Bool, where State is a function Vars=&gt;D,  Vars is the set of variables used to build the set of well-formed formulas and D is the domain in question. In this sense, the truth-value of this formula is open. It depends on the value of this free variable. It does not assert anything.</p>\n</blockquote>\n<p>I understand what you're saying, but in the context of Isabelle/HOL, <br>\nbelow I argue about \"it is not to be called a proposition\". (Below, I <br>\nsee I didn't exactly address that \"I can consider open FOL formulas as <br>\npropositions\".)</p>\n<p>I guess we're still talking about this formula, and you're saying it's open:</p>\n<p>theorem --\"(3)\"<br>\n   \"(A | B --&gt;   A)&lt;-&gt;  (!C.!D.(C | D --&gt;   C))\"<br>\noops</p>\n<p>I understand that it's open in FOL, but ultimately we're not in FOL, <br>\nwe're in Isabelle/HOL, and because of this thread and the related <br>\nthread, I now consider that I'm mixing propositional logic with <br>\nfirst-order logic. Actually, I now consider that any FOL closed formula <br>\ncan be considered an atomic formula in propositional logic.</p>\n<p>Am I right or wrong? I'm think I'm right enough, and I explain a little <br>\nbelow.</p>\n<blockquote>\n<p>Now, propositional logic is just a sublogic of first-order logic, with no<br>\nfunction symbols and where all predicate symbols have arity zero.</p>\n</blockquote>\n<p>That's the traditional view.</p>\n<p>But Isabelle/HOL is not traditional mathematics. It's not propositional <br>\nlogic and it's not first-order logic.</p>\n<p>I now depart from the traditional view, and I now consider, as I <br>\nmentioned, that FOL sentences (closed formulas, formulas with no free <br>\nvariables), qualify as propositional atomic formulas (atomic sentences).</p>\n<p>(At this point, it is entirely possible that I'm completely confused, <br>\nand that I'm repeating what you're already saying.)</p>\n<p>You're generalizing so that propositional logic is also first-order <br>\nlogic.<br>\n On the other hand, I'm generalizing a certain class of FOL <br>\nformulas, the closed formulas, so that they are also atomic sentences in <br>\npropositional logic.</p>\n<p>Atomic sentences merely need be a string of symbols in which I can <br>\ndefinitely say the sentences are either true or false. In Isabelle/HOL, <br>\nevery FOL closed formula is either true or false (can I be wrong on such <br>\na basic idea?).</p>\n<p>Bilaniuk says on page 3,</p>\n<p>\"Definition 1.1 item (3): Atomic formulas: A_0,...\"</p>\n<p>\"Definition 1.2 item (1): Every atomic formula is a formula.\"</p>\n<p>\"The atomic formulas, A_0, A_1, ..., are meant to represent <br>\nstatements that<br>\n       cannot be broken down any further using our connectives, ...'\".</p>\n<p>Unlike with first-order atomic formulas, I am free to say what my <br>\nproposition atomic formulas are, as long as they can be interpreted as <br>\neither true or false (wrong again? considering FOL 0-ary predicates?).</p>\n<p>The formal development of propositional logic, per Bilaniuk's Definition <br>\n1.1 and Definition 1.2, page 3, is completely independent of the formal <br>\ndevelopment of first-order logic, per Definitions 5.1, 5.2, and 5.3, <br>\npages 24, 26, and 27.</p>\n<p>I don't even try to figure out how Bilaniuk's first-order logic <br>\ndefinition could be rephrased to use Definitions 1.1 and 1.2, because <br>\nthat's not what I want.</p>\n<p>(Here, I go back and study your last sentence above, rather than just <br>\nblow by it.</p>\n<p>Definition 5.1 item (5) of  Bilaniuk requires that any FOL language <br>\ninclude the \"=\" primitive, not to mention the quantifier symbol. <br>\nDefinition 1.1 doesn't require that a language of propositional logic <br>\nhave these symbols, so not every language of propositional logic <br>\nqualifies as a first-order language.</p>\n<p>However, suppose we ignore \"=\" and \"forall\" when they're not used. This <br>\ngets into my pet peeve about people making the FOL specification <br>\nsynonymous with a \"locked in, defined\" language of first-order logic per <br>\nthe requirement of the FOL specification.</p>\n<p>I now extend my pet peeve to the \"propositional logic specification\" not <br>\nbeing synonymous with a \"locked in, defined\" language of propositional <br>\nlogic, where the differences between two languages would be their <br>\nspecific atomic formulas of Definition 1.1 item (3).</p>\n<p>So, how can we assume anything if we haven't stated specifically both <br>\nour language of propositional logic and our language of first-order logic?</p>\n<p>Okay, I look at the FOL specification again, and it might allow for an <br>\ninfinite number of predicate symbols, so possibly we could define a FOL <br>\nlanguage which contains every other FOL language, and likewise for a <br>\n\"most generalized\" language of propositional logic. That's not my <br>\napplication, and, by text, I can't thoroughly interrogate you on these <br>\nkind of things.</p>\n<p>I stop here on this. Writing what I write won't likely get read, so <br>\nwriting two times the amount is even less likely to get read.)</p>\n<blockquote>\n<p>The \"variables\" here are just predicates. Thus, it is<br>\nenough to fix an interpretation for these predicates in<br>\norder  to have the definite truth-value of the expression. So, from<br>\nthis point of view, every well-formed expression in propositional logic is<br>\na assertion, i.e., a sentence. That is why,<br>\nI think, it can be called propositional or sentential logic.</p>\n</blockquote>\n<p>I think we ended up at the same point; but possibly not. I decided that <br>\nthe complete formula of my (3) above qualified as propositional logic, <br>\nbut not as first-order logic.</p>\n<p>But it comes back to emphasis. I think you're analyzing the formula of <br>\n(3) independent of \"theorem\", and I was analyzing as part of the Isar <br>\ncommand <code>theorem \"(A | B --&gt; A) &lt;-&gt; (!C.!D.(C | D --&gt; C))\"</code>. So using <br>\nyour terminology, the formula of (3) doesn't have single truth value <br>\nunder all interpretations.</p>\n<blockquote>\n<p>I am not sure if this view (as written above) is shared by other people,<br>\nthough.</p>\n</blockquote>\n<p>I'm sure that most everyone would have a view, but most everyone won't <br>\nhave read this far, because involved technical discussions by text <br>\naren't \"workable\".</p>\n<p>You could straighten me out where I'm wrong, but getting completely <br>\nstraightened out can never happen on an electronic forum. There is no <br>\nsubstitute for locally sitting under the masters, although I've had <br>\nplenty of local masters who didn't give me any time.</p>\n<p>One more point for anyone listening. Any straightening out must be a <br>\nsolution that's applicable to the masses, where the masses would be <br>\npeople with a understanding of 1st and 2nd year university logic along <br>\nthe lines of Rosen's Discrete Mathematics.</p>\n<p><a href=\"http://www.mhhe.com/math/advmath/rosenindex.mhtml\">http://www.mhhe.com/math/advmath/rosenindex.mhtml</a></p>\n<p>Isabelle requires a more sophisticated understanding of logic than that <br>\nlevel, but requiring too much beyond that will get Isabelle rejected by <br>\nthe masses, or, better said, books about Isabelle beyond that will be <br>\nrejected by the masses.</p>\n<p>I'm learning that I don't have to u<br>\n[message truncated]</p>",
        "id": 294222655,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660898334
    }
]