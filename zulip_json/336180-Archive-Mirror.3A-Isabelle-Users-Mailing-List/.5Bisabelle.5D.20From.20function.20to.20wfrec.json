[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear Isabelle experts,</p>\n<p>I'd like to automate a bunch of constructions and proofs about recursive functions that <br>\nare defined with the function package. They would be easy to express and implement if the <br>\nfunctions were expressible using the wfrec combinator from Wfrec.thy, which had been used <br>\nby the old recdef package. Clearly, not all features that the function package supports <br>\ncan be easily expressed using wfrec. From my experience, leaving localisation aside, <br>\nalmost all the functions I have defined with fun/function fall within the fragment <br>\nsupported by recdef + currying. So I wonder whether there already exists some (automatic) <br>\nway to get a wfrec characterisation for a function defined with the function package. <br>\nWould other people/tools also find such a characterisation useful?</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 294712099,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661182529
    }
]