[
    {
        "content": "<p>From: Wenda Li &lt;<a href=\"mailto:wl302@cam.ac.uk\">wl302@cam.ac.uk</a>&gt;<br>\nHi Jose,</p>\n<p>Here are some tips from my experience. </p>\n<p>As your goal does not have division, we can consider “algebra_simps” (otherwise we may need “field_simps” or “divide_simps”). Also, I usually consider </p>\n<p>“x - y = 0” when “x&lt;y” and x y are of type “nat”</p>\n<p>as an “anomaly\" when reasoning about natural numbers in Isabelle, so I will try to prove “x &gt;= y” first (or do some case analysis here). </p>\n<p>Therefore, I first tried “(simp add:algebra_simps)” on your target, and the tactic got stuck at the step “k + (k * k + a * (k * 2) - k) = k * k + a * (k * 2)”. To resolve the “anomaly”, I proved  \"k * k + a * (k * 2) ≥ k” first, and the problem was then gone:</p>\n<p>lemma \"(k::nat)<em>(k+2</em>a-1) + 2<em>(a + k) = (Suc k)</em>((Suc k)+2*a-1)\"<br>\nproof -<br>\n  have \"k * k + a * (k * 2) ≥ k\" <br>\n    by (simp add: trans_le_add1)<br>\n  then show ?thesis by (simp add:algebra_simps)<br>\nqed</p>\n<p>where “by (simp add: trans_le_add1)” has been found by sledgehammer, and “a&gt;=1” in your previous email turns out to be an unnecessary assumption.</p>\n<p>Hope this helps,<br>\nWenda</p>",
        "id": 294738455,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190646
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nHi Jose,</p>\n<p>a canonical way would be to \"convert\" both sides to real, and then<br>\n\"push in\" the conversion until the variables. When giving it the lemma<br>\n\"of_nat_diff\" the simplifier can do the non-underflow proof for the<br>\nsubtraction automatically.</p>\n<p>lemma HDGFHFnat: \"a≥1 ⟹ (k::nat)<em>(k+2</em>a-1) + 2*(a + k) =<br>\n(k+1)<em>((k+1)+2</em>a-1)\"<br>\n  apply (rule of_nat_eq_iff[where 'a=real,THEN iffD1])<br>\n  apply (simp add: of_nat_diff)<br>\n  by argo</p>",
        "id": 294738459,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190648
    }
]