[
    {
        "content": "<p>From: René Neumann &lt;<a href=\"mailto:lists@necoro.eu\">lists@necoro.eu</a>&gt;<br>\nHi all,</p>\n<p>I had to define a function that needed its own proof of termination.<br>\nThereby I noticed an issue, I'd like to show by example:</p>\n<p>Let succs :: \"('a × 'a) set ⇒ 'a ⇒ 'a set\"<br>\nand then define some example function \"foo\":</p>\n<p>function foo :: \"('a × 'a) set ⇒ 'a ⇒ nat ⇒ nat\" where<br>\n\"foo E v n = (if n &gt; 0 then<br>\n               fold (λv'.λn. if n = 0 then 0<br>\n                             else foo E v' n) (n - 1) (succs E v)<br>\n              else 0)\"</p>\n<p>This function might f.ex. being seen as walking depth-first through a<br>\ngraph, doing at most n steps.</p>\n<p>The problem now arises when showing termination: A 'termination proof'<br>\nwants me to show the following goal (the concrete measurement ?R should<br>\nbe unimportant to my issue, but should probably rely on n):</p>\n<p>⋀E v n x xa. ⟦0 &lt; n; xa ≠ 0⟧ ⟹ ((E, x, xa), E, v, n) ∈ ?R</p>\n<p>As you might notice there is no relation between xa and n, though it<br>\nshould be something like \"xa = n - 1\".</p>\n<p>Is it possible somehow to put the relation in again without doing some<br>\nheavy rewriting of the function? (As this might work for one case but<br>\nnot for another)</p>\n<p>Thanks,<br>\nRené</p>",
        "id": 294142821,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660846448
    },
    {
        "content": "<p>From: Konrad Slind &lt;<a href=\"mailto:konrad.slind@gmail.com\">konrad.slind@gmail.com</a>&gt;<br>\nHi Rene,</p>\n<p>Since there is an occurrence of fold, you need to have<br>\na congruence rule for fold installed so the termination<br>\nextraction machinery will do the right thing. I imagine<br>\nthe documentation discusses this.</p>\n<p>Cheers,<br>\nKonrad.</p>",
        "id": 294142824,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660846450
    }
]