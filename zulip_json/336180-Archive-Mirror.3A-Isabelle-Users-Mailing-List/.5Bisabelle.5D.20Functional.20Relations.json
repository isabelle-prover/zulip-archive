[
    {
        "content": "<p>From: Vaidas Gasiunas &lt;<a href=\"mailto:gasiunas@informatik.tu-darmstadt.de\">gasiunas@informatik.tu-darmstadt.de</a>&gt;<br>\nIn Isabelle there is a nice property, that from \"f a = x\" \"f b = y\" it <br>\nautomatically concludes that \"x = y\".</p>\n<p>Sometimes I define functions as inductive relations and prove that they <br>\nare functional, e.g. \"[| (a, b) in myrel; (a, b') in myrel |] ==&gt; b = <br>\nb'\". How to achieve that such lemmas were applied automatically?</p>\n<p>Greetings,<br>\nVaidas<br>\n<a href=\"/user_uploads/14278/eGHNHuYlEWNfqvp2cANaFd0d/smime.p7s\">smime.p7s</a></p>",
        "id": 294042245,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660815834
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nVaidas Gasiunas schrieb:</p>\n<blockquote>\n<p>In Isabelle there is a nice property, that from \"f a = x\" \"f b = y\" it <br>\nautomatically concludes that \"x = y\".</p>\n</blockquote>\n<p>I hope not! That is, only if a=b. Then this is just rewriting.</p>\n<blockquote>\n<p>Sometimes I define functions as inductive relations and prove that they <br>\nare functional, e.g. \"[| (a, b) in myrel; (a, b') in myrel |] ==&gt; b = <br>\nb'\". How to achieve that such lemmas were applied automatically?</p>\n</blockquote>\n<p>If you give them to blast/fast/fastsimp/auto as dstruction rules, ie via <br>\n\"dest: ...\" (or \"dest!: ...\") they may help. In the case of blast/fast <br>\nonly if one of b or b' is just a variable.</p>\n<p>Tobias</p>",
        "id": 294042262,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660815839
    },
    {
        "content": "<p>From: Vaidas Gasiunas &lt;<a href=\"mailto:gasiunas@informatik.tu-darmstadt.de\">gasiunas@informatik.tu-darmstadt.de</a>&gt;<br>\nI have experimented with various formulations of the lemma, for example <br>\nI tried to make an elimination rule like:</p>\n<p>\"[| (a, b) in myrel; (a, b') in myrel; [| (a, b) in myrel; b = b' |] ==&gt; <br>\nP |] ==&gt; P\"</p>\n<p>Indeed \"[| (a, b) in myrel; (a, b') in myrel |] ==&gt; b = b'\" works best <br>\nas destruction rule. I can even mark it with [dest] and then it is <br>\napplied successfully automatically.</p>\n<p>Thanks,<br>\nVaidas</p>",
        "id": 294042352,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660815864
    }
]