[
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nBy asking questions here, it makes me think harder and work harder, to <br>\ntry and keep from saying something that's wrong.</p>\n<p>First, one of the biggest things I got out of this is the idea of <br>\nrunning Nitpick on both a theorem and it's negation. I'm thinking that <br>\nif both a \"theorem\" and its negation are both false, then that's a <br>\nproblem. I'd still like to ask that question, \"Uh, if Nitpick finds a <br>\ncounterexample, does that mean...\" Negative logic can mess me up. <br>\n\"Inconsistent\" isn't part of the vocabulary of a typical math education. <br>\nI have to deprogram myself.</p>\n<p>I have just now had a revelation. If I can run Nitpick on a theorem and <br>\nits negation, then I can run Sledgehammer on a theorem and its negation. <br>\nI'll need to write some macros so I don't spend my life cutting, <br>\npasting, and typing, and eventually get that quad core notebook. I see <br>\nthat dummy_thf prover again. It never proves a thing.</p>\n<p>My more-flexible solution is to not use the HOL \"=\", but use my own <br>\nundefined \"EQ\", like this:</p>\n<p>consts eqS::\"[sT,sT] =&gt; bool\" (infixl \"EQ\" 51)</p>\n<p>Of course, I still want to make it easy to experiment, and switch in and <br>\nout the HOL \"=\", so I comment out eqS, and use:</p>\n<p>abbreviation eqS::\"[sT,sT] =&gt; bool\" (infixl \"EQ\" 51) where \"x EQ y == x = y\"</p>\n<p>My constant eqS is more conceptually satisfying because it doesn't make <br>\nany sense to use it if it hasn't been defined in any way. If I use it <br>\nwithout defining it, I end up with that same inconsistency that I get <br>\nwhen I use the HOL \"=\", but the HOL \"=\" is defined, though it still <br>\nmight not make sense to use it the way I was using it.</p>\n<p>I also get an &lt;-&gt; that's not identical to my equal operator. As to how <br>\neasy or hard it makes things to prove, I don't anything about that yet.</p>\n<p>Regards,<br>\nGB</p>",
        "id": 294166210,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854830
    }
]