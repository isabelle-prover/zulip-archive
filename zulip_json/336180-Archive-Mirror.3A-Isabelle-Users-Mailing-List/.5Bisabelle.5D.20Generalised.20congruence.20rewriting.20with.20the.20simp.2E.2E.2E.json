[
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nHallo,</p>\n<p>I have a lemma that states that</p>\n<p>f ∈ Θ(g) ⟹ L(f) = L(g)</p>\n<p>I also have the following two rules on Θ:</p>\n<p>f ∈ Θ(g)<br>\nf1 ∈ Θ(g1) ⟹ f2 ∈ Θ(g2) ⟹ (λx. f1 x * f2 x) ∈ Θ(λx. g1 x * g2 x)</p>\n<p>These rules together basically allow me to rewrite expressions of the<br>\nform \"L(λx. … * f x * …)\" to \"L(λx. … * g x * …)\" if I can show \"f ∈<br>\nΘ(g)\", i.e. I can rewrite factors under a \"L\" individually and<br>\nindependently.</p>\n<p>I would like to get the simplifier to do this automatically, i.e.<br>\nwhenever there is an expression of the form \"L(λx. f1 x * … * fk x)\",<br>\ntry to rewrite every factor individually by using the simp rules to find<br>\nan \"fi\" distinct from \"gi\" such that \"fi ∈ Θ(gi)\" and then rewriting the<br>\nfactor \"fi\" to \"gi\".</p>\n<p>For example, if I have a simp rule that states \"(λ_. c) ∈ Θ(λx. 1)\", and<br>\nI have an expression like \"L(λx. x * 2 * x)\", that should be rewritten<br>\nto \"L(λx. x * 1 * x)\".</p>\n<p>I could easily write a simproc that does that, but I wonder if this can<br>\nalso be done in a more straightforward and scalable way, e.g. with<br>\nsimp/cong rules.</p>\n<p>Cheers,</p>\n<p>Manuel</p>",
        "id": 294639440,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661161458
    }
]