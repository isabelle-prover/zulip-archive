[
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:breitner@kit.edu\">breitner@kit.edu</a>&gt;<br>\nHi,</p>\n<p>while preparing some slides, I want to include some isabelle-generated<br>\nLaTeX from a small fragment. So I fired up jEdit and wrote the few lines<br>\nin Scratch.thy, saving that file to /tmp.</p>\n<p>Now I’d like to figure out how to convert that to .tex, without creating<br>\na full session and running \"isabelle build\" and then extracting the .tex<br>\nfrom the generated .tex files.</p>\n<p>Is there a low-level-command that goes from .thy directly to .tex,<br>\nwithout a session infrastructure involving ROOT and document/root.tex?</p>\n<p>I tried <br>\nisabelle-process -I -q -m latex HOL &lt; Scratch.thy <br>\nwhich spits out LaTeX, but not the theory but rather the progress of<br>\nprocessing it.</p>\n<p>Thanks,<br>\nJoachim<br>\n<a href=\"/user_uploads/14278/45Bs3txx8BlKFiSKN9_AlsNb/signature.asc\">signature.asc</a></p>",
        "id": 294232751,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660903297
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Fri, 8 Feb 2013, Joachim Breitner wrote:</p>\n<blockquote>\n<p>I want to include some isabelle-generated LaTeX from a small fragment.</p>\n</blockquote>\n<blockquote>\n<p>Now I’d like to figure out how to convert that to .tex, without creating <br>\na full session and running \"isabelle build\" and then extracting the .tex <br>\nfrom the generated .tex files.</p>\n</blockquote>\n<p>If this is feasible in Isabelle2012 or Isabelle2013 depends on how small <br>\nthe fragment might be.</p>\n<p>For example, you can print formal entities with the \"latex\" print mode <br>\ninteractively like this:</p>\n<p>thm (latex) exI exE</p>\n<p>or goal states:</p>\n<p>pr (latex)</p>\n<p>This is a half-forgotten and quite archaic form.  I can't tell on the <br>\nspot how far it still works.</p>\n<p>Another approximation is display_drafts, which is Present.drafts in ML. <br>\nIt merely does pretty printing of Isabelle symbols, without any formal <br>\ncontent.</p>\n<blockquote>\n<p>Is there a low-level-command that goes from .thy directly to .tex, <br>\nwithout a session infrastructure involving ROOT and document/root.tex?</p>\n</blockquote>\n<p>That is difficult with the full spectrum of document antiquotations etc. <br>\nThe main entry point for that is Thy_Output.present_thy but that is not <br>\neasily invoked manually.</p>\n<p>Proper document preparation is still intertwined with the session concept, <br>\nalthough there is conceptually no strong reason for it, just old habits.</p>\n<p>In the past few years, I have occasionally made tiny steps to make it more <br>\nvalue oriented, operating on given sources more systematically.  My <br>\nimmediate motivation is to have document preparation within the Prover <br>\nIDE, to avoid the relatively clumsy batch build sessions.</p>\n<p>Makarius</p>",
        "id": 294233349,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660903573
    },
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:breitner@kit.edu\">breitner@kit.edu</a>&gt;<br>\nHi,</p>\n<p>Am Montag, den 11.02.2013, 17:33 +0100 schrieb Makarius:</p>\n<blockquote>\n<p>For example, you can print formal entities with the \"latex\" print mode <br>\ninteractively like this:</p>\n<p>thm (latex) exI exE</p>\n<p>or goal states:</p>\n<p>pr (latex)</p>\n<p>This is a half-forgotten and quite archaic form.  I can't tell on the <br>\nspot how far it still works.</p>\n</blockquote>\n<p>It works, just today I was using \"thm (latex)\" quite a few times where I<br>\nreally just need a theorem, and not a whole Isar command.</p>\n<blockquote>\n<blockquote>\n<p>Is there a low-level-command that goes from .thy directly to .tex, <br>\nwithout a session infrastructure involving ROOT and document/root.tex?</p>\n</blockquote>\n<p>That is difficult with the full spectrum of document antiquotations etc. <br>\nThe main entry point for that is Thy_Output.present_thy but that is not <br>\neasily invoked manually.</p>\n<p>Proper document preparation is still intertwined with the session concept, <br>\nalthough there is conceptually no strong reason for it, just old habits.</p>\n<p>In the past few years, I have occasionally made tiny steps to make it more <br>\nvalue oriented, operating on given sources more systematically.  My <br>\nimmediate motivation is to have document preparation within the Prover <br>\nIDE, to avoid the relatively clumsy batch build sessions.</p>\n</blockquote>\n<p>Thanks, that would be great. Until then, \"isabelle mkroot -d\" followed<br>\nby adding Scratch to the theories and quick_and_dirty to the options is<br>\nsufficient.</p>\n<p>Greetings,<br>\nJoachim<br>\n<a href=\"/user_uploads/14278/tX0VGcl9CxRJhzIWNF9718tH/signature.asc\">signature.asc</a></p>",
        "id": 294233393,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660903604
    }
]