[
    {
        "content": "<p>From: Mathieu Giorgino &lt;<a href=\"mailto:mathieu.giorgino@irit.fr\">mathieu.giorgino@irit.fr</a>&gt;<br>\nHello all,</p>\n<p>I'm basically new to the ML part of Isabelle.</p>\n<p>I'm defining a ML function to automatically generate specifications of an <br>\nIsabelle function (these specifications are given as argument to <br>\nFunction_Fun.add_fun). During the generation, I obtain terms containing <br>\nschematic type variables. I need to constrain (with sorts) the types appearing <br>\nin these specifications, and I also transform the schematic type variables to <br>\ntype variables (I think I have to).</p>\n<p>However when I use this function in a locale, my generated type variables can <br>\nbe the same as the locale's one (and a type capture occurs) which certainly <br>\nmeans I'm doing something wrong. What is the correct way to generate fresh <br>\ntype variables (TFree) ?</p>\n<p>I've searched through the Isabelle Cookbook and the sources <br>\n(Pure/{type.ML,term.ML,Isar/<em>local</em>}) without any real clue. Have I to collect <br>\ntype variables of current locale fixed terms and use Name.variant ?</p>\n<p>Thanks,</p>\n<p>Mathieu</p>",
        "id": 294138494,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845128
    },
    {
        "content": "<p>From: Sascha Boehme &lt;<a href=\"mailto:boehmes@in.tum.de\">boehmes@in.tum.de</a>&gt;<br>\nHi Mathieu,</p>\n<p>Concerning fresh names relative to a context have a look at the Isar<br>\nimplementation manual in Chapter 5, Section 1 (Variables), especially<br>\nVariable.variant_fixes.  For more details, look into<br>\n~~/src/Pure/variable.ML.</p>\n<p>Cheers,<br>\nSascha</p>\n<p>Mathieu Giorgino wrote:</p>",
        "id": 294138508,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845132
    },
    {
        "content": "<p>From: Christian Urban &lt;<a href=\"mailto:urbanc@in.tum.de\">urbanc@in.tum.de</a>&gt;<br>\nHi Mathieu,</p>\n<p>There is also the related function Variable.variant_frees,<br>\nwhich is explained in the Cookbook on page 16 with a<br>\nsmall example about generating fresh names for Frees. ;o)</p>\n<p>Hope this helps,<br>\nChristian</p>\n<p>Sascha Boehme writes:</p>\n<blockquote>\n<p>Hi Mathieu,</p>\n<p>Concerning fresh names relative to a context have a look at the Isar<br>\nimplementation manual in Chapter 5, Section 1 (Variables), especially<br>\nVariable.variant_fixes.  For more details, look into<br>\n~~/src/Pure/variable.ML.</p>\n<p>Cheers,<br>\nSascha</p>\n<p>Mathieu Giorgino wrote:</p>\n<blockquote>\n<p>Hello all,</p>\n<p>I'm basically new to the ML part of Isabelle.</p>\n<p>I'm defining a ML function to automatically generate specifications of an <br>\nIsabelle function (these specifications are given as argument to <br>\nFunction_Fun.add_fun). During the generation, I obtain terms containing <br>\nschematic type variables. I need to constrain (with sorts) the types appearing <br>\nin these specifications, and I also transform the schematic type variables to <br>\ntype variables (I think I have to).</p>\n<p>However when I use this function in a locale, my generated type variables can <br>\nbe the same as the locale's one (and a type capture occurs) which certainly <br>\nmeans I'm doing something wrong. What is the correct way to generate fresh <br>\ntype variables (TFree) ?</p>\n<p>I've searched through the Isabelle Cookbook and the sources <br>\n(Pure/{type.ML,term.ML,Isar/<em>local</em>}) without any real clue. Have I to collect <br>\ntype variables of current locale fixed terms and use Name.variant ?</p>\n<p>Thanks,</p>\n<p>Mathieu</p>\n</blockquote>\n</blockquote>",
        "id": 294138525,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845138
    },
    {
        "content": "<p>From: Mathieu Giorgino &lt;<a href=\"mailto:mathieu.giorgino@irit.fr\">mathieu.giorgino@irit.fr</a>&gt;<br>\nThanks Sascha and Christian,</p>\n<p>I used \"Variable.variant_fixes\" and it worked great.</p>\n<p>I had already used \"Variable.variant_frees\" for terms, but I hadn't realized <br>\nit can also be used for types. If I understand correctly, type variables and <br>\nterm variables are in the same namespace (implicitly separated by the prefix <br>\n\"'\") ?</p>\n<p>By the way, thanks for the Isabelle Cookbook, it's really helpful to start <br>\nwith Isabelle/ML.</p>\n<p>Mathieu</p>",
        "id": 294138542,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845145
    },
    {
        "content": "<p>From: Mathieu Giorgino &lt;<a href=\"mailto:mathieu.giorgino@irit.fr\">mathieu.giorgino@irit.fr</a>&gt;<br>\nThanks Sascha and Christian,</p>\n<p>I used \"Variable.variant_fixes\" and it worked great.</p>\n<p>I had already used \"Variable.variant_frees\" for terms, but I hadn't realized <br>\nit can also be used for types. If I understand correctly, type variables and <br>\nterm variables are in the same namespace (implicitly separated by the prefix <br>\n\"'\") ?</p>\n<p>By the way, thanks for the Isabelle Cookbook, it's really helpful to start <br>\nwith Isabelle/ML.</p>\n<p>Mathieu</p>",
        "id": 294138582,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845157
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Wed, 29 Jun 2011, Mathieu Giorgino wrote:</p>\n<blockquote>\n<p>Thanks Sascha and Christian,</p>\n<p>I used \"Variable.variant_fixes\" and it worked great.</p>\n<p>I had already used \"Variable.variant_frees\" for terms, but I hadn't <br>\nrealized it can also be used for types. If I understand correctly, type <br>\nvariables and term variables are in the same namespace (implicitly <br>\nseparated by the prefix \"'\") ?</p>\n</blockquote>\n<p>No you should not do that.  Term variables and type variables are <br>\ndifferent things.  You probably mean Variable.invent_types, or even the <br>\nimport operations that will put things into context without manual <br>\nfiddling.</p>\n<blockquote>\n<p>By the way, thanks for the Isabelle Cookbook, it's really helpful to <br>\nstart with Isabelle/ML.</p>\n</blockquote>\n<p>It is certainly helpful, but you always need to cross-check with other <br>\nsources of information.  Many fine points in the cookbook are not exactly <br>\nright.</p>\n<p>Makarius</p>",
        "id": 294138599,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845163
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Wed, 29 Jun 2011, Mathieu Giorgino wrote:</p>\n<blockquote>\n<p>Thanks Sascha and Christian,</p>\n<p>I used \"Variable.variant_fixes\" and it worked great.</p>\n<p>I had already used \"Variable.variant_frees\" for terms, but I hadn't <br>\nrealized it can also be used for types. If I understand correctly, type <br>\nvariables and term variables are in the same namespace (implicitly <br>\nseparated by the prefix \"'\") ?</p>\n</blockquote>\n<p>No you should not do that.  Term variables and type variables are <br>\ndifferent things.  You probably mean Variable.invent_types, or even the <br>\nimport operations that will put things into context without manual <br>\nfiddling.</p>\n<blockquote>\n<p>By the way, thanks for the Isabelle Cookbook, it's really helpful to <br>\nstart with Isabelle/ML.</p>\n</blockquote>\n<p>It is certainly helpful, but you always need to cross-check with other <br>\nsources of information.  Many fine points in the cookbook are not exactly <br>\nright.</p>\n<p>Makarius</p>",
        "id": 294138624,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845169
    }
]