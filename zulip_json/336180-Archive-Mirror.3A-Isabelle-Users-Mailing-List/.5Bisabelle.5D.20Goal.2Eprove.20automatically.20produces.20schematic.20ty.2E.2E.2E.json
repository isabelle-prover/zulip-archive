[
    {
        "content": "<p>From: Bohua Zhan &lt;<a href=\"mailto:bzhan@mit.edu\">bzhan@mit.edu</a>&gt;<br>\nThis behavior is very strange to me. Example (in Isabelle2016-RC0):</p>\n<p>theory Test<br>\nimports Rat<br>\nbegin<br>\ndeclare [[show_types]]<br>\nML {*<br>\nval eq = @{prop \"(1::('a::linordered_field)) + - inverse 2 = inverse 2\"};<br>\nval th = Goal.prove @{context} [] [] eq (K (Simplifier.asm_full_simp_tac<br>\n@{context} 1))<br>\n*}</p>\n<p>This produces:<br>\nval th = \"(1::?'a) + - inverse (2::?'a) = inverse (2::?'a)\": thm</p>\n<p>The free type variable is automatically converted to schematic type<br>\nvariable in the resulting theorem. Why is this? How can I keep the original<br>\nfree type variable?</p>\n<p>Interestingly this is no longer the case if there is a free variable<br>\npresent:<br>\nML {*<br>\nval eq = @{prop \"(1::('a::linordered_field)) + - inverse 2 + m = inverse 2</p>\n<ul>\n<li>m\"};<br>\nval th = Goal.prove @{context} [] [] eq (K (Simplifier.asm_full_simp_tac<br>\n@{context} 1))<br>\n*}</li>\n</ul>\n<p>Output is:<br>\nval th = \"(1::'a) + - inverse (2::'a) + (m::'a) = inverse (2::'a) + m\": thm</p>\n<p>Best,<br>\nBohua</p>",
        "id": 294665176,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661171492
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThis is a consequence of Hindley-Milner polymorphism wrt. to the local <br>\ncontext.  See also section 6.1 of the \"implementation\" manual, which <br>\ncontains further explanations and some abstract examples.</p>\n<p>If anything is still unclear after reading that, we should continue the <br>\ndiscussion here.  These concepts are very important in Isabelle after <br>\n1999.  Further discussion of difficulties also helps to improve the <br>\nmanual.</p>\n<p>Makarius</p>",
        "id": 294665180,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661171494
    }
]