[
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nHallo,</p>\n<p>I'm currently in the process of reorganising the library w.r.t. things<br>\nrelated to sublists.</p>\n<p>We have a \"prefix\" and \"suffix\" predicate with the obvious definitions,<br>\nand we have something called \"sublisteq\" for \"non-continuous sublists\"<br>\n(i.e. sublisteq ''bd'' ''abcde'' holds).</p>\n<p>I would now like to introduce a predicate for continuous sublists, i.e.<br>\nwhere ''bcd'' is a sublist of ''abcde'', but ''bd'' is not.</p>\n<p>I struggled to find a good and concise name for this. Possible solutions<br>\nare:<br>\n– substring (reason: seems to be more or less standard name for this;<br>\ndisadvantage: sounds like \"string\" as in \"text string\")<br>\n– infix (reason: Haskell has \"isPrefixOf\", \"isSuffixOf\", \"isInfixOf\";<br>\ndisadvantage: seems to be very non-standard and not the usual meaning of<br>\nthe word \"infix\")</p>\n<p>Any opinions/other suggestions on this? I would also be open to call<br>\nthis \"sublist\" and rename the current \"sublist\" to something else.</p>\n<p>Cheers,</p>\n<p>Manuel</p>",
        "id": 294711269,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661182278
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@inria.fr\">jasmin.blanchette@inria.fr</a>&gt;<br>\nHi Manuel,</p>\n<blockquote>\n<p>Any opinions/other suggestions on this? I would also be open to call<br>\nthis \"sublist\" and rename the current \"sublist\" to something else.</p>\n</blockquote>\n<p>I believe \"sublist\" and \"substring\" are implicitly contiguous in most people's mind (unless otherwise specified), whereas \"subsequence\" is possibly noncontiguous. I'm not saying there's anything very logical about any of this.</p>\n<p>This would mean renaming \"sublist\" to \"subseq\" or \"subsequence\" and using \"sublist\" for what you describe would be the most standard terminology.</p>\n<p>If people are somehow attached to the old \"sublist\" name, I would propose \"contig_sublist\" or, why not, \"infix\". Both are better than \"substring\", which sounds like the specialization of \"sublist\" to \"char list\", i.e. \"string\".</p>\n<p>Cheers,</p>\n<p>Jasmin</p>",
        "id": 294711297,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661182288
    },
    {
        "content": "<p>From: \"Eugene W. Stark\" &lt;<a href=\"mailto:isabelle-users@starkeffect.com\">isabelle-users@starkeffect.com</a>&gt;<br>\nHow about \"segment\"?</p>",
        "id": 294711304,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661182290
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nI don't think that sublist, subsequence and substring really have much of a bias <br>\nin either direction, except possibly substring, but the latter does indeed sound <br>\ntoo specialized. This does not mean we have to avoid sublist/seq, but just that <br>\nI don't believe there is a natural choice. But we could make one.</p>\n<p>On 25/05/2017 14:03, Eugene W. Stark wrote:</p>\n<blockquote>\n<p>How about \"segment\"?</p>\n</blockquote>\n<p>I like it. It is unambiguous. Same as contig_sublist, but shorter.</p>\n<p>In conversation Manuel actually suggested \"fragment\" as a possible name for the <br>\ncurrent sublisteq. It would go nicely with \"segment\". Of course neither have <br>\n\"list\" in the name...</p>\n<p>Tobias</p>\n<blockquote>\n<p>On 05/25/2017 07:38 AM, Jasmin Blanchette wrote:</p>\n<blockquote>\n<p>Hi Manuel,</p>\n<blockquote>\n<p>Any opinions/other suggestions on this? I would also be open to call<br>\nthis \"sublist\" and rename the current \"sublist\" to something else.</p>\n</blockquote>\n<p>I believe \"sublist\" and \"substring\" are implicitly contiguous in most people's mind (unless otherwise specified), whereas \"subsequence\" is possibly noncontiguous. I'm not saying there's anything very logical about any of this.</p>\n<p>This would mean renaming \"sublist\" to \"subseq\" or \"subsequence\" and using \"sublist\" for what you describe would be the most standard terminology.</p>\n<p>If people are somehow attached to the old \"sublist\" name, I would propose \"contig_sublist\" or, why not, \"infix\". Both are better than \"substring\", which sounds like the specialization of \"sublist\" to \"char list\", i.e. \"string\".</p>\n<p>Cheers,</p>\n<p>Jasmin</p>\n</blockquote>\n<p><a href=\"/user_uploads/14278/CTSkW2PPg1Sz51Jbn7DW1HId/smime.p7s\">smime.p7s</a></p>\n</blockquote>",
        "id": 294711348,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661182303
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@inria.fr\">jasmin.blanchette@inria.fr</a>&gt;<br>\nWikipedia has a clear bias (and I did not edit it, nor did I look it up before writing my previous email):</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Subsequence\">https://en.wikipedia.org/wiki/Subsequence</a><br>\n<a href=\"https://en.wikipedia.org/wiki/Substring\">https://en.wikipedia.org/wiki/Substring</a></p>\n<p>Popular algorithm sbooks like Cormen et al. follow the same definition of subsequence. Standard expressions like \"longest increasing subsequence\" depend on this semantics.</p>\n<p>As for sublist, all the examples I see by Googling either \"sublist\", \"is_sublist\", \"isSublist\", or \"indexOfSubList\" in Java, Python, Scala, etc., have the contiguous semantics. Including this page:</p>\n<p><a href=\"http://www4.in.tum.de/lehre/praktika/psv/psv98/Vorlesung5/aufg4.html\">http://www4.in.tum.de/lehre/praktika/psv/psv98/Vorlesung5/aufg4.html</a></p>\n<p>I'm not saying we should rename the Isabelle concepts, just that Isabelle is the odd (wo)man out.</p>\n<p>Jasmin</p>",
        "id": 294711362,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661182309
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nPersonally, what Jasmin suggested resonated most with me: rename<br>\n\"sublisteq\" to \"subseq\" (for non-contiguous sub-sequences) and introduce<br>\n\"sublist\" (for contiguous sub-sequences).</p>\n<p>For this, one would also have to rename the existing function sublist,<br>\nwhich is of type \"'a list ⇒ nat set ⇒ 'a list\", but frankly, I was never<br>\nquite happy with that name to begin with.</p>\n<p>Perhaps one could call this \"select_indices\" or \"nths\" (in analogy to<br>\nList.nth) or something like that?</p>\n<p>Cheers,</p>\n<p>Manuel</p>",
        "id": 294711369,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661182314
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi all,</p>\n<p>I have no strong opinion on that matter, but would suggest the following:</p>\n<ul>\n<li>\n<p>Contiguous sub-sequences: »infix« (following Jasmin)<br>\n    Given that prefix, suffix are already there, the name is<br>\n    unambiguously and does not need yet another terminology.</p>\n</li>\n<li>\n<p>Non-continuous sub-sequences: »selection«<br>\n    Indeed the most difficult candidate to come up with a convincing<br>\n    name.  »sublist« indeed suggests contiguous sub-sequence analogously<br>\n    to »substring«.</p>\n</li>\n<li>\n<p>sublist :: \"'a list ⇒ nat set ⇒ 'a list\"<br>\n    =&gt; nths :: \"'a list ⇒ nat set ⇒ 'a list\"<br>\n    100 % for Manuel.  The »s« suffix is quite established in such cases<br>\n    (cf. maps in Isabelle/ML).</p>\n</li>\n</ul>\n<p>Cheers,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/Cph90KJGlwB7iN3zWUKIE9Bb/signature.asc\">signature.asc</a></p>",
        "id": 294711435,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661182325
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nThank you for your research. I am perfectly happy with \"sublist\" (for the <br>\ncontiguous case) and \"subseq\" (for the general case) and think we should adopt it.</p>\n<p>[Then we would rename sublisteq -&gt; subseq and sublist :: \"'a list ⇒ nat set ⇒ 'a <br>\nlist\" (in List) to something else, eg sublist_index)</p>\n<p>Tobias<br>\n<a href=\"/user_uploads/14278/s8N6Se_2Zm1Q1skfhN-6J_b_/smime.p7s\">smime.p7s</a></p>",
        "id": 294711467,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661182334
    }
]