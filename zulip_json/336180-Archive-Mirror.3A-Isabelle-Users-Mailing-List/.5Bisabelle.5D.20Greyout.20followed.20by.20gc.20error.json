[
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:breitner@kit.edu\">breitner@kit.edu</a>&gt;<br>\nHi,</p>\n<p>I just had a greyout followed, after a while, by this message:</p>\n<p>Welcome to Isabelle/HOLCF-Nominal2 (Isabelle2014: August 2014)<br>\npoly: gc_mark_phase.cpp:439: virtual void MTGCProcessMarkPointers::ScanAddressesInObject(PolyObject<em>, POLYUNSIGNED): Assertion `baseAddr &gt; (PolyWord</em>)obj &amp;&amp; baseAddr &lt; ((PolyWord*)obj)+length' failed.</p>\n<p>Malformed message:<br>\nbad chunk (unexpected EOF after 136 of 618 bytes)<br>\nmessage_output terminated<br>\n/opt/isabelle/Isabelle2014/lib/scripts/run-polyml-5.5.2: Zeile 84:  7181 Abgebrochen             \"$POLY\" -q -i $ML_OPTIONS --eval \"$(perl \"$ISABELLE_HOME/lib/scripts/recode.pl\" \"$MLTEXT\")\" --error-exit &lt; /dev/null</p>\n<p>standard_error terminated<br>\nstandard_output terminated<br>\nprocess terminated<br>\ncommand_input terminated<br>\nprocess_manager terminated<br>\nReturn code: 134</p>\n<p>This happened during a refactoring phase, where I have a number of<br>\n„target“ theories ticked in the theory panel, which obviously puts some<br>\nstrain on the system. I was disabling and enabling the global<br>\n„Continuous checking“ parameter before, which might be related.</p>\n<p>This is a Intel(R) Core(TM) i7-3520M CPU @ 2.90GHz machine with 4 cores,<br>\n8GB or RAM.</p>\n<p>Greetings,<br>\nJoachim<br>\n<a href=\"/user_uploads/14278/-u-yB5GTFlKCXyA-Ne8fHynT/signature.asc\">signature.asc</a></p>",
        "id": 294324541,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660928098
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nFor me it looks like there is some bug in the PolyML garbage collector,<br>\nwhich is likely to be triggered under heavy parallel load. David??</p>\n<p>I get this assertion sometimes (3 times in the last month) if I open a<br>\ntheory that depends on a whole bunch of new theories. </p>\n<p>My machine is</p>\n<p>Intel(R) Core(TM) i7-2720QM CPU @ 2.20GHz with 4 cores (i.e. 8 cores<br>\nwith hyperthreading), with 8GB of RAM</p>",
        "id": 294324576,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660928109
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Wed, 14 Jan 2015, Joachim Breitner wrote:</p>\n<blockquote>\n<p>Welcome to Isabelle/HOLCF-Nominal2 (Isabelle2014: August 2014)<br>\npoly: gc_mark_phase.cpp:439: virtual void MTGCProcessMarkPointers::ScanAddressesInObject(PolyObject<em>, POLYUNSIGNED): Assertion `baseAddr &gt; (PolyWord</em>)obj &amp;&amp; baseAddr &lt; ((PolyWord*)obj)+length' failed.</p>\n<p>Malformed message:<br>\nbad chunk (unexpected EOF after 136 of 618 bytes)<br>\nmessage_output terminated<br>\n/opt/isabelle/Isabelle2014/lib/scripts/run-polyml-5.5.2: Zeile 84:  7181 Abgebrochen             \"$POLY\" -q -i $ML_OPTIONS --eval \"$(perl \"$ISABELLE_HOME/lib/scripts/recode.pl\" \"$MLTEXT\")\" --error-exit &lt; /dev/null</p>\n</blockquote>\n<p>See also this thread (and many clones of it): <br>\n<a href=\"https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2014-December/msg00097.html\">https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2014-December/msg00097.html</a></p>\n<p>David Matthews might eventually find a way around it.</p>\n<p>Apart from that, it should be noted that non-trivial Isabelle applications <br>\nneed non-trivial hardware resources, according to 2015, not 2010 like <br>\nthis:</p>\n<blockquote>\n<p>This is a Intel(R) Core(TM) i7-3520M CPU @ 2.90GHz machine with 4 cores, <br>\n8GB or RAM.</p>\n</blockquote>\n<p>Time is running out for the 32bit address model, and for 64bit life starts <br>\nat 16 GB, or a bit more.  32 GB is cheap for normal workstations today.</p>\n<p>Makarius</p>",
        "id": 294324842,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660928219
    },
    {
        "content": "<p>From: David Matthews &lt;<a href=\"mailto:dm@prolingua.co.uk\">dm@prolingua.co.uk</a>&gt;<br>\nThe garbage collector has got increasingly complex particularly now that <br>\nit has been parallellised.  It relies on various properties of the <br>\nunderlying memory to avoid too much locking.  Bugs in the GC can result <br>\nin the memory getting messed up leading to random errors and segfaults <br>\nat some indeterminate point in the future.  To try and capture errors <br>\nearlier rather than later there are many assertion checks that check for <br>\nconsistency.</p>\n<p>This particular assertion fault seems to happen under heavy load.  I've <br>\nbeen aware of it but I've never been able to reproduce it myself. <br>\nWithout a core dump with the debugging symbols included it's virtually <br>\nimpossible to see what is happening.  The fault itself indicates that a <br>\nvalue is not what it should be but not how it got there.  I was hoping <br>\nthat perhaps there would be an example that would demonstrate the fault <br>\nsufficiently consistently that I would be able to reproduce it.</p>\n<p>The fault, though, is in a piece of code that was added to deal with <br>\nlarge vectors/arrays which were previously very inefficient.  It would <br>\nbe possible to take that out.  I think the best solution is to try and <br>\nmake some effort to try and fix the fault and if that fails to remove <br>\nthe code.</p>\n<p>David</p>",
        "id": 294325006,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660928278
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nHow to make PolyML Isabelle/jEdit produce such a core dump with<br>\ndebugging symbols?</p>",
        "id": 294325072,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660928287
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThere should be nothing specific about Isabelle/jEdit here.</p>\n<p>You just compile Poly/ML \"as usual\", e.g. as explained in the README of <br>\nthe polyml component that is used for Isabelle.  E.g. polyml-5.5.2-1 for <br>\nIsabelle2014.  The build script accepts arguments to ./configure such as <br>\n--enable-debug.</p>\n<p>You can probably compile it in-place of the existing component, and then <br>\nrestart.  If something is messed up, you just take a fresh copy from <br>\n<a href=\"http://isabelle.in.tum.de/components/\">http://isabelle.in.tum.de/components/</a>.</p>\n<p>Makarius</p>",
        "id": 294325089,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660928293
    }
]