[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nHi all,</p>\n<p>HOL defines a typeclass default. What is the purpose of that? The only<br>\ninstantiations are for unit (in Product_Type), and some instantiations<br>\nfor nat splattered around various sessions.</p>\n<p>What I need is a typeclass that gives me an <em>executable</em> default value,<br>\nis the default-typeclass the right one for that?</p>",
        "id": 294243291,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660907888
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Peter,</p>\n<p>yes, it is.  The reason why the HOL theories are spare of instantiations<br>\nis to give the user as much freedom as possible.  The instantiation for<br>\nunit is an exception, for one obvious reason and one less obvious: sort<br>\n{default} being inhabited by one witness instance avoids problems with<br>\npending sort hypotheses etc., particularly in code equations.</p>\n<p>Cheers,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/qeqP4Bo1ZZ5jyiAmO-3AIg3t/signature.asc\">signature.asc</a></p>",
        "id": 294243318,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660907896
    }
]