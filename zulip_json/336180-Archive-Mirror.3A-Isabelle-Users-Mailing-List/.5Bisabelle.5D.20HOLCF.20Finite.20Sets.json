[
    {
        "content": "<p>From: Simon Foster &lt;<a href=\"mailto:simon.foster@york.ac.uk\">simon.foster@york.ac.uk</a>&gt;<br>\nHi,</p>\n<p>I'm trying to devise a HOLCF cpo for finite sets, which I intend to use as<br>\npart of a larger domain type via indirect recursion. One way of doing this<br>\nwould seem to be by creating a cpo of totally ordered slists, e.g.</p>\n<p>cpodef (open) 'a fset = \"{l. ordslist l}\"</p>\n<p>And then build all the standard set stuff on top of this. Ordlist is an<br>\ninductive predicate requiring a strict ordering on the elements. The main<br>\nadvantage of this definition is that it is flat, and therefore easier to<br>\nuse. The big problem with this definition is that it can't easily be used<br>\nrecursively as it depends on the fset's parameter being in linorder, which<br>\nof course it isn't when creating the domain.</p>\n<p>I'm wondering though if I'm missing a trick and if there's a simpler way of<br>\ndoing it than this? Obviously sets in HOL can be be made finite either<br>\nthrough the finite predicate or by using the FSet quotient type, but I<br>\ndon't see an obvious way that either of them can be carried over into a<br>\ndomain, particularly whilst retaining flatness.</p>\n<p>I also saw that instances of countable are made an instance of domain under<br>\nlift. Since finite sets of countables are again countable, could I make use<br>\nof this somehow? Although again this may be difficult because of indirect<br>\nrecursion.</p>\n<p>Alternatively has this already been done, and I just haven't searched<br>\nadequately?</p>\n<p>Many thanks,</p>\n<ul>\n<li>Simon</li>\n</ul>",
        "id": 294227540,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660900741
    },
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:mail@joachim-breitner.de\">mail@joachim-breitner.de</a>&gt;<br>\nHi,</p>\n<p>just checking: What will your order relation be? Because if it is just<br>\ngoing to be subset, then you will not be able to construct a cpo, as the<br>\nlimit of a chain of finite sets can be infinite (unless the type of the<br>\nelements is finite, of course).</p>\n<p>I have a theory of finite maps with the HOLCF setup done<br>\n(<a href=\"http://darcs.nomeata.de/isa-launchbury/FMap-HOLCF.thy\">http://darcs.nomeata.de/isa-launchbury/FMap-HOLCF.thy</a>), but depending<br>\non the order relation that you need, this is not going to help you.</p>\n<p>Greetings,<br>\nJoachim<br>\n<a href=\"/user_uploads/14278/A0EHYqJoB6Z7ug2-aud2rThB/signature.asc\">signature.asc</a></p>",
        "id": 294227576,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660900757
    }
]