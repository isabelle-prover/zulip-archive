[
    {
        "content": "<p>From: Alfio Martini &lt;<a href=\"mailto:alfio.martini@acm.org\">alfio.martini@acm.org</a>&gt;<br>\nDear Isabelle Users,</p>\n<p>Thank you all for helping me with the considerable amount of questions I<br>\nposted in the list<br>\nthroughout this year. After some reluctance<br>\nover the last couple of years I have finally decided to tackle my<br>\nexperiments in Isabelle a  bit more<br>\nseriously.</p>\n<p>Anyway, I finish this e-mail by posting the link from a post by Andrej<br>\nBauer on the role<br>\nof free and bound variables. This topic seems to be the one which was<br>\namongst the<br>\ntopics most discussed in the list during this year.</p>\n<p>\"Free variables are not \"implicitly universally quantified\"!</p>\n<p><a href=\"http://math.andrej.com/2012/12/25/free-variables-are-not-implicitly-universally-quantified/\">http://math.andrej.com/2012/12/25/free-variables-are-not-implicitly-universally-quantified/</a></p>\n<p>All the Best!</p>",
        "id": 294228455,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901173
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nAlfio,</p>\n<p>So last year I went over my allotted quota for talking about free <br>\nvariables and whether they're really implicitly quantified in Isabelle. <br>\nHowever, this is now the year 2013.</p>\n<p>(Here, after writing everything below, it has occurred to me that I <br>\nmight have taken all this way too serious, but as I say below, I have <br>\nsome time on my hands.)</p>\n<p>Really, many arguments just reflect the limitations of natural language, <br>\nthat because communication with natural language tends to be a single <br>\npipelined activity, the complete context influencing one human mind is <br>\nnot transmitted very well to another human mind, and we all know, or <br>\nshould know, that context is everything.</p>\n<p>With \"free variables are not implicitly universally quantified\", I could <br>\ngo on lots of tangents, but I'll limit myself to two, and a conclusion <br>\nor two.</p>\n<p>One is that sometimes, if I'm given a precise, definitive, useful answer <br>\non a subject I've been arguing about, I lose interest in the argument <br>\nbecause I become much more interested in the answer, which sometimes is <br>\nsimply because the answer is so definitive, there's nothing to argue <br>\nabout anymore, and what I could find to argue about is no longer that <br>\ninteresting in light of the new answer.</p>\n<p>(Not having slipped this in anywhere else in the past, I got a <br>\ndefinitive, precise answer on the HOL4 list from Josef Urban by means of <br>\nthis wiki article and his short example of how to use the algorithm <br>\ngiven in the article:</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Extension_by_definitions\">https://en.wikipedia.org/wiki/Extension_by_definitions</a></p>\n<p>Why would I want to have continued to argue about what I was arguing <br>\nabout after I was given an algorithm I could use? Getting the algorithm <br>\nwas a major discovery. That I didn't learn about it from those other <br>\ngroup of people is a bad mark against them. Other senior members on that <br>\nlist also helped me out too, but that wiki article and how to use it <br>\nwill potentially be very important in the future for me.)</p>\n<p>Another tangent is that there is abstract language, language used to <br>\n\"get theoretical\" as they say, and there is language which is <br>\nextraordinarily precise and concrete, such as ML and the machine <br>\nlanguage it is ultimately reduced to.</p>\n<p>So Andrej Bauer is at a major disadvantage in discussing whether free <br>\nvariables are implicitly universally quantified, because in his <br>\ndiscussion, the phrase \"free variables are implicitly universally <br>\nquantified\" is important, even if it is used informally to get to a <br>\nformal end of things.</p>\n<p>With a proof assistant such as Isabelle, the phrase \"free variables are <br>\nimplicitly universally quantified\" is an attempt to describe what the <br>\nsoftware is doing, but ultimately, the meaning of the phrase has no <br>\nbearing on what the software does once the developer hits the compile <br>\nbutton. To describe some things that the Isabelle code does, \"free <br>\nvariables are implicitly universally quantified\" is probably the best <br>\nphrase to use, but if the phrase isn't used, it changes nothing. The <br>\ncode is compiled in stone, until it's compiled again. Decisions have <br>\nbeen made to make concrete what has been theoretical and abstract.</p>\n<p>With my limited knowledge, I take a shot at critiquing Andrej's post.</p>\n<p>I think his reasoning for \"Reason 6\" could be a little faulty, that is, his</p>\n<p>Perhaps we can just forbid free variables altogether and stipulate <br>\nthat all variables must always<br>\n     be quantified. But how are you then going to prove (\\forall x \\in <br>\nR. phi). The usual way</p>\n<p>'Consider any x \\in R. Then bla bla bla, therefore phi.'</p>\n<p>is now forbidden because the first sentence introduces x as a free <br>\nvariable.</p>\n<p>But the statement (\\forall x \\in R) as a standalone statement doesn't <br>\neven make sense, so x couldn't be used as anything other than a free <br>\nvariable and have it make sense, in the traditional context of free and <br>\nbound variables.</p>\n<p>How about if we say, \"All variables must be quantified except for <br>\nvariables in atomic formulas\"? Kind of like how you start out in <br>\nfirst-order logic. If x and y are variables, and if f is an binary <br>\nrelation, then f(x,y) is a formula. It wouldn't make any sense to be <br>\nquantifying the variables in an atomic formula.</p>\n<p>So, possibly, there wouldn't a problem with all variables being <br>\nimplicitly quantified, except for variables in atomic formulas, at least <br>\nto deal with his simple example.</p>\n<p>Okay, here I can ask the question, \"In Isabelle, are all free variables <br>\nimplicitly universally quantified?\".</p>\n<p>To tie back into Andrej's example, in Isabelle, in certain contexts, it <br>\nappears that free variables are implicitly universally quantified, but <br>\nyet in Isabelle, there's an equivalent to Andrej's \"Consider any (x \\in <br>\nR)\", so it appears in Isabelle, there's no conflict between free <br>\nvariables being implicitly universally quantified and having free <br>\nvariables available to say \"Let x be a real number.\"</p>\n<p>But I wouldn't know. I haven't seen that in Isabelle it's been <br>\nestablished that \"all free variables are implicitly universally <br>\nquantified\". Some implications were shown, but exactly what's happening <br>\nat the meta-logic level wasn't shown in detail.</p>\n<p>But I would say that Andrej's discussion is a different discussion than <br>\nany discussion about free variables in Isabelle. Take his \"Consider any <br>\nx \\in R\". What is its exact meaning? It doesn't have an exact meaning.</p>\n<p>On the other hand, Isabelle's equivalent of saying \"Let x be a real <br>\nnumber\" has an exact meaning, along with the rules in which \"free <br>\nvariables get implicitly universally quantified\", under whatever <br>\ncontexts those rules hold. The point is that the game changes when the <br>\nabstract has been made precise and concrete.</p>\n<p>Anyway, I put his blog in my RSS reader, and I'm backing up about 240 <br>\nGbytes of data to 8 Gbyte DVDs, so I have some time on my hands.</p>\n<p>Regards,<br>\nGB</p>",
        "id": 294229631,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901775
    },
    {
        "content": "<p>From: Christian Sternagel &lt;<a href=\"mailto:c-sterna@jaist.ac.jp\">c-sterna@jaist.ac.jp</a>&gt;<br>\nDear Alfio,</p>\n<p>On 01/02/2013 01:54 PM, Gottfried Barrow wrote:</p>\n<blockquote>\n<p>On 12/30/2012 7:50 AM, Alfio Martini wrote:</p>\n<blockquote>\n<p>Anyway, I finish this e-mail by posting the link from a post by Andrej<br>\nBauer on the role<br>\nof free and bound variables. This topic seems to be the one which was<br>\namongst the<br>\ntopics most discussed in the list during this year.</p>\n<p>\"Free variables are not \"implicitly universally quantified\"!</p>\n<p><a href=\"http://math.andrej.com/2012/12/25/free-variables-are-not-implicitly-universally-quantified/\">http://math.andrej.com/2012/12/25/free-variables-are-not-implicitly-universally-quantified/</a></p>\n<p>just a remark: I think what Andrej Bauer is writing about is different <br>\nfrom what is usually discussed on the Isabelle mailing lists. I don't <br>\nthink that anybody ever thought or claimed that Isabelle logically <br>\nequates a formula with its universal closure. The discussions are <br>\nusually about: what is the exact meaning if I write something like</p>\n</blockquote>\n</blockquote>\n<p>lemma \"P x\"</p>\n<p>where \"P\" is some formula with the free variable \"x\". In this context, a <br>\nhelpful answer is that free variables are implicitly universally <br>\nquantified. A more cautious answer would be something like:</p>\n<p>When writing a top-level lemma statement like 'lemma \"P x\"' Isabelle <br>\nbehaves as if the free variable \"x\" was universally quantified at the <br>\nmeta-level for almost all purposes ;)</p>\n<p>dear Gottfried,</p>\n<blockquote>\n<p>(Not having slipped this in anywhere else in the past, I got a<br>\ndefinitive, precise answer on the HOL4 list from Josef Urban by means of<br>\nthis wiki article and his short example of how to use the algorithm<br>\ngiven in the article:</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Extension_by_definitions\">https://en.wikipedia.org/wiki/Extension_by_definitions</a><br>\nAn answer to what question? What algorithm do you mean? And how do you <br>\nrelate this article to the topic of \"free/bound variables\"?</p>\n</blockquote>\n<blockquote>\n<p>That I didn't learn about it from those other<br>\ngroup of people is a bad mark against them.<br>\nWhat is that supposed to mean?</p>\n</blockquote>\n<p>happy new year,</p>\n<p>chris</p>",
        "id": 294229746,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901850
    },
    {
        "content": "<p>From: Alfio Martini &lt;<a href=\"mailto:alfio.martini@acm.org\">alfio.martini@acm.org</a>&gt;</p>\n<blockquote>\n<p>Dear Christian,</p>\n</blockquote>\n<p>just a remark: I think what Andrej Bauer is writing about is different from</p>\n<blockquote>\n<p>what is usually discussed on the Isabelle mailing lists. I don't think that<br>\nanybody ever thought or claimed that Isabelle logically equates a formula<br>\nwith its universal closure</p>\n</blockquote>\n<p>You are right. In the way I put it, the relationship between Andrej´s<br>\narticle and the actual discussion carried in<br>\nthe list sounds (quite?) a bit misleading.</p>\n<p>However, it was a kind of provocative attempt to bring the topic again. The<br>\nanswers were all there, spread through<br>\na number of different posts (and flames). Maybe I secretly wanted to begin<br>\nthis new year with a nice summary<br>\nof that discussion.</p>\n<p>what is the exact meaning if I write something like</p>\n<blockquote>\n<p>lemma \"P x\"<br>\nwhere \"P\" is some formula with the free variable \"x\". In this context, a<br>\nhelpful answer is that free variables are implicitly universally<br>\nquantified. A more cautious answer would be something like:<br>\nWhen writing a top-level lemma statement like 'lemma \"P x\"' Isabelle<br>\nbehaves as if the free variable \"x\" was universally quantified at the<br>\nmeta-level for almost all purposes ;)</p>\n</blockquote>\n<p>One could hardly have done better than that.</p>\n<p>In fact, in my humble opinion, a  more appropriate title for Andrej´s<br>\narticle would be along the lines of</p>\n<p>\"When free variables can be considered as universally quantified?\" or even<br>\n\"On the role of [free, bound and quantified] variables in Computing and<br>\nMathematics\"</p>\n<p>So, it depends on the context, as you rightly put it above. In the same<br>\nway, here in the list, everything we were discussing<br>\nin these several [related] threads was essentially tied to the question</p>\n<p>\"When free variables are treated [interpreted] as universally quantified<br>\n[in Isabelle]?\"</p>\n<p>Now  I can finally move on.</p>\n<p>All the Best!</p>\n<p>On Fri, Jan 4, 2013 at 2:43 AM, Christian Sternagel &lt;c-sterna@jaist.ac.jp&gt;wrote:</p>\n<blockquote>\n<p>Dear Alfio,</p>\n<p>On 01/02/2013 01:54 PM, Gottfried Barrow wrote:</p>\n<blockquote>\n<p>On 12/30/2012 7:50 AM, Alfio Martini wrote:</p>\n<blockquote>\n<p>Anyway, I finish this e-mail by posting the link from a post by Andrej<br>\nBauer on the role<br>\nof free and bound variables. This topic seems to be the one which was<br>\namongst the<br>\ntopics most discussed in the list during this year.</p>\n<p>\"Free variables are not \"implicitly universally quantified\"!</p>\n<p><a href=\"http://math.andrej.com/2012/**12/25/free-variables-are-not-**\">http://math.andrej.com/2012/**12/25/free-variables-are-not-**</a><br>\nimplicitly-universally-**quantified/&lt;<a href=\"http://math.andrej.com/2012/12/25/free-variables-are-not-implicitly-universally-quantified/\">http://math.andrej.com/2012/12/25/free-variables-are-not-implicitly-universally-quantified/</a>&gt;</p>\n<p>just a remark: I think what Andrej Bauer is writing about is different<br>\nfrom what is usually discussed on the Isabelle mailing lists. I don't think<br>\nthat anybody ever thought or claimed that Isabelle logically equates a<br>\nformula with its universal closure. The discussions are usually about: what<br>\nis the exact meaning if I write something like</p>\n</blockquote>\n</blockquote>\n<p>lemma \"P x\"</p>\n<p>where \"P\" is some formula with the free variable \"x\". In this context, a<br>\nhelpful answer is that free variables are implicitly universally<br>\nquantified. A more cautious answer would be something like:</p>\n<p>When writing a top-level lemma statement like 'lemma \"P x\"' Isabelle<br>\nbehaves as if the free variable \"x\" was universally quantified at the<br>\nmeta-level for almost all purposes ;)</p>\n<p>dear Gottfried,</p>\n<p>(Not having slipped this in anywhere else in the past, I got a</p>\n<blockquote>\n<p>definitive, precise answer on the HOL4 list from Josef Urban by means of<br>\nthis wiki article and his short example of how to use the algorithm<br>\ngiven in the article:</p>\n<p><a href=\"https://en.wikipedia.org/wiki/**Extension_by_definitions&lt;https://en.wikipedia.org/wiki/Extension_by_definitions\">https://en.wikipedia.org/wiki/**Extension_by_definitions&lt;https://en.wikipedia.org/wiki/Extension_by_definitions</a>&gt;</p>\n<p>An answer to what question? What algorithm do you mean? And how do you<br>\nrelate this article to the topic of \"free/bound variables\"?</p>\n</blockquote>\n<p>That I didn't learn about it from those other</p>\n<blockquote>\n<p>group of people is a bad mark against them.</p>\n<p>What is that supposed to mean?</p>\n</blockquote>\n<p>happy new year,</p>\n<p>chris</p>\n</blockquote>",
        "id": 294229876,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901917
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nOn 1/3/2013 10:43 PM, Christian Sternagel wrote:</p>\n<blockquote>\n<blockquote>\n<p>(Not having slipped this in anywhere else in the past, I got a<br>\ndefinitive, precise answer on the HOL4 list from Josef Urban by means of<br>\nthis wiki article and his short example of how to use the algorithm<br>\ngiven in the article:</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Extension_by_definitions\">https://en.wikipedia.org/wiki/Extension_by_definitions</a><br>\nAn answer to what question? What algorithm do you mean? And how do you <br>\nrelate this article to the topic of \"free/bound variables\"?<br>\nChristian,</p>\n</blockquote>\n</blockquote>\n<p>If I wouldn't have wrote the last email, that wouldn't have been a bad <br>\nthing.</p>\n<p>Anything I say more can be interpreted overall as me saying, \"Hey, <br>\nthanks all you developers for a great product. It's like the World Wide <br>\nWeb and the Internet, and technology in general. The newness can wear <br>\noff, but I sometimes I still get that feeling again of 'this is awesome'\".</p>\n<p>HOW DO I RELATE IT TO...? (PART 1)</p>\n<p>The article, as part of an answer by Josef, is related to my tangent in <br>\nmy last email. There is \"trying to prove your point logically\", and then <br>\nthere are \"facts\". Facts, once I'm aware of them, can change a whole lot <br>\nof things, motivation being one of them.</p>\n<p>You and Josef gave me facts. Prior to your example showing conclusively <br>\nthat implicit quantification is happening in Isabelle for free <br>\nvariables, Andrej's blog post might have put me in the \"Hmmm, this has <br>\nme worried. I need to think about this a whole lot to understand all of <br>\nthis.\"</p>\n<p>But now, knowing the fact that implicit quantification is happening in <br>\nIsabelle, I say, \"Well, Andrej, you say it's bad for people to say 'a <br>\nfree variable is implicitly universally quantified', but with Isabelle, <br>\nthey don't just say it, they go a step further and, for all practical <br>\npurposes, hardwire that concept in the code, at least for the logic that <br>\nwould apply to the examples in your post, which would be first-order <br>\nlogic. As to there being any problems and limitations with doing that, I <br>\ndon't know what those would be. Others can fight those battles if there <br>\nare battles that need to be fought.\"</p>\n<p>In the last email, I said his discussion is a different discussion, but <br>\nsurely it's still related. In his \"Reason 6\", he's making a big deal <br>\nabout us needing to be able to do a \"Universal Generalization\" proof, <br>\nthat is, by starting out with a arbitrary but fixed element of the real <br>\nnumbers, which, according to him, must be free, as represented by his <br>\n\"Consider any x /in R\".</p>\n<p>(Here, I may sound like I know that I know what I'm talking about, but <br>\nwhat I actually know is that I occasionally make a good point, but, <br>\notherwise, am very wrong much of the time. I also attached a pertinent <br>\nimage from Bloch's \"Proofs and Fundamentals\". I love even basic books <br>\nlike that, but I wish my formal education would have started me out at a <br>\nlower level, so I wouldn't have wasted so much time on discovery.)</p>\n<p>So the facts you and Josef have given me have changed the nature of <br>\ncertain debates.</p>\n<p>That Andrej is making a valid point, I assume he is. That I can learn <br>\nsomething from him, well, I have learned something from his Epilogue, <br>\nwhich basically tells me what Bloch's book tells me, that Universal <br>\nInstantiation is equivalent to Universal Generalization, but by him <br>\nsaying it, it drives home a point that otherwise wouldn't have gotten <br>\ndriven home, especially because of our recent Isabelle \"implicit <br>\nquantification\" discussion.</p>\n<p>But back to facts and their value.</p>\n<p>Adrej is getting dogmatic, which might have made me want to get dogmatic <br>\nwith him, but now I know certain facts, and I say, \"Andrej, your <br>\ndiscussion is ill-defined anyway. The Isabelle proof assistant has exact <br>\nmeaning in every statement we can make, and it could be that Isabelle's <br>\n'Consider any x \\in R' just becomes part of a big conjunction, which <br>\nmeans we aren't truly doing a Universal Generalization proof. If we <br>\ncan't, then we can't. I'm not worried about it. Whatever the case, with <br>\nIsabelle, there's something there rock solid to crtitique and attack if <br>\nthere's a problem.\"</p>\n<p>The last sentence was part of my \"Hey, developers. Is Isabelle a great <br>\nproduct, or what?\" That the complement might come at some other people's <br>\nexpense, that can happen, and I touch on that below.</p>\n<p>HOW DO I RELATE IT TO...? (PART 2)</p>\n<p>Mentioning the wiki article was a way to say something good about the <br>\npeople that contribute to the HOL4 mailing list, rather than to wait for <br>\nsome unlikely future date in which my complement would be completely on <br>\ntopic.</p>\n<p>AN ANSWER TO WHAT QUESTION?</p>\n<p>Here, if I didn't give you this link, that wouldn't be a bad thing, but <br>\nthere is some good information in the thread, in particular, the <br>\nculmination of it all for me in which Josef gives me the Wiki link, and <br>\nenough of an explanation that I was able to figure out the rest on my own.</p>\n<p><a href=\"http://sourceforge.net/mailarchive/forum.php?set=custom&amp;viewmonth=201209&amp;viewday=&amp;forum_name=hol-info&amp;style=ultimate&amp;max_rows=100&amp;submit=Change+View\">http://sourceforge.net/mailarchive/forum.php?set=custom&amp;viewmonth=201209&amp;viewday=&amp;forum_name=hol-info&amp;style=ultimate&amp;max_rows=100&amp;submit=Change+View</a></p>\n<p>The eventual, precise question was, \"Can you give me a first-order <br>\nformula which uses no constants for the formula 'the empty set is in the <br>\nempty set'\".</p>\n<p>The very precise answer was given by Josef here:</p>\n<p><a href=\"http://sourceforge.net/mailarchive/forum.php?thread_name=CAFP4q17T2pEZhzXc5L5t9-kWuOLkVVbxNPEQt-WZGp%3DHG_gCsw%40mail.gmail.com&amp;forum_name=hol-info\">http://sourceforge.net/mailarchive/forum.php?thread_name=CAFP4q17T2pEZhzXc5L5t9-kWuOLkVVbxNPEQt-WZGp%3DHG_gCsw%40mail.gmail.com&amp;forum_name=hol-info</a></p>\n<p>WHAT ALGORITHM DO YOU MEAN?</p>\n<p>The algorithm that Josef demonstrates when he converts \"0 \\in 0\" to a <br>\nFOL formula which only uses variables.</p>\n<blockquote>\n<blockquote>\n<p>That I didn't learn about it from those other<br>\ngroup of people is a bad mark against them.<br>\nWhat is that supposed to mean?</p>\n</blockquote>\n</blockquote>\n<p>And if I didn't explain the meaning of that statement, it wouldn't be a <br>\nbad thing. After all, to bash this other group of people on this mailing <br>\nlist is in bad taste.</p>\n<p>However, this other group of people is the group of people from which I <br>\ngot my formal education and looked to for answers after getting my <br>\ndegree, where my formal education is a B. S. in math. \"Group\" would mean <br>\nmathematicians as a whole. I don't actually have any substantial <br>\ncomplaints about those mathematicians who were my professors.</p>\n<p>My particular comment is related to the fact that in set theory books, <br>\nI've repeatedly read that \"in principle\" we could do all set theory <br>\nusing first-order formulas, but we don't because it's way too <br>\nimpractical to actually do any of that, even just a little.</p>\n<p>I accepted that at face value, until I learned just enough first-order <br>\nlogic to start getting serious about learning axiomatic set theory. At <br>\nthat point, I started to challenge their \"in principle\" statement <br>\nbecause I started to see that first-order logic needs to immediately be <br>\nsupplemented as a language to be used.</p>\n<p>I thought that there had to be symbols in the first-order logic <br>\nspecification to allow us to define constant symbols. Josef showed me I <br>\nwas wrong.</p>\n<p>Why didn't I learn that from that other group of people? At the bedrock <br>\nof ZF sets is the requirement that zero constants are given to us. <br>\nThat's not little. That's huge. The FOL specification allows constants <br>\nto be given in a FOL language, but none are given to us, and <br>\nimmediately, after the first ZF axiom, set theorists start introducing <br>\nconstants. Now, after knowing what I'm looking for, I can see that a few <br>\nmention it, but what's in the Wiki article doesn't appear to be the <br>\ncommon knowledge that it should be.</p>\n<p>I stop here, but I have a certain amount of cynicism about that other <br>\ngroup. I can find ways to thank them later, but what have they done to <br>\nhelp me be independent and get proof review? Nothing.</p>\n<p>Regards,<br>\nGB<br>\n<a href=\"/user_uploads/14278/IJ3tI2KC-mUX4hfJzdhLdBwe/Universal-instantiation-and-generalization.jpg\">Universal instantiation and generalization.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/IJ3tI2KC-mUX4hfJzdhLdBwe/Universal-instantiation-and-generalization.jpg\" title=\"Universal instantiation and generalization.jpg\"><img src=\"/user_uploads/14278/IJ3tI2KC-mUX4hfJzdhLdBwe/Universal-instantiation-and-generalization.jpg\"></a></div>",
        "id": 294230399,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902187
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThis thread is again in danger of getting long, so here are just some <br>\nquick jokes from the Isabelle repertoire:</p>\n<p>* Free variables are \"fixed\" (in a local context).</p>\n<p>This terminology is stemming from Mizar and used in Isar as well, but<br>\n     is actually an oxymoron.  Such variables are not variable at all.</p>\n<p>* Schematic variables are \"arbitrary\" (after having left the context).<br>\n     This is a useful formal device to make the variability of variables<br>\n     formally clear.</p>\n<p>So a properly fixed local variable acts like a local context that becomes <br>\narbitrary after leaving it.  In Isar this reads like this:</p>\n<p>{<br>\n     fix x :: 'a<br>\n     have \"B x\" sorry<br>\n   }<br>\n   note <code>B a</code><br>\n   note <code>B b</code><br>\n   note <code>B c</code></p>\n<p>In fact we can make this arbitrariness stronger within the logical <br>\nframework:</p>\n<p>{<br>\n     fix x :: 'a<br>\n     have \"B x\" sorry<br>\n   }<br>\n   note <code>⋀x. B x</code></p>\n<p>Here it now looks as if the system would insert that postulated implicit <br>\nquantifier, but it is actually not there, and bypassed in the internal <br>\nreasoning.  These are just two ways to specify the same result: inspecting <br>\nthe machine state in the Output window, you will see schematic variables, <br>\nnot quantifiers.</p>\n<p>Next joke: What about a free variable that is not properly \"fixed\"? <br>\nAnswer: it is an illegal immigrant into the logical context, without legal <br>\npapers.  Practically it acts like an unspecified global constant, and can <br>\nusually not be used productively in a proof.</p>\n<p>This is the reason why Isar merely prints undeclared free variables with <br>\ncertain markup, but does not reject them: they are useful in <br>\npseudo-proofs, i.e. proof patterns like above.  The variables B, a, b, c <br>\nare all been illegal immigrants, without anybody getting confused.</p>\n<p>Here is one of the rare proofs where a totally undeclared formal entity <br>\ncan be used in a productively:</p>\n<p>theorem Drinker's_Principle: \"∃x. drunk x ⟶ (∀x. drunk x)\"<br>\nproof cases<br>\n   assume \"∀x. drunk x\"<br>\n   then have \"drunk alien ⟶ (∀x. drunk x)\" ..<br>\n   then show ?thesis ..<br>\nnext<br>\n   assume \"¬ (∀x. drunk x)\"<br>\n   then obtain a where a: \"¬ drunk a\" by blast<br>\n   have \"drunk a ⟶ (∀x. drunk x)\"<br>\n   proof<br>\n     assume \"drunk a\"<br>\n     with a show \"∀x. drunk x\" by contradiction<br>\n   qed<br>\n   then show ?thesis ..<br>\nqed</p>\n<p>The alien does not need formal declaration at the custom's office, but I <br>\nusually prefer to put a 'fix' in the proper spot nonetheless.</p>\n<p>Makarius</p>",
        "id": 294231080,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902529
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI am not yet fully satisfied.</p>\n<p>My preferred example is:</p>\n<p>lemma \"x = x\"</p>\n<p>When you write that in a context with undeclared x and (and its implicitly <br>\ninferred most general type 'a with undeclared 'a), the system will <br>\nimplicitly augment the proof context by fix x :: 'a (and fix type 'a <br>\nbeforehand as well).</p>\n<p>['a::TYPE, x::'a] is the so-called \"Eigen-context\" of the statement. <br>\nThere are two sides of this valuable coin:</p>\n<p>(1) The proof context has its elements are fixed.</p>\n<p>(2) The result (after export from the context) has makes them arbitrary.</p>\n<p>The example above includes the situation for types as well, since it hints <br>\nat the important principle of implicit polymorphism in the manner of <br>\nHindley-Milner.  The type language does not even have quantifiers, so <br>\nthere is no danger of claiming that they are introduced and eliminated <br>\nsomewhere in the belly of the logic -- they are simply not there.</p>\n<p>Nonetheless, there is a slight difference in free term variables and free <br>\ntype variables: terms need to be fixed explicitly if meant to be universal <br>\nin the end, but types are fixed implicitly according to the possibilities <br>\nof the syntactic context.</p>\n<p>Instead, when you write</p>\n<p>lemma \"!!x :: 'a. x = x\"</p>\n<p>you will have to fix the element in the proof before getting to the same <br>\nproof context as before:</p>\n<p>proof -<br>\n     fix x :: 'a<br>\n     ...<br>\n   qed</p>\n<p>This is called \"formal noise\" in Isar terminology.  Here is the well-known<br>\nexplicit way to avoid it:</p>\n<p>lemma<br>\n     fixes x :: 'a<br>\n     shows \"x = x\"<br>\n   proof -<br>\n     ...<br>\n   qed</p>\n<p>So you build up a context with fixed x, then you state \"x = x\", in the end <br>\nyou get arbitrary \"?x::?'a = ?x\".</p>\n<p>Makarius</p>",
        "id": 294231204,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902597
    },
    {
        "content": "<p>From: Christian Sternagel &lt;<a href=\"mailto:c.sternagel@gmail.com\">c.sternagel@gmail.com</a>&gt;<br>\nOn 01/08/2013 01:23 AM, Makarius wrote:</p>\n<blockquote>\n<p>On Fri, 4 Jan 2013, Christian Sternagel wrote:</p>\n<blockquote>\n<p>lemma \"P x\"</p>\n<p>where \"P\" is some formula with the free variable \"x\". In this context,<br>\na helpful answer is that free variables are implicitly universally<br>\nquantified. A more cautious answer would be something like:</p>\n<p>When writing a top-level lemma statement like 'lemma \"P x\"' Isabelle<br>\nbehaves as if the free variable \"x\" was universally quantified at the<br>\nmeta-level for almost all purposes ;)<br>\nSorry for the confusion. What I really meant was that after a successful <br>\nproof</p>\n</blockquote>\n</blockquote>\n<p>lemma \"P x\"</p>\n<p>and</p>\n<p>lemma \"!!x. P x\"</p>\n<p>behave alike (for almost all purposes). I did not even consider what <br>\nhappens inside the corresponding proof. Your explanations are <br>\nenlightening (though, maybe not the uninitiated ;)).</p>\n<p>cheers</p>\n<p>chris</p>\n<blockquote>\n<p>I am not yet fully satisfied.</p>\n<p>My preferred example is:</p>\n<p>lemma \"x = x\"</p>\n<p>When you write that in a context with undeclared x and (and its<br>\nimplicitly inferred most general type 'a with undeclared 'a), the system<br>\nwill implicitly augment the proof context by fix x :: 'a (and fix type<br>\n'a beforehand as well).</p>\n<p>['a::TYPE, x::'a] is the so-called \"Eigen-context\" of the statement.<br>\nThere are two sides of this valuable coin:</p>\n<p>(1) The proof context has its elements are fixed.</p>\n<p>(2) The result (after export from the context) has makes them arbitrary.</p>\n<p>The example above includes the situation for types as well, since it<br>\nhints at the important principle of implicit polymorphism in the manner<br>\nof Hindley-Milner.  The type language does not even have quantifiers, so<br>\nthere is no danger of claiming that they are introduced and eliminated<br>\nsomewhere in the belly of the logic -- they are simply not there.</p>\n<p>Nonetheless, there is a slight difference in free term variables and<br>\nfree type variables: terms need to be fixed explicitly if meant to be<br>\nuniversal in the end, but types are fixed implicitly according to the<br>\npossibilities of the syntactic context.</p>\n<p>Instead, when you write</p>\n<p>lemma \"!!x :: 'a. x = x\"</p>\n<p>you will have to fix the element in the proof before getting to the same<br>\nproof context as before:</p>\n<p>proof -<br>\n     fix x :: 'a<br>\n     ...<br>\n   qed</p>\n<p>This is called \"formal noise\" in Isar terminology.  Here is the well-known<br>\nexplicit way to avoid it:</p>\n<p>lemma<br>\n     fixes x :: 'a<br>\n     shows \"x = x\"<br>\n   proof -<br>\n     ...<br>\n   qed</p>\n<p>So you build up a context with fixed x, then you state \"x = x\", in the<br>\nend you get arbitrary \"?x::?'a = ?x\".</p>\n<p>Makarius<br>\n</p>\n</blockquote>",
        "id": 294231578,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902750
    }
]