[
    {
        "content": "<p>From: John Matthews &lt;<a href=\"mailto:matthews@galois.com\">matthews@galois.com</a>&gt;<br>\nHi Florian,</p>\n<p>Would it be possible to set up List.thy so that it uses more of the  <br>\nHaskell prelude list functions? Here's the mapping I'm thinking of  <br>\n(some of these mappings may already be set up, but I know that at  <br>\nleast (op @) and rev aren't):</p>\n<p>op @        --&gt; (Prelude.++)</p>\n<p>filter          --&gt; Prelude.filter<br>\nconcat      --&gt; Prelude.concat<br>\nfoldl           --&gt; Prelude.foldl<br>\nfoldr       --&gt; Prelude.foldr       (* ...with last two arguments swapped.  <br>\nWhat to do when foldr is curried? *)<br>\nhd          --&gt; Prelude.head<br>\ntl          --&gt; Prelude.tail<br>\nlast            --&gt; Prelude.last<br>\nbutlast     --&gt; Prelude.init<br>\nmap     --&gt; <a href=\"http://Prelude.map\">Prelude.map</a><br>\ntake            --&gt; Prelude.take<br>\ndrop        --&gt; Prelude.drop<br>\ntakeWhile   --&gt; Prelude.takeWhile<br>\ndropWhile   --&gt; Prelude.dropWhile<br>\nrev         --&gt; Prelude.reverse<br>\nzip         --&gt; Prelude.zip<br>\nupt         --&gt;  (\\m n -&gt; [m..(n-1)])<br>\nreplicate       --&gt; Prelude.replicate</p>\n<p>Another alternative would be to have a special \"Haskell_Prelude\"  <br>\ntheory that contains these adaptations.</p>\n<p>Thanks,<br>\n-john<br>\n<a href=\"/user_uploads/14278/ztan3rnpPN2p7MtIN74NvjrV/smime.p7s\">smime.p7s</a></p>",
        "id": 294110044,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660836509
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi John,</p>\n<blockquote>\n<p>Would it be possible to set up List.thy so that it uses more of the<br>\nHaskell prelude list functions?</p>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>Another alternative would be to have a special \"Haskell_Prelude\" theory<br>\nthat contains these adaptations.</p>\n</blockquote>\n</blockquote>\n<p>I see no obstacle for the second option.  The philosophy is that the<br>\ndefault setup does impose as little deviation from the core calculus as<br>\npossible, and the user must import adaptation theories explicitly, e.g.<br>\nfor target language integers.  An exception are setups which lead to a<br>\nconsiderable improvement of readability and interoperability but still<br>\nmaintain an isomorphism (pairs, unit, lists, options; fst, snd).</p>\n<blockquote>\n<p>Here's the mapping I'm thinking of (some<br>\nof these mappings may already be set up, but I know that at least (op @)<br>\nand rev aren't):</p>\n<p>op @        --&gt; (Prelude.++)</p>\n<p>filter            --&gt; Prelude.filter<br>\nconcat        --&gt; Prelude.concat<br>\nfoldl            --&gt; Prelude.foldl<br>\nfoldr        --&gt; Prelude.foldr       (* ...with last two arguments<br>\nswapped. What to do when foldr is curried? *)<br>\nhd            --&gt; Prelude.head<br>\ntl            --&gt; Prelude.tail<br>\nlast            --&gt; Prelude.last<br>\nbutlast        --&gt; Prelude.init<br>\nmap        --&gt; <a href=\"http://Prelude.map\">Prelude.map</a><br>\ntake            --&gt; Prelude.take<br>\ndrop        --&gt; Prelude.drop<br>\ntakeWhile    --&gt; Prelude.takeWhile<br>\ndropWhile    --&gt; Prelude.dropWhile<br>\nrev            --&gt; Prelude.reverse<br>\nzip            --&gt; Prelude.zip<br>\nupt            --&gt;  (\\m n -&gt; [m..(n-1)])<br>\nreplicate        --&gt; Prelude.replicate</p>\n</blockquote>\n<p>If you like to setup such a theory, I can offer to include it into the<br>\ndistribution.  Concerning the foldr and upt issue, you can use Haskell<br>\nlambda terms:</p>\n<p>code_const upt<br>\n  (Haskell \"(\\\\m n -&gt;/ [m..(n-1)])\")</p>\n<p>This target language syntax is a little bit tedious.</p>\n<p>Hope this helps,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/krcc6srd5ZBP-slEJiNVpv_X/signature.asc\">signature.asc</a></p>",
        "id": 294110081,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660836521
    }
]