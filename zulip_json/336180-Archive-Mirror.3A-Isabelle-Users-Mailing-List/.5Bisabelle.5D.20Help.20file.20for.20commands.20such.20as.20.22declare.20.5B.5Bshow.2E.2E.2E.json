[
    {
        "content": "<p>From: <a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a><br>\nWhile experimenting, I saw that Linux Proof General provides certain <br>\nthings that jEdit doesn't. Two being that the external provers work, and <br>\nthat Linux PG can do searches on the Isabelle source code.</p>\n<p>I don't need either of those, but it would be nice to get all the <br>\ninformation features that PG provides through the menus, such as \"show <br>\ntypes\". This is because I would like to exclusively work in Cygwin jEdit.</p>\n<p>Below, I reference a mailing list thread, and I give my input, but I'll <br>\nmake my request first.</p>\n<p>REQUEST: It would be nice to have a help file that gives a short <br>\ndescription of what the commands do that correspond with the many Proof <br>\nGeneral menu commands, such as \"show types\". Additionally, in the help <br>\nfile, it would be nice to have a screenshot which shows me what <br>\nadditional information I'm supposed to be looking for when I perform the <br>\ncommand.</p>\n<p>All that would take time, so I expect that I'll be firing up Proof <br>\nGeneral, looking for menu commands that give me useful information, and <br>\nasking the mailing list what command I use to get that information in <br>\nthe source file.</p>\n<p>Now, some details from a thread:</p>\n<p>Tobias asked, \"How can I see the possible cases in an induction, i.e. <br>\nShow me cases in PG?\"<br>\n<a href=\"http://www.mail-archive.com/isabelle-dev@mailbroy.informatik.tu-muenchen.de/msg02677.html\">http://www.mail-archive.com/isabelle-dev@mailbroy.informatik.tu-muenchen.de/msg02677.html</a></p>\n<p>Consequently, Larry asked for menus in jEdit that provides such things:<br>\n<a href=\"http://www.mail-archive.com/isabelle-dev@mailbroy.informatik.tu-muenchen.de/msg02681.html\">http://www.mail-archive.com/isabelle-dev@mailbroy.informatik.tu-muenchen.de/msg02681.html</a></p>\n<p>Markarius says it's non-trivial to implement diagnostic functions in the <br>\nIsabelle/jEdit engine:<br>\n<a href=\"http://www.mail-archive.com/isabelle-dev@mailbroy.informatik.tu-muenchen.de/msg02683.html\">http://www.mail-archive.com/isabelle-dev@mailbroy.informatik.tu-muenchen.de/msg02683.html</a></p>\n<p>Brian Huffman says <br>\n@@http://www.mail-archive.com/isabelle-dev@mailbroy.informatik.tu-muenchen.de/msg02678.html@@:</p>\n<p>You can type the command \"print_cases\" into your theory file (this<br>\n    also works in PG).</p>\n<p>But then the real question is, how do we expect new users to discover<br>\n    this feature?</p>\n<p>Brian's comment described and describes my situation. I knew I wanted to <br>\nsee types, and that PG would show types, and that \"show_types\" was being <br>\ntalked about in the tutorial, but I didn't know how to get jEdit to show <br>\nme types.</p>\n<p>I eventually figured out how to do it.</p>\n<p>To show types in jEdit, I insert this command:<br>\n       declare [[show_types]], or<br>\n       ML{* Config.put show_types true;*}</p>\n<p>However, I don't know where I found how to do those commands. I've done <br>\na grep on the Isablle distribution folder, and though I find <br>\n\"show_types\" in certain PDFs, I don't find anything that explicitly <br>\ntells me how to use it. This kind of thing is a problem for a newbie: <br>\nI'm on page 3 of the tutorial, I want to see types, I know that Proof <br>\nGeneral's menus can activate showing types, but I don't want to use <br>\nProof General, I want to use jEdit.</p>\n<p>Having a description of all the commands like \"show_types\" would be <br>\nuseful even if the Isabelle/jEdit engine had a menu system like Proof <br>\nGeneral. Inserting a series of commands like \"declare [[show_types]]\" <br>\ninto the source code would be useful when creating templates. It would <br>\nalso be useful to be able to put those commands into a source file <br>\nthat's imported by other source files.</p>\n<p>As to menus that would insert these commands into the source code, <br>\nthat's very simple to create in jEdit. Any folder and macro files I put <br>\nin my USER_HOME \"Isabelle2012\\jedit\\macros\" will show up under the <br>\njEdit/Macros dropdown menu.</p>\n<p>Here's a screenshot of my jedit/macros folder. I've created a macro for <br>\n\"declare [[show_types]]\":</p>\n<p>jEdit allows you to record macros, but all I did was copy a line of <br>\nmacro code from another macro file. Inside \"declare [[show_types]].bsh\" <br>\nis this line of code:</p>\n<p>textArea.setSelectedText(\"declare [[show_types]]\");</p>\n<p>Through jEdit Options/jEdit/Shortcuts, I assigned a shortcut to this <br>\nmacro. I can delete and insert the command to my heart's content. After <br>\nI get past page 3 of the tutorial, and I create a foundational theory <br>\nthat everything else imports, I might put these kind of commands in my <br>\nfoundational theory.</p>\n<p>To summarize, it would be nice to have a list of commands like <br>\n\"show_types\" with a description of what they do, and a screenshot <br>\nshowing the info they provide, if someone has the time to do that.</p>\n<p>--GB</p>",
        "id": 294159254,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660852524
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Wed, 23 May 2012, <a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a> wrote:</p>\n<blockquote>\n<p>While experimenting, I saw that Linux Proof General provides certain <br>\nthings that jEdit doesn't. Two being that the external provers work, and <br>\nthat Linux PG can do searches on the Isabelle source code.</p>\n</blockquote>\n<p>Can you explain what you mean?  What exactly does not work?</p>\n<p>The sledgehammer suite should work smoothly in Isabelle/jEdit of <br>\nIsabelle2012.  It has been tested many times, and there have been many <br>\ncalls to report problems over several weeks.</p>\n<p>Moreover, jEdit is particular good at searching text files, see its <br>\n\"hypersearch\".  Emacs traditionally sucks in that respect.</p>\n<blockquote>\n<p>Having a description of all the commands like \"show_types\" would be <br>\nuseful even if the Isabelle/jEdit engine had a menu system like Proof <br>\nGeneral.</p>\n</blockquote>\n<p>Virtually all Isabelle/Isar language elements are explained in the bulky <br>\nisar-ref manual, see also <br>\n<a href=\"http://isabelle.in.tum.de/dist/Isabelle2012/doc/isar-ref.pdf\">http://isabelle.in.tum.de/dist/Isabelle2012/doc/isar-ref.pdf</a></p>\n<p>It is the most authentic and most up-to-date of Isabelle/Isar manuals.</p>\n<p>You can see what Proof General emits on the <em>isabelle</em> process buffer, and <br>\nthen look up the command in the manual.  This does not really work for the <br>\nstateful things, though.  For \"show_types\" you should read the general <br>\nexplanations about \"configuration options\" in the isar-ref manual, and <br>\nmaybe use 'print_configs' to get an idea what is available.  The isar-ref <br>\nmanual also has a formally generated index with hyperlinks.</p>\n<p>Note that PDF files produced by Latex cannot be searched reliably for <br>\nanything outside A-Za-z0-9.  So \"show types\" might work, but \"show_types\" <br>\nnot.  Complain to Don Knuth and Leslie Lamport about not using proper <br>\nASCII by default.</p>\n<p>Makarius</p>",
        "id": 294159270,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660852530
    },
    {
        "content": "<p>From: <a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a><br>\nOn 5/23/2012 5:58 PM, Makarius wrote:</p>\n<blockquote>\n<p>On Wed, 23 May 2012, <a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a> wrote:</p>\n<blockquote>\n<p>While experimenting, I saw that Linux Proof General provides certain <br>\nthings that jEdit doesn't. Two being that the external provers work, <br>\nand that Linux PG can do searches on the Isabelle source code.</p>\n</blockquote>\n<p>Can you explain what you mean?  What exactly does not work?</p>\n<p>The sledgehammer suite should work smoothly in Isabelle/jEdit of <br>\nIsabelle2012.  It has been tested many times, and there have been many <br>\ncalls to report problems over several weeks.</p>\n</blockquote>\n<p>I was talking about Cygwin Proof General and jEdit for Isabelle2011. In <br>\neither one, the provers either never came back with a message, or they <br>\ncame back with a timed-out message. Occasionally, they would return the <br>\nresults of what they could or couldn't prove. In Linux Proof General, <br>\nthe provers would start to return the results after a few seconds. I <br>\nhaven't tried any external provers in Isabelle2012. I'm interested in <br>\nIsabelle as a theorem assistant.</p>\n<blockquote>\n<p>Moreover, jEdit is particular good at searching text files, see its <br>\n\"hypersearch\".  Emacs traditionally sucks in that respect.</p>\n</blockquote>\n<p>I was talking about Proof General's feature to search the Isabelle logic <br>\ntheories for a keyword in the lemma names, theorem names, definition <br>\nnames, etc.. (Would that be the \"Find Theorem\" menu command?) I haven't <br>\nseen that I can do that in jEdit. I use PowerGREP and a regular <br>\nexpression to search on the complete src/HOL folder. One like this:</p>\n<p>(?x)<br>\n     (class|definition|lemma|lemmas|name|theorem)[\\s]+.*<br>\n     (<br>\n     (?&lt;![a-z])multiply<br>\n     )</p>\n<blockquote>\n<p>Virtually all Isabelle/Isar language elements are explained in the <br>\nbulky isar-ref manual, see also <br>\n<a href=\"http://isabelle.in.tum.de/dist/Isabelle2012/doc/isar-ref.pdf\">http://isabelle.in.tum.de/dist/Isabelle2012/doc/isar-ref.pdf</a><br>\n...<br>\nNote that PDF files produced by Latex cannot be searched reliably for <br>\nanything outside A-Za-z0-9.  So \"show types\" might work, but <br>\n\"show_types\" not.  Complain to Don Knuth and Leslie Lamport about not <br>\nusing proper ASCII by default.</p>\n<p>Makarius</p>\n</blockquote>\n<p>Ah, so \"reliably\" explains everything. In Acrobat, searching on <br>\n\"show_types\" works in this isar-ref.pdf, <br>\n<a href=\"http://isabelle.in.tum.de/doc/isar-ref.pdf\">http://isabelle.in.tum.de/doc/isar-ref.pdf</a>, which was created in <br>\nJanuary, 2011, and which I found now using Google to search on <br>\n\"show_types\" and \"isar-ref.pdf\", but it doesn't work for Acrobat when <br>\nsearching in the latest 2012 isar-ref.pdf.</p>\n<p>LaTeX is too amazing and generous as a product for me to complain to the <br>\nprimary authors. Complaining about that would be like me complaining to <br>\nyou about Isbelle when there's a decent workaround for some deficiency <br>\nit has.</p>\n<p>But in my pursuit for the best proof assistant, I did a little research <br>\non Lamport's TLA+2 <br>\n(<a href=\"http://research.microsoft.com/en-us/um/people/lamport/tla/tla2.html\">http://research.microsoft.com/en-us/um/people/lamport/tla/tla2.html</a>).</p>\n<p>Somewhere in my research, I read that it was using Isabelle as one of <br>\nthe provers, but to do the proving automatically. That's nice, I <br>\nsuppose, if you want automatic proving. For me, at this point, automatic <br>\nproving is not what I want. The great thing about Isabelle is that it <br>\ncan do automatic proving, but it's also a proof assistant.</p>\n<p>Thanks for the info,<br>\nGB</p>",
        "id": 294159285,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660852536
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nYou can use the \"find_theorems\" command for that (which is the same PG <br>\nuses, but jEdit does not provide a menu item for it).</p>\n<p>-- Lars</p>",
        "id": 294159302,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660852542
    },
    {
        "content": "<p>From: <a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a><br>\nThanks, Lars. I didn't find \"find_theorems\" in any of the docs, but I <br>\nfound some examples here:<br>\n<a href=\"http://www.cse.unsw.edu.au/~cs4161/10s2/Demo12.thy\">http://www.cse.unsw.edu.au/~cs4161/10s2/Demo12.thy</a></p>\n<p>I also found \"src/Pure/Tools/find_theorems.ML\". I'm trying to study some <br>\nML, so maybe I'll figure out completely how to use it from that file.</p>\n<p>And there's also a short note in \"Isabelle Primer for Mathematicians\",<br>\n<a href=\"http://dream.inf.ed.ac.uk/projects/isabelle/Isabelle_Primer.pdf\">http://dream.inf.ed.ac.uk/projects/isabelle/Isabelle_Primer.pdf</a></p>\n<p>The command is better than the Proof General menu command anyway.</p>\n<p>Thanks again,<br>\nGB</p>",
        "id": 294159519,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660852610
    },
    {
        "content": "<p>From: <a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a><br>\nBeing in the habit of using the Acrobat search is what messed me up. The <br>\nphrase \"find_theorems\" is listed in the index, but I had searched on <br>\n\"find\", and it didn't show up in the search, so I didn't even think <br>\nabout the index. \"Reliable\" is the key word; searching on \"show types\" <br>\nin Acrobat had found me some \"show_types\".</p>\n<p>Thanks,<br>\nGB</p>",
        "id": 294159586,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660852628
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nMany PDF viewers choke on \"fi\", as generates an fi-ligature instead of <br>\ntwo letters f and i.</p>\n<p>-- Lars</p>",
        "id": 294159702,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660852678
    },
    {
        "content": "<p>From: <a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a><br>\nIn a PDF, I frequently highlight text and do a CNTL-b to create a <br>\nbookmark, so I've seen over and over that \"fi\" in the text gets <br>\nconverted to a symbol similar to what Prince used when he became \"The <br>\nArtist Formerly Known as Prince.\"</p>\n<p>However, it never occurred to me that \"fi\" in a word would cause <br>\nproblems with Acrobat search. Now I know. Thanks, because Acrobat search <br>\nis useful if I know its limitations.</p>\n<p>--GB</p>",
        "id": 294159953,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660852763
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nOn 30.05.2012 18:35, <a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a> wrote:</p>\n<blockquote>\n<p>On 5/29/2012 2:29 AM, Lars Noschinski wrote:</p>\n<blockquote>\n<p>On 26.05.2012 03:58, <a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a> wrote:</p>\n<blockquote>\n<p>Being in the habit of using the Acrobat search is what messed me up. The<br>\nphrase \"find_theorems\" is listed in the index, but I had searched on<br>\n\"find\", and it didn't show up in the search, so I didn't even think<br>\nabout the index.</p>\n</blockquote>\n<p>Many PDF viewers choke on \"fi\", as generates an fi-ligature instead of<br>\ntwo letters f and i.</p>\n</blockquote>\n</blockquote>\n<p>[...] as [LaTeX] generates [...]</p>\n<blockquote>\n<p>However, it never occurred to me that \"fi\" in a word would cause<br>\nproblems with Acrobat search. Now I know. Thanks, because Acrobat search<br>\nis useful if I know its limitations.</p>\n</blockquote>\n<p>[1] suggests that this problem can be solved at document generation <br>\ntime. Maybe this is worth investigating.</p>\n<p>[1] <br>\n<a href=\"http://tex.stackexchange.com/questions/33476/why-cant-fi-be-separated-when-being-copied-from-a-compiled-pdf\">http://tex.stackexchange.com/questions/33476/why-cant-fi-be-separated-when-being-copied-from-a-compiled-pdf</a></p>\n<p>-- Lars</p>",
        "id": 294159976,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660852769
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI didn't know yet that Acrobat Reader could cause such extra problems. <br>\nWhich version is it?</p>\n<p>The tiny Sumatra PDF browser that is now bundled with Isabelle2012 seems <br>\nto be able to find and copy paste \"find theorems\" (without underscore) in <br>\nisar-ref.pdf without problems.  You get that by default when you invoke <br>\n\"isabelle doc isar-ref\" in the Cygwin-Terminal. See also <br>\n<a href=\"http://blog.kowalczyk.info/software/sumatrapdf/free-pdf-reader.html\">http://blog.kowalczyk.info/software/sumatrapdf/free-pdf-reader.html</a></p>\n<p>Just on the day of the Isabelle2012 announcement Sumatra PDF was updated, <br>\nwhich now causes some odd invitation to update when starting up the first <br>\ntime.  The positive aspect is that this project seems to be quite active, <br>\nso that the Windows platform now gets a PDF rendering engine of equal or <br>\nbetter quality than Poppler on Linux.</p>\n<p>Makarius</p>",
        "id": 294160002,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660852775
    },
    {
        "content": "<p>From: <a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a><br>\nI use Adobe Acrobat Pro X, which is the version that lets you edit the <br>\nPDFs. When I do a search on \"find\" in isar-ref.pdf, only \"Find\" on page <br>\n221 is found. I get the same results with Adobe Reader X.</p>\n<p>I did searches with two other PDF readers: STDU Viewer <br>\n&lt;<a href=\"http://www.stdutility.com/stduviewer.html\">http://www.stdutility.com/stduviewer.html</a>&gt;, and PDF-XChange Viewer <br>\n&lt;<a href=\"http://www.tracker-software.com/product/pdf-xchange-viewer\">http://www.tracker-software.com/product/pdf-xchange-viewer</a>&gt;.</p>\n<p>The STDU Viewer search returns the same results as Adobe. The <br>\nPDF-XChange Viewer search finds lots of \"find\", including \"find <br>\ntheorems\" for the command \"find_theorems\".</p>\n<p>On page 30, I selected \"finding\" in the 3 PDF viewers and the 1 PDF <br>\neditor mentioned above. I copied the text into a text file. Here's what <br>\nI get:</p>\n<p>?nding (PDF-XChange)<br>\n?nding (STDU Viewer)</p>\n<p>nding (Adobe Reader X)</p>\n<p>nding (Adobe Acrobat Pro X)</p>\n<p>Which is not what I really got in the text editor. There were two <br>\nnon-\"f\" or non-\"i\" characters preceding \"nding\" for Adobe.</p>\n<p>It appears it's as Lars says about the \"fi\", and PDF-XChange does some <br>\nextra work to find the \"fi\" in a word, and Acrobat doesn't.</p>\n<p>--GB</p>",
        "id": 294160015,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660852782
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI've done investigations occasionally over the years -- it is an old and <br>\nwell-known problem, and still waiting for really good solutions.</p>\n<p>My last attempt was stopped in winter 2011, see <br>\n<a href=\"http://isabelle.in.tum.de/repos/isabelle/annotate/Isabelle2012/doc-src/pdfsetup.sty\">http://isabelle.in.tum.de/repos/isabelle/annotate/Isabelle2012/doc-src/pdfsetup.sty</a> <br>\nwith the critical \\iffalse to disable the \"experimental treatment of <br>\nreplacement text\".</p>\n<p>I had first started with cmap as recommended on the above stackexchange. <br>\nOne of the aspects mentioned in that thread is old OT1 vs. T1.  I had <br>\nother motivations than \"fi\" ligatures to use T1, but it did not work out <br>\nfor two reasons, IIRC: (1) conflict with the rail package for syntax <br>\ndiagrams, (2) lack of scalable cm fonts for T1.</p>\n<p>Point (1) no longer applies, since @{rail} is now an Isabelle <br>\nantiquotation (see the isar-ref manual for its documentation).</p>\n<p>Point (2) -- status unknown.  Maybe some improvements have emerged in the <br>\nmeantime.</p>\n<p>in 2010/2011 I ended up trying something completely different, using <br>\n\"ActualText\" markup for PDF.  It essentially allows to define a plain text <br>\nmodel for the rendered text.  This is a nice idea, but most browsers still <br>\nhave problems with it.  Trying it again just now with the above <br>\npdfsetup.sty and \\ifpdf instead of \\iffalse to activate the markup, it <br>\nproduces the following result for isar-ref.pdf of Isabelle2012: <br>\n<a href=\"http://www4.in.tum.de/~wenzelm/test/isar-ref.pdf\">http://www4.in.tum.de/~wenzelm/test/isar-ref.pdf</a></p>\n<p>Using latest Acrobat Reader 10.1.3 in Windows 7 on the Isar proof on page <br>\n10/11 and copy/pasting into Isabelle/jEdit works <em>almost</em>:</p>\n<p>+ Isabelle symbols fine, but need to be decoded on target<br>\n   + hidden quotes around inner syntax fine, but sometimes odd extra spaces<br>\n   - indentation is lost<br>\n   - page header gets in the way<br>\n   - fi ligatures don't work, e.g. \"finally\"</p>\n<p>Sumatra PDF 2.1 just ignores the ActualText markup, but is able to copy <br>\nthe \"finally\" correctly :-)</p>\n<p>Over all these years there has been a tension of HTML vs. PDF.  I <br>\noriginally preferred proof documents with proper typesetting and <br>\npagination, but this now gets in the way for fully formal online text.</p>\n<p>My hope is that someone who really understands HTML4/CSS2 or HTML5/CSS3 <br>\ncould give some hints how to make high-quality rendering of formal <br>\ndocuments like the Isabelle manuals, or any other Isabelle document<br>\nfrom applications.</p>\n<p>Makarius</p>",
        "id": 294160045,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660852793
    }
]