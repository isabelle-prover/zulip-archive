[
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:igbi@gmx.com\">igbi@gmx.com</a>&gt;<br>\n(At the bottom, I talk about how I have Lueng's extension of SML/NJ <br>\nRegExp all imported, with only errors in two files, in particular <br>\n\"regexp-fn.sml\". What I really want is his functions in <br>\n\"regexp-lib.sml\", such as grep, findall, subst, substAll, replace, <br>\nreplaceAll, and 5 more. )</p>\n<p>Consider me the unofficial marketing guy, like the unofficial mascot, in <br>\nthe stands, for a pro sports team. The management tolerates him, but <br>\nit's inevitable he'll eventually be asked to leave, since he, at times, <br>\ntarnishes the team image, a prestigious one, acquired over many years.</p>\n<p>A professional programmer will have a different perspective about ML <br>\nthan myself. Only doing ML programming for 3 weeks or so, I see that it <br>\nhas its own special attributes. It seems streamlined in some ways, <br>\nthough anything with enough nested levels gets complex.</p>\n<p>Signatures give a high-level overview, and by necessity separate values <br>\nand functions from their details. Looking at signatures helps me find a <br>\nlot of what I need. The syntax is not as streamlined as Haskell, but <br>\nmost syntax isn't, though Isar and Isabelle/HOL are very competitive.</p>\n<p>But in the end, ML is the only language a person can do native <br>\nprogramming inside Isabelle/HOL, though I suspect that will change with <br>\nan official SC{<em>...</em>} command, someday, which will allow Scala to easily <br>\ninteract globally with a ML{<em>...</em>}.</p>\n<p><em>There's Isabelle/ML and Poly/ML Library Support Already</em></p>\n<p>First, it is as Makarius Wenzel said. There is actually already a lot of <br>\nML library support in Isabelle/ML, such as in file.ML, library.ML, <br>\npath.ML, with even the ability to create squiggly lines with the <br>\nmessages in output.ML. Squiggly lines. Graphics. Modern computing. Yea. <br>\nYes. Si, senior. Ja, mate.</p>\n<p>There also are some extra functions in David Mathews Poly/ML Basis, such <br>\nas HashArray, and after searching to make sure its special, Google took <br>\nme to Poly/ML's web page. There is \"polyml-5.5.1-1\\src\\mlsource\", which <br>\ncontains some Windows libraries, so I'll have to check that out.</p>\n<p><a href=\"http://www.polyml.org/docs/Overview.html\">http://www.polyml.org/docs/Overview.html</a></p>\n<p><em>THE ZIP FILE</em></p>\n<p>I attach a zip file, SMLNJ_lib_and_Luengs_RegExp_extension.zip.</p>\n<p>In that file, there is one main file, NJlib.thy. That theory imports 54 <br>\nSML/NJ files without errors, for me. After learning some ML, the files <br>\nonly required a minimal amount of edits, to add fully qualified names <br>\nfor functions, like \"ord\", \"chr\", \"ref\", etc. I tested a few things, but <br>\nnot much.</p>\n<p>There are URLs in the file to the SML/NJ Library page, and I only <br>\nimported what was potentially useful to me, among which are an Awk <br>\nRegExp engine (though lacking in easy functions to use it), iteraters, <br>\nrandom generators (one taken from Larry Paulson's book), hash tables, <br>\natoms, arrays, and a fifo.</p>\n<p>*What I Really Want In the Big Ocean of Life Here on the Terrestrial <br>\nInhabitating Location*</p>\n<p>I couldn't get Lueng's RegExp library working. I document the basic <br>\nproblems in \"ml_lueng/Lueng.thy\". What I really want is his high-level <br>\nfunctions for regex use, not so much his Perl extension.</p>\n<p>These functions are in \"ml_lueng/RegExp/regexp-lib.sml\", which I put in <br>\n\"ml_lueng/Lueng_regexp_lib_sig_and_sml.thy\".</p>\n<p>Lueng extended \"match\", which may not be the problem, but it's related <br>\nto that.</p>\n<p>All of Lueng's code in include, but I only include the RegExp and Util <br>\nfolders from SML/NJ Library.</p>\n<p><a href=\"http://www.smlnj.org/doc/smlnj-lib/Manual/toc.html\">http://www.smlnj.org/doc/smlnj-lib/Manual/toc.html</a><br>\n<a href=\"http://www.cs.nyu.edu/leunga/sml-software.html\">http://www.cs.nyu.edu/leunga/sml-software.html</a></p>\n<p>Regards<br>\nGB<br>\n<a href=\"/user_uploads/14278/rLA2uN1UdPISaFXyuLywy6PY/SMLNJ_lib_and_Luengs_RegExp_extension.zip\">SMLNJ_lib_and_Luengs_RegExp_extension.zip</a></p>",
        "id": 294275898,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660918755
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nI made some progress. There were sharing issues, and SML/NJ seems to have some nonstandard extensions that were causing errors.</p>\n<p>But I’m still stuck on errors in perl-engine.sml and the discrepancy between the Basis type char and the type R.Char.char.</p>\n<p>Debugging ML within PIDE is quite interesting.</p>\n<p>Larry Paulson<br>\n<a href=\"/user_uploads/14278/o8CXOsQbwECh6YaQXCy10g4p/SMLNJ_lib_and_Luengs_RegExp_extension.zip\">SMLNJ_lib_and_Luengs_RegExp_extension.zip</a></p>",
        "id": 294276109,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660918813
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:igbi@gmx.com\">igbi@gmx.com</a>&gt;<br>\nLarry,</p>\n<p>Thanks a lot for the help. That helped me find one of the problems for sure.</p>\n<p>One problem is that the type of StringCvt.cs in Poly/ML is \"datatype cs <br>\n= Index of word\". In SML/NJ it's this: \"type cs = int\".</p>\n<p>I include a file, \"Lueng_regexp_lib_fun.thy\". There's a function <br>\n\"search\", which uses \"StringCvt.scanString : ((char, cs) reader -&gt; ('a, <br>\ncs) reader) -&gt; string -&gt; 'a option\". So that's where the problem is for <br>\nthat file.</p>\n<p>Five of the 11 functions I want now work. There's the statement <br>\n\"StringCvt.scanString (RE.find (compile regexp)) text\", and I need to <br>\nconvert \"int\" to \"word\" at the return value of \"RE.find\".</p>\n<p>I think the problem with \"perl-engine-sig.sml\" has to do with the <br>\ndifferences between the \"Char\" structures of Poly/ML and SML/NJ. \"Char\" <br>\nis in \"String.sml\" for Poly/ML, and \"char.sml\" for SML/NJ. The two <br>\ndifferent Char structures look substantially different, and they involve <br>\n\"StringCvt.reader\", which is related to all this.</p>\n<p>In the zip file, I include the SML/NJ files \"char.sml\" and <br>\n\"string-cvt.sml\", along with the .sig files.</p>\n<p>Thanks again,<br>\nGB<br>\n<a href=\"/user_uploads/14278/IiN6oifunD3FHfICTyxNh6Hh/i140417b__ml_lueng.zip\">i140417b__ml_lueng.zip</a></p>",
        "id": 294276120,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660918817
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nI don’t understand these problems, unless the code somehow breaks the abstraction barriers for the libraries. And that should be impossible.</p>\n<p>Type cs is abstract. Structures like Char and String are specified by their signatures. The implementations should not matter at all.</p>\n<p>It is possible that Isabelle’s own libraries modify some of these things (Char possibly), creating incompatibilities with the SML Basis Library.</p>\n<p>This code is one problem:</p>\n<p>fun getArgs text children = <br>\n   let fun walk (M.Match(SOME{pos,len},children)) = <br>\n           let val s = String.substring(text,pos,len)</p>\n<p>String.substring expects a string and two ints.</p>\n<p>fun search regexp text =<br>\n       StringCvt.scanString (RE.find (compile regexp)) text</p>\n<p>Find seems to include type cs in its result.</p>\n<p>fun grep regexp text = <br>\n       case (search regexp text) of<br>\n         NONE =&gt; NONE<br>\n       | SOME(M.Match(_,children)) =&gt; SOME(getArgs text children)</p>\n<p>Using getArgs and search together tries to identify types int and cs. But I don’t know how this code ever compiled, unless SML/NJ doesn’t implement signature matching correctly.</p>\n<p>Larry Paulson</p>",
        "id": 294276128,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660918821
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:igbi@gmx.com\">igbi@gmx.com</a>&gt;<br>\nLarry,</p>\n<p>I might finally be understanding what you're saying.</p>\n<p>The signature STRING_CVT is the same for both Poly/ML and SML/NJ, which <br>\nis where the signatures of cs, reader, and scanstring are defined.</p>\n<p>All I know is that I can't experiment with loading a modified SML/NJ <br>\nStringCvt because the things it wants to load are at the compiler level.</p>\n<p>I need to look at trying to run regexp-lib.sml under SML/NJ. If I can't <br>\nget it to run under SML/NJ, it might make sense.</p>\n<p>Thanks,<br>\nGB</p>",
        "id": 294276143,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660918827
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nSee also <br>\n<a href=\"http://isabelle.in.tum.de/repos/isabelle/file/Isabelle2013-2/src/Pure/ML-Systems/proper_int.ML\">http://isabelle.in.tum.de/repos/isabelle/file/Isabelle2013-2/src/Pure/ML-Systems/proper_int.ML</a></p>\n<p>SML basis with type int representing proper integers, not machine words.</p>\n<p>Isabelle/ML is not Standard ML, it is what Standard ML could have been if <br>\nthat had not been messed up in the late 1990-ies.</p>\n<p>If you want to continue this regexp comilation experiment seriously, you <br>\nshould probably move over to isabelle-dev and do it as a test for the <br>\nforthcoming SML IDE, which integrates official SML into the Isabelle <br>\nenvironment.</p>\n<p>That might require some further adjustments of these relatively new <br>\nthings, but that is then part of the continuous development process over <br>\nthere.</p>\n<p>Makarius</p>",
        "id": 294276161,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660918833
    }
]