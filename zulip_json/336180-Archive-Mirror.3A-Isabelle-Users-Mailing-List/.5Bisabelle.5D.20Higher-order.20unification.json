[
    {
        "content": "<p>From: John Munroe &lt;<a href=\"mailto:munddr@gmail.com\">munddr@gmail.com</a>&gt;<br>\nHi,</p>\n<p>I have some questions about the higher-order unification algorithm.<br>\nFor the following:</p>\n<p>axiomatization foo :: \"real =&gt; real =&gt; real\"<br>\nML {*<br>\nval ptrm = @{cpat \"(?f :: ?'a =&gt; ?'b) ?s\"} |&gt; term_of;<br>\nval trm = @{term \"foo a\"};<br>\nval mtchs = Unify.matchers @{theory} [(ptrm,trm)] |&gt; Seq.list_of;<br>\n*}</p>\n<p>I don't get a match. But if the type of the pattern was ?'a =&gt; ?'b =&gt;<br>\n?'c, I get a match. It looks like ?'b isn't transformed to become a<br>\nfunction type here. However, if I match using:</p>\n<p>axiomatization foo :: \"real =&gt; real =&gt; real\"<br>\nML {*<br>\nval ptrm = @{cpat \"(?f :: ?'a)\"} |&gt; term_of;<br>\nval trm = @{term \"foo\"};<br>\nval mtchs = Unify.matchers @{theory} [(ptrm,trm)] |&gt; Seq.list_of;<br>\npretty_insts @{context} (map (fn x =&gt; (x,0)) mtchs)<br>\n*}</p>\n<p>I get a match. Now, it seems that ?'a would need to be unified to a<br>\nfunction type in order for it to come up with a match. So when do<br>\nschematic type variables unify to function types and when do they not?</p>\n<p>Thanks</p>\n<p>John</p>",
        "id": 294221533,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660897755
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nIsabelle's higher-order unification algorithm is intentionally incomplete for<br>\nterms with schematic type variables because otherwise it would require another<br>\ndimension of search/backtracking/divergence. The effect is exactly what you<br>\nobserved: instantiations with function types are not always found. But there is<br>\nno simple description of when the incompleteness manifests itself: the algorithm<br>\ndoes what it does. You second example works because you are just unifying a<br>\nvariable with a term - it is hard to get that one wrong.</p>\n<p>Tobias</p>",
        "id": 294221544,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660897762
    }
]