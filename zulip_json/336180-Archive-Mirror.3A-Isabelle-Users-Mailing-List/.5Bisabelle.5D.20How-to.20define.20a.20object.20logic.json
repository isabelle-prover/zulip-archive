[
    {
        "content": "<p>From: Michael Nedzelsky &lt;<a href=\"mailto:MichaelNedzelsky@yandex.ru\">MichaelNedzelsky@yandex.ru</a>&gt;<br>\nHi all.</p>\n<p>I try to define the system S_1^0 of modal logic (according to \"Modal Logics\" <br>\nby Robert Feys) in order to learn the process of adding a new object logic.</p>\n<p>Current version is at:<br>\n<a href=\"http://www.myjavaserver.com/~nedzelsky/isabelle/ModalS1_0.html\">http://www.myjavaserver.com/~nedzelsky/isabelle/ModalS1_0.html</a></p>\n<p>One of the rules of S_1^0 is  EQS (substitution of strict equivalents).<br>\nI feel my attempt to formalize it is not very satisfactory. One thing which <br>\nbother me is that the axioms are written like the following</p>\n<p>ax_sub1: \"PROP is_subst(P,Q,P,Q)\"</p>\n<p>instead of simply</p>\n<p>ax_sub1: \"is_subst(P,Q,P,Q)\"</p>\n<p>Any suggestions and comments are highly welcome.</p>\n<p>Regards,<br>\n  Michael Nedzelsky</p>",
        "id": 294044990,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660816939
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThis is because is_subst yields prop, rather than \"o\" of the object-logic.  <br>\nIsabelle requires explicit syntax to indicate this situation -- by default <br>\nthe system inserts an object-logic judgment.  The PROP syntax allows to <br>\ninput pure propositions, but this markup is absent in output of <br>\napplications involving a constant (which is assumed to provide its own <br>\nsyntax).</p>\n<p>The following declaration introduces a prop predicate with proper concrete <br>\nsyntax:</p>\n<p>consts<br>\n  is_subst :: \"[o,o,o,o] =&gt; prop\"  (\"(1IS'_SUBST/(1'(_,/ _,/ _,/ _')))\")</p>\n<p>axioms<br>\n  ax_sub1: \"IS_SUBST(P,Q,P,Q)\"<br>\n  ax_sub2: \"IS_SUBST(P,Q,R,R)\"</p>\n<p>Makarius</p>",
        "id": 294045013,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660816950
    }
]