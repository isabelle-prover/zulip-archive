[
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nHi,</p>\n<p>I'm trying to make some connections between logic vocabulary and Isar.</p>\n<p>From <a href=\"https://en.wikipedia.org/wiki/Sequent\">https://en.wikipedia.org/wiki/Sequent</a>, I get the sentence</p>\n<p>On the other hand an empty antecedent is assumed to be true, i.e.,<br>\n    |- Sigma means that Sigma follows without any assumptions...</p>\n<p>I'm trying to determine the right connection between sequent assumptions <br>\nand the meta-logic operator \"==&gt;\", and how to restate a proved theorem <br>\nwith Isar, THM, to accurately represent the sequent ( |- THM).</p>\n<p>Say I have a sequent (A, B |- C), then I'm wanting to say that the <br>\nfollowing Isar is a correct translation of that sequent:</p>\n<p>theorem<br>\n   assumes A and B<br>\n   shows C</p>\n<p>For any theorem THM I've proved in Isar, I'm trying to trivially restate <br>\nit as a sequent,  |- THM, but have the restatement have some meaning, <br>\nnot be an exact restatement.</p>\n<p>For example, say I prove this:</p>\n<p>theorem iffIi_1:<br>\n   assumes \"A --&gt; B\" and \"B --&gt; A\"<br>\n   shows \"A =  B\"<br>\n&lt;proof&gt;</p>\n<p>I'd like to restate the theorem using the identifier iffIi_1, but as I <br>\nsaid above, I don't know how, so I restate it like this:</p>\n<p>theorem iffIi_2:<br>\n   \"(A --&gt; B) ==&gt; (B --&gt; A) ==&gt; (A = B)\"<br>\nby(rule iffIi)</p>\n<p>Here, I want to say that this represents the sequent ( |- \"(A --&gt; B) ==&gt; <br>\n(B --&gt; A) ==&gt; (A = B)\" ).</p>\n<p>I've been thinking that the statements of iffIi_1 and iffIi_2 must be <br>\nexactly the same, but now I try the following and it doesn't work:</p>\n<p>theorem<br>\n   assumes \"A --&gt; B\" and \"B --&gt; A\"<br>\n   shows \"A = B\"<br>\nby(rule iffIi)</p>\n<p>I had started thinking  <code>assumes \"A --&gt; B\" and \"B --&gt; A\"</code> was synonymous <br>\nwith \"(A --&gt; B) ==&gt; (B --&gt; A)\".</p>\n<p>Regards,<br>\nGB</p>",
        "id": 294243740,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908078
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nBasically, I'm trying to sync up sequents notation with equivalent Isar <br>\nsyntax being used with Isabelle/HOL. I wouldn't care about sequents, but <br>\nsequents are something that's resorted to a lot in many logic textbooks.</p>\n<p>This is where a textbook would come in handy: \"Sequents as Implemented <br>\nin Isabelle/HOL using Isar Syntax, Along with Many Tedious Examples, <br>\nBoth Trivial and Advanced, and Likewise for Natural Deduction as <br>\nImplemented in Isar, for the Working Unprofessional.\"</p>\n<p>It would say, \"Here's a sequent, and here's its equivalent form using <br>\nIsar in Isabelle/HOL. Here's another sequent, but this sequent is <br>\ndifficult to state in Isar. Here's yet another sequent, and you really <br>\ncan't express this sequent in Isar in Isabelle/HOL.\"</p>\n<p>There's a 3 page section in isar-ref.pdf titled \"The sequent caclulus\", <br>\npage 201, which I guess will help me eventually figure it out.</p>\n<p>It says,</p>\n<p>For certain proofs in classical logic, it can not be called natural.<br>\n    The sequent calculus, a generalization of natural deduction, is<br>\n    easier to automate.</p>\n<p>If Isabelle/HOL is completely formulated as natural deduction, then I <br>\nguess every Isar statement of Isabelle/HOL can be expressed as a sequent.</p>\n<p>But then on page 203, there's a section titled \"Simulating sequents by <br>\nnatural deduction\",  and it says,</p>\n<p>Isabelle can represent sequents directly, as in the object-logic LK.<br>\n    But natural deduction is easier to work with, and most object-logics<br>\n    employ it. Fortunately, we can simulate the sequent P1, ..., Pm |-<br>\n    Q1, ..., Qn by the Isabelle formula P1 ==&gt; ... ==&gt; Pm ==&gt; ~Q2 ==&gt;<br>\n    ... ==&gt; ~Qn ==&gt; Q1 where the order of the assumptions and the choice<br>\n    of Q1 are arbitrary.</p>\n<p>Here, the fact that the word \"simulating\" is being used, and the use of <br>\nthe phrase \"Fortunately, we can simulate the sequent...\", makes me think <br>\nthat I can't simulate certain sequents in Isabelle/HOL using Isar.</p>\n<p>Maybe the discussion on page 202 explaining the sequent analogue to the <br>\n(--&gt;I) will help me figure it out. It gives the rule as</p>\n<p>P, Lambda |- Delta, Q<br>\n--------------------------------- (--&gt;R)<br>\nLambda |- Delta, P --&gt; Q</p>\n<p>For any proved HOL theorem THM, I'm trying to figure out how to restate <br>\nTHM as a sequent which requires no assumptions, and do it using Isar.</p>\n<p>I start with something trivial:</p>\n<p>theorem TrueTrue:<br>\n   \"True\"<br>\nby(rule TrueI)</p>\n<p>There doesn't appear to be any assumptions in TrueTrue, but there must <br>\nbe some assumptions because TrueTrue has to be proved by TrueI, which is <br>\nnot an exact restatement of TrueI, where TrueI resorts to using the <br>\naxiom refl:</p>\n<p>lemma TrueI: \"True\"<br>\n   unfolding True_def by (rule refl)</p>\n<p>If TrueTrue is a theorem, then I say, \"Surely I can express it as a <br>\nsequent. But what is the sequent, and what is it in Isar?\"</p>\n<p>I make an attempt to answer the question, but I use the sequent rule <br>\n(--&gt;R) as a template.</p>\n<p>I'm tempted to say the sequent is \"|- True\", but I say it's \"|- True, <br>\nTrueI\". In Isar I say the sequent is</p>\n<p>theorem TrueTrue_Restate:<br>\n   \"True\"<br>\nby(rule TrueTrue)</p>\n<p>So I decide that TrueTrue_Restate is the sequent \"|- True, TrueTrue\", <br>\nwith there being a subtle difference between \"|- True, TrueTrue\" and \"|- <br>\nTrue, TrueI\", with the difference being that TrueTrue_Restate is <br>\nTrueTrue proving itself, which means it's using no assumptions. Using <br>\ntheorem names, it would be \"|- TrueTrue, TrueI\" versus \"|- TrueTrue, <br>\nTrueTrue_Restate\" == \"|- TrueTrue\".</p>\n<p>But I'm jumping through hoops to try and fit sequent notation with Isar <br>\nsyntax. I'm trying to use \"theorem\" along with \"by\" or \"proof\" to prove <br>\nthat a theorem THM is a sequent of the form \"|- P\", meaning that it <br>\ndoesn't require any assumptions to be true. If I can do that, it's <br>\nimportant. If I can't, it's not important.</p>\n<p>Regards,<br>\nGB</p>",
        "id": 294243760,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908084
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nAnd saying things like that are best only said to one's self. Moving <br>\nsets of assumptions back and forth from the LHS and  RHS of the <br>\nturnstile would indicate a fundamental misunderstanding of basic logic, <br>\nof which the remembering of former textbook quotes can sometimes help <br>\ncorrect. It might be better to modify the notation and say something like:</p>\n<p>Please consider |- &lt;i(conjI),a,a&gt; =&gt; \"[|A;B|] ==&gt; A &amp; B\"...</p>\n<p>But that's the basic idea. Trying to tie into standard notation without <br>\nabusing it any more than necessary. If it's still messed up, I should be <br>\neventually figure out how to make it acceptable.</p>\n<p>Regards,<br>\nGB</p>",
        "id": 294243806,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908108
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nThe right search words are \"sequent style natural deduction\", or <br>\nsomething similar, and throw in an \"isabelle\" to find what's specific to <br>\nIsabelle, or \":</p>\n<p>(Isabelle specific)<br>\n<a href=\"http://www.inf.ed.ac.uk/teaching/courses/ar/slides/index.html\">http://www.inf.ed.ac.uk/teaching/courses/ar/slides/index.html</a></p>\n<p>(Rules of the Game link)<br>\n<a href=\"http://www.cogsys.wiai.uni-bamberg.de/teaching/ss07/hs_rc/\">http://www.cogsys.wiai.uni-bamberg.de/teaching/ss07/hs_rc/</a></p>\n<p>(Natural Deduction in ISABELLE: Single-step proofs based on Sequent <br>\nNotation link)<br>\n<a href=\"http://www.gdi.uni-bamberg.de/personnel/aguado/publications.htm\">http://www.gdi.uni-bamberg.de/personnel/aguado/publications.htm</a></p>\n<p>(Natural Deduction with Gentzen Sequents)<br>\n<a href=\"http://www.ling.ohio-state.edu/~scott/teaching/2012/winter/280/\">http://www.ling.ohio-state.edu/~scott/teaching/2012/winter/280/</a></p>\n<p>(Section 2.2 A sequent calculus for natural deduction)<br>\n<a href=\"http://books.google.com/books/about/Logic_and_Computation.html?id=8cyTbKWDKqgC\">http://books.google.com/books/about/Logic_and_Computation.html?id=8cyTbKWDKqgC</a></p>\n<p>I think HOL4 notation corrupted my mind with things like this: \"|- !f g <br>\nx. (f o g) x = f(g x)\"</p>\n<p>And then from a 1990 Isabelle user's manual it says:</p>\n<p>\"Theorems and axioms can be regarded as rules with no premises, so<br>\n    let us speak just of rules.\"</p>\n<p>So if we can speak of theorems as things without premises, I should be <br>\nable to combine sequent notation with Isar syntax, like writing</p>\n<p>|- \"A ==&gt; B ==&gt; (A &amp; B)\", ConjI</p>\n<p>and get away with it, so I can emphasize the things I want to emphasize, <br>\nwhere because by(intro conjI) is the single proof command needed, then <br>\nConjI must be qualified to representative the premises needed to prove <br>\n\"A ==&gt; B ==&gt; (A &amp; B)\".</p>\n<p>You gotta have those basic logic books to keep you from going astray too <br>\nfar, when you have to answer most of your own questions. I finally found <br>\nwhat must have been vaguely in my mind:</p>\n<p>\"Remark 1.12 Indeed, this example indicates that we may transform<br>\n    any proof of /phi1, phi2, ..., phi_n |- psi/ in such a way into a<br>\n    proof of the theorem<br>\n    |- phi1 --&gt; (phi2 --&gt;...\"</p>\n<p><a href=\"http://www.cs.bham.ac.uk/research/projects/lics/\">http://www.cs.bham.ac.uk/research/projects/lics/</a></p>\n<p>I think I saw someone from the HOL4 group say something like that on <br>\nthis list over a year ago, probably Ramana.</p>\n<p>Regards,<br>\nGB</p>",
        "id": 294244630,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908413
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nIsabelle/Pure has sequents in the manner of Natural Deduction (with single <br>\nconclusion) built-in, but they only serve foundational and implementation <br>\npurposes.</p>\n<p>When you state</p>\n<p>theorem<br>\n     assumes A and B<br>\n     show C</p>\n<p>you are claiming A, B |- C.  The proof may refer to A and B in that <br>\ncontext as local theorems.</p>\n<p>Alternatively, you can play with local contexts and sequents derived <br>\nwithin them more directly (and without global goals getting in the way) <br>\nusing Isar notepad:</p>\n<p>notepad<br>\n   begin<br>\n     {<br>\n       assume A and B<br>\n       have C sorry<br>\n     }<br>\n   end</p>\n<p>The following versions lets you peek at the internal sequent (using <br>\npostfix notation for the \"antecedent\" due to Larry); the slightly nested <br>\nproof fragment ensures that the hypothetical facts actually show up in the <br>\nresult:</p>\n<p>notepad<br>\nbegin<br>\n   note [[show_hyps]]<br>\n   {<br>\n     assume A and B<br>\n     then have C apply - sorry<br>\n     thm this  -- \"C [A, B]\"<br>\n   }<br>\n   note <code>A ⟹ B ⟹ C</code><br>\nend</p>\n<p>After closing the block, the internal sequent is exported into the <br>\nenclosing context, discharging the assumptions and turning them into <br>\nvisible Pure rule structure using ==&gt;.</p>\n<p>Likewise, the initial \"theorem assumes A and B shows C\" gives you the <br>\nexported rule \"A ==&gt; B ==&gt; C\", not its sequent.</p>\n<p>As a user of Isabelle/Pure (and HOL as application within it), you should <br>\nnever encounter the hypotheses of the internal sequents, only the exported <br>\nversions with explicit rule structure.</p>\n<p>Makarius</p>",
        "id": 294245538,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908747
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThat is a slightly different thing: \"Sequent calculus\" is meant here in <br>\nthe classic sense, with multiple conclusions and rules that allow shifting <br>\nbetween assumptions and conclusions in the classic dual fashion.  (Don't <br>\nshow this to constructivists, they will find it unintuitive despite <br>\nWikipedia saying \"other intuitive explanations are possible, which are <br>\nclassically equivalent\".)</p>\n<p>What Larry explains in that chapter is how to use Pure rules (with their <br>\n!! / ==&gt; structure and single conclusion) to represent the idea behind <br>\nclassical sequent calculus naturally.  It all works out rather nicely in <br>\nthe end, leading to proof tools like \"fast\" and \"best\" that where a big <br>\nthing in the early 1990-ies (with minimal implementation effort).  A bit <br>\nlater came \"blast\", with the same rule representation, but different <br>\ninferencing engine.</p>\n<p>Nowadays people tend to appeal to more heavy gear: sledgehammer and metis <br>\nfor reconstruction, but that is quite different technology and unrelated <br>\nto this thread.</p>\n<p>Makarius</p>",
        "id": 294245680,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908814
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nMakarius,</p>\n<p>Thanks for the explanation, and the tips. It sounds complicated, and <br>\nlike we wouldn't want to be writing sequents that reflect accurately <br>\nwhat's happening at the low level.</p>\n<p>I'll be using \"using [[show_hyps]]\" to look at what the assumptions are <br>\nfor a given fact.</p>\n<p>I'm interested in sequents notation as a means to add some concise, <br>\nhigh-level, more-explicit notation to natural deduction notation, one of <br>\nthose notations being Fitch diagrams, but, in general, mixing sequent <br>\nnotation with natural deduction notation as shown by the docs linked to <br>\nmy last email.</p>\n<p>So I start with the sequent conjunction introduction rule on page 38 of <br>\nLarry's \"Logic and Computation\":</p>\n<p>The conjunction introduction rule becomes</p>\n<p>Gamma |- A  Delta |- B<br>\n    -------------------------------<br>\n    Gamma, Delta |- A &amp; B</p>\n<p>The conclusion depends upon every assumption of A and of B.</p>\n<p>I try to stay as true as I can, but staying true becomes relative to the <br>\nIsar syntax available, and the fact that there are multiple ways to <br>\nstate a theorem.</p>\n<p>I define &lt;i(conjI,a,a&gt; to be a list in the manner of Gamma and Delta. <br>\nThe onus is on the interested reader to figure out the details. After <br>\nall, Gamma and Delta aren't exactly loaded with details. It turns that <br>\n&lt;i(conjI,a,a&gt; also conveniently corresponds with the sequence of Isar <br>\ncommands apply(intro conjI), apply(assumption), by(assumption).</p>\n<p>At least to myself, I can now say things like, \"Please consider |- <br>\n\"[|A;B|] ==&gt; A &amp; B\", &lt;i(conjI,a,a&gt;...\"</p>\n<p>Instead of, \"Please consider the theorem \"[|A;B|] ==&gt; A &amp; B\" which is <br>\nproved by the sequence of commands apply(intro conjI), <br>\napply(assumption), by(assumption).</p>\n<p>That's the idea. The implementation will never be perfect, but it could <br>\nbe useful as a part of other things, at least for a while. Backward <br>\nproofs are very concise, so this kind of things looks like it's matching <br>\nup very nicely with short backwards proofs. Forward, structured proofs <br>\naren't that concise, so it wouldn't work for that. But it could work for <br>\nproof steps within a structured proof, and a backward proof also can <br>\ntell a person how to do a forward proof.</p>\n<p>I attached a screen shot and a PDF showing my notation experiments.</p>\n<p>Regards,<br>\nGB<br>\n<a href=\"/user_uploads/14278/UybgWdOLlYJqOM9qPzG5vkCY/130701_sequent_stuff.png\">130701_sequent_stuff.png</a><br>\n<a href=\"/user_uploads/14278/EwqfvBQRH4OzM7ka3Ms9PgBW/130701_sequent_stuff.pdf\">130701_sequent_stuff.pdf</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/UybgWdOLlYJqOM9qPzG5vkCY/130701_sequent_stuff.png\" title=\"130701_sequent_stuff.png\"><img src=\"/user_uploads/14278/UybgWdOLlYJqOM9qPzG5vkCY/130701_sequent_stuff.png\"></a></div>",
        "id": 294245855,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908884
    }
]