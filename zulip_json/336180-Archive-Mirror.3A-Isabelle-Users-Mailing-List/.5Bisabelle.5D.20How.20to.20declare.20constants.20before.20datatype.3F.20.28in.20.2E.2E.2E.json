[
    {
        "content": "<p>From: Georgy Dunaev &lt;<a href=\"mailto:georgedunaev@gmail.com\">georgedunaev@gmail.com</a>&gt;<br>\nThanks for responses a lot! Just a quick question:<br>\nWhat if I try to declare some datatype, not in HOL, but if ZF?</p>\n<p>theory Scratch imports ZF<br>\nbegin<br>\ndatatype simple = X1 | X2 | X3 | X4<br>\nend</p>\n<p>That raises an error \"Datatype set not previously declared as constant:<br>\nsimple\"</p>\n<p>How can I do this in Isabelle? (declare \"simple\" to be a type constant)</p>\n<p>( \"typedecl simple\" doesn't help in this particular problem, and the only<br>\nlink that can be googled is<br>\n<a href=\"https://isabelle.in.tum.de/website-Isabelle2009/dist/library/ZF/datatype_package.ML.html\">https://isabelle.in.tum.de/website-Isabelle2009/dist/library/ZF/datatype_package.ML.html</a><br>\n)</p>\n<p>Yours sincerely,<br>\nGeorgy Dunaev</p>",
        "id": 294825420,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661244179
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nIf you want to use Isabelle/ZF, you should consult this (legacy) manual:</p>\n<p><a href=\"https://www.cl.cam.ac.uk/research/hvg/Isabelle/dist/Isabelle2019/doc/logics-ZF.pdf\">https://www.cl.cam.ac.uk/research/hvg/Isabelle/dist/Isabelle2019/doc/logics-ZF.pdf</a></p>\n<p>For most people, Isabelle/HOL is a better choice with much more automation, in particular.</p>\n<p>Note that in Isabelle/ZF, you do not introduce new types, ever. A “datatype” declaration actually introduces a set. Here is an example, from the manual mentioned above:</p>\n<p>consts list :: \"i=&gt;i\"<br>\ndatatype \"list(A)\" = Nil | Cons (\"a ∈ A\", \"l ∈ list(A)\")</p>\n<p>Larry Paulson</p>",
        "id": 294825430,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661244184
    }
]