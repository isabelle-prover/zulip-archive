[
    {
        "content": "<p>From: Joshua Nwokeji &lt;<a href=\"mailto:J.Nwokeji@mdx.ac.uk\">J.Nwokeji@mdx.ac.uk</a>&gt;<br>\nDear all!</p>\n<p>I am currently learning how to use Z3 SMT solver. I program in Java, unfortunately, Z3 does not interface with Java.<br>\nLuckily , I read about Isabelle but I don't have an idea on how to use it, nor how to invoke Z3 from Isabelle.</p>\n<p>Please I will appreciate any help offered to me in this regard, especially if there is a link I can download detailed and self explanatory tutorial on how to Invoke Z3 from Isabelle.</p>\n<p>Regards</p>\n<p>Joshua  Nwokeji<br>\nSchool of Engineering and Information Sciences (EIS),<br>\nMiddlesex University, London</p>",
        "id": 294161718,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660853378
    },
    {
        "content": "<p>From: Sascha Boehme &lt;<a href=\"mailto:boehmes@in.tum.de\">boehmes@in.tum.de</a>&gt;<br>\nHi Joshua,</p>\n<p>Z3 cannot be invoked directly from Isabelle. It is wrapped into a  <br>\nlayer to ease the interaction for users. You can invoke Z3 from  <br>\nIsabelle interactively for proving theorems, e.g. as follows:</p>\n<p>lemma \"P &amp; Q --&gt; P\" using [[smt_solver=z3]] by smt</p>\n<p>Yet, it is more convenient to use Z3 as a backend prover of  <br>\nSledgehammer (see the Sledgehammer tutorial that is distributed with,  <br>\ne.g., Isabelle-2012).</p>\n<p>There is also an API in ML if you want to programmatically interface  <br>\nwith Z3. You can find it in the Isabelle-2011 distribution in file  <br>\nsrc/HOL/Tools/SMT/smt_solver.ML.</p>\n<p>If that is not what you want to do, you might want to have a look into  <br>\nJNI [1] to build an interface between Z3's C-API and Java.</p>\n<p>Cheers,<br>\nSascha</p>\n<p>[1] <a href=\"http://java.sun.com/docs/books/jni/\">http://java.sun.com/docs/books/jni/</a></p>\n<p>Quoting Joshua Nwokeji &lt;<a href=\"mailto:J.Nwokeji@mdx.ac.uk\">J.Nwokeji@mdx.ac.uk</a>&gt;:</p>",
        "id": 294161744,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660853388
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;</p>\n<blockquote>\n<p>If that is not what you want to do, you might want to have a look into<br>\nJNI [1] to build an interface between Z3's C-API and Java.</p>\n</blockquote>\n<p>... which has already been done: &lt;<a href=\"https://github.com/psuter/ScalaZ3/\">https://github.com/psuter/ScalaZ3/</a>&gt;<br>\n(for Scala, though, which is a JVM language). Here are some examples:<br>\n&lt;<a href=\"http://lara.epfl.ch/w/jniz3-scala-examples\">http://lara.epfl.ch/w/jniz3-scala-examples</a>&gt;.</p>",
        "id": 294161838,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660853407
    },
    {
        "content": "<p>From: Grant Olney Passmore &lt;<a href=\"mailto:grant.passmore@cl.cam.ac.uk\">grant.passmore@cl.cam.ac.uk</a>&gt;<br>\nHi, Joshua --</p>\n<p>If you just want to experiment with Z3 programatically, using Isabelle may be overkill (and I have no idea how Java could fit into the picture).<br>\nI don't know of any Java Z3 interfaces, but Z3 4.0 has a very easy to use new Python interface called Z3Py.</p>\n<p>See the Z3Py tutorial ( <a href=\"http://rise4fun.com/Z3Py/tutorial/guide\">http://rise4fun.com/Z3Py/tutorial/guide</a> ) for more.<br>\nEven not knowing any Python, I think it's pretty easy to build upon the tutorial examples and get started experimenting with Z3.<br>\nNote also that Z3Py can be used on the web without having to install Z3 locally. The Z3Py tutorial shows you how to do this.</p>\n<p>Z3Py exports most of Z3's new LCF-inspired strategy machinery, which can be useful for constructing custom proof procedures.<br>\nSee the Z3 Strategies tutorial ( <a href=\"http://rise4fun.com/Z3Py/tutorial/strategies\">http://rise4fun.com/Z3Py/tutorial/strategies</a> ) and this draft article ( <a href=\"http://research.microsoft.com/en-us/um/people/leonardo/strategy.pdf\">http://research.microsoft.com/en-us/um/people/leonardo/strategy.pdf</a> ) for more.</p>\n<p>Best wishes,<br>\nGrant</p>",
        "id": 294161872,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660853423
    }
]