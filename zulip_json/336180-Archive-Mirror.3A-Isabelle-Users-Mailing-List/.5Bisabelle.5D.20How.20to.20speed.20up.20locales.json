[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@kit.edu\">andreas.lochbihler@kit.edu</a>&gt;<br>\nHi all,</p>\n<p>I have a large system of locales with many sublocale declarations. My <br>\nproblem now is that opening some of the locales via \"context ... begin\" <br>\ntakes one minute or even longer (on a 2.33GHz processor with 4GB of <br>\nmemory). So I wonder how to adjust my theories such that this becomes <br>\nfaster.</p>\n<p>Are there any rules of thumb how to organise a locale hierarchy to make <br>\nit performant?<br>\nWhat are the do's and don'ts for efficient locales?</p>\n<p>Thanks for any hints and ideas,<br>\nAndreas</p>",
        "id": 294107389,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660835669
    },
    {
        "content": "<p>From: Clemens Ballarin &lt;<a href=\"mailto:ballarin@in.tum.de\">ballarin@in.tum.de</a>&gt;<br>\nHi Andreas,</p>\n<p>if this refers to the development version of Isabelle -- this is a  <br>\nknown problem.  Certain performance improvements are currently disabled.</p>\n<p>If you experience these problems with the last release, you probably  <br>\nhave many lemmas with computational attributes like unfolded or  <br>\nsimplified in you locales.  These are show stoppers since they need to  <br>\nbe executed whenever you enter a context.</p>\n<p>Clemens</p>\n<p>Quoting Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@kit.edu\">andreas.lochbihler@kit.edu</a>&gt;:</p>",
        "id": 294107430,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660835685
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@kit.edu\">andreas.lochbihler@kit.edu</a>&gt;<br>\nHi Clemens,</p>\n<p>I am working with the official Isabelle2009-1 release, but there is not <br>\na single [simplified] or [unfolded] attribute in my locales (other than <br>\ninside proofs). In this post in 2008,</p>\n<p><a href=\"https://lists.cam.ac.uk/mailman/htdig/cl-isabelle-users/2008-May/msg00045.html\">https://lists.cam.ac.uk/mailman/htdig/cl-isabelle-users/2008-May/msg00045.html</a></p>\n<p>you suggested not to use computationally expensive attributes like <br>\nunfolded and simplified, so I have already hunted them down. What other <br>\nattributes should I hunt for?</p>\n<p>The other thing is that my sublocale relationships are rather complex. <br>\nHere is a pattern that occurs multiple times in my theories:</p>\n<p>-- Locale A fixes the parameters and B makes the assumptions:</p>\n<p>locale A =<br>\n   fixes f :: ...<br>\n   and r :: ...</p>\n<p>locale B =<br>\n   A +<br>\n   -- \"Rename type variables back to what they were in A\"<br>\n   constrains f :: ...<br>\n   and r :: ...<br>\n   assumes ...</p>\n<p>-- Locale C imports two copies of A and locale D adds the assumptions from B</p>\n<p>locale C =<br>\n   r1!: A f1 r1 +<br>\n   r2!: A f2 r2<br>\n   for f1 :: ...<br>\n   and r1 :: ...<br>\n   and f2 :: ...<br>\n   and r2 :: ...</p>\n<p>locale D =<br>\n   C f1 r1 f2 r2 +<br>\n   r1!: B f1 r1 +<br>\n   r2!: B f2 r2<br>\n   for f1 :: ...<br>\n   and r1 :: ...<br>\n   and f2 :: ...<br>\n   and r2 :: ...</p>\n<p>-- Apart from that, there is an orthogonal locale hierarchy E and F</p>\n<p>locale E =<br>\n   fixes g :: ...<br>\n   and h :: ...</p>\n<p>locale F =<br>\n   E +<br>\n   constrains g :: ...<br>\n   and h :: ...<br>\n   assumes ...</p>\n<p>-- Now, some definitions (a and b) in locale E instantiate the <br>\nparameters of locale A and B:</p>\n<p>definition (in E) a ...<br>\ndefinition (in E) b ...</p>\n<p>sublocale E &lt; s1!: A \"a\" \"b x\" for x .<br>\nsublocale F &lt; s1!: B \"a\" \"b x\" for x ...</p>\n<p>-- At some other place, other definitions (c and d) in E also <br>\ninstantiate the parameters of A and B</p>\n<p>definition (in E) c ...<br>\ndefinition (in E) d ...</p>\n<p>sublocale E &lt; s2!: A \"c\" \"d y\" for y .<br>\nsublocale F &lt; s2!: A \"c\" \"d y\" for y .</p>\n<p>Both of these instantiations are independent of each other in different <br>\ntheories which then proceed to independent developments. However, there <br>\nis another thread of development where both are joined again:</p>\n<p>-- Now, add C and D to E and F resp.<br>\nconsts X :: ... -- \"X is just a global constant\"</p>\n<p>sublocale E &lt; t!: C \"a\" \"b x\" \"c\" \"d (X x)\" for x .<br>\nsublocale F &lt; t!: D \"a\" \"b x\" \"c\" \"d (X x)\" for x ...</p>\n<p>After this, opening the context E or F is especially slow, so I suspect <br>\nthat this diamond pattern might be a bad design choice. Am I right? Are <br>\nthere sublocale relationships that should be avoided? And are there <br>\n\"design patterns\" for good sublocale relationships?</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 294107527,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660835711
    },
    {
        "content": "<p>From: Clemens Ballarin &lt;<a href=\"mailto:ballarin@in.tum.de\">ballarin@in.tum.de</a>&gt;<br>\nHi Andreas,</p>\n<p>Instance is to be understood as a logical term.  Two locale instances  <br>\nare the same if they agree on the parameter instantiation.  (Most of  <br>\nthe time, locales in fact use subsumption.)  Prefixes are ignored.   <br>\nThere is no way of nitpicking locale content other than maintaining a  <br>\nsecond locale manually.</p>\n<p>Clemens</p>\n<p>Quoting Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@kit.edu\">andreas.lochbihler@kit.edu</a>&gt;:</p>",
        "id": 294107678,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660835761
    }
]