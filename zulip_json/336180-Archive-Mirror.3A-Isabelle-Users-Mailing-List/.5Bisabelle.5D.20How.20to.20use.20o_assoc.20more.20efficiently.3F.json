[
    {
        "content": "<p>From: Bart Kastermans &lt;<a href=\"mailto:Bart.Kastermans@Colorado.EDU\">Bart.Kastermans@Colorado.EDU</a>&gt;<br>\nWhat is the right way to do a proof like the one below?  I have a<br>\ncomposition of functions in one order (paren placement), and I<br>\nneed it in another order (paren placement).  The rule for this is  <br>\no_assoc, but<br>\nI couldn't get Isabelle to do larger steps than on application at a  <br>\ntime.</p>\n<p>I think this is probably related to me not knowing which bit of  <br>\nautomation<br>\nto use when (blast, fast, auto, simp, ...).  Any general ideas or  <br>\nreferences<br>\nabout that would also be greatly appreciated.</p>\n<p>Thanks,</p>\n<p>Best,<br>\nBart</p>\n<p>ultimately<br>\n   have \"?left =<br>\n     (inv ni_bij) \\&lt;circ&gt; ((f \\&lt;circ&gt; (ni_bij \\&lt;circ&gt; (inv ni_bij)))  <br>\n\\&lt;circ&gt; g) \\&lt;circ&gt; ni_bij\"<br>\n     by auto;<br>\n   hence \"?left =<br>\n     (inv ni_bij) \\&lt;circ&gt; ((f \\&lt;circ&gt; (ni_bij \\&lt;circ&gt; (inv ni_bij)))  <br>\n\\&lt;circ&gt; g) \\&lt;circ&gt; ni_bij\"<br>\n     using o_assoc[of f \"ni_bij \\&lt;circ&gt; (inv ni_bij)\" g] by auto;<br>\n   hence \"?left =<br>\n     (inv ni_bij) \\&lt;circ&gt; ((f \\&lt;circ&gt; ni_bij) \\&lt;circ&gt; (inv ni_bij)  <br>\n\\&lt;circ&gt; g) \\&lt;circ&gt; ni_bij\"<br>\n     using o_assoc[of f ni_bij \"inv ni_bij\"] by auto;<br>\n   hence \"?left =<br>\n     (inv ni_bij) \\&lt;circ&gt; ((f \\&lt;circ&gt; ni_bij) \\&lt;circ&gt; ((inv ni_bij)  <br>\n\\&lt;circ&gt; g)) \\&lt;circ&gt; ni_bij\"<br>\n     using o_assoc[of \"f \\&lt;circ&gt; ni_bij\" \"inv ni_bij\" g] by auto;<br>\n   hence \"?left =<br>\n     ((inv ni_bij) \\&lt;circ&gt; (f \\&lt;circ&gt; ni_bij)) \\&lt;circ&gt; ((inv ni_bij)  <br>\n\\&lt;circ&gt; g) \\&lt;circ&gt; ni_bij\"<br>\n     using o_assoc[of \"inv ni_bij\" \"f \\&lt;circ&gt; ni_bij\" \"(inv ni_bij)  <br>\n\\&lt;circ&gt; g\"]<br>\n     by auto;<br>\n   hence \"?left =<br>\n     ((inv ni_bij) \\&lt;circ&gt; (f \\&lt;circ&gt; ni_bij)) \\&lt;circ&gt; ((inv ni_bij)  <br>\n\\&lt;circ&gt; g \\&lt;circ&gt; ni_bij)\"<br>\n     using o_assoc[of \"inv ni_bij \\&lt;circ&gt; (f \\&lt;circ&gt; ni_bij)\" \"(inv  <br>\nni_bij) \\&lt;circ&gt; g\"<br>\n       \"ni_bij\"] by auto;<br>\n   hence \"?left =<br>\n     ((inv ni_bij) \\&lt;circ&gt; f \\&lt;circ&gt; ni_bij) \\&lt;circ&gt; ((inv ni_bij)  <br>\n\\&lt;circ&gt; g \\&lt;circ&gt; ni_bij)\"<br>\n     using o_assoc[of \"inv ni_bij\" f ni_bij] by auto;<br>\n   thus \"?left = ?right\" by auto;</p>",
        "id": 294080901,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660830643
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt;<br>\nBart Kastermans wrote:</p>\n<blockquote>\n<p>What is the right way to do a proof like the one below?  I have a<br>\ncomposition of functions in one order (paren placement), and I<br>\nneed it in another order (paren placement).  The rule for this is<br>\no_assoc, but<br>\nI couldn't get Isabelle to do larger steps than on application at a time.</p>\n<p>I think this is probably related to me not knowing which bit of<br>\nautomation<br>\nto use when (blast, fast, auto, simp, ...).  Any general ideas or<br>\nreferences<br>\nabout that would also be greatly appreciated.</p>\n<p>Thanks,</p>\n<p>Best,<br>\nBart</p>\n<p>An apply (simp add: o_assoc) does the job:<br>\n  ultimately have \"?left = ...\" by auto<br>\n  thus \"?left = ?right\" by (auto simp add: o_assoc)<br>\nshould work.</p>\n</blockquote>\n<p>If not, try:<br>\nhave \"?left =<br>\n    (inv ni_bij) \\&lt;circ&gt; ((f \\&lt;circ&gt; (ni_bij \\&lt;circ&gt; (inv ni_bij)))<br>\n\\&lt;circ&gt; g) \\&lt;circ&gt; ni_bij\"<br>\n    by auto;<br>\n  hence \"?left =<br>\n    ((inv ni_bij) \\&lt;circ&gt; f \\&lt;circ&gt; ni_bij) \\&lt;circ&gt; ((inv ni_bij)<br>\n\\&lt;circ&gt; g \\&lt;circ&gt; ni_bij)\"<br>\n    by (simp only: o_assoc)<br>\n  thus \"?left = ?right\" by auto;</p>\n<p>Regards,<br>\n  Peter</p>\n<blockquote>\n<p>ultimately<br>\n  have \"?left =<br>\n    (inv ni_bij) \\&lt;circ&gt; ((f \\&lt;circ&gt; (ni_bij \\&lt;circ&gt; (inv ni_bij)))<br>\n\\&lt;circ&gt; g) \\&lt;circ&gt; ni_bij\"<br>\n    by auto;<br>\n  hence \"?left =<br>\n    (inv ni_bij) \\&lt;circ&gt; ((f \\&lt;circ&gt; (ni_bij \\&lt;circ&gt; (inv ni_bij)))<br>\n\\&lt;circ&gt; g) \\&lt;circ&gt; ni_bij\"<br>\n    using o_assoc[of f \"ni_bij \\&lt;circ&gt; (inv ni_bij)\" g] by auto;<br>\n  hence \"?left =<br>\n    (inv ni_bij) \\&lt;circ&gt; ((f \\&lt;circ&gt; ni_bij) \\&lt;circ&gt; (inv ni_bij)<br>\n\\&lt;circ&gt; g) \\&lt;circ&gt; ni_bij\"<br>\n    using o_assoc[of f ni_bij \"inv ni_bij\"] by auto;<br>\n  hence \"?left =<br>\n    (inv ni_bij) \\&lt;circ&gt; ((f \\&lt;circ&gt; ni_bij) \\&lt;circ&gt; ((inv ni_bij)<br>\n\\&lt;circ&gt; g)) \\&lt;circ&gt; ni_bij\"<br>\n    using o_assoc[of \"f \\&lt;circ&gt; ni_bij\" \"inv ni_bij\" g] by auto;<br>\n  hence \"?left =<br>\n    ((inv ni_bij) \\&lt;circ&gt; (f \\&lt;circ&gt; ni_bij)) \\&lt;circ&gt; ((inv ni_bij)<br>\n\\&lt;circ&gt; g) \\&lt;circ&gt; ni_bij\"<br>\n    using o_assoc[of \"inv ni_bij\" \"f \\&lt;circ&gt; ni_bij\" \"(inv ni_bij)<br>\n\\&lt;circ&gt; g\"]<br>\n    by auto;<br>\n  hence \"?left =<br>\n    ((inv ni_bij) \\&lt;circ&gt; (f \\&lt;circ&gt; ni_bij)) \\&lt;circ&gt; ((inv ni_bij)<br>\n\\&lt;circ&gt; g \\&lt;circ&gt; ni_bij)\"<br>\n    using o_assoc[of \"inv ni_bij \\&lt;circ&gt; (f \\&lt;circ&gt; ni_bij)\" \"(inv<br>\nni_bij) \\&lt;circ&gt; g\"<br>\n      \"ni_bij\"] by auto;<br>\n  hence \"?left =<br>\n    ((inv ni_bij) \\&lt;circ&gt; f \\&lt;circ&gt; ni_bij) \\&lt;circ&gt; ((inv ni_bij)<br>\n\\&lt;circ&gt; g \\&lt;circ&gt; ni_bij)\"<br>\n    using o_assoc[of \"inv ni_bij\" f ni_bij] by auto;<br>\n  thus \"?left = ?right\" by auto;</p>\n</blockquote>",
        "id": 294080911,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660830646
    }
]