[
    {
        "content": "<p>From: Mathieu Giorgino &lt;<a href=\"mailto:mathieu.giorgino@gmail.com\">mathieu.giorgino@gmail.com</a>&gt;<br>\nOk, Great !</p>\n<p>I didn't know bundles, can we define and use them for anything ? For<br>\nexample can we make a bundle containing specific intro, elim and<br>\nsimplifications rules ? Looks like a convenient feature.</p>\n<p>Thanks a lot,</p>\n<p>-- Mathieu</p>",
        "id": 294276870,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660919073
    },
    {
        "content": "<p>From: Mathieu Giorgino &lt;<a href=\"mailto:mathieu.giorgino@gmail.com\">mathieu.giorgino@gmail.com</a>&gt;<br>\nOk, I have now seen that \"includ*\" are given in isar-ref, both in the<br>\nsection 5.3 (Bundled declarations) and 12.3 (Lifting package).</p>\n<p>This looks really useful, thanks to the Isabelle/devs !</p>\n<p>-- Mathieu</p>",
        "id": 294276884,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660919078
    },
    {
        "content": "<p>From: Mathieu Giorgino &lt;<a href=\"mailto:mathieu.giorgino@gmail.com\">mathieu.giorgino@gmail.com</a>&gt;<br>\nHi all,</p>\n<p>I am using the library \"Library/FSet\" and I wanted to add this missing<br>\nlemma:</p>\n<p>lemma fcard_fimage:\"inj_on f (fset xs) ⟹ fcard (f |`| xs) = fcard xs\"<br>\n  by transfer (auto intro:card_image)</p>\n<p>I still haven't digged in the details of Transfer and Lifting and don't<br>\nknow exactly how they work, and I have simply mimicked what was already<br>\ndone in FSet.</p>\n<p>This lemma can easily be proved by using Transfer (as given above) as long<br>\nas it is before the call \"lifting_forget fset.lifting\", ie once Lifting and<br>\nTransfer have been un-setup for fset, which is totally expected. However, I<br>\nhaven't been able to restore the lifting bundle for FSet afterwards either<br>\nusing lifting_setup or lifting_update and I am then forced to either remove<br>\nlifting_forget from FSet or add this lemma before it.</p>\n<p>Is there a mean to restore the bundle, and if it is the case, how ?</p>\n<p>Thanks,</p>\n<p>-- Mathieu</p>",
        "id": 294278879,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660919679
    },
    {
        "content": "<p>From: Ondřej Kunčar &lt;<a href=\"mailto:kuncar@in.tum.de\">kuncar@in.tum.de</a>&gt;<br>\nHi Mathieu.<br>\nBundles can be imported by three different means:<br>\n1)<br>\ncontext<br>\nincludes fset.lifting<br>\nbegin<br>\n...<br>\nend<br>\n2)<br>\nlemma \"...\"<br>\nproof -<br>\n   include fset.lifting<br>\n...<br>\nqed<br>\n3)<br>\nlemma \"...\"<br>\napply ...<br>\nincluding fset.lifting<br>\napply ...<br>\ndone</p>\n<p>Your lemma can be proved for example like this:<br>\nlemma fcard_fimage:\"inj_on f (fset xs) ⟹ fcard (f |`| xs) = fcard xs\"<br>\nincluding fset.lifting by transfer (auto intro:card_image)</p>\n<p>Best,<br>\nOndrej</p>",
        "id": 294278897,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660919686
    }
]