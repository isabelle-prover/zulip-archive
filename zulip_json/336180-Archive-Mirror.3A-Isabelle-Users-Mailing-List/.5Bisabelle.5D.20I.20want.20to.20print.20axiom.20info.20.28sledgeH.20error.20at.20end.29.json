[
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nHere's a template I created to look at how Isabelle decides to type and <br>\nparenthesize a formula in axiomatizations and definitions:</p>\n<p>theorem show_info:<br>\n  \"(True) =<br>\n   (True)\"<br>\n   by(auto)<br>\n   thm show_info</p>\n<p>Replace True with your formula. If you haven't imported \"auto\", then <br>\nreplace \"by(auto)\" and \"thm\" with \"oops\". You might want these more <br>\nuseful info commands above your working code to create different levels <br>\nof information overload:</p>\n<p>--\"INFO <br>\nBEGIN==================================================================\"<br>\n   --{<em>notation Trueprop(\"Tr\")    notation \"prop\"(\"Pr\")</em>}<br>\n   declare[[show_brackets=true]]  declare[[show_sorts=false]]<br>\n   declare[[names_long=false]]    declare[[show_types=true]]<br>\n   declare[[names_unique=true]]   declare[[show_consts=true]]<br>\n--\"INFO <br>\nEND--------------------------------------------------------------------\"</p>\n<p>Giving advice is free, so I just go ahead attach iI.thy to this email. I <br>\nimport it into my theories. It contains my default settings for the full <br>\nset of \"declare\" commands. Commented out are print and find commands, so <br>\nI don't have to look at isar-ref.pdf to remember what they are. There <br>\nare the jEdit command line options that control some printing modes.</p>\n<p>There are also my default sledgehammer settings. I do this, and I get <br>\nall the provers:</p>\n<p>sledgehammer supported_provers</p>\n<p>I went back and briefly experimented with all the remote provers. I <br>\neventually settled on these options:</p>\n<p>sledgehammer_params [provers = \"<br>\n   e cvc3 metis smt spass z3 z3_tptp remote_e_sine remote_vampire<br>\n\", slice=true, verbose=true, isar_proof=true, timeout=120]</p>\n<p>The 120 second timeout solved the problem of not finding structured <br>\nproofs that I mentioned in another email.</p>\n<p>Also, provers I wasn't using at the time of that email were \"smt\" and <br>\n\"remote_e_sine\". \"smt\" finds proofs just like \"metis\".</p>\n<p>Following the instructions in the sledgehammer manual, I've used <br>\n\"apply(auto)\" prior to using sledgehammer. When I do that, proofs will <br>\nbe found to finish the simplified goal by \"smt\" and \"metis\", along with <br>\na structured proof to only finish the simplified goal.</p>\n<p>\"remote_e_sine\" finds a short, structured proof that uses only the <br>\nnecessary axioms. If I have the theorem after unnecessary axioms, <br>\nanother structured proof is found which uses an unnecessary axiom, but <br>\neven after the unnecessary axioms, \"remote_e_sine\" finds the proof using <br>\nonly the two necessary axioms.</p>\n<p>I also figured out the simple fact (maybe from reading the sledgehammer <br>\nmanual) that I can click on any of the highlighted text in the output <br>\nwindow, and it'll replace \"sledgehammer\" with that proof.</p>\n<p>If I choose a \"smt\" or \"metis\" proof that's offered, it does indeed <br>\nfinish the proof. If I choose a structured proof, it complains about an <br>\nunbound schematic variable, as shown in the attached screen shot.</p>\n<p>Regards,<br>\nGB<br>\n<a href=\"/user_uploads/14278/dVKhqxzMwINN6_pxLKpGBI9B/unbound_sch_var_error.png\">unbound_sch_var_error.png</a><br>\n<a href=\"/user_uploads/14278/S0O0qKJd68IJnefU86Hsoq9l/iI.thy\">iI.thy</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/dVKhqxzMwINN6_pxLKpGBI9B/unbound_sch_var_error.png\" title=\"unbound_sch_var_error.png\"><img src=\"/user_uploads/14278/dVKhqxzMwINN6_pxLKpGBI9B/unbound_sch_var_error.png\"></a></div>",
        "id": 294165419,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854588
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nWhen you are using jEdit, then I suggest using Ctrl+Hover to get the <br>\nfull names and types of constants, without making the term hardly <br>\nreadable due to all the annotations.</p>",
        "id": 294165434,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854597
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@gmail.com\">jasmin.blanchette@gmail.com</a>&gt;<br>\nHi Gottfried,</p>\n<p>Isar proofs are experimental, as mentioned in the Sledgehammer manual. We have a student currently working on improving them, and he will look into these kinds of issues. Hopefully the next Isabelle release will feature a revamped Isar proof output in Sledgehammer.</p>\n<p>Other aspects of Sledgehammer should be more polished. If you run into any bugs with it, please send me an email so I can look into this. (I might otherwise miss bug reports when they hide in lengthy emails on public mailing lists.)</p>\n<p>Regards,</p>\n<p>Jasmin</p>",
        "id": 294165539,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854628
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nOkay. If I don't know how to use introduction and elimination rules to <br>\nreplace metis steps, after the initial cheap thrill of a structured <br>\nproof, it's all kind of the same (though not really, if I'm looking for <br>\nsome hints), and  a single-line metis proof takes up less space anyway.</p>\n<p>I should get lots of preliminary cheap thrills from using nitpick and <br>\nsledgehammer, while being able to delay the point at which I have to <br>\nstart thinking, where I get an occasional (or frequent), unexpected <br>\nresult that enlightens me.</p>\n<p>Regards,<br>\nGB</p>",
        "id": 294165559,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854640
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nAlright, it's like Perl, where there's more than one way to do <br>\nsomething, except the Ctrl+Hover way also labels each of the component <br>\npart with additional information, such as axiom, theory fact, local <br>\nfact, bound variable, free variable, etc.</p>\n<p>Thanks,<br>\nGB</p>",
        "id": 294165573,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854646
    }
]