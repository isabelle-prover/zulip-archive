[
    {
        "content": "<p>From: Wenda Li &lt;<a href=\"mailto:wl302@cam.ac.uk\">wl302@cam.ac.uk</a>&gt;<br>\nDear Isabelle users,</p>\n<p>In the from-have paradigm, we can implicitly refer to the previous proved fact(s) using the “this” keyword. I was wondering if we can similarly refer to collected results implicitly in the moreover-ultimately paradigm? If not, would that be a good feature for future Isabelle?</p>\n<p>Here is a minimal example:</p>\n<p>notepad <br>\nbegin<br>\n  fix A B D::bool<br>\n  assume foo:\"A ⟹ B ⟹ D\" </p>\n<p>have \"A\" \"B\" sorry<br>\n  from foo[OF this(1) this(2)] (*here, we can implicitly refer to the previous facts <br>\n                                    using the \"this\" keyword*)<br>\n  have \"D\" .</p>\n<p>have \"A\" sorry<br>\n  moreover have \"B\" sorry<br>\n  ultimately have \"D\"<br>\n    using foo[OF (*I wish to implicitly refer to A and B here, <br>\n                    like using the \"this\" keyword previously*)]</p>\n<p>Many thanks,<br>\nWenda</p>",
        "id": 294729426,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661187486
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nHi Wenda,</p>\n<p>there is \"calculation\", but it seems to be removed by ultimately ...</p>\n<p>notepad <br>\nbegin<br>\n  fix A B D::bool<br>\n  assume foo:\"A ⟹ B ⟹ D\" </p>\n<p>have \"A\" \"B\" sorry<br>\n  from foo[OF this(1) this(2)] (*here, we can implicitly refer to the<br>\nprevious facts <br>\n                                    using the \"this\" keyword*)<br>\n  have \"D\" .</p>\n<p>have \"A\" sorry<br>\n  moreover have \"B\" sorry<br>\n  moreover have \"D\" using foo[OF calculation] .<br>\n<br>\n^^ not very nice though to end a proof with moreover ...</p>",
        "id": 294729450,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661187492
    },
    {
        "content": "<p>From: Wenda Li &lt;<a href=\"mailto:wl302@cam.ac.uk\">wl302@cam.ac.uk</a>&gt;<br>\nDear Peter,</p>\n<blockquote>\n<p>have \"A\" sorry<br>\n  moreover have \"B\" sorry<br>\n  moreover have \"D\" using foo[OF calculation] .</p>\n</blockquote>\n<p>Thanks for your quick reply. This is indeed one solution, despite of the slightly misleading syntax :-)</p>\n<blockquote>\n<blockquote>\n<p>fix A B D::bool<br>\n  assume foo:\"A ⟹ B ⟹ D\" </p>\n<p>have \"A\" sorry<br>\n  moreover have \"B\" sorry<br>\n  ultimately have \"D\"<br>\n    using foo</p>\n</blockquote>\n</blockquote>\n<p>My main motivation for this is that when “A” and “B” are complex, we may want to perform some manual forward reasoning in the “ultimately” step, rather than solely relying on automatic tactics. Explicit naming “A” and “B” will do the job, but it seems a little unnatural and unnecessary. </p>\n<p>Best,<br>\nWenda</p>\n<blockquote>\n<p>On 19 Mar 2018, at 14:43, Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt; wrote:</p>\n<p>Hi Wenda,</p>\n<p>there is \"calculation\", but it seems to be removed by ultimately ...</p>\n<p>notepad <br>\nbegin<br>\n  fix A B D::bool<br>\n  assume foo:\"A ⟹ B ⟹ D\" </p>\n<p>have \"A\" \"B\" sorry<br>\n  from foo[OF this(1) this(2)] (*here, we can implicitly refer to the<br>\nprevious facts <br>\n                                    using the \"this\" keyword*)<br>\n  have \"D\" .</p>\n<p>have \"A\" sorry<br>\n  moreover have \"B\" sorry<br>\n  moreover have \"D\" using foo[OF calculation] .</p>\n<p>^^ not very nice though to end a proof with moreover ...</p>\n<p>--<br>\n  Peter</p>\n<p>On Mo, 2018-03-19 at 14:08 +0000, Wenda Li wrote:</p>\n<blockquote>\n<p>notepad <br>\nbegin<br>\n  fix A B D::bool<br>\n  assume foo:\"A ⟹ B ⟹ D\" </p>\n<p>have \"A\" \"B\" sorry<br>\n  from foo[OF this(1) this(2)] (*here, we can implicitly refer to the<br>\nprevious facts <br>\n                                    using the \"this\" keyword*)<br>\n  have \"D\" .</p>\n<p>have \"A\" sorry<br>\n  moreover have \"B\" sorry<br>\n  ultimately have \"D\"<br>\n    using foo[OF (*I wish to implicitly refer to A and B here, <br>\n                    like using the \"this\" keyword previously*)]</p>\n</blockquote>\n</blockquote>",
        "id": 294729488,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661187504
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nNaming facts that are referenced later in a non-local / non-linear<br>\nmanner is the normal way in the Isar proof language. In practice about<br>\n5-10% of facts mightr require explicit names.</p>\n<p>I don't see anything unnatural or unnecessary about it. On the contrary<br>\ntoo much implicit fact management can make Isar proofs hard to read and<br>\nhard to maintain, also hard to explain to casual readers who are not<br>\nfamiliar with the language.</p>\n<p>Makarius</p>",
        "id": 294729858,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661187622
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nIn my opinion, it is indeed a bit strange that the moreover-ultimately<br>\nconstruction chains the implicit facts (so they are available for your<br>\nlast proof) but you cannot name them.</p>\n<p>ultimately have \"D\" by (blast intro: foo)</p>\n<p>which the more experienced Isabelle user might be tempted to write is<br>\nnot exactly clearer than</p>\n<p>using foo[OF ...] .</p>\n<p>So we have a construct that provides some nice implicit fact management<br>\nfor the complicated cases, but not for the simpler cases, where a<br>\nsimple forward proof does work.</p>",
        "id": 294729873,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661187627
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nWe are talking about the final step of a calculational proof here, i.e.<br>\n'finally' or 'ultimately'. The proof following that can be more than<br>\njust 'by', but there is no systematic way to refer to the chained facts<br>\nin a complex proof here.</p>\n<p>This is not a problem of the calculation, but of what can be done with<br>\n\"proof method ... qed method\". I've once had something like this in the<br>\npipeline:</p>\n<p>&lt;chained facts&gt;<br>\n  &lt;goal&gt;<br>\n  proof -<br>\n    case facts<br>\n    then show ?thesis sorry<br>\n  qed</p>\n<p>I.e. the proof method \"-\" provides a case that \"notes\" the chained facts<br>\nfor later use in the subproof. It did not emerge so far, because \"notes\"<br>\ncannot be part of proof method cases -- just by accident: it was not<br>\nrequired so far, and these things have some complexities internally.</p>\n<p>Moreover, prospective applications for that have been too rare so far.<br>\nAs a rule of thumb there need to be 2-3 good reasons to add more<br>\nfeatures (read: complexity), not just half a reason. Alternatively, it<br>\nis possible to \"trade\" features: removing historic things that are not<br>\nreally needed, and using the freed conceptual space to add new things.</p>\n<p>Makarius</p>",
        "id": 294729907,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661187640
    }
]