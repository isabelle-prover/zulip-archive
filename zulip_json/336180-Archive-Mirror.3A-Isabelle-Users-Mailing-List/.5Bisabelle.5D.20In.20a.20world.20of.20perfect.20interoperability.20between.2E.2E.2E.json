[
    {
        "content": "<p>From: Talia Ringer &lt;<a href=\"mailto:tringer@cs.washington.edu\">tringer@cs.washington.edu</a>&gt;<br>\nSay we one day are able to just take things from Isabelle/HOL and use them<br>\nwith Coq developments with no additional effort, or similarly in the<br>\nopposite direction, or similarly for any other pair of proof assistants.<br>\nSay we would get strong guarantees about these combined verified systems.<br>\nJust humor this for a second.</p>\n<p>In such a world, what systems would you want to combine, and why?</p>\n<p>Talia</p>",
        "id": 294829208,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661245811
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nHi</p>\n<p>I would like to see Compcert, at least its backend (IR, optimizations,<br>\nmachine code generation), being usable from Isabelle. <br>\nThen I could probably retarget my Refinement Framework to use Compcert-<br>\nIR as a backend, closing the gap from very high-level specifications to<br>\nmachine code. Similar for CakeML (Currently, the Refinement Framework<br>\ntargets LLVM or SML).</p>",
        "id": 294829310,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661245865
    }
]