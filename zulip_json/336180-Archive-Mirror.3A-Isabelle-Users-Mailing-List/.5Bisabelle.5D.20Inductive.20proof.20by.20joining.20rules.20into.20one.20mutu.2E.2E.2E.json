[
    {
        "content": "<p>From: Mark Wassell &lt;<a href=\"mailto:mpwassell@gmail.com\">mpwassell@gmail.com</a>&gt;<br>\nHello</p>\n<p>I am trying to prove that a mutually recursive predicate holds based on two<br>\nnon-mutually recursive predicates using 'joined' induction on the two<br>\nnon-mutual predicates. I get the message \"Failed to join given rules into<br>\none mutual rule\".</p>\n<p>What conditions have to hold for this to work? I can see the code for this<br>\nin Pure/Isar/rule_cases.ML but cannot interpret the code.</p>\n<p>A small example is the following:</p>\n<p>inductive rel1 :: \"nat =&gt; bool\" where<br>\n \"rel1 0\"<br>\n| \"rel1 n ⟹ rel1 (n+2)\"</p>\n<p>inductive rel2 :: \"nat ⇒ bool\" where<br>\n \"rel2 1\"<br>\n| \"rel2 n ⟹ rel2 (n+2)\"</p>\n<p>inductive odd :: \"nat ⇒ bool\" and<br>\n  even :: \"nat ⇒ bool\" where</p>\n<p>\"odd 1\"<br>\n| \"even n ⟹ odd (n+1)\"<br>\n| \"even 0 \"<br>\n| \"odd n ⟹ even (n+1)\"</p>\n<p>lemma<br>\n  \"rel1 m ⟹ even m\" and<br>\n  \"rel2 n ⟹ odd n\"<br>\nproof(induct rule: rel1.inducts rel2.inducts)</p>\n<p>Cheers</p>\n<p>Mark</p>",
        "id": 294829720,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661246049
    }
]