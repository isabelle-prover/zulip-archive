[
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nUnfortunately, I do not have any experience in this area. It might be<br>\nworth skimming through Makarius' postings. He dropped some hints about<br>\nScala/ML interaction over the time.</p>\n<p>For terms in YXML format: As far as I understand, the standard<br>\nIsabelle(/ML) functions for parsing terms accept the \"normal\"<br>\nrepresentation as well as the YXML representation; so one could just<br>\ngenerate theory files with the latter instead of the former (at expense<br>\nof human readability). There is this bit about it in the NEWS file:</p>\n<p>* The inner syntax of sort/type/term/prop supports inlined YXML<br>\n    representations within quoted string tokens.  By encoding logical<br>\n    entities via Term_XML (in ML or Scala) concrete syntax can be<br>\n    bypassed, which is particularly useful for producing bits of text<br>\n    under external program control.</p>\n<p>So have a look at files at src/Pure/term_xml.{ML,scala} -- they describe<br>\nthe XML representation of terms. YXML is just a (binary) representation<br>\nof (a subset of) XML. It should be described in either the<br>\nimplementation or the system manual.</p>\n<p>-- Lars</p>",
        "id": 294280995,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660920361
    }
]