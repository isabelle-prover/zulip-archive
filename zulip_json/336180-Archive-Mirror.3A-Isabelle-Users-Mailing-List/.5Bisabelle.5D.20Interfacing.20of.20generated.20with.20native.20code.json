[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nHi List,</p>\n<p>I have a datatype <br>\n  datatype result = INT integer | STRING String.literal</p>\n<p>and an Isabelle function<br>\n  compute :: int =&gt; result</p>\n<p>I now want the code generator to map this Isabelle function to an<br>\nexternal implementation, e.g.</p>\n<p>code_printing<br>\n  constant compute â‡€ (Scala) \"MyObject.compute\"</p>\n<p>However, is there any way to come up with a Scala implementation for<br>\nMyObject.compute, that can \"see\" the datatype \"result\", which is<br>\ngenerated by the code generator?</p>\n<p>If not, is there any possibility how to pass complex data types between<br>\nIsabelle generated and native Scala code?</p>\n<p>Thanks in advance for any help,<br>\n  Peter</p>",
        "id": 294765905,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661201941
    }
]