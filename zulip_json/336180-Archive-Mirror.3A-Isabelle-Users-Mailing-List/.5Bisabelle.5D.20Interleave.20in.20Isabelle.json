[
    {
        "content": "<p>From: Johan Jeuring &lt;<a href=\"mailto:johanj@cs.uu.nl\">johanj@cs.uu.nl</a>&gt;<br>\nWe noticed that the Isabelle Reference Manual from 1999 mentions an  <br>\ninterleaving construct for tactics, which has disappeared in the  <br>\nmanual from 2011. Is there a particular reason for this?</p>\n<p>We ask because we are working on a paper on interleaving strategies  <br>\nfor solving exercises (with the goal to follow and comment upon  <br>\nstudent interactions), and Isabelle seems to be the only prover that  <br>\nhas offered interleave. We can imagine that efficiency might be a  <br>\nreason to exclude it: the number of possibilities increases (more  <br>\nthan) exponentially in the length of the arguments when interleaving  <br>\nis used.</p>\n<p>Any ideas?</p>\n<p>Thanks,</p>\n<p>Johan Jeuring</p>",
        "id": 294135235,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660844120
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Thu, 14 Apr 2011, Johan Jeuring wrote:</p>\n<blockquote>\n<p>We noticed that the Isabelle Reference Manual from 1999 mentions an <br>\ninterleaving construct for tactics, which has disappeared in the manual <br>\nfrom 2011. Is there a particular reason for this?</p>\n</blockquote>\n<p>It was probably dropped when renovating some of the more ancient manuals, <br>\nbecause it was hardly ever used.</p>\n<p>A grep through the sources and its history reveals the following:</p>\n<p>* Isabelle2011 provides Seq.interleave (in src/Pure/General/seq.ML)<br>\n     and INTLEAVE (in src/Pure/tactical.ML) but neither of them is used.</p>\n<p>* These operations have been there since the beginnings of recorded<br>\n     Isabelle history in 1993, see also <a href=\"http://isabelle.in.tum.de/repos/isabelle/annotate/957c887b89b5/src/Pure/tctical.ML#l102\">http://isabelle.in.tum.de/repos/isabelle/annotate/957c887b89b5/src/Pure/tctical.ML#l102</a></p>\n<p>* In prehistoric Isabelle92 there is a single use of the tactical</p>\n<p>val prems = goal ZF.thy<br>\n     \"[| f: A-&gt;B;  g: C-&gt;D;  A Int C = 0  |] ==&gt;  \\<br>\n\\    (f Un g) : (A Un C) -&gt; (B Un D)\";<br>\n      (<em>Contradiction if A Int C = 0, a:A, a:B</em>)<br>\nval [disjoint] = prems RL ([IntI] RLN (2, [equals0D]));<br>\nby (cut_facts_tac prems 1);<br>\nby (rtac PiI 1);<br>\n(<em>solve subgoal 2 first!!</em>)<br>\nby (DEPTH_SOLVE_1 (eresolve_tac [UnE, Pair_mem_PiE, sym, disjoint] 2<br>\n        INTLEAVE ares_tac [ex1I, apply_Pair RS UnI1, apply_Pair RS UnI2] 2));<br>\nby (REPEAT (eresolve_tac [asm_rl,UnE,rel_Un,PiE] 1));<br>\nval fun_disjoint_Un = result();</p>\n<p>* In Isabelle93 the same is proved like this, using the \"Classical<br>\n     reasoner\" (fast_tac):</p>\n<p>val prems = goal ZF.thy<br>\n     \"[| f: A-&gt;B;  g: C-&gt;D;  A Int C = 0  |] ==&gt;  \\<br>\n\\    (f Un g) : (A Un C) -&gt; (B Un D)\";<br>\n      (<em>Contradiction if A Int C = 0, a:A, a:B</em>)<br>\nval [disjoint] = prems RL ([IntI] RLN (2, [equals0D]));<br>\nval Pair_UnE = read_instantiate [(\"c\",\"&lt;?a,?b&gt;\")] UnE;  (* ignores x: A Un <br>\nC *)<br>\nby (cut_facts_tac prems 1);<br>\nby (rtac PiI 1);<br>\nby (REPEAT (ares_tac [rel_Un, fun_is_rel] 1));<br>\nby (rtac ex_ex1I 1);<br>\nby (fast_tac (ZF_cs addDs [apply_Pair]) 1);<br>\nby (REPEAT_FIRST (eresolve_tac [asm_rl, Pair_UnE, sym RS trans]<br>\n              ORELSE' eresolve_tac [Pair_mem_PiE,disjoint] THEN' atac));<br>\nval fun_disjoint_Un = result();</p>\n<blockquote>\n<p>We ask because we are working on a paper on interleaving strategies for <br>\nsolving exercises (with the goal to follow and comment upon student <br>\ninteractions), and Isabelle seems to be the only prover that has offered <br>\ninterleave.</p>\n</blockquote>\n<p>These are just a few lines of rather obvious SML text.  When I encountered <br>\nit as a young student in 1993 it did not surprise me.</p>\n<blockquote>\n<p>We can imagine that efficiency might be a reason to exclude it: the <br>\nnumber of possibilities increases (more than) exponentially in the <br>\nlength of the arguments when interleaving is used.</p>\n</blockquote>\n<p>Larry might remember what he did in 1992/1993.  We do not have any formal <br>\nhistory, because we started using CVS 1.0 only in summer 1993.</p>\n<p>Often such generic strategies have been superseded by specific proof <br>\nautomation, such as the Classical Reasoner above.</p>\n<p>Since tacticals are closely related to parser combinators, you might also <br>\nlook there in the literature what people did to improve worst-case <br>\ncomplexities.</p>\n<p>Makarius</p>",
        "id": 294135252,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660844127
    }
]