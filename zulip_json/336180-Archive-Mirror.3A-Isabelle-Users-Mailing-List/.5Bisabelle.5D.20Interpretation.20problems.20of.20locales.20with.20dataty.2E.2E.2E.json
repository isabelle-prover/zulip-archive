[
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi all,</p>\n<blockquote>\n<p>The first example works if you add a (plugins del: code) annotation to<br>\nfoo. The code generator is inherently non-localized, thus I’m not sure<br>\nif this can be improved at all.</p>\n</blockquote>\n<p>I think so and I am working on it.</p>\n<p>Florian<br>\n<a href=\"/user_uploads/14278/hJdjuSXvJx_E4XuatuCysmXA/signature.asc\">signature.asc</a></p>",
        "id": 294658779,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661169133
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nChangsets 4b53042d7a40 and 072012fb4a10 solve the issue by generalizing<br>\nmatters appropriately.  Their might still be a problem in the stack of<br>\nplugins, but at least it does not bite immediately.  I will anyway have<br>\na closer look at that.</p>\n<p>Cheers,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/sykB8zRk_4TkWAc7m3HOHHBF/signature.asc\">signature.asc</a></p>",
        "id": 294659027,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661169229
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear BNF experts,</p>\n<p>I have started to use datatype declarations inside locales, but this seems to cause <br>\nproblems at interpretations. Here is an example:</p>\n<p>locale l = fixes n :: nat begin<br>\n   datatype 'a foo = Foo 'a<br>\n   end<br>\n   interpretation l 0 .</p>\n<p>The interpretation raises</p>\n<p>exception THM 0 raised (line 1216 of \"thm.ML\"):<br>\n   Type not of sort term_of<br>\n   term_of_class.term_of ?x ≡ ?t</p>\n<p>If the interpretation is inside a proof (rather than at the top-level), interpret works <br>\nonce, but I get a different error upon the second interpretation:</p>\n<p>locale l2 = fixes b :: bool begin<br>\n   datatype 'b bar = Bar | Foobar 'b<br>\n   lemma True<br>\n   proof -<br>\n     interpret t!: l2 True .<br>\n   oops<br>\n   end</p>\n<p>Here, interpret complains that<br>\n   Monotocity rule for type \"<a href=\"http://Scratch.l2.bar\">Scratch.l2.bar</a>\" is already_defined.</p>\n<p>Is this a fundamental problem of the BNF package and locales or just a limitation of the <br>\ncurrent implementation? Can I disable some plugins to make the examples work?</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 294659243,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661169309
    },
    {
        "content": "<p>From: Dmitriy Traytel &lt;<a href=\"mailto:traytel@inf.ethz.ch\">traytel@inf.ethz.ch</a>&gt;<br>\nHi Andreas,</p>\n<p>in both cases plugins are to blame.</p>\n<p>The first example works if you add a (plugins del: code) annotation to foo. The code generator is inherently non-localized, thus I’m not sure if this can be improved at all.</p>\n<p>The second example works if you add a (plugins del: lifting) annotation to bar. I believe Ondra can say what goes wrong in the lifting plugin.</p>\n<p>Dmitriy</p>",
        "id": 294659661,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661169444
    }
]