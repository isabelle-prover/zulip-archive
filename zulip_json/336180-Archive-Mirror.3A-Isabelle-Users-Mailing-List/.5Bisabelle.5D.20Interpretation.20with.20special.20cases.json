[
    {
        "content": "<p>From: Tim McKenzie &lt;<a href=\"mailto:tjm1983@gmail.com\">tjm1983@gmail.com</a>&gt;<br>\nIn the attached file, I define a locale called metric, and I prove</p>\n<p>interpretation real_euclid: metric dist</p>\n<p>I also define a locale (based on metric) called non_exact_metric, and I try to <br>\nbegin proving</p>\n<p>interpretation real_euclid: non_exact_metric \"dist:: [real^2, real^2] =&gt; real\"</p>\n<p>Isabelle 2009 balks at the last show in the file, complaining \"Local statement <br>\nwill fail to refine any pending goal\", even though I've specified that I only <br>\nwant to prove the interpretation for the two-dimensional case of dist. If I <br>\nremove the bit that specifies that ?x is of type real^2, then Isabelle happily <br>\nprocesses the show command. I don't think I'd be able to finish the proof, <br>\nthough, since one-dimensional Euclidean space doesn't satisfy non_exact.</p>\n<p>Can someone explain to me what's going on here?</p>\n<p>Tim<br>\n&lt;&gt;&lt;<br>\n<a href=\"/user_uploads/14278/5g472vYNgjWiFCerqB28i1AB/Metric.thy\">Metric.thy</a><br>\n<a href=\"/user_uploads/14278/MV4yOC4hD2Um-nKn3AcOg5Ga/signature.asc\">signature.asc</a></p>",
        "id": 294077899,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660829619
    },
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:brianh@cs.pdx.edu\">brianh@cs.pdx.edu</a>&gt;<br>\nHi Tim,</p>\n<p>Running your proof script with \"show sorts\" enabled highlights exactly<br>\nwhat the problem is. In your first \"show\" statement, the goal you have<br>\nstated has a more general type than what you intended: \"real^2\" is<br>\nreplaced with \"real ^ 'a\". Since the more general statement still<br>\nresolves with the original goal, Isar does not complain. Now Isabelle<br>\nis expecting you to prove this new, more general goal, which of course<br>\nis impossible. To fix the problem, just add a type annotation to the<br>\n\"show\" statement to force x y and z to have type \"real^2\".</p>\n<p>interpretation real_euclid: non_exact_metric \"dist :: [real^2, real^2] =&gt; real\"<br>\nproof<br>\n(* the subgoal at this point is for type \"real ^ 2\" *)<br>\n  show \"EX x y z.<br>\n    ~ real_euclid.exact x y z &amp;<br>\n    ~ real_euclid.exact y z x &amp;<br>\n    ~ real_euclid.exact z x y\"<br>\n(* the subgoal at this point is for type \"real ^ 'a\" *)<br>\n  proof<br>\n    let ?x = \"0 :: real^2\"<br>\n    show \"EX y z.<br>\n      ~ real_euclid.exact ?x y z &amp;<br>\n      ~ real_euclid.exact y z ?x &amp;<br>\n      ~ real_euclid.exact z ?x y\"</p>\n<p>I am actually surprised that no warning message is generated after the<br>\nfirst \"show\", since you are adding a new type variable \"'a\" to the<br>\nproof state that wasn't there before. I think there <em>should</em> be a<br>\nwarning message in this case, because inventing a new type variable is<br>\nprobably not what anyone would intend to do.</p>\n<ul>\n<li>Brian</li>\n</ul>",
        "id": 294077911,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660829623
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:lochbihl@ipd.info.uni-karlsruhe.de\">lochbihl@ipd.info.uni-karlsruhe.de</a>&gt;<br>\nHi Tim,</p>\n<p>if you turn on \"show types\" in Isabelle, you see that the goal in your <br>\ninterpretation proof for real_euclid : non_exact_metric after the first <br>\n\"proof\" command still contains the type \"real ^ 2\" for the existentially <br>\nquantified x y z.</p>\n<p>Your show statement however replaces this type constraint with \"real ^ <br>\n'a\" because this is the most general type that can be inferred for the <br>\nproposition to be shown. Since this type is more general than the typing <br>\nfor the actual goal to be shown, Isabelle does not complain.<br>\nHence, inside your second proof, the type for ?x should be \"real ^ 'a\" <br>\nwith 'a being now fixed.</p>\n<p>The solution is to include a type constraint already in the first show <br>\nstatement:</p>\n<p>interpretation real_euclid: non_exact_metric \"dist :: [real2, real2] <br>\n\\&lt;Rightarrow&gt; real\"<br>\nproof<br>\n   show \"\\&lt;exists&gt;x y z :: real ^ 2.<br>\n     \\&lt;not&gt; real_euclid.exact x y z \\&lt;and&gt;<br>\n     \\&lt;not&gt; real_euclid.exact y z x \\&lt;and&gt;<br>\n     \\&lt;not&gt; real_euclid.exact z x y\"</p>\n<p>Regards,<br>\nAndreas</p>\n<p>Tim McKenzie schrieb:</p>",
        "id": 294077945,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660829640
    },
    {
        "content": "<p>From: Tim McKenzie &lt;<a href=\"mailto:tjm1983@gmail.com\">tjm1983@gmail.com</a>&gt;<br>\nThanks Brian and Andreas for your excellent explanations. I think I<br>\nunderstand the problem now, and I've also found out how to turn on<br>\n\"show types\" and \"show sorts\" in Proof General, so I should be able to<br>\ndiagnose similar problems in future.</p>\n<p>Tim<br>\n&lt;&gt;&lt;</p>",
        "id": 294078003,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660829647
    }
]