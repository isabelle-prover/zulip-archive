[
    {
        "content": "<p>From: William Mansky &lt;<a href=\"mailto:mansky1@illinois.edu\">mansky1@illinois.edu</a>&gt;<br>\nI would very much like to be able to do that too (I have a similar setup <br>\nwith control-flow graphs and structures made of sets of graphs). The <br>\nonly way I've found so far is to use the \"lemmas\" keyword to produce <br>\neach lemma, and explicitly declare them to have the desired attributes. <br>\nFor instance, if you have an assumption like</p>\n<p>assumes graphs_are_graphs: \"!!g. g : graphs ==&gt; abstract_graph (verts g) (edges g)\"</p>\n<p>you could write in that locale</p>\n<p>lemmas graphs_elim_rule = abstract_graph.graph_elim_rule [OF <br>\ngraphs_are_graphs]<br>\ndeclare graphs_elim_rule [elim]</p>\n<p>It would be nice if there was a simpler solution.</p>\n<p>William</p>",
        "id": 294239075,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660906162
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nHi everyone,</p>\n<p>I've got the following situation:</p>\n<p>locale abstract_graph =<br>\n   fixes verts :: \"'a set\"<br>\n     and edges :: \"('a,'a) set\"<br>\n   assumes wf: \"e : edges ==&gt; fst e : verts &amp; snd e : verts\"</p>\n<p>locale abstract_graphs:<br>\n   fixes graphs :: \"' c set\"<br>\n     and verts :: \"'c =&gt; 'a set\"<br>\n     and edges :: \"'c =&gt; ('a,'a) set\"<br>\n     and add_edge :: ...<br>\n     and del_edge :: ...</p>\n<p>assumes \"!!g. g : graphs ==&gt; abstract_graph (verts g) (edges g)\"<br>\n     and ...</p>\n<p>Is there a way to get all lemmas from abstract_graph in abstract_graphs with</p>\n<p>a) the locale_predicate replaced by the assumption \"g : graphs\" and<br>\n   b) with the automation setup from abstract_graph (i.e. simp,<br>\n      intro,elim, ...?</p>\n<p>From the chapter about conditional interpretations in the locale <br>\ntutorial I gather that this is not possible?</p>\n<p>Rationale: Most of the time, I only work with a fixed graph; so <br>\nabstract_graph would be the natural representation for that. However,<br>\nwhen I need to modify graphs, it would be a nicer not, if I would not <br>\nneed to interpret every intermediate graph (in particular since the <br>\noperations on graphs preserve the membership and a therefore can be <br>\nproved trivially).</p>\n<p>-- Lars</p>",
        "id": 294239723,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660906439
    }
]