[
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nI'm trying to formalize that for a particular grammar, there is no<br>\nproduction which accepts the empty word. Thus, I wrote the following lemma:</p>\n<p>lemma empty_unaccepted_helper:<br>\n    \"⟦ accepted prods nt bs; bs = [] ⟧ ⟹ False\"<br>\nby (induction rule: accepted.induct) auto</p>\n<p>Now I want to make that fact explicit:</p>\n<p>lemma empty_unaccepted[simp]: \"¬ (accepted prods nt [])\"</p>\n<p>My idea is the following:</p>\n<p>proof<br>\n  assume \"accepted prods nt []\"<br>\n  hence \"accepted prods nt bs ∧ bs = []\" (* and now? *)</p>\n<p>I know that this is a rather naive approach and as expected it didn't<br>\nwork. Any idea on how I could do that?</p>",
        "id": 294149315,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660848714
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;</p>\n<blockquote>\n<p>lemma empty_unaccepted[simp]: \"¬ (accepted prods nt [])\"</p>\n<p>The following should work:</p>\n</blockquote>\n<p>apply (rule)<br>\n  apply (drule empty_unaccepted_helper)<br>\n  by auto</p>\n<p>Peter</p>",
        "id": 294149378,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660848726
    },
    {
        "content": "<p>From: René Neumann &lt;<a href=\"mailto:rene.neumann@in.tum.de\">rene.neumann@in.tum.de</a>&gt;<br>\nlemma empty_unaccepted[simp]: \"¬ (accepted prods nt [])\"<br>\nproof (rule notI)<br>\n  assume \"accepted prods nt []\"<br>\n  with empty_unaccepted_helper[OF this] show \"False\" by simp<br>\nqed</p>\n<ul>\n<li>René</li>\n</ul>",
        "id": 294149388,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660848731
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nThanks. I used a slightly modified version of that where I didn't need<br>\n<code>empty_unaccepted_helper</code>, but rather proved the lemma directly in a<br>\nsub-proof.</p>",
        "id": 294149391,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660848732
    }
]