[
    {
        "content": "<p>From: René Thiemann &lt;<a href=\"mailto:rene.thiemann@uibk.ac.at\">rene.thiemann@uibk.ac.at</a>&gt;<br>\nDear all,</p>\n<p>we are happy to announce IsaFoR and CeTA which are both freely<br>\navailable at:</p>\n<p><a href=\"http://cl-informatik.uibk.ac.at/software/ceta/\">http://cl-informatik.uibk.ac.at/software/ceta/</a></p>\n<ul>\n<li>\n<p>IsaFoR (Isabelle Formalization of Rewriting) is an Isabelle/HOL<br>\n   library which formalizes first order term rewriting.<br>\n   It currently contains several definitions, theorems, and<br>\n   algorithms about rewriting, where the main focus is on<br>\n   termination analysis.</p>\n<ul>\n<li>terms, TRSs, matching, unification</li>\n<li>dependency pairs (incl. dependency pair framework)</li>\n<li>dependency graph processor (EDG**<em>, i.e., EDG</em> with tcap)</li>\n<li>reduction pair processor</li>\n<li>polynomial orders</li>\n<li>nontermination via loops</li>\n<li>...</li>\n</ul>\n<p>For each of the termination techniques, IsaFoR contains a check- <br>\nfunction<br>\n which--given a termination proof from an arbitrary termination<br>\n prover--checks whether these techniques have been applied in a  <br>\ncorrect<br>\n way. Hence, these functions can be used to certify termination proof<br>\n trees.</p>\n</li>\n<li>\n<p>Since all our check-functions are executable, we used Isabelle's<br>\n   code-generation facilities to generate a certified Haskell program,<br>\n   CeTA (Certified Termination Analysis), which can then also be used<br>\n   to certify termination proof trees. It has the following benefits:</p>\n<ul>\n<li>readable error messages in case a proof tree is refuted</li>\n<li>execution time: certification of over 500 proofs in 1 minute</li>\n<li>\n<p>robustness: any dependency graph estimation is accepted,<br>\n               as long as it is subsumed by EDG***</p>\n</li>\n<li>\n<p>modularity: for each termination technique one can call an  <br>\nindividual<br>\n          check-function, the whole proof tree is not required</p>\n</li>\n<li>\n<p>easy usage: just download a binary or some Haskell-files,<br>\n               an installation of Isabelle is not required;<br>\n               simple proof tree format</p>\n</li>\n</ul>\n</li>\n<li>\n<p>For the future we have the following plans:</p>\n<ul>\n<li>subterm criterion</li>\n<li>negative polynomial orders</li>\n<li>\n<p>combination with other termination proof certifiers via common<br>\n   XML proof tree format (we aim for some results after WST'09)</p>\n</li>\n<li>\n<p>submission to the archive of formal proofs</p>\n</li>\n<li>...</li>\n</ul>\n</li>\n</ul>\n<p>So stay tuned.</p>\n<p>Best regards,<br>\nChristian Sternagel,<br>\nRené Thiemann, and<br>\nHarald Zankl</p>",
        "id": 294074719,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660828417
    }
]