[
    {
        "content": "<p>From: Temesghen Kahsai &lt;<a href=\"mailto:lememta@gmail.com\">lememta@gmail.com</a>&gt;<br>\nOn Jan 6, 2008 1:44 AM, Alessandro Cavalcante Gurgel &lt;<br>\n<a href=\"mailto:rolangomaster@gmail.com\">rolangomaster@gmail.com</a>&gt; wrote:</p>\n<blockquote>\n<p>Hi,</p>\n<p>I'm Alessandro Gurgel, student of UFRN, Brazil. Currently, I am a<br>\nmember of the project Circus Refine. The project is the development of a<br>\ntool that support the language Circus.Circus specifications combine both<br>\ndata and behavioural aspects of concurrent systems using a combination of<br>\nCSP, Z, and Dijkstra's command language. Its associated refinement theory<br>\nand calculus distinguishes itself from other such combinations.</p>\n<p>So, we intend to integrate our CRefine tool with a theorem proving.<br>\nIsabelle seems to be a good theorem proving but we need some more<br>\ninformations about this proof assistant.</p>\n</blockquote>\n<p>Depending what you want to prove, you can have a look at Csp-Prover, which<br>\nis build upon Isabelle/HOL (<br>\n<a href=\"http://staff.aist.go.jp/y-isobe/CSP-Prover/CSP-Prover.html\">http://staff.aist.go.jp/y-isobe/CSP-Prover/CSP-Prover.html</a>).</p>\n<blockquote>\n<p>1- Isabelle is avaible in Windows ? it needs some kind of simulator as<br>\ncygwin ?<br>\n2-  How coul we integrate our tool with Isabelle ? Do you have any<br>\ndocumentation about support for communication with external tools ?</p>\n<p>Thanks,</p>\n<p>Alessandro<br>\n</p>\n</blockquote>",
        "id": 294054795,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660821104
    },
    {
        "content": "<p>From: Alessandro Cavalcante Gurgel &lt;<a href=\"mailto:rolangomaster@gmail.com\">rolangomaster@gmail.com</a>&gt;<br>\nHi,</p>\n<p>I'm Alessandro Gurgel, student of UFRN, Brazil. Currently, I am a<br>\nmember of the project Circus Refine. The project is the development of a<br>\ntool that support the language Circus.Circus specifications combine both<br>\ndata and behavioural aspects of concurrent systems using a combination of<br>\nCSP, Z, and Dijkstra's command language. Its associated refinement theory<br>\nand calculus distinguishes itself from other such combinations.</p>\n<p>So, we intend to integrate our CRefine tool with a theorem proving.<br>\nIsabelle seems to be a good theorem proving but we need some more<br>\ninformations about this proof assistant.</p>\n<p>1- Isabelle is avaible in Windows ? it needs some kind of simulator as<br>\ncygwin ?<br>\n2-  How coul we integrate our tool with Isabelle ? Do you have any<br>\ndocumentation about support for communication with external tools ?</p>\n<p>Thanks,</p>\n<p>Alessandro</p>",
        "id": 294055747,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660821501
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Sat, 5 Jan 2008, Alessandro Cavalcante Gurgel wrote:</p>\n<blockquote>\n<p>Isabelle seems to be a good theorem proving but we need some more<br>\ninformations about this proof assistant.</p>\n<p>1- Isabelle is avaible in Windows ? it needs some kind of simulator as<br>\ncygwin ?</p>\n</blockquote>\n<p>Yes, thanks to the native Cygwin version of Poly/ML 5.0 and 5.1, Isabelle <br>\nnow runs routinely under windows as well.  Traditionally, the majority of <br>\nour users are on Linux or Mac OS X, but some people have now started to <br>\nuse Windows/Cygwin more seriously.</p>\n<p>Note that Cygwin is not a simulator, but a plain windows DLL that <br>\nessentially unleashes the well-hidden Posix functionality of windows.  <br>\nThus it is able to join the majority of operating systems out there and <br>\nenables to run a platform independent system like Isabelle smoothly.</p>\n<blockquote>\n<p>2-  How coul we integrate our tool with Isabelle ?</p>\n</blockquote>\n<p>This important issue got our special attention recently.  In the past few <br>\nweeks I've been working on a solid wrapper to integrate the Isabelle <br>\nprocess into the JVM environment, enabling to communicate with the Isar <br>\n(or ML) toplevel using API calls, instead of fiddling with pipes and <br>\nprotocols manually.  The idea is to make it easy to integrate Isabelle in <br>\nJVM based environments out there, such as jEdit or Netbeans, but you can <br>\ndo anything else with it -- the wrapper not specific to anything.</p>\n<p>The other direction is calling other tools from inside Isabelle. People <br>\nhave occasionally attempted this using the existing Posix process / pipes <br>\n/ signals facilities available in SML.  Pretty soon we will greatly <br>\nimprove upon this, by using the internal multithreading facilities of <br>\nPoly/ML 5.1, enabling the Isabelle toplevel to speak to several external <br>\ntools at the same time (e.g. external provers that potentially diverge.)</p>\n<p>If you are interested in any of this, I can point you to some internal <br>\nsource snapshots.  This is still ongoing work, some of it will be part of <br>\nthe next Isabelle release (this year).</p>\n<p>Makarius</p>",
        "id": 294055906,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660821568
    },
    {
        "content": "<p>From: Michael Fourman &lt;<a href=\"mailto:michael.fourman@ed.ac.uk\">michael.fourman@ed.ac.uk</a>&gt;<br>\nAlessandro,</p>\n<p>Poly/ML also has facilities for calling external dynamic libraries -  <br>\nthe \"CInterface\",<br>\noriginally implemented by Nick Chapman (then) of Abstract Hardware.</p>\n<p><a href=\"http://www.polyml.org/docs/CInterface.html\">http://www.polyml.org/docs/CInterface.html</a></p>\n<p>This might help you.</p>\n<p>In a different context (<a href=\"http://propplan.sourceforge.net\">propplan.sourceforge.net</a>), I use these to call  <br>\na BDD library.</p>\n<p>Michael</p>",
        "id": 294056027,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660821606
    }
]