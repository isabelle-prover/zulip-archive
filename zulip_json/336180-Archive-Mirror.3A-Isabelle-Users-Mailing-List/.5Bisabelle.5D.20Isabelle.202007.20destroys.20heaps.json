[
    {
        "content": "<p>From: Daniel Wasserrab &lt;<a href=\"mailto:wasserra@infosun.fim.uni-passau.de\">wasserra@infosun.fim.uni-passau.de</a>&gt;<br>\nHello everyone,</p>\n<p>the new Isabelle 2007 seems to destroy heaps. When I open an Isabelle <br>\nprocess, terminate it and try to start a new one, Isabelle hangs up and <br>\ndoesn't respond any more. I get the same behaviour if one process is <br>\nrunning and I try to run isatool, the isatool process also hangs up. You <br>\nhave to rebuild the heap (or have a \"untouched\" save copy) if you want <br>\nIsabelle to work properly again.<br>\nI'm not the only one with this behaviour, my colleague has exactly the <br>\nsame problem. Does anyone know why this happens and how to fix it?</p>\n<p>Regards<br>\nDaniel</p>",
        "id": 294053710,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660820697
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Wed, 28 Nov 2007, Daniel Wasserrab wrote:</p>\n<blockquote>\n<p>When I open an Isabelle process, terminate it and try to start a new <br>\none, Isabelle hangs up and doesn't respond any more.</p>\n</blockquote>\n<p>What exactly do you mean by \"terminate\"?  Is this just an interrupt <br>\nsignal, or the stop button in Proof General?</p>\n<blockquote>\n<p>I'm not the only one with this behaviour, my colleague has exactly the <br>\nsame problem. Does anyone know why this happens and how to fix it?</p>\n</blockquote>\n<p>All this sounds very odd.  What is your platform (operating system, <br>\nPoly/ML version, Emacs version)?</p>\n<p>Makarius</p>",
        "id": 294053809,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660820745
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOK, so lets try this without ProofGeneral:</p>\n<p>$ isabelle</p>\n<blockquote>\n<p>val it = () : unit<br>\n  val commit = fn : unit -&gt; bool<br>\n  ML&gt;</p>\n</blockquote>\n<p>Now CTRL-D will terminate the process.  Does this work as expected?</p>\n<p>There might be also a problem with the permissions of <br>\nIsabelle/heaps/polyml-5.1_x86-linux/HOL (should be read-only). Which file <br>\nsystem type is used for Isabelle/heaps?</p>\n<p>Makarius</p>",
        "id": 294053837,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660820758
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nBy adding option -w to the isabelle invokation the resulting heap will be <br>\nread-only; isatool usedir provides a slightly more high-level mechanism to <br>\nachive a similar effect.</p>\n<p>Makarius</p>",
        "id": 294053882,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660820764
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Thu, 29 Nov 2007, Makarius wrote:</p>\n<blockquote>\n<p>On Thu, 29 Nov 2007, Daniel Wasserrab wrote:</p>\n<blockquote>\n<p>If I make the HOL heap read-only, it all works again. But if I create <br>\nvia \"isabelle -q HOL Test\" a new heap file, then this \"Test\" heap is <br>\nagain writeable and the same problem occurs. So manually adjusting these <br>\nself-created heaps is necessary?</p>\n</blockquote>\n<p>By adding option -w to the isabelle invokation the resulting heap will be <br>\nread-only; isatool usedir provides a slightly more high-level mechanism to <br>\nachive a similar effect.</p>\n</blockquote>\n<p>Just in case you really mean to have writable persistent sessions: there <br>\nis a general problem in restarting a session that has been committed from <br>\nIsar or Proof General interaction mode (committing from ML is OK).  This <br>\nis related to multithreading in Poly/ML 5.1 -- the commit happens in a <br>\ncritical section and the related mutex is written out in locked state. <br>\nAfter reloading the session, this results in a deadlock!</p>\n<p>You can workaround this by pretending that your Poly/ML is actually 5.0, <br>\ne.g. like this in ~/isabelle/etc/settings:</p>\n<p>ML_SYSTEM=polyml-5.0</p>\n<p>And then rebuild the logic images.</p>\n<p>An alternative is to modify Isabelle/Pure like this:</p>\n<p>Index: Pure/General/secure.ML<br>\n===================================================================<br>\nRCS file: Pure/General/secure.ML,v<br>\nretrieving revision 1.14<br>\ndiff -r1.14 secure.ML<br>\n55c55<br>\n&lt; fun commit () = CRITICAL (fn () =&gt; orig_use_text \"\" Output.ml_output false \"commit();\");</p>\n<hr>\n<blockquote>\n<p>fun commit () = orig_use_text \"\" Output.ml_output false \"commit();\";</p>\n</blockquote>\n<p>You will also need to rebuild logics, but can continue to work with <br>\nPoly/ML 5.1 and multicore support enabled (and proper timeout for <br>\nauto_quickcheck).</p>\n<p>Makarius</p>",
        "id": 294053890,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660820771
    },
    {
        "content": "<p>From: Daniel Wasserrab &lt;<a href=\"mailto:wasserra@infosun.fim.uni-passau.de\">wasserra@infosun.fim.uni-passau.de</a>&gt;<br>\nBy terminate I mean exiting the ProofGeneral via \"Exit Isabelle\" (or <br>\nCtrl-c Ctrl-x). Then starting a new Isabelle process in ProofGeneral <br>\njust states \"Starting process: bla/bin/isabelle-process -PI -m PGASCII <br>\nHOL\" and then hangs up.</p>\n<p>We are running on Fedora 4, linux kernel 2.6.17-1.2142_FC4smp, poly-ml <br>\n5.1, ProofGeneral-3.7pre071112 (the versions to download for the new <br>\nIsabelle2007), XEmacs 21.4 (patch 19)</p>\n<p>Makarius wrote:</p>",
        "id": 294053953,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660820801
    },
    {
        "content": "<p>From: Daniel Wasserrab &lt;<a href=\"mailto:wasserra@infosun.fim.uni-passau.de\">wasserra@infosun.fim.uni-passau.de</a>&gt;<br>\nOk. it seems you have pinned the problem. If I make the HOL heap <br>\nread-only, it all works again. But if I create via \"isabelle -q HOL <br>\nTest\" a new heap file, then this \"Test\" heap is again writeable and the <br>\nsame problem occurs. So manually adjusting these self-created heaps is <br>\nnecessary?</p>\n<p>Thanks for the help<br>\nDaniel</p>\n<p>Makarius wrote:</p>",
        "id": 294053973,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660820813
    }
]