[
    {
        "content": "<p>From: JanuGerman &lt;<a href=\"mailto:doublemalam@yahoo.co.uk\">doublemalam@yahoo.co.uk</a>&gt;<br>\nHi Every one,</p>\n<p>I am stuck in Isabelle installation. I was using Isabelle from IsoMorph, from quite time, but its too slow.</p>\n<p>I tried Installing Isabelle many times, but always, got this error.</p>\n<p>Can any body help in sorting out this.</p>\n<p>Regards,</p>\n<p>The error is as follows:<br>\n(1) (file-mode-spec/warning) Error in File mode specification: Cannot open load file: \"executable\"</p>\n<p>Backtrace follows:</p>\n<p>signal(file-error (\"Cannot open load file\" \"executable\"))<br>\n  # bind (path handler filename nosuffix nomessage noerror file)<br>\n  load(\"executable\" nil nil nil)<br>\n  # (unwind-protect ...)<br>\n  executable-find(\"isabelle\")<br>\n  # bind (exec-path extrapath returnnopath progname)<br>\n  proof-locate-executable(\"isabelle\" t (\"/usr/local/Isabelle/bin/\" \"/opt/Isabelle/bin/\" \"/usr/Isabelle/bin/\" \"/usr/share/Isabelle/bin/\"))<br>\n  (if (fboundp (quote proof-running-on-win32)) \"C:\\\\sml\\\\bin\\\\.run\\\\run.x86-win32.exe @SMLload=C:\\\\Isabelle\\\\\" (proof-locate-executable \"isabelle\" t (quote (\"/usr/local/Isabelle/bin/\" \"/opt/Isabelle/bin/\" \"/usr/Isabelle/bin/\" \"/usr/share/Isabelle/bin/\"))))<br>\n  eval((if (fboundp (quote proof-running-on-win32)) \"C:\\\\sml\\\\bin\\\\.run\\\\run.x86-win32.exe @SMLload=C:\\\\Isabelle\\\\\" (proof-locate-executable \"isabelle\" t (quote (\"/usr/local/Isabelle/bin/\" \"/opt/Isabelle/bin/\" \"/usr/Isabelle/bin/\" \"/usr/share/Isabelle/bin/\")))))<br>\n  # bind (value symbol)<br>\n  custom-initialize-reset(isabelle-program-name (if (fboundp (quote proof-running-on-win32)) \"C:\\\\sml\\\\bin\\\\.run\\\\run.x86-win32.exe @SMLload=C:\\\\Isabelle\\\\\" (proof-locate-executable \"isabelle\" t (quote (\"/usr/local/Isabelle/bin/\" \"/opt/Isabelle/bin/\" \"/usr/Isabelle/bin/\" \"/usr/share/Isabelle/bin/\")))))<br>\n  # bind (initialize requests args doc default symbol)<br>\n  custom-declare-variable(isabelle-program-name (if (fboundp (quote proof-running-on-win32)) \"C:\\\\sml\\\\bin\\\\.run\\\\run.x86-win32.exe @SMLload=C:\\\\Isabelle\\\\\" (proof-locate-executable \"isabelle\" t (quote (\"/usr/local/Isabelle/bin/\" \"/opt/Isabelle/bin/\" \"/usr/Isabelle/bin/\" \"/usr/share/Isabelle/bin/\")))) \"*Default name of program to run Isabelle.\\n\\nThe default value except when running under Windows is \\\"isabelle\\\",\\nwhich will get expanded using PATH if possible, or in a number\\nof standard locations (/usr/local/Isabelle/, /opt/Isabelle, etc). \\n\\nThe default value when running under Windows is:\\n\\n  C:\\\\sml\\\\bin\\\\.run\\\\run.x86-win32.exe @SMLload=C:\\\\Isabelle\\\\\\n\\nThis expects SML/NJ in C:\\\\sml and Isabelle images in C:Isabelle.  \\nThe logic image name is tagged onto the end.  \\n\\nNB: The Isabelle settings mechanism or the environment variable\\nISABELLE will always override this setting.\" :type file :group isabelle)<br>\n  # (unwind-protect ...)<br>\n  # (unwind-protect ...)<br>\n  # (unwind-protect ...)<br>\n  # (unwind-protect ...)<br>\n  # (unwind-protect ...)<br>\n  # (unwind-protect ...)<br>\n  # (unwind-protect ...)<br>\n  # (unwind-protect ...)<br>\n  load-internal(\"isabelle-system\" nil require nil binary)<br>\n  # bind (path handler filename nosuffix nomessage noerror file)<br>\n  load(\"isabelle-system\" nil require nil)<br>\n  # (unwind-protect ...)<br>\n  require(isabelle-system)<br>\n  byte-code(\"...\" [proof-home-directory load-path require proof \"isa/\" isabelle-system] 2)<br>\n  # (unwind-protect ...)<br>\n  # (unwind-protect ...)<br>\n  # (unwind-protect ...)<br>\n  # (unwind-protect ...)<br>\n  # (unwind-protect ...)<br>\n  # (unwind-protect ...)<br>\n  # (unwind-protect ...)<br>\n  # (unwind-protect ...)<br>\n  load-internal(\"isar\" nil nil nil binary)<br>\n  # bind (path handler filename nosuffix nomessage noerror file)<br>\n  load(\"isar\")<br>\n  # bind (library)<br>\n  load-library(\"isar\")<br>\n  (cond ((and (boundp (quote proof-assistant)) (not (string-equal proof-assistant \"\"))) (or (string-equal proof-assistant \"Isabelle\") (message (concat \"Isabelle\" \" Proof General error: Proof General already in use for \" proof-assistant)))) (t (proof-ready-for-assistant \"Isabelle\" (quote isar)) (load-library \"isar\") (isar-mode)))<br>\n  isar-mode()<br>\n  # bind (alist mode name keep-going)<br>\n  # (unwind-protect ...)<br>\n  # bind (just-from-file-name)<br>\n  set-auto-mode()<br>\n  #&lt;compiled-function nil \"...(5)\" [set-auto-mode t] 1&gt;()<br>\n  # (unwind-protect ...)<br>\n  call-with-condition-handler(#&lt;compiled-function (__call_trapping_errors_arg__) \"...(17)\" [__call_trapping_errors_arg__ errstr error-message-string lwarn file-mode-spec warning \"Error in %s: %s\\n\\nBacktrace follows:\\n\\n%s\" \"File mode specification\" backtrace-in-condition-handler-eliminating-handler] 8&gt; #&lt;compiled-function nil \"...(5)\" [set-auto-mode t] 1&gt;)<br>\n  # (condition-case ... . ((error)))<br>\n  # bind (find-file)<br>\n  normal-mode(t)<br>\n  # bind (nomodes after-find-file-from-revert-buffer noauto warn error)<br>\n  after-find-file(t t)<br>\n  # (unwind-protect ...)<br>\n  # bind (inhibit-read-only error number truename rawfile nowarn filename buf)<br>\n  find-file-noselect-1(#&lt;buffer \"Scratch.thy\"&gt; \"/root/Scratch.thy\" nil nil \"/root/Scratch.thy\" nil)<br>\n  byte-code(\"...\" [number truename rawfile nowarn filename buf set-buffer-major-mode find-file-noselect-1] 7)<br>\n  # (condition-case ... . ((t (byte-code \"Â!Ã    @    A\\\"\" [buf data kill-buffer signal] 3))))<br>\n  # bind (number truename buf wildcards rawfile nowarn filename)<br>\n  find-file-noselect(\"/root/Scratch.thy\" nil nil nil)<br>\n  # bind (wildcards codesys filename)<br>\n  find-file(\"/root/Scratch.thy\")<br>\n  # bind (dir file-count line end-of-options file-p arg tem)<br>\n  command-line-1()<br>\n  # bind (command-line-args-left)<br>\n  command-line()<br>\n  # (condition-case ... . ((t (byte-code \"    Â\" [error-data data nil] 1))))<br>\n  # bind (error-data)<br>\n  normal-top-level()<br>\n  # (condition-case ... . error)<br>\n  # (catch top-level ...)</p>\n<p>___________________________________________________________<br>\nYahoo! Answers - Got a question? Someone out there knows the answer. Try it<br>\nnow.<br>\n<a href=\"http://uk.answers.yahoo.com/\">http://uk.answers.yahoo.com/</a></p>",
        "id": 294051451,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660819666
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Fri, 31 Aug 2007, JanuGerman wrote:</p>\n<blockquote>\n<p>I am stuck in Isabelle installation. I was using Isabelle from IsoMorph, <br>\nfrom quite time, but its too slow.</p>\n</blockquote>\n<p>IIRC IsaMorph uses SML/NJ, which is a bit sluggish.  We get best results <br>\nwith Poly/ML, either the patched version version 4.1.4 (see<br>\n<a href=\"http://isabelle.in.tum.de/installation.html\">http://isabelle.in.tum.de/installation.html</a>) or more recent 5.0 (see <br>\n<a href=\"http://www4.in.tum.de/~wenzelm/test/Isabelle2005-polyml-5.0.tar.gz\">http://www4.in.tum.de/~wenzelm/test/Isabelle2005-polyml-5.0.tar.gz</a>).</p>\n<blockquote>\n<p>I tried Installing Isabelle many times, but always, got this error.</p>\n<p>The error is as follows: (1) (file-mode-spec/warning) Error in File mode <br>\nspecification: Cannot open load file: \"executable\"</p>\n</blockquote>\n<p>This is just one of the usual problems of getting Proof General work with <br>\na certain version of Emacs.  See <br>\n<a href=\"http://isabelle.in.tum.de/installation.html\">http://isabelle.in.tum.de/installation.html</a> for some further hints.  In <br>\nparticular, you should first try to get the basic isabelle-process <br>\nrunning.</p>\n<p>Makarius</p>",
        "id": 294051475,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660819676
    },
    {
        "content": "<p>From: JanuGerman &lt;<a href=\"mailto:doublemalam@yahoo.co.uk\">doublemalam@yahoo.co.uk</a>&gt;<br>\nThanks for your response.</p>\n<p>Unfortunately, still i am not able to run Isabelle.</p>\n<p>As you suggested to run the basic Isabelle process, so that is done by using the following command</p>\n<p>/usr/local/Isabelle/bin/isabelle-process -I</p>\n<p>This command works perfectly, and it means the Isabelle process is running perfectly.</p>\n<p>I tried to get the latest version but still the same problem.</p>\n<p>I think so, it is a compatibilty problem with XEmacs, Would you kindly suggest me a compatible version, of XEMACS, or some installation steps in this regard.</p>\n<p>Regards,</p>\n<p>----- Original Message ----<br>\nFrom: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nTo: JanuGerman &lt;<a href=\"mailto:doublemalam@yahoo.co.uk\">doublemalam@yahoo.co.uk</a>&gt;<br>\nCc: <a href=\"mailto:isabelle-users@cl.cam.ac.uk\">isabelle-users@cl.cam.ac.uk</a><br>\nSent: Friday, 31 August, 2007 9:45:46 AM<br>\nSubject: Re: [isabelle] Isabelle Installation</p>\n<p>On Fri, 31 Aug 2007, JanuGerman wrote:</p>\n<blockquote>\n<p>I am stuck in Isabelle installation. I was using Isabelle from IsoMorph, <br>\nfrom quite time, but its too slow.</p>\n</blockquote>\n<p>IIRC IsaMorph uses SML/NJ, which is a bit sluggish.  We get best results <br>\nwith Poly/ML, either the patched version version 4.1.4 (see<br>\n<a href=\"http://isabelle.in.tum.de/installation.html\">http://isabelle.in.tum.de/installation.html</a>) or more recent 5.0 (see <br>\n<a href=\"http://www4.in.tum.de/~wenzelm/test/Isabelle2005-polyml-5.0.tar.gz\">http://www4.in.tum.de/~wenzelm/test/Isabelle2005-polyml-5.0.tar.gz</a>).</p>\n<blockquote>\n<p>I tried Installing Isabelle many times, but always, got this error.</p>\n<p>The error is as follows: (1) (file-mode-spec/warning) Error in File mode <br>\nspecification: Cannot open load file: \"executable\"</p>\n</blockquote>\n<p>This is just one of the usual problems of getting Proof General work with <br>\na certain version of Emacs.  See <br>\n<a href=\"http://isabelle.in.tum.de/installation.html\">http://isabelle.in.tum.de/installation.html</a> for some further hints.  In <br>\nparticular, you should first try to get the basic isabelle-process <br>\nrunning.</p>\n<p>Makarius</p>\n<p>___________________________________________________________ <br>\nWant ideas for reducing your carbon footprint? Visit Yahoo! For Good  <a href=\"http://uk.promotions.yahoo.com/forgood/environment.html\">http://uk.promotions.yahoo.com/forgood/environment.html</a></p>",
        "id": 294051549,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660819690
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThis depends on your OS platform.  Usually a self-compile of the stable <br>\nbranch of xemacs works (using mule and sumo).</p>\n<p>You may also try GNU emacs, by telling Isabelle about it via option -p of <br>\nthe interface script, or setting PROOF_GENERAL_OPTIONS in etc/settings.</p>\n<p>Makarius</p>",
        "id": 294051551,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660819690
    }
]