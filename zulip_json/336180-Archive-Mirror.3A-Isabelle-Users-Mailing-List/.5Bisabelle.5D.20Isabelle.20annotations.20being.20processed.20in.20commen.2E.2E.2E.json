[
    {
        "content": "<p>From: Rafal Kolanski &lt;<a href=\"mailto:rafalk@cse.unsw.edu.au\">rafalk@cse.unsw.edu.au</a>&gt;<br>\nDear Isabelle Users,</p>\n<p>I have found that when including an ML file with:<br>\n    \"use blah.sml\"<br>\nif I have an annotation like @{const_name \"doesnt_exist\"} in a <br>\nstatement, then commenting it out doesn't stop the \"unknown constant\" <br>\nerror when processing the ML file!</p>\n<p>Is this behaviour intentional? Is there any way to actually comment out <br>\na block of code AND its annotations?</p>\n<p>Yours Sincerely,</p>\n<p>Rafal Kolanski.</p>",
        "id": 294072121,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660827554
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nThe reason is that antiquotations are processed separately. I'm not sure<br>\nif there is a better solution, but I always \"disable\" them individually<br>\nby removing the @ or putting a space after it. That does it. Not very<br>\nelegant.</p>\n<p>Tobias</p>\n<p>Rafal Kolanski schrieb:</p>",
        "id": 294072183,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660827576
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Thu, 12 Feb 2009, Rafal Kolanski wrote:</p>\n<blockquote>\n<p>I have found that when including an ML file with:<br>\n  \"use blah.sml\"</p>\n</blockquote>\n<p>BTW, Isabelle/ML files should always be .ML -- not .sml</p>\n<blockquote>\n<p>if I have an annotation like @{const_name \"doesnt_exist\"} in a statement,<br>\nthen commenting it out doesn't stop the \"unknown constant\" error when<br>\nprocessing the ML file!</p>\n<p>Is this behaviour intentional? Is there any way to actually comment out a<br>\nblock of code AND its annotations?</p>\n</blockquote>\n<p>The behaviour is just a consequence of how ML antiquotations are done (not <br>\n\"annotations\"): as a preprecessing step before actual ML processing. In <br>\nparticular, the antiquotation layer does not understand ML syntax, so <br>\nthere is now chance to treat them differently inside ML comments.</p>\n<p>At a later stage, antiquotations might be more tightly integrated with the <br>\nML syntax.  The motivation is more substantial though: allowing to write <br>\nML patterns and expressions containing variables, e.g something like f <br>\n@{term \"x + y\"}</p>\n<p>As a consequence of that future refinement, comments might be treated <br>\ndifferently as well.</p>\n<p>Makarius</p>",
        "id": 294073003,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660827843
    }
]