[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt;<br>\nHi all,</p>\n<p>I have a problem with the latex-document generated by Isabelle.<br>\n    No space is put in between inner-syntax blocks, i.e. if I have the <br>\nfollowing:</p>\n<p>lemma<br>\n  assumes \"P x\" \"f x\"</p>\n<p>it will look in latex like:<br>\n  lemma<br>\n    assumes P x f x</p>\n<p>That can be very confusing! Is there some tuning option to put some <br>\nextra space, or perhaps a \";\\ \\ \" in between such lists.<br>\nThe only workaround I know up to now is to put each such inner-syntax <br>\nblock in its own line, what makes the proofs more unreadable at editing <br>\ntime.</p>\n<p>Best and thanks for any hints,<br>\n  Peter</p>",
        "id": 294071335,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660827284
    },
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:brianh@cs.pdx.edu\">brianh@cs.pdx.edu</a>&gt;<br>\nHi Peter,</p>\n<p>One possible workaround would be to separate your assumptions using \"and\":</p>\n<p>lemma<br>\n  assumes \"P x\" and \"f x\"</p>\n<p>However, if you are using named assumptions, this may cause problems.</p>\n<p>For example, with<br>\nassumes A: \"P x\" \"f x\"</p>\n<p>the local theorem \"A\" refers to the list of both assumptions, while with<br>\nassumes A: \"P x\" and \"f x\"</p>\n<p>the local theorem \"A\" refers only to \"P x\".</p>\n<p>Hope this helps,</p>\n<ul>\n<li>Brian</li>\n</ul>\n<p>Quoting Peter Lammich &lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt;:</p>",
        "id": 294071347,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660827290
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt;<br>\nBrian Huffman wrote:<br>\nI am using named assumptions in most cases, I'm afraid, so this is<br>\n    no option for me, as I would have to change too many existing proofs.</p>\n<p>Moreover, I have a large base of existing proof scripts, so any <br>\nautomatic solution with<br>\n  as few changes to the scripts as possible would be the best.</p>\n<p>Many thanks for the hint,<br>\n  Peter</p>\n<p>p.s. At this point, I'm thinking about running a script over my .thy - <br>\nfiles to put all those assumptions<br>\n    in separate lines, each. However, I think, this will make the proofs <br>\nless readable in PG.</p>",
        "id": 294071359,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660827297
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe problem here is that the document preparation system does not really <br>\nunderstand the structure of the text -- it is basically just a mock-up, <br>\nbut few people have noticed in the past decade :-)</p>\n<p>There are some possibilities nonetheless:</p>\n<p>(1) Write your sources with extra space between adjacent propositions, <br>\n  i.e. assumes \"P x\"  \"f x\"; this is what I usually do, unless the <br>\n  exdplicit 'and' solution is possible.</p>\n<p>(2) Use a LaTeX style that does not hide the quotes.  This is just a <br>\n  matter of definining \\isachardoublequoteopen and <br>\n  \\isachardoublequoteclose in a suitable way; see the examples in <br>\n  isabelle.sty</p>\n<p>Of course you can render the quotes in any way you see fit, e.g. funny <br>\n  parentheses.</p>\n<p>(3) Run perl over the generated LaTeX sources to replace adjacent <br>\n  {\\isachardoublequoteclose} and {\\isachardoublequoteopen} -- a bit <br>\n  fragile, but often works for individual papers, theses etc. that are <br>\n  prepared with special care.</p>\n<p>Makarius</p>",
        "id": 294071377,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660827302
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt;<br>\nMakarius wrote:<br>\nThank you for the hints. I had a look at the generated tex-sources <br>\ntonight, and finally<br>\ndid an approach that is similar to the perl-script, but using tex.<br>\nI added to the root.tex, just after the style is defined:</p>\n<p>% Tweaks<br>\n\\newcounter{TTStweak_tag}<br>\n\\setcounter{TTStweak_tag}{0}<br>\n\\newcommand{\\setTTS}{\\setcounter{TTStweak_tag}{1}}<br>\n\\newcommand{\\resetTTS}{\\setcounter{TTStweak_tag}{0}}<br>\n\\newcommand{\\insertTTS}{\\ifnum\\value{TTStweak_tag}=1 \\ \\ \\ \\fi}</p>\n<p>\\renewcommand{\\isakeyword}[1]{\\resetTTS\\emph{\\bf\\def\\isachardot{.}\\def\\isacharunderscore{\\isacharunderscorekeyword}\\def\\isacharbraceleft{\\{}\\def\\isacharbraceright{\\}}#1}}<br>\n\\renewcommand{\\isachardoublequoteopen}{\\insertTTS}<br>\n\\renewcommand{\\isachardoublequoteclose}{\\setTTS}<br>\n\\renewcommand{\\isanewline}{\\mbox{}\\par\\mbox{}\\resetTTS}</p>\n<p>(Where TTStweak is just some arbitrarily chosen name without any meaning).</p>\n<p>This works for now, however I'm not a tex-expert, and I think there <br>\nshould  be nicer ways.</p>\n<p>Probably, I could modify the sty - file directly, however I will have to <br>\nfigure out where I have to place the modified<br>\nisabelle.sty file, in order not to get overwritten by the make-script.</p>\n<p>regards,<br>\n  Peter</p>",
        "id": 294071513,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660827352
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nSince the overall arrangement of the document sources is done in root.tex, <br>\nwhich is under your control, you can just place your modification there <br>\nafter the initial \\usepackage commands.</p>\n<p>Makarius</p>",
        "id": 294071528,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660827358
    }
]