[
    {
        "content": "<p>From: Ken Kubota &lt;<a href=\"mailto:mail@kenkubota.de\">mail@kenkubota.de</a>&gt;</p>\n<blockquote>\n<p>Am 15.08.2018 um 07:46 schrieb Michal Wallace &lt;<a href=\"mailto:michal.wallace@gmail.com\">michal.wallace@gmail.com</a>&gt;:</p>\n</blockquote>\n<blockquote>\n<p>for your 60000 elementary steps....</p>\n<p>Some people actually do want that. One thing that draws people to<br>\n<a href=\"http://metamath.org\">metamath.org</a>,<br>\nfor example, is that every single step is shown... The only rules are<br>\nsyntax definition and substitution, and the people that<br>\nlike metamath consider that an extremely important feature. On the other<br>\nhand, they have the good taste to break each<br>\nproof down into small chunks, so you rarely (?) see a proof that's more<br>\nthan a screenful of text.</p>\n</blockquote>\n<p>It would be desirable to have a mode in Isabelle in which for an automated proof<br>\neach single step is made explicit and displayed afterwards (or saved to disk in a file)<br>\nwith full type information.<br>\nIt shouldn't be too difficult to implement both modes, one without tracking<br>\n(for performance), and one with tracking (allowing one to follow each single<br>\nstep).</p>\n<blockquote>\n<p>You seem to be feeling a lot of frustration with Isabelle. I can't say I'm<br>\nnot feeling similar frustrations, but<br>\nin my experience, that frustration is just a thing that happens when you<br>\ntry to really understand any<br>\nbig complicated system. The way through it is to be patient, ask questions,<br>\nexperiment, study what<br>\nother people have done (or what other people have <em>asked</em>, either here or<br>\non stack overflow), and<br>\njust trust that eventually things that were confusing at first will<br>\neventually start to make sense.</p>\n</blockquote>\n<p>This isn't the case for HOL (HOL4). With the HOL handbook [Gordon and Melham, 1993]<br>\n(and an online tutorial) I was able to fully understand and work with the system<br>\nwithin 24 hours.</p>\n<p>Generally speaking, with a clear and concise presentation of the concepts and the logic(s)<br>\nwithin a good documentation (and not many scattered papers) the principles of any large<br>\nsystem can be explained properly.</p>\n<p>Maybe the Isabelle team should consider asking Andy Pitts to write a logic part<br>\nfor Isabelle and Isabelle/HOL (as soon as no major changes are expected anymore)<br>\nwith the same brilliance like that of the logic part of the HOL handbook.</p>\n<blockquote>\n<p>Also... My impression (and I could be wrong about this) is that most of the<br>\nusers of Isabelle are not just<br>\ngoing it alone, but are academics working closely with and being taught by<br>\nother people who are<br>\nintimately familiar with the system already. Nobody's written a \"Learn You<br>\nan Isar for Great Good\" and<br>\nthere's not (yet) been a huge influx of curious outsiders blazing trails<br>\nfor everyone else. So that<br>\nmeans people like you and me (who seem to be sometimes frustrated<br>\noutsiders) have on opportunity<br>\nto be the trailblazers -- the ones who subject ourselves to getting lost<br>\nfor a while, knowing<br>\nthat when we eventually do find our way, we can make it easier for the next<br>\nperson.</p>\n</blockquote>\n<p>This is exactly what I wrote some time ago on this list (concerning Isabelle,<br>\nnot just Isar).</p>\n<p>The theoretical foundation ([Paulson, 1988]) is excellent, and Isabelle is an<br>\nimpressive software, but the documentation is a nightmare. In it, logical<br>\nfoundations are mixed up with technical details. It has many references<br>\nto articles outside of the documentation (at least in earlier versions), forcing<br>\none to struggle one's way through a jungle of numerous articles. I believe<br>\nit took me years just to find out that [Paulson, 1988] is the theoretical foundation.</p>\n<p>The documentation should enable one to work with the software independently,<br>\nbut in fact it is a supplementary reference for \"academics working closely with<br>\nand being taught by other people who are intimately familiar with the system<br>\nalready\".</p>\n<p>For references, please see: <a href=\"http://doi.org/10.4444/100.111\">http://doi.org/10.4444/100.111</a></p>\n<hr>\n<p>Ken Kubota<br>\n<a href=\"http://doi.org/10.4444/100\">http://doi.org/10.4444/100</a></p>",
        "id": 294740192,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661191239
    },
    {
        "content": "<p>From: Ken Kubota &lt;<a href=\"mailto:mail@kenkubota.de\">mail@kenkubota.de</a>&gt;<br>\nCarrying out proofs in Isabelle can be quite easy, but this is not the point.</p>\n<p>A logician wants to know what actually happens below the surface,<br>\ni.e., what the logical concepts (foundations) are, and how the formulae<br>\nare represented internally (with full details such as type information).</p>\n<p>For example, in order to avoid the inconsistency as presented on p. 2 of<br>\n<a href=\"http://andreipopescu.uk/pdf/compr_IsabelleHOL_cons.pdf\">http://andreipopescu.uk/pdf/compr_IsabelleHOL_cons.pdf</a><br>\nand quoted at<br>\n<a href=\"http://owlofminerva.net/kubota/r0-faq/\">http://owlofminerva.net/kubota/r0-faq/</a><br>\nan additional check is made at run-time.</p>\n<p>If I'm not mistaken, the current Isabelle version implements a run-time check on<br>\nwhether a theory is well-formed based on the dependency relation<br>\nas defined on p. 8 in the paper linked above. (In other words, it is verified<br>\nthat there are no circular definitions.)</p>\n<p>Such an intricate logical concept - which differs from other existing systems -<br>\nshould be mentioned in the manual, and preferably in a separate part on the logic<br>\n(in this case Isabelle/HOL).</p>\n<p>Usually, avoiding inconsistencies is the task of the type system.<br>\nAdditionally, in HOL, some extensions have restrictions on definitions<br>\n(see, e.g., [Gordon and Melham, 1993, p. 220, condition (iii)], or p. 33 of the online version<br>\nat <a href=\"http://freefr.dl.sourceforge.net/project/hol/hol/kananaskis-11/kananaskis-11-logic.pdf\">http://freefr.dl.sourceforge.net/project/hol/hol/kananaskis-11/kananaskis-11-logic.pdf</a> ),<br>\nwhich are verified prior to accepting the definition and concern only the definition itself,<br>\nnot the whole theory.</p>\n<p>Performing run-time checks (after the definitions were accepted) on the whole theory<br>\nis something completely different and should be announced prominently.</p>\n<p>But this isn't the case, as far as I can see.</p>\n<p>For references, please see: <a href=\"http://doi.org/10.4444/100.111\">http://doi.org/10.4444/100.111</a></p>\n<hr>\n<p>Ken Kubota<br>\n<a href=\"http://doi.org/10.4444/100\">http://doi.org/10.4444/100</a></p>",
        "id": 294740290,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661191274
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nLet me just add that one can also contribute to this envisaged AFP entry \"Number <br>\nTheory Miscellany\" once it is in place, not just now. The same is in principle <br>\ntrue for any AFP entry, although most of them don't have this library character, <br>\nand of course you have to liaise with their authors first.</p>\n<p>Tobias<br>\n<a href=\"/user_uploads/14278/MJ8EC6d3CZV6gm3h0xIgdcUS/smime.p7s\">smime.p7s</a></p>",
        "id": 294740860,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661191477
    }
]