[
    {
        "content": "<p>From: Gerwin Klein &lt;<a href=\"mailto:Gerwin.Klein@nicta.com.au\">Gerwin.Klein@nicta.com.au</a>&gt;<br>\nAs promised, part 2 of the Isabelle style guide:</p>\n<p><a href=\"http://proofcraft.org/blog/isabelle-style-part2.html\">http://proofcraft.org/blog/isabelle-style-part2.html</a></p>\n<p>Feedback for the first part was great, keep it coming!</p>\n<p>Enjoy,<br>\nGerwin</p>\n<hr>\n<p>The information in this e-mail may be confidential and subject to legal professional privilege and/or copyright. National ICT Australia Limited accepts no liability for any damage caused by this email or its attachments.</p>",
        "id": 294642097,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661162529
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nFor the context section, maybe mention bundles? You may need to open a<br>\ncontext with the individualized setup multiple times.</p>\n<p>-- Lars</p>",
        "id": 294642119,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661162542
    },
    {
        "content": "<p>From: Gerwin Klein &lt;<a href=\"mailto:Gerwin.Klein@nicta.com.au\">Gerwin.Klein@nicta.com.au</a>&gt;<br>\nExcellent point. Have updated the text.</p>\n<p>Cheers,<br>\nGerwin</p>\n<hr>\n<p>The information in this e-mail may be confidential and subject to legal professional privilege and/or copyright. National ICT Australia Limited accepts no liability for any damage caused by this email or its attachments.</p>",
        "id": 294642149,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661162550
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;</p>\n<ul>\n<li>\n<p>\"Isabelle supports literal proofs\": you probably mean \"literate proofs\".<br>\n   This should give most people an idea about the point of it, although the<br>\n   official slogan talks about \"proof documents\".</p>\n<p>You could also add a note that the SideKick plugin of Isabelle/jEdit<br>\n helps getting an overview of a text that is nicely structured with<br>\n chapter, section, subsection etc.</p>\n</li>\n<li>\n<p>CamelCaseNames for datatype constructors: around 2006/2007 this was<br>\n   discontinued as canonical form in Isabelle/Pure/ML and replaced by<br>\n   Camel_Case_Names with_proper_underscore.  Both the old and new forms are<br>\n   widely used, though, since renaming constructors in ML is always a bit<br>\n   dangerous (but not in HOL).</p>\n</li>\n<li>\n<p>About bad \"definition f\" and \"This will reserve the name f and make it<br>\n   unusable for variables\".  Having a constant called \"f\" in the global<br>\n   context is certainly bad, but there should always be a way to produce a<br>\n   free variable of that name, by using explicit \"fixes\", \"for\"  or \"!!f.<br>\n   ...\" in closed propositions.  Isar has been designed like that from the<br>\n   very start, although surprisingly many people don't know that --<br>\n   especially when building tools that ignore the concepts of<br>\n   eigen-contexts of statements.</p>\n</li>\n<li>\n<p>\"typed as \\open and \\close in jEdit\": This should be Isabelle/jEdit,<br>\n   since jEdit does not know anything about it.  The canonical shortcut in<br>\n   the Prover IDE works via ASCII backquote, although that is sometimes<br>\n   hard to find on strange keyboards (e.g. German Macintosh).  At some<br>\n   point, the canonical key for cartouches might become \" (double-quote),<br>\n   when terms are accepted in that form as well.</p>\n<p>Makarius</p>\n</li>\n</ul>",
        "id": 294642171,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661162562
    },
    {
        "content": "<p>From: Gerwin Klein &lt;<a href=\"mailto:Gerwin.Klein@nicta.com.au\">Gerwin.Klein@nicta.com.au</a>&gt;</p>\n<blockquote>\n<p>On 31.05.2015, at 07:00, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n<p>On Sat, 30 May 2015, Gerwin Klein wrote:</p>\n<blockquote>\n<p>As promised, part 2 of the Isabelle style guide:</p>\n<p><a href=\"http://proofcraft.org/blog/isabelle-style-part2.html\">http://proofcraft.org/blog/isabelle-style-part2.html</a></p>\n<p>Feedback for the first part was great, keep it coming!</p>\n</blockquote>\n<ul>\n<li>\"Isabelle supports literal proofs\": you probably mean \"literate proofs”.</li>\n</ul>\n</blockquote>\n<p>Thanks for catching that. This is indeed precisely what I meant to say. Already updated.</p>\n<blockquote>\n<p>You could also add a note that the SideKick plugin of Isabelle/jEdit<br>\n helps getting an overview of a text that is nicely structured with<br>\n chapter, section, subsection etc.</p>\n</blockquote>\n<p>Good idea.</p>\n<blockquote>\n<ul>\n<li>CamelCaseNames for datatype constructors: around 2006/2007 this was<br>\n discontinued as canonical form in Isabelle/Pure/ML and replaced by<br>\n Camel_Case_Names with_proper_underscore.  Both the old and new forms are<br>\n widely used, though, since renaming constructors in ML is always a bit<br>\n dangerous (but not in HOL).</li>\n</ul>\n</blockquote>\n<p>I still like the pre 2006 style, but I should mention both, yes.</p>\n<blockquote>\n<ul>\n<li>About bad \"definition f\" and \"This will reserve the name f and make it<br>\n unusable for variables\".  Having a constant called \"f\" in the global<br>\n context is certainly bad, but there should always be a way to produce a<br>\n free variable of that name, by using explicit \"fixes\", \"for\"  or \"!!f.<br>\n ...\" in closed propositions.  Isar has been designed like that from the<br>\n very start, although surprisingly many people don't know that --<br>\n especially when building tools that ignore the concepts of<br>\n eigen-contexts of statements.</li>\n</ul>\n</blockquote>\n<p>I guess I should clarify that more, yes. There are certainly plenty of options to still use the name f as a parameter or variable, but you usually need to do something, and I’ve often seen people confused by it, esp when it’s only in a PDF without syntax highlighting.</p>\n<blockquote>\n<ul>\n<li>\"typed as \\open and \\close in jEdit\": This should be Isabelle/jEdit,<br>\n since jEdit does not know anything about it.  The canonical shortcut in<br>\n the Prover IDE works via ASCII backquote, although that is sometimes<br>\n hard to find on strange keyboards (e.g. German Macintosh).</li>\n</ul>\n</blockquote>\n<p>I managed to miss that. Way nicer to type! Will add.</p>\n<p>Cheers,<br>\nGerwin</p>\n<hr>\n<p>The information in this e-mail may be confidential and subject to legal professional privilege and/or copyright. National ICT Australia Limited accepts no liability for any damage caused by this email or its attachments.</p>",
        "id": 294642234,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661162593
    }
]