[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Mon, 20 Jan 2014, Christian Sternagel wrote:</p>\n<blockquote>\n<p>isabelle jedit -d .<br>\n isabelle build -d . -b FOO</p>\n<p>2) Now I was wondering about the following: For users that start <br>\nIsabelle/jEdit via clicking on an icon, which is I guess equivalent to doing</p>\n<p>$ISABELLE_HOME/Isabelle2013-2</p>\n<p>on a console. How are they expected to access FOO as default logic?</p>\n</blockquote>\n<p>The command lines of \"isabelle jedit\" and \"isabelle build\" coincide on <br>\nsome options to manage the session name space and select logic images. <br>\nSee also the description of \"isabelle build\" in the system manual. It has <br>\nthe following additional explanation of option -d:</p>\n<p>Any session root directory may refer recursively to further directories<br>\n   of the same kind, by listing them in a catalog file ROOTS line-by-line.<br>\n   This helps to organize large collections of session specifications, or<br>\n   to make -d command line options persistent (say within<br>\n   $ISABELLE_HOME_USER/ROOTS).</p>\n<blockquote>\n<p>Maybe the logic selector should provide all images that are present in <br>\nISABELLE_PATH ?</p>\n</blockquote>\n<p>The ISABELLE_PATH does not account for the session name space, it is <br>\nmerely a way to find potential heap images in the file-system.  Note that <br>\nthis is in contrast to very ancient modes of operation of <br>\nisabelle-process, isabelle findlogics, and Proof General.</p>\n<blockquote>\n<p>But then again, how are GUI-only users expected to build FOO in the <br>\nfirst place?</p>\n</blockquote>\n<p>By using $ISABELLE_HOME_USER/ROOTS mentioned above.  In principle the <br>\nProver IDE should provide more direct access to ROOTS at some point, but <br>\nthis is not implemented yet.</p>\n<p>I get myself occasionally confused about the new toplevel application <br>\nwrappers, which are available on all platforms in Isabelle2013-2.  Since I <br>\nam rarely in the privileged situation to use Isabelle as regular user, I <br>\nusually have old-fashioned \"isabelle jedit\" invocations on the <br>\ncommand-line, with slightly different semantics.</p>\n<blockquote>\n<p>Maybe it would be good to have something like the former \"build_dialog\" <br>\nthat can be started from within Isabelle/jEdit?</p>\n</blockquote>\n<p>The build_dialog was just an intermediate thing, to help a hypothecial <br>\nProof General maintainer to do what Isabelle/jEdit also does by itself via <br>\nisabelle.Build in Isabelle/Scala.  Since no Proof General maintainer <br>\nshowed up in such a long time, I have removed the \"build_dialog\" shell <br>\nscript wrapper for Isabelle2013-2.</p>\n<p>Makarius</p>",
        "id": 294263149,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660915126
    },
    {
        "content": "<p>From: Christian Sternagel &lt;<a href=\"mailto:c.sternagel@gmail.com\">c.sternagel@gmail.com</a>&gt;<br>\nDear all,</p>\n<p>1) First a trivial observation: When I start Isabelle/jEdit via</p>\n<p>isabelle jedit -d .</p>\n<p>and the current directory contains a ROOT file with a session FOO, then <br>\nthe logic selector in the theory panel will contain the session FOO.</p>\n<p>If I do the same via</p>\n<p>isabelle jedit</p>\n<p>FOO is not there, which is expected.</p>\n<p>Now, after doing</p>\n<p>isabelle build -d . -b FOO</p>\n<p>there is the heap image FOO in my ~/.isabelle/Isabelle2013-2/heaps/... <br>\nbut nevertheless the logic selector will not contain FOO when starting <br>\njEdit via</p>\n<p>isabelle jedit</p>\n<p>Again, this is as expected.</p>\n<p>2) Now I was wondering about the following: For users that start <br>\nIsabelle/jEdit via clicking on an icon, which is I guess equivalent to doing</p>\n<p>$ISABELLE_HOME/Isabelle2013-2</p>\n<p>on a console. How are they expected to access FOO as default logic? <br>\nMaybe the logic selector should provide all images that are present in <br>\nISABELLE_PATH ? But then again, how are GUI-only users expected to build <br>\nFOO in the first place? Maybe it would be good to have something like <br>\nthe former \"build_dialog\" that can be started from within Isabelle/jEdit?</p>\n<p>cheers</p>\n<p>chris</p>",
        "id": 294267518,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660916060
    },
    {
        "content": "<p>From: \"Elsa L. Gunter\" &lt;<a href=\"mailto:egunter@illinois.edu\">egunter@illinois.edu</a>&gt;<br>\nDear Makarius,<br>\n   Basic question: in Isabelle2014 (GUI), how do I start with a heap I <br>\nhave built, instead of HOL?</p>\n<p>In Isabelle2014, if I build a heap with say</p>\n<p>isabelle build -d '$AFP/Kleene_Algebra' -b Kleene_Algebra</p>\n<p>or</p>\n<p>isabelle build -s -d '$AFP/Kleene_Algebra' -b Kleene_Algebra</p>\n<p>this puts a heap in the expected place(s).  However, I am clueless as to <br>\nhow to start Isabelle/jEdit with such a heap.  If I start up the <br>\nIsabelle/jEdit GUI,<br>\nKleene_Algebra does not appear as a choice for logic in the pull-down <br>\nmenu in the Theories panell (although I believe it use to in an older <br>\nversion).   If I try</p>\n<p>isabelle jedit -l Kleene_Algebra</p>\n<p>I get a box with</p>\n<blockquote>\n<p>Undefined session(s): \"Kleene_Algebra\"<br>\nThis is despite having /Users/elsa/svn/AFP in my<br>\n~/.isabelle/Isabelle2014/etc/components<br>\nfile.   Below you quote a paragraph from system.pdf suggesting that <br>\nusing ROOTS in the $ISABELLE_HOME_USER directory will somehow address <br>\nthis.  I'm not at all sure what this has to do with the -d flag for the <br>\nisabelle executable, which allows the user to specify a directory for <br>\nfinding the ROOT file for a session.  More to the point, I do not know <br>\nhow to use ROOTS.  The ROOTS file in $ISABELLE_HOME contains a <br>\ncollection of path fragments.  I gather the sessions described in the <br>\nROOT files in those directories are made available as the choices of <br>\nstarting logic (?) for an Isabelle session.  But there are way more <br>\n\"logics\" than heaps, so I'm not even sure if this is particularly <br>\nrelevant   Are these paths interpreted relative to the location of ROOTS,<br>\n$ISABELLE_HOME, the $ISABELLE_PATH, or what?  If I put <br>\n'$AFP/Kleene_Algebra' in ROOTS, I get<br>\nIllegal character \"$\" in path element specification \"'$AFP\"<br>\nThe error(s) above occurred in \"'$AFP/Kleene_Algebra'\"<br>\nThe error(s) above occurred in session catalog <br>\n\"/Users/elsa/.isabelle/Isabelle2014/ROOTS\"<br>\nIf I put an absolute path into ROOTS in $ISABELLE_HOME_USER, then it <br>\noffers it to me as a choice of Kleene_Algebra in the logics, but <br>\nchoosing it seems to have no real effect; it still loads the theories in <br>\nKleene_Algebra over again, apparently from Main.  For Kleene_Algebra, we <br>\nare only talking about a few theories of relatively modest size. <br>\nHowever, I have need of half a dozen or so theories from AFP, including <br>\nJinjaThreads,  as well as a few home-grown libraries and I really need <br>\nnot to have to rebuild all that every time I try to get some work done <br>\nin Isabelle (or even just try to continue the very painful fight to <br>\nbring my work up to date with Isabelle 2014).</p>\n</blockquote>\n<p>---Elsa</p>\n<p>On 1/22/14 10:42 AM, Makarius wrote:</p>\n<blockquote>\n<p>On Mon, 20 Jan 2014, Christian Sternagel wrote:</p>\n<blockquote>\n<p>isabelle jedit -d .<br>\n isabelle build -d . -b FOO</p>\n<p>2) Now I was wondering about the following: For users that start <br>\nIsabelle/jEdit via clicking on an icon, which is I guess equivalent <br>\nto doing</p>\n<p>$ISABELLE_HOME/Isabelle2013-2</p>\n<p>on a console. How are they expected to access FOO as default logic?</p>\n</blockquote>\n<p>The command lines of \"isabelle jedit\" and \"isabelle build\" coincide on <br>\nsome options to manage the session name space and select logic images. <br>\nSee also the description of \"isabelle build\" in the system manual. It <br>\nhas the following additional explanation of option -d:</p>\n<p>Any session root directory may refer recursively to further directories<br>\n  of the same kind, by listing them in a catalog file ROOTS line-by-line.<br>\n  This helps to organize large collections of session specifications, or<br>\n  to make -d command line options persistent (say within<br>\n  $ISABELLE_HOME_USER/ROOTS).</p>\n<blockquote>\n<p>Maybe the logic selector should provide all images that are present <br>\nin ISABELLE_PATH ?</p>\n</blockquote>\n<p>The ISABELLE_PATH does not account for the session name space, it is <br>\nmerely a way to find potential heap images in the file-system. Note <br>\nthat this is in contrast to very ancient modes of operation of <br>\nisabelle-process, isabelle findlogics, and Proof General.</p>\n<blockquote>\n<p>But then again, how are GUI-only users expected to build FOO in the <br>\nfirst place?</p>\n</blockquote>\n<p>By using $ISABELLE_HOME_USER/ROOTS mentioned above.  In principle the <br>\nProver IDE should provide more direct access to ROOTS at some point, <br>\nbut this is not implemented yet.</p>\n<p>I get myself occasionally confused about the new toplevel application <br>\nwrappers, which are available on all platforms in Isabelle2013-2.  <br>\nSince I am rarely in the privileged situation to use Isabelle as <br>\nregular user, I usually have old-fashioned \"isabelle jedit\" <br>\ninvocations on the command-line, with slightly different semantics.</p>\n<blockquote>\n<p>Maybe it would be good to have something like the former <br>\n\"build_dialog\" that can be started from within Isabelle/jEdit?</p>\n</blockquote>\n<p>The build_dialog was just an intermediate thing, to help a hypothecial <br>\nProof General maintainer to do what Isabelle/jEdit also does by itself <br>\nvia isabelle.Build in Isabelle/Scala.  Since no Proof General <br>\nmaintainer showed up in such a long time, I have removed the <br>\n\"build_dialog\" shell script wrapper for Isabelle2013-2.</p>\n<p>Makarius</p>\n</blockquote>",
        "id": 294322685,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660927447
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Wed, 31 Dec 2014, Elsa L. Gunter wrote:</p>\n<blockquote>\n<p>Basic question: in Isabelle2014 (GUI), how do I start with a heap I have <br>\nbuilt, instead of HOL? However, I am clueless as to how to start <br>\nIsabelle/jEdit with such a heap.</p>\n</blockquote>\n<p>Building heaps (or \"logics\") yourself is sometimes needed in batch mode, <br>\nbut normally you don't do it manually when working with PIDE.  You just <br>\ntell Isabelle/jEdit where to find ROOT or ROOTS files via option \"-d DIR\", <br>\nand it will allow you to select additional sessions in the GUI or via <br>\noption \"-l SESSION\".</p>\n<blockquote>\n<p>Below you quote a paragraph from system.pdf suggesting that using ROOTS <br>\nin the $ISABELLE_HOME_USER directory will somehow address this.</p>\n</blockquote>\n<p>The ROOTS files allow to make -d options (of isabelle build or isabelle <br>\njedit) persistent. The shortest answer to all your questions is to have <br>\n$ISABELLE_HOME_USER/ROOTS with a line like this</p>\n<p>$AFP</p>\n<p>without any extra quotes or spaces -- this is not a bash script, just a <br>\ntext file with lines to be taken literally.</p>\n<p>I principle, AFP as a \"component\" could do this for you, but it refrains <br>\nfrom it by default, since its session name space is quite large, and would <br>\naffect important maintenance operations like \"isabelle build -a\".</p>\n<p>Makarius</p>\n<hr>\n<p><a href=\"http://stop-ttip.org\">http://stop-ttip.org</a></p>\n<hr>",
        "id": 294324450,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660928048
    }
]