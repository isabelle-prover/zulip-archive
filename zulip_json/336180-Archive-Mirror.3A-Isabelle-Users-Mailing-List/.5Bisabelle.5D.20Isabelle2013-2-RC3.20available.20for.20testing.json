[
    {
        "content": "<p>From: bnord &lt;<a href=\"mailto:bnord01@gmail.com\">bnord01@gmail.com</a>&gt;<br>\nHi Makarius,</p>\n<p>I've been working a few days with RC3 now. Even if you say \"As long as <br>\nit comes back eventually, it is not fully frozen.\" I find the <br>\nresponsitivity of Isabelle/jEdit in the presence of non-terminating/slow <br>\ntasks unsatisfactory. I regularly have to interrupt my work for 30 <br>\nseconds or so to wait for Isabelle/jEdit. This often occurs when jumping <br>\nback up within a proof and changing something that causes some of the <br>\nlater commands to diverge or if I simply have some diverging try running <br>\non my last goal which I don't care about at the moment.</p>\n<p>Maybe this is a problem which doesn't affect \"pro users\" as much as they <br>\nalways know how their proof will work and only type commands that <br>\nimmediately run successfully. ;)</p>\n<p>Another side remark: Where is one supposed to place the sledgehammer <br>\npanel in docked mode? I only see three bad options:</p>\n<ol>\n<li>\n<p>Switching between the output and the sledgehammer panel all the time. <br>\nObviously bad.</p>\n</li>\n<li>\n<p>Docking it at the right. The space there is to thin.</p>\n</li>\n<li>Docking it at the top. Because all the panels waste so much space <br>\nthere isn't much space left for my proof script, of which I like to see <br>\nas much as possible.</li>\n</ol>\n<p>And one feature request:<br>\nWhen ctrl+hovering over some fact/variable whose definition is currently <br>\nvisible it would be nice if that where high-lighted and maybe <br>\neclipse-like also all occurrences in a different colour.</p>\n<p>Best<br>\n     Benedikt</p>",
        "id": 294261985,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914722
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nDear Isabelle users,</p>\n<p>this is still one more release candidate for the second attempt to make a <br>\nstable release of Isabelle this autumn:</p>\n<p><a href=\"http://isabelle.in.tum.de/website-Isabelle2013-2-RC3\">http://isabelle.in.tum.de/website-Isabelle2013-2-RC3</a></p>\n<p>The good news is that no new problems have shown up, but I managed to find <br>\na solution to an old problem of external process management.</p>\n<p>Notable changes versus Isabelle2013-2-RC2:</p>\n<p>* More robust termination of external processes managed by Isabelle/ML:<br>\n     support cancellation of tasks within the range of milliseconds, as<br>\n     required for PIDE document editing with automatically tried tools<br>\n     (e.g. Sledgehammer).</p>\n<p>* Clarified application icons and window titles -- more uniform on all<br>\n     platforms.</p>\n<p>* Minimal tuning of some Isabelle/jEdit GUI elements.</p>\n<p>The final Isabelle2013-2 release should emerge after 2-3 days of further <br>\ntesting. This is the very last chance to point out serious drop-outs.</p>\n<p>Observations from testing release candidates may be discussed here on <br>\nisabelle-users (not isabelle-dev), on the bitbucket tracker <br>\n<a href=\"https://bitbucket.org/isabelle_project/isabelle-release/issues\">https://bitbucket.org/isabelle_project/isabelle-release/issues</a> or via private <br>\nmail.</p>\n<p>Makarius</p>",
        "id": 294262036,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914728
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Wed, 4 Dec 2013, bnord wrote:</p>\n<blockquote>\n<p>I've been working a few days with RC3 now. Even if you say \"As long as <br>\nit comes back eventually, it is not fully frozen.\" I find the <br>\nresponsitivity of Isabelle/jEdit in the presence of non-terminating/slow <br>\ntasks unsatisfactory. I regularly have to interrupt my work for 30 <br>\nseconds or so to wait for Isabelle/jEdit.</p>\n</blockquote>\n<p>As far as I can tell, Isabelle/Scala and Isabelle/jEdit are waiting for <br>\nIsabelle/ML.  The interruptibility of the underlying Poly/ML process is <br>\nthe same all the time, even on the TTY, but the editor model puts more <br>\npressure on it.</p>\n<p>Do you have the impression that this behaviour has changed in <br>\nIsabelle2013-1 and Isabelle2013-2 compared to Isabelle2012 and <br>\nIsabelle2013?</p>\n<p>How many \"threads\" do you have active, compared to the physical hardware? <br>\nThis can be changed in \"Plugin Options / Isabelle / General\" and the <br>\neffective value is reported by ML \"Multithreading.max_threads_value ()\".</p>\n<blockquote>\n<p>This often occurs when jumping back up within a proof and changing <br>\nsomething that causes some of the later commands to diverge or if I <br>\nsimply have some diverging try running on my last goal which I don't <br>\ncare about at the moment.</p>\n<p>Maybe this is a problem which doesn't affect \"pro users\" as much as they <br>\nalways know how their proof will work and only type commands that <br>\nimmediately run successfully. ;)</p>\n</blockquote>\n<p>I did not hear anything about such inconveniences in the past couple of <br>\nmonths.  On the other hand there were several serious problems that nobody <br>\ndared to report.</p>\n<blockquote>\n<p>Another side remark: Where is one supposed to place the sledgehammer panel in <br>\ndocked mode? I only see three bad options:<br>\n1. Switching between the output and the sledgehammer panel all the time. <br>\nObviously bad.<br>\n2. Docking it at the right. The space there is to thin.<br>\n3. Docking it at the top. Because all the panels waste so much space there <br>\nisn't much space left for my proof script, of which I like to see as much as <br>\npossible.</p>\n</blockquote>\n<p>You can also dock left, or let the window float (even several copies of <br>\nit).  The jEdit action isabelle.sledgehammer activates some instance of <br>\nthe panel according to standard jEdit policies.  You can experiment <br>\nbinding this to some keyboard shortcut.</p>\n<blockquote>\n<p>And one feature request: When ctrl+hovering over some fact/variable <br>\nwhose definition is currently visible it would be nice if that where <br>\nhigh-lighted and maybe eclipse-like also all occurrences in a different <br>\ncolour.</p>\n</blockquote>\n<p>Even more could be done there, and is in the pipeline for quite some time <br>\nalready.</p>\n<p>I've got too much side-tracked by technical issues that are strictly <br>\nspeaking outside my control and responsibility, such as general JVM <br>\nintegrity and too much divergence and fragmentation of major operating <br>\nsystem platforms.</p>\n<p>Makarius</p>",
        "id": 294262058,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914734
    },
    {
        "content": "<p>From: bnord &lt;<a href=\"mailto:bnord01@gmail.com\">bnord01@gmail.com</a>&gt;<br>\nHi,<br>\nAm 04.12.13 13:00, schrieb Makarius:</p>\n<blockquote>\n<p>Do you have the impression that this behaviour has changed in <br>\nIsabelle2013-1 and Isabelle2013-2 compared to Isabelle2012 and <br>\nIsabelle2013?<br>\nSorry, can't tell because I didn't use Isabelle/jEdit intensively before.<br>\nHow many \"threads\" do you have active, compared to the physical <br>\nhardware? This can be changed in \"Plugin Options / Isabelle / General\" <br>\nand the effective value is reported by ML <br>\n\"Multithreading.max_threads_value ()\". <br>\nML \"Multithreading.max_threads_value ()\" returns 4, I've an Core i5 with <br>\n4 hardware threads running on 2 cores, I changed max_threads to 2, I'll <br>\nsee how that works out.</p>\n</blockquote>\n<p>Best<br>\n     Benedikt</p>",
        "id": 294262101,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914746
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nDoes it mean you are a former Proof General user or non-user?</p>\n<p>If you have large \"scripts\" that depend a lot on sequential stepping and <br>\neasily run into non-termination of some parts, you can try flipping the <br>\n\"Continuous checking\" option, e.g. in the Theories panel.  There is also a <br>\nkeyboard shortcut \"C+e ENTER\" for it, which is a bit reminiscent of <br>\nEscape-Meta-Alt-Control-Shift.</p>\n<p>This hand-control is a bit odd, but it sometimes helps.  The system should <br>\neventually become smarter in just the right scheduling of pending tasks, <br>\nbut not here and not now.</p>\n<p>Makarius</p>",
        "id": 294262114,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914752
    },
    {
        "content": "<p>From: bnord &lt;<a href=\"mailto:bnord01@gmail.com\">bnord01@gmail.com</a>&gt;<br>\nI had a longer Isabelle brake and before that there was no <br>\nIsabelle/jEdit release.</p>",
        "id": 294262131,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914758
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nSome more notes on this: there was a very old race condition where the <br>\nexternal process, when cancelled too early, was not killed at all.  This <br>\nwas not relevant in the past, because cancellation happened only due to <br>\nrelative long timeouts (seconds) not the user editing (milliseconds). <br>\n(This is why I always call the TTY loop \"boring\", instead of the genuine <br>\ninteraction that happens in the PIDE document processing game.)</p>\n<p>As a consequence, there could be these typical \"eprover\" processes being <br>\nleft over, after some minutes or hours of editing with auto sledgehammer <br>\nenabled.  The new scheme is much more robust, but without any claim for <br>\n100% certainty (which is very difficult to achieve with arbitrary POSIX <br>\nprocesses).</p>\n<p>The effect was particularly bad on Windows, where process startup takes <br>\napprox. 100ms instead of 1..10ms on Unix, but it did happen on Unix in <br>\npractice as well.  I was finally convinced when I saw a stray \"java\" <br>\nprocess due to auto nitpick on Linux, so it was neither the notorious <br>\nWindows platform nor the very special eprover with its sophisticated <br>\ninternal signal handling.</p>\n<p>Further practical notes on automatically tried tools in Isabelle/jEdit:</p>\n<p>* The Isabelle option \"threads\" should be the physical number of cores.<br>\n     On Intel hardware with hyperthreading this is doubled by default and<br>\n     thus reduces editor reactivity by too many parallel tasks.</p>\n<p>i3 has 2 cores<br>\n     i5 has 2 or 4 cores<br>\n     i7 has 2 or 4 or 6 cores</p>\n<p>* \"Auto methods\", which is similar to the command 'try0', tends to burn<br>\n     a lot of cycles.  Its internal parallelization and the global auto<br>\n     tool time-out probably require some rethinking: this is still too<br>\n     close to TTY mode, where the CPU is mostly idle, and sometimes rushes<br>\n     through a few parallel tasks on all available cores.  In PIDE, the<br>\n     prover does more things all the time -- similar to an operating<br>\n     system.</p>\n<p>Makarius</p>",
        "id": 294262222,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914795
    },
    {
        "content": "<p>From: Julian Brunner &lt;<a href=\"mailto:julianbrunner@gmail.com\">julianbrunner@gmail.com</a>&gt;<br>\nThe issues I had with RC1 appear to have been fixed in RC2, things ran<br>\nfairly smoothly in that version.</p>\n<p>My work during the last few days consisted mostly of writing<br>\ndefinitions and thinking on paper, so I haven't had any opportunity to<br>\ntest the process termination part of RC3 properly, but a few quick<br>\ntests indicated that it's working fine there, too.</p>",
        "id": 294262337,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914840
    }
]