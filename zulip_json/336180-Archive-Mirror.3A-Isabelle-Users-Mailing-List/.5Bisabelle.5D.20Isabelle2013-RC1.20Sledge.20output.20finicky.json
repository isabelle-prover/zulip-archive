[
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nThe remote provers tend to only work when used in a Sledgehammer command <br>\nby themselves.</p>\n<p>This command finishes after a few seconds with no results from either ATP.</p>\n<p>sledgehammer[minimize=smart,preplay_timeout=3,timeout=30,verbose,max_relevant=smart,provers=\"<br>\n   remote_vampire z3_tptp<br>\n   \"]</p>\n<p>This command finishes after a few seconds with a proof.</p>\n<p>sledgehammer[minimize=smart,preplay_timeout=3,timeout=30,verbose,max_relevant=smart,provers=\"<br>\n   remote_vampire<br>\n   \"]</p>\n<p>The ATP remote_satallax is predictable in the same exact way. By itself, <br>\nit returns a proof. With z3_tptp, it doesn't.</p>\n<p>In general, the ATPs are only working if they're run by themselves.</p>\n<p>They're still very useful.</p>\n<p>Regards,<br>\nGB</p>",
        "id": 294230029,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902001
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI can confirm that in both in Isabelle2012 and Isabelle2013-RC1 executing <br>\nmany processes in parallel on Windows/Cygwin is very fragile.  It seems to <br>\nhave been always like that, but only with Isabelle2012 we could speak of <br>\nreasonably Windows support in the first place.  Now that so many other <br>\nthinks are working better than before, such drop-outs become more <br>\napparent.</p>\n<p>Let's see if we can figure out a solution to the problem ...</p>\n<p>Makarius</p>",
        "id": 294230226,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902105
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nOn 1/25/2013 2:49 PM, Makarius wrote:</p>\n<blockquote>\n<blockquote>\n<p>In general, the ATPs are only working if they're run by themselves.</p>\n</blockquote>\n<p>I can confirm that in both in Isabelle2012 and Isabelle2013-RC1 <br>\nexecuting many processes in parallel on Windows/Cygwin is very <br>\nfragile.  It seems to have been always like that...</p>\n</blockquote>\n<p>As to Isabelle2012, I assume you say that because you haven't been using <br>\nCygwin as your primary platform, but you're underselling Isabelle2012, <br>\nas far as Sledgehammer goes.</p>\n<p>I've got most of my proofs I have now from having used Isabelle2012 with <br>\nSledgehammer, where I was usually running a minimum of 8 ATPs on the <br>\nfirst attempt.</p>\n<p>And that's why I isolated it down to Vampire needing to run by itself <br>\nnow in Isabelle2013-RC1. With Isabelle2012, about 5 ATPs would usually <br>\nreturn a similar proof, but on a particular theorem, which I was running <br>\nSledgehammer on again, there was only one good proof of about 250ms, <br>\nwhich I already had, but which I wasn't getting again, and I didn't know <br>\nwhere it had come from. I finally ran Vampire by itself to get the proof <br>\nagain.</p>\n<blockquote>\n<p>...but only with Isabelle2012 we could speak of reasonably Windows <br>\nsupport in the first place.  Now that so many other thinks are working <br>\nbetter than before, such drop-outs become more apparent.</p>\n</blockquote>\n<p>I suppose Isabelle2012 was when Sledgehammer started being useful on <br>\nCygwin for Sledgehammer, but with Isabelle2013, I see that the e prover <br>\nspawns about 15 processes, when it used to only start 1 or 2.</p>\n<p>Complications are the price of progress.</p>\n<blockquote>\n<p>Let's see if we can figure out a solution to the problem ...</p>\n</blockquote>\n<p>Exactly. We're a team, and I'll do my share of button pushing, copying <br>\nand pasting, inserting commands, and such.</p>\n<p>But as I so profoundly said in the past, there are no problems with <br>\nIsabelle, there are only workarounds.</p>\n<p>For me, it would probably be running Linux under VirtualBox, which I <br>\nneed to do anyway because I can only get certain local ATPs under Linux. <br>\nI'll do that after all the release candidates, unless I need to do it <br>\nsooner.</p>\n<p>I already knew that Vampire was probably the best ATP at getting proofs <br>\nfor what I'm doing, but it might be better than I thought, and I might <br>\nhave been missing some Vampire proofs I should have been getting with <br>\nIsabelle2012, so I'll pay more attention to that now.</p>\n<p>However, running multiple ATPs is useful for more than just finding a <br>\ngood, fast proof. Two different ATPs may return a fast proof differing <br>\nin only one proof fact, but one proof fact may be more logically <br>\nappealing than the other, such as that one is a low level theorem, and <br>\nthe other is at a much higher level.</p>\n<p>Regards,<br>\nGB</p>",
        "id": 294230303,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902124
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nIn the meantime David Matthews, who is the master behind Poly/ML, managed <br>\nto work around the problem with Cygwin and multithreaded execution of <br>\nexternal processes.</p>\n<p>Once his change shows up officially on his polyml-code/fixes-5.5 branch, I <br>\nwill repackage it for Isabelle and produce Isabelle2013-RC2.</p>\n<p>In the history of Isabelle on Windows, this will be the first time where <br>\nall regular test sessions are running through, even HOL-Nitpick_Examples <br>\nwith its many externaly Java processes.</p>\n<p>Stay tuned and keep fingers crossed ...</p>\n<p>Makarius</p>",
        "id": 294230338,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902148
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nLet the magic continue in convenient parallel processes. I have <br>\nconsidered many times how the low-level engine magicians don't get their <br>\ndue credit.</p>\n<p>I am tuned in to the Isabelle channel.</p>\n<p>Regards,<br>\nGB</p>",
        "id": 294230387,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902179
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nIt is more like the architects of Stonehenge -- nobody remembers them now, <br>\nand nobody has the slightest idea how they did it.</p>\n<p>Makarius</p>",
        "id": 294230402,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902191
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nI finally got some good data.</p>\n<p>I attach 3 screenshots for a total of 135+154+159 KB. Not bad for <br>\ncapturing a lot of screen space.</p>\n<p>Here's the story: I had two views open, a left view and a right view.</p>\n<p>1) I did a CNTL-V to insert what I call the \"sledge_long\" command. (Why <br>\nuse 1 when you can use 18, although there's a few I leave out.)</p>\n<p>2) Sledgehammer finished after only a few seconds and didn't give me any <br>\nfeedback. That's shown in the 1st screenshot.</p>\n<p>3) I clicked into the other view and switched to the file with the <br>\nsledgehammer command. It automatically started running sledgehammer, but <br>\nquit after a few seconds, without giving any real feedback in the output <br>\npanel. I didn't capture that screenshot.</p>\n<p>4) I clicked back into the left view and switched to a file which the <br>\nsTs.thy file imports. That caused the right view to start running <br>\nSledgehammer again, but this time Sledgehammer worked right. The 2nd <br>\nscreen capture shows the right view running Sledgehammer.</p>\n<p>5) The right view finished running Sledgehammer after a couple of <br>\nminutes, I clicked back into the right view, and I scrolled down to the <br>\nbottom of the output panel. The 3rd screen shot shows the right view <br>\nfinished, with the last of the Sledgehammer results. It finished <br>\nnormally given the 90 second timeout.</p>\n<p>Here is my cheap seats observation: With Sledgehammer and parallel <br>\nprocessing, nothing ever happens exactly the same twice. I hope that helps.</p>\n<p>That parallel processing, it's tricky stuff, and I've now noticed that <br>\none of those processes didn't get terminated, at the expense of 25% of <br>\nthe CPU processing. Icon meters in the taskbar. Necessary, very necessary.</p>\n<p>Just now getting back to jEdit, the Sledgehammer command was still <br>\nthere. I clicked back and forth between the two windows, it kicked out <br>\nfast without proving anything, and after more clicking around, it <br>\nstarted running right and was visible in both views.</p>\n<p>Regards,<br>\nGB<br>\n<a href=\"/user_uploads/14278/kHBxDLntIFdfeblxDyEcE47E/1_sledge-quit-after-a-few-seconds.png\">1_sledge quit after a few seconds.png</a><br>\n<a href=\"/user_uploads/14278/vNlyssHp-vbRnoPnEn2tJLA7/2_sledge-running-in-right-view.png\">2_sledge running in right view.png</a><br>\n<a href=\"/user_uploads/14278/-ZzCN49-SPLELihxuHVxRFVF/3_sledge-finished-in-right-view.png\">3_sledge finished in right view.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/kHBxDLntIFdfeblxDyEcE47E/1_sledge-quit-after-a-few-seconds.png\" title=\"1_sledge quit after a few seconds.png\"><img src=\"/user_uploads/14278/kHBxDLntIFdfeblxDyEcE47E/1_sledge-quit-after-a-few-seconds.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/14278/vNlyssHp-vbRnoPnEn2tJLA7/2_sledge-running-in-right-view.png\" title=\"2_sledge running in right view.png\"><img src=\"/user_uploads/14278/vNlyssHp-vbRnoPnEn2tJLA7/2_sledge-running-in-right-view.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/14278/-ZzCN49-SPLELihxuHVxRFVF/3_sledge-finished-in-right-view.png\" title=\"3_sledge finished in right view.png\"><img src=\"/user_uploads/14278/-ZzCN49-SPLELihxuHVxRFVF/3_sledge-finished-in-right-view.png\"></a></div>",
        "id": 294232645,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660903249
    }
]