[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear BNF developers,</p>\n<p>I just want to let you know that in Isabelle2014-RC1, the datatype definition below fails <br>\nwith \"Proof failed\".</p>\n<p>Best,<br>\nAndreas</p>\n<p>typedef ('a, 'b) f = \"UNIV :: ('a + 'b) set\" by auto</p>\n<p>consts map_f :: \"('a ⇒ 'b) ⇒ ('a, 'c) f ⇒ ('b, 'c) f\"<br>\nconsts set_f :: \"('a, 'b) f ⇒ 'a set\"<br>\nconsts rel_f :: \"('a ⇒ 'b ⇒ bool) ⇒ ('a, 'c) f ⇒ ('b, 'c) f ⇒ bool\"</p>\n<p>bnf<br>\n   \"('a, 'b) f\"<br>\n   map: map_f<br>\n   sets: set_f<br>\n   bd: \"BNF_Cardinal_Arithmetic.csum natLeq (card_of (UNIV :: 'b set))\"<br>\n   wits: \"Abs_f ∘ Inl\"<br>\n   rel: rel_f<br>\nsorry</p>\n<p>datatype_new 'a foo = Foo int | Bar \"('a foo, 'a) f\" \"('a foo, 'a) f\"</p>",
        "id": 294285176,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660921605
    },
    {
        "content": "<p>From: Dmitriy Traytel &lt;<a href=\"mailto:traytel@in.tum.de\">traytel@in.tum.de</a>&gt;<br>\nHi Andreas,</p>\n<p>using certain ubiquitous constants (like ∘ or Inl) in terms for the BNF <br>\nconstants always used to be a little bit fragile (since internal tactics <br>\ntreat those constants specially). We continuously try to improve the <br>\nsituation here.</p>\n<p>However this is not critical for the release: the easy workaround is to <br>\ndefine a constant for the witness:</p>\n<p>definition \"wit_f = Abs_f ∘ Inl\"</p>\n<p>and use wit_f in the bnf command.</p>\n<p>Dmitriy</p>",
        "id": 294285201,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660921612
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Dmitriy,</p>\n<p>Thanks for the quick reply and the solution.</p>\n<p>Andreas</p>",
        "id": 294285248,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660921624
    }
]