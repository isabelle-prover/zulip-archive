[
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nHi,</p>\n<p>consider the following code:</p>\n<p>theory Scratch imports Pure begin</p>\n<p>ML ‹<br>\nval x = 1<br>\nval y = yield_singleton Proof_Context.read_vars (@{binding x}, NONE,<br>\nNoSyn) @{context}<br>\n›</p>\n<p>end</p>\n<p>Then the output of the block is not attached to the ML command, but<br>\nrather to the \"x\" in the binding antiquotation.</p>",
        "id": 294294045,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660924012
    },
    {
        "content": "<p>From: Dmitriy Traytel &lt;<a href=\"mailto:traytel@in.tum.de\">traytel@in.tum.de</a>&gt;<br>\nThe same happens even with just</p>\n<p>ML ‹ @{binding x} ›</p>\n<p>Dmitriy</p>",
        "id": 294294079,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660924024
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThis behaviour has been for a long time, going back at least to <br>\nIsabelle2011-1 (October 2011), which was the first official release of the <br>\nProver IDE.  (It is interesting to run that today to sense the depth of <br>\ntime of PIDE development.)</p>\n<p>As a general principle, a PIDE message is attached to all source positions <br>\nthat are mentioned in its body.  The ML pretty printer for type binding <br>\nincludes its original position.  This was done as a normal default: when a <br>\nposition is available it is included in output.</p>\n<p>I can't say on the spot if it would be better of not doing that for ML <br>\ntoplevel output.  Note that @{make_string} uses the same mechanism and the <br>\nnext incident might be a lack of a position where it is normally expected. <br>\nOn the other hand, @{make_string} is just for one-shot experimentation <br>\nand debugging, and proper production code has to compose error messages <br>\nmore carefully anyway, using <a href=\"http://Position.here\">Position.here</a> or Binding.print explicitly.</p>\n<p>Makarius</p>",
        "id": 294294087,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660924030
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nWhat was confusing to me was the lack of any output for the ML block (it<br>\nis in the output window, but there are no gray lines under the \"ML\") --<br>\nthe annotated @{binding x} was more a curiosity. So attaching the output<br>\nalso to the ML command (and not only to the mentioned positions) would<br>\nremove the confusing part of this issue for me.</p>\n<p>-- Lars</p>",
        "id": 294294131,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660924048
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe general principle here: if a message mentions precise positions in its <br>\nheader or its body it is attached to the corresponding spots in the source <br>\ntext; if it lacks precise positions it is attached to the command keyword <br>\ninstead.  (And if it even lacks a proper transaction id in the header, it <br>\nis dumped on Raw Output.)</p>\n<p>It seems that in the past 3 years there was rarely a situation to become <br>\naware of that, which might be a good sign.</p>\n<p>I will accumulate further possible refinements on the TODO list for the <br>\ntime after the Isabelle2014 release.</p>\n<p>Makarius</p>",
        "id": 294294155,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660924061
    }
]