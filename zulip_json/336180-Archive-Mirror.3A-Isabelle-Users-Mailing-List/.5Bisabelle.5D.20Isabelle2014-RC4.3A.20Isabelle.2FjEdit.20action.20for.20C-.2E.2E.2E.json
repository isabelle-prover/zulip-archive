[
    {
        "content": "<p>From: Christian Sternagel &lt;<a href=\"mailto:c.sternagel@gmail.com\">c.sternagel@gmail.com</a>&gt;<br>\nDear Makarius,</p>\n<p>Is there already an action (or command, I'm not sure on the naming here) <br>\nin Isabelle/jEdit for whatever C-hover does internally. Then a keyboard <br>\nshortcut could be assigned to it, avoiding the need to use the mouse.</p>\n<p>I'm asking since while showing Isabelle/jEdit to others I often get the <br>\nquestion whether it wasn't possible to avoid using the mouse.</p>\n<p>Of course C-hover is possible recursively, which would not directly work <br>\nwith the keyboard currently (maybe if keyboard focus was transferred to <br>\nthe popup and there would be a cursor available?).</p>\n<p>cheers</p>\n<p>chris</p>",
        "id": 294289544,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660922999
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Wed, 20 Aug 2014, Christian Sternagel wrote:</p>\n<blockquote>\n<p>Is there already an action (or command, I'm not sure on the naming here) <br>\nin Isabelle/jEdit for whatever C-hover does internally. Then a keyboard <br>\nshortcut could be assigned to it, avoiding the need to use the mouse.</p>\n</blockquote>\n<p>I usually try to provide jEdit actions for the main things by default, but <br>\nthis is not always easy.  For example, the \"`\" completion template is hard <br>\nto reach on some national keyboards, so I tried to wrap it up as <br>\nremappable action, but did not manage so far because of entangled GUI <br>\nevents.</p>\n<p>Tooltips are also not so immediate.  There are various GUI event listeners <br>\nand timers around it.  Ultimately it goes through <br>\nPIDE.rendering().tooltip().  We've already seen smart approaches with <br>\nBeanshell scripting on this mailing list, far beyond what I usually do <br>\nmyself, so maybe someone manages that.</p>\n<blockquote>\n<p>I'm asking since while showing Isabelle/jEdit to others I often get the <br>\nquestion whether it wasn't possible to avoid using the mouse.</p>\n</blockquote>\n<p>I wonder where this anti-mouse movement is coming from.  Nostalgic users <br>\nof vi?  Or bad mouse hardware?  I am myself using a relatively <br>\nold-fashioned 3-button-wheel mouse from 5 years ago, which might have been <br>\nthe peak of this technology.  More recent touchpads also work for me, <br>\nnotably on Mac OS X.</p>\n<blockquote>\n<p>Of course C-hover is possible recursively, which would not directly work <br>\nwith the keyboard currently (maybe if keyboard focus was transferred to <br>\nthe popup and there would be a cursor available?).</p>\n</blockquote>\n<p>In principle the popup is a nested jEdit textarea, with special tricks <br>\naround it to make it work smoothly.  The cursor is disabled explicitly. <br>\nAfter all this is not Emacs, with its \"everything is a buffer approach\".</p>\n<p>Generally, I don't think that the single-focus text cursor is a good <br>\nconcept for the future.  The Output panel also has that as retro-feature <br>\nonly.  BTW, in the classic GUI terminology of Java/Swing, the \"cursor\" is <br>\nactually the mouse pointer, and a text cursor within a text area is called <br>\n\"caret\".</p>\n<p>Maybe this talk from \"1973\" (actually 2013) by Bret Victor <br>\n<a href=\"http://worrydream.com/dbx/\">http://worrydream.com/dbx/</a> helps again to revive the visions to work with <br>\n\"modern\" computer displays effectively.</p>\n<p>Makarius</p>",
        "id": 294289696,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660923036
    },
    {
        "content": "<p>From: René Neumann &lt;<a href=\"mailto:rene.neumann@in.tum.de\">rene.neumann@in.tum.de</a>&gt;<br>\nNeither; it's increased productivity. When I'm typing with both hands,<br>\nbut then need to transfer one hand to the mouse and spend several<br>\nseconds on aiming the pointer exactly where I need it, this is a larger<br>\ndisruption. Especially when this switch has to be done quite often.</p>\n<p>A mouse is an efficient tool, when I don't need the keyboard or resting<br>\none hand there is sufficient, like for example for browsing, gaming or<br>\nothers. But not for developing or writing in general.</p>\n<p>It is also quite ok, when I'm only skimming through a theory and looking<br>\nat different things or try to understand a certain proof. Then it's ok<br>\nto point here and there.</p>\n<p>mouse_ok &lt;-&gt; number_of_chars_to_write &lt; 20</p>\n<p>(or sth like that :))</p>\n<ul>\n<li>René<br>\n<a href=\"/user_uploads/14278/yKODFaA-3oyrX2pd0amVpikD/smime.p7s\">smime.p7s</a></li>\n</ul>",
        "id": 294289716,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660923042
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI do use the mouse a lot in development, but maybe that's an instance of <br>\ngaming, or maybe I am just old-fashioned (being socialized when a mouse <br>\nwas something very special).</p>\n<p>If the reluctance to use the mouse is a general trend in \"development\" <br>\nthen current IDEs must have keyboard shortcuts for the tooltip idioms that <br>\nwe have.  Maybe someone wants to look around and write a summary for the <br>\nsituation in Eclipse, Netbeans, IntelliJ IDE, Visual Studio.</p>\n<p>Makarius</p>",
        "id": 294289768,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660923060
    },
    {
        "content": "<p>From: Bertram Felgenhauer &lt;<a href=\"mailto:bertram.felgenhauer@googlemail.com\">bertram.felgenhauer@googlemail.com</a>&gt;<br>\nChristian Sternagel wrote:<br>\nI'd like to add to this, because I've been one of the people to bother<br>\nChris with this question.</p>\n<p>I'm not a strong opponent of using the mouse, though I think that having<br>\nkeyboard shortcuts for common actions is very desirable for efficiency,<br>\nand looking up types of identifiers is a very common interaction when<br>\nusing Isabelle, so deserves having such a shortcut. (Note that the<br>\ncursor will often be in the vicinity of the identifier of interest,<br>\nwhile the mouse pointer may be anywhere in the jedit window.)</p>\n<p>Despite having no issues with using the mouse per se, I find C-hover<br>\nvery annoying. There are two reasons for this with Isabelle/jedit's<br>\ndefault settings. The more important one is that my usual approach for<br>\nmouse interaction is to move the mouse to the right spot, and then click<br>\nappropriately. With C-hover, one has to press the Control key before the<br>\nmouse pointer comes to rest; if I forget doing that, I have to press<br>\nControl and wiggle with the mouse; rather than one interaction with the<br>\nmouse I now need two. The second issue I'm experiencing is that the<br>\npopup does not appear immediately, i.e. the UI forces me to wait.<br>\nFortunately, one can reduce the popup delay to improve interactivity.</p>\n<p>Cheers,</p>\n<p>Bertram</p>",
        "id": 294289820,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660923074
    },
    {
        "content": "<p>From: bnord &lt;<a href=\"mailto:bnord01@gmail.com\">bnord01@gmail.com</a>&gt;<br>\nIn Eclipse there is F2 for the tool tip and F3 for open declaration and <br>\nof course a lot of other useful stuff, I virtually never use the mouse <br>\nwhen writing Scala code in Eclipse except for creating new run <br>\nconfigurations, during debugging and stuff, but even there I prefer <br>\ntabbing through forms and stuff over using the mouse.</p>\n<p>Another feature I miss is instance highlighting to directly see where <br>\nthe term/fact under the cursor is used and the equivalent of a call <br>\nhierarchy for theorems.</p>\n<p>I don't use the other IDEs but I'm very confident that they'll have <br>\nsimilar features, a quick web search produced Crtl+F1 for InteliJ.</p>\n<p>However I seldom use the tool tip in Isabelle/jEdit, what may be nice if <br>\nit wouldn't just show the type but also the definition and maybe a <br>\nselection of theorems in which the term appears, respectively the fact <br>\nitself when hovering a fact.</p>\n<p>Keyboard support for open declaration together with for moving back and <br>\nforth would be nice. Yet this would become less necessary if the tool <br>\ntip already would show the definition, I use this a lot in my PDF viewer <br>\n(Skim, with the mouse) where hovering a link opens a tool tip showing <br>\nthe linked position which is incredibly useful for looking up citations.</p>\n<p>Best<br>\n     Benedikt</p>",
        "id": 294289849,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660923085
    }
]