[
    {
        "content": "<p>From: \"C. Diekmann\" &lt;<a href=\"mailto:diekmann@in.tum.de\">diekmann@in.tum.de</a>&gt;<br>\nHi,</p>\n<p>when I first started RC0, the default setting was quite confusing for me.</p>\n<p>I moved the current line cursor to a lemma statement.<br>\nWhat I observed:<br>\n  The bottom buffer was set to output. It displays nothing<br>\n  The right buffer shows the Documentation panel.</p>\n<p>What I expected:<br>\n  The proof state is displayed somewhere.</p>\n<p>The proof state is only visible when I select the state panel (as<br>\ndocumented). This might be confusing for new-comers. In addition, my<br>\nproof state is usually huge, but by default, the right panel is very<br>\nsmall.</p>\n<p>Splitting state and output may be a good idea for power users with<br>\nlarge displays. On my laptop with only one fullHD display, I just<br>\ncan't find a satisfying setting. Maybe it is a good idea to distribute<br>\nIsabelle with a simple GUI setup. Power users can still change the<br>\ndefaults. This would mean that by default, the proof state is sent to<br>\nthe output panel.</p>\n<p>What do other users think?</p>\n<p>Best Regards,<br>\n  Cornelius</p>",
        "id": 294661997,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661170250
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Sun, 3 Jan 2016, C. Diekmann wrote:</p>\n<blockquote>\n<p>when I first started RC0, the default setting was quite confusing for me.</p>\n<p>I moved the current line cursor to a lemma statement.<br>\nWhat I observed:<br>\n The bottom buffer was set to output. It displays nothing<br>\n The right buffer shows the Documentation panel.</p>\n<p>What I expected:<br>\n The proof state is displayed somewhere.</p>\n<p>The proof state is only visible when I select the state panel (as <br>\ndocumented).</p>\n</blockquote>\n<p>There are at least these ways to see the proof state:</p>\n<p>(1) Output panel with \"Proof state\" checkbox ticked (off by default)</p>\n<p>(2) State panel, after opening it in a standard way (according to the<br>\n      explanations in the jEdit or Isabelle/jEdit manuals, so<br>\n      Documentation <em>is</em> important, although not updated yet).</p>\n<p>These variants roughly correspond to the \"2-buffer model\" versus \"3-buffer <br>\nmodel\" of ancient Proof General times. It should be rather painless to <br>\nswitch back an forth between these modes, for people who care about that. <br>\nI tend to use only (2) these days, and also explain it like that to new <br>\nusers.</p>\n<blockquote>\n<p>This might be confusing for new-comers.</p>\n</blockquote>\n<p>Why?  Proof state is only secondary in Isar.  It is possible to give <br>\nseveral hours of Isabelle introduction without ever showing State (and <br>\nOutput).  It depends a bit on the topic and the target audience, and on <br>\nthe mindset of the presenter how it is all done.</p>\n<p>I normally show first the main text area, then its popups, then other <br>\nthings.  Eventually also Output, State, Theories.</p>\n<p>Unguided new-comers first see the main text buffer and the Documentation <br>\npanel -- the latter now starts the clickable \"Examples\".  We probably also <br>\nneed a guide to the remaining documentation -- maybe another example <br>\ntheory that uses the new @{doc} antiquotation.</p>\n<blockquote>\n<p>In addition, my proof state is usually huge, but by default, the right <br>\npanel is very small.</p>\n<p>Splitting state and output may be a good idea for power users with large <br>\ndisplays. On my laptop with only one fullHD display, I just can't find a <br>\nsatisfying setting.</p>\n</blockquote>\n<p>I've just checked again with a conventional 16x9 Full-HD 17\" Laptop from <br>\n2013, using the default 18px font for the main text area.  This <br>\nimmediately gives at least these options:</p>\n<p>(1) Main text is restricted to old-school 80 chars per line, and the<br>\n     right docking area (with State panel) is extended into the middle of<br>\n     the main window.</p>\n<p>Result: almost 50% screen size for State.</p>\n<p>(2) Main text area uses extended line length of 100 chars, and the right<br>\n     docking area is extended to 30-40% of main window size.</p>\n<p>Result: approx. 30-40% screen size for State, or approx. 50% if the<br>\n     output font scale is set to 85% (this can be done persistently with<br>\n     the Isabelle plugin option \"Font Scale\").</p>\n<p>Younger people may also try smaller fonts for the main text and/or output.</p>\n<p>It is also possible to make a floating instance of State, and put it on a <br>\nseparate physical screen.  That is an investment of 100-200 EUR for <br>\nhardware, and some desk space.</p>\n<blockquote>\n<p>Maybe it is a good idea to distribute Isabelle with a simple GUI setup.</p>\n</blockquote>\n<p>That was actually the intention of the arrangement of Isabelle2016-RC0. <br>\nWhat can be simplified further?</p>\n<p>I still need to update the Isabelle/jEdit manual in this respect, although <br>\nI have the impression that most users avoid manuals as much as possible.</p>\n<p>In addition there could be a nice introductory video.  It is occasionally <br>\ninteresting to see what others have done, and what they find important to <br>\ntell, e.g. <a href=\"https://www.youtube.com/watch?v=QYbAmRY1C5A\">https://www.youtube.com/watch?v=QYbAmRY1C5A</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"QYbAmRY1C5A\" href=\"https://www.youtube.com/watch?v=QYbAmRY1C5A\"><img src=\"https://uploads.zulipusercontent.net/dbc63c26949650918e5a72472ad183b720769e18/68747470733a2f2f692e7974696d672e636f6d2f76692f515962416d5259314335412f64656661756c742e6a7067\"></a></div><p>Makarius</p>",
        "id": 294663794,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661170928
    },
    {
        "content": "<p>From: \"C. Diekmann\" &lt;<a href=\"mailto:diekmann@in.tum.de\">diekmann@in.tum.de</a>&gt;<br>\n2016-01-03 22:51 GMT+01:00 Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;:</p>\n<blockquote>\n<p>On Sun, 3 Jan 2016, C. Diekmann wrote:</p>\n<blockquote>\n<p>when I first started RC0, the default setting was quite confusing for me.</p>\n<p>I moved the current line cursor to a lemma statement.<br>\nWhat I observed:<br>\n The bottom buffer was set to output. It displays nothing<br>\n The right buffer shows the Documentation panel.</p>\n<p>What I expected:<br>\n The proof state is displayed somewhere.</p>\n<p>The proof state is only visible when I select the state panel (as<br>\ndocumented).</p>\n</blockquote>\n<p>There are at least these ways to see the proof state:</p>\n<p>(1) Output panel with \"Proof state\" checkbox ticked (off by default)</p>\n<p>(2) State panel, after opening it in a standard way (according to the<br>\n     explanations in the jEdit or Isabelle/jEdit manuals, so<br>\n     Documentation <em>is</em> important, although not updated yet).</p>\n<p>These variants roughly correspond to the \"2-buffer model\" versus \"3-buffer<br>\nmodel\" of ancient Proof General times. It should be rather painless to<br>\nswitch back an forth between these modes, for people who care about that. I<br>\ntend to use only (2) these days, and also explain it like that to new users.</p>\n</blockquote>\n<p>It is painless. I can confirm that ;-)<br>\nI just documented why I was baffled on the first start. Maybe I still<br>\nlive in the apply-style world.</p>\n<blockquote>\n<blockquote>\n<p>This might be confusing for new-comers.</p>\n</blockquote>\n<p>Why?  Proof state is only secondary in Isar.  It is possible to give several<br>\nhours of Isabelle introduction without ever showing State (and Output).  It<br>\ndepends a bit on the topic and the target audience, and on the mindset of<br>\nthe presenter how it is all done.</p>\n<p>I normally show first the main text area, then its popups, then other<br>\nthings.  Eventually also Output, State, Theories.</p>\n</blockquote>\n<p>Maybe I also need such an introduction. I'm using Isabelle for some<br>\nyears now and learned many new things when I attended one of your<br>\nshort introduction talks. In particular, the trend to move away from<br>\n<code>declare[[everything]]</code> and get the result in the output buffer<br>\ntowards ctrl+hover everything. Thanks.</p>\n<blockquote>\n<blockquote>\n<p>Maybe it is a good idea to distribute Isabelle with a simple GUI setup.</p>\n</blockquote>\n<p>That was actually the intention of the arrangement of Isabelle2016-RC0. What<br>\ncan be simplified further?</p>\n<p>I still need to update the Isabelle/jEdit manual in this respect, although I<br>\nhave the impression that most users avoid manuals as much as possible.</p>\n<p>In addition there could be a nice introductory video.  It is occasionally<br>\ninteresting to see what others have done, and what they find important to<br>\ntell, e.g. <a href=\"https://www.youtube.com/watch?v=QYbAmRY1C5A\">https://www.youtube.com/watch?v=QYbAmRY1C5A</a></p>\n</blockquote>\n<p>Actually, I did not get the intention behind the GUI until now.<br>\nProbably there should be a \"what is new and fancy in Isabelle2016\"<br>\nvideo. For technical details, I still prefer the written<br>\ndocumentation.</p>\n<p>Best Regards,<br>\n  Cornelius</p>",
        "id": 294663970,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661170998
    },
    {
        "content": "<p>From: Julian Brunner &lt;<a href=\"mailto:julianbrunner@gmail.com\">julianbrunner@gmail.com</a>&gt;<br>\nMy thoughts on the subject:</p>\n<ul>\n<li>\n<p>Interactively viewing the proof state is important to me even though<br>\nI never write apply-style proofs. When faced with a proof obligation,<br>\nI like to collect the facts that I think will be relevant with<br>\n'using'. This allows me to stare at both the facts and the goal<br>\nsimultaneously in the proof state, getting a better grasp on how to<br>\nprove the goal. Without the proof state, I would have to restate the<br>\nfacts explicitly in order to view them in close proximity to the goal<br>\nstatement and relieving me of the mental effort of keeping them all in<br>\nmy mind. It also allows me to play around with the facts and the goal<br>\nin order to get a better idea of the proof. Of course, once found, I<br>\nmay still want to clean up the proof to make it readable without<br>\nhaving access to the proof state.</p>\n</li>\n<li>\n<p>The proof state is also useful when dealing with complex induction<br>\nrules, relieving me of the mental effort of instantiating the<br>\ninduction rule in my mind and presenting me with nicely formatted<br>\nsubgoals.</p>\n</li>\n<li>\n<p>Of course, these points do not really apply to educational examples<br>\nwhere an experienced user already knows what the proof state is going<br>\nto be at each point of the proof, as well as which tools will be able<br>\nto solve which goals. However, they do apply to inexperienced users as<br>\nwell as experienced users working on complex proofs.</p>\n</li>\n<li>\n<p>I prefer the 2-buffer model as it takes up less space on my screen<br>\nwithout forcing me to switch between two different panels to get<br>\nvarious kinds of feedback from the system. It allows me to work with<br>\ntwo theories (vertical split), the Theories panel and the Output panel<br>\non a single screen (see attached screenshot). When using the 3-buffer<br>\nmodel, at most one of the feedback buffers actually provides<br>\ninformation most of the time, with the other one just wasting space.<br>\nHowever, since it's not always the same feedback buffer that is<br>\nimportant, I need to keep both of them open anyways. This problem is<br>\nmade worse by the fact that these panels cannot both be docked at the<br>\nbottom by default (since these terms can become large, I prefer to<br>\nhave them displayed in a wide rather than a tall buffer).</p>\n</li>\n<li>\n<p>I prefer touching my mouse as little as possible as I am a fast<br>\ntypist and keeping my hands on the keyboard is usually much more<br>\nefficient. I feel like hovering the mouse over text in order to get<br>\ninteractive feedback would slow me down significantly.</p>\n</li>\n</ul>\n<p>Please keep in mind that this is not a plea to change anything. I'm<br>\nperfectly happy with the Output panel with the \"Proof state\" checkbock<br>\nticked. I just wanted to give some insight into my workflow and maybe<br>\nprovoke further input from people working similarly or differently to<br>\ngive the developers more data to work with.<br>\n<a href=\"/user_uploads/14278/N1WRzla1R7BCyuH6dSLRU-z4/isabelle_2015.png\">isabelle_2015.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/N1WRzla1R7BCyuH6dSLRU-z4/isabelle_2015.png\" title=\"isabelle_2015.png\"><img src=\"/user_uploads/14278/N1WRzla1R7BCyuH6dSLRU-z4/isabelle_2015.png\"></a></div>",
        "id": 294664561,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661171237
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nOn 03/01/2016 17:38, C. Diekmann wrote:</p>\n<blockquote>\n<p>Hi,</p>\n<p>when I first started RC0, the default setting was quite confusing for me.</p>\n<p>I moved the current line cursor to a lemma statement.<br>\nWhat I observed:<br>\n   The bottom buffer was set to output. It displays nothing<br>\n   The right buffer shows the Documentation panel.</p>\n<p>What I expected:<br>\n   The proof state is displayed somewhere.</p>\n<p>The proof state is only visible when I select the state panel (as<br>\ndocumented). This might be confusing for new-comers.&gt; In addition, my<br>\nproof state is usually huge, but by default, the right panel is very<br>\nsmall.</p>\n<p>Splitting state and output may be a good idea for power users with<br>\nlarge displays. On my laptop with only one fullHD display, I just<br>\ncan't find a satisfying setting. Maybe it is a good idea to distribute<br>\nIsabelle with a simple GUI setup. Power users can still change the<br>\ndefaults. This would mean that by default, the proof state is sent to<br>\nthe output panel.</p>\n<p>What do other users think?</p>\n</blockquote>\n<p>I voiced the same concern when the new default was introduced.</p>\n<p>Tobias</p>\n<blockquote>\n<p>Best Regards,<br>\n   Cornelius</p>\n<p>2016-01-01 20:17 GMT+01:00 Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;:</p>\n<blockquote>\n<p>Dear Isabelle users,</p>\n<p>the coming Isabelle2016 release is scheduled for February 2016, after the<br>\nnext big Java 8 update by Oracle in January and some weeks before the<br>\ndeadline of ITP 2016.</p>\n<p>To get started with systematic testing there is now the relatively early<br>\n<a href=\"http://isabelle.in.tum.de/website-Isabelle2016-RC0\">http://isabelle.in.tum.de/website-Isabelle2016-RC0</a> (corresponding to<br>\nIsabelle/e18444532fce and AFP/c62777f3e932).</p>\n<p>The website, NEWS, ANNOUNCE etc. are already mostly up-to-date.  Some<br>\ndocumentation is still lagging behind, notably the Isabelle/jEdit manual.<br>\nThere are further fine points still to be sorted out.</p>\n<p>When discussing problems, observations, suggustions, etc. the mail subject<br>\nline should be changed to something meaningful (but the release candidate<br>\nnumber still given in the message body).</p>\n<p>As usual it is important to keep general laws of causality in mind: release<br>\ncandidates may still change, but the final release is final. Although this<br>\nis tautological, in the past few releases we've often had complaints right<br>\nafter final lift-off, when it was too late.</p>\n<p>So the best time to start testing is now.</p>\n<p>Makarius<br>\n</p>\n</blockquote>\n<p><a href=\"/user_uploads/14278/_lkAU9alXI-OfkEcraODfluj/smime.p7s\">smime.p7s</a></p>\n</blockquote>",
        "id": 294664574,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661171242
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Thu, 7 Jan 2016, Julian Brunner wrote:</p>\n<blockquote>\n<p>My thoughts on the subject:</p>\n<ul>\n<li>Interactively viewing the proof state is important to me even though<br>\nI never write apply-style proofs. When faced with a proof obligation,<br>\nI like to collect the facts that I think will be relevant with<br>\n'using'. This allows me to stare at both the facts and the goal<br>\nsimultaneously in the proof state, getting a better grasp on how to<br>\nprove the goal. Without the proof state, I would have to restate the<br>\nfacts explicitly in order to view them in close proximity to the goal<br>\nstatement and relieving me of the mental effort of keeping them all in<br>\nmy mind. It also allows me to play around with the facts and the goal<br>\nin order to get a better idea of the proof. Of course, once found, I<br>\nmay still want to clean up the proof to make it readable without<br>\nhaving access to the proof state.</li>\n<li>The proof state is also useful when dealing with complex induction<br>\nrules, relieving me of the mental effort of instantiating the<br>\ninduction rule in my mind and presenting me with nicely formatted<br>\nsubgoals.</li>\n<li>Of course, these points do not really apply to educational examples<br>\nwhere an experienced user already knows what the proof state is going<br>\nto be at each point of the proof, as well as which tools will be able<br>\nto solve which goals. However, they do apply to inexperienced users as<br>\nwell as experienced users working on complex proofs.</li>\n</ul>\n</blockquote>\n<p>These are classic observations about proof state output.  There is nothing <br>\nto add at the moment, what has not been said in the last 15 years.</p>\n<blockquote>\n<ul>\n<li>I prefer the 2-buffer model as it takes up less space on my screen<br>\nwithout forcing me to switch between two different panels to get<br>\nvarious kinds of feedback from the system. It allows me to work with<br>\ntwo theories (vertical split), the Theories panel and the Output panel<br>\non a single screen (see attached screenshot). When using the 3-buffer<br>\nmodel, at most one of the feedback buffers actually provides<br>\ninformation most of the time, with the other one just wasting space.<br>\nHowever, since it's not always the same feedback buffer that is<br>\nimportant, I need to keep both of them open anyways. This problem is<br>\nmade worse by the fact that these panels cannot both be docked at the<br>\nbottom by default (since these terms can become large, I prefer to<br>\nhave them displayed in a wide rather than a tall buffer).</li>\n<li>I prefer touching my mouse as little as possible as I am a fast<br>\ntypist and keeping my hands on the keyboard is usually much more<br>\nefficient. I feel like hovering the mouse over text in order to get<br>\ninteractive feedback would slow me down significantly.</li>\n</ul>\n</blockquote>\n<p>Fine.  It should be trivial to use that model.  Just a few clicks to <br>\nchange the defaults.  (Unless you have counter examples on that.)</p>\n<p>The new model with separate Output vs. State was in the pipeline for many <br>\nyears.  There were various reasons why it emerged for Isabelle2016, based <br>\non feedback by power users and observations of new users in the past few <br>\nyears.</p>\n<p>I have already learned that <em>any</em> change in user interface always produces <br>\nresistance and reluctance on the side of users who have got used to a <br>\ndifferent mode of operation.  This makes it hard to work out if there are <br>\ngenuine problems remaining, or just more time required to get used to it.</p>\n<p>Makarius</p>",
        "id": 294664633,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661171267
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nCan you quote a changeset and mailing list message on that?</p>\n<p>The State output has changed many times in the past few months.  I have <br>\nincorporated all observations and feedback into Isabelle2016-RC0 as far as <br>\nI can tell.</p>\n<p>If anything has been overlooked, I need concrete information on that.</p>\n<p>Makarius</p>",
        "id": 294664649,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661171273
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nOn 08/01/2016 16:36, Makarius wrote:</p>\n<blockquote>\n<p>On Thu, 7 Jan 2016, Tobias Nipkow wrote:</p>\n<blockquote>\n<blockquote>\n<p>I moved the current line cursor to a lemma statement.<br>\n What I observed:<br>\n    The bottom buffer was set to output. It displays nothing<br>\n    The right buffer shows the Documentation panel.</p>\n<p>What I expected:<br>\n    The proof state is displayed somewhere.</p>\n<p>The proof state is only visible when I select the state panel (as<br>\n documented). This might be confusing for new-comers.&gt; In addition, my<br>\n proof state is usually huge, but by default, the right panel is very<br>\n small.</p>\n<p>Splitting state and output may be a good idea for power users with<br>\n large displays. On my laptop with only one fullHD display, I just<br>\n can't find a satisfying setting. Maybe it is a good idea to distribute<br>\n Isabelle with a simple GUI setup. Power users can still change the<br>\n defaults. This would mean that by default, the proof state is sent to<br>\n the output panel.</p>\n<p>What do other users think?</p>\n</blockquote>\n<p>I voiced the same concern when the new default was introduced.</p>\n</blockquote>\n<p>Can you quote a changeset and mailing list message on that?</p>\n</blockquote>\n<p>See <br>\n<a href=\"https://mailmanbroy.informatik.tu-muenchen.de/pipermail/isabelle-dev/2015-November/006420.html\">https://mailmanbroy.informatik.tu-muenchen.de/pipermail/isabelle-dev/2015-November/006420.html</a></p>\n<p>Tobias</p>\n<blockquote>\n<p>The State output has changed many times in the past few months.  I have<br>\nincorporated all observations and feedback into Isabelle2016-RC0 as far as I can<br>\ntell.</p>\n<p>If anything has been overlooked, I need concrete information on that.</p>\n<p>Makarius<br>\n<a href=\"/user_uploads/14278/hMV8bVWcvfAI06NJZgo9XYnj/smime.p7s\">smime.p7s</a></p>\n</blockquote>",
        "id": 294664770,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661171316
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThat is a rather old thread. I don't see any connection to the way it <br>\nworks in Isabelle2016-RC0.</p>\n<p>Of course you can always re-open a new discussion.</p>\n<p>Makarius</p>",
        "id": 294664780,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661171322
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nOn 09/01/2016 13:21, Makarius wrote:</p>\n<blockquote>\n<p>On Sat, 9 Jan 2016, Tobias Nipkow wrote:</p>\n<blockquote>\n<blockquote>\n<p>Can you quote a changeset and mailing list message on that?</p>\n</blockquote>\n<p>See<br>\n<a href=\"https://mailmanbroy.informatik.tu-muenchen.de/pipermail/isabelle-dev/2015-November/006420.html\">https://mailmanbroy.informatik.tu-muenchen.de/pipermail/isabelle-dev/2015-November/006420.html</a></p>\n</blockquote>\n<p>That is a rather old thread. I don't see any connection to the way it works in<br>\nIsabelle2016-RC0.</p>\n</blockquote>\n<p>Both Cornelius and I refer to the fact that the proof state is not displayed by <br>\ndefault in the output window.</p>\n<p>Tobias</p>\n<blockquote>\n<p>Of course you can always re-open a new discussion.</p>\n<p>Makarius</p>\n<p><a href=\"/user_uploads/14278/lB1GO2XdSTBArWSVFkQaXGc8/smime.p7s\">smime.p7s</a></p>\n</blockquote>",
        "id": 294664914,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661171390
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nPersonally, I have no problem with the change itself. The new way is cleaner, avoiding mixing error messages with the state output. But it could be disconcerting when encountered for the first time, so we need to advertise it clearly. I have completely switched to the State window and only display the Output window very exceptionally. Other people will do things differently.</p>\n<p>Larry</p>",
        "id": 294664919,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661171395
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe key difference to the version in November 2015:</p>\n<p>* Output has a button to enable \"Proof state\"</p>\n<p>* State has a button to disable \"Auto update\"</p>\n<p>Thus it is trivial to switch certain modes of operation on the fly.</p>\n<p>The State buffer is conceptually cleaner and has many other advantages. <br>\nThe main disadvantage: users need to change old habits, as usual.</p>\n<p>Makarius</p>",
        "id": 294664929,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661171401
    }
]