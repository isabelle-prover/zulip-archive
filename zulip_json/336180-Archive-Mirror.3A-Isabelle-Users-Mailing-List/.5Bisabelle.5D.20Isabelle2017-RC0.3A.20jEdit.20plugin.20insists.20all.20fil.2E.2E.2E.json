[
    {
        "content": "<p>From: <a href=\"mailto:Matthew.Brecknell@data61.csiro.au\">Matthew.Brecknell@data61.csiro.au</a><br>\nHi Makarius,</p>\n<p>I've run into the first hurdle updating the l4-verified proofs for Isabelle2017-RC0.</p>\n<p>We have many theories and other source files which are generated at various times during our lengthy build process. It seems that before I can use <code>isabelle jedit -d</code> to load even our very first session, I must first generate all files mentioned in all sessions accessible from the ROOTS file, and all their theories.</p>\n<p>Otherwise, I get errors like this, with a corresponding error dialog:</p>\n<p>$ isabelle jedit -d .<br>\n4:00:38 PM [main] [error] PluginJAR: Error while starting plugin isabelle.jedit.Plugin<br>\n4:00:38 PM [main] [error] PluginJAR: *** No such file: \"/home/matthewb/verification/isa2017/l4v/spec/machine/ARM/MachineTypes.thy\"<br>\n4:00:38 PM [main] [error] PluginJAR: *** The error(s) above occurred for theory \"CKernel.MachineTypes\"<br>\n4:00:38 PM [main] [error] PluginJAR: *** (required by \"CKernel.Kernel_C\") (line 13 of \"/home/matthewb/verification/isa2017/l4v/spec/cspec/ARM/Kernel_C.thy\")<br>\n4:00:38 PM [main] [error] PluginJAR: *** The error(s) above occurred in session \"CKernel\" (line 84 of \"/home/matthewb/verification/isa2017/l4v/spec/ROOT\")<br>\n&lt;snip&gt;<br>\n4:00:38 PM [main] [error] PluginJAR:  at isabelle.Sessions$.deps(sessions.scala:144)<br>\n4:00:38 PM [main] [error] PluginJAR:  at isabelle.Sessions$.session_base(sessions.scala:280)<br>\n4:00:38 PM [main] [error] PluginJAR:  at isabelle.jedit.JEdit_Sessions$.session_base(jedit_sessions.scala:59)<br>\n4:00:38 PM [main] [error] PluginJAR:  at isabelle.jedit.Plugin.init_resources(plugin.scala:74)<br>\n4:00:38 PM [main] [error] PluginJAR:  at isabelle.jedit.Plugin.start(plugin.scala:415)<br>\n4:00:38 PM [main] [error] PluginJAR:  at org.gjt.sp.jedit.PluginJAR.startPlugin(PluginJAR.java:1740)<br>\n4:00:38 PM [main] [error] PluginJAR:  at org.gjt.sp.jedit.PluginJAR.activatePlugin(PluginJAR.java:951)<br>\n4:00:38 PM [main] [error] PluginJAR:  at org.gjt.sp.jedit.PluginJAR.activatePluginIfNecessary(PluginJAR.java:1021)<br>\n4:00:38 PM [main] [error] PluginJAR:  at org.gjt.sp.jedit.jEdit.main(jEdit.java:550)<br>\n&lt;snip&gt;<br>\n4:00:38 PM [main] [error] PluginJAR:  at isabelle.Main.main(main.scala)<br>\n4:00:38 PM [main] [error] ErrorListDialog$ErrorEntry: /home/matthewb/verification/isa2017/isabelle/src/Tools/jEdit/dist/jars/Isabelle-jEdit.jar:<br>\n4:00:38 PM [main] [error] ErrorListDialog$ErrorEntry: Cannot start:<br>\n4:00:38 PM [main] [error] ErrorListDialog$ErrorEntry: *** No such file: \"/home/matthewb/verification/isa2017/l4v/spec/machine/ARM/MachineTypes.thy\"<br>\n4:00:38 PM [main] [error] ErrorListDialog$ErrorEntry: *** The error(s) above occurred for theory \"CKernel.MachineTypes\"<br>\n4:00:38 PM [main] [error] ErrorListDialog$ErrorEntry: *** (required by \"CKernel.Kernel_C\") (line 13 of \"/home/matthewb/verification/isa2017/l4v/spec/cspec/ARM/Kernel_C.thy\")<br>\n4:00:38 PM [main] [error] ErrorListDialog$ErrorEntry: *** The error(s) above occurred in session \"CKernel\" (line 84 of \"/home/matthewb/verification/isa2017/l4v/spec/ROOT\")</p>\n<p>Can this requirement be relaxed again, so that I only need the files for the session I want to load?</p>\n<p>Regards,<br>\nMatthew</p>",
        "id": 294715605,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661183667
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 22/08/17 09:01, <a href=\"mailto:Matthew.Brecknell@data61.csiro.au\">Matthew.Brecknell@data61.csiro.au</a> wrote:</p>\n<blockquote>\n<p>We have many theories and other source files which are generated at various times during our lengthy build process. It seems that before I can use <code>isabelle jedit -d</code> to load even our very first session, I must first generate all files mentioned in all sessions accessible from the ROOTS file, and all their theories.</p>\n</blockquote>\n<p>This sounds like a conflict of a legacy build process based on \"make\"<br>\nversus Isabelle session structure with \"isabelle build\" and now<br>\nincreasingly inside Isabelle/jEdit.</p>\n<p>At some point you should try to overcome this tension, and do it all<br>\nwithin static theory sources (by loading other files into a theory from<br>\nwithin).</p>\n<blockquote>\n<p>Can this requirement be relaxed again, so that I only need the files for the session I want to load?</p>\n</blockquote>\n<p>See the following NEWS entry:</p>\n<ul>\n<li>Command-line invocation \"isabelle jedit -R -l SESSION\" uses the parent<br>\nimage of the SESSION, with qualified theory imports restricted to that<br>\nportion of the session graph. Moreover, the ROOT entry of the SESSION is<br>\nopened in the editor.</li>\n</ul>\n<p>Note that after Isabelle2017-RC0 (e.g. in current snapshots from<br>\n<a href=\"http://isabelle.in.tum.de/devel/release_snapshot\">http://isabelle.in.tum.de/devel/release_snapshot</a>) the session-qualified<br>\nimports are even more rigorous. It might cause additional problems for<br>\nyour setup.</p>\n<p>Makarius</p>",
        "id": 294715631,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661183680
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nDear Matthew, Makarius,<br>\nI'd like to add another (tangential) observation to this thread.</p>\n<p>Previously, when editing some theories in the AFP, it was sufficient to<br>\njust open Isabelle/jEdit – no special command line flags required<br>\n(assuming HOL as a base image). To ensure this, AFP policy states that<br>\nimports from other entries should be relative (i.e.<br>\n\"../Other_Entry/Thy\") instead of absolute (i.e. \"$AFP/Other_Entry/Thy\").</p>\n<p>While I appreciate the sentiment behind qualified imports (no more<br>\nincoherent imports!), this workflow doesn't work anymore. It is<br>\nnecessary to start Isabelle/jEdit from the command line as follows:</p>\n<p>isabelle jedit -d 'path/to/afp/thys' ...</p>\n<p>Even if the AFP is registered as a component, this is still necessary.<br>\nWhile components are automatically registered as session roots, the AFP<br>\nbase directory is not a session root.</p>\n<p>I'd like to make a suggestion to mitigate this situation: make the AFP<br>\nbase directory a session root, by adding a \"ROOTS\" file pointing to<br>\n\"thys\" [0]. This might come with a performance penalty because on every<br>\ntool invocation, Isabelle/Scala has to traverse the sessions graph.<br>\nMakarius might be able to estimate that penalty.</p>\n<p>Maybe there is also another way to include session roots.</p>\n<p>Cheers<br>\nLars</p>\n<p>[0] This is basically the approach I took in<br>\n&lt;<a href=\"https://github.com/larsrh/afp\">https://github.com/larsrh/afp</a>&gt;.</p>",
        "id": 294715637,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661183683
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 22/08/17 12:15, Lars Hupel wrote:</p>\n<blockquote>\n<p>Previously, when editing some theories in the AFP, it was sufficient to<br>\njust open Isabelle/jEdit – no special command line flags required<br>\n(assuming HOL as a base image). To ensure this, AFP policy states that<br>\nimports from other entries should be relative (i.e.<br>\n\"../Other_Entry/Thy\") instead of absolute (i.e. \"$AFP/Other_Entry/Thy\").</p>\n</blockquote>\n<p>This actually needs to be updated for Isabelle2017:</p>\n<p>* Users of AFP need to formally provide its session name space to<br>\nIsabelle tools, e.g. via \"isabelle build -d 'path/to/afp/thys'\" or<br>\n\"isabelle jedit -d 'path/to/afp/thys'\" or by adding a line with<br>\n\"path/to/afp/thys\" to $ISABELLE_HOME_USER/ROOTS to make this persistent.</p>\n<p>* Imports of theories from other sessions should always use the formal<br>\nsession-qualified name, e.g. \"HOL-Library.AList\" or<br>\n\"Coinductive.Coinductive_List\". This requires to specify the other<br>\nsessions as parent or as imported 'sessions' in ROOT.</p>\n<p>* The command-line tool \"isabelle imports -U -d ... My_Session\" helps<br>\nto standardize imports in .thy and ROOT files in this respect.</p>\n<blockquote>\n<p>While I appreciate the sentiment behind qualified imports (no more<br>\nincoherent imports!), this workflow doesn't work anymore. It is<br>\nnecessary to start Isabelle/jEdit from the command line as follows:</p>\n<p>isabelle jedit -d 'path/to/afp/thys' ...</p>\n</blockquote>\n<p>It is <em>possible</em> to use option -d, and there are other ways.</p>\n<p>Maybe we should advertize $ISABELLE_HOME_USER/ROOTS to users more<br>\nprominently. At some point the Prover IDE might provide an editor for<br>\nthat: at the moment it just means to open that text file directly using<br>\nthe above symbolic name (maybe I should add a menu item for that).</p>\n<blockquote>\n<p>Even if the AFP is registered as a component, this is still necessary.<br>\nWhile components are automatically registered as session roots, the AFP<br>\nbase directory is not a session root.</p>\n</blockquote>\n<p>The component has de-facto no relevance to AFP users. It merely contains<br>\nvarious administrative settings and tools that have accumulated over<br>\ntime, without a specific plan behind it.</p>\n<p>I am using the component myself only to get a symbolic handle $AFP for<br>\nvarious command-line invocations like \"isabelle build -d '$AFP' -a\" to<br>\nbuild Isabelle + AFP as a whole.</p>\n<blockquote>\n<p>I'd like to make a suggestion to mitigate this situation: make the AFP<br>\nbase directory a session root, by adding a \"ROOTS\" file pointing to<br>\n\"thys\" [0]. This might come with a performance penalty because on every<br>\ntool invocation, Isabelle/Scala has to traverse the sessions graph.<br>\nMakarius might be able to estimate that penalty.</p>\n</blockquote>\n<p>Performance is one problem, and polluting the logical session name space<br>\nanother (i.e. the important option \"-a\" becomes hardly usable).</p>\n<p>Since the component is not required to refer to path/to/afp/thys, it can<br>\nbe ignored for this purpose (and maybe not even advertized to users<br>\nanymore).</p>\n<p>Makarius</p>",
        "id": 294715654,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661183688
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;</p>\n<blockquote>\n<p>Maybe we should advertize $ISABELLE_HOME_USER/ROOTS to users more<br>\nprominently. At some point the Prover IDE might provide an editor for<br>\nthat: at the moment it just means to open that text file directly using<br>\nthe above symbolic name (maybe I should add a menu item for that).</p>\n</blockquote>\n<p>Alternatively, another possibility could be to provide an Isabelle tool<br>\nand/or jEdit action to do it automatically. It could be as simple as</p>\n<p>isabelle add_root /path/to/afp</p>\n<p>... and/or a corresponding action in jEdit. I posit that that could be<br>\nuseful to many users. Using the AFP is a disruption to the otherwise<br>\nquite nice workflow of \"extract Isabelle and it just works\".</p>\n<blockquote>\n<p>Performance is one problem, and polluting the logical session name space<br>\nanother (i.e. the important option \"-a\" becomes hardly usable).</p>\n</blockquote>\n<p>Is the latter really a problem? I thought this is what session groups<br>\nare for, i.e. \"build -g afp\" instead of \"build -D $AFP\".</p>\n<p>But surely adding the AFP to \"$ISABELLE_HOME_USER/ROOTS\" would also give<br>\nthese drawbacks.</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294715669,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661183695
    },
    {
        "content": "<p>From: <a href=\"mailto:Matthew.Brecknell@data61.csiro.au\">Matthew.Brecknell@data61.csiro.au</a><br>\nRight, thanks. I had seen this, but misunderstood its purpose. I see<br>\nnow that it should allow us to proceed with updating our proofs for<br>\nIsabelle2017, independently of any examination of our build process.</p>\n<p>Regards,<br>\nMatthew</p>",
        "id": 294715703,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661183707
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nNot quite. The session groups are more like \"tags\" that mark certain<br>\naspects of sessions. Directory structure is more rigid than that<br>\n(structurally more reliable for exhaustive testing).</p>\n<p>In recent years, I have increasingly understood directories (with their<br>\ninternal wiring of ROOTS and ROOT files) for composition of big<br>\nprojects, via options like -d or -D or entries in $ISABELLE_HOME_USERS/ROOTS</p>\n<p>This explains the general direction of the system implementation in the<br>\npast 5 years.</p>\n<p>Makarius</p>",
        "id": 294715726,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661183720
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI've tried with a menu, i.e. \"Favorites\" in the jEdit file dialog, but<br>\nit did not work for $ISABELLE_HOME_USER/ROOTS as plain file, as opposed<br>\nto the existing $ISABELLE_HOME_USER for the directory.</p>\n<p>So users need to be directed to that important file by other means.</p>\n<p>Note that the Isabelle/jEdit startup sequence already generates a<br>\ntemplate for the file if it does not exists yet (see Isabelle/6e35cf3ce869).</p>\n<p>Makarius</p>",
        "id": 294719927,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661184437
    }
]