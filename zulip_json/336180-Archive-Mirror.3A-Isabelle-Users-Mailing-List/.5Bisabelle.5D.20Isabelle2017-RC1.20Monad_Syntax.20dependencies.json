[
    {
        "content": "<p>From: \"C. Diekmann\" &lt;<a href=\"mailto:diekmann@in.tum.de\">diekmann@in.tum.de</a>&gt;<br>\nDear Makarius,</p>\n<p>I just loaded Monad_Syntax in Isabelle2017-RC1 and observed that it pulls<br>\nin many dependencies. In particular, it transitively depends<br>\non Old_Datatype. This is not a bug, but very surprising behavior to me: I<br>\nwould expect only additional syntactic sugar from a theory that calls<br>\nitself _Syntax and not a huge set of Old_ functionality.</p>\n<p>Best,<br>\n  Cornelius</p>",
        "id": 294719164,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661184173
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nThat is partly my fault.</p>\n<p>changeset:   66260:466d8e7ed170<br>\nuser:        Lars Hupel &lt;<a href=\"mailto:lars.hupel@mytum.de\">lars.hupel@mytum.de</a>&gt;<br>\ndate:        Mon Jul 10 23:21:54 2017 +0200<br>\nsummary:     FSet is monadic</p>\n<p>Monad_Syntax sets up sugar for finite sets, which pulls in \"Countable\",<br>\nwhich provides a tactic that works on \"Old_Datatype\".</p>\n<p>A quick grep over distribution+AFP suggests that that tactic is not used<br>\non old datatypes.</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294719179,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661184180
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nIs there a genuine problem behind it? Otherwise I would say we leave it<br>\nlike that for the release.</p>\n<p>Makarius</p>",
        "id": 294719232,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661184196
    },
    {
        "content": "<p>From: \"C. Diekmann\" &lt;<a href=\"mailto:diekmann@in.tum.de\">diekmann@in.tum.de</a>&gt;<br>\n2017-09-06 21:56 GMT+02:00 Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;:</p>\n<blockquote>\n<p>On 06/09/17 18:44, Lars Hupel wrote:</p>\n<blockquote>\n<blockquote>\n<p>I just loaded Monad_Syntax in Isabelle2017-RC1 and observed that it<br>\npulls<br>\nin many dependencies. In particular, it transitively depends<br>\non Old_Datatype. This is not a bug, but very surprising behavior to<br>\nme: I<br>\nwould expect only additional syntactic sugar from a theory that calls<br>\nitself _Syntax and not a huge set of Old_ functionality.</p>\n</blockquote>\n<p>That is partly my fault.</p>\n<p>changeset:   66260:466d8e7ed170<br>\nuser:        Lars Hupel &lt;<a href=\"mailto:lars.hupel@mytum.de\">lars.hupel@mytum.de</a>&gt;<br>\ndate:        Mon Jul 10 23:21:54 2017 +0200<br>\nsummary:     FSet is monadic</p>\n<p>Monad_Syntax sets up sugar for finite sets, which pulls in \"Countable\",<br>\nwhich provides a tactic that works on \"Old_Datatype\".</p>\n</blockquote>\n<p>Is there a genuine problem behind it? Otherwise I would say we leave it<br>\nlike that for the release.</p>\n</blockquote>\n<p>If we keep FSet in Monad_Syntax, then everybody who uses Monad_Syntax also<br>\ngets all the lemmata, tactics, simpset (if it changes anything) from FSet,<br>\nCountable, and Old_Datatype into its namespace. This may change the<br>\nbehavior of sledgehammer and other automated tools. This may make certain<br>\nthings harder to reproduce. I don't know of any particular issue, but I may<br>\nthink of a future issue like \"sledgehammer and auto can only solve a<br>\nsubgoal if I include Monad_Syntax. But I don't have any monad syntax in my<br>\nthy.\" As I said, my feeling about a theory which is named *_Syntax is that<br>\nit should not provide more than syntactic sugar.</p>\n<p>My personal feeling is that FSet should get removed from Monad_Syntax.<br>\nCurrently, we should be able to do this without breaking any dependencies<br>\nfor users of the stable release.</p>\n<p>In Isabelle2016-1 we have<br>\ntheory Monad_Syntax<br>\nimports Main \"~~/src/Tools/Adhoc_Overloading\"</p>\n<p>In Isabelle2017-RC1 we have<br>\ntheory Monad_Syntax<br>\nimports FSet \"~~/src/Tools/Adhoc_Overloading\"</p>\n<p>Maybe one could add the monad syntax to FSet. But then FSet would depend on<br>\nMonad_Syntax, ... a chicken-or-egg dilemma.</p>\n<p>Maybe we we need a theory similar to</p>\n<p>theory FSet_Monad_Syntax<br>\n  imports FSet Monad_Syntax<br>\n  begin<br>\n  adhoc_overloading FSet.fbind<br>\n  end</p>\n<p>This would also be a really helpful example. It took me more than one hour<br>\nto understand how I can get the monad syntax to work with my custom bind<br>\nfunction for my custom datatype.</p>\n<p>But maybe I'm overfitting stuff here according to my personal preferences.<br>\nBut I guess once we have FSet as dependency in Monad_Syntax (which is<br>\ncurrently NOT the case for Isabelle2016-1), we can nevever go back (without<br>\nbreaking anything).</p>\n<p>Cheers,<br>\n  Cornelius</p>",
        "id": 294719255,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661184202
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nI agree with Cornelius. If possible the dependency on FSet should be removed <br>\nbefore the release. If not, I assume Lars will remove it afterwards, which may <br>\nthen create new complications for the release after this one.</p>\n<p>Tobias<br>\n<a href=\"/user_uploads/14278/D6U-deG-XQlfnJrQRq4rU5Lm/smime.p7s\">smime.p7s</a></p>",
        "id": 294719267,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661184205
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nI have no strong opinion. I also don't think anybody uses this yet, so<br>\nMakarius, please back out 466d8e7ed170 from the release fork.</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294719282,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661184210
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI am about to do this, but note that the release fork did not happen<br>\nyet. (I am still waiting for some updates on Nunchaku.)</p>\n<p>Makarius</p>",
        "id": 294719300,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661184217
    }
]