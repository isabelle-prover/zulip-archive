[
    {
        "content": "<p>From: Dominique Unruh &lt;<a href=\"mailto:unruh@ut.ee\">unruh@ut.ee</a>&gt;<br>\nHi,</p>\n<p>I think the following should (depending on the intended semantics of<br>\nsessions) either give an error or have a different behavior.</p>\n<p>In a specific setup (see below) involving sessions, the Draft session, and<br>\na symlinked directory, jEdit will load the same theory file twice, once as<br>\nA.A and once as Draft.A. There will be no error message. Both A's in the<br>\ntheory panel will open the same file, but editing that file will affect<br>\nonly one of the two instances of A in the Isabelle backend. (E.g., typing<br>\nnonsense will produce red marks in the theory panel in only one of the<br>\nA's.) The other A is effectively read-only.</p>\n<p>How to reproduce?</p>\n<p>- Untar the attached tgz (in Linux).<br>\n   - It contains a session root directory dir1, and a symlink dir2 to dir1<br>\n   - The session root contains a session A with A.thy, a session B = A +<br>\n   B.thy, and a sessionless file Test.thy (e.g., a scratch file) importing<br>\n   A.thy without qualification</p>\n<p>- Run Isabelle with parameters \"jedit -d dir2 dir2/B.thy dir2/Test.thy</p>\n<p>Observations:</p>\n<p>- The effect does not occur when first cd'ing into dir2.<br>\n   - The effect can also be avoided by always using qualified imports in<br>\n   scratch-theories (like Test.thy)</p>\n<p>- The effect can be avoided by avoiding symlinks<br>\n   - Possibly the theory import as I did it is \"improper\" user behavior<br>\n   (although convenient for experimentation), this is why I wrote that there<br>\n   should probably an error message.</p>\n<p>Best wishes,<br>\nDominique.</p>",
        "id": 294738650,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190722
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 18/07/18 17:23, Dominique Unruh wrote:</p>\n<blockquote>\n<p>I think the following should (depending on the intended semantics of<br>\nsessions) either give an error or have a different behavior.</p>\n<p>In a specific setup (see below) involving sessions, the Draft session, and<br>\na symlinked directory, jEdit will load the same theory file twice, once as<br>\nA.A and once as Draft.A. There will be no error message. Both A's in the<br>\ntheory panel will open the same file, but editing that file will affect<br>\nonly one of the two instances of A in the Isabelle backend. (E.g., typing<br>\nnonsense will produce red marks in the theory panel in only one of the<br>\nA's.) The other A is effectively read-only.</p>\n<p>How to reproduce?</p>\n<p>- Untar the attached tgz (in Linux).<br>\n   - It contains a session root directory dir1, and a symlink dir2 to dir1<br>\n   - The session root contains a session A with A.thy, a session B = A +<br>\n   B.thy, and a sessionless file Test.thy (e.g., a scratch file) importing<br>\n   A.thy without qualification<br>\n   - Run Isabelle with parameters \"jedit -d dir2 dir2/B.thy dir2/Test.thy</p>\n</blockquote>\n<p>Somehow the attachment did not get on the mailing list.</p>\n<blockquote>\n<p>Observations:</p>\n<p>- The effect does not occur when first cd'ing into dir2.<br>\n   - The effect can also be avoided by always using qualified imports in<br>\n   scratch-theories (like Test.thy)<br>\n   - The effect can be avoided by avoiding symlinks<br>\n   - Possibly the theory import as I did it is \"improper\" user behavior<br>\n   (although convenient for experimentation), this is why I wrote that<br>\nthere<br>\n   should probably an error message.</p>\n</blockquote>\n<p>I can imagine various inconvenient situations, especially with symlinks:<br>\nI don't think the system works properly in the general situation, but<br>\nthe example might be sufficiently easy to make it more robust (for a<br>\nrelease after Isabelle2018).</p>\n<p>Concerning improper imports of theories from other sessions, without<br>\nusing the session-qualified names, Isabelle2018 is likely to cause<br>\nproblems for users who did not take the corresponding NEWS entries in<br>\nIsabelle2017 and Isabelle2018 seriously, or just did not read them --<br>\nthis might be actually the majority.</p>\n<p>We probably need to rethink the theory import scheme one again, i.e.<br>\nremove further degrees of freedom from the user, and allow theory files<br>\nto reside only in the session directory itself. This would also speed up<br>\nthe exploration of theory dependencies in the Prover IDE, to map plain<br>\nfiles to formal session-qualified names.</p>\n<p>Makarius</p>",
        "id": 294739244,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190900
    },
    {
        "content": "<p>From: Dominique Unruh &lt;<a href=\"mailto:unruh@ut.ee\">unruh@ut.ee</a>&gt;<br>\nHi,</p>\n<blockquote>\n<p>Somehow the attachment did not get on the mailing list.</p>\n</blockquote>\n<p>I forgot to attach it. Unfortunately, I don't seem to have the example any<br>\nmore.</p>\n<p>Concerning improper imports of theories from other sessions, without</p>\n<blockquote>\n<p>using the session-qualified names, Isabelle2018 is likely to cause<br>\nproblems for users who did not take the corresponding NEWS entries in<br>\nIsabelle2017 and Isabelle2018 seriously, or just did not read them --<br>\nthis might be actually the majority.<br>\n</p>\n</blockquote>\n<p>Even when following those instruction, there can be some confusion in<br>\njEdit/PIDE (short: jEdit), I think.<br>\nWhile for the build process, I think everything is clear (when reading<br>\nenough of the documentation), in jEdit, I am not sure it's totally clear<br>\nhow jEdit determines dynamically which theory file is in which session.<br>\n(E.g., with Isabelle 2018, I have had a number of times the situation that<br>\nI created a new theory file (which then jEdit assumes to be in Draft), then<br>\nimported it from another theory (which is already in a named session X),<br>\nand then the new theory should be in the X (not in Draft anymore), but it<br>\ntakes a bit of closing of files and clicking the Purge button until jEdit<br>\nrealizes this. In the process, I see duplicated theories in the theory<br>\nview, etc.) All those problems are transient though (in the sense that they<br>\nvanish when restarting jEdit).</p>\n<p>Best wishes,<br>\nDominique.</p>\n<p>On 14 August 2018 at 15:53, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n<blockquote>\n<p>On 18/07/18 17:23, Dominique Unruh wrote:</p>\n<blockquote>\n<p>I think the following should (depending on the intended semantics of<br>\nsessions) either give an error or have a different behavior.</p>\n<p>In a specific setup (see below) involving sessions, the Draft session,<br>\nand<br>\na symlinked directory, jEdit will load the same theory file twice, once<br>\nas<br>\nA.A and once as Draft.A. There will be no error message. Both A's in the<br>\ntheory panel will open the same file, but editing that file will affect<br>\nonly one of the two instances of A in the Isabelle backend. (E.g., typing<br>\nnonsense will produce red marks in the theory panel in only one of the<br>\nA's.) The other A is effectively read-only.</p>\n<p>How to reproduce?</p>\n<p>- Untar the attached tgz (in Linux).<br>\n   - It contains a session root directory dir1, and a symlink dir2 to<br>\ndir1<br>\n   - The session root contains a session A with A.thy, a session B = A +<br>\n   B.thy, and a sessionless file Test.thy (e.g., a scratch file)<br>\nimporting<br>\n   A.thy without qualification<br>\n   - Run Isabelle with parameters \"jedit -d dir2 dir2/B.thy dir2/Test.thy</p>\n</blockquote>\n<p>Somehow the attachment did not get on the mailing list.</p>\n<blockquote>\n<p>Observations:</p>\n<p>- The effect does not occur when first cd'ing into dir2.<br>\n   - The effect can also be avoided by always using qualified imports in<br>\n   scratch-theories (like Test.thy)<br>\n   - The effect can be avoided by avoiding symlinks<br>\n   - Possibly the theory import as I did it is \"improper\" user behavior<br>\n   (although convenient for experimentation), this is why I wrote that<br>\nthere<br>\n   should probably an error message.</p>\n</blockquote>\n<p>I can imagine various inconvenient situations, especially with symlinks:<br>\nI don't think the system works properly in the general situation, but<br>\nthe example might be sufficiently easy to make it more robust (for a<br>\nrelease after Isabelle2018).</p>\n<p>Concerning improper imports of theories from other sessions, without<br>\nusing the session-qualified names, Isabelle2018 is likely to cause<br>\nproblems for users who did not take the corresponding NEWS entries in<br>\nIsabelle2017 and Isabelle2018 seriously, or just did not read them --<br>\nthis might be actually the majority.</p>\n<p>We probably need to rethink the theory import scheme one again, i.e.<br>\nremove further degrees of freedom from the user, and allow theory files<br>\nto reside only in the session directory itself. This would also speed up<br>\nthe exploration of theory dependencies in the Prover IDE, to map plain<br>\nfiles to formal session-qualified names.</p>\n<p>Makarius<br>\n</p>\n</blockquote>",
        "id": 294739283,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190918
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nDo you have more symlinks here?</p>\n<p>Anyway, it is very difficult to have a discussion with non-standard<br>\nterminology. The standard one is as follows:</p>\n<p>* VSCode: a text editor by Microsoft<br>\n  * jEdit: a text editor by the jEdit project team<br>\n  * PIDE: some Isabelle infrastructure for Prover IDEs<br>\n  * Isabelle/VSCode: Isabelle Prover IDE based on VSCode<br>\n  * Isabelle/jEdit: Isabelle Prover IDE based on jEdit</p>\n<p>Recently I have tried hard to make the behaviour of Isabelle/VSCode and<br>\nIsabelle/jEdit agree, concerning the mapping of plain file names to<br>\nformal session-qualified theory names, but there might be still oddities<br>\nsomewhere. Figuring that out, requires to look very closely what really<br>\nhappens, and where.</p>\n<p>Makarius</p>",
        "id": 294739304,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190930
    },
    {
        "content": "<p>From: Dominique Unruh &lt;<a href=\"mailto:unruh@ut.ee\">unruh@ut.ee</a>&gt;<br>\nSorry, I mixed up the names. I meant Isabelle/jEdit when I said jEdit/PIDE.</p>\n<p>Do you have more symlinks here?<br>\n&gt;</p>\n<p>The environment where I work on my main development has a symlink, so I<br>\ncannot tell whether it's part of the cause.<br>\nUnfortunately, I don't know how to reliably reproduce the problem, so I<br>\ncannot test it in a symlink-free directly.<br>\nSo it may or may not be related to symlinks.</p>\n<p>But I did find the tgz for the prior example. (Attached. Please add .tgz to<br>\nthe file name, GMail didn't allow me to send it with the correct file<br>\nending.)<br>\nI am attaching it.<br>\nI would like to stress that that example does not \"use\" the symlinks.<br>\nThat is, I never refer to the same file via two different paths.<br>\nI only refer to dir2 (never dir1).<br>\nSo my guess is that there is some inconsistency in when paths are<br>\nnormalized and when not.</p>\n<p>The specific case is quite exotic, so I don't think it needs to be fixed<br>\nfor it's own sake (I can work around it).<br>\nI posted it mainly because I thought it might indicate some bug somewhere<br>\nin the handling of paths that could lead to confusion in other cases, too.</p>\n<p>Best wishes,<br>\nDominique.</p>\n<hr>\n<p>In a specific setup (see below) involving sessions, the Draft session, and<br>\na symlinked directory, jEdit will load the same theory file twice, once as<br>\nA.A and once as Draft.A. There will be no error message. Both A's in the<br>\ntheory panel will open the same file, but editing that file will affect<br>\nonly one of the two instances of A in the Isabelle backend. (E.g., typing<br>\nnonsense will produce red marks in the theory panel in only one of the<br>\nA's.) The other A is effectively read-only.</p>\n<p>How to reproduce?</p>\n<p>- Untar the attached tgz (in Linux).<br>\n   - It contains a session root directory dir1, and a symlink dir2 to dir1<br>\n   - The session root contains a session A with A.thy, a session B = A +<br>\n   B.thy, and a sessionless file Test.thy (e.g., a scratch file) importing<br>\n   A.thy without qualification</p>\n<p>- Run Isabelle with parameters \"jedit -d dir2 dir2/B.thy dir2/Test.thy</p>\n<p>Observations:</p>\n<p>- The effect does not occur when first cd'ing into dir2.<br>\n   - The effect can also be avoided by always using qualified imports in<br>\n   scratch-theories (like Test.thy)</p>\n<p>- The effect can be avoided by avoiding symlinks<br>\n   - Possibly the theory import as I did it is \"improper\" user behavior<br>\n   (although convenient for experimentation), this is why I wrote that there<br>\n   should probably an error message.<br>\n<a href=\"/user_uploads/14278/R4RjKDTQPwSvuVumceE7zfMF/test-archive\">test-archive</a></p>",
        "id": 294739388,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190955
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 14/08/18 16:44, Dominique Unruh wrote:</p>\n<blockquote>\n<p>Do you have more symlinks here?<br>\n&gt;</p>\n<p>The environment where I work on my main development has a symlink, so I<br>\ncannot tell whether it's part of the cause.<br>\nUnfortunately, I don't know how to reliably reproduce the problem, so I<br>\ncannot test it in a symlink-free directly.<br>\nSo it may or may not be related to symlinks.</p>\n<p>But I did find the tgz for the prior example. (Attached. Please add .tgz to<br>\nthe file name, GMail didn't allow me to send it with the correct file<br>\nending.)<br>\nI am attaching it.<br>\nI would like to stress that that example does not \"use\" the symlinks.<br>\nThat is, I never refer to the same file via two different paths.<br>\nI only refer to dir2 (never dir1).<br>\nSo my guess is that there is some inconsistency in when paths are<br>\nnormalized and when not.</p>\n<p>The specific case is quite exotic, so I don't think it needs to be fixed<br>\nfor it's own sake (I can work around it).<br>\nI posted it mainly because I thought it might indicate some bug somewhere<br>\nin the handling of paths that could lead to confusion in other cases, too.</p>\n</blockquote>\n<p>These are interesting corner cases, concerning the mapping of file names<br>\nto session-qualified theory names, and naming theories in the first place.</p>\n<p>I have updated the test-archive slighty, to print the resulting formal<br>\ntheory name within the context. E.g. in \"isabelle build\" the messages<br>\nend up in the session log gz files.</p>\n<p>One problem with the symlink dir2 -&gt; dir1 is that in one place it gets<br>\nnormalized (e.g. isabelle.Sessions.Known.files) and in another place<br>\nthis is omitted (e.g. isabelle.Sessions.directories). I have now updated<br>\nthat for the next release (after Isabelle2018) as follows:</p>\n<p>changeset:   68745:f95e2f145ea5<br>\nuser:        wenzelm<br>\ndate:        Wed Aug 15 13:02:48 2018 +0200<br>\nfiles:       src/Pure/Thy/sessions.scala<br>\ndescription:<br>\ncanonical session directories in correspondence to Known.files;</p>\n<p>This avoids the duplication of theory A in Isabelle/jEdit, but that is<br>\nactually wrong! When you import just \"A\" from theory B.B, it should<br>\nbecome B.A: you can see that in the \"isabelle build\" log gz file.</p>\n<p>The mistake is importing \"A\" from B.B instead of \"A.A\": it is a \"general<br>\nuser error\", but the system could be more friendly in checking that and<br>\npointing that out.</p>\n<p>I think for the next release we really need a plain and simple scheme<br>\nwhere session theory files may reside, and rule out such odd situations<br>\nwhere a base directory contains files for different sessions.</p>\n<p>Makarius</p>\n<blockquote>\n<p>In a specific setup (see below) involving sessions, the Draft session, and<br>\na symlinked directory, jEdit will load the same theory file twice, once as<br>\nA.A and once as Draft.A. There will be no error message. Both A's in the<br>\ntheory panel will open the same file, but editing that file will affect<br>\nonly one of the two instances of A in the Isabelle backend. (E.g., typing<br>\nnonsense will produce red marks in the theory panel in only one of the<br>\nA's.) The other A is effectively read-only.</p>\n<p>How to reproduce?</p>\n<p>- Untar the attached tgz (in Linux).<br>\n   - It contains a session root directory dir1, and a symlink dir2 to dir1<br>\n   - The session root contains a session A with A.thy, a session B = A +<br>\n   B.thy, and a sessionless file Test.thy (e.g., a scratch file) importing<br>\n   A.thy without qualification<br>\n   - Run Isabelle with parameters \"jedit -d dir2 dir2/B.thy dir2/Test.thy</p>\n<p>Observations:</p>\n<p>- The effect does not occur when first cd'ing into dir2.<br>\n   - The effect can also be avoided by always using qualified imports in<br>\n   scratch-theories (like Test.thy)<br>\n   - The effect can be avoided by avoiding symlinks<br>\n   - Possibly the theory import as I did it is \"improper\" user behavior<br>\n   (although convenient for experimentation), this is why I wrote that there<br>\n   should probably an error message.<br>\n<a href=\"/user_uploads/14278/Mg9F05JCD0q8G4KDeNH7gQRT/test-archive.tar.gz\">test-archive.tar.gz</a><br>\n<a href=\"/user_uploads/14278/PTH_rFimYOPrbrmBeG2RhRC_/ch\">ch</a></p>\n</blockquote>",
        "id": 294739813,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661191111
    }
]