[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 24/05/2019 01:04, Eugene W. Stark wrote:</p>\n<blockquote>\n<p>This might not be new to Isabelle2019-RC2, but I thought that I had set a limit<br>\non the size of the ML heap, but it is still exceeding that and sending my system<br>\ninto thrashing mode.</p>\n</blockquote>\n<p>There have been significant changes in Poly/ML in the latest releases,<br>\nchanging the game each time:</p>\n<p>* Isabelle2019: Poly/ML 5.8<br>\n  * Isabelle2018: Poly/ML 5.7<br>\n  * Isabelle2017: Poly/ML 5.6</p>\n<p>The relevant NEWS entry for Isabelle2019 is:</p>\n<ul>\n<li>Update to Poly/ML 5.8 allows to use the native x86_64 platform without<br>\nthe full overhead of 64-bit values everywhere. This special x86_64_32<br>\nmode provides up to 16GB ML heap, while program code and stacks are<br>\nallocated elsewhere. Thus approx. 5 times more memory is available for<br>\napplications compared to old x86 mode (which is no longer used by<br>\nIsabelle). The switch to the x86_64 CPU architecture also avoids<br>\ncompatibility problems with Linux and macOS, where 32-bit applications<br>\nare gradually phased out.</li>\n</ul>\n<blockquote>\n<p>Contents of my ~/.isabelle/Isabelle2019-RC2/etc/settings</p>\n<p>ISABELLE_PLATFORM=\"${ISABELLE_PLATFORM64:-$ISABELLE_PLATFORM}\"<br>\nML_PLATFORM=\"${ISABELLE_PLATFORM}\"<br>\nML_HOME=\"${POLYML_HOME}/x86_64-linux\"<br>\nML_OPTIONS=\"--maxheap 12000\"</p>\n</blockquote>\n<p>That setup looks fairly old-fashioned, and is obsolete in Isabelle2019.<br>\nThe default x86_64_32 platform allows 16GB ML heap, and x86_64 only<br>\nmakes sense for something like 32-64 GB.</p>\n<p>If you remove all these accumulated settings, it should work fine.</p>\n<blockquote>\n<p>ps output showing poly with --maxheap option applied:</p>\n<p>gene     18897 75.2 71.7 23475004 17680688 ?   Ssl  May21 2365:39<br>\n/opt/Isabelle2019-RC2/contrib/polyml-5.8/x86_64-linux/poly -q --maxheap 12000 --gcthreads 0 --eval<br>\n(PolyML.SaveState.loadHierarchy [\"/home/gene/.isabelle/Isabelle2019-RC2/heaps/polyml-5.8_x86_64-linux/Pure\",</p>\n<p>Output from \"top\":</p>\n<p>PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</p>\n<p>18897 gene      20   0 22.372g 0.016t   6104 S 127.9 71.6   2367:46 poly</p>\n</blockquote>\n<p>I see 16GB resident memory here, which is sufficiently close to the<br>\nspecified 12GB to hold up the claim that poly manages its memory<br>\ncorrectly: there can be more things outside of the ML heap, e.g.<br>\ngenerated code and stacks.</p>\n<p>It is up to David Matthews to explain further details.</p>\n<p>Makarius</p>",
        "id": 294755691,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661197377
    }
]