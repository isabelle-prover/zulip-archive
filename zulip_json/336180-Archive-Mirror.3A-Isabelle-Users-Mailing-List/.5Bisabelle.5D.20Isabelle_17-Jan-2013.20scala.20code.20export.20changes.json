[
    {
        "content": "<p>From: \"C. Diekmann\" &lt;<a href=\"mailto:diekmann@in.tum.de\">diekmann@in.tum.de</a>&gt;<br>\nHi,</p>\n<p>I just tested Makarius' Isabelle_17-Jan-2013 testing release [1] for Linux.<br>\n(No major problems in more than 5k Lines of Theory, mostly apply<br>\nstyle, some Isar)</p>\n<p>Regarding code export for Scala, why are the case objects gone?<br>\nFor example<br>\n2012: final case object One extends num<br>\n2013: final case class One() extends num</p>\n<p>Regards<br>\n  Cornelius</p>\n<p>[1] <a href=\"http://www4.in.tum.de/~wenzelm/test/Isabelle_17-Jan-2013/\">http://www4.in.tum.de/~wenzelm/test/Isabelle_17-Jan-2013/</a></p>",
        "id": 294230327,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902136
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThat was a leaked test of packaging, before the start of release <br>\ncandidates for Isabelle2013.  In the meantime the official <br>\nIsabelle2013-RC1 was announced here <br>\n<a href=\"https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2013-January/msg00096.html\">https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2013-January/msg00096.html</a> <br>\nincluding some explanations about the testing and problem reporting <br>\nprocedure.</p>\n<p>Isabelle2013-RC2 is coming soon.  It is important to keep up with the RC <br>\nchain, until the official release, and avoid getting stuck with accidental <br>\nRC versions for your personal use.</p>\n<p>Makarius</p>",
        "id": 294230332,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902142
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Cornelius,</p>\n<p>scala 2.10 won't accept these.  You can try yourself by generating scala<br>\ncode with Isabelle2012 and try to compile it under the scala version<br>\nbundled with the upcoming Isabelle2013.</p>\n<p>If you have a more convenient solution to the problem, just tell here.</p>\n<p>Cheers,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/S7wVn1abo4mlgh7Jwoj3g8Sr/signature.asc\">signature.asc</a></p>",
        "id": 294230418,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902208
    },
    {
        "content": "<p>From: \"C. Diekmann\" &lt;<a href=\"mailto:diekmann@in.tum.de\">diekmann@in.tum.de</a>&gt;<br>\nHi,</p>\n<p>thanks for the answers.</p>\n<p>Makarius wrote:</p>\n<blockquote>\n<p>That was a leaked test of packaging, before the start of release candidates for Isabelle2013.<br>\nI just tested on Isabelle2013-RC2. Thanks for the info.</p>\n</blockquote>\n<p>Isabelle2013-RC2 test results:<br>\n  No major issues, the only broken thing is<br>\n  sledgehammer_params[isar_proof=true]<br>\n  No big deal ...</p>\n<p>Florian Haftmann wrote:</p>\n<blockquote>\n<blockquote>\n<p>Regarding code export for Scala, why are the case objects gone?<br>\nFor example<br>\n2012: final case object One extends num<br>\n2013: final case class One() extends num</p>\n</blockquote>\n<p>scala 2.10 won't accept these.  You can try yourself by generating scala<br>\ncode with Isabelle2012 and try to compile it under the scala version<br>\nbundled with the upcoming Isabelle2013.</p>\n</blockquote>\n<p>I tested the following code<br>\nobject Num {</p>\n<p>abstract sealed class num<br>\nfinal case object One extends num<br>\n//final case class One() extends num<br>\nfinal case class Bit0(a: num) extends num<br>\nfinal case class Bit1(a: num) extends num</p>\n<p>} /* object Num */</p>\n<p>object Hi {<br>\n    def main(args: Array[String]) = println(\"Hi, this is scala<br>\n\"+util.Properties.versionString+\" test: '\"+Num.One+\"'\")<br>\n}</p>\n<p>The commented version is generated by Isabelle2013-RC2.</p>\n<p>Output: Hi, this is scala version 2.10.0 test: 'One'</p>\n<p>Both, versions, 2012 and 2013 examples work in scala 2.10.0.<br>\nWhy should scala 2.10 reject my Isabelle 2012 case objects? I can't<br>\nfind my fallacy ....</p>\n<p>Regards<br>\n  Cornelius</p>",
        "id": 294230457,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902233
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nThe problems start when polymorphism comes in.  Take the examples from<br>\nHOL/ex/Codegenerator_Test, there they occur definitely.</p>\n<p>Florian<br>\n<a href=\"/user_uploads/14278/Hfj5Et6Ko9Mq4VMg1e3X9yDF/signature.asc\">signature.asc</a></p>",
        "id": 294230461,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902235
    },
    {
        "content": "<p>From: Steffen Juilf Smolka &lt;<a href=\"mailto:steffen.smolka@in.tum.de\">steffen.smolka@in.tum.de</a>&gt;<br>\nTry sledgehammer_params[isar_proofs] instead. The parameter has been renamed.</p>\n<p>Steffen</p>",
        "id": 294230600,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902296
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@gmail.com\">jasmin.blanchette@gmail.com</a>&gt;<br>\nDear Cornelius,</p>\n<p>It has been renamed, but also the underlying implementation has been improved in a number of important ways, including</p>\n<p>1. reliable type annotations<br>\n  2. proof preplay<br>\n  3. proof compression (see \"isar_shrink\" in the manual)<br>\n  4. some support for skolemization (existentials)</p>\n<p>and various bug fixes.</p>\n<p>The Isar proof generation feature is still experimental, but it's much less so than in 2012. We (= Steffen and I) would be happy to hear from you if you encounter problems or have success stories to share with us.</p>\n<p>Cheers,</p>\n<p>Jasmin</p>",
        "id": 294230907,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902452
    }
]