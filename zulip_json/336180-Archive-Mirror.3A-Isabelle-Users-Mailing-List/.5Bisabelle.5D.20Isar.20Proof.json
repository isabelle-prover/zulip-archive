[
    {
        "content": "<p>From: TIMOTHY KREMANN &lt;<a href=\"mailto:twksoa262@verizon.net\">twksoa262@verizon.net</a>&gt;<br>\nlemma <br>\n\"[| ALL x . (P (x::'a)  =&gt;  ~ Q x)  /\\<br>\n                (P x        =&gt; ~ R x) /\\<br>\n               (Q x       =&gt;  ~ R x);<br>\n EX x .  P x;<br>\n EX x .  Q x;<br>\n EX x .  R x|] ==&gt;<br>\nEX  x y z. (~((x::'a) = y)  /\\<br>\n          ~( x      = z)  /\\<br>\n          ~( y      = z))\"<br>\n  apply(elim ex_forward)<br>\n  apply(auto)<br>\ndone</p>\n<p>Can someone suggest an Isar equivalent for the above proof?<br>\nThanks,<br>\nTim</p>",
        "id": 294062452,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660824230
    },
    {
        "content": "<p>From: \"Dr. Brendan Patrick Mahony\" &lt;<a href=\"mailto:brendan.mahony@dsto.defence.gov.au\">brendan.mahony@dsto.defence.gov.au</a>&gt;<br>\nPerhaps something like:</p>\n<p>lemma<br>\n   assumes<br>\n     a1: \"\\&lt;forall&gt; x. (P (x::'a) \\&lt;longrightarrow&gt; \\&lt;not&gt; Q x) \\&lt;and&gt;  <br>\n(P x  \\&lt;longrightarrow&gt; \\&lt;not&gt; R x) \\&lt;and&gt; (Q x \\&lt;longrightarrow&gt;  <br>\n\\&lt;not&gt; R x)\" and<br>\n     a2: \"\\&lt;exists&gt; x. P x\" and<br>\n     a3: \"\\&lt;exists&gt; x. Q x\" and<br>\n     a4: \"\\&lt;exists&gt; x. R x\"<br>\n   shows<br>\n     \"\\&lt;exists&gt; x y z. (((x::'a) \\&lt;noteq&gt; y) \\&lt;and&gt; (x \\&lt;noteq&gt; z)  <br>\n\\&lt;and&gt; (y \\&lt;noteq&gt; z))\"<br>\nproof -<br>\n   from a2 obtain a where b1: \"P a\"<br>\n     by (auto)<br>\n   from a3 obtain b where b2: \"Q b\"<br>\n     by (auto)<br>\n   from a4 obtain c where b3: \"R c\"<br>\n     by (auto)<br>\n   from a1 b1 b2 have \"a \\&lt;noteq&gt; b\"<br>\n     by (auto)<br>\n   moreover<br>\n   from a1 b1 b3 have \"a \\&lt;noteq&gt; c\"<br>\n     by (auto)<br>\n   moreover<br>\n   from a1 b2 b3 have \"b \\&lt;noteq&gt; c\"<br>\n     by (auto)<br>\n   ultimately<br>\n   show ?thesis<br>\n     by (auto)<br>\nqed</p>\n<hr>\n<p>Dr Brendan Mahony<br>\nC3I Division                                    ph +61 8 8259 6046<br>\nDefence Science and Technology Organisation     fx +61 8 8259 5589<br>\nEdinburgh, South Australia      <a href=\"mailto:Brendan.Mahony@dsto.defence.gov.au\">Brendan.Mahony@dsto.defence.gov.au</a></p>\n<p>Important: This document remains the property of the Australian<br>\nGovernment Department of Defence and is subject to the jurisdiction<br>\nof the Crimes Act section 70. If you have received this document in<br>\nerror, you are requested to contact the sender and delete the document.</p>\n<p>IMPORTANT: This email remains the property of the Australian Defence Organisation and is subject to the jurisdiction of section 70 of the CRIMES ACT 1914.  If you have received this email in error, you are requested to contact the sender and delete the email.</p>",
        "id": 294062522,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660824245
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nI know this is not what you asked. But this goal can also be solved <br>\nautomatically by the recent tactic \"metis\"</p>\n<p>apply (metis)</p>\n<p>although not by the older tactics blast and fast. The drawback of metis <br>\nis that you have to give it explicitly any additional lemmas beyond pure <br>\nlogic that are needed. Here there are none.</p>\n<p>Tobias</p>\n<p>TIMOTHY KREMANN wrote:</p>",
        "id": 294062549,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660824255
    },
    {
        "content": "<p>From: Simon Winwood &lt;<a href=\"mailto:sjw@cse.unsw.edu.au\">sjw@cse.unsw.edu.au</a>&gt;<br>\nOr else using guess (with a good dose of auto :) ...</p>\n<p>lemma<br>\n   assumes all: \"ALL x . (P (x::'a) \\&lt;longrightarrow&gt; \\&lt;not&gt; Q x) \\&lt;and&gt; (P x \\&lt;longrightarrow&gt; \\&lt;not&gt; R x) \\&lt;and&gt; (Q x \\&lt;longrightarrow&gt; \\&lt;not&gt; R x)\"<br>\n   and     eP:  \"EX x .  P x\" and eQ: \"EX x . Q x\" and eR: \"EX x . R x\"<br>\n   shows  \"EX x y z. (\\&lt;not&gt;((x::'a) = y) \\&lt;and&gt; \\&lt;not&gt;( x = z) \\&lt;and&gt; \\&lt;not&gt;( y = z))\"<br>\nproof -<br>\n  from eP guess x ..<br>\n  moreover from eQ guess y ..<br>\n  moreover from eR guess z ..<br>\n  ultimately have \"x \\&lt;noteq&gt; y\" and \"x \\&lt;noteq&gt; z\" and \"y \\&lt;noteq&gt; z\" using all by auto<br>\n  thus ?thesis by auto<br>\nqed</p>\n<p>Simon</p>\n<p>At Wed, 18 Jun 2008 17:16:01 +0930,<br>\n\"Dr. Brendan Patrick Mahony\" &lt;<a href=\"mailto:brendan.mahony@dsto.defence.gov.au\">brendan.mahony@dsto.defence.gov.au</a>&gt; wrote:</p>",
        "id": 294062623,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660824285
    }
]