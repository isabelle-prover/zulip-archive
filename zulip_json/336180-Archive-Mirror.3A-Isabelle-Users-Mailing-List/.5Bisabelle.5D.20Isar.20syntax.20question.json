[
    {
        "content": "<p>From: Vadim Zaliva &lt;<a href=\"mailto:vzaliva@cmu.edu\">vzaliva@cmu.edu</a>&gt;<br>\nI am learning Isar and have another naive question on the syntax:<br>\nI am trying to do something like this in Isar:</p>\n<p>1: lemma<br>\n2:   shows \"not something\"<br>\n3: proof(rule ccontr)<br>\n4:  assume \"something\"<br>\n5:  thus False proof cases<br>\n6:  ...<br>\n7:   qed<br>\n8: qed</p>\n<p>and get \"*** Failed to refine any pending goal\" error around line 5</p>\n<p>Why this does not work? Something like this works instead:</p>\n<p>lemma<br>\n  shows \"not something\"<br>\nproof<br>\n assume \"something\" <br>\n hence False proof cases<br>\n    ...<br>\n   qed<br>\n  thus False by simp<br>\nqed</p>\n<p>But last statement (thus False by simp) seems to be unnecessary, as it is proving<br>\nFalse from False!</p>\n<p>Sincerely,<br>\nVadim Zaliva</p>",
        "id": 294282782,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660920901
    },
    {
        "content": "<p>From: Timothy Bourke &lt;<a href=\"mailto:tim@tbrk.org\">tim@tbrk.org</a>&gt;</p>\n<ul>\n<li>Vadim Zaliva &lt;<a href=\"mailto:vzaliva@cmu.edu\">vzaliva@cmu.edu</a>&gt; [2014-07-16 15:00 -0700]:<br>\nThe consequent of ccontr does not match your stated goal.</li>\n</ul>\n<p>You want rather</p>\n<p>lemma \"¬ something\"<br>\n  proof (rule notI)<br>\n    assume \"something\"<br>\n    thus False<br>\n      sorry<br>\n  qed</p>\n<p>Typing \"find_theorems intro\" after line 2 gives a list of applicable<br>\nrules. But, in fact, in this case Isar finds the right rule by itself:</p>\n<p>lemma \"¬ something\"<br>\n  proof<br>\n    assume \"something\"<br>\n    thus False<br>\n      sorry<br>\n  qed</p>\n<p>Tim.<br>\n<a href=\"/user_uploads/14278/0wFE0f2mSWHbXErdikUayIex/signature.asc\">signature.asc</a></p>",
        "id": 294282828,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660920914
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nOn 17.07.2014 00:00, Vadim Zaliva wrote:</p>\n<blockquote>\n<p>I am learning Isar and have another naive question on the syntax:<br>\nI am trying to do something like this in Isar:</p>\n<p>1: lemma<br>\n2:   shows \"not something\"<br>\n3: proof(rule ccontr)<br>\n4:  assume \"something\"<br>\n5:  thus False proof cases<br>\n6:    ...<br>\n7:   qed<br>\n8: qed<br>\nHave a look ath the proof state after \"proof (rule ccontr)\". The<br>\nprecondition is \"~~ something\". Your assumption \"something\" does not<br>\nunify with this, so you get an error message as soon as you try to<br>\ndischarge a proof obligation with show (or thus).</p>\n</blockquote>\n<p>(Actually, it would be nice if the system would actually warn you about<br>\nthis probable error at the assume statement).</p>\n<p>You can either assume \"~~something\", or -- which is nicer -- do not use<br>\nthe rule \"ccontr\" here. You just need \"notI\" (which is actually the<br>\ndefault rule, so changing line 3 to just \"proof\" should make everything<br>\ngo through).</p>\n<blockquote>\n<p>and get \"*** Failed to refine any pending goal\" error around line 5</p>\n<p>Why this does not work? Something like this works instead:</p>\n<p>lemma<br>\n  shows \"not something\"<br>\nproof<br>\n assume \"something\" <br>\n hence False proof cases<br>\n  ...<br>\n   qed<br>\n  thus False by simp<br>\nqed<br>\nThe important difference is not the split into hence/thus (which is<br>\nindeed entirely unnecessary), but \"proof (rule ccontr)\" vs just \"proof\"<br>\n(which is equivalent here to \"proof (rule notI)\".</p>\n</blockquote>\n<p>Have a look at both rules by doing \"print_statement ccontr notI\".</p>\n<p>Best regards, Lars</p>",
        "id": 294282836,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660920919
    },
    {
        "content": "<p>From: Vadim Zaliva &lt;<a href=\"mailto:vzaliva@cmu.edu\">vzaliva@cmu.edu</a>&gt;<br>\nThanks! That helps. The reason I used \"something\" instead of \"~~something\"<br>\nin the assumption is to be able to use simpler cases syntax as my \"something\"<br>\nis inductive definition:</p>\n<p>inductive something :: .... where<br>\nC1: ... |<br>\nC2: ...</p>\n<p>If I am proving \"something\" I can write \"proof cases\". If I proving ~~something<br>\nI have to write proof (cases something).</p>\n<p>I do not know what is involved implementation-wiser but it would be nice if Isabelle could deal with <br>\ntrivial double negation during unification.</p>\n<p>Sincerely,<br>\nVadim Zaliva</p>",
        "id": 294282874,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660920931
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nI have often toyed with the idea of unification modulo certain equations but<br>\nimplementation-wise it is subtle and means modifying an already convoluted part<br>\nof the core. Don't hold your breath.</p>\n<p>Tobias</p>",
        "id": 294282903,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660920943
    },
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:breitner@kit.edu\">breitner@kit.edu</a>&gt;<br>\nHi,</p>\n<p>it would be very helpful, especially for beginners, but often also for<br>\nme, if a \"proof\" would tell us what rule it applied – similar to how<br>\n\"also\" tells us what the current calculation is.</p>\n<p>(And while are are at it: \"also\" could also tell us what rule it<br>\nused...)</p>\n<p>Such features give great insight into the system and give the users more<br>\nconfidence in using it.</p>\n<p>Greetings,<br>\nJoachim<br>\n<a href=\"/user_uploads/14278/xyyrbndTfk10HvXFDadmXsnR/signature.asc\">signature.asc</a></p>",
        "id": 294282941,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660920956
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nI agree. If I remember correctly, a crude form of that is provided by the rule_trace option.</p>\n<p>Joachim Breitner &lt;<a href=\"mailto:breitner@kit.edu\">breitner@kit.edu</a>&gt; schrieb:</p>",
        "id": 294282986,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660920963
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nAs a side remark, if you are doing \"unstructured\" case analysis (i.e.,<br>\nthere is not directly a rule matching your goal/assumptions and the<br>\ndesired analysis), one way to write this is the following:</p>\n<p>{ assume P1<br>\n      have Q ... }<br>\n    moreover<br>\n    { assume P2<br>\n      have Q ...}<br>\n    moreover<br>\n    { assume P3<br>\n      have Q ...}<br>\n    ultimately<br>\n    have Q ...</p>\n<p>Usually, blast or metis is then a good method to discharge the final<br>\nobligation.</p>",
        "id": 294283007,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660920968
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe rules (and their instances) that are actually used are not immediately <br>\ntracable, due to the way the traditional lazy enumeration of potential <br>\nresults works.</p>\n<p>I have often reconsidered that, but the only reform that went through in <br>\nrecent years was better error reporting in the absence of results -- <br>\ninstead of just \"empty result sequence\".  Thus users merely need to look <br>\nat the error message of some failed \"by ...\" command or calculational <br>\nstep.  Funnily, seasoned users stick to older habits to ignore the error <br>\nand turn a failed \"by\" into \"apply\" and then watch the Output window.</p>\n<p>There is now also a <em>tiny</em> reform in the printing of 'also' / 'finally' <br>\nfor Isabelle2014 -- to discontinue some old workarounds for TTY <br>\ninteraction.</p>\n<p>Makarius</p>",
        "id": 294284741,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660921470
    },
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:breitner@kit.edu\">breitner@kit.edu</a>&gt;<br>\nHi,</p>\n<p>I try to use the \"by\" output, but I fail because<br>\n  a) it sometimes shows up below “have ..” and below “proof”. Before I<br>\nreach for the mouse (repeatedly, as I change my proof), I rather change<br>\nthe by to apply.<br>\n b) the red background is unpleasant to read. It makes me nervous. It<br>\nshould be reserved for proper alerting. I need to be alerted once that<br>\nit’s broken, but I don’t need to be continuously alerted while working<br>\non it.</p>\n<p>The second point is a bit of a psychological one and might not affect<br>\nother users. OTOH, UI is nothing but psychology, so it seems to be<br>\nrelevant here.</p>\n<p>With best regards,<br>\nJoachim<br>\n<a href=\"/user_uploads/14278/0Ulcv0cDOojTIZv4XBq7-3bc/signature.asc\">signature.asc</a></p>",
        "id": 294284800,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660921490
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Fri, 25 Jul 2014, Joachim Breitner wrote:</p>\n<blockquote>\n<p>a) it sometimes shows up below “have ..” and below “proof”. Before I <br>\nreach for the mouse (repeatedly, as I change my proof), I rather change <br>\nthe by to apply.</p>\n</blockquote>\n<p>I will take a second look.  That non-determinsm is probably just an <br>\naccidental side-effect of generally reworked asynchronous printing in <br>\nIsabelle2014-RC0.</p>\n<blockquote>\n<p>b) the red background is unpleasant to read. It makes me nervous. It <br>\nshould be reserved for proper alerting. I need to be alerted once that <br>\nit’s broken, but I don’t need to be continuously alerted while working <br>\non it.</p>\n</blockquote>\n<p>So why not change the color in Plugin Options / Isabelle / Rendering?<br>\nYou should keep it somehow visible, though, otherwise the following <br>\nincident might happen: <br>\n<a href=\"https://lists.cam.ac.uk/mailman/htdig/cl-isabelle-users/2014-May/msg00037.html\">https://lists.cam.ac.uk/mailman/htdig/cl-isabelle-users/2014-May/msg00037.html</a></p>\n<p>Makarius</p>",
        "id": 294284827,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660921498
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nBecause I want to see the bad color in the edit window, but not (as<br>\nstrong) in the output window.</p>",
        "id": 294284837,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660921502
    }
]