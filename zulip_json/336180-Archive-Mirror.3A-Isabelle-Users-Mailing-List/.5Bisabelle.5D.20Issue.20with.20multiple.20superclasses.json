[
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:breitner@kit.edu\">breitner@kit.edu</a>&gt;<br>\nHello,</p>\n<p>I have a problem with type classes and multiple subclasses, and here is<br>\na stripped-town testcase:</p>\n<p>theory \"Test\"<br>\n        imports <br>\n          \"~~/src/HOL/HOLCF/HOLCF\"<br>\n        begin</p>\n<p>default_sort cpo</p>\n<p>class Top_cpo = cpo +<br>\n          assumes most: \"∃x. ∀y. y ⊑ x\"<br>\n        begin</p>\n<p>definition top :: \"'a\"<br>\n            where \"top = (THE x. ∀y. y ⊑ x)\"</p>\n<p>notation (xsymbols)<br>\n            top (\"⊤\")<br>\n        end</p>\n<p>definition is_lb :: \"'a set =&gt; 'a =&gt; bool\" (infix \"&gt;|\" 55) where<br>\n          \"S &gt;| x &lt;-&gt; (∀y∈S. x ⊑ y)\"</p>\n<p>definition is_glb :: \"'a set =&gt; 'a =&gt; bool\" (infix \"&gt;&gt;|\" 55)<br>\n        where<br>\n          \"S &gt;&gt;| x &lt;-&gt; S &gt;| x ∧ (∀u. S &gt;| u --&gt; u ⊑ x)\"</p>\n<p>definition glb :: \"'a set =&gt; 'a\" (\"⨅_\" [60]60) where<br>\n          \"glb S = (THE x. S &gt;&gt;| x)\" </p>\n<p>class Nonempty_Meet_cpo = cpo +<br>\n          assumes nonempty_meet_exists: \"S ≠ {} ⟹ ∃x. S &gt;&gt;| x\"</p>\n<p>class Meet_cpo = Top_cpo + Nonempty_Meet_cpo<br>\n        begin<br>\n          lemma \"∃ x. {} &gt;&gt;| (x::'a)\"<br>\n             apply (rule_tac x = \"⊤\" in exI)<br>\n        (*<br>\n         Type unification failed: Variable 'a::cpo not of sort Top_cpo</p>\n<p>Failed to meet type constraint:</p>\n<p>Term:  ⊤ :: ??'a<br>\n        Type:  'a<br>\n        *)<br>\n          oops</p>\n<p>end</p>\n<p>I would assume that the 'a inside the context of class will have that<br>\nsort (Meet_cpo) and hence by implication Top_cpo, but it seems it does<br>\nnot. Would someone be so kind and help me out here?</p>\n<p>(This is on Isabelle2012.)</p>\n<p>Thanks,<br>\nJoachim<br>\n<a href=\"/user_uploads/14278/6GviN_tAZmiNunTEMQBe72mz/signature.asc\">signature.asc</a></p>",
        "id": 294217214,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660895542
    },
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:huffman@in.tum.de\">huffman@in.tum.de</a>&gt;<br>\nHi Joachim,</p>\n<p>A general principle for reasoning with classes is that if you want to<br>\nprove lemmas within the class context, you need to define <em>all</em> the<br>\nrelated constants inside the appropriate class contexts as well.<br>\nOtherwise you may run into problems with the so-called \"base sort\"<br>\ninferred for the classes. (To get a better idea of what is going on,<br>\ntry turning on [[show_sorts]], and print the type of a class locale<br>\npredicate, e.g. \"term class.Nonempty_Meet_cpo\".)</p>\n<p>Most classes in the Isabelle libraries have \"type\" as the base sort<br>\n(this is the sort that type 'a will have within the class context) but<br>\nsome classes in HOLCF have \"cpo\" as the base sort, due to the fact<br>\nthat they refer to constants with continuous function types that are<br>\nonly defined on class cpo.</p>\n<p>I haven't tried this code yet, but I would suggest changing<br>\n\"definition is_lb\" to \"definition (in po) is_lb\", and similarly for<br>\nis_glb; alternatively, wrap both definitions in a \"context po begin<br>\n... end\" block.</p>\n<p>Hope this helps,</p>\n<ul>\n<li>Brian</li>\n</ul>",
        "id": 294217222,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660895548
    },
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:breitner@kit.edu\">breitner@kit.edu</a>&gt;<br>\nDear Brian,</p>\n<p>thanks, that did the trick. I failed to notice the \"begin po\"-blocks<br>\nthat you wrapped your definitions in HOLCF in.</p>\n<p>Greetings,<br>\nJoachim<br>\n<a href=\"/user_uploads/14278/xNJv2xzsQKjb_puyG_m0QuJF/signature.asc\">signature.asc</a></p>",
        "id": 294217253,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660895566
    }
]