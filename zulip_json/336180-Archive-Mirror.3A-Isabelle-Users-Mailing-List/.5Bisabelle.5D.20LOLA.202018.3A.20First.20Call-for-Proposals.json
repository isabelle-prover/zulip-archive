[
    {
        "content": "<p>From: Christine Rizkallah &lt;<a href=\"mailto:christine2711987@gmail.com\">christine2711987@gmail.com</a>&gt;</p>\n<hr>\n<p>LOLA 2018: Syntax and Semantics of Low-Level Languages<br>\n=====================================================<br>\nSaturday, 7 July 2018, Oxford, United Kingdom<br>\nA satellite workshop of LICS 2018 at FLoC 2018<br>\n<a href=\"https://cs.appstate.edu/~johannp/lola18/\">https://cs.appstate.edu/~johannp/lola18/</a></p>\n<p>Important dates</p>\n<hr>\n<p>LOLA submission deadline          15 April 2018<br>\n Notification                      13 May   2018<br>\n Early Registration Deadline        6 June  2018<br>\n Workshop                           7 July  2018</p>\n<hr>\n<p>Submission: <a href=\"https://easychair.org/conferences/?conf=lola2018\">https://easychair.org/conferences/?conf=lola2018</a><br>\nRegistration: <a href=\"http://www.floc2018.org/register/\">http://www.floc2018.org/register/</a></p>\n<p>Invited Speakers</p>\n<hr>\n<p>Nada Amin, University of Cambridge<br>\n<a href=\"https://www.cl.cam.ac.uk/~na482/\">https://www.cl.cam.ac.uk/~na482/</a></p>\n<p>Nick Benton, Facebook Research<br>\n<a href=\"https://research.fb.com/people/benton-nick/\">https://research.fb.com/people/benton-nick/</a></p>\n<p>Context</p>\n<hr>\n<p>Since the late 1960s it has been known that tools and structures<br>\narising in mathematical logic and proof theory can usefully be applied<br>\nto the design of high-level programming languages, and to the<br>\ndevelopment of reasoning principles for such languages. Yet low-level<br>\nlanguages, such as machine code, and the compilation of high-level<br>\nlanguages into low-level ones have traditionally been seen as having<br>\nlittle or no essential connection to logic.</p>\n<p>However, a fundamental discovery of the past two decades has been that<br>\nlow-level languages are also governed by logical principles. From this<br>\nkey observation has emerged an active and fascinating new research<br>\narea at the frontier of logic and computer science. The<br>\npractically-motivated design of logics reflecting the structure of<br>\nlow-level languages (such as heaps, registers and code pointers) and<br>\nlow-level properties of programs (such as resource usage) goes hand in<br>\nhand with some of the most advanced contemporary research in semantics<br>\nand proof theory, including classical realizability and forcing,<br>\ndouble orthogonality, parametricity, linear logic, game semantics,<br>\nuniformity, categorical semantics, explicit substitutions, abstract<br>\nmachines, implicit complexity and resource bounded programming.</p>\n<p>The LOLA workshop, affiliated with LICS at FLoC 2018, will bring<br>\ntogether researchers interested in the relationships and connections<br>\nbetween logic and low-level languages and programs. Topics of interest<br>\ninclude, but are not limited to:</p>\n<ul>\n<li>Typed assembly languages,</li>\n<li>Certified assembly programming,</li>\n<li>Certified and certifying compilation,</li>\n<li>Proof-carrying code,</li>\n<li>Program optimization,</li>\n<li>Modal logic and realizability in machine code,</li>\n<li>Realizability and double orthogonality in assembly code,</li>\n<li>Parametricity, modules and existential types,</li>\n<li>General references, Kripke models and recursive types,</li>\n<li>Continuations and concurrency,</li>\n<li>Resource analysis and implicit complexity,</li>\n<li>Closures and explicit substitutions,</li>\n<li>Linear logic and separation logic,</li>\n<li>Game semantics, abstract machines and hardware synthesis,</li>\n<li>Monoidal and premonoidal categories, traces and effects.</li>\n</ul>",
        "id": 294724079,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661185846
    }
]