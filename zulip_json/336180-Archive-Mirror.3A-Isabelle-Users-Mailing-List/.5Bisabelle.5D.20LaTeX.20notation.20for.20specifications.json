[
    {
        "content": "<p>From: Wolfgang Jeltsch &lt;<a href=\"mailto:wolfgang-it@jeltsch.info\">wolfgang-it@jeltsch.info</a>&gt;<br>\nHi!</p>\n<p>Isabelle/HOL has a special LaTeX syntax for repeated function<br>\ncomposition: while you write <code>f ^^ n</code> in your source text, generated<br>\nformulas will have <code>f</code> with a superscript <code>n</code> in LaTeX-generated<br>\noutput. </p>\n<p>Unfortunately, this feature apparently only affects the output of<br>\nantiquotations, not the contents of specification. For example, if I<br>\nhave <code>f ^^ n</code> in an <code>inductive</code> specification, it will show up in LaTeX-<br>\ngenerated output as exactly that.</p>\n<p>Is there a way to have the superscript notation within specifications as<br>\nwell? I tried to write <code>f⇗n⇖</code> in the source text, but this is not<br>\npermitted.</p>\n<p>All the best,<br>\nWolfgang</p>",
        "id": 294822550,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661242856
    },
    {
        "content": "<p>From: \"Fernandez, Matthew\" &lt;<a href=\"mailto:matthew.fernandez@intel.com\">matthew.fernandez@intel.com</a>&gt;<br>\nI don't know if this precisely fits your needs, but \\&lt;^sub&gt; and \\&lt;^sup&gt; are permissible in many places where ⇗ and ⇖ are not. Perhaps <code>f\\&lt;^sup&gt;n</code> will work for you?</p>",
        "id": 294822571,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661242866
    },
    {
        "content": "<p>From: Wolfgang Jeltsch &lt;<a href=\"mailto:wolfgang-it@jeltsch.info\">wolfgang-it@jeltsch.info</a>&gt;<br>\nWell, this doesn’t work, because the Isabelle/HOL library doesn’t define<br>\nsuch a notation for function exponentiation. Of course, I could define<br>\nit myself, as I could define a notation using ⇗ and ⇖. However, I was<br>\nwondering whether I could convince Isabelle to use the ⇗–⇖-notation that<br>\nis already established for generated (pretty-printed) output.</p>\n<p>All the best,<br>\nWolfgang</p>",
        "id": 294822578,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661242872
    }
]