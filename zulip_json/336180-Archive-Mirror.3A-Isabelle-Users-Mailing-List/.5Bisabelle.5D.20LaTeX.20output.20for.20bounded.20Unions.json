[
    {
        "content": "<p>From: \"Urban, Christian\" &lt;<a href=\"mailto:christian.urban@kcl.ac.uk\">christian.urban@kcl.ac.uk</a>&gt;<br>\nDear All,</p>\n<p>I have two small problems. I use the notation</p>\n<p>U i \\&lt;in&gt; {..n} . P i     and   U i \\&lt;in&gt; {n..m} . P i</p>\n<p>for unions where the index is drawn from an interval. If</p>\n<p>I print them out in LaTeX, the first is displayed as</p>\n<p>U i \\&lt;le&gt; n . P i</p>\n<p>I would prefer to have it uniformly displayed as interval, like</p>\n<p>the  second. What do I have to do for that? I could not find</p>\n<p>any syntax declaration which causes the first.</p>\n<p>My second problem is that the theorems in question</p>\n<p>seem to be printed eta-contracted like</p>\n<p>L(UPNTIMES r n) = UNION {..n} (SpecExt.Pow (L(r)))</p>\n<p>even if I explicitly told Isabelle not to do it (set eta_contract = false).</p>\n<p>How can I prevent this eta-contractions from happening?</p>\n<p>Thanks a lot!</p>\n<p>Christian</p>",
        "id": 294721331,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661184925
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nOn 12/10/2017 15:46, Urban, Christian wrote:</p>\n<blockquote>\n<p>Dear All,</p>\n<p>I have two small problems. I use the notation</p>\n<p>U i \\&lt;in&gt; {..n} . P i     and   U i \\&lt;in&gt; {n..m} . P i</p>\n<p>for unions where the index is drawn from an interval. If</p>\n<p>I print them out in LaTeX, the first is displayed as</p>\n<p>U i \\&lt;le&gt; n . P i</p>\n<p>I would prefer to have it uniformly displayed as interval, like</p>\n<p>the  second. What do I have to do for that? I could not find</p>\n<p>any syntax declaration which causes the first.</p>\n</blockquote>\n<p>See Set_Interval, at the beginning.</p>\n<p>I recommend not to use {..n::nat} because it means the same as {0..n}<br>\nbut not all lemmas may exist for the former variant.</p>\n<blockquote>\n<p>My second problem is that the theorems in question</p>\n<p>seem to be printed eta-contracted like</p>\n<p>L(UPNTIMES r n) = UNION {..n} (SpecExt.Pow (L(r)))</p>\n<p>even if I explicitly told Isabelle not to do it (set eta_contract = false).</p>\n<p>How can I prevent this eta-contractions from happening?</p>\n</blockquote>\n<p>Are you sure the internal term is really eta-expanded? If it comes<br>\nfrom a fun-definition, it is likely to get eta-contracted when you<br>\nmake the definition. You may have to state an explicit eta-expanded<br>\nlemma.</p>\n<p>Tobias</p>\n<blockquote>\n<p>Thanks a lot!</p>\n<p>Christian</p>\n<p><a href=\"/user_uploads/14278/pPkJUTCJ_V-w0P70JNzVjewK/smime.p7s\">smime.p7s</a></p>\n</blockquote>",
        "id": 294721541,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661184989
    }
]