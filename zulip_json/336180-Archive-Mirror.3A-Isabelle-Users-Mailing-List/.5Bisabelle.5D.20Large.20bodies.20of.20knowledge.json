[
    {
        "content": "<p>From: Rene Vestergaard &lt;<a href=\"mailto:vestergaard.rene@gmail.com\">vestergaard.rene@gmail.com</a>&gt;<br>\nI will shortly be attempting to reach a, for us, non-standard audience <br>\nwith a project that includes the verification of the complete reasoning <br>\nin a molecular-biology monograph.</p>\n<p>The primary sales argument is by proxy: there’s a Curry-Howard component <br>\nto the project that allows us to solve an open problem in the <br>\napplication domain.</p>\n<p>The primary scientific argument concerns formal reasoning, including the <br>\nvalue of formalising/verifying a large body of knowledge, be it a <br>\ntextbook, a monograph, a “big” result, or similar.</p>\n<p>I have my own personal arguments for why large applications are a good idea:</p>\n<ul>\n<li>\n<p>tests of and guidance for maturity/naturalness/expressivity of tools <br>\nand methodologies,</p>\n</li>\n<li>\n<p>development of libraries/momentum/etc.,</p>\n</li>\n<li>teaching/industrial/etc. purposes,</li>\n<li>retrodiction and, of course, - assuring large case splits and proof by <br>\nreflection.</li>\n</ul>\n<p>I was hoping people would help me with<br>\n1) what big applications have been done? what arguments were used?<br>\n2) do the arguments hold up in retrospect?</p>\n<p>While 1) can be answered by references, I am particularly hoping that <br>\nsome of the people behind these projects would attempt to answer 2) as <br>\nbest as possible.</p>\n<p>Cheers,<br>\nRene</p>\n<hr>\n<p>Cross-posted to <a href=\"mailto:coq-club@inria.fr\">coq-club@inria.fr</a> and <a href=\"mailto:hol-info@lists.sourceforge.net\">hol-info@lists.sourceforge.net</a>.</p>",
        "id": 294267894,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660916198
    },
    {
        "content": "<p>From: Gerwin Klein &lt;<a href=\"mailto:Gerwin.Klein@nicta.com.au\">Gerwin.Klein@nicta.com.au</a>&gt;<br>\nHi Rene,</p>\n<p>the L4.verified kernel verification would satisfy (1), I guess.</p>\n<p>As for (2), the major pull and funding argument there was from the application domain to achieve a “big result” as you call it. It did lead us to make advancements in a number of technical areas interesting for interactive proof and software verification, i.e. new techniques/methods, increased automation, increased usability (e.g. the find theorems command in Isabelle came out of this project). Most importantly it was a stress test on tools and methods to deal with scale, which also lead to research for others, not just our project (e.g. it was a good argument for the increased automation provided by sledgehammer).</p>\n<p>I think we listed most of these in the proposal, and they were motivators for us, but they were not the strong arguments that got the project through. Those were all based on impact of the project result.</p>\n<p>Both sides of the argument did hold up in this case. Everything you listed below (tools, libraries, teaching/industry, dealing with scale) came to pass in some form or other, in addition to the overall result. The only thing we didn’t do much with was proofs by reflection, but that was just because it wasn’t needed in our application domain.</p>\n<p>Cheers,<br>\nGerwin</p>\n<hr>\n<p>The information in this e-mail may be confidential and subject to legal professional privilege and/or copyright. National ICT Australia Limited accepts no liability for any damage caused by this email or its attachments.</p>",
        "id": 294268655,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660916465
    }
]