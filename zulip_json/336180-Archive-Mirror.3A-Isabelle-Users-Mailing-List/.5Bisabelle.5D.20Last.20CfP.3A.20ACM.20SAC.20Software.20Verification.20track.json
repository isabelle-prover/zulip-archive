[
    {
        "content": "<p>From: Fausto Spoto &lt;<a href=\"mailto:fausto.spoto@univr.it\">fausto.spoto@univr.it</a>&gt;<br>\nLast Call for Papers</p>\n<p>ACM 2008 Symposium on Applied Computing, March 16-20, 2008<br>\n                        Fortaleza, Ceara', Brazil<br>\n<a href=\"http://www.acm.org/conferences/sac/sac2008\">http://www.acm.org/conferences/sac/sac2008</a></p>\n<p>Technical Track on Software Verification<br>\n<a href=\"http://profs.sci.univr.it/~spoto/SV08\">http://profs.sci.univr.it/~spoto/SV08</a></p>\n<p>1. SAC 2008</p>\n<p>For the past twenty-two years, the ACM Symposium on Applied Computing<br>\nhas been a primary gathering forum for applied computer scientists,<br>\ncomputer engineers, software engineers, and application developers<br>\nfrom around the world.  SAC 2008 is sponsored by the ACM Special<br>\nInterest Group on Applied Computing (SIGAPP) and is hosted by the<br>\nUniversity of Fortaleza and the Federal University of Ceara', in Brazil.</p>\n<p>2. Technical Track on Software Verification</p>\n<p>In the next decade the software industry will have to face the<br>\nresponsibilities imposed by a computer-dependent society.  Since software<br>\nis increasingly deployed in safety critical applications, correctness<br>\nand reliability are becoming issues of utmost importance.<br>\nConsequently, software verification will be a grand challenge for both<br>\nacademic world and computer industry.</p>\n<p>Software verification techniques fall into three main categories: (1)<br>\nsoftware testing, (2) formal verification<br>\nmethods such as model checking and theorem proving, and (3) methods<br>\nbased on static program analysis.  The goal of this track is to study<br>\nthe individual contribution of each of these methodologies in<br>\nverifying software artifacts, as well as promote discussion on novel<br>\ncombinations of these methodologies.</p>\n<p>This track will focus on theoretical foundations, practical methods as<br>\nwell as case studies for verification of conventional and embedded<br>\nsoftware.  We welcome papers that describe work on combinations of<br>\nformal verification and program analysis techniques.  Tool papers and<br>\ncase studies which report on advances in verifying large software<br>\nsystems are particularly sought.  The list of topics includes but is<br>\nnot limited to</p>\n<ul>\n<li>Tools and case studies for large scale software verification</li>\n<li>\n<p>Data flow analysis, control flow analysis, type effect systems,<br>\n  constraint systems and abstract interpretation techniques for<br>\n  verification</p>\n</li>\n<li>\n<p>Model checking and deductive techniques for software verification</p>\n</li>\n<li>\n<p>Role of declarative programming languages for infinite state software<br>\n  verification</p>\n</li>\n<li>\n<p>Techniques to validate system software (such as compilers) as well as<br>\n  assembly code/Java bytecode</p>\n</li>\n<li>\n<p>Proof techniques for verifying specific classes of software<br>\n  (such as object-oriented programs)</p>\n</li>\n<li>\n<p>Integration of testing and run-time monitoring with formal techniques</p>\n</li>\n<li>Validation of UML diagrams and/or requirement specifications</li>\n<li>Software certification and proof carrying code</li>\n<li>Integration of formal verification into software development projects.<p>3. Guidelines for paper submission</p>\n</li>\n</ul>\n<p>Submission should be uploaded through the link:</p>\n<p><a href=\"http://sac.cs.iupui.edu/SAC2008/SubmitAbstract.aspx\">http://sac.cs.iupui.edu/SAC2008/SubmitAbstract.aspx</a></p>\n<p>Each submitted paper will be fully referenced and undergo a blind<br>\nreview process.  Author(s) must not be identified in the submissions,<br>\neither explicitly or by implication.  Before submitting paper,<br>\nauthor(s) should submit a separate cover page that includes title,<br>\nabstract, list of keywords, and list of authors with full names and<br>\npostal addresses, telephone numbers, fax numbers, and e-mail<br>\naddresses.  One of the authors must be designated as the primary<br>\ncontact person.  Please contact the track chair for any problems with<br>\nsubmission.  Authors of accepted papers must submit an editorial<br>\nrevision of their papers that must fit within five two-column pages<br>\nfollowing the ACM proceedings format (an extra three pages may<br>\nbe available at additional cost to the authors).  Please comply as<br>\nmuch as possible to this page limitation already at submission<br>\ntime.  At least one of the authors of an accepted paper must register<br>\nfor the conference and present the paper.  Accepted papers will be<br>\npublished in the ACM SAC 2008 proceedings.</p>\n<p>4. Program Committee</p>\n<p>Elvira Albert, Universidad Complutense Madrid, Spain<br>\nRoberto Bagnara, Universita' di Parma, Italy<br>\nDavid Cachera, Ecole Normale Superieure de Cachan, France<br>\nAntonio Cerone, United Nations University, Macao SAR China<br>\nLunjin Lu, Oakland University, USA<br>\nFrederic Mesnard, Universite' de la Reunion, France<br>\nAndreas Podelski, Albert-Ludwigs-Universitaet Freiburg, Germany<br>\nGerman Puebla, Universidad Politecnica de Madrid, Spain<br>\nTamara Rezk, INRIA-Microsoft Research, France<br>\nJan-Georg Smaus, Albert-Ludwigs-Universitaet Freiburg, Germany<br>\nFausto Spoto (Track Chair), Universita' di Verona, Italy<br>\nZijiang Yang, Western Michigan University, USA</p>\n<p>5. Important dates</p>\n<p>Electronic submission of full papers: September 8, 2007<br>\nNotification to authors: October 16, 2007<br>\nCamera-ready copy of accepted paper due: October 30, 2007</p>",
        "id": 294051572,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660819700
    }
]