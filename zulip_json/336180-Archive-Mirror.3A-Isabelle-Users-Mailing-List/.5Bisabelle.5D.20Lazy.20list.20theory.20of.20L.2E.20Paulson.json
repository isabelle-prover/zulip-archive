[
    {
        "content": "<p>From: Ghassen HELALI &lt;<a href=\"mailto:helali@encs.concordia.ca\">helali@encs.concordia.ca</a>&gt;<br>\nDear Fellows<br>\nI was trying t load the Lazy list theory of L. Paulson in the 2014<br>\nIsabelle/HOL version but I found some errors occurring.<br>\nAs for example in the definition of:</p>\n<p>definition<br>\n  lmap       :: \"('a=&gt;'b) =&gt; 'a llist =&gt; 'b llist\" where<br>\n    \"lmap f l = llist_corec l (%z. case z of LNil =&gt; None<br>\n                                           | LCons y z =&gt; Some(f(y), z))\"</p>\n<p>I got the error saying that LNil is not a constructor. I recall that it is<br>\npreviously defined as an abstract constructor from NIL.</p>\n<p>Any ideas how to solve this issue?</p>\n<p>Regards<br>\n--gh</p>",
        "id": 294325772,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660928497
    },
    {
        "content": "<p>From: Johannes HÃ¶lzl &lt;<a href=\"mailto:hoelzl@in.tum.de\">hoelzl@in.tum.de</a>&gt;<br>\nHuh, which theory are you using? The lazy list theory in AFP 2014 is<br>\nusing the new codatatype package, which defines lmap internally.</p>\n<p>Maybe you are trying to load a old theory with a new Isabelle version?</p>\n<ul>\n<li>Johannes</li>\n</ul>",
        "id": 294325781,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660928501
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear Ghassen,</p>\n<p>Where did you get Larry's theory from and what Isabelle version was that for? AFAIK this <br>\ntheory has not been distributed with Isabelle for a few releases. IIRC this theory <br>\nemulates case syntax with syntax translations. This predates Dmitriy's new implementation, <br>\nwhich supports proper nesting. This is why you get the error message. In Isabelle2014, you <br>\nhave to explicitly register the constructors using a case_translation declaration. In the <br>\nAFP entry Coinductive, there is still a working example (of a different type) which <br>\nderives the constructors from Larry's universe of datatypes:</p>\n<p><a href=\"http://afp.sourceforge.net/browser_info/current/AFP/Coinductive/Resumption.html\">http://afp.sourceforge.net/browser_info/current/AFP/Coinductive/Resumption.html</a></p>\n<p>There, you find the declaration</p>\n<p>declare [[case_translation case_resumption Terminal Linear Branch]]</p>\n<p>In the lazy list case, you have to replace the syntax translations for the case combinator <br>\nwith something like</p>\n<p>declare [[case_translation case_llist LNil LCons]]</p>\n<p>provided that your case operator is called \"case_llist\". You can also dig in the version <br>\nhistory of the Resumption file in the AFP to figure out what exactly has to be changed.</p>\n<p>There is also a new command free_constructors in Isabelle2014, which can do most of the <br>\ncase combinator definition and declarations for you. See the datatype tutorial for more <br>\ninformation on that.</p>\n<p>Hope this helps,<br>\nAndreas</p>",
        "id": 294325803,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660928508
    }
]