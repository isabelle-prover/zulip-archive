[
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:brianh@cs.pdx.edu\">brianh@cs.pdx.edu</a>&gt;<br>\nOn Wed, Jun 2, 2010 at 10:54 AM, John Munroe &lt;<a href=\"mailto:munddr@gmail.com\">munddr@gmail.com</a>&gt; wrote:</p>\n<blockquote>\n<p>Hi,</p>\n<p>I was wondering whether two locales that contradict with each other<br>\ncan be combined in a local expression. For example:</p>\n<p>locale LocA =<br>\n fixes F :: \"real =&gt; real\"</p>\n<p>locale LocB = LocA +<br>\n assumes \"F p = 0\"<br>\n and \"G p = 1\"</p>\n<p>locale LocC = LocA +<br>\n assumes \"F p = 1\"</p>\n<p>locale LocExp =<br>\nLB: LocB F + LC: LocC F'<br>\nfor F F'</p>\n<p>begin<br>\nlemma (in LocB) lem: \"EX f s. f s = F' s\"<br>\nby auto<br>\nend</p>\n<p>Is the reason why the lemma can be discharged that the locale LocExp<br>\nis inconsistent?</p>\n</blockquote>\n<p>Your locale LocExp is not inconsistent. Below are the assumptions of<br>\nLocExp; there are three assumptions, and each is about a different<br>\nfunction.</p>\n<p>\"F p = 0\"<br>\n\"G p = 1\"<br>\n\"F' p = 1\"</p>\n<p>By the way, unless you give names to your locale assumptions, you will<br>\nhave a hard time using them in later proofs.</p>\n<blockquote>\n<p>Is the lemma what I think it is</p>\n</blockquote>\n<p>Your lemma is completely trivial, and its proof does not depend on any<br>\nassumptions of any of your locales. LocB does not fix a variable F',<br>\nso F' is considered as an ordinary free variable in lemma \"lem\". You<br>\ncould just as well prove it at the top level:</p>\n<p>lemma \"EX f s. f s = F' s\"<br>\nby auto</p>\n<blockquote>\n<p>, i.e. there exists<br>\nsome function f and some argument s to f in the locale LocB such that<br>\nall values returned are same as those returned by F in LocC for the<br>\nsame argument?</p>\n</blockquote>\n<p>How do you reconcile \"there exists ... some argument s\" with \"all<br>\nvalues returned\"? Maybe you really meant this:</p>\n<p>lemma \"EX f. ALL s. f s = F' s\"<br>\nby auto</p>\n<p>Either way, the lemma is trivially true, regardless of any locales.<br>\nWhether or not any of your locales are inconsistent has no effect<br>\nwhatsoever on the proof.</p>\n<ul>\n<li>Brian</li>\n</ul>",
        "id": 294109377,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660836288
    },
    {
        "content": "<p>From: John Munroe &lt;<a href=\"mailto:munddr@gmail.com\">munddr@gmail.com</a>&gt;<br>\nOn Thu, Jun 3, 2010 at 3:46 PM, Brian Huffman &lt;<a href=\"mailto:brianh@cs.pdx.edu\">brianh@cs.pdx.edu</a>&gt; wrote:</p>\n<blockquote>\n<p>On Wed, Jun 2, 2010 at 10:54 AM, John Munroe &lt;<a href=\"mailto:munddr@gmail.com\">munddr@gmail.com</a>&gt; wrote:</p>\n</blockquote>\n<blockquote>\n<p>Your lemma is completely trivial, and its proof does not depend on any<br>\nassumptions of any of your locales. LocB does not fix a variable F',<br>\nso F' is considered as an ordinary free variable in lemma \"lem\". You<br>\ncould just as well prove it at the top level:</p>\n<p>lemma \"EX f s. f s = F' s\"<br>\nby auto<br>\n</p>\n</blockquote>\n<p>What I actually wanted to prove is that whether there's a function in<br>\nLocB such that it'd return the same value as that returned by a<br>\nfunction in LocC for the same argument. Would I need to parameterise F<br>\nand G in locB and F in locC?</p>\n<p>Thanks again.<br>\nJohn</p>\n<blockquote>\n<blockquote>\n<p>, i.e. there exists<br>\nsome function f and some argument s to f in the locale LocB such that<br>\nall values returned are same as those returned by F in LocC for the<br>\nsame argument?</p>\n</blockquote>\n<p>How do you reconcile \"there exists ... some argument s\" with \"all<br>\nvalues returned\"? Maybe you really meant this:</p>\n<p>lemma \"EX f. ALL s. f s = F' s\"<br>\nby auto</p>\n<p>Either way, the lemma is trivially true, regardless of any locales.<br>\nWhether or not any of your locales are inconsistent has no effect<br>\nwhatsoever on the proof.</p>\n<ul>\n<li>Brian<br>\n</li>\n</ul>\n</blockquote>",
        "id": 294109676,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660836374
    },
    {
        "content": "<p>From: John Munroe &lt;<a href=\"mailto:munddr@gmail.com\">munddr@gmail.com</a>&gt;<br>\nHi,</p>\n<p>I was wondering whether two locales that contradict with each other<br>\ncan be combined in a local expression. For example:</p>\n<p>locale LocA =<br>\n  fixes F :: \"real =&gt; real\"</p>\n<p>locale LocB = LocA +<br>\n  assumes \"F p = 0\"<br>\n  and \"G p = 1\"</p>\n<p>locale LocC = LocA +<br>\n  assumes \"F p = 1\"</p>\n<p>locale LocExp =<br>\nLB: LocB F + LC: LocC F'<br>\nfor F F'</p>\n<p>begin<br>\nlemma (in LocB) lem: \"EX f s. f s = F' s\"<br>\nby auto<br>\nend</p>\n<p>Is the reason why the lemma can be discharged that the locale LocExp<br>\nis inconsistent? Is the lemma what I think it is, i.e. there exists<br>\nsome function f and some argument s to f in the locale LocB such that<br>\nall values returned are same as those returned by F in LocC for the<br>\nsame argument?</p>\n<p>Thanks<br>\nJohn</p>",
        "id": 294110953,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660836804
    }
]