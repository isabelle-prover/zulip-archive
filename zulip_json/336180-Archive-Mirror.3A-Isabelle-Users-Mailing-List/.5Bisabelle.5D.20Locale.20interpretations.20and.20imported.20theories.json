[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt;<br>\nHi all,</p>\n<p>I encountered a problem/bug(?) with locales and imported theories.<br>\nI have four theories:<br>\n  def: Defines a locale<br>\n  add: Adds some lemma to the locale<br>\n  inst: Interprets the locale, but does <em>not</em> import add<br>\n  use: Imports add and inst</p>\n<p>The problem is, that I need to use the added lemma in the<br>\ninterpretation. However, it is not visible in the theory \"use\".<br>\nEven more strange things happen, if I try to reinterpret the locale in<br>\ntheory \"use\": The re-interpretation (done with a different prefix name)<br>\nadds no lemmas, neither the ones originally defined in the locale, nor the<br>\nones added by the theory \"add\".</p>\n<p>The only workarounds that I can currently figure out is instantiating<br>\nthe missing lemmas by hand, i.e. lemmas xyz_lem = locale_name.lem[OF<br>\nxyz_is_interp] or trying to change the structure of the imports-graph.<br>\nIs there some better method how to get the desired lemmas, especially<br>\nthe ones that are declared as [simp] and hence should be filled into the<br>\nsimpset?</p>\n<p>Regards,<br>\n  Peter</p>\n<p>Here follows a boiled-down example: (I also attached a tgz with the four<br>\nthy-files)</p>\n<p>theory \"use\"<br>\nimports inst add<br>\nbegin</p>\n<p>thm int.orig   -- \"Works\"<br>\n  thm l.added    -- \"The theorem is in the locale\"<br>\n  (* thm int.added  -- \"Does not work ... ok, would have to be merged on<br>\nimport\" *)</p>\n<p>interpretation xxx: l .</p>\n<p>-- \"The namespace below xxx seems to be empty ?\"<br>\n  thm xxx.orig  -- \"Does not work\"<br>\n  thm xxx.added -- \"Does not work\"</p>\n<p>end</p>\n<hr>\n<p>theory \"def\"<br>\nimports Main<br>\nbegin<br>\n  locale l<br>\n  begin<br>\n    lemma orig: True ..</p>\n<p>end<br>\nend</p>\n<hr>\n<p>theory add<br>\nimports \"def\"<br>\nbegin</p>\n<p>context l begin<br>\n    lemma added: \"x=x\" ..<br>\n  end</p>\n<p>end</p>\n<hr>\n<p>theory inst<br>\nimports \"def\"<br>\nbegin</p>\n<p>interpretation int: l .</p>\n<p>thm int.orig</p>\n<p>end</p>\n<hr>\n<p><a href=\"/user_uploads/14278/Gejylq5d3KJUPD8u5ZzZsp1d/strange.tgz\">strange.tgz</a></p>",
        "id": 294079717,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660830247
    },
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:brianh@cs.pdx.edu\">brianh@cs.pdx.edu</a>&gt;<br>\nOn Thu, Jul 9, 2009 at 9:11 AM, Peter<br>\nLammich&lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt; wrote:</p>\n<blockquote>\n<p>Hi all,</p>\n<p>I encountered a problem/bug(?) with locales and imported theories.<br>\nI have four theories:<br>\n def: Defines a locale<br>\n add: Adds some lemma to the locale<br>\n inst: Interprets the locale, but does <em>not</em> import add<br>\n use: Imports add and inst</p>\n<p>The problem is, that I need to use the added lemma in the<br>\ninterpretation. However, it is not visible in the theory \"use\".</p>\n</blockquote>\n<p>Hi Peter,</p>\n<p>This is a long-standing bug in Isabelle's implementation of locales.<br>\nIt was discussed briefly on the mailing list in February 2008:</p>\n<p><a href=\"https://lists.cam.ac.uk/mailman/htdig/cl-isabelle-users/2008-February/msg00001.html\">https://lists.cam.ac.uk/mailman/htdig/cl-isabelle-users/2008-February/msg00001.html</a></p>\n<blockquote>\n<p>The only workarounds that I can currently figure out is instantiating<br>\nthe missing lemmas by hand, i.e. lemmas xyz_lem = locale_name.lem[OF<br>\nxyz_is_interp] or trying to change the structure of the imports-graph.</p>\n</blockquote>\n<p>Those are exactly the two workarounds that Clemens Ballarin suggested<br>\non the list last February. I'm afraid the situation with the locale<br>\npackage has not changed, so one of those workarounds will still be<br>\nnecessary. Of the two, making the import structure more linear is<br>\nprobably the easiest one to use. The drawback is that it introduces a<br>\nlot of extra theory dependencies that shouldn't be there. (For much of<br>\nIsabelle's history, import graphs were required to be totally-ordered,<br>\nand most of the packages were apparently designed with this in mind.<br>\nThe locale package is not the only package in Isabelle that doesn't<br>\nhandle theory merges very well.)</p>\n<ul>\n<li>Brian</li>\n</ul>",
        "id": 294079735,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660830256
    },
    {
        "content": "<p>From: Clemens Ballarin &lt;<a href=\"mailto:ballarin@in.tum.de\">ballarin@in.tum.de</a>&gt;<br>\nQuoting Brian Huffman &lt;<a href=\"mailto:brianh@cs.pdx.edu\">brianh@cs.pdx.edu</a>&gt;:</p>\n<p>I would like to point out that calling this behaviour a bug is jumping  <br>\nto conclusions.</p>\n<p>It is conceivable to \"round up\" interpretations at theory merges, but  <br>\nnote that this will not only populate the new theory with additional  <br>\ntheorems but also with syntax and other declarations.  Enabling this  <br>\nhas to be thought through very carefully.  I expect it to cause many  <br>\nmore \"surprising\" effects that will confuse users, hence I'm very  <br>\nhesitant to provide this.</p>\n<p>Clemens</p>",
        "id": 294079759,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660830265
    },
    {
        "content": "<p>From: Clemens Ballarin &lt;<a href=\"mailto:ballarin@in.tum.de\">ballarin@in.tum.de</a>&gt;<br>\nHi Peter,</p>\n<blockquote>\n<p>I encountered a problem/bug(?) with locales and imported theories.<br>\nI have four theories:<br>\n  def: Defines a locale<br>\n  add: Adds some lemma to the locale<br>\n  inst: Interprets the locale, but does <em>not</em> import add<br>\n  use: Imports add and inst</p>\n</blockquote>\n<p>Brian was so kind to dig out my answer to an earlier enquiry of the  <br>\nsame kind, so I can refer to his e-mail.</p>\n<blockquote>\n<p>Even more strange things happen, if I try to reinterpret the locale in<br>\ntheory \"use\": The re-interpretation (done with a different prefix name)<br>\nadds no lemmas, neither the ones originally defined in the locale, nor the<br>\nones added by the theory \"add\".</p>\n</blockquote>\n<p>It is not possible to force the re-interpretation of a locale  <br>\ninstance.  In fact, the interpretation does not take place for any  <br>\nlocale fragments that are subsumed by existing interpretations (also  <br>\nindirect ones created by sublocale).</p>\n<blockquote>\n<p>The only workarounds that I can currently figure out is instantiating<br>\nthe missing lemmas by hand, i.e. lemmas xyz_lem = locale_name.lem[OF<br>\nxyz_is_interp] or trying to change the structure of the imports-graph.<br>\nIs there some better method how to get the desired lemmas, especially<br>\nthe ones that are declared as [simp] and hence should be filled into the<br>\nsimpset?</p>\n</blockquote>\n<p>If you want too keep the diamond theory hierarchy because \"inst\"  <br>\ncontains a lengthy proof of the interpretation theorem, you might  <br>\nconsider leaving the proof in \"inst\" but move the interpretation to  <br>\n\"use\".  This is, however, not going to work very well if you have a  <br>\nhierarchy of locales.</p>\n<p>Clemens</p>",
        "id": 294079771,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660830271
    },
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:brianh@cs.pdx.edu\">brianh@cs.pdx.edu</a>&gt;<br>\nOn Thu, Jul 9, 2009 at 12:33 PM, Clemens Ballarin&lt;<a href=\"mailto:ballarin@in.tum.de\">ballarin@in.tum.de</a>&gt; wrote:</p>\n<blockquote>\n<p>Quoting Brian Huffman &lt;<a href=\"mailto:brianh@cs.pdx.edu\">brianh@cs.pdx.edu</a>&gt;:</p>\n<p>On Thu, Jul 9, 2009 at 9:11 AM, Peter</p>\n<blockquote>\n<p>Lammich&lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt; wrote:</p>\n<blockquote>\n<p>Hi all,</p>\n<p>I encountered a problem/bug(?) with locales and imported theories.<br>\nI have four theories:<br>\n def: Defines a locale<br>\n add: Adds some lemma to the locale<br>\n inst: Interprets the locale, but does <em>not</em> import add<br>\n use: Imports add and inst</p>\n<p>The problem is, that I need to use the added lemma in the<br>\ninterpretation. However, it is not visible in the theory \"use\".</p>\n</blockquote>\n<p>Hi Peter,</p>\n<p>This is a long-standing bug in Isabelle's implementation of locales.<br>\nIt was discussed briefly on the mailing list in February 2008:</p>\n<p>...</p>\n</blockquote>\n<p>I would like to point out that calling this behaviour a bug is jumping to<br>\nconclusions.</p>\n</blockquote>\n<p>At the very least, I think I can safely say that when locales and<br>\ninterpretations are used together with theory merges, the result is<br>\noften not what users expect.</p>\n<p>The issue stems from the interaction between two Isabelle features<br>\n(locales and theory-merging), so I guess I shouldn't have called it a<br>\nbug in the locale package; it could just as well be called a bug in<br>\nIsabelle's theory-merging feature.</p>\n<blockquote>\n<p>It is conceivable to \"round up\" interpretations at theory merges, but note<br>\nthat this will not only populate the new theory with additional theorems but<br>\nalso with syntax and other declarations. Enabling this has to be thought<br>\nthrough very carefully.  I expect it to cause many more \"surprising\" effects<br>\nthat will confuse users, hence I'm very hesitant to provide this.</p>\n<p>Clemens</p>\n</blockquote>\n<p>After thinking about this a bit more, I now see a situation where<br>\n\"rounding up\" interpretations during merges could cause problems. The<br>\nproblem is that the same \"merge\" could happen in more than one place.<br>\nHere's an example:</p>\n<p>theory A  (defines locale \"foo\")<br>\ntheory B imports A (proves lemma \"bar\" in locale 'foo\")<br>\ntheory C imports A (interpretation \"baz\" of locale \"foo\")<br>\ntheory D imports B C (merge creates lemma \"<a href=\"http://baz.bar\">baz.bar</a>\")<br>\ntheory D' imports B C (merge creates another lemma \"<a href=\"http://baz.bar\">baz.bar</a>\")<br>\ntheory E imports D D' (???)</p>\n<p>Maybe the duplicate lemmas aren't such a big problem, but as you<br>\npointed out, the locales could have syntax or other declarations that<br>\noperate on the theory context in arbitrary ways.</p>\n<p>If there is not a good solution to the locale/theory-merge issue, then<br>\nI think it should be made clear in the documentation that using<br>\nlocales together with theory-merges is <em>not supported</em>.</p>\n<ul>\n<li>Brian</li>\n</ul>",
        "id": 294079793,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660830277
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nTheory merge does nothing more than delegate the actual merge operation to <br>\ntheory data provided in user space (here the locale mechanism).  So there <br>\ncannot be a bug \"in\" Isabelle's theory merge feature, but you could call <br>\nthe whole feature a bug, because it raises delicate questions (which is a <br>\nwell-known fact).  But then, \"feature\" and \"bug\" are really synonyms, and <br>\nlife can be generally simplified by deleting both words from one's <br>\ndictionary (which I have done many years ago).</p>\n<p>BTW, the locale mechanism is properly called a \"target\" (of the local <br>\ntheory framework).  A \"package\" is something that implements a <br>\nspecification mechanism that lives within such a target, e.g. 'inductive', <br>\n'function', 'primrec'.</p>\n<p>Makarius</p>",
        "id": 294079804,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660830283
    }
]