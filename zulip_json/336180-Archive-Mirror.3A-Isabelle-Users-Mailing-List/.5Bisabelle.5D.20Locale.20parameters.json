[
    {
        "content": "<p>From: John Munroe &lt;<a href=\"mailto:munddr@gmail.com\">munddr@gmail.com</a>&gt;<br>\nHi,</p>\n<p>Suppose I have two locales L1 and L2:</p>\n<p>locale L1 =<br>\n  fixes c :: nat<br>\n  assumes ax: \"c = 0\"</p>\n<p>locale L2 =<br>\n  fixes c :: nat<br>\n  assumes ax: \"c = 1\"</p>\n<p>and I want to prove a lemma stating that the constant 'c' in L1 does<br>\nnot have the same value as the constant 'c' in L2:</p>\n<p>lemma lem1: \"ALL a b. L1 c --&gt; c = a &amp; L2 c --&gt; c = b &amp; a ~= b\"<br>\nusing <a href=\"http://L1.ax\">L1.ax</a> <a href=\"http://L2.ax\">L2.ax</a><br>\nby auto</p>\n<p>(hopefully the formulation matches my intended meaning.)</p>\n<p>Now, if I change the parametrisation slightly:</p>\n<p>lemma lem2: \"ALL a b. L1 c --&gt; c = a &amp; L2 d --&gt; d = b &amp; a ~= b\"<br>\nusing <a href=\"http://L1.ax\">L1.ax</a> <a href=\"http://L2.ax\">L2.ax</a><br>\nby auto</p>\n<p>The proof fails. Aren't the occurrences of 'c' in lem1 distinct<br>\ninstances? Which lemma actually matches my intended meaning, if any?</p>\n<p>Any help will be appreciated. Thanks.</p>\n<p>John</p>",
        "id": 294144957,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660847156
    },
    {
        "content": "<p>From: \"Tim (McKenzie) Makarios\" &lt;<a href=\"mailto:tjm1983@gmail.com\">tjm1983@gmail.com</a>&gt;<br>\n-----BEGIN PGP SIGNED MESSAGE-----<br>\nHash: SHA1</p>\n<p>On 27/09/11 05:57, John Munroe wrote:</p>\n<blockquote>\n<p>Hi,</p>\n<p>Suppose I have two locales L1 and L2:</p>\n<p>locale L1 =<br>\n  fixes c :: nat<br>\n  assumes ax: \"c = 0\"</p>\n<p>locale L2 =<br>\n  fixes c :: nat<br>\n  assumes ax: \"c = 1\"</p>\n<p>and I want to prove a lemma stating that the constant 'c' in L1 does<br>\nnot have the same value as the constant 'c' in L2:</p>\n<p>lemma lem1: \"ALL a b. L1 c --&gt; c = a &amp; L2 c --&gt; c = b &amp; a ~= b\"<br>\nusing <a href=\"http://L1.ax\">L1.ax</a> <a href=\"http://L2.ax\">L2.ax</a><br>\nby auto</p>\n<p>(hopefully the formulation matches my intended meaning.)</p>\n</blockquote>\n<p>By turning on \"Show Brackets\", you can see that lem1 means<br>\n\"ALL a b. L1 c --&gt; ((c = a &amp; L2 c) --&gt; (c = b &amp; a ~= b))\"<br>\n(after you've removed other superfluous brackets).  I don't think this<br>\nis what you meant.  Perhaps you want something like this:</p>\n<p>lemma lem3:<br>\n  assumes \"L1 c\"<br>\n  shows \"~ L2 c\"<br>\n  using assms and <a href=\"http://L1.ax\">L1.ax</a> and <a href=\"http://L2.ax\">L2.ax</a><br>\n  by auto</p>\n<p>or:</p>\n<p>lemma lem4:<br>\n  assumes \"L1 c\" and \"L2 d\"<br>\n  shows \"c ? d\"<br>\n  using assms and <a href=\"http://L1.ax\">L1.ax</a> and <a href=\"http://L2.ax\">L2.ax</a><br>\n  by auto</p>\n<blockquote>\n<p>Now, if I change the parametrisation slightly:</p>\n<p>lemma lem2: \"ALL a b. L1 c --&gt; c = a &amp; L2 d --&gt; d = b &amp; a ~= b\"<br>\nusing <a href=\"http://L1.ax\">L1.ax</a> <a href=\"http://L2.ax\">L2.ax</a><br>\nby auto</p>\n<p>The proof fails. Aren't the occurrences of 'c' in lem1 distinct<br>\ninstances?</p>\n</blockquote>\n<p>No, I don't think so.  They're not quantified separately; what would<br>\nmake them distinct?</p>\n<blockquote>\n<p>Which lemma actually matches my intended meaning, if any?</p>\n<p>Any help will be appreciated. Thanks.</p>\n<p>John</p>\n</blockquote>\n<p>Tim<br>\n&lt;&gt;&lt;<br>\n-----BEGIN PGP SIGNATURE-----<br>\nVersion: GnuPG v1.4.10 (GNU/Linux)<br>\nComment: Using GnuPG with Mozilla - <a href=\"http://enigmail.mozdev.org/\">http://enigmail.mozdev.org/</a></p>\n<p>iEYEARECAAYFAk6A3kIACgkQ/cBxZIxl6rmuUQCgt2h/AVlrDZ3jAC3FJb5w+ve6<br>\n8DUAn2dfzBPNVW6uy9oOkppPApI3HcOW<br>\n=k9B2<br>\n-----END PGP SIGNATURE-----</p>",
        "id": 294144980,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660847163
    },
    {
        "content": "<p>From: Clemens Ballarin &lt;<a href=\"mailto:ballarin@in.tum.de\">ballarin@in.tum.de</a>&gt;<br>\nHi John,</p>\n<p>Your question is actually not directly related to locales.  Have a  <br>\nlook at Isabelle/HOL's term syntax (which should be explained in the  <br>\nIsabelle/HOL tutorial).</p>\n<p>All occurrences of c denote the same variable, which is implicitly  <br>\nuniversally quantified at the outer most level.  Also note that --&gt;  <br>\nbinds less tightly than &amp; and is right associative.  That is, lem1  <br>\namounts to this:</p>\n<p>!!c. ALL a b. (L1 c --&gt; ((c = a &amp; L2 c) --&gt; (c = b &amp; a ~= b)))</p>\n<p>What you want is a lemma like this:</p>\n<p>L1 a &amp; L2 b --&gt; a ~= b</p>\n<p>Clemens</p>",
        "id": 294145028,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660847168
    }
]