[
    {
        "content": "<p>From: Paulo Emílio de Vilhena &lt;<a href=\"mailto:pevilhena2@gmail.com\">pevilhena2@gmail.com</a>&gt;<br>\nDear all,</p>\n<p>I'm working in HOL-Algebra and I would like to share a problem. The<br>\nformalism of algebraic structures proposed by this library is very<br>\ncomprehensive, because it deals with sets of a certain type instead of all<br>\nthe elements of a given type, and properties for operations are defined on<br>\nthose sets. The problem is that to have these properties we need always to<br>\nprove that the elements which we talk about belong to this set. As a<br>\nconsequence, a big part of almost all the proofs are results of the kind \"a<br>\n: carrier G ==&gt; b : carrier G ==&gt; a + b : carrier G\".</p>\n<p>If membership to this set was seen as a type, many proofs of this library<br>\ncould be shorten, so I wonder if there ism't a way to do this (at least<br>\ninside a proof). I know some tools to declare new types, but none of them<br>\ncould solve this particular issue. I heard that locale typedefs could do<br>\nthe job, but I didn't find any tutorial. Does anyone of you know how they<br>\nwork or where could I find documentation for those?</p>\n<p>Cheers,</p>\n<p>Paulo.</p>",
        "id": 294733733,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189033
    },
    {
        "content": "<p>From: Fabian Immler &lt;<a href=\"mailto:immler@in.tum.de\">immler@in.tum.de</a>&gt;<br>\nDear Paulo,</p>\n<p>I recently added another (somewhat larger) example [1] to HOL-Types_To_Sets to the development version.<br>\nSo this will most likely be part of the upcoming Isabelle2018 release.</p>\n<p>This example can be seen as one result of the discussions we had Spain:<br>\nIt uses local typedef to go from the type-based linear algebra (Modules.thy, Vector_Spaces.thy) to explicit carrier sets.</p>\n<p>Best regards,<br>\nFabian</p>\n<p>[1] <a href=\"http://isabelle.in.tum.de/repos/isabelle/file/f1f989b656bb/src/HOL/Types_To_Sets/Examples/Linear_Algebra_On.thy\">http://isabelle.in.tum.de/repos/isabelle/file/f1f989b656bb/src/HOL/Types_To_Sets/Examples/Linear_Algebra_On.thy</a><br>\n<a href=\"/user_uploads/14278/GUDJxZyl9H-5lwlTdBAukXs7/smime.p7s\">smime.p7s</a></p>",
        "id": 294734907,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189445
    },
    {
        "content": "<p>From: Ondřej Kunčar &lt;<a href=\"mailto:kuncar@in.tum.de\">kuncar@in.tum.de</a>&gt;<br>\nHi Paulo,<br>\nthe problem that you run into, was the main motivation why we started<br>\nworking on what is known under the name \"local typedef\". The local<br>\ntypedef was added to Isabelle in 2017 and it still doesn't reach the<br>\nmaturity of other parts of the system. This is also the reason why the<br>\ninterface is a bit rudimentary, some steps must be done manually, and<br>\nthere is no documentation in the traditional sense.</p>\n<p>But the situation is not that hopeless that it might sound.<br>\nThe sources of information are:</p>\n<ol>\n<li>\n<p>The extended JAR paper about local typedef, which was just<br>\npublished a couple of days ago. The paper contains both theoretical<br>\nbackground and practical examples.<br>\n<a href=\"https://www21.in.tum.de/~kuncar/documents/types-to-sets-JAR2018.pdf\">https://www21.in.tum.de/~kuncar/documents/types-to-sets-JAR2018.pdf</a></p>\n</li>\n<li>\n<p>The examples from the paper as a proof text also exist in Isabelle<br>\nand can be found in src/HOL/Types_To_Sets/Examples.</p>\n</li>\n<li>\n<p>There was a meeting of Isabelle powerusers in Spain the last year and<br>\nas far as I know the topic how to use local typedef for HOL-Algebra was<br>\ndiscussed there. Maybe some of the participants could tell us more<br>\nabout the results.</p>\n</li>\n<li>\n<p>This mailing list (or you could write privately to me).</p>\n</li>\n<li>There are first pioneers using the local typedef in AFP. You could<br>\nfind the theory files by grepping for \"Types_To_Sets\" in the AFP<br>\nsources.</li>\n</ol>\n<p>Let me know if you need more help.</p>\n<p>Best,<br>\nOndřej</p>",
        "id": 294735094,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189519
    }
]