[
    {
        "content": "<p>From: Ken Kubota &lt;<a href=\"mailto:mail@kenkubota.de\">mail@kenkubota.de</a>&gt;<br>\nHi Randy,</p>\n<p>Thanks for your advice, which was very helpful.<br>\nIn an email sent privately, somebody else also pointed out the importance of <br>\nTwelf as a logical framework system, and mentioned various logical frameworks <br>\nby Robin Adams as well as Beluga.<br>\nI have added Twelf to the graph (and a footnote on p. 3) and compiled my <br>\nresearch results further below.</p>\n<p>The reason why I haven't studied the details of logical frameworks yet is that <br>\nthere are two both legitimate, although conflicting methods of representing <br>\nmathematics, and logical frameworks clearly belong to the second method <br>\n(top-down), which is based on the first method (bottom-up).</p>\n<p>For example, in Isabelle's metalogic M by Larry Paulson, the Eigenvariable <br>\nconditions appear as two distinct (independent) conditions:<br>\n\"Eigenvariable conditions:<br>\n∀I: provided x not free in the assumptions<br>\n∃E: provided x not free in B or in any assumption save A\"<br>\n<a href=\"http://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-130.pdf\">http://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-130.pdf</a>, p. 19<br>\n(The object logic serving as an example here is intuitionistic first-order <br>\nlogic.)</p>\n<p>By contrast, in the logic Q0 by Peter Andrews, the restrictions in these <br>\n(derived) rules have their origin in the substitution procedure of (the <br>\nprimitive) Rule R', which is valid only provided that it is not the case that <br>\n\"x is free in a member of [the set of hypotheses] H and free in [A = B].\" <br>\n[Andrews, 2002, p. 214].<br>\nFor the introduction of the universal quantifier, cf. the Rule of Universal <br>\nGeneralization (Gen) (Theorem 5220 in [Andrews, 2002, p. 222]).<br>\nFor the elimination of the existential quantifier, cf. Rule C (Theorem 5245 in <br>\n[Andrews, 2002, p. 230]). (Note that Andrews' Rule C covers all cases, and <br>\nPaulson's rule ∃E only the special case x=y of Rule C.)</p>\n<p>Hence, in a bottom-up representation (like Q0) - unlike in a top-down <br>\nrepresentation (like Isabelle's metalogic M) - it is possible to trace the <br>\norigin of the two Eigenvariable conditions back to a common root, i.e., the <br>\nrestriction in Rule R'.</p>\n<p>Generally speaking, in order to fully reveal the underlying philosophical <br>\nprinciples, a bottom-up representation is required, which follows the principle <br>\nof \"expressiveness\" (Andrews). I prefer the term \"reducibility\"; John Harrison <br>\nuses the term \"decomposition\": \"complex inference rules which ultimately <br>\ndecompose to these primitives\".<br>\n<a href=\"http://www.cl.cam.ac.uk/~jrh13/papers/reflect.pdf\">http://www.cl.cam.ac.uk/~jrh13/papers/reflect.pdf</a>, p. 1 (PDF p. 2)</p>\n<p>A bottom-up representation (which is better suited for foundational research) <br>\nis clearly a Hilbert-style system: It has the elegance of having only a few <br>\nrules of inference (in Q0 even only a single rule of inference - Andy Pitts: <br>\n\"From a logical point of view, it would be better to have a simpler <br>\nsubstitution primitive, such as 'Rule R' of Andrews' logic Q0, and then to <br>\nderive more complex rules from it.\" [Gordon and Melham, 1993, p. 213]). <br>\nMetatheorems are not expressible within the formalism; the metatheorems are <br>\nliterally \"meta\" (\"above\" - i.e., outside of - the logic). In software <br>\nimplementations of Q0 or descendants (Prooftoys by Cris Perdue or my R0 <br>\nimplementation), the metalogical turnstile (⊢) symbol is replaced by the <br>\nlogical implication, which shows the tendency to eliminate metalogical elements <br>\nfrom the formal language.</p>\n<p>A top-down representation (which is better suited for applied mathematics: <br>\ninteractive/automated theorem proving) is either a natural deduction system <br>\n(like HOL) or a logical framework (like Isabelle): It has a proliferation of <br>\nrules of inference (e.g., eight rules for HOL [cf. Gordon and Melham, 1993, pp. <br>\n212 f.]). Metalogical properties (metatheorems) are expressible to a certain <br>\nextent, e.g., using the turnstile (⊢) symbol (the conditionals / the parts <br>\nbefore the turnstile may differ in the hypothesis and the conclusion), or the <br>\nmeta-implication (⇒) in Isabelle's metalogic M (not to be confused with the <br>\nimplication (⊃) of the object-logic), see<br>\n<a href=\"http://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-130.pdf\">http://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-130.pdf</a>, p. 4<br>\nUnfortunately, the gain of expressiveness in terms of metalogical properties by <br>\nmaking metatheorems symbolically representable is obtained at the price of <br>\nphilosophical rigor and elegance in expressing the underlying object logic <br>\n(object language).</p>\n<p>In summary, since the top-down representations (capable of expressing <br>\nmetatheorems) are based on the corresponding bottom-up representation (object <br>\nlogic), the bottom-up representation has to be studied first before unraveling <br>\nfurther dependencies in a top-down representation. I believe Q0 or some <br>\ndescendant of it to be such a basis for reducing mathematics to formal logic as <br>\nintended in Russell's philosophical program of logicism.</p>\n<p>For the references, please see: <a href=\"http://doi.org/10.4444/100.111\">http://doi.org/10.4444/100.111</a></p>\n<p>Best regards,</p>\n<p>Ken</p>\n<hr>\n<p>Ken Kubota<br>\n<a href=\"http://doi.org/10.4444/100\">http://doi.org/10.4444/100</a></p>\n<p>Some Research Results on Logical Frameworks</p>\n<p>Link collection:</p>\n<ul>\n<li>Twelf's wiki: <a href=\"http://twelf.org/wiki/Case_studies\">http://twelf.org/wiki/Case_studies</a></li>\n<li>Abella's library: <a href=\"http://abella-prover.org/examples\">http://abella-prover.org/examples</a></li>\n<li>Beluga's distribution: <a href=\"http://complogic.cs.mcgill.ca/beluga/\">http://complogic.cs.mcgill.ca/beluga/</a></li>\n<li>the Coq implementation of Hybrid: <br>\n<a href=\"http://www.site.uottawa.ca/~afelty/HybridCoq/\">http://www.site.uottawa.ca/~afelty/HybridCoq/</a></li>\n</ul>\n<p>compiled from these two papers:</p>\n<p>Amy Felty, Alberto Momigliano, Brigitte Pientka<br>\nAn Open Challenge Problem Repository for Systems Supporting Binders<br>\n<a href=\"http://doi.org/10.4204/EPTCS.185.2\">http://doi.org/10.4204/EPTCS.185.2</a> (p. 18)</p>\n<p>Brigitte Pientka, Joshua Dunfield<br>\nBeluga: A Framework for Programming and Reasoning with Deductive Systems <br>\n(System Description)<br>\n<a href=\"http://doi.org/10.1007/978-3-642-14203-1_2\">http://doi.org/10.1007/978-3-642-14203-1_2</a> (p. 16)</p>\n<p>A logical framework by Robin Adams:</p>\n<p>Robin Adams<br>\nLambda-Free Logical Frameworks<br>\n<a href=\"http://arxiv.org/abs/0804.1879v2\">http://arxiv.org/abs/0804.1879v2</a></p>\n<p>Some interesting papers by Frank Pfenning et al.:</p>\n<p>Frank Pfenning, Conal Elliott (1988)<br>\nHigher-Order Abstract Syntax<br>\n<a href=\"http://doi.org/10.1145/53990.54010\">http://doi.org/10.1145/53990.54010</a> and <br>\n<a href=\"http://www.cs.cmu.edu/~fp/papers/pldi88.pdf\">http://www.cs.cmu.edu/~fp/papers/pldi88.pdf</a></p>\n<p>Frank Pfenning (1996)<br>\nThe Practice of Logical Frameworks<br>\n<a href=\"http://doi.org/10.1007/3-540-61064-2_33\">http://doi.org/10.1007/3-540-61064-2_33</a> and <br>\n<a href=\"http://www.cs.cmu.edu/~fp/papers/caap96.pdf\">http://www.cs.cmu.edu/~fp/papers/caap96.pdf</a></p>\n<p>Frank Pfenning, Carsten Schürmann (1999)<br>\nSystem Description: Twelf – A Meta-Logical Framework for Deductive Systems<br>\n<a href=\"http://doi.org/10.1007/3-540-48660-7_14\">http://doi.org/10.1007/3-540-48660-7_14</a> and <br>\n<a href=\"http://www.cs.cmu.edu/~fp/papers/cade99.pdf\">http://www.cs.cmu.edu/~fp/papers/cade99.pdf</a></p>\n<p>Frank Pfenning (2002)<br>\nLogical Frameworks - A Brief Introduction<br>\n<a href=\"http://doi.org/10.1007/978-94-010-0413-8_5\">http://doi.org/10.1007/978-94-010-0413-8_5</a> and <br>\n<a href=\"http://www.cs.cmu.edu/~fp/papers/mdorf01.pdf\">http://www.cs.cmu.edu/~fp/papers/mdorf01.pdf</a></p>\n<p>According to Pfenning and Elliott (1988), higher-order abstract syntax has an <br>\neven more expressive power than Isabelle's λ-calculus: \"Isabelle [18] uses a <br>\nrepresentation similar to ours for the statement of rules, and uses <br>\nhigher-order unification for deduction. Isabelle's λ-calculus representation <br>\ndoes not have the expressive power of higher-order abstract syntax, but <br>\nexplicitly encodes quantifier dependencies.\"</p>",
        "id": 294731928,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661188384
    }
]