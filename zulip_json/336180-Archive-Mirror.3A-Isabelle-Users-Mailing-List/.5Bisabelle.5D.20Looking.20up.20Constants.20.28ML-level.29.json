[
    {
        "content": "<p>From: Moa Johansson &lt;<a href=\"mailto:moakristin.johansson@univr.it\">moakristin.johansson@univr.it</a>&gt;<br>\nHi,</p>\n<p>On the ML level, given a set of Isabelle Constants and a context/ <br>\ntheory, I'd like to look up</p>\n<ul>\n<li>If the constant is a datatype-constructor</li>\n<li>or, if it is a function</li>\n<li>if it is a function, I'd also like to look up its defining  <br>\nequations. Is there a more programatic way of doing this than relying  <br>\non @thms{'f.simps'}?</li>\n</ul>\n<p>Could someone please point me to the relevant bit of Isabelle where I  <br>\ncan find some functions that does this?</p>\n<p>Thanks,<br>\nMoa</p>",
        "id": 294132974,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660843466
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@gmail.com\">jasmin.blanchette@gmail.com</a>&gt;<br>\nHi Moa,</p>\n<blockquote>\n<p>On the ML level, given a set of Isabelle Constants and a context/theory, I'd like to look up</p>\n<ul>\n<li>If the constant is a datatype-constructor</li>\n</ul>\n</blockquote>\n<p>src/HOL/Tools/refute.ML exports a function \"is_IDT_constructor\" that does just that. It relies on<br>\nsrc/HOL/Tools/Datatype/datatype.ML, which has some functions for querying the datatype package.</p>\n<blockquote>\n<ul>\n<li>or, if it is a function</li>\n<li>if it is a function, I'd also like to look up its defining equations. Is there a more programatic way of doing this than relying on @thms{'f.simps'}?</li>\n</ul>\n<p>Could someone please point me to the relevant bit of Isabelle where I can find some functions that does this?</p>\n</blockquote>\n<p>To find the defining equations, there's src/Pure/Isar/spec_rules.ML. There's a rough classification in the following categories:</p>\n<p>datatype rough_classification = Unknown | Equational | Inductive | Co_Inductive</p>\n<p>\"simp\" rules correspond to \"Equational\".</p>\n<p>Tools like Nitpick and the Predicate Compiler use these APIs. You can grep their code to see examples of how they can be used.</p>\n<p>I hope this helps.</p>\n<p>Regards,</p>\n<p>Jasmin</p>",
        "id": 294132986,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660843471
    }
]