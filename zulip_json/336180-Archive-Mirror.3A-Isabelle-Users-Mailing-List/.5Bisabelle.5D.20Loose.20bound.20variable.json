[
    {
        "content": "<p>From: Stefan Berghofer &lt;<a href=\"mailto:berghofe@in.tum.de\">berghofe@in.tum.de</a>&gt;<br>\nHi Andreas,</p>\n<p>thanks for reporting this problem. The exception was caused by a bug in<br>\n(r)trancl_tac, which is installed in the simpset as a solver. I have fixed<br>\nthis in the repository version of Isabelle, see<br>\n<a href=\"http://isabelle.in.tum.de/repos/isabelle/rev/206e2f1759cc\">http://isabelle.in.tum.de/repos/isabelle/rev/206e2f1759cc</a></p>\n<p>Greetings,<br>\nStefan</p>",
        "id": 294099637,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660833366
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@kit.edu\">andreas.lochbihler@kit.edu</a>&gt;<br>\nHello,</p>\n<p>I wanted to prove a lemma with an apply script. After some manipulations <br>\n(induct, rule, drule, frule) of the goals, auto, fastsimp or force <br>\nshould easily solve the remaining goal. However, simp (and all methods <br>\nthat use the simplifier) produce only this error message:</p>\n<p>*** exception TYPE raised (line 341 of \"sign.ML\"): Loose bound variable: B.4<br>\n*** At command \"apply\".</p>\n<p>What does this error message mean? And how can I avoid it? Is there <br>\nsomething wrong with my simplifier setup?</p>\n<p>The complete exception trace (with debugging turned on) is below.</p>\n<p>Regards,<br>\nAndreas</p>\n<p>Exception trace for exception - TYPE raised in sign.ML line 341</p>\n<p>Sign.type_check(2)typ_of(2)<br>\nSign.type_check(2)typ_of(2)<br>\nSign.type_check(2)typ_of(2)<br>\nSign.type_check(2)typ_of(2)<br>\nSign.type_check(2)<br>\nSign.certify'(1)(1)(1)(1)(1)(1)<br>\nTrancl_Tac().prove(3)inst(1)<br>\nTrancl_Tac().prove(3)pr(1)<br>\nList.map(2)<br>\nTrancl_Tac().rtrancl_tac(1)(2)(1)(6)<br>\nSubgoal.GEN_FOCUS(5)<br>\nTrancl_Tac().rtrancl_tac(1)(2)(1)<br>\nTactical.ORELSE(1)(1)<br>\nTactical.ORELSE(1)(1)<br>\nSeq.map(2)(1)<br>\nSeq.flat(1)(1)<br>\nSeq.filter(2)copy(1)(1)<br>\nSeq.append(2)copy(1)(1)<br>\nSeq.append(2)copy(1)(1)<br>\nSeq.map(2)(1)<br>\nSeq.map(2)(1)<br>\nSeq.map(2)(1)<br>\nToplevel.proofs'(1)(1)(1)<br>\nRuntime.debugging(2)(1)<br>\nEnd of trace</p>\n<p>proof (prove): step 7</p>\n<p>fixed variables: final, r, t, s, was, s'<br>\nprems:<br>\n   rtrancl3p (redTW t) s was s'<br>\n   Suspend ?w \\&lt;notin&gt; set was</p>\n<p>goal (1 subgoal):</p>\n<p>1. \\&lt;And&gt;a bs a' b a''.<br>\n        \\&lt;lbrakk&gt;rtrancl3p (redTW t) a bs a'; redTW t a' b a'';<br>\n         \\&lt;And&gt;w. Suspend w \\&lt;notin&gt; set (bs @ [b]);<br>\n         (interrupted_mem_red (thr a) (wset a))\\&lt;^sup&gt;*\\&lt;^sup&gt;* (shr a') <br>\n(shr a'');<br>\n         (interrupted_mem_red (thr a) (wset a))\\&lt;^sup&gt;*\\&lt;^sup&gt;* (shr a) <br>\n(shr a')\\&lt;rbrakk&gt;<br>\n        \\&lt;Longrightarrow&gt; (interrupted_mem_red (thr a) (wset <br>\na))\\&lt;^sup&gt;*\\&lt;^sup&gt;* (shr a) (shr a'')</p>\n<p>*** exception TYPE raised (line 341 of \"sign.ML\"):<br>\n*** Loose bound variable: B.4<br>\n*** B.4<br>\n*** At command \"apply\".</p>",
        "id": 294102001,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660834068
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@gmail.com\">jasmin.blanchette@gmail.com</a>&gt;<br>\nHi Andreas,</p>\n<blockquote>\n<p>I wanted to prove a lemma with an apply script. After some  <br>\nmanipulations (induct, rule, drule, frule) of the goals, auto,  <br>\nfastsimp or force should easily solve the remaining goal. However,  <br>\nsimp (and all methods that use the simplifier) produce only this  <br>\nerror message:</p>\n<p>*** exception TYPE raised (line 341 of \"sign.ML\"): Loose bound  <br>\nvariable: B.4<br>\n*** At command \"apply\".</p>\n<p>What does this error message mean?</p>\n</blockquote>\n<p>Isabelle's internal representation of lambda-terms uses de Bruijn  <br>\nindices for bound variables. Errors like these usually mean that  <br>\nthere's a rather bad bug in some code that directly manipulates term  <br>\n(e.g., some code that removes a lambda abstraction forgot to decrement  <br>\nte bound variable indices).</p>\n<blockquote>\n<p>And how can I avoid it? Is there something wrong with my simplifier  <br>\nsetup?</p>\n</blockquote>\n<p>Is there anything _special_ about your simplifier setup?</p>\n<p>Jasmin</p>",
        "id": 294102104,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660834090
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@gmail.com\">jasmin.blanchette@gmail.com</a>&gt;<br>\nPlease do. There wasn't much to be learned by just looking at the trace.</p>\n<p>Jasmin</p>",
        "id": 294102115,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660834094
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@kit.edu\">andreas.lochbihler@kit.edu</a>&gt;<br>\nHi Jasmin,</p>\n<p>thank you for the explanation.</p>\n<p>No, not really. I have added some lemmas to the simp set, but that's <br>\nabout all. In particular, I haven't written any simpprocs.</p>\n<p>If you like, I can send you my Isabelle2009-1/HOL theories such that you <br>\ncan reproduce the error and try to find bug.</p>\n<p>Andreas</p>",
        "id": 294102142,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660834105
    }
]