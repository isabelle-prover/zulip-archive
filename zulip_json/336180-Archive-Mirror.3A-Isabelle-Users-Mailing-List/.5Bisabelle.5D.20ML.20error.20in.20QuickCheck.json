[
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nI figured it out. The problem is that there's a data constructor called<br>\n\"Match\". But Quickcheck catches \"Match\", the ML exception:</p>\n<p>axiomatization catch_match :: \"'a =&gt; 'a =&gt; 'a\"</p>\n<p>code_printing<br>\n  constant catch_match â‡€ (Quickcheck) \"((_) handle Match =&gt; _)\"</p>\n<p>I propose adding the following line to \"Quickcheck_Random.thy\":</p>\n<p>code_reserved Quickcheck Match</p>",
        "id": 294736880,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190114
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nThis line does not break anything in the AFP and solves the immediate<br>\nproblem. Is there any opposition to committing this change?</p>",
        "id": 294737091,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190182
    },
    {
        "content": "<p>From: Lukas Bulwahn &lt;<a href=\"mailto:lukas.bulwahn@gmail.com\">lukas.bulwahn@gmail.com</a>&gt;<br>\nYour change makes sense; I either overlooked that someone could come<br>\nup with an own constant Match, or evolution of the code generator and<br>\nchanges to that part of theory somehow introduced this shortcoming.</p>\n<p>Lukas</p>",
        "id": 294737311,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190249
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nSee now Isabelle/1148f63304f4.</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294737490,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190319
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nDear list,</p>\n<p>I discovered an internal ML error when using QuickCheck. The attached<br>\ntheory file, which I attempted to strip down to the bare minimum,<br>\nexposes the problem. A \"quickcheck\" call appears to produce ML code that<br>\ndoesn't type check.</p>\n<p>This problem affects Isabelle2017 and 2018-RC1.</p>\n<p>(The theory has been developed by a student.)</p>\n<p>Cheers<br>\nLars<br>\n<a href=\"/user_uploads/14278/Gw2qgnN6PRd_uSKD_6M_PcoA/Scratch.thy\">Scratch.thy</a></p>",
        "id": 294738937,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190808
    }
]