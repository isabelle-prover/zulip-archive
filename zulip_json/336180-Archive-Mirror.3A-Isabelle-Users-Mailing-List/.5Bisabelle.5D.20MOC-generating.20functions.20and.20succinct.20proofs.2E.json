[
    {
        "content": "<p>From: Raymond Rogers &lt;<a href=\"mailto:raymond.rogers72@gmail.com\">raymond.rogers72@gmail.com</a>&gt;<br>\nTowards more succinct proofs using Method Of Coefficients (MOC) and <br>\nGenerating functions.<br>\nIf I define a derived data types, GenF and MOC, from Formal_Power_Series <br>\n(fps's) and define terms as members of this, then will:<br>\nThe automatic proof process use the definitions and lemmas on this type, <br>\nGenf, first?  In preference to burrowing down to the underlying fsp facts.<br>\nI realize I could use the definitions and lemmas explicitly but I would <br>\nlike the auto/simp functionality to give preference to these, hopefully <br>\nshort and general, properties first.  While assuring that the underlying <br>\nfacts about fps's are adhered to.</p>\n<p>Ray</p>",
        "id": 294708641,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661181437
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nSorry, but I don't understand at all what you mean. auto and simp use <br>\nfacts from the simp set and, in case of auto, the claset (intro, dest, <br>\nelim rules).</p>\n<p>I do not understand what derived data types you want to define and what <br>\nyou want to do with them and what you mean by defining terms as <br>\n‘members’ of them.</p>\n<p>Manuel</p>",
        "id": 294708860,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661181486
    }
]