[
    {
        "content": "<p>From: Andrzej Mazurkiewicz &lt;<a href=\"mailto:andrzej@mazurkiewicz.org\">andrzej@mazurkiewicz.org</a>&gt;<br>\nHello everybody.</p>\n<p>I am a beginner in Isabelle/HOL and I have the following problems.</p>\n<p>The final goal is the following.<br>\nI would like to define a subtype of a \"nat ~=&gt; preal\" map, with constraints <br>\nthat sum of all preal values should be equal 1.</p>\n<p>Since Isabelle/HOL has brutally simplified my complex plan I have decided to <br>\nstart with something simpler, i. e. with a function RangeSum that would <br>\nprovide a sum of the preal values of the map.</p>\n<p>========= the file ==============<br>\ntheory FarmUserModel<br>\nimports Main PReal RealDef Map<br>\nbegin</p>\n<p>consts RangeSum :: \"(nat ~=&gt; preal)  =&gt; real\"</p>\n<p>term \"empty::(nat ~=&gt; preal)\"</p>\n<p>term   \"map_of [(a::nat,b::preal)]\"</p>\n<p>=============================</p>\n<p>term \"empty::(nat ~=&gt; preal)\"<br>\nreturns<br>\n\"empty\"<br>\n  :: \"nat ~=&gt; preal\"</p>\n<hr>\n<p>term   \"map_of [(a::nat,b::preal)]\"<br>\nreturns<br>\n\"map_of [(a::nat, b::preal)]\"<br>\n  :: \"nat ~=&gt; preal\"</p>\n<p>==============================<br>\nI have tried to begin with primrec in two variants</p>\n<ol>\n<li>Defining that RangeSum of an empty map equals zero.</li>\n</ol>\n<hr>\n<p>primrec<br>\n   \"RangeSum (empty::(nat ~=&gt; preal)) = 0\"</p>\n<hr>\n<p>That has returned<br>\n*** Primrec definition error:<br>\n*** ill-formed constructor<br>\n*** in<br>\n*** \"RangeSum empty = (0::real)\"<br>\n*** At command \"primrec\".</p>\n<ol start=\"2\">\n<li>Defining that RangeSum of the map consisting of a single element, for <br>\nexample (3 -&gt; 0.5) returns 0.5</li>\n</ol>\n<hr>\n<p>primrec<br>\n  \"RangeSum (map_of [(a::nat,b::preal)]) = real b\"</p>\n<hr>\n<p>That has returned<br>\n*** Primrec definition error:<br>\n*** illegal argument in pattern<br>\n*** in<br>\n*** \"RangeSum (map_of [(a::nat, b::preal)]) = real b\"<br>\n*** At command \"primrec\".</p>\n<hr>\n<p>I do not know why the above errors has been generated although arguments seem <br>\nto be OK (for me at least).</p>\n<p>I need some help I am afraid.</p>\n<p>Thanks in advance.<br>\nRegards<br>\nAndrzej Mazurkiewicz</p>",
        "id": 294072712,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660827734
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nPrimrec only works for types defined via <em>datatype</em>, eg lists. But not<br>\nmaps. And just like in functional programming, pattern matching in<br>\nprimrec expects datatype constructors, not arbitrary functions like map_of.</p>\n<p>Be warned against using preal - it is an auxiliary type for internal<br>\npurposes and you cannot do much with it. Use real.</p>\n<p>Tobias</p>\n<p>Andrzej Mazurkiewicz schrieb:</p>",
        "id": 294072732,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660827739
    },
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:brianh@cs.pdx.edu\">brianh@cs.pdx.edu</a>&gt;<br>\nQuoting Andrzej Mazurkiewicz &lt;<a href=\"mailto:andrzej@mazurkiewicz.org\">andrzej@mazurkiewicz.org</a>&gt;:</p>\n<p>As Tobias pointed out, you can't use primrec on type \"'a ~=&gt; 'b\"  <br>\nbecause it is not a datatype. If you want to calculate the sum of the  <br>\nvalues in a map, here's an approach that works: First convert the map  <br>\nto a set; then use \"setsum\" (which uses the \"SUM _ : _. _\" syntax) to  <br>\ncompute the sum.</p>\n<p>definition  assocs :: \"('a ~=&gt; 'b) =&gt; ('a * 'b) set\"<br>\nwhere \"assocs m = {(x, y). m x = Some y}\"</p>\n<p>definition \"RangeSum m = (SUM (x,y) : assocs m. y)\"</p>\n<p>lemma assocs_empty: \"assocs empty = {}\"<br>\n   unfolding assocs_def by simp</p>\n<p>lemma assocs_upd: \"assocs (m(a |-&gt; b)) = insert (a, b) {x : assocs m.  <br>\nfst x ~= a}\"<br>\n   unfolding assocs_def by (auto split: if_splits)</p>\n<p>lemma \"RangeSum (map_of [(x, 1)]) = 1\"<br>\nunfolding RangeSum_def by (simp add: assocs_upd assocs_empty)</p>\n<p>Hope this helps,</p>\n<ul>\n<li>Brian</li>\n</ul>",
        "id": 294072751,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660827749
    }
]