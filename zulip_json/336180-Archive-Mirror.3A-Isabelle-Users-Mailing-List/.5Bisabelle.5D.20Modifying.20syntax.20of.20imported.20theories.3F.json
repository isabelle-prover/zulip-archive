[
    {
        "content": "<p>From: Christian Doczkal &lt;<a href=\"mailto:c.doczkal@stud.uni-saarland.de\">c.doczkal@stud.uni-saarland.de</a>&gt;<br>\nHello</p>\n<p>Is there any way to modify/delete the syntax defined for some constants<br>\nthat one imports from another theory?</p>\n<p>I import some theory and would like to place the binding level of most<br>\nof my syntax between two constants which are declared using the same<br>\npriority.<br>\n<a href=\"/user_uploads/14278/ydyaQNM5HkNHCKZxCm_1bC4j/smime.p7s\">smime.p7s</a></p>",
        "id": 294075118,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660828561
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt;<br>\nChristian Doczkal wrote:<br>\nHave you tried using the<br>\n  no_notation<br>\ndeclaration ?</p>",
        "id": 294075171,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660828566
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Thu, 2 Apr 2009, Dr. Brendan Patrick Mahony wrote:</p>\n<blockquote>\n<p>Regarding no_syntax and no_notation, they have the provoking property <br>\nthat it is hard to get the revoked syntax to stay revoked.</p>\n</blockquote>\n<p>This happens uniformly for all global declarations (at the immediate <br>\ntheory level), e.g. declare foo [simp del]</p>\n<blockquote>\n<p>Or else the theory import could be a bit smarter and not merge in a <br>\ntheory that is imported by another imported theory.</p>\n</blockquote>\n<p>Locales already work differently: instead of maintaining (and merging) <br>\ndata, they manage declarations on data (update functions).  So here you <br>\nwould get a potentially more convenient behaviour: the last declaration of <br>\nnotation or no_notation will take effect.</p>\n<p>I have occasionally pondered the question if one could achieve a similar <br>\nmode of operation at the global level as well, without breaking every <br>\nexisting theory out there.</p>\n<blockquote>\n<p>If you unthinkingly include Set.thy, or anything else that directly <br>\nimports Set.thy, all the ugly notation is right back where you don't <br>\nwant it. This means you frequently can't use the imports list that best <br>\ndescribes or hints at the subject matter of a new theory.</p>\n</blockquote>\n<p>Normally you should never import anything below theory Main, or you will <br>\ninevitably participate in the quite delicate bootstrap process of Main <br>\nHOL.  Strange effects can happen when primitive theories of HOL are merged <br>\nvia different paths.</p>\n<p>Makarius</p>",
        "id": 294075529,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660828713
    },
    {
        "content": "<p>From: \"Dr. Brendan Patrick Mahony\" &lt;<a href=\"mailto:brendan.mahony@dsto.defence.gov.au\">brendan.mahony@dsto.defence.gov.au</a>&gt;<br>\nRegarding no_syntax and no_notation, they have the provoking property  <br>\nthat it is hard to get the revoked syntax to stay revoked. If you  <br>\nunthinkingly include Set.thy, or anything else that directly imports  <br>\nSet.thy, all the ugly notation is right back where you don't want it.  <br>\nThis means you frequently can't use the imports list that best  <br>\ndescribes or hints at the subject matter of a new theory. At least  <br>\nthis was true in Isabelle 2005. Is it still true in the 2008 version?  <br>\nIn the latest builds?</p>\n<p>Perhaps rather than removing it from grammar it could be added to a  <br>\ndeprecated production list or something?</p>\n<p>Or else the theory import could be a bit smarter and not merge in a  <br>\ntheory that is imported by another imported theory.</p>\n<p>IMPORTANT: This email remains the property of the Australian Defence Organisation and is subject to the jurisdiction of section 70 of the CRIMES ACT 1914.  If you have received this email in error, you are requested to contact the sender and delete the email.</p>",
        "id": 294076135,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660828960
    }
]