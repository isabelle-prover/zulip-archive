[
    {
        "content": "<p>From: Brendan Mahony &lt;<a href=\"mailto:Brendan.Mahony@dsto.defence.gov.au\">Brendan.Mahony@dsto.defence.gov.au</a>&gt;<br>\nHow does Isar's calculational reasoner handle montonic operators?</p>\n<p>For example, in the following</p>\n<p>have \"(1::nat) &lt; 3\"<br>\n     by (auto)<br>\n   also have \"(3::nat) + 1 &lt; 5\"<br>\n     by (auto)<br>\n   finally</p>\n<p>the result is</p>\n<p>calculation: (!!x y. x &lt; y ==&gt; x + 1 &lt; y + 1) ==&gt; 1 + 1 &lt; 5</p>\n<p>how do I treat this unwanted premise? Declaring add_less_mono1 as a<br>\ntrans rule has no effect. You can't resolve the calculation with<br>\nadd_less_mono1. I am puzzled.</p>\n<hr>\n<p>Dr Brendan Mahony<br>\nInformation Networks Division                   ph +61 8 8259 6046<br>\nDefence Science and Technology Organisation     fx +61 8 8259 5589<br>\nEdinburgh, South Australia      <a href=\"mailto:Brendan.Mahony@dsto.defence.gov.au\">Brendan.Mahony@dsto.defence.gov.au</a></p>\n<p>Important: This document remains the property of the Australian<br>\nGovernment Department of Defence and is subject to the jurisdiction<br>\nof the Crimes Act section 70. If you have received this document in<br>\nerror, you are requested to contact the sender and delete the document.</p>",
        "id": 293905332,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660745774
    },
    {
        "content": "<p>From: <a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a><br>\nhave \"(1::nat) &lt; 3\"<br>\n     by (auto)<br>\n   also have \"(3::nat) + 1 &lt; 5\"<br>\n     by (auto)</p>\n<p>You did exactly the right thing.</p>\n<p>calculation: (!!x y. x &lt; y ==&gt; x + 1 &lt; y + 1) ==&gt; 1 + 1 &lt; 5</p>\n<p>As did Isabelle. The principle here is that the monotonicity assumptions that<br>\narise in your calculational proof are carried around, accumulate, and get<br>\ndischarged at the end. Thus you cannot simply say</p>\n<p>finally have \"1+1 &lt; (5::nat)\" .</p>\n<p>but need to do something like</p>\n<p>finally have  \"1+1 &lt; (5::nat)\"  by (blast intro:add_less_mono1)</p>\n<p>There may be slightly slicker proof patters.</p>\n<p>Tobias</p>",
        "id": 293911035,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660747424
    }
]