[
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@inria.fr\">jasmin.blanchette@inria.fr</a>&gt;<br>\nHi all,</p>\n<p>In private discussion with Tobias, René T., and Chris S., we agreed that the current syntax for (multiplicity-aware) multiset inclusion and the multiset (Dershowitz-Manna) ordering is confusing.</p>\n<p>Focusing on the strict operators, the current situation is</p>\n<p>&lt; and ⊂ for multiset inclusion<br>\n   &lt;# and ⊂# for the multiset ordering</p>\n<p>Our proposal:</p>\n<p>&lt; for the multiset ordering<br>\n   &lt;# and ⊂# for subset with multiplicities</p>\n<p>(and analogously for the nonstrict operators). Apart from being less confusing (in our opinion), the new syntax would ensure the nice multiset ordering is used by the “ord” type class, which would be useful to some of us. Indeed if &lt; is a linear order on 'a, with this change so would &lt; be on multisets, or on multisets of multisets, etc.</p>\n<p>Because the proposal is essentially a swapping (except for ⊂, which is no longer assigned), we would need to proceed in two steps.</p>\n<p>First step (for Isabelle2015):</p>\n<p>&lt; and ⊂ for multiset inclusion<br>\n   #&lt;# and #⊂# for the multiset ordering</p>\n<p>The symbols “#&lt;#” and “#⊂#” are ugly, but they would vanish with the expected Isabelle2016 release, at which point our proposal would be fully implemented. [*]</p>\n<p>Let us know if you have strong opinions on this, ideally as soon as possible, since we soon have to slow down development toward the next release.</p>\n<p>Cheers,</p>\n<p>Jasmin</p>\n<p>[*] For isabelle-dev readers: In the Isabelle repository, the ugly symbols would appear in the coming days and vanish soon after the Isabelle2015 release.</p>",
        "id": 294331494,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660930427
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Jasmin,</p>\n<p>I am not sure whether it would be best to do the swap in one step.</p>\n<p>In earlier days, we provided funny fix_foo tools (mostly perl scripts)<br>\nwhich would assist in performing such transitions, and the multiset<br>\nsyntax IMHO looks feasible for this also.</p>\n<p>Florian<br>\n<a href=\"/user_uploads/14278/K09D4R_cScpwqOBTt_vGvK1P/signature.asc\">signature.asc</a></p>",
        "id": 294634058,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661159422
    },
    {
        "content": "<p>From: Johannes Hölzl &lt;<a href=\"mailto:hoelzl@in.tum.de\">hoelzl@in.tum.de</a>&gt;<br>\nHm, maybe nowadays a Scala or ML script can do the job? How do you<br>\notherwise distinguish btw. &lt; for orders and &lt; for multiset?</p>\n<ul>\n<li>Johannes</li>\n</ul>",
        "id": 294634422,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661159560
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Johannes,</p>\n<blockquote>\n<p>Hm, maybe nowadays a Scala or ML script can do the job? How do you<br>\notherwise distinguish btw. &lt; for orders and &lt; for multiset?</p>\n</blockquote>\n<p>thanks for the hint.  Of course bare &lt; etc. is not suitable for perl<br>\nmagic.  And this would surely be a candidate for a first<br>\nsource-modifying tool using Isabelle/Scala.</p>\n<p>Florian<br>\n<a href=\"/user_uploads/14278/WVrJpOS5eN1StmZdYKHl5giX/signature.asc\">signature.asc</a></p>",
        "id": 294634785,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661159692
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@inria.fr\">jasmin.blanchette@inria.fr</a>&gt;<br>\nHi Florian,</p>\n<blockquote>\n<p>I am not sure whether it would be best to do the swap in one step.</p>\n</blockquote>\n<p>Well, I am sure that I don’t want to do the swap in one step.</p>\n<blockquote>\n<p>In earlier days, we provided funny fix_foo tools (mostly perl scripts)<br>\nwhich would assist in performing such transitions, and the multiset<br>\nsyntax IMHO looks feasible for this also.</p>\n</blockquote>\n<p>I don’t know how your fancy Perl scripts will deal with &lt; and ⊂, based on the type.</p>\n<p>Jasmin</p>",
        "id": 294634963,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661159759
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nPerl is indeed mostly out -- Isabelle/Scala has token over regex <br>\noperations quite successfully in recent years, together with convenient <br>\nI/O operations that follow Isabelle/ML customs.</p>\n<p>The problem to operate on sources systematically, based on actual formal <br>\ncontent is rather old and well-known, but not yet done routinely.  In <br>\nprinciple, the PIDE markup could be used to guide the text replacement -- <br>\nsome genuine \"refactoring\" of theories.</p>\n<p>I am not proposing this concretely right now, but the technology is pretty <br>\nclose to that.</p>\n<p>Makarius</p>",
        "id": 294635161,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661159827
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@inria.fr\">jasmin.blanchette@inria.fr</a>&gt;<br>\nHi all,</p>\n<blockquote>\n<p>I am not sure whether it would be best to do the swap in one step.</p>\n</blockquote>\n<p>Actually, Florian’s email made me rethink about this, and maybe as many as three steps will be necessary (leading us to Isabelle2016-1 or Isabelle2017):</p>\n<ol>\n<li>Rename &lt;# etc. to #&lt;# (or whatever odd syntax).</li>\n<li>Rename &lt; and \\&lt;subset&gt; to &lt;# and \\&lt;subset&gt;#.</li>\n<li>Rename #&lt;# to &lt;.</li>\n</ol>\n<p>My goal is to maximize the number of cases where changes trigger clear errors when processing theories, and minimize subtle change of semantics. Even in a theorem prover, semantic changes can be difficult to debug. Combining steps 2 and 3 would lead to some confusion — a term like “A &lt; B” would suddenly change semantics, without giving an immediate error.</p>\n<p>Anyway, we will see. For the moment, if there are no voices against my implementing step 1, I will go ahead (e.g. next week).</p>\n<p>Thanks to all for your feedback!</p>\n<p>Jasmin</p>",
        "id": 294635856,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661160102
    },
    {
        "content": "<p>From: Larry Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nIt would be great to get some feedback from the mailing list as to who would be affected by this change.</p>\n<p>Existing users of multiset orderings, please speak up!</p>\n<p>If hardly anybody is going to be affected, then the change should be implemented in full for the next release.</p>\n<p>Larry</p>",
        "id": 294636032,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661160170
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@inria.fr\">jasmin.blanchette@inria.fr</a>&gt;<br>\nGood point. We’ve had some off-lists discussions with the IsaFoR developers, who use multisets and multiset orderings heavily. But since they are currently based on the repository version, we could do the three-step transition there, all in time for Isabelle2015. Mathias, Dmitriy, and I are in a similar situation. Anybody else?</p>\n<p>Jasmin</p>",
        "id": 294636361,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661160305
    }
]