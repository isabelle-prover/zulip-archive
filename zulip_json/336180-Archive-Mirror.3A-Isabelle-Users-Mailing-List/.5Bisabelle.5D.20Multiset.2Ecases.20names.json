[
    {
        "content": "<p>From: René Thiemann &lt;<a href=\"mailto:rene.thiemann@uibk.ac.at\">rene.thiemann@uibk.ac.at</a>&gt;<br>\nDear all,</p>\n<p>I was wondering about the case-names of multiset_cases in Multiset.thy:</p>\n<p>lemma multiset_cases [cases type, case_names empty add]:<br>\nassumes em:  \"M = {#} ==&gt; P\"<br>\nassumes add: \"!! N x. M = N + {#x#} ==&gt; P\"<br>\nshows \"P\"<br>\n  sorry</p>\n<p>lemma \"foo = {#}\"<br>\nproof (cases foo)<br>\n  print_cases<br>\n  (* case names 1 and 2 *)<br>\noops</p>\n<p>So, the names \"add\" and \"empty\" for cases are not used at all.</p>\n<p>If however, one would have declared </p>\n<p>lemma multiset_cases [cases type, case_names empty add]:<br>\nassumes em:  \"M = {#} ⟹ P\"<br>\nassumes add: \"!! N x. M = N + {#x#} ⟹ P\"<br>\nshows \"P\"<br>\n  sorry</p>\n<p>then everything works as expected</p>\n<p>lemma \"foo = {#}\"<br>\nproof (cases foo)<br>\n  print_cases<br>\n  (* case names empty and add *)<br>\noops</p>\n<p>Perhaps this should be changed in a future release.<br>\nKind regards,<br>\nRené</p>",
        "id": 294271736,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660917446
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nOn 03.03.2014 09:43, René Thiemann wrote:</p>\n<blockquote>\n<p>Dear all,</p>\n<p>I was wondering about the case-names of multiset_cases in Multiset.thy:</p>\n<p>lemma multiset_cases [cases type, case_names empty add]:<br>\nassumes em:  \"M = {#} ==&gt; P\"<br>\nassumes add: \"!! N x. M = N + {#x#} ==&gt; P\"<br>\nshows \"P\"<br>\n  sorry</p>\n<p>lemma \"foo = {#}\"<br>\nproof (cases foo)<br>\n  print_cases<br>\n  (* case names 1 and 2 *)<br>\noops</p>\n<p>So, the names \"add\" and \"empty\" for cases are not used at all.</p>\n<p>If however, one would have declared </p>\n<p>lemma multiset_cases [cases type, case_names empty add]:<br>\nassumes em:  \"M = {#} ⟹ P\"<br>\nassumes add: \"!! N x. M = N + {#x#} ⟹ P\"<br>\nshows \"P\"<br>\n  sorry<br>\nI guess you meant [case_names empty add, cases type]?<br>\nPerhaps this should be changed in a future release.<br>\nIndeed.</p>\n</blockquote>",
        "id": 294271780,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660917458
    },
    {
        "content": "<p>From: René Thiemann &lt;<a href=\"mailto:rene.thiemann@uibk.ac.at\">rene.thiemann@uibk.ac.at</a>&gt;<br>\nAh, indeed, bad copy &amp; paste mistake.</p>",
        "id": 294271831,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660917470
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nBefore there are more copy-paste accidents, just note that such <br>\nelimination rules can be written in a more structured way:</p>\n<p>lemma multiset_cases [cases type]:<br>\n     obtains (empty) \"M = {#}\"<br>\n       | (add) N x where \"M = N + {#x#}\"</p>\n<p>Here the case_names are already included, and the chance for mistakes <br>\nreduced.  (There is no such form for induction rules, though.)</p>\n<p>Further fine-points of ongoing Multiset library changes should probably be <br>\ndiscussed on isabelle-dev.  Tobias has already applied some of your <br>\npatches, so it has become part of the development process.</p>\n<p>Makarius</p>",
        "id": 294271937,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660917489
    }
]