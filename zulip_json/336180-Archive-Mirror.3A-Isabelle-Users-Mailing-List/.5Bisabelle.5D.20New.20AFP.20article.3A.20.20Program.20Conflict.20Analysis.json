[
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nWe are pleased to announce that a new article (again on Threads) has <br>\nmade it into the Archive of Formal Proofs:</p>\n<p>Formalization of Conflict Analysis of Programs with Procedures, Thread <br>\nCreation, and Monitors<br>\nPeter Lammich<br>\nMarkus MÃ¼ller-Olm</p>\n<p>In this work we formally verify the soundness and precision of a static <br>\nprogram analysis that detects conflicts (e.g. data races) in programs <br>\nwith procedures, thread creation and monitors with the Isabelle theorem <br>\nprover. As common in static program analysis, our program model <br>\nabstracts guarded branching by nondeterministic branching, but <br>\ncompletely interprets the call-/return behavior of procedures, <br>\nsynchronization by monitors, and thread creation. The analysis is based <br>\non the observation that all conflicts already occur in a class of <br>\nparticularly restricted schedules. These restricted schedules are suited <br>\nto constraint-system-based program analysis. The formalization is based <br>\nupon a flowgraph-based program model with an operational semantics as <br>\nreference point.</p>\n<p><a href=\"http://afp.sourceforge.net/entries/Program-Conflict-Analysis.shtml\">http://afp.sourceforge.net/entries/Program-Conflict-Analysis.shtml</a></p>\n<p>PS I like the acknowledgement: \"We also thank the people on the Isabelle <br>\nmailing list for quick and useful responses.\"</p>",
        "id": 294054441,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660821004
    }
]