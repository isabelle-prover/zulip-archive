[
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nThe Floyd-Warshall Algorithm for Shortest Paths<br>\nSimon Wimmer and Peter Lammich</p>\n<p>The Floyd-Warshall algorithm [Flo62, Roy59, War62] is a classic dynamic <br>\nprogramming algorithm to compute the length of all shortest paths between any <br>\ntwo vertices in a graph (i.e. to solve the all-pairs shortest path problem, or <br>\nAPSP for short). Given a representation of the graph as a matrix of weights M, <br>\nit computes another matrix M' which represents a graph with the same path <br>\nlengths and contains the length of the shortest path between any two vertices i <br>\nand j. This is only possible if the graph does not contain any negative cycles. <br>\nHowever, in this case the Floyd-Warshall algorithm will detect the situation by <br>\ncalculating a negative diagonal entry. This entry includes a formalization of <br>\nthe algorithm and of these key properties. The algorithm is refined to an <br>\nefficient imperative version using the Imperative Refinement Framework.</p>\n<p><a href=\"https://www.isa-afp.org/entries/Floyd_Warshall.shtml\">https://www.isa-afp.org/entries/Floyd_Warshall.shtml</a></p>\n<p>Enjoy!<br>\n<a href=\"/user_uploads/14278/l7y1-kIpoppxUIaFAQFRt35-/smime.p7s\">smime.p7s</a></p>",
        "id": 294710506,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661182027
    }
]