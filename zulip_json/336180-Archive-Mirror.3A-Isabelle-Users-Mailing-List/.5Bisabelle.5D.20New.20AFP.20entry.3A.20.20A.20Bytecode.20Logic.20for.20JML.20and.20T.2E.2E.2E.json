[
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nA new article has been added to the Archive of Formal Proofs, just in <br>\ntime for Christmas ;-)</p>\n<p>A Bytecode Logic for JML and Types<br>\nLennart Beringer and Martin Hofmann</p>\n<p>This document contains the Isabelle/HOL sources underlying the paper \"A <br>\nbytecode logic for JML and types\" by Beringer and Hofmann, updated to <br>\nIsabelle 2008. We present a program logic for a subset of sequential <br>\nJava bytecode that is suitable for representing both, features found in <br>\nhigh-level specification language JML as well as interpretations of <br>\nhigh-level type systems. To this end, we introduce a fine-grained <br>\ncollection of assertions, including strong invariants, local annotations <br>\nand VDM-reminiscent partial-correctness specifications. Thanks to a <br>\ngoal-oriented structure and interpretation of judgements, verification <br>\nmay proceed without recourse to an additional control flow analysis. The <br>\nsuitability for interpreting intensional type systems is illustrated by <br>\nthe proof-carrying-code style encoding of a type system for a <br>\nfirst-order functional language which guarantees a constant upper bound <br>\non the number of objects allocated throughout an execution, be the <br>\nexecution terminating or non-terminating. Like the published paper, the <br>\nformal development is restricted to a comparatively small subset of the <br>\nJVML, lacking (among other features) exceptions, arrays, virtual <br>\nmethods, and static fields. This shortcoming has been overcome <br>\nmeanwhile, as our paper has formed the basis of the Mobius base logic, a <br>\nprogram logic for the full sequential fragment of the JVML. Indeed, the <br>\npresent formalisation formed the basis of a subsequent formalisation of <br>\nthe Mobius base logic in the proof assistant Coq, which includes a proof <br>\nof soundness with respect to the Bicolano operational semantics by <br>\nPichardie.</p>\n<p>Enjoy,<br>\nTobias</p>",
        "id": 294070094,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660826857
    }
]