[
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nDynamic Architectures<br>\nDiego Marmsoler</p>\n<p>The architecture of a system describes the system's overall organization into <br>\ncomponents and connections between those components. With the emergence of <br>\nmobile computing, dynamic architectures have become increasingly important. In <br>\nsuch architectures, components may appear or disappear, and connections may <br>\nchange over time. In the following we mechanize a theory of dynamic <br>\narchitectures and verify the soundness of a corresponding calculus. Therefore, <br>\nwe first formalize the notion of configuration traces as a model for dynamic <br>\narchitectures. Then, the behavior of single components is formalized in terms of <br>\nbehavior traces and an operator is introduced and studied to extract the <br>\nbehavior of a single component out of a given configuration trace. Then, <br>\nbehavior trace assertions are introduced as a temporal specification technique <br>\nto specify behavior of components. Reasoning about component behavior in a <br>\ndynamic context is formalized in terms of a calculus for dynamic architectures. <br>\nFinally, the soundness of the calculus is verified by introducing an alternative <br>\ninterpretation for behavior trace assertions over configuration traces and <br>\nproving the rules of the calculus. Since projection may lead to finite as well <br>\nas infinite behavior traces, they are formalized in terms of coinductive lists. <br>\nThus, our theory is based on Lochbihler's formalization of coinductive lists. <br>\nThe theory may be applied to verify properties for dynamic architectures.</p>\n<p><a href=\"https://www.isa-afp.org/entries/DynamicArchitectures.shtml\">https://www.isa-afp.org/entries/DynamicArchitectures.shtml</a><br>\n<a href=\"/user_uploads/14278/UPXKSJF2FJn7aSYqdQemVqe7/smime.p7s\">smime.p7s</a></p>",
        "id": 294714673,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661183370
    }
]