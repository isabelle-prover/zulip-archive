[
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\n<a href=\"http://afp.sourceforge.net/entries/Transitive-Closure-II.shtml\">http://afp.sourceforge.net/entries/Transitive-Closure-II.shtml</a></p>\n<p>Executable Transitive Closures<br>\nRen√© Thiemann</p>\n<p>We provide a generic work-list algorithm to compute the<br>\n(reflexive-)transitive closure of relations where only successors of<br>\nnewly detected states are generated. In contrast to our previous work,<br>\nthe relations do not have to be finite, but each element must only have<br>\nfinitely many (indirect) successors. Moreover, a subsumption relation<br>\ncan be used instead of pure equality. An executable variant of the<br>\nalgorithm is available where the generic operations are instantiated<br>\nwith list operations. This formalization was performed as part of the<br>\nIsaFoR/CeTA project, and it has been used to certify size-change<br>\ntermination proofs where large transitive closures have to be computed.</p>\n<p>Enjoy!</p>",
        "id": 294151556,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660849487
    }
]