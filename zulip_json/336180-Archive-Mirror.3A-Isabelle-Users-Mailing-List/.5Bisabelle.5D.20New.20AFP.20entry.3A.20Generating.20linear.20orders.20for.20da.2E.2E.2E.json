[
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nby Ren√© Thiemann</p>\n<p>We provide a tactic which automatically synthesizes linear orders for datatypes<br>\nas it is possible using Haskell's ``deriving Ord'' feature. The tactic is able<br>\nto handle datatypes with mutual or higher-order recursion, if the nesting is not<br>\ntoo complex.</p>\n<p>Our method complements the Isabelle Collection Framework which for some<br>\ndatastructures---like balanced trees---demands that the type of keys is linearly<br>\nordered.</p>\n<p>Our formalization was performed as part of the IsaFoR/CeTA project. With our new<br>\ntactic we could completely remove tedious proofs for linear orders of two datatypes.</p>\n<p><a href=\"http://afp.sourceforge.net/entries/Datatype_Order_Generator.shtml\">http://afp.sourceforge.net/entries/Datatype_Order_Generator.shtml</a></p>\n<p>Scrap your boilerplate!<br>\nAnd enjoy.</p>",
        "id": 294222043,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660898008
    }
]