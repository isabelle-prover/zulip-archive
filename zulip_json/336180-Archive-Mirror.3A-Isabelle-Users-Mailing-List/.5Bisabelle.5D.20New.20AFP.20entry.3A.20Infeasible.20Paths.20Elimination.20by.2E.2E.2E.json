[
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nInfeasible Paths Elimination by Symbolic Execution Techniques: Proof of <br>\nCorrectness and Preservation of Paths<br>\nRomain Aissat, Frederic Voisin and Burkhart Wolff</p>\n<p>TRACER is a tool for verifying safety properties of sequential C programs. <br>\nTRACER attempts at building a finite symbolic execution graph which <br>\nover-approximates the set of all concrete reachable states and the set of <br>\nfeasible paths. We present an abstract framework for TRACER and similar <br>\nCEGAR-like systems. The framework provides 1) a graph- transformation based <br>\nmethod for reducing the feasible paths in control-flow graphs, 2) a model for <br>\nsymbolic execution, subsumption, predicate abstraction and invariant generation. <br>\nIn this framework we formally prove two key properties: correct construction of <br>\nthe symbolic states and preservation of feasible paths. The framework focuses on <br>\ncore operations, leaving to concrete prototypes to “fit in” heuristics for <br>\ncombining them. The accompanying paper (published in ITP 2016) can be found at <br>\n<a href=\"https://www.lri.fr/∼wolff/papers/conf/2016-itp-InfPathsNSE.pdf\">https://www.lri.fr/∼wolff/papers/conf/2016-itp-InfPathsNSE.pdf</a>.</p>\n<p>Enjoy!<br>\n<a href=\"/user_uploads/14278/xieyXrq-g1842vEYdab8im-k/smime.p7s\">smime.p7s</a></p>",
        "id": 294681296,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661176809
    }
]