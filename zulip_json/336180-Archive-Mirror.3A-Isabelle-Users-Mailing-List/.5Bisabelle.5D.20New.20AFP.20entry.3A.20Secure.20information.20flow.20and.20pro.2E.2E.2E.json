[
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nSecure Information Flow and Program Logics<br>\nLennart Beringer and Martin Hofmann</p>\n<p>We present interpretations of type systems for secure information flow<br>\nin Hoare logic, complementing previous encodings in relational program<br>\nlogics. We first treat the imperative language IMP, extended by a simple<br>\nprocedure call mechanism. For this language we consider base-line<br>\nnon-interference in the style of Volpano et al. and the flow-sensitive<br>\ntype system by Hunt and Sands. In both cases, we show how typing<br>\nderivations may be used to automatically generate proofs in the program<br>\nlogic that certify the absence of illicit flows. We then add<br>\ninstructions for object creation and manipulation, and derive<br>\nappropriate proof rules for base-line non-interference. As a consequence<br>\nof our work, standard verification technology may be used for verifying<br>\nthat a concrete program satisfies the non-interference property.</p>\n<p>This proof development represents an update of the formalisation<br>\nunderlying our paper [CSF 2007] and is intended to resolve any<br>\nambiguities that may be present in the paper.</p>\n<p><a href=\"http://afp.sourceforge.net/entries/SIFPL.shtml\">http://afp.sourceforge.net/entries/SIFPL.shtml</a></p>",
        "id": 294068249,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660826230
    }
]