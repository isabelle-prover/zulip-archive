[
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nStream Fusion in HOL with Code Generation<br>\nAndreas Lochbihler</p>\n<p>Stream Fusion is a system for removing intermediate list data structures from functional programs, in particular Haskell. This entry adapts stream fusion to Isabelle/HOL and its code generator. We define stream types for finite and possibly infinite lists and stream versions for most of the fusible list functions in the theories List and Coinductive_List, and prove them correct with respect to the conversion functions between lists and streams. The Stream Fusion transformation itself is implemented as a simproc in the preprocessor of the code generator. </p>\n<p><a href=\"http://afp.sourceforge.net/entries/Stream_Fusion_Code.shtml\">http://afp.sourceforge.net/entries/Stream_Fusion_Code.shtml</a></p>\n<p>Larry Paulson</p>",
        "id": 294317413,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660925882
    }
]