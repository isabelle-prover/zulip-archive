[
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nIsabelle/UTP: Mechanised Theory Engineering for Unifying Theories of Programming<br>\nSimon Foster, Frank Zeyda, Yakoub Nemouchi, Pedro Ribeiro, Burkhart Wolff</p>\n<p>sabelle/UTP is a mechanised theory engineering toolkit based on Hoare and Heâ€™s <br>\nUnifying Theories of Programming (UTP). UTP enables the creation of <br>\ndenotational, algebraic, and operational semantics for different programming <br>\nlanguages using an alphabetised relational calculus. We provide a semantic <br>\nembedding of the alphabetised relational calculus in Isabelle/HOL, including new <br>\ntype definitions, relational constructors, automated proof tactics, and <br>\naccompanying algebraic laws. Isabelle/UTP can be used to both capture laws of <br>\nprogramming for different languages, and put these fundamental theorems to work <br>\nin the creation of associated verification tools, using calculi like Hoare <br>\nlogics. This document describes the relational core of the UTP in Isabelle/HOL.</p>\n<p><a href=\"https://www.isa-afp.org/entries/UTP.html\">https://www.isa-afp.org/entries/UTP.html</a></p>\n<p>Enjoy!<br>\n<a href=\"/user_uploads/14278/pnzQWtCGU1YFvwF56nhCN600/smime.p7s\">smime.p7s</a></p>",
        "id": 294750438,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661195232
    }
]