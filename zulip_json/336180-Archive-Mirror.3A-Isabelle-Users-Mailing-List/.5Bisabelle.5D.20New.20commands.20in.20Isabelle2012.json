[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Tue, 19 Jun 2012, Christian Sternagel wrote:</p>\n<blockquote>\n<p>when following section 5.8 of the Progtutorial in jEdit, I noticed that <br>\na string that was declared as keyword in the keywords-section of the <br>\nheader is still highlighted as such after removing it from the <br>\nkeywords-section.</p>\n<p>To reproduce start with:</p>\n<hr>\n<p>theory Foo imports Main begin<br>\nfoobar<br>\nend</p>\n<hr>\n<p>where \"foobar\" is not highlighted as keyword. Now add</p>\n<hr>\n<p>keywords \"foobar\" :: thy_decl</p>\n<hr>\n<p>to the header. At this point \"foobar\" is highlighted as keyword (and <br>\nsomething seems to happen at foobar, since the background is highlighted <br>\nfrom there until the end of the file, but there is no output, which is <br>\nalso strange).</p>\n</blockquote>\n<p>The command is declared as a keyword, but not defined yet, so some <br>\nundefined behaviour is to be expected.  What happens here is that the <br>\nexecution of that document version stops at the undefined command, since <br>\nthe attempt to parse it semantically has failed.</p>\n<p>I would say that is correct behaviour, although there could be more <br>\nambitious error messages.</p>\n<blockquote>\n<p>Now delete \"foobar\" from the content and remove the keywords-section <br>\nagain. When typing \"foobar\" again, it is still highlighted as keyword <br>\n(and the usual \"Outer syntax error: command expected, but identifier <br>\nfoobar was found\" is missing).</p>\n</blockquote>\n<p>I did not quite manage to reproduce that exactly.  Nonetheless, some odd <br>\neffects are to be expected when declared command keywords are removed <br>\nlater.  This is because there are several slightly different ways to <br>\nmanage commands at the same time: the old global table for the TTY loop <br>\n(and thus for Proof General) and a new value-oriented table within the <br>\ntheory, moreover the the Prover IDE with its own syntax derived from the <br>\nkeywords declarations in the theory headers without inspecting the <br>\nsemantic content yet (intertwined with the editing process).</p>\n<p>The whole affair is a bit like providing syntax highlighting for perl6, <br>\nand it works surprisingly well already.  After a few more years, when the <br>\nTTY loop and PG are really obsolete, the old stateful way can disappear <br>\naltogether and become fully value-oriented without odd effects.  But that <br>\nis not imminent.  I have no reason to kill Proof General prematurely, <br>\nafter so many years of tending it.</p>\n<p>Makarius</p>",
        "id": 294163220,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660853971
    },
    {
        "content": "<p>From: Omar Montaño Rivas &lt;<a href=\"mailto:omarmrivas@gmail.com\">omarmrivas@gmail.com</a>&gt;<br>\nHi all,</p>\n<p>I am trying to define a custom Isar command in Isabelle 2012. I am<br>\nusing the following example from Christian Urban's cookbook:</p>\n<p>ML {*<br>\n      let<br>\n        val do_nothing = Scan.succeed (Local_Theory.background_theory I)<br>\n        val kind = Keyword.thy_decl<br>\n      in<br>\n        Outer_Syntax.local_theory (\"foobar\", kind) \"description of foobar\"<br>\n                                  do_nothing<br>\n      end<br>\n*}</p>\n<p>However, I always get the error message:</p>\n<p>*** Undeclared outer syntax command \"foobar\"</p>\n<hr>\n<p>Anybody know what I am doing wrong?</p>\n<p>Thanks,</p>\n<p>Omar.</p>",
        "id": 294164841,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854339
    },
    {
        "content": "<p>From: Christian Urban &lt;<a href=\"mailto:christian.urban@kcl.ac.uk\">christian.urban@kcl.ac.uk</a>&gt;<br>\nHi Omar,</p>\n<p>That is a part that has recently changed (like 2 - 3 months<br>\nago) and I just did not have time to update the text. Though<br>\nthe sources of the cookbook are updated.</p>\n<p>If you use jEdit then the proof-script below will work. The <br>\ndifference is that the theory header now needs a declaration <br>\nlike</p>\n<p>keywords \"foobar\" :: thy_decl </p>\n<p>depending what kind of command you are defining.</p>\n<p>If you use Emacs and Proof-General, you also have to now give<br>\nthis declaration and in addition have to jump through the<br>\nhops of generating keyword files (as explained in the text).</p>\n<p>Hope this helps,<br>\nChristian</p>",
        "id": 294164857,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854345
    },
    {
        "content": "<p>From: Omar Montaño Rivas &lt;<a href=\"mailto:omarmrivas@gmail.com\">omarmrivas@gmail.com</a>&gt;<br>\nHi Christian,</p>\n<p>On 16 June 2012 03:46, Christian Urban &lt;<a href=\"mailto:christian.urban@kcl.ac.uk\">christian.urban@kcl.ac.uk</a>&gt; wrote:</p>\n<blockquote>\n<p>Hi Omar,</p>\n<p>That is a part that has recently changed (like 2 - 3 months<br>\nago) and I just did not have time to update the text. Though<br>\nthe sources of the cookbook are updated.</p>\n<p>If you use jEdit then the proof-script below will work. The<br>\ndifference is that the theory header now needs a declaration<br>\nlike</p>\n<p>keywords \"foobar\" :: thy_decl</p>\n</blockquote>\n<p>Yes, now it works in ProofGeneral. Thank you!</p>\n<p>Omar.</p>\n<blockquote>\n<p>depending what kind of command you are defining.</p>\n<p>If you use Emacs and Proof-General, you also have to now give<br>\nthis declaration and in addition have to jump through the<br>\nhops of generating keyword files (as explained in the text).</p>\n<p>Hope this helps,<br>\nChristian</p>\n<p>On Friday, June 15, 2012 at 23:17:15 (+0100), Omar Montaño Rivas wrote:<br>\n &gt; Hi all,<br>\n &gt;<br>\n &gt; I am trying to define a custom Isar command in Isabelle 2012. I am<br>\n &gt; using the following example from Christian Urban's cookbook:<br>\n &gt;<br>\n &gt; ML {*<br>\n &gt;       let<br>\n &gt;         val do_nothing = Scan.succeed (Local_Theory.background_theory I)<br>\n &gt;         val kind = Keyword.thy_decl<br>\n &gt;       in<br>\n &gt;         Outer_Syntax.local_theory (\"foobar\", kind) \"description of foobar\"<br>\n &gt;                                   do_nothing<br>\n &gt;       end<br>\n &gt; *}<br>\n &gt;<br>\n &gt; However, I always get the error message:<br>\n &gt;<br>\n &gt;  *** Undeclared outer syntax command \"foobar\"<br>\n &gt;  ***<br>\n &gt;<br>\n &gt; Anybody know what I am doing wrong?<br>\n &gt;<br>\n &gt; Thanks,<br>\n &gt;<br>\n &gt; Omar.<br>\n &gt;</p>\n<p>--<br>\ntheory Scratch<br>\nimports Main<br>\nkeywords \"foobar\" :: thy_decl</p>\n<p>begin</p>\n<p>ML {*<br>\nlet<br>\n  val do_nothing = Scan.succeed (Local_Theory.background_theory I)<br>\n  val kind = Keyword.thy_decl<br>\nin<br>\n  Outer_Syntax.local_theory (\"foobar\", kind) \"description of foobar\" do_nothing<br>\nend<br>\n*}</p>\n<p>foobar</p>\n</blockquote>",
        "id": 294164890,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854358
    },
    {
        "content": "<p>From: Dmitriy Traytel &lt;<a href=\"mailto:traytel@in.tum.de\">traytel@in.tum.de</a>&gt;<br>\nHi Christian,</p>\n<p>one could also mention the @{command_spec foobar} antiquotation which <br>\nallows you to avoid the duplication of the kind declaration in the code.</p>\n<p>Best wishes,<br>\nDmitriy</p>",
        "id": 294164964,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854374
    },
    {
        "content": "<p>From: Christian Urban &lt;<a href=\"mailto:christian.urban@kcl.ac.uk\">christian.urban@kcl.ac.uk</a>&gt;<br>\nHi Dmitriy,</p>\n<p>Thanks a lot! I updated the section accordingly<br>\nand also my own code in Nominal.</p>\n<p>Thanks again,<br>\nChristian</p>",
        "id": 294165251,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854493
    },
    {
        "content": "<p>From: Christian Sternagel &lt;<a href=\"mailto:c-sterna@jaist.ac.jp\">c-sterna@jaist.ac.jp</a>&gt;<br>\nDear all,</p>\n<p>when following section 5.8 of the Progtutorial in jEdit, I noticed that <br>\na string that was declared as keyword in the keywords-section of the <br>\nheader is still highlighted as such after removing it from the <br>\nkeywords-section.</p>\n<p>To reproduce start with:</p>\n<hr>\n<p>theory Foo imports Main begin<br>\nfoobar<br>\nend</p>\n<hr>\n<p>where \"foobar\" is not highlighted as keyword. Now add</p>\n<hr>\n<p>keywords \"foobar\" :: thy_decl</p>\n<hr>\n<p>to the header. At this point \"foobar\" is highlighted as keyword (and <br>\nsomething seems to happen at foobar, since the background is highlighted <br>\nfrom there until the end of the file, but there is no output, which is <br>\nalso strange).</p>\n<p>Now delete \"foobar\" from the content and remove the keywords-section <br>\nagain. When typing \"foobar\" again, it is still highlighted as keyword <br>\n(and the usual \"Outer syntax error: command expected, but identifier <br>\nfoobar was found\" is missing).</p>\n<p>cheers</p>\n<p>chris</p>",
        "id": 294165264,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854499
    }
]