[
    {
        "content": "<p>From: \"Thiemann, René\" &lt;<a href=\"mailto:Rene.Thiemann@uibk.ac.at\">Rene.Thiemann@uibk.ac.at</a>&gt;<br>\nDear all,</p>\n<p>the AFP has the following new entry.</p>\n<p>Enjoy and thanks to Pasquale,<br>\nRené</p>\n<p>An Efficient Generalization of Counting Sort for Large, possibly Infinite Key Ranges<br>\n  by Pasquale Noce</p>\n<p>Counting sort is a well-known algorithm that sorts objects of any kind mapped to<br>\ninteger keys, or else to keys in one-to-one correspondence with some subset of<br>\nthe integers (e.g. alphabet letters). However, it is suitable for direct use,<br>\nviz. not just as a subroutine of another sorting algorithm (e.g. radix sort),<br>\nonly if the key range is not significantly larger than the number of the objects<br>\nto be sorted. This paper describes a tail-recursive generalization of counting<br>\nsort making use of a bounded number of counters, suitable for direct use in case<br>\nof a large, or even infinite key range of any kind, subject to the only<br>\nconstraint of being a subset of an arbitrary linear order. After performing a<br>\npen-and-paper analysis of how such algorithm has to be designed to maximize its<br>\nefficiency, this paper formalizes the resulting generalized counting sort<br>\n(GCsort) algorithm and then formally proves its correctness properties, namely<br>\nthat (a) the counters' number is maximized never exceeding the fixed upper<br>\nbound, (b) objects are conserved, (c) objects get sorted, and (d) the algorithm<br>\nis stable.</p>\n<p><a href=\"https://www.isa-afp.org/entries/Generalized_Counting_Sort.html\">https://www.isa-afp.org/entries/Generalized_Counting_Sort.html</a></p>",
        "id": 294767241,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661202517
    }
]