[
    {
        "content": "<p>From: \"Thiemann, Rene\" &lt;<a href=\"mailto:Rene.Thiemann@uibk.ac.at\">Rene.Thiemann@uibk.ac.at</a>&gt;<br>\nEffect polymorphism in higher-order logic<br>\n  by Andreas Lochbihler</p>\n<p>The notion of a monad cannot be expressed within higher-order logic<br>\n(HOL) due to type system restrictions. We show that if a monad is used<br>\nwith values of only one type, this notion can be formalised in HOL.<br>\nBased on this idea, we develop a library of effect specifications and<br>\nimplementations of monads and monad transformers. Hence, we can<br>\nabstract over the concrete monad in HOL definitions and thus use the<br>\nsame definition for different (combinations of) effects. We illustrate<br>\nthe usefulness of effect polymorphism with a monadic interpreter for a<br>\nsimple language.</p>\n<p>Enjoy 1/5</p>",
        "id": 294710651,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661182081
    }
]