[
    {
        "content": "<p>From: \"Thiemann, Rene\" &lt;<a href=\"mailto:Rene.Thiemann@uibk.ac.at\">Rene.Thiemann@uibk.ac.at</a>&gt;<br>\nDear all,</p>\n<p>I’m happy to announce a new tool in the AFP.</p>\n<p>Lazifying case constants<br>\nby Lars Hupel</p>\n<p>Isabelle's code generator performs various adaptations for target languages.<br>\nAmong others, case statements are printed as match expressions. Internally,<br>\nthis is a sophisticated procedure, because in HOL, case statements are<br>\nrepresented as nested calls to the case combinators as generated by the<br>\ndatatype package. Furthermore, the procedure relies on laziness of match<br>\nexpressions in the target language, i.e., that branches guarded by patterns<br>\nthat fail to match are not evaluated. Similarly, if-then-else is printed to<br>\nthe corresponding construct in the target language. This entry provides<br>\ntooling to replace these special cases in the code generator by ignoring these<br>\ntarget language features, instead printing case expressions and if-then-else<br>\nas functions.</p>\n<p><a href=\"https://www.isa-afp.org/entries/Lazy_Case.shtml\">https://www.isa-afp.org/entries/Lazy_Case.shtml</a></p>\n<p>Enjoy,<br>\nRené</p>",
        "id": 294710135,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661181904
    }
]