[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nReferring to Isabelle_12_Sep_2013:</p>\n<p>When using Code_Target_Numeral instead of the old Efficient_Nat, the<br>\ncode generator wraps some funny dummy-datatype (nat = Nat of int) around<br>\nmy natural numbers. For one of my benchmarks (heavy use of arrays in<br>\nImperative-HOL) this results in doubling the runtime under PolyML. Under<br>\nmlton, its only around 15% slower.</p>\n<p>What was the reason behind this change, and is there a way to produce<br>\ncode working with plain IntInf?</p>",
        "id": 294247927,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660909661
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Peter,</p>\n<p>Until Isabelle2013, Code_Numeral.thy defined a type copy of the naturals and translated <br>\nthem to arbitrary-precision integers in the target languages. As the latter also include <br>\nthe negative numbers, this is not a perfect fit. Florian changed this: now, Code_Numeral <br>\ndefines the type integer as a type copy of int and maps it to the target language integers <br>\n-- and Code_Target_Nat implements the nat type as a sub-type of integer. So, the <br>\nmotivation was to get a cleaner setup of the code generator.</p>\n<p>In many cases, such type copies do not affect performance, because the compiler can get <br>\nrid of such type copies after type checking. However, when they are nested into some other <br>\npolymorphic type, this is not always possible. Maybe, arrays fall into that class.</p>\n<p>If you are free to choose which number to use, use Code_Numeral.integer instead of <br>\nNat.nat. That will always be mapped to IntInf in SML. Alternatively, you can roll your own <br>\nsetup following Isabelle2013's Code_Numeral and Efficient_Nat.</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 294247939,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660909667
    }
]