[
    {
        "content": "<p>From: Daniel Schoepe &lt;<a href=\"mailto:daniel@schoepe.org\">daniel@schoepe.org</a>&gt;<br>\nHi,</p>\n<p>I was wondering if there was a way to have more fine-grained control<br>\nover how newlines are inserted when using antiquotations:<br>\nWhen using something like @{thm foo} (or @{thm foo_def}) in my case,<br>\nno newlines are inserted at all. This can be corrected by<br>\nusing [display] as an option to the antiquotation, but this causes<br>\nthe newlines to be inserted at places that seem to be chosen<br>\nautomatically.</p>\n<p>This result is not always ideal: In my specific case, I'm trying to<br>\nget nice-looking representation of terms in a programming language whose<br>\nterms are represented by an Isabelle data type with some infix<br>\nannotations. For example, I'd like a term like the following to be<br>\nprinted with linebreaks at the same position as in the Isabelle/HOL<br>\nsource.</p>\n<p>definition foo :: Stmt<br>\n  where \"foo =<br>\nx &lt;- 1;<br>\ny &lt;- 2;<br>\nz &lt;- x + y\"</p>\n<p>(where -&gt; and ; are infix notations for constructors of Stmt)</p>\n<p>I'd like to keep these definitions separate from the place where I am<br>\nusing the antiquotation, so putting the definition in the place of the<br>\nantiquotation is not an ideal solution for me. Of course, I could copy<br>\nthe generated latex output into my document manually, but this is<br>\nhorrible in terms of maintainability. Using some perl to automate this<br>\nmay be an option, but I'm hoping that there's a more elegant way.</p>\n<p>Regards,<br>\nDaniel</p>",
        "id": 294161950,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660853457
    },
    {
        "content": "<p>From: Christian Sternagel &lt;<a href=\"mailto:c-sterna@jaist.ac.jp\">c-sterna@jaist.ac.jp</a>&gt;<br>\nHi,</p>\n<p>you can read the section on Inner syntax of the Isabelle Reference <br>\nManual (isabelle doc isar-ref). There it is described how to use mixfix <br>\nannotations (which can be installed just for certain output modes, e.g., <br>\nlike (latex)) to configure pretty printing. Something very similar to <br>\nyour example is available as part of Monad_Syntax.thy from <br>\nIsabelle/HOL's library:</p>\n<p><a href=\"http://isabelle.in.tum.de/dist/library/HOL/HOL-Library/Monad_Syntax.html\">http://isabelle.in.tum.de/dist/library/HOL/HOL-Library/Monad_Syntax.html</a></p>\n<p>(note that you have to use the output mode \"do_notation\" to actually <br>\nactivate this syntax in your output).</p>\n<p>For a full example consider the attached file.</p>\n<p>cheers</p>\n<p>chris<br>\n<a href=\"/user_uploads/14278/QGa9--wg-DJ0p_hpz7XnU3Er/Test.thy\">Test.thy</a></p>",
        "id": 294161974,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660853469
    },
    {
        "content": "<p>From: Daniel Schoepe &lt;<a href=\"mailto:daniel@schoepe.org\">daniel@schoepe.org</a>&gt;<br>\nHi Chris,</p>\n<p>Thank you, that seems work nicely. I ended up defining the notations I<br>\nwanted myself instead of using do notation though, but the Monad_Syntax<br>\ntheory is a nice example of how to do that.</p>\n<p>Regards,<br>\nDaniel</p>",
        "id": 294161987,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660853478
    }
]