[
    {
        "content": "<p>From: \"Matthews, John R\" &lt;<a href=\"mailto:john.r.matthews@intel.com\">john.r.matthews@intel.com</a>&gt;<br>\nHi,</p>\n<p>I have a small feature request: I have a large list of theorems that I'm giving to blast. To simplify blast's search space, I want to fix all of the variables in my theorem list. However, some of the theorems contain only a proper subset of the variables I'm fixing. This causes Isabelle to report a \"no such variable\" error, even though all of the variables I'm fixing occur in at least one of the theorems.</p>\n<p>Below is a simplified example of the error I'm hitting:</p>\n<p>theory NoSuchVar</p>\n<p>imports Main</p>\n<p>begin</p>\n<p>lemma L1: \"x = x\" by auto</p>\n<p>lemma L2: \"y = y\" by auto</p>\n<p>lemmas both = L1 L2</p>\n<p>thm both[where x=x and y=y] -- {* reports \"no such variable\" error *}</p>\n<p>end</p>\n<p>Could this behavior be changed such that the error is reported only when a variable occurs in none of the theorems?</p>\n<p>I'm using Isabelle2011-1.</p>\n<p>Thanks,</p>\n<p>John</p>",
        "id": 294151336,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660849411
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Mon, 30 Jan 2012, Matthews, John R wrote:</p>\n<blockquote>\n<p>I have a small feature request: I have a large list of theorems that I'm <br>\ngiving to blast. To simplify blast's search space, I want to fix all of <br>\nthe variables in my theorem list. However, some of the theorems contain <br>\nonly a proper subset of the variables I'm fixing. This causes Isabelle <br>\nto report a \"no such variable\" error, even though all of the variables <br>\nI'm fixing occur in at least one of the theorems.</p>\n<p>Below is a simplified example of the error I'm hitting:</p>\n</blockquote>\n<blockquote>\n<p>lemma L1: \"x = x\" by auto<br>\nlemma L2: \"y = y\" by auto</p>\n<p>lemmas both = L1 L2</p>\n<p>thm both[where x=x and y=y] -- {* reports \"no such variable\" error *}<br>\n</p>\n</blockquote>\n<blockquote>\n<p>Could this behavior be changed such that the error is reported only when <br>\na variable occurs in none of the theorems?</p>\n</blockquote>\n<p>Unfortunately not.  The fact notation with attribute application is <br>\nstructurally decomposed such that each attribute sees only a single thm as <br>\nits argument.  This was done consciously many years ago to keep things as <br>\nsimple as possible (which was only partly successful, because attributes <br>\nturned out quite complex nonetheless).</p>\n<blockquote>\n<p>From the above explanation it is not fully clear what you are trying to <br>\ndo.  Seen in isolation, the \"fixing\" of schematic variables can be done as <br>\nin the \"no_vars\" attribute, see also <br>\n<a href=\"http://isabelle.in.tum.de/repos/isabelle/file/Isabelle2011-1/src/Pure/Isar/attrib.ML#l288\">http://isabelle.in.tum.de/repos/isabelle/file/Isabelle2011-1/src/Pure/Isar/attrib.ML#l288</a></p>\n</blockquote>\n<p>Note that no_vars is a bit odd in introducing locally fixed variables, <br>\nwithout propagating the extended context.  This results in undeclared <br>\nfrees occurring in the resulting theorem.  The Prover IDE (even Proof <br>\nGeneral) prints those with a warning color markup, but the main use of <br>\nno_vars is for LaTeX documents.</p>\n<p>You can easily make your own attribute along the same lines.  But I can't <br>\nsay on the spot what happens when you do propagate the extended context <br>\nwith the new fixes declared.  In all these years the question was left <br>\nopen if attributes are allowed to change the \"axiomatic basis\" <br>\n(fixes/assumes) of the context; some advanced locale interpretation stuff <br>\nmight fail if that is done.</p>\n<p>Makarius</p>",
        "id": 294152239,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660849733
    },
    {
        "content": "<p>From: \"Matthews, John R\" &lt;<a href=\"mailto:john.r.matthews@intel.com\">john.r.matthews@intel.com</a>&gt;<br>\nAh, I'd forgotten about no_vars. Thanks.</p>\n<p>John</p>\n<p>-----Original Message-----<br>\nFrom: Makarius [mailto:makarius@sketis.net] <br>\nSent: Wednesday, February 15, 2012 3:06 AM<br>\nTo: Matthews, John R<br>\nCc: <a href=\"mailto:isabelle-users@cl.cam.ac.uk\">isabelle-users@cl.cam.ac.uk</a><br>\nSubject: Re: [isabelle] No such variable</p>\n<p>On Mon, 30 Jan 2012, Matthews, John R wrote:</p>\n<blockquote>\n<p>I have a small feature request: I have a large list of theorems that <br>\nI'm giving to blast. To simplify blast's search space, I want to fix <br>\nall of the variables in my theorem list. However, some of the theorems <br>\ncontain only a proper subset of the variables I'm fixing. This causes <br>\nIsabelle to report a \"no such variable\" error, even though all of the <br>\nvariables I'm fixing occur in at least one of the theorems.</p>\n<p>Below is a simplified example of the error I'm hitting:</p>\n</blockquote>\n<blockquote>\n<p>lemma L1: \"x = x\" by auto<br>\nlemma L2: \"y = y\" by auto</p>\n<p>lemmas both = L1 L2</p>\n<p>thm both[where x=x and y=y] -- {* reports \"no such variable\" error *}<br>\n</p>\n</blockquote>\n<blockquote>\n<p>Could this behavior be changed such that the error is reported only <br>\nwhen a variable occurs in none of the theorems?</p>\n</blockquote>\n<p>Unfortunately not.  The fact notation with attribute application is structurally decomposed such that each attribute sees only a single thm as its argument.  This was done consciously many years ago to keep things as simple as possible (which was only partly successful, because attributes turned out quite complex nonetheless).</p>\n<blockquote>\n<p>From the above explanation it is not fully clear what you are trying to do.  Seen in isolation, the \"fixing\" of schematic variables can be done as in the \"no_vars\" attribute, see also<br>\n<a href=\"http://isabelle.in.tum.de/repos/isabelle/file/Isabelle2011-1/src/Pure/Isar/attrib.ML#l288\">http://isabelle.in.tum.de/repos/isabelle/file/Isabelle2011-1/src/Pure/Isar/attrib.ML#l288</a></p>\n</blockquote>\n<p>Note that no_vars is a bit odd in introducing locally fixed variables, without propagating the extended context.  This results in undeclared frees occurring in the resulting theorem.  The Prover IDE (even Proof<br>\nGeneral) prints those with a warning color markup, but the main use of no_vars is for LaTeX documents.</p>\n<p>You can easily make your own attribute along the same lines.  But I can't say on the spot what happens when you do propagate the extended context with the new fixes declared.  In all these years the question was left open if attributes are allowed to change the \"axiomatic basis\" <br>\n(fixes/assumes) of the context; some advanced locale interpretation stuff might fail if that is done.</p>\n<p>Makarius</p>",
        "id": 294152410,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660849800
    }
]