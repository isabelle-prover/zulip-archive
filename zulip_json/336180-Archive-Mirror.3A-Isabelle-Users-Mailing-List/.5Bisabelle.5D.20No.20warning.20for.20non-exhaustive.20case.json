[
    {
        "content": "<p>From: Andrew Gacek &lt;<a href=\"mailto:andrew.gacek@gmail.com\">andrew.gacek@gmail.com</a>&gt;<br>\nIs there a way to enable warnings when a case expression is<br>\nnon-exhaustive? For example, Isabelle/HOL accepts this without a<br>\nwarning:</p>\n<p>fun f :: \"nat =&gt; nat\" where<br>\n  \"f x = (case x of 0 =&gt; 0)\"</p>\n<p>Thanks,<br>\nAndrew</p>",
        "id": 294646787,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661164438
    },
    {
        "content": "<p>From: Dmitriy Traytel &lt;<a href=\"mailto:traytel@in.tum.de\">traytel@in.tum.de</a>&gt;<br>\nHi Andrew,</p>\n<p>no, there is no direct way to do this (i.e. the case translation <br>\nfacility does not provide this functionality).</p>\n<p>Of course, with Isabelle's user-space type inference, you can implement <br>\na check phase that does what you want. Here is a quick and dirty example <br>\nthat just shouts whenever it finds an undefined in a term (which is the <br>\ncase in your example):</p>\n<p>ML ‹<br>\nContext.&gt;&gt;<br>\n   (Syntax_Phases.term_check 2 \"Warn undefined\"<br>\n     (fn _ =&gt; fn ts =&gt;<br>\n       let<br>\n         val _ = map (fn t =&gt; fold_term_types (fn t =&gt; fn T =&gt; fn () =&gt;<br>\n           if t = Const (@{const_name undefined}, T) then warning <br>\n\"undefined\" else ()) t ()) ts<br>\n       in ts end))<br>\n›</p>\n<p>Dmitriy</p>",
        "id": 294646850,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661164454
    },
    {
        "content": "<p>From: Andrew Gacek &lt;<a href=\"mailto:andrew.gacek@gmail.com\">andrew.gacek@gmail.com</a>&gt;<br>\nThanks, this does indeed catch the undefined. But for me it also gives<br>\nspurious warnings, e.g. on</p>\n<p>fun f :: \"nat =&gt; nat\" where<br>\n  \"f x = (case x of 0 =&gt; 0 | Suc n =&gt; n)\"</p>\n<p>This is on Isabelle2014.</p>\n<p>-Andrew</p>",
        "id": 294646855,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661164461
    },
    {
        "content": "<p>From: Dmitriy Traytel &lt;<a href=\"mailto:traytel@in.tum.de\">traytel@in.tum.de</a>&gt;<br>\nHi Andrew,</p>\n<p>please note that the code below is run on every term that is given to <br>\nthe type inference. And for the function package this is not only the <br>\nterm entered by the user, but also some internal stuff, where apparently <br>\nundefined appears. I presume the command term and definition will not <br>\ngive warnings for \"f x = (case x of 0 =&gt; 0 | Suc n =&gt; n)\" (not tested).</p>\n<p>Otherwise, you probably also want to emit a warning only when the <br>\nundefined appears directly under a case combinator (this may reduce the <br>\nnumber of false positives). Thus you will need to refine my rudimentary <br>\nproposal.</p>\n<p>Dmitriy</p>",
        "id": 294646883,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661164475
    }
]