[
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Christian,</p>\n<p>there has never been a systematic attempt to generate code for nominal<br>\napplications.  I have two ideas currently:</p>\n<p>a) Nominal Logic is about binders.  Maybe a translation to something<br>\nbinder-free like combinatory logic is feasible?</p>\n<p>b) Nominal2 uses quotient types.  Usually these <em>can</em> be executed,<br>\ntypically using abstract datatypes.</p>\n<p>To investigate this, we would need a simple yet not wholly trivial<br>\nexample.  On occasion I would be willing to have a look at this and see<br>\nhow far we can get using existing infrastructure.  (This is actually the<br>\nfirst part of the Berghofer Triple Approach:<br>\n    1. Make some examples.<br>\n    2. Glimpse the general idea.<br>\n    3. Implement it.)</p>\n<p>Cheers,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/EhT8NVU6po3BytMqrVJy5Jwm/signature.asc\">signature.asc</a></p>",
        "id": 294245577,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908767
    }
]