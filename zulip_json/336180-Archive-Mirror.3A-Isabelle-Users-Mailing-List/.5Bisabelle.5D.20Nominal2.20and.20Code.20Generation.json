[
    {
        "content": "<p>From: Mark Wassell &lt;<a href=\"mailto:mpwassell@gmail.com\">mpwassell@gmail.com</a>&gt;<br>\nHello,</p>\n<p>Is it possible to generate code from nominal datatypes and inductive<br>\npredicates defined over them?</p>\n<p>The very basic datatype and inductive predicate below doesn't generate code<br>\nfor mode i whereas it does for a non-Nominal version.</p>\n<p>I understand that nominal2 datatypes are built using quotient types so<br>\nshould I be looking at how code generation with inductive predicates over<br>\nquotient types works?</p>\n<p>Cheers</p>\n<p>Mark</p>\n<p>nominal_datatype \"foo\" =<br>\n    Bar<br>\n    | Baz int foo</p>\n<p>inductive R :: \"foo ⇒ bool\" where<br>\n  \"R Bar\"<br>\n|  \"⟦ i ≥ 0 ; R fs ⟧ ⟹ R (Baz i fs)\"<br>\nequivariance R<br>\nnominal_inductive R .</p>\n<p>code_pred [show_steps,  show_mode_inference,  show_invalid_clauses] R .</p>",
        "id": 294736832,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190096
    }
]