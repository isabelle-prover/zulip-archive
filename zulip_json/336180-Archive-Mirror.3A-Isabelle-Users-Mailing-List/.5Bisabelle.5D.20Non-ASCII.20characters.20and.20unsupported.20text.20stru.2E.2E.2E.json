[
    {
        "content": "<p>From: Wolfgang Jeltsch &lt;<a href=\"mailto:wolfgang-it@jeltsch.info\">wolfgang-it@jeltsch.info</a>&gt;<br>\nHello!</p>\n<p>What is the recommended way of embedding non-ASCII characters in<br>\nordinary text (headlines and paragraph contents)? In actual Isabelle<br>\ncode, I have access to the “infinite number of non-ASCII symbols” but<br>\nnot in ordinary text as far as I can see.</p>\n<p>I know that I can embed LaTeX source code that produces the desired<br>\nsymbols, but that seems too low-level to me. Is there a way to enter<br>\ncharacters like no-break spaces and proper quotation marks (“ and ”)<br>\ndirectly?</p>\n<p>Another thing are structures that aren’t currently supported by<br>\nIsabelle’s markup language. In particular I wonder how to properly embed<br>\ncitations. Sure, I can use LaTeX source code again, but I’m wondering<br>\nwhether it’s also possible to have an Isabelle construct, perhaps user-<br>\ndefined, like <code>\\&lt;cite&gt;‹…›</code>.</p>\n<p>Regarding LaTeX source code, I discovered that it is possible to embed<br>\nit directly into the contents of <code>text</code>, <code>section</code>, and such. Is this<br>\nintentional or is it just that it happens to work with the current<br>\nIsabelle implementation? On the other hand, there is the <code>\\&lt;latex&gt;‹…›</code><br>\nconstruct, which doesn’t seem to be documented (I found it via the IDE’s<br>\ncompletion mechanism). Is this construct preferred over just embedding<br>\nLaTeX source code? Does it differ from plain embedding?</p>\n<p>All the best,<br>\nWolfgang</p>",
        "id": 294757912,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661198308
    },
    {
        "content": "<p>From: Wolfgang Jeltsch &lt;<a href=\"mailto:wolfgang-it@jeltsch.info\">wolfgang-it@jeltsch.info</a>&gt;<br>\nHi!</p>\n<p>I’d be glad if anyone could answer at least some of the questions I<br>\nraised in my e-mail below. I’d like to write the documentation of my<br>\nIsabelle code properly, for which feedback on these matters would be<br>\nnecessary. Thanks in advance.</p>\n<p>All the best,<br>\nWolfgang</p>",
        "id": 294759363,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661198848
    },
    {
        "content": "<p>From: Wolfgang Jeltsch &lt;<a href=\"mailto:wolfgang-it@jeltsch.info\">wolfgang-it@jeltsch.info</a>&gt;<br>\nAm Montag, den 01.07.2019, 10:48 +1000 schrieb Peter Gammie:</p>\n<blockquote>\n<p>Wolfgang,</p>\n<p>I don’t know what the state of the art is, or where documentation<br>\nthings are headed, but I’ll try to give you some pointers anyway.</p>\n</blockquote>\n<p>Dear Peter,</p>\n<p>thanks a lot for your explanations. Below are my responses to them.</p>\n<blockquote>\n<blockquote>\n<p>What is the recommended way of embedding non-ASCII characters in<br>\nordinary text (headlines and paragraph contents)? In actual Isabelle<br>\ncode, I have access to the “infinite number of non-ASCII symbols”<br>\nbut not in ordinary text as far as I can see.</p>\n</blockquote>\n<p>The Isabelle docs suggest that UTF-8 is OK in these contexts. See (I<br>\nthink) the Isabelle/jEdit manual.</p>\n<blockquote>\n<p>I know that I can embed LaTeX source code that produces the desired<br>\nsymbols, but that seems too low-level to me. Is there a way to enter<br>\ncharacters like no-break spaces and proper quotation marks (“ and ”)<br>\ndirectly?</p>\n</blockquote>\n<p>I don’t know anything about entering these characters. I’d suggest you<br>\nuse your favourite editor on the thy file directly. I get the<br>\nimpression that modern LaTeX can eat UTF8 OK.</p>\n</blockquote>\n<p>Hmm, when I enter a non-ASCII character into an Isabelle/jEdit buffer, I<br>\ncannot be sure that it will make it into the file in UTF-8-encoded form<br>\nwhen saving. I think it works in practice for symbols like “ and ”.<br>\nHowever, if I enter the Greek letter γ, for example, it will be saved to<br>\nthe file as <code>\\&lt;gamma&gt;</code>. If it appears in documentation text, outside of<br>\nactual Isabelle code, this <code>\\&lt;gamma&gt;</code> will end up verbatim in the<br>\ngenerated LaTeX source code, causing an error.</p>\n<p>So apparently it would work to place a symbol like “ or ” into the<br>\ndocumentation part of an Isabelle file and having it transferred to the<br>\ngenerated LaTeX file and finally processed correctly by LaTeX using some<br>\nsort of LaTeX UTF-8 support. However, this would work only because<br>\nsymbols like “ and ” don’t have an Isabelle encoding in the form <code>\\&lt;…&gt;</code>.<br>\nAs soon as they’d get one, we would run into the same problem as with<br>\nthe γ above.</p>\n<blockquote>\n<blockquote>\n<p>Another thing are structures that aren’t currently supported by<br>\nIsabelle’s markup language. In particular I wonder how to properly<br>\nembed citations. Sure, I can use LaTeX source code again, but I’m<br>\nwondering whether it’s also possible to have an Isabelle construct,<br>\nperhaps user-defined, like <code>\\&lt;cite&gt;‹…›</code>.</p>\n</blockquote>\n<p>There is a <code>cite</code> antiquotation. Try completing on <code>print_</code> in<br>\nIsabelle/jEdit. One of those will give you a list of antiquotations. </p>\n</blockquote>\n<p>Amazing! I had looked for antiquotations in the Isabelle/Isar Reference<br>\nManual but somehow overlooked the part that talks about <code>\\&lt;^cite&gt;</code>.<br>\nStrangely enough, <code>\\&lt;^cite&gt;</code> doesn’t appear in the auto-completion list<br>\n(in Isabelle2018 at least).</p>\n<blockquote>\n<p>To figure out their arguments you can trawl the docs, grep the<br>\nIsabelle source code, or grep the AFP. Once you get to some steady-<br>\nstate the NEWS file is handy.</p>\n</blockquote>\n<p>Hmm, so far I had assumed that all antiquotations are documented in the<br>\nIsabelle/Isar Reference Manual, but apparently there are some that<br>\naren’t.</p>\n<blockquote>\n<blockquote>\n<p>Regarding LaTeX source code, I discovered that it is possible to<br>\nembed it directly into the contents of <code>text</code>, <code>section</code>, and such.<br>\nIs this intentional or is it just that it happens to work with the<br>\ncurrent Isabelle implementation?</p>\n</blockquote>\n<p>AFAIK this is what everyone has always done and will be doing for a<br>\nwhile yet. Makarius appears to be steadily adding more semi-formal<br>\nmarkup (? - I might be misusing that term) — \\&lt;^item&gt; being one thing<br>\nthat sticks in my mind, and the absence so far of a \\label{..}<br>\nreplacement.</p>\n</blockquote>\n<p>I really like this trend of having more and more markup for<br>\ndocumentation text.</p>\n<blockquote>\n<blockquote>\n<p>On the other hand, there is the <code>\\&lt;latex&gt;‹…›</code> construct, which<br>\ndoesn’t seem to be documented (I found it via the IDE’s<br>\ncompletion mechanism). Is this construct preferred over just<br>\nembedding LaTeX source code? Does it differ from plain embedding?</p>\n</blockquote>\n<p>I don’t know. Perhaps try to find uses of <code>\\&lt;latex&gt;</code> in the AFP or<br>\nHOL.</p>\n</blockquote>\n<p>There seems to be absolutely no occurrence of <code>\\&lt;latex&gt;</code> in the Isabelle<br>\nstandard library.</p>\n<blockquote>\n<p>I wonder why you found this construct but not the <code>cite</code><br>\nantiquotation. Perhaps that would be useful feedback on feature<br>\ndiscovery / the utility of the documentation.</p>\n</blockquote>\n<p>I found <code>\\&lt;latex&gt;</code> only by accident in the completion pop-up window when<br>\nlooking for something else. As I mentioned above, <code>\\&lt;^cite&gt;</code> doesn’t<br>\nappear in the completion list, and the list of antiquotations in the<br>\nIsabelle/Isar Reference Manual is incomplete.</p>\n<blockquote>\n<p>cheers,<br>\npeter</p>\n</blockquote>\n<p>All the best,<br>\nWolfgang</p>",
        "id": 294759988,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661199106
    },
    {
        "content": "<p>From: Peter Gammie &lt;<a href=\"mailto:peteg42@gmail.com\">peteg42@gmail.com</a>&gt;<br>\nWolfgang,</p>\n<p>I don’t know what the state of the art is, or where documentation things are headed, but I’ll try to give you some pointers anyway.</p>\n<blockquote>\n<p>On 12 Jun 2019, at 05:13, Wolfgang Jeltsch &lt;<a href=\"mailto:wolfgang-it@jeltsch.info\">wolfgang-it@jeltsch.info</a>&gt; wrote:</p>\n<p>What is the recommended way of embedding non-ASCII characters in<br>\nordinary text (headlines and paragraph contents)? In actual Isabelle<br>\ncode, I have access to the “infinite number of non-ASCII symbols” but<br>\nnot in ordinary text as far as I can see.</p>\n</blockquote>\n<p>The Isabelle docs suggest that UTF-8 is OK in these contexts. See (I think) the Isabelle/jEdit manual.</p>\n<blockquote>\n<p>I know that I can embed LaTeX source code that produces the desired<br>\nsymbols, but that seems too low-level to me. Is there a way to enter<br>\ncharacters like no-break spaces and proper quotation marks (“ and ”)<br>\ndirectly?</p>\n</blockquote>\n<p>I don’t know anything about entering these characters. I’d suggest you use your favourite editor on the thy file directly. I get the impression that modern LaTeX can eat UTF8 OK.</p>\n<blockquote>\n<p>Another thing are structures that aren’t currently supported by<br>\nIsabelle’s markup language. In particular I wonder how to properly embed<br>\ncitations. Sure, I can use LaTeX source code again, but I’m wondering<br>\nwhether it’s also possible to have an Isabelle construct, perhaps user-<br>\ndefined, like <code>\\&lt;cite&gt;‹…›</code>.</p>\n</blockquote>\n<p>There is a <code>cite</code> antiquotation. Try completing on <code>print_</code> in Isabelle/jEdit. One of those will give you a list of antiquotations. To figure out their arguments you can trawl the docs, grep the Isabelle source code, or grep the AFP. Once you get to some steady-state the NEWS file is handy.</p>\n<p>Here’s an example: @{cite [cite_macro=citet] \"Winskel:1993”}. Note that <code>citet</code> is a LaTeX macro — in this case a natbib one.</p>\n<p>It seems that loading the corresponding BibTeX file into Isabelle/jEdit enables hyperlinks.</p>\n<blockquote>\n<p>Regarding LaTeX source code, I discovered that it is possible to embed<br>\nit directly into the contents of <code>text</code>, <code>section</code>, and such. Is this<br>\nintentional or is it just that it happens to work with the current<br>\nIsabelle implementation?</p>\n</blockquote>\n<p>AFAIK this is what everyone has always done and will be doing for a while yet. Makarius appears to be steadily adding more semi-formal markup (? - I might be misusing that term) — \\&lt;^item&gt; being one thing that sticks in my mind, and the absence so far of a \\label{..} replacement.</p>\n<blockquote>\n<p>On the other hand, there is the <code>\\&lt;latex&gt;‹…›</code><br>\nconstruct, which doesn’t seem to be documented (I found it via the IDE’s<br>\ncompletion mechanism). Is this construct preferred over just embedding<br>\nLaTeX source code? Does it differ from plain embedding?</p>\n</blockquote>\n<p>I don’t know. Perhaps try to find uses of <code>\\&lt;latex&gt;</code> in the AFP or HOL. Historically there were things like <code>text_raw</code> that suppressed the default Isabelle armour. See e.g. the possibly-obsolete <a href=\"https://isabelle.in.tum.de/community/Generate_TeX_Snippets\">https://isabelle.in.tum.de/community/Generate_TeX_Snippets</a></p>\n<p>I wonder why you found this construct but not the <code>cite</code> antiquotation. Perhaps that would be useful feedback on feature discovery / the utility of the documentation.</p>\n<p>cheers,<br>\npeter</p>",
        "id": 294760007,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661199116
    },
    {
        "content": "<p>From: Peter Gammie &lt;<a href=\"mailto:peteg42@gmail.com\">peteg42@gmail.com</a>&gt;<br>\nWolfgang,</p>\n<blockquote>\n<p>On 5 Jul 2019, at 03:07, Wolfgang Jeltsch &lt;<a href=\"mailto:wolfgang-it@jeltsch.info\">wolfgang-it@jeltsch.info</a>&gt; wrote:</p>\n<p>Hmm, when I enter a non-ASCII character into an Isabelle/jEdit buffer, I<br>\ncannot be sure that it will make it into the file in UTF-8-encoded form<br>\nwhen saving. I think it works in practice for symbols like “ and ”.<br>\nHowever, if I enter the Greek letter γ, for example, it will be saved to<br>\nthe file as <code>\\&lt;gamma&gt;</code>. If it appears in documentation text, outside of<br>\nactual Isabelle code, this <code>\\&lt;gamma&gt;</code> will end up verbatim in the<br>\ngenerated LaTeX source code, causing an error.</p>\n</blockquote>\n<p>Err, right. So I think you’re supposed to say @{text “\\&lt;gamma&gt;”} or even better, use @{const “…”} or @{term “…”} etc. for symbols that Isabelle knows about. There’s a list in the Isabelle repo/distribution <code>etc/symbols</code>.</p>\n<p>Yes, you’d probably struggle to write Greek words in a <code>text</code> block.</p>\n<blockquote>\n<p>So apparently it would work to place a symbol like “ or ” into the<br>\ndocumentation part of an Isabelle file and having it transferred to the<br>\ngenerated LaTeX file and finally processed correctly by LaTeX using some<br>\nsort of LaTeX UTF-8 support. However, this would work only because<br>\nsymbols like “ and ” don’t have an Isabelle encoding in the form <code>\\&lt;…&gt;</code>.<br>\nAs soon as they’d get one, we would run into the same problem as with<br>\nthe γ above.</p>\n</blockquote>\n<p>Indeed. You could define your own Isabelle symbols for these, but I’m not sure it’ll look great. How about the standard LaTeX `` ‘'?</p>\n<p>I think it’s clear what needs doing from the <code>symbols</code> file and the LaTeX errors you’ll get.</p>\n<blockquote>\n<p>Hmm, so far I had assumed that all antiquotations are documented in the<br>\nIsabelle/Isar Reference Manual, but apparently there are some that<br>\naren’t.</p>\n</blockquote>\n<p>I’d get used to spelunking the source code. You can try in Isabelle/jEdit (try CMD/Ctrl-click on promising things) and follow it up with grep…</p>\n<p>cheers,<br>\npeter</p>",
        "id": 294760091,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661199143
    },
    {
        "content": "<p>From: Wolfgang Jeltsch &lt;<a href=\"mailto:wolfgang-it@jeltsch.info\">wolfgang-it@jeltsch.info</a>&gt;<br>\nAm Samstag, den 06.07.2019, 20:32 +1000 schrieb Peter Gammie:</p>\n<blockquote>\n<blockquote>\n<p>Hmm, when I enter a non-ASCII character into an Isabelle/jEdit<br>\nbuffer, I cannot be sure that it will make it into the file in<br>\nUTF-8-encoded form when saving. I think it works in practice for<br>\nsymbols like “ and ”. However, if I enter the Greek letter γ, for<br>\nexample, it will be saved to the file as <code>\\&lt;gamma&gt;</code>. If it appears<br>\nin documentation text, outside of actual Isabelle code, this<br>\n<code>\\&lt;gamma&gt;</code> will end up verbatim in the generated LaTeX source code,<br>\ncausing an error.</p>\n</blockquote>\n<p>Err, right. So I think you’re supposed to say @{text “\\&lt;gamma&gt;”} or<br>\neven better, use @{const “…”} or @{term “…”} etc. for symbols that<br>\nIsabelle knows about.</p>\n</blockquote>\n<p>That would be correct only when these symbols are Isabelle identifiers.<br>\nFor writing something like “π-calculus” or “η-expansion”, it would be<br>\nsemantically incorrect (although it would produce the correct output).</p>\n<blockquote>\n<blockquote>\n<p>So apparently it would work to place a symbol like “ or ” into the<br>\ndocumentation part of an Isabelle file and having it transferred to<br>\nthe generated LaTeX file and finally processed correctly by LaTeX<br>\nusing some sort of LaTeX UTF-8 support. However, this would work<br>\nonly because symbols like “ and ” don’t have an Isabelle encoding in<br>\nthe form <code>\\&lt;…&gt;</code>. As soon as they’d get one, we would run into the<br>\nsame problem as with the γ above.</p>\n</blockquote>\n<p>Indeed. You could define your own Isabelle symbols for these, but I’m<br>\nnot sure it’ll look great. How about the standard LaTeX `` ''?</p>\n</blockquote>\n<p>I think that’s the way to go for now.</p>\n<p>So my conclusion is:</p>\n<p>* Use antiquotations whenever you embed Isabelle code into the<br>\n    documentation text.</p>\n<p>* Use antiquotations for markup (for example, for lists and URLs).</p>\n<p>* Use LaTeX source code otherwise, particularly for non-ASCII symbols<br>\n    in text (for example, ~ for no-break spaces and '' for ”).</p>\n<p>All the best,<br>\nWolfgang</p>",
        "id": 294760108,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661199149
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 04/07/2019 19:07, Wolfgang Jeltsch wrote:</p>\n<blockquote>\n<p>Hmm, when I enter a non-ASCII character into an Isabelle/jEdit buffer, I<br>\ncannot be sure that it will make it into the file in UTF-8-encoded form<br>\nwhen saving. I think it works in practice for symbols like “ and ”.<br>\nHowever, if I enter the Greek letter γ, for example, it will be saved to<br>\nthe file as <code>\\&lt;gamma&gt;</code>. If it appears in documentation text, outside of<br>\nactual Isabelle code, this <code>\\&lt;gamma&gt;</code> will end up verbatim in the<br>\ngenerated LaTeX source code, causing an error.</p>\n<p>So apparently it would work to place a symbol like “ or ” into the<br>\ndocumentation part of an Isabelle file and having it transferred to the<br>\ngenerated LaTeX file and finally processed correctly by LaTeX using some<br>\nsort of LaTeX UTF-8 support. However, this would work only because<br>\nsymbols like “ and ” don’t have an Isabelle encoding in the form <code>\\&lt;…&gt;</code>.<br>\nAs soon as they’d get one, we would run into the same problem as with<br>\nthe γ above.</p>\n</blockquote>\n<p>(I am rather late on this thread, and most things have been answered<br>\nalready. Here are just a few side-remarks.)</p>\n<p>A quick hypersearch (not grep) over $ISABELLE_HOME/src/Doc for<br>\n\"utf|unicode\" as insensitive regexp reveals the following explanation in<br>\nthe Isabelle/jEdit manual:</p>\n<p>The appendix of @{cite \"isabelle-isar-ref\"} gives an overview of the<br>\n  standard interpretation of finitely many symbols from the infinite<br>\n  collection. Uninterpreted symbols are displayed literally, e.g.\\<br>\n  ``▩‹\\&lt;foobar&gt;›''. Overlap of Unicode characters used in symbol<br>\n  interpretation with informal ones (which might appear e.g.\\ in comments)<br>\n  needs to be avoided. Raw Unicode characters within prover source files<br>\n  should be restricted to informal parts, e.g.\\ to write text in non-latin<br>\n  alphabets in comments.</p>\n<p>The correct conclusion has already been drawn on this thread: do not<br>\nlean out of the window too far. Non-latin characters for Eurepean<br>\nlanguages (excluding Greek) are fine. Odd quotation or punctuation marks<br>\nare better avoided: they are somehow fragile and non-portable, even<br>\nwithout Isabelle symbol interpretation getting in the way. (Recall that<br>\n\"Unicode\" is not as universal and stable as its name might suggest.)</p>\n<blockquote>\n<blockquote>\n<p>There is a <code>cite</code> antiquotation. Try completing on <code>print_</code> in<br>\nIsabelle/jEdit. One of those will give you a list of antiquotations. </p>\n</blockquote>\n<p>Amazing! I had looked for antiquotations in the Isabelle/Isar Reference<br>\nManual but somehow overlooked the part that talks about <code>\\&lt;^cite&gt;</code>.<br>\nStrangely enough, <code>\\&lt;^cite&gt;</code> doesn’t appear in the auto-completion list<br>\n(in Isabelle2018 at least).</p>\n</blockquote>\n<p>I see \"cite\" in the index of isar-ref, and documentation on \\&lt;^latex&gt; in<br>\nsection \"3.3.5 Document comments\" -- both in current Isabelle2019 and<br>\nold Isabelle2018.</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>Regarding LaTeX source code, I discovered that it is possible to<br>\nembed it directly into the contents of <code>text</code>, <code>section</code>, and such.<br>\nIs this intentional or is it just that it happens to work with the<br>\ncurrent Isabelle implementation?</p>\n</blockquote>\n<p>AFAIK this is what everyone has always done and will be doing for a<br>\nwhile yet. Makarius appears to be steadily adding more semi-formal<br>\nmarkup (? - I might be misusing that term) — \\&lt;^item&gt; being one thing<br>\nthat sticks in my mind, and the absence so far of a \\label{..}<br>\nreplacement.</p>\n</blockquote>\n<p>I really like this trend of having more and more markup for<br>\ndocumentation text.</p>\n</blockquote>\n<p>Yes, the document source is becoming more an more formal. (Everything is<br>\nsomehow \"source text\" for different languages of Isabelle. There is no<br>\n\"code\", unless you want to call the input program text for LaTeX like that.)</p>\n<p>At some point there will be also an HTML backend to the document<br>\nlanguage, not just LaTeX. This means that hardcore LaTeX hacking might<br>\nno longer work uniformly, unless restricted to small snippets in<br>\n\\&lt;^latex&gt;‹…› (which could be rendered via KaTeX in HTML/CSS/JS). This is<br>\nstill a bit speculative, though: we are not there yet.</p>\n<blockquote>\n<p>I found <code>\\&lt;latex&gt;</code> only by accident in the completion pop-up window when<br>\nlooking for something else. As I mentioned above, <code>\\&lt;^cite&gt;</code> doesn’t<br>\nappear in the completion list, and the list of antiquotations in the<br>\nIsabelle/Isar Reference Manual is incomplete.</p>\n</blockquote>\n<p>Generally not that \\&lt;^NAME&gt; (control symbol) with a cartouche often<br>\nworks as replacement for old @{NAME ...}, but only if there is a single<br>\nargument that is a cartouche.</p>\n<p>The control symbol notation has turned out so convenient and popular,<br>\nthat I am tempted to discontinue the old form at some point in the<br>\nfuture. This requires to change the syntax of various older<br>\nantiquotations, notably @{cite ...}, @{thm ...}, @{lemma ...}. Almost<br>\neverything else is already in proper shape: @{typ ...}, @{term ...},<br>\n@{const_name ...}.</p>\n<p>Makarius</p>",
        "id": 294760661,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661199376
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 06/07/2019 12:32, Peter Gammie wrote:</p>\n<blockquote>\n<p>Err, right. So I think you’re supposed to say @{text “\\&lt;gamma&gt;”} or even better, use @{const “…”} or @{term “…”} etc. for symbols that Isabelle knows about. There’s a list in the Isabelle repo/distribution <code>etc/symbols</code>.</p>\n</blockquote>\n<p>The standard way to typeset formal text (without checking) inside<br>\ninformal document source is just a cartouche, e.g. ‹α›. That is a short<br>\nform for \\&lt;^cartouche&gt; with a single cartouche argument, it abbreviates<br>\n@{cartouche ...}, which in turn is an alias for the older @{text ...}.</p>\n<p>As a general principle, each embedded language in Isabelle that uses<br>\nantiquotations as \"one shot free\" for such an implicit cartouche<br>\noperator. For example, the generated source in<br>\n$ISABELLE_HOME/src/Tools/Haskell uses that to refer to an ML expression<br>\n(of type string) that is meant to be inlined into the generated Haskell<br>\nsource. e.g. ‹Markup.nameN›.</p>\n<blockquote>\n<p>Yes, you’d probably struggle to write Greek words in a <code>text</code> block.</p>\n</blockquote>\n<p>Yes, this is because Unicode is a bit fragile: there are official math<br>\ngreek slots, but using them is too ambitious. It is outside the 16-bit<br>\nrange of UTF-16 (requiring surrogates that often cause problems). It<br>\nalso means you would hardly ever see the correct glyphs outside the<br>\nIsabelle font context (e.g. in a mail client or on Stackoverflow).</p>\n<p>It is a concession to quasi-portability to trade greek text for greek as<br>\nmathematical symbols.</p>\n<p>Makarius</p>",
        "id": 294760681,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661199388
    },
    {
        "content": "<p>From: Wolfgang Jeltsch &lt;<a href=\"mailto:wolfgang-it@jeltsch.info\">wolfgang-it@jeltsch.info</a>&gt;<br>\nThis snippet of an Isabelle comment reminds me of another question I<br>\nwanted to ask: Is my assumption correct that a backslash followed by<br>\neither a space or a newline with optionally some spaces afterwards is<br>\nIsabelle’s representation of a no-break space and thus translated to a<br>\ntilde when producing a LaTeX file?</p>\n<p>All the best,<br>\nWolfgang</p>",
        "id": 294760691,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661199400
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe Isabelle document source language merely uses plain (La)TeX<br>\nconventions here: backslash-space and tilde occur like that in the<br>\ngenerated .tex output, their meaning is defined by Knuth and Lamport.<br>\n(You can use option isabelle build -o document_output=output to see the<br>\nresult in the \"output\" directory relative to the session.)</p>\n<p>Whenever the update of the Isabelle document preparation system to<br>\nHTML/CSS/JS happens, it will interpret these special sequences in the<br>\nsame manner, i.e. as some HTML non-breaking space.</p>\n<p>In source text you should refrain from using Unicode space variations:<br>\nit is just too confusing / fragile / non-portable.</p>\n<p>Makarius</p>",
        "id": 294760703,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661199406
    },
    {
        "content": "<p>From: Wolfgang Jeltsch &lt;<a href=\"mailto:wolfgang-it@jeltsch.info\">wolfgang-it@jeltsch.info</a>&gt;<br>\nSo the backslash–tilde combination is not that Markdown extension that<br>\nmeans a no-break space but the good old LaTeX command. Well, as a LaTeX<br>\ncommand it only means an ordinary space; so for getting a no-break space<br>\nI should use the tilde then.</p>\n<p>All the best,<br>\nWolfgang</p>",
        "id": 294760714,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661199413
    }
]