[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nHi,</p>\n<p>the order of serialization of \"code_printing code_module\" seems to be<br>\ndocumented nowhere. The implementation seems to order the modules<br>\nalphabetically by name.</p>\n<p>My current application relies on the ordering of serialization, as<br>\ncode_modules depend on other code_modules. Thus, two questions:</p>\n<p>1) What is the ordering? Can I rely on alphabetical ordering?<br>\n2) Can I influence the ordering by somehow declaring the dependencies<br>\nbetween the code_modules?</p>",
        "id": 294256658,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912839
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Peter,</p>\n<blockquote>\n<p>My current application relies on the ordering of serialization, as<br>\ncode_modules depend on other code_modules. Thus, two questions:</p>\n<p>1) What is the ordering? Can I rely on alphabetical ordering?</p>\n</blockquote>\n<p>It has never been specified; all kind of dependency management while<br>\nprinting code relies on Graph.strong_conn, and I guess it falls back on<br>\nthe critical order of strings when now other constraints are involved.</p>\n<blockquote>\n<p>2) Can I influence the ordering by somehow declaring the dependencies<br>\nbetween the code_modules?</p>\n</blockquote>\n<p>There is currently the possibility to make code_modules depend on the<br>\npresence of certain constants, and maybe a slight extension could also<br>\ndependencies of modules.  I will think about it.</p>\n<p>Cheers,<br>\n    Florian</p>",
        "id": 294257325,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660913041
    }
]