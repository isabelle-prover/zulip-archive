[
    {
        "content": "<p>From: Walther Neuper &lt;<a href=\"mailto:wneuper@ist.tugraz.at\">wneuper@ist.tugraz.at</a>&gt;<br>\nLars,</p>\n<p>Thanks for private mail shortening my struggle with git. My response <br>\ntimes are still slow, because I'm busy with studies on scala and <br>\nrespective project setup.</p>\n<p>These studies became necessary because my trials with new operations in <br>\nlibisabelle typecheck correctly, see</p>\n<p><a href=\"https://github.com/wneuper/libisabelle/commit/98206ed12423e7819f4df7f77e571c1450a6df71\">https://github.com/wneuper/libisabelle/commit/98206ed12423e7819f4df7f77e571c1450a6df71</a></p>\n<p>but throw exceptions as soon as I try to return XML (test_2 and <br>\nIterator, the latter not reached):</p>\n<p>wneuper@ProBook:~/proto4/libisabelle$ java -cp full/target/scala-<br>\n2.11/libisabelle-full.jar Hello_PIDE<br>\n    Hello world<br>\n    --- test_1:<br>\n    111<br>\n    --- test_2:<br>\n    ###tracing val string: ts = toString...???<br>\n    Exception in thread \"main\" isabelle.XML$XML_Body:<br>\n     at isabelle.XML$Decode$$anonfun$9.apply(xml.scala:333)<br>\n     at isabelle.XML$Decode$$anonfun$9.apply(xml.scala:328)<br>\n     at edu.tum.cs.isabelle.japi.JSystem.sendCommand(System.scala:36)<br>\n     at Hello_PIDE.main(Hello_PIDE.java:13)<br>\n    ^C<br>\n    wneuper@ProBook:~/proto4/libisabelle$</p>\n<p>My attempts with debugging are stuck presently:</p>\n<p>(1) using the \"more capable sbt\" with tracing added to the scala code<br>\nwould imho require a separate project for trials; after including</p>\n<p>full/target/scala-2.11/libisabelle-full.jar</p>\n<p>as a \"Linked Resource\" in the build path all trials with \"import <br>\nXML.Encode._\" etc (ERROR \"not found object XML\") fail.</p>\n<p>(2) replacing the \"more capable sbt\" by code from the standard Scala <br>\nBuild Tool for setup of a project in the Scala IDE was only partially <br>\nsuccessful.<br>\nLooking at <a href=\"https://github.com/larsrh/libisabelle\">https://github.com/larsrh/libisabelle</a> shows me, that your <br>\nwork started without the \"more capable sbt\"; hints for the respective <br>\nproject setup would be appreciated.</p>\n<p>I'd rely on your choice, whether (1) or (2) is simpler to continue with.<br>\nIn case of (1) a hint of how to import,<br>\nin case of (2) hints about setup of the Scala project ...</p>\n<p>... both again out of scope of the mailing list, sorry</p>\n<p>Cheers,<br>\nWalther</p>",
        "id": 294326172,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660928600
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;</p>\n<blockquote>\n<p>but throw exceptions as soon as I try to return XML (test_2 and<br>\nIterator, the latter not reached):</p>\n</blockquote>\n<p>The reason why that fails is that by default, the 'sendCommand' function<br>\ntries to parse Isabelle's response as string. If you want the raw XML<br>\nblock back, use 'sendCommandXML', which converts neither input nor output.</p>\n<p>I'm not sure how convenient it would be to produce XML trees in Java. In<br>\nScala, it would look like this:</p>\n<p>XML.Encode.int(222)</p>\n<p>(This is completely symmetric to '<a href=\"http://XML.Decode.int\">XML.Decode.int</a>' in Isabelle/ML, which<br>\nyou're already using.)</p>\n<p>Shot in the dark for Java:</p>\n<p>isabelle.XML$.Encode$.int.apply(222);</p>\n<p>I may need to add some convenience functions to make that more visually<br>\npleasing.</p>\n<p>By the way, there should be no need to use 'XML.parse' in Isabelle/ML.<br>\nInstead, you can construct your response like this:</p>\n<p>XML.Elem ((\"CALCTREE\", []),<br>\n    [XML.Elem ((\"CALCID\", []), [XML.Text \"foo\"])])</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294326323,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660928643
    },
    {
        "content": "<p>From: Walther Neuper &lt;<a href=\"mailto:wneuper@ist.tugraz.at\">wneuper@ist.tugraz.at</a>&gt;</p>\n<blockquote>\n<blockquote>\n<p><a href=\"https://github.com/wneuper/libisabelle\">https://github.com/wneuper/libisabelle</a>, which causes an error.<br>\nThe invocation of 'sendCommand' looks correct to me.<br>\nGood to hear of \"looks correct\", but there is need for debugging ...</p>\n</blockquote>\n</blockquote>\n<p>wneuper@ProBook:~/proto4/libisabelle$ ./sbt full/assembly<br>\n[info] Loading project definition from <br>\n/home/wneuper/proto4/libisabelle/project<br>\n[info] Set current project to root (in build <br>\nfile:/home/wneuper/proto4/libisabelle/)<br>\n[info] Compiling 3 Scala sources to <br>\n/home/wneuper/proto4/libisabelle/libisabelle/target/scala-2.11/classes...<br>\n[error] <br>\n/home/wneuper/proto4/libisabelle/libisabelle/src/main/scala/System.scala:36: <br>\nUnmatched closing brace '}' ignored here<br>\n[error]     }<br>\n[error]     ^<br>\n[error] <br>\n/home/wneuper/proto4/libisabelle/libisabelle/src/main/scala/System.scala:39: <br>\nexpected start of definition<br>\n[error]   private def mkPhaseListener(session: Session, phase: <br>\nSession.Phase)(implicit ec: ExecutionContext): Future[Unit] = {<br>\n[error]           ^<br>\n[error] <br>\n/home/wneuper/proto4/libisabelle/libisabelle/src/main/scala/System.scala:51: <br>\nexpected start of definition<br>\n[error]   private def sendOptions(session: Session, options: <br>\nOptions)(implicit ec: ExecutionContext): Future[Unit] =<br>\n[error]           ^<br>\n[error] <br>\n/home/wneuper/proto4/libisabelle/libisabelle/src/main/scala/System.scala:56: <br>\nexpected start of definition<br>\n[error]   private def startSession(path: Option[Path], sessionName: <br>\nString)(implicit ec: ExecutionContext): Future[Session] = {<br>\n[error]           ^<br>\n[error] <br>\n/home/wneuper/proto4/libisabelle/libisabelle/src/main/scala/System.scala:74: <br>\neof expected but '}' found.<br>\n[error] }<br>\n[error] ^<br>\n[error] 5 errors found<br>\n[error] (libisabelle/compile:compile) Compilation failed<br>\n[error] Total time: 6 s, completed 19-Feb-2015 1:48:19 PM<br>\nwneuper@ProBook:~/proto4/libisabelle$</p>\n<p>... where this \"more capable sbt\" seems not the right tool: the error</p>\n<blockquote>\n<p>System.scala:36: Unmatched closing brace '}' </p>\n</blockquote>\n<p>cannot been cause System.scala:36 has not been changed. So, what could <br>\nbe the error and how can I find another one myself next time ?</p>\n<p>Walther</p>\n<p>PS: And thank you for confirmation, what I hoped for:</p>\n<blockquote>\n<blockquote>\n<p>How do you organize this kind of project involving Java, Scala and<br>\nIsabelle/ML ?<br>\n... for 'libisabelle' specifically I would recommend to just treat the<br>\ngenerated JAR file ('libisabelle-full.jar') as \"just another dependency\"<br>\nand drop it into some suitable folder of your usual Isac project<br>\ndirectory. There's no need to combine everything together into one big<br>\nproject. Ideally, you wouldn't even change the source code of 'libisabelle'.</p>\n</blockquote>\n</blockquote>",
        "id": 294328528,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660929440
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;</p>\n<blockquote>\n<p>cannot been cause System.scala:36 has not been changed. So, what could<br>\nbe the error and how can I find another one myself next time ?</p>\n</blockquote>\n<p>I introduced that problem. Looks like I made a faulty commit which I<br>\ndidn't test before pushing.</p>\n<p>I corrected that error in 6949b35.</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294328562,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660929452
    }
]