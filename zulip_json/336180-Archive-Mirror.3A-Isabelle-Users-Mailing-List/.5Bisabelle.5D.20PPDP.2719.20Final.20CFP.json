[
    {
        "content": "<p>From: Ekaterina Komendantskaya &lt;<a href=\"mailto:komendantskaya@gmail.com\">komendantskaya@gmail.com</a>&gt;<br>\nFINAL CALL FOR PAPERS -- PPDP 2019</p>\n<p>21st International Symposium on</p>\n<p>Principles and Practice of Declarative Programming</p>\n<p>7–9 October 2019, Porto, Portugal</p>\n<p>Collocated with FM'19</p>\n<p><a href=\"http://ppdp2019.macs.hw.ac.uk\">http://ppdp2019.macs.hw.ac.uk</a></p>\n<p>======================================================================</p>\n<p>Important Dates</p>\n<hr>\n<p>Title and abstract registration 26 April 2019 (AoE)</p>\n<p>Paper submission 3 May 2019 (AoE)</p>\n<p>Rebuttal period (48 hours) 3 June 2019 (AoE)</p>\n<p>Author notification 14 June 2019</p>\n<p>Final paper version 15 July 2019</p>\n<p>Conference 7–9 October 2019</p>\n<p>About PPDP</p>\n<hr>\n<p>The PPDP 2019 symposium brings together researchers from the declarative</p>\n<p>programming communities, including those working in the functional, logic,</p>\n<p>answer-set, and constraint handling programming paradigms. The goal is to</p>\n<p>stimulate research in the use of logical formalisms and methods for<br>\nanalyzing,</p>\n<p>performing, specifying, and reasoning about computations, including<br>\nmechanisms</p>\n<p>for concurrency, security, static analysis, and verification.</p>\n<p>Invited Speakers</p>\n<hr>\n<p>Amal Ahmed Northeastern University, USA</p>\n<p>Title: TBA</p>\n<p>Naoki Kobayashi The University of Tokyo, Japan</p>\n<p>Title: 10 Years of the Higher-Order Model Checking Project</p>\n<p>Scope</p>\n<hr>\n<p>Submissions are invited on all topics related to declarative programming,<br>\nfrom</p>\n<p>principles to practice, from foundations to applications. Topics of<br>\ninterest</p>\n<p>include, but are not limited to</p>\n<ul>\n<li>Language Design: domain-specific languages; interoperability;<br>\nconcurrency,</li>\n</ul>\n<p>parallelism and distribution; modules; probabilistic languages; functional</p>\n<p>languages; reactive languages; database languages; knowledge representation</p>\n<p>languages; languages with objects; language extensions for tabulation;<br>\nmetaprogramming.</p>\n<ul>\n<li>Implementations: abstract machines; interpreters; compilation;<br>\ncompile-time</li>\n</ul>\n<p>and run-time optimization; memory management.</p>\n<ul>\n<li>\n<p>Foundations: types; logical frameworks; monads and effects; semantics.</p>\n</li>\n<li>\n<p>Analysis and Transformation: partial evaluation; abstract interpretation;</p>\n</li>\n</ul>\n<p>control flow; data flow; information flow; termination analysis; resource</p>\n<p>analysis; type inference and type checking; verification; validation;</p>\n<p>debugging; testing.</p>\n<ul>\n<li>Tools and Applications: programming and proof environments; verification</li>\n</ul>\n<p>tools; case studies in proof assistants or interactive theorem provers;</p>\n<p>certification; novel applications of declarative programming inside and</p>\n<p>outside of CS; declarative programming pearls; practical experience reports</p>\n<p>and industrial application; education.</p>\n<p>For further information, please visit:</p>\n<p><a href=\"http://ppdp2019.macs.hw.ac.uk\">http://ppdp2019.macs.hw.ac.uk</a></p>",
        "id": 294755421,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661197258
    }
]