[
    {
        "content": "<p>From: li yongjian &lt;<a href=\"mailto:lyj238@gmail.com\">lyj238@gmail.com</a>&gt;<br>\nDear  Isabelle experts:<br>\n  Recently I meet a case study where I need:<br>\n  a parser that accepts a foreign text file and transforms it into a thy<br>\nfile and<br>\n  automatically generate some proofs.</p>\n<p>I want to know whether poly-ML system that writes Isabelle have some<br>\nsupport for writing a parser.<br>\n   I have read Larry's ML-book, and after reading the last two chapters,  I<br>\nthink that I can create a parser using suppot from Isabelle system.</p>\n<p>I know that Objcaml has a support for YACC to generate a parse, and I<br>\nprefer this Yacc approach. I want to know whther Poly ML supports YACC to<br>\ncreate a parser?</p>\n<p>yongjian Li</p>",
        "id": 294259829,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660913961
    },
    {
        "content": "<p>From: li yongjian &lt;<a href=\"mailto:lyj238@gmail.com\">lyj238@gmail.com</a>&gt;<br>\nDear  Isabelle experts:<br>\n  Recently I meet a case study where I need:<br>\n  a parser that accepts a foreign text file and transforms it into a thy<br>\nfile and<br>\n  automatically generate some proofs.</p>\n<p>I want to know whether poly-ML system that writes Isabelle have some<br>\nsupport for writing a parser.<br>\n   I have read Larry's ML-book, and after reading the last two chapters,  I<br>\nthink that I can create a parser using suppot from Isabelle system.</p>\n<p>I know that Objcaml has a support for YACC to generate a parse, and I<br>\nprefer this Yacc approach. I want to know whther Poly ML supports YACC to<br>\ncreate a parser?</p>\n<p>yongjian Li</p>",
        "id": 294259845,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660913967
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nThe answer is yes.</p>\n<p>I believe there all the information that you need can be found on this page:<br>\n<a href=\"http://www.tbrk.org/software/poly_smlnj-lib.html\">http://www.tbrk.org/software/poly_smlnj-lib.html</a></p>\n<p>It is not entirely trivial to set up.</p>\n<p>Larry Paulson</p>",
        "id": 294259860,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660913974
    },
    {
        "content": "<p>From: Michael Norrish &lt;<a href=\"mailto:Michael.Norrish@nicta.com.au\">Michael.Norrish@nicta.com.au</a>&gt;<br>\nThe C Parser that I wrote uses exactly this approach and uses mlyacc and mllex. In fact, the C parser distribution includes code for building those tools.</p>\n<p>Michael</p>\n<hr>\n<p>The information in this e-mail may be confidential and subject to legal professional privilege and/or copyright. National ICT Australia Limited accepts no liability for any damage caused by this email or its attachments.</p>",
        "id": 294259873,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660913980
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe standard way to implement parsers in Isabelle/ML is via parser <br>\ncombinators, see the ML modules Scan and Parse, and applications of the <br>\nsame in the sources (e.g. using hypersearch in Isabelle/jEdit).</p>\n<p>Note that you normally do not generate theory sources, but produce theory <br>\ncontent directly in ML. You can take $ISABELLE_HOME/src/HOL/SPARK as a <br>\nworked example for this approach.</p>\n<p>People have also managed to use mllex and mlyacc, although that is rare <br>\nthese days.  E.g. see $ISABELLE_HOME/src/HOL/TPTP.</p>\n<p>Makarius</p>",
        "id": 294259889,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660913986
    }
]