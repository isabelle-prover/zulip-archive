[
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi again,</p>\n<p>an issue concerning paths in Isabelle/ML, as observed in Isabelle2018:<br>\nPath.basic accepts \"..\" and \".\":</p>\n<p>ML_val ‹Path.basic \".\"›<br>\n    ML_val ‹Path.basic \"..\" = Path.parent› ~&gt; false</p>\n<p>As far as I understand the data model, ‹Path.basic \".\"› should be<br>\nrejected similar to ‹Path.basic \"\"›, and ‹Path.parent› would be the<br>\ncorrect way to refert to the parent directory.</p>\n<p>Cheers,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/jjHiMALq5jZCVJWhKUb4XulO/signature.asc\">signature.asc</a></p>",
        "id": 294747687,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661194195
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThat is indeed a bit odd: I will revisite this and tighten the<br>\nprogramming interface.</p>\n<p>Whenever I see Path.basic, I ask myself if it would be better to use<br>\ngeneral Path.explode instead, just for simplicity and uniformity. Did<br>\nyou have an application where the implicit \"basicness check\" of<br>\nPath.basic was required?</p>\n<p>Moreover, users have occasionally run into problems by using odd names<br>\nfor formal items that later become file-system paths, notably theory and<br>\nsession names. In Isabelle2018 I have introduced the concept of a<br>\n\"system_name\" (with predicates/parsers in Isabelle/ML and<br>\nIsabelle/Scala). Thus tools can make their user-facing syntax a bit more<br>\nrobust.</p>\n<p>Maybe I should also tighten this to exclude the special name \"aux\",<br>\n\"con\", \"nul\" for Windows file systems, see also<br>\n<a href=\"https://docs.microsoft.com/en-us/windows/desktop/fileio/naming-a-file\">https://docs.microsoft.com/en-us/windows/desktop/fileio/naming-a-file</a></p>\n<p>Makarius</p>",
        "id": 294747771,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661194213
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nThe strictness of Path.basic is some kind of sanity check: when<br>\ncomposing a path of various sources, you can assert that no accidental<br>\n\"..\" or \"/\" will smash your implicit assumptions about the resulting tree.</p>\n<p>Florian<br>\n<a href=\"/user_uploads/14278/EUhPp_tZsLkgeTSzN1bOryg5/signature.asc\">signature.asc</a></p>",
        "id": 294747800,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661194225
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI have done that for the next release -- presumably Isabelle2019 (June<br>\n2019). The relevant change is Isabelle/415dc92050a6.</p>\n<p>Moreover I have tightened Path.T and system_name according to<br>\n<a href=\"https://docs.microsoft.com/en-us/windows/desktop/fileio/naming-a-file\">https://docs.microsoft.com/en-us/windows/desktop/fileio/naming-a-file</a><br>\n(see Isabelle/57ff523d9008 and Isabelle/adb52af5ba55).</p>\n<p>Makarius</p>",
        "id": 294748406,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661194447
    }
]