[
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nIn 96015aecfeba I have addressed this by a dedicated simproc for<br>\nequality on characters.  This should be possible to be ported into a<br>\nseparate theory for Isabelle2016-1.</p>\n<p>From the same changeset it can be seen that other tools reyling on<br>\nconcrete string values like state spaces use to provide their own proof<br>\ndevices for that.</p>\n<p>The deeper reason behind this seems to be that simp rules tailored for<br>\nabstract symbolic reasoning are often not suitable for calculating with<br>\nconcrete values and vice versa.</p>\n<p>Unfortunately the most elegant solution, a simproc or simp rules for<br>\ncongruences »num1 mod num3 = num1 mod num2« did not work out since there<br>\nare two many other rules and simprocs interfering with mod.</p>\n<p>Cheers,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/mNZPw54Tw5R281bFlNYkH_-i/signature.asc\">signature.asc</a></p>",
        "id": 294701588,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661179323
    },
    {
        "content": "<p>From: <a href=\"mailto:Thomas.Sewell@data61.csiro.au\">Thomas.Sewell@data61.csiro.au</a><br>\nSorry I haven't been around for this discussion.</p>\n<p>Thanks Florian for the patch. We've also found a similar fix, we'll <br>\nadopt one or<br>\nthe other locally until the next release.</p>\n<p>About Makarius' question:</p>\n<p>Since such<br>\npost-release problems of users have happened routinely in recent years,<br>\nI would like to know what can be done about it.</p>\n<p>It's worth thinking about this. Ideally we'd see releases go out with no <br>\nproblems<br>\nremaining in them.</p>\n<p>However, the only strategy that has been considered yet is to wait long <br>\nenough<br>\nduring the pre-release phase for all \"serious users\" to update their <br>\nproofs. I don't<br>\nthink we're going to be able to do that. On this occasion, we had a <br>\nvolunteer, and the<br>\nINCOMPATIBILITY level wasn't so bad (the changes to supremum sets being <br>\nthe worst<br>\noffenders), and still, we finished the update process shortly after the <br>\nrelease became<br>\nofficial. This was a good release. In previous releases we've been <br>\npreoccupied with<br>\nother things, and have stayed on the previous Isabelle version for months.</p>\n<p>Another possible strategy would be to split Isabelle releases between <br>\ncompatible<br>\nreleases (new features, PIDE extensions etc) and incompatible releases<br>\n(INCOMPATIBILITY allowed). \"Serious users\" could then do push-button <br>\ntests and<br>\noffer feedback on all compatible releases. This is known to be a reasonable<br>\nstrategy, since it's what pretty much every mature system out there does,<br>\nbut it's probably too much to hope that Isabelle development would change<br>\nso substantially.</p>\n<p>We can also suggest particular test cases that match the kinds of <br>\nproblems we<br>\nhave locally. For instance, it's obvious that we could stress-test <br>\nstring comparisons<br>\nwith a fairly short theory, and contribute that as a test case. Likewise <br>\nour problems<br>\nwith large records. But it's a lot of work to discover an essential test <br>\ncase.<br>\nFor this release, it took three of us most of a day to<br>\nnarrow down the performance problems we were seeing from polymorphic <br>\nconstants<br>\non C-types to the simple issue of string comparison.</p>\n<p>Anyway, if anyone else has any bright ideas how we can help, we'd be <br>\nhappy to.</p>\n<p>Cheers,<br>\n    Thomas.</p>",
        "id": 294701695,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661179352
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThis sounds like requiring 5-10 more manpower behind Isabelle<br>\ndevelopment and release process.</p>\n<p>Even just having \"patch levels\" with small amendments for published<br>\nreleases (as done for Coq), already requires significant extra time.</p>\n<p>Isabelle releases do not even have version numbers: every release is a<br>\nconsolidated state of ongoing linear development. In the past, the<br>\nconsolidation required 2-3 weeks, but we are now approaching 6-8 weeks<br>\n(with relatively little happening in that long time).</p>\n<p>Makarius</p>",
        "id": 294701794,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661179391
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nUsually there are a couple of weeks’ notice before the pre-release phase even starts… couldn’t at least some users choose that time to download the current development version to take a look at how it might affect their work?</p>\n<p>Larry Paulson</p>",
        "id": 294701874,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661179431
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe full schedule for the Isabelle2016-1 release is recorded here:<br>\n<a href=\"http://sketis.net/2016/release-candidates-for-isabelle2016-1\">http://sketis.net/2016/release-candidates-for-isabelle2016-1</a></p>\n<p>The informal snapshot Isabelle2016-1-RC0 was published 07-Oct-2016, i.e.<br>\n9.5 weeks before the final release (13-Dec-2016). RC0 is really just an<br>\ninformal preview.</p>\n<p>The point to hop on a new release for professional users is RC1, or RC2<br>\nat the latest. There can be a tradeoff: getting on the train earlier<br>\ncould mean more work to figure out remaining problems of the release<br>\ncandidate, getting on the train tool late could mean that some<br>\ninconvenience have to remain in the release.</p>\n<p>My impression is that we've had again the second case several times:<br>\nnotable problems were discovered too late and there was no realistic<br>\nchange to revisit them.</p>\n<p>Makarius</p>",
        "id": 294701889,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661179437
    },
    {
        "content": "<p>From: <a href=\"mailto:Thomas.Sewell@data61.csiro.au\">Thomas.Sewell@data61.csiro.au</a><br>\nHello Isabelle users, developers.</p>\n<p>We've noticed a serious performance regression involving characters and <br>\nstrings in Isabelle-2016-1.</p>\n<p>This can be demonstrated as follows:</p>\n<p>lemma \"''ab'' ~= ''ba''\"<br>\n   using [[simp_trace]]<br>\n   by simp</p>\n<p>In earlier Isabelle versions, it takes a few dozen steps to prove this <br>\nrule. In 2016-1, the characters<br>\nare compared by expanding rule Char_eq_Char_iff which requires <br>\nnormalising \"k mod 256\" for<br>\nvarious k, which takes many many steps.</p>\n<p>One workaround we tested is to adjust the simpset to ensure that the <br>\ncode rules nat_of_char_code<br>\nand integer_of_char_simps are used, which solves the problem.</p>\n<p>The C typing framework used by the seL4 proofs, Cogent proofs, <br>\nAutoCorres etc, uses strings to<br>\nencode field names and type identifiers. The impact of this change is <br>\nbig enough to explode the<br>\ntime to parse seL4 into Isabelle by a factor of 4 or more. There are <br>\nalso some other string users<br>\naround.</p>\n<p>We're sorry we didn't notice how significant the impact was until after <br>\nthe release.</p>\n<p>For the moment we'll patch around this by adjusting the simpset at our <br>\nend. The Isabelle version<br>\nshould probably be adjusted as well though.</p>\n<p>Cheers,<br>\n     Thomas.</p>",
        "id": 294703555,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661179978
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nCan you explain what went wrong in the release process?</p>\n<p>The first release candidate on 01-Nov-2016, more than 6 weeks ago.</p>\n<p>Makarius</p>",
        "id": 294703611,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661179994
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nSorry, I've got this wrong.<br>\n<a href=\"http://sketis.net/2016/release-candidates-for-isabelle2016-1\">http://sketis.net/2016/release-candidates-for-isabelle2016-1</a> says:</p>\n<p>On 28-Oct-2016 the release candidate Isabelle2016-1-RC1 was published.<br>\nSerious testing by users is now required, to expose remaining problems.</p>\n<p>That was exactly 7 weeks ago -- a very long time. Since such<br>\npost-release problems of users have happened routinely in recent years,<br>\nI would like to know what can be done about it.</p>\n<p>Maybe we should offer some \"premium user\" program: Improvements of<br>\npublished releases are charged $$$.</p>\n<p>Makarius</p>",
        "id": 294703620,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661179996
    },
    {
        "content": "<p>From: <a href=\"mailto:Gerwin.Klein@data61.csiro.au\">Gerwin.Klein@data61.csiro.au</a></p>\n<blockquote>\n<p>On 17.12.2016, at 01:26, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n<p>On 16/12/16 14:55, Makarius wrote:</p>\n<p>On 16/12/16 05:54, <a href=\"mailto:Thomas.Sewell@data61.csiro.au\">Thomas.Sewell@data61.csiro.au</a> wrote:</p>\n<blockquote>\n<blockquote>\n<p>We're sorry we didn't notice how significant the impact was until after <br>\nthe release.</p>\n</blockquote>\n<p>Can you explain what went wrong in the release process?</p>\n<p>The first release candidate on 01-Nov-2016, more than 6 weeks ago.</p>\n</blockquote>\n<p>Sorry, I've got this wrong.<br>\n<a href=\"http://sketis.net/2016/release-candidates-for-isabelle2016-1\">http://sketis.net/2016/release-candidates-for-isabelle2016-1</a> says:</p>\n<p>On 28-Oct-2016 the release candidate Isabelle2016-1-RC1 was published.<br>\nSerious testing by users is now required, to expose remaining problems.</p>\n<p>That was exactly 7 weeks ago -- a very long time. Since such<br>\npost-release problems of users have happened routinely in recent years,<br>\nI would like to know what can be done about it.</p>\n</blockquote>\n<p>I don’t think there is much that can be done from the release side. 7 weeks is a good period for testing for “normal” users, but it is not a lot of time to update &gt; 500kloc of proof from one Isabelle release to another when there are too many other pressing things to do. We did manage to test functionality in time, but not performance, and that was mostly a function of what testing hardware we had available on our end (a particular bottleneck this year).</p>\n<blockquote>\n<p>Maybe we should offer some \"premium user\" program: Improvements of<br>\npublished releases are charged $$$.</p>\n</blockquote>\n<p>Might be an idea, but currently not necessary, at least not for us :-) It’s relatively easy to change things on our side, it would just have been nicer for the rest of the community if we had managed to find the problem earlier. Maybe nobody else needs that many string comparisons — the performance regression didn’t seem to show up in a major way in the AFP or distribution after all.</p>\n<p>Cheers,<br>\nGerwin</p>",
        "id": 294703712,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661180021
    }
]