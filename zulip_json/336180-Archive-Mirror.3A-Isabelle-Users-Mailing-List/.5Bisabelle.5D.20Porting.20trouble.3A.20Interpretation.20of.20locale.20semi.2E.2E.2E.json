[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt;<br>\nI'm currently converting theories from 2008 -&gt; 2009:</p>\n<p>I'm using the following definition of conc:<br>\nRegSet.conc_def: conc ?A ?B = {xs @ ys |xs ys. xs \\&lt;in&gt; ?A \\&lt;and&gt; ys<br>\n\\&lt;in&gt; ?B}</p>\n<p>Then I do:<br>\n  interpretation lc_monoid: monoid_mult \"{[]}\" conc [...]</p>\n<p>text {* Languages with concatenation (*) and union (+) form a semiring<br>\n    with 1-element @{term \"{[]}\"} and 0-element @{term \"{}\"}: *}<br>\n  interpretation regset_semiring: semiring_1 \"{[]}\" conc \"{}\" \"op \\&lt;union&gt;\"<br>\n    apply (unfold_locales)<br>\n    apply (auto simp add: conc_def)<br>\n    done</p>\n<p>And get the following error upon the \"done\" command, i.e. after (!) it<br>\ntold me \"No  subgoals\".</p>\n<p>*** Partially applied constant on left hand side of equation<br>\n*** \"semiring_1.of_nat {[]} {} op \\&lt;union&gt; ?n \\&lt;equiv&gt;<br>\nsemiring_1.of_nat_aux (\\&lt;lambda&gt;i. i \\&lt;union&gt; {[]}) ?n {}\"<br>\n*** At command \"done\".</p>\n<p>I do not know what this error message means, nor can I find any<br>\ndocumentation.<br>\nIn Isabelle2008, the proof worked well.</p>\n<p>Many thanks for any hints,<br>\n  Peter</p>",
        "id": 294076546,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660829130
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Peter,</p>\n<p>The fundamental problem is that interpretation still does not work as<br>\nexpected with definitions relative to locales.  In your case, the<br>\ndefinitions of of_nat and Nats relative to locale semiring_1 make<br>\nproblems.  There is a workaround pattern:</p>\n<p>definition<br>\n  \"conc A B = {xs @ ys | xs ys. xs \\&lt;in&gt; A \\&lt;and&gt; ys \\&lt;in&gt; B}\"</p>\n<p>interpretation lc_monoid: monoid_mult \"{[]}\" conc<br>\napply unfold_locales<br>\nsorry</p>\n<p>-- {* define explicit constants for the interpretation results of of_nat<br>\nand Nats *}</p>\n<p>definition<br>\n  \"regset_of_nat = semiring_1.of_nat {[]} {} (op \\&lt;union&gt;)\"</p>\n<p>definition<br>\n  \"regset_Nats = semiring_1.Nats {[]} {} (op \\&lt;union&gt;)\"</p>\n<p>interpretation regset_semiring: semiring_1 \"{[]}\" conc \"{}\" \"op<br>\n\\&lt;union&gt;\" where</p>\n<p>-- {* fold interpretation results of of_nat and Nats to the<br>\ncorresponding global constants *}</p>\n<p>\"semiring_1.of_nat {[]} {} (op \\&lt;union&gt;) = regset_of_nat\"<br>\n  and \"semiring_1.Nats {[]} {} (op \\&lt;union&gt;) = regset_Nats\"<br>\nproof -<br>\n  show \"semiring_1 {[]} conc {} (op \\&lt;union&gt;)\"<br>\n    by unfold_locales (auto simp add: conc_def)<br>\nqed (simp_all add: regset_of_nat_def regset_Nats_def)</p>\n<p>Ugly, but working;  we hope to repair this problem once and forall in<br>\nthe next Isabelle release.</p>\n<p>Hope this helps<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/T0LXVdAO4gAnlvbc-naiSHxo/signature.asc\">signature.asc</a></p>",
        "id": 294076569,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660829138
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThis is essentially an instance of the problem of \"tool compliance\" of <br>\nmorphisms, see also the hints about that in the paper by Chaieb &amp; Wenzel <br>\n<a href=\"http://www4.in.tum.de/~wenzelm/papers/context-methods.pdf\">http://www4.in.tum.de/~wenzelm/papers/context-methods.pdf</a></p>\n<p>Arbitrary data declarations that are included in a locale body (or class <br>\nor whatever) are subject to arbitrary transformations performed by other <br>\nmeans later (here locale interpretation).  While the primitive logic is <br>\nstable under such morphisms (theorems are mapped to theorems etc.),<br>\narbitrary tools are not.</p>\n<p>\"Tool compliance\" means that the transformation by a given morphism <br>\n\"works\" -- what exactly is meant by that depends on the particular tool <br>\n(here the code generator).</p>\n<p>The usual strategy to prevent breakdowns like above is as follows:</p>\n<p>* Internal declarations of tool data (via certain attributes) should be<br>\n     tolerant against illformed input, i.e. not insist on a certain form,<br>\n     but give in and ignore the declaration. (This should be<br>\n     done in way that does not cause too much surprise to the user, maybe<br>\n     via a suitable warning.)</p>\n<p>* The user should be able to modify the environment that results from an<br>\n     interpretation etc. by adding new declarations of replacement data.</p>\n<p>Makarius</p>",
        "id": 294076744,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660829186
    }
]