[
    {
        "content": "<p>From: Claudio Sacerdoti Coen &lt;<a href=\"mailto:sacerdot@cs.unibo.it\">sacerdot@cs.unibo.it</a>&gt;<br>\nJob description:</p>\n<p>We are currently looking for a Post-Doc position at the Department of<br>\nComputer Science, University of Bologna, to work on the CerCo FET-Open<br>\nEU Project (see description below). The gross salary is 36000 euros per<br>\nyear. The University of Bologna is the oldest western university and the<br>\nDepartment of Computer Science (<a href=\"http://www.cs.unibo.it/en/\">http://www.cs.unibo.it/en/</a>), located in<br>\nthe historic city center, has strong expertise in theoretical computer<br>\nscience and logic and it participates to several national and<br>\ninternational projects. The Post-Doc will join the HELM team, leaded by<br>\nProf. Asperti, whose members work in the domains of Type Theory and<br>\nMathematical Knowledge Management. The CerCo project is headed by<br>\nDr. Sacerdoti Coen. The candidate will benefit from exchange opportunity<br>\nwith the other project participants (University Paris-Diderot, Paris,<br>\nand University of Edinburgh, Edinburgh). The candidate will not have any<br>\nteaching duties.</p>\n<p>Requirements:</p>\n<p>Candidates should have a Ph.D. in Computer Science and previous<br>\nexperience in either Type Theory (in particular Interactive Theorem<br>\nProving) or Compiler Development, and being proficient in functional<br>\nprogramming languages.</p>\n<p>Starting date:</p>\n<p>The starting date will be decided together with the candidate and could<br>\nnot be before March. The contract is for two years. The candidate should<br>\ncontact <a href=\"mailto:sacerdot@cs.unibo.it\">sacerdot@cs.unibo.it</a> for further information.</p>\n<p>Project description:</p>\n<p>The CerCo FET-Open EU Project is aimed at producing the first _formally_<br>\n_verified_ _complexity_preserving_ compiler for a subset of C to the<br>\nobject code for a microprocessor used in embedded systems. The output of<br>\nthe compilation process will be the object code and a copy of the source<br>\ncode annotated with _exact_ computational complexities for each program<br>\nslice in O(1). The exact computational complexities (expressed in clock<br>\ncycles and parametric in the program input) can then be used to formally<br>\nreason on the overall code complexity. The source code of the compiler<br>\nwill be formally verified using the Matita Interactive Theorem Prover<br>\n(<a href=\"http://matita.cs.unibo.it\">http://matita.cs.unibo.it</a>), based on a variant of the Calculus of<br>\n(Co)Inductive Constructions.</p>",
        "id": 294099058,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660833203
    }
]