[
    {
        "content": "<p>From: \"Jens-D. Doll\" &lt;<a href=\"mailto:jd@cococo.de\">jd@cococo.de</a>&gt;<br>\nHello Rene and Isabelle developers,</p>\n<p>having read your loop problems (vs. termination problems) for a while now  <br>\nI would like to suggest an important improvement to your code, which might  <br>\nremove infinite loops at once and forever.</p>\n<p>When working for the industry in Hamburg in the 80s I was a programmer and  <br>\nhad to make sure that certain functions terminate definitely, which could  <br>\nnot be guaranteed by the recursive code. So I build a second stack in  <br>\nparallel to the call stack, which was handled at each function entry. The  <br>\nstack contained the names of the functions called and the simple check  <br>\nconsists of finding the just called function in the stack levels below the  <br>\ncurrent one. If found, there was a loop in the call sequence and gave a  <br>\nhint that this might be an infinite one. The practical task was now to  <br>\nidentify a function</p>\n<p>loopcheck(functionstack),</p>\n<p>which predicted an infinite loop with a high probability. A first approach  <br>\nshould not be that difficult and later improvement of this method should  <br>\nlead to non looping Isabelle code ...</p>\n<p>Have a good Sunday,<br>\nJens</p>",
        "id": 294270680,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660917115
    }
]