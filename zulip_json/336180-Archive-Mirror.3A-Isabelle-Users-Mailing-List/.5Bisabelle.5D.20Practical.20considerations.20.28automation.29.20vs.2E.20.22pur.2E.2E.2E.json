[
    {
        "content": "<p>From: Ken Kubota &lt;<a href=\"mailto:mail@kenkubota.de\">mail@kenkubota.de</a>&gt;<br>\nDear Makarius Wenzel,<br>\ndear Members of the Research Community,</p>\n<p>The \"tradeoff\" argument concerning the \"tradeoff in theoretical simplicity <br>\nversus complexity required for practical applications of logic\" given at<br>\n<a href=\"https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2016-August/msg00084.html\">https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2016-August/msg00084.html</a><br>\nreminds me of an e-mail discussion I had with Larry Paulson about natural <br>\ndeduction vs. axiomatic (Hilbert-style) deductive systems (with respect to <br>\nautomation). Of course, certain concessions cannot be avoided, and for <br>\nautomation, natural deduction (making metatheorems symbolically representable) <br>\nis the only choice, although one would like to prefer a Hilbert-style system in <br>\nwhich all rules of inference can be reduced to a single one, like in Q0. <br>\nNevertheless, one has to be aware that concessions for practical reasons (e.g., <br>\nautomation) are deviations from the \"pure\" logic, and while deviations <br>\nconcerning certain decisions are necessary, for all other decisions, the <br>\noriginal concept remains, and the general design decisions still apply.</p>\n<p>In the HOL handbook, this is reflected by Andrew Pitts' consideration regarding <br>\nQ0:<br>\n\"From a logical point of view, it would be better to have a simpler <br>\nsubstitution primitive, such as 'Rule R' of Andrews' logic Q0, and then to <br>\nderive more complex rules from it.\" [Gordon/Melham, 1993, p. 213]<br>\n<a href=\"https://sourceforge.net/p/hol/mailman/message/35287517/\">https://sourceforge.net/p/hol/mailman/message/35287517/</a></p>\n<p>What Andrews calls \"expressiveness\" [Andrews, 2002, p. 205], is what I, vice <br>\nversa, call \"reducibility\", and this concept is already implicit in Church's <br>\nwork (the simple theory of types), in which reducibility is omnipresent either <br>\nas Currying (reducing functions of more than one argument to functions with <br>\nonly one argument, due to Schoenfinkel, implemented via lambda-conversion) or <br>\nas the definability of the logical connectives (reducing them to combinations <br>\nof a small set of primitive symbols).</p>\n<p>Moreover, reducibility (expressiveness) is not just \"theoretical simplicity\". <br>\nThe reduction of symbols, variable binders, axioms, and rules of inference lays <br>\nbare the inner logic of formal logic and mathematics, and reveals <br>\ninterdependencies between them. This holds for both interdependencies within <br>\neach field (e.g., for rules: between primitive and derived rules, for symbols: <br>\nbetween primitive and defined symbols, etc.) as well as interdependencies among <br>\nthe fields (e.g., the derivability of the rule of modus ponens from a certain <br>\nset of rules and axioms). (Also independence: In Andrews' Q0, it is shown that <br>\nelementary logic is independent of the Axiom of Choice, which is, in my <br>\nopinion, a non-logical axiom, like the Axiom of Infinity. In Gordon's HOL, this <br>\nis not possible, since the use of the epsilon operator instead of the <br>\ndescription operator makes the Axiom of Choice inevitable.) Exactly this </p>\n<ul>\n<li>laying bare the inner logic of formal logic and mathematics - makes Church's <br>\nand Andrews' formulations of the mathematical language so important, not only <br>\nChurch's (and Andrews') \"precise formulation of the syntax\"<br>\n<a href=\"https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-175.pdf\">https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-175.pdf</a> (p. 5),<br>\nwhich also is the result of consequently carrying out the principle of <br>\nreducibility (expressiveness). Church's main achievement is the creation of a <br>\nmathematical language largely following the concept of <br>\nexpressiveness/reducibility; whereas this concept seems to be implicit in the <br>\nwork of Church, it is explicit in the work of Andrews.</li>\n</ul>\n<p>Hence, while practical considerations enforce deviations from the \"pure\" logic, <br>\nstill implementations (e.g., Gordon's HOL or Isabelle/HOL) are based on and <br>\nhave to face comparison with the \"pure\" logical system (e.g., Q0).</p>\n<p>Therefore practical concessions are in some sense a layer on top of (or, <br>\n\"overloading\") the \"pure\" logic in certain areas, but do not render the general <br>\nconcept of expressiveness (reducibility) irrelevant. So it is not simply an <br>\nalternative between logical rigor and practical considerations, but the latter <br>\noverrides the general concept in certain fields only. It is important to keep <br>\nthis root (i.e., the underlying, but partially covered concept) and its <br>\nremaining validity in mind (e.g., the reducibility not of rules, but still of <br>\nsymbols, variable binders, and axioms; avoidance of the use of the Axiom of <br>\nChoice by preferring the description operator to the epsilon operator). With <br>\nthe above quote from the documentation of the original (Gordon's) HOL system, <br>\nthis awareness is clearly expressed.</p>\n<p>Concerning \"type class instantiation\", my guess is that with dependent type <br>\ntheory, the more expressive mathematical language provides other means which <br>\nmight replace the features provided by the current Isabelle/HOL (polymorphic <br>\ntype theory). At least certain language features of the original (Gordon's) HOL <br>\nsystem, such as</p>\n<p>a) the introduction (definition) of types [cf. Gordon/Melham, 1993, pp. 225 <br>\nff.; cf. paragraph 2.5.4 of<br>\n<a href=\"http://sourceforge.net/projects/hol/files/hol/kananaskis-10/kananaskis-10-logic.pdf\">http://sourceforge.net/projects/hol/files/hol/kananaskis-10/kananaskis-10-logic.pdf</a> (pp. 38 ff.) ],<br>\nb) or the use of compound types [cf. Gordon/Melham, 1993, p. 195; cf. paragraph <br>\n1.2 of<br>\n<a href=\"http://sourceforge.net/projects/hol/files/hol/kananaskis-10/kananaskis-10-logic.pdf\">http://sourceforge.net/projects/hol/files/hol/kananaskis-10/kananaskis-10-logic.pdf</a> (p. 11)]</p>\n<p>can be expressed very naturally in the dependent type theory R0, and from its <br>\npoint of view, these HOL language features then appear as rather artificial <br>\nextensions (even with the introduction of new axioms!) which were necessary to <br>\nemulate some of the expressiveness of the language of dependent type theory <br>\nwith the limited means of the language of polymorphic type theory, and, hence, <br>\nas a preliminary and auxiliary solution.</p>\n<p>Regarding the concerns about expanding abbreviations (definitions), this kind <br>\nof argument is not applicable to all representations of logic. In the R0 <br>\nimplementation, formulae are represented as binary trees, each having assigned <br>\na natural number. So internally, any well-formed formula (wff) can be addressed <br>\nby its number, and expansion (and definition) is only a question of parsing and <br>\nprinting, but not of the logical core (in which no definitions exist, but only <br>\nbinary trees and their numbers representing expanded wffs). Of course, due to <br>\nIsabelle's concept of a meta-logical framework, or other practical <br>\nconsiderations, different circumstances may be relevant that I am not familiar <br>\nwith.</p>\n<p>For the HOL documentation team, it might be worth considering making the <br>\nbrilliant HOL documents, such as<br>\n<a href=\"http://sourceforge.net/projects/hol/files/hol/kananaskis-10/kananaskis-10-logic.pdf\">http://sourceforge.net/projects/hol/files/hol/kananaskis-10/kananaskis-10-logic.pdf</a><br>\navailable directly on the HOL homepage in order to make it readable within the <br>\nbrowser, e.g., via<br>\n<a href=\"https://hol-theorem-prover.org/documents/kananaskis-10-logic.pdf\">https://hol-theorem-prover.org/documents/kananaskis-10-logic.pdf</a><br>\nsince a download is a barrier for many people, for example, due to security <br>\nconsiderations, or at public terminals providing browsing, but not downloading.</p>\n<p>For references, please see:<br>\n<a href=\"https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2016-August/msg00069.html\">https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2016-August/msg00069.html</a><br>\n<a href=\"https://sourceforge.net/p/hol/mailman/message/35287517/\">https://sourceforge.net/p/hol/mailman/message/35287517/</a></p>\n<p>Kind regards,</p>\n<p>Ken Kubota</p>\n<hr>\n<p>Ken Kubota<br>\ndoi: 10.4444/100<br>\n<a href=\"http://dx.doi.org/10.4444/100\">http://dx.doi.org/10.4444/100</a></p>",
        "id": 294681961,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661177028
    }
]