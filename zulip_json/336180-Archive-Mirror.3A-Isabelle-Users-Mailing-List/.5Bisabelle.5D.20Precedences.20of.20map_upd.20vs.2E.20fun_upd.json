[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear all,</p>\n<p>In Isabelle/HOL, function update has the syntax f(x := y) and map update uses f(x |-&gt; y). <br>\nSurprisingly, the syntaxes have different precedences. Function update uses</p>\n<p>\"_Update\"        :: ['a, updbinds] =&gt; 'a            (\"_/'((_)')\" [1000,0] 900)</p>\n<p>and map update uses</p>\n<p>\"_MapUpd\"  :: \"['a ~=&gt; 'b, maplets] =&gt; 'a ~=&gt; 'b\" (\"_/'(_')\" [900,0]900)</p>\n<p>Consequently, Isabelle accepts the term \"f x(1 |-&gt; 2)\", but not \"f x(1 := Some 2)\". The <br>\nlatter has to parenthesized as in \"(f x)(1 := Some 2)\".</p>\n<p>Browsing the repository, I found that Tobias added the map syntax in 2003 (d2e550609c40) <br>\nand that David von Oheimb has changed the precedences for function update in 2000 <br>\n(666d3a4f3b9d). Before that, precedences for function update were the same as they are now <br>\nfor maps.</p>\n<p>Can anyone remember why David changed the precedences and why Tobias used the older <br>\nprecedences when he introduced the syntax for maps? Why are the precedences not the same? <br>\nAnd should they be unified?</p>\n<p>Andreas</p>",
        "id": 294648280,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165039
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nI don't think there is a master plan at work but more likely an oversight. I <br>\ndon't remember any argument against unifying the precedences.</p>\n<p>Tobias<br>\n<a href=\"/user_uploads/14278/R6_PruNaBTn6l7eXF8qvMqWa/smime.p7s\">smime.p7s</a></p>",
        "id": 294648331,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165046
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nSo if we unify the precedences, which one should be prefered? I am slightly in favour of <br>\nthose for maps, because they allow you to write \"f x(y |-&gt; z)\" without parenthesis.</p>\n<p>By the way, why are there different non-terminals for map update and fun update anyway? <br>\nAFAICS one could use the same non-terminals for both kinds of function updates. Then it <br>\nwould be possible to write things like</p>\n<p>term \"f(a := q, x ↦ y, z := None)\"</p>\n<p>At the moment, this must be written as \"(f(a := q)(x ↦ y))(z := None)\".</p>\n<p>Andreas</p>",
        "id": 294648336,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165052
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nOn 29/07/2015 18:45, Andreas Lochbihler wrote:</p>\n<blockquote>\n<p>So if we unify the precedences, which one should be prefered? I am slightly in<br>\nfavour of those for maps, because they allow you to write \"f x(y |-&gt; z)\" without<br>\nparenthesis.</p>\n</blockquote>\n<p>I may seem convenient but it can leave the reader wondering. Hence I prefer the <br>\nnotation that requires parentheses</p>\n<blockquote>\n<p>By the way, why are there different non-terminals for map update and fun update<br>\nanyway? AFAICS one could use the same non-terminals for both kinds of function<br>\nupdates. Then it would be possible to write things like</p>\n<p>term \"f(a := q, x ↦ y, z := None)\"</p>\n<p>At the moment, this must be written as \"(f(a := q)(x ↦ y))(z := None)\".</p>\n</blockquote>\n<p>That makes sense.</p>\n<p>Tobias</p>\n<blockquote>\n<p>Andreas</p>\n<p>On 29/07/15 18:08, Tobias Nipkow wrote:</p>\n<blockquote>\n<p>I don't think there is a master plan at work but more likely an oversight. I<br>\ndon't<br>\nremember any argument against unifying the precedences.</p>\n<p>Tobias<br>\n</p>\n</blockquote>\n<p>On 29/07/2015 16:54, Andreas Lochbihler wrote:</p>\n<blockquote>\n<blockquote>\n<p>Dear all,</p>\n<p>In Isabelle/HOL, function update has the syntax f(x := y) and map update uses<br>\nf(x |-&gt; y). Surprisingly, the syntaxes have different precedences. Function<br>\nupdate uses</p>\n<p>\"_Update\"        :: ['a, updbinds] =&gt; 'a            (\"_/'((_)')\" [1000,0]<br>\n900)</p>\n<p>and map update uses</p>\n<p>\"_MapUpd\"  :: \"['a ~=&gt; 'b, maplets] =&gt; 'a ~=&gt; 'b\" (\"_/'(_')\" [900,0]900)</p>\n<p>Consequently, Isabelle accepts the term \"f x(1 |-&gt; 2)\", but not \"f x(1 := Some<br>\n2)\". The latter has to parenthesized as in \"(f x)(1 := Some 2)\".</p>\n<p>Browsing the repository, I found that Tobias added the map syntax in 2003<br>\n(d2e550609c40) and that David von Oheimb has changed the precedences for<br>\nfunction update in 2000 (666d3a4f3b9d). Before that, precedences for function<br>\nupdate were the same as they are now for maps.</p>\n<p>Can anyone remember why David changed the precedences and why Tobias used the<br>\nolder precedences when he introduced the syntax for maps? Why are the<br>\nprecedences not the same? And should they be unified?</p>\n<p>Andreas</p>\n</blockquote>\n</blockquote>\n<p><a href=\"/user_uploads/14278/Oh-SPXWVnPdJr1T7Qgagce1z/smime.p7s\">smime.p7s</a></p>\n</blockquote>",
        "id": 294648392,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165083
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nOn 30/07/15 10:07, Tobias Nipkow wrote:</p>\n<blockquote>\n<p>On 29/07/2015 18:45, Andreas Lochbihler wrote:</p>\n<blockquote>\n<p>So if we unify the precedences, which one should be prefered? I am slightly in<br>\nfavour of those for maps, because they allow you to write \"f x(y |-&gt; z)\" without<br>\nparenthesis.</p>\n</blockquote>\n<p>I may seem convenient but it can leave the reader wondering. Hence I prefer the notation<br>\nthat requires parentheses<br>\nI agree that there missing parentheses might confuse readers. However, if parentheses must <br>\nbe used, then one cannot write</p>\n</blockquote>\n<p>f(x |-&gt; 3)(y |-&gt; 4)</p>\n<p>any more, but one has to resort to</p>\n<p>f(x |-&gt; 3, y |-&gt; 4).</p>\n<p>This flexibility is used for map updates in Bali quite a lot. Of course, one can always <br>\nconvert the former cases to the latter, but it seems like an unnecessary burden for users.</p>\n<p>Also, Bali omits the parentheses when using selectors as in \"lcl s(V |-&gt; x)\". With the <br>\nprecedences [1000, 0], 900, one would have to add parentheses as in \"(lcl s)(V |-&gt; x)\".</p>\n<p>There are two more update syntaxes in Isabelle, namely for lists: xs[5 := x] and records <br>\nr(|field := x|). Both of them use the precedences for maps, i.e., [900, 0] 900.</p>\n<p>This, I think that it is sensible to change fun_upd back to [900, 0] 900 rather than <br>\nconverting all the others to [1000, 0] 900. Of course,</p>\n<p>map f xs[3 := z]</p>\n<p>is confusing, but there is no way around it if we want to allow</p>\n<p>xs[3 := z][4 := y]</p>\n<p>without extra parentheses.</p>\n<blockquote>\n<blockquote>\n<p>By the way, why are there different non-terminals for map update and fun update<br>\nanyway? AFAICS one could use the same non-terminals for both kinds of function<br>\nupdates. Then it would be possible to write things like</p>\n<p>term \"f(a := q, x ↦ y, z := None)\"</p>\n<p>At the moment, this must be written as \"(f(a := q)(x ↦ y))(z := None)\".</p>\n</blockquote>\n<p>That makes sense.<br>\nThere is just one small problem, namely updates to the empty map. Currently,</p>\n</blockquote>\n<p>empty(x |-&gt; z)</p>\n<p>is written as [x |-&gt; z]. If we unify the different non-terminals, then we can also write<br>\nempty(y := None) as [y := None]. Obviously, it does not make much sense to support this, <br>\nbut it is possible. Then, however, list updates can be ambiguous, because</p>\n<p>xs[n := None]</p>\n<p>could be parsed as function application \"xs (fun_upd (%_. None) n None)\" and as list <br>\nupdate \"list_update xs n None\". Thus, we still need maplet and maplets for [x |-&gt; y], but <br>\nwe could nevertheless allow mixing map updates and function updates as in \"f(x |-&gt; a, y := <br>\nNone)\".</p>\n<p>Andreas</p>",
        "id": 294648419,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165095
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nI have come to the conclusion to leave things as they are. For a start, the <br>\nmotivation is not that strong. Instead of \"f(a := q, x ↦ y, z := None)\" you can <br>\nwrite \"f(a := q, x := Some y, z := None)\". Moreover I find \"(f x)(y := z)\" more <br>\nreadable than \"f x(y := z)\". But I don't feel stronly enough about it to change <br>\nthe precedences of the other update operators.</p>\n<p>Tobias<br>\n<a href=\"/user_uploads/14278/uvIKaWZ29gFz0Ptlrvn5kkp8/smime.p7s\">smime.p7s</a></p>",
        "id": 294648454,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165108
    }
]