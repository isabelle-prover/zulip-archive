[
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nDear list,</p>\n<p>is it at all possible to use the predicate compiler for inductive<br>\ndefinitions inside a locale? So far I have tried</p>\n<p>context my_locale begin<br>\n    code_pred veval'<br>\n  end</p>\n<p>and</p>\n<p>global_interpretation ...<br>\n  code_pred ...</p>\n<p>both of which fail (\"not a constant\" and \"no such predicate\", respectively).</p>\n<p>The locale itself has no assumptions, so I naively thought I could also try</p>\n<p>code_pred my_locale.veval'</p>\n<p>but that fails with \"exception Subscript\".</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294705160,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661180419
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Lars,</p>\n<p>It is possible when the locale has no assumptions. Before invoking code_pred, you must <br>\nre-declare all the intro rules using [code_pred_intros]. Then, you'll have to prove a huge <br>\nelimination rule when you invoke code_pred, but this is usually easy.</p>\n<p>There's an example at the end of J/Smallstep.thy in my JinjaThreads AFP entry that should <br>\nget you started.</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 294705184,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661180425
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nHi Andreas,</p>\n<p>thanks, that worked (and I wanted to use [code_pred_intro] anyway). Now<br>\nI just need to convince mode inference ...</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294705200,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661180431
    }
]