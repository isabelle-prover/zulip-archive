[
    {
        "content": "<p>From: Rafal Kolanski &lt;<a href=\"mailto:rafalk@cse.unsw.edu.au\">rafalk@cse.unsw.edu.au</a>&gt;<br>\nHello Gentlemen,</p>\n<p>I am presently hacking together a print translation so that words show <br>\nup in hexadecimal. I'm basing it on numeral_syntax.ML but there's <br>\nsomething I do not understand.</p>\n<p>The comment at the top of numeral_syntax.ML says \"preserves leading <br>\nzeros/ones\". The code seems to support this claim, but where do these <br>\nzeros come from?</p>\n<p>term \"-0005 :: nat\" gives \"-5\"<br>\nterm \"0005 :: nat\" gives \"5\"</p>\n<p>Basically, I'm wondering whether I should care about them or not.</p>\n<p>Sincerely,</p>\n<p>Rafal Kolanski.</p>",
        "id": 294058599,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660822618
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Fri, 28 Mar 2008, Rafal Kolanski wrote:</p>\n<blockquote>\n<p>The comment at the top of numeral_syntax.ML says \"preserves leading <br>\nzeros/ones\". The code seems to support this claim, but where do these <br>\nzeros come from?</p>\n<p>term \"-0005 :: nat\" gives \"-5\"<br>\nterm \"0005 :: nat\" gives \"5\"</p>\n</blockquote>\n<p>This is just the usual situation that the comment disagrees with the ML <br>\ntext.  In the present version leading zeros are stripped from the input, <br>\nbut are printed if they are produced internally (e.g. by logical <br>\ntransformations).</p>\n<p>Numerals have many more problems, such as the builtin sign.  What</p>\n<blockquote>\n<p>Basically, I'm wondering whether I should care about them or not.</p>\n</blockquote>\n<p>It depends what exactly you have in mind.  You could just mimic the <br>\npresent behaviour, or try to do better, e.g. by <em>not</em> printing terms with <br>\nleading zeros as numerals.</p>\n<p>Makarius</p>",
        "id": 294058668,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660822653
    }
]