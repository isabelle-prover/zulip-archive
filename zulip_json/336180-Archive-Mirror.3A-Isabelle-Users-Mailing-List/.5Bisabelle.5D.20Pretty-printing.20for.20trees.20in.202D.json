[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:mail@andreas-lochbihler.de\">mail@andreas-lochbihler.de</a>&gt;<br>\nDear list,</p>\n<p>For an Isabelle demo, I'd like to pretty-print a binary tree in a 2D layout, say given by <br>\nthe datatype</p>\n<p>datatype tree = Leaf nat | Node tree tree</p>\n<p>The output should be 2-dimensional, e.g., what drawVerticalTree in Haskell does:</p>\n<p><a href=\"http://hackage.haskell.org/package/pretty-tree-0.1.0.0/docs/Data-Tree-Pretty.html\">http://hackage.haskell.org/package/pretty-tree-0.1.0.0/docs/Data-Tree-Pretty.html</a></p>\n<p>I'm happy to write a print translation for the tree constructors to do that, but I have no <br>\nclue how I could achieve this with Isabelle's syntax AST. Is this possible at all? Has <br>\nanyone done something similar before?</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 294734006,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189138
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nHi Andreas,</p>\n<p>I would like the very same thing. I will only need it to visiualize the result <br>\nof some computation. That can (in principle) be dealt with by</p>\n<p>value \"tree2D(...)\"</p>\n<p>However, the result is a char list and the newline character is printed as ⏎ and <br>\nnot as a new line. There are also the '' delimiters around it. If we can fix <br>\nthat, we are in business.</p>\n<p>Tobias<br>\n<a href=\"/user_uploads/14278/U9htZJALCZNWbPhfkO9ij9xs/smime.p7s\">smime.p7s</a></p>",
        "id": 294734040,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189157
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nI'm not sure if this is possible with a print translation in a<br>\nreasonable way.</p>\n<p>However, it is quite simple to implement something like this with a<br>\ncommand. In fact, one can go even further: Why only ASCII art?</p>\n<p>In a fit of over-engineering, I hacked a small bit of code together to<br>\nvisualize a tree. It currently only works for binary trees (Tree.tree<br>\nfrom HOL-Library), but it can easily be extended to other tree-like<br>\ntypes with a little bit of boilerplate.</p>\n<p>I implemented renderers for Tree.tree in three modes:<br>\n– ASCII art (like drawTree form Haskell's Data.Tree)<br>\n– GraphViz .dot format<br>\n– Isabelle/jEdit GraphView</p>\n<p>The following things could be improved:<br>\n– Nicer ASCII art (e.g. Haskell's Data.Tree.Pretty, and additionally if<br>\nwe had nice box-drawing characters in the Isabelle symbols, one could<br>\nuse those to get nicer lines/boxes)<br>\n– Automatic rendering of .dot files to PDF and displaying the PDF. This<br>\nwould be easy if GraphViz is installed on the machine and if I knew how<br>\nto launch a PDF viewer from Isabelle. But perhaps something better is<br>\npossible.<br>\n– Isabelle's GraphView sorts the children of each node ascendingly,<br>\nwhich means that binary trees are often not printed faithfully. It also<br>\nhas very few styling option for the nodes, so the GraphViz output looks<br>\nmuch nicer.</p>\n<p>I attached the theory and the PDFs corresponding to the GraphViz output<br>\nof the examples in it. Note that subtrees are also supported and<br>\nrendered differently from normal nodes.</p>\n<p>Manuel<br>\n<a href=\"/user_uploads/14278/TSlmD4yar2ADC86KoozQH_9w/ex1.pdf\">ex1.pdf</a><br>\n<a href=\"/user_uploads/14278/ipWnfDQZuu-lOSWQJFB18RQP/ex2.pdf\">ex2.pdf</a><br>\n<a href=\"/user_uploads/14278/YjSE8dYbB5POdPLqRwbR9_PN/ex3.pdf\">ex3.pdf</a><br>\n<a href=\"/user_uploads/14278/jAYNFRARv7nmIdFP3qOW_Y8y/Tree_Visualization.thy\">Tree_Visualization.thy</a></p>",
        "id": 294734222,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189220
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nThis is great! I even managed to install graphviz and run one of your examples. <br>\nThe dot format clearly produces the nicest output. It would indeed be good if <br>\nthat could be integrated a bit more.</p>\n<p>Many thanks<br>\nTobias<br>\n<a href=\"/user_uploads/14278/cvDwpwj4J-h2HXwsFK2BMcgI/smime.p7s\">smime.p7s</a></p>",
        "id": 294734279,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189243
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nIncidently, the Isabelle Workshop 2018 at Oxford has a contribution<br>\nabout a verified tree layout algorithm:<br>\n<a href=\"https://files.sketis.net/Isabelle_Workshop_2018/Isabelle_2018_paper_7.pdf\">https://files.sketis.net/Isabelle_Workshop_2018/Isabelle_2018_paper_7.pdf</a></p>\n<p>The paper cites this paper from 1996:<br>\n<a href=\"https://www.microsoft.com/en-us/research/publication/functional-pearl-drawing-trees\">https://www.microsoft.com/en-us/research/publication/functional-pearl-drawing-trees</a><br>\n(with SML implementation).</p>\n<p>There might be better tree layout algorithms now, but I am not an expert<br>\non this. I only recall experts saying that there are different problem<br>\nclasses:</p>\n<p>(1) general graph layout (very difficult)<br>\n  (2) DAG layout (difficult)<br>\n  (3) tree layout (easy)</p>\n<p>Makarius</p>",
        "id": 294734302,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189249
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 24/06/18 12:43, Manuel Eberl wrote:</p>\n<blockquote>\n<p>– Automatic rendering of .dot files to PDF and displaying the PDF. This<br>\nwould be easy if GraphViz is installed on the machine and if I knew how<br>\nto launch a PDF viewer from Isabelle. But perhaps something better is<br>\npossible.</p>\n</blockquote>\n<p>Generally, only a PIDE front-end (Isabelle/Scala) can display things,<br>\nnot the back-end (Isabelle/ML). E.g. see the @{doc} antiquotation.</p>\n<blockquote>\n<p>– Isabelle's GraphView sorts the children of each node ascendingly,<br>\nwhich means that binary trees are often not printed faithfully. It also<br>\nhas very few styling option for the nodes, so the GraphViz output looks<br>\nmuch nicer.</p>\n</blockquote>\n<p>Both Graphviz and Isabelle Graphview are for DAG layout, not<br>\nspecifically for trees.</p>\n<p>It might be better to integrate a decent tree layout algorithm into<br>\nIsabelle/Scala, and thus avoid the usual problems with external tools:<br>\nmanual tinkering with installation that \"works for me\" but not for everyone.</p>\n<p>Makarius</p>",
        "id": 294734317,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189255
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nOn 24/06/18 16:52, Makarius wrote:</p>\n<blockquote>\n<p>Generally, only a PIDE front-end (Isabelle/Scala) can display things,<br>\nnot the back-end (Isabelle/ML). E.g. see the @{doc} antiquotation.</p>\n</blockquote>\n<p>Well, yes, I was thinking of something similar to what<br>\nthy_deps/code_deps does: Display some markup that one can click on to<br>\nget to the PDF file. Or some kind of jEdit popup.</p>\n<blockquote>\n<p>Both Graphviz and Isabelle Graphview are for DAG layout, not<br>\nspecifically for trees.</p>\n</blockquote>\n<p>That is true, but dot attempts to keep the lexicographic ordering of<br>\nchildren, and in a tree, I think it always does, since there are no real<br>\nconstraints that prevent it from doing that. People do use Graphviz to<br>\nvisualise ordered trees a lot.</p>\n<blockquote>\n<p>It might be better to integrate a decent tree layout algorithm into<br>\nIsabelle/Scala, and thus avoid the usual problems with external tools:<br>\nmanual tinkering with installation that \"works for me\" but not for everyone.</p>\n</blockquote>\n<p>Yes, one could do that. But the GUI would have to support quite a few<br>\nthings in order to reach the same kind of versatility w.r.t. diffferent<br>\nnode shapes that Graphviz provides. I took advantage of that a lot and I<br>\nthink the results speak for themselves.</p>\n<p>In any case, I do agree that having Isabelle talk to Graphviz is a<br>\nsuboptimal solution unless possibly if we want to integrate Graphviz as<br>\na component (which we probably don't).</p>\n<p>I do think that offering Graphviz code as one possible output format is<br>\na good idea though; that way people can easily produce PDFs/LaTeX, e.g.<br>\nfor slides.</p>\n<p>Manuel</p>",
        "id": 294734333,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189261
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:mail@andreas-lochbihler.de\">mail@andreas-lochbihler.de</a>&gt;<br>\nHi Manuel,</p>\n<p>Thanks a lot for the implementation. That's definitely useful, especially since I also <br>\nneed this for pretty-printing evaluation results.</p>\n<p>I got something similar to the vertical tree ASCII art using just notation, where <br>\nindentation replaces lines. This needs less vertical space, but more horizontal space:</p>\n<p>abbreviation (output) Node' where \"Node' x l r ≡ Node l x r\"<br>\nnotation (output) Node' (\"<a href=\"http://❙l❙:%20(_)//❙r❙:%20(_)\">(2_)</a>\")</p>\n<p>I'll have to see whether I have more vertical or horizontal space available. The generated <br>\nPDFs definitely look much nicer than the ASCII art, but constantly switching between <br>\nIsabelle/jEdit and the PDF viewer also has its drawbacks in a demo. Moreover, the ASCII <br>\nart preserves all the nice hovering tool tips, e.g., type information. This is lost in a PDF.</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 294734348,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189267
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI am still doing Isabelle PDF presentations myself, but the coming<br>\nrelease is hopefully the last one where this is the usual way to do it:<br>\nthe general plan is to move towards high-quality HTML presentations;<br>\ndetails still need to be determined.</p>\n<p>Some weeks ago I actually intended to get something of this into the<br>\nIsabelle2018 release, but I have already switched into strict release<br>\nmode where only essential things are to be flushed from the pending<br>\npipeline.</p>\n<p>While such new things are waiting in the queue, I find myself doing<br>\npresentations directly from the Isabelle/jEdit view more and more often.</p>\n<p>Makarius</p>",
        "id": 294734370,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189273
    }
]