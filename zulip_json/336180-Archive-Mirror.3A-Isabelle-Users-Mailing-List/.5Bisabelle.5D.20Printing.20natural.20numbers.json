[
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nI think this was discussed on the mailing list a few years ago, but I <br>\ndon't recall the exact details and I cannot seem to find the emails.</p>\n<p>When using the ‘value’ command, natural numbers are printed in ‘Suc’ <br>\nnotation. I for one find that very inconvenient. One way to get the <br>\nsystem to print natural numbers as numerals is to include <br>\nCode_Target_Numeral (this works for the [code], [nbe], and [simp] <br>\nevaluators). It also makes evaluation much more efficient.</p>\n<p>However, one does not always want to include Code_Target_Numeral <br>\nwhenever one experiments with ‘value’. I just realised that the <br>\nfollowing [code_post] rules allow nice printing of natural numbers <br>\n(although computation is still done Peano-style behind the curtain):</p>\n<p>lemma eval_Suc_nat [code_post]:<br>\n   \"Suc 0 = 1\"<br>\n   \"Suc 1 = 2\"<br>\n   \"Suc (numeral n) = numeral (<a href=\"http://Num.inc\">Num.inc</a> n)\"<br>\n   unfolding One_nat_def numeral_inc by simp_all</p>\n<p>declare Num.inc.simps [code_post]</p>\n<p>However, for some reason, this does not seem to work for the [simp] and <br>\n[nbe] evaluators.</p>\n<p>Does anyone apart from me think that something like this should be done? <br>\nIs there a way that also works for [simp] and [nbe]?</p>\n<p>Cheers,</p>\n<p>Manuel</p>",
        "id": 294673790,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661174236
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Manuel.</p>\n<blockquote>\n<p>I just realised that the<br>\nfollowing [code_post] rules allow nice printing of natural numbers<br>\n(although computation is still done Peano-style behind the curtain):</p>\n<p>lemma eval_Suc_nat [code_post]:<br>\n  \"Suc 0 = 1\"<br>\n  \"Suc 1 = 2\"<br>\n  \"Suc (numeral n) = numeral (<a href=\"http://Num.inc\">Num.inc</a> n)\"<br>\n  unfolding One_nat_def numeral_inc by simp_all</p>\n<p>declare Num.inc.simps [code_post]</p>\n<p>However, for some reason, this does not seem to work for the [simp] and<br>\n[nbe] evaluators.</p>\n</blockquote>\n<p>What are the failing examples?  The following works:</p>\n<p>value [code] \"Suc 42\"<br>\n    value [nbe] \"Suc 42\"<br>\n    value [simp] \"Suc 42\"</p>\n<blockquote>\n<p>Does anyone apart from me think that something like this should be done?</p>\n</blockquote>\n<p>I think the only reason why nobody has ever attempted this so far is<br>\nthat the old signed numerals did not allow such a simple post processing.</p>\n<p>Cheers,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/lCOdWFc2CHLi-sj-ws3g4V1L/signature.asc\">signature.asc</a></p>",
        "id": 294676955,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661175276
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;</p>\n<blockquote>\n<p>What are the failing examples?  The following works:</p>\n<p>value [code] \"Suc 42\"<br>\n  value [nbe] \"Suc 42\"<br>\n  value [simp] \"Suc 42\"</p>\n</blockquote>\n<p>Odd. I could have sworn this did not work when I tested. But it works <br>\nnow, so even better.</p>\n<blockquote>\n<p>I think the only reason why nobody has ever attempted this so far is<br>\nthat the old signed numerals did not allow such a simple post processing.</p>\n</blockquote>\n<p>Good. Then I suppose I'll add something like this soon. I am also <br>\nplanning to add some code_post rules to print multisets as \"{#1,2,3#}\" <br>\ninstead of \"mset [1,2,3]\".</p>",
        "id": 294677141,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661175340
    }
]