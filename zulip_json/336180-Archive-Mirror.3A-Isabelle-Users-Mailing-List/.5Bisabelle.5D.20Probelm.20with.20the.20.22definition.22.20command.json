[
    {
        "content": "<p>From: Jesus Aransay &lt;<a href=\"mailto:jesus-maria.aransay@unirioja.es\">jesus-maria.aransay@unirioja.es</a>&gt;<br>\nDear all,</p>\n<p>as a different but related issue to my previous mail, when we try to<br>\ninput matrices of dimension over 250 * 250 (approx) as elements of<br>\ntype \"iarray\" (the IArray constructor is applied to lists,<br>\n<a href=\"http://isabelle.in.tum.de/library/HOL/HOL-Library/IArray.html\">http://isabelle.in.tum.de/library/HOL/HOL-Library/IArray.html</a>) in<br>\nIsabelle (Isabelle/JEdit 2013), by means of the \"definition\" command,<br>\nprocessing time gets really slow (of the order of minutes) until the<br>\neditor crashes or we just give it up. Inputting the matrices directly<br>\nin the generated SML code works well.</p>\n<p>Is there any way to improve this behavior?</p>\n<p>Thanks for any hints,</p>\n<p>Jesus</p>",
        "id": 294239063,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660906156
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nJesus, this is a known problem. If you are OK with inputting the matrix on the<br>\nML level, just stick with it. Alternatively you can look at<br>\n<a href=\"http://afp.sourceforge.net/browser_info/current/HOL/HOL-Library/Flyspeck-Tame/Arch.html\">http://afp.sourceforge.net/browser_info/current/HOL/HOL-Library/Flyspeck-Tame/Arch.html</a><br>\nwhere some constants are defined at the ML level (in \"Archives/*.ML\") but<br>\nimported into Isabelle (as Tri, Quad etc). This way you may not need to edit any<br>\ngenerated ML code by hand.</p>\n<p>Tobias</p>",
        "id": 294239101,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660906171
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI have experimented with this a little, see my version of <br>\nRandom_Binary_Matrix.thy that is included here.  This takes about 45s on <br>\nmy cheap i7 machine.</p>\n<p>My first idea was to bypass the concrete syntax parser via the parse <br>\ntranslation, and turn a numeral token directly into some pre-term.  It <br>\nturned out that parsing alone takes only 30s for your example, but the <br>\nremaining \"check\" phase for type-reconstruction is rather slow (lots of <br>\nunification of types in several stages).  I had also some refinements of <br>\nthe syntax translations, to produce less concrete constants (many bounds <br>\nwith some beta redex, to simulate a local let within the term); another <br>\nrefinement was to avoid polymorphism in the constants, but neither helped <br>\nvery much.</p>\n<p>So the second approach uses \"make_bits\" with the \"define\" function in <br>\nIsabelle/ML.  Such plain Isabelle/ML operations are less cryptic than <br>\nsyntax operations.  Its remaining slowness is due to generous <br>\nre-certification of terms in certain parts of the system for basic <br>\ndefinitions.  You will probably face other more serious problems when <br>\nworking with the huge formal bits by other means, probably also in the <br>\ncode generator.</p>\n<p>Here you see that Isabelle was not built with big data applications in <br>\nmind.  Scalability to arbitrary large input is never for free: it needs to <br>\nbe addressed explicitly in the implementation, and usually involves <br>\ntrade-offs concerning other things.  Isabelle is better at ridiculous <br>\ngenerality than ridiculous speed.</p>\n<p>Makarius<br>\n<a href=\"/user_uploads/14278/vOl4MphFunYDiJP5100cFDi8/Random_Binary_Matrix.thy\">Random_Binary_Matrix.thy</a></p>",
        "id": 294240833,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660906912
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI can say more when you show me the concrete example, to get a better idea <br>\nwhat is the usual \"problem class\" that you have here.</p>\n<p>Generally, the default inner syntax of Isabelle (for terms and types) is <br>\nmade as flexible and powerful as feasible, which also means it does not <br>\nscale to arbitrarily large input. There is no fundamental problem here, <br>\nsince that is only the default to get terms into the system, and there are <br>\nmany other ways.  You have already figured out some regular Isabelle/ML <br>\ninterfaces to do that.</p>\n<p>An alternative is to apply some tricks to import \"blobs\" directly into the <br>\nterm language, while staying on the surface end-user syntax. This could <br>\nwork via your own syntax translations, e.g. like this:</p>\n<p>term \"BIG_THING ''...''\"</p>\n<p>where ''...'' is an inner string token that is somehow turned into a term. <br>\nYou can then apply different parser technology to operate on the given <br>\n''...'' string.  (Technically there is a limit of 64 MB size for such <br>\nstrings.)</p>\n<p>In principle you could also load a file into the term, although that would <br>\npose some questions about file-system access and file versions within the <br>\ndocument model that is underlying the editor.  (As first approximation one <br>\nwould probably just use <a href=\"http://File.read\">File.read</a> and say it is \"unmanaged\" file-system <br>\naccess, i.e. assuming you don't edit that file while working with the <br>\nProver IDE.)</p>\n<p>Makarius</p>",
        "id": 294241905,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660907328
    },
    {
        "content": "<p>From: Jesus Aransay &lt;<a href=\"mailto:jesus-maria.aransay@unirioja.es\">jesus-maria.aransay@unirioja.es</a>&gt;<br>\nDear Makarius,</p>\n<p>in the attached file you can find a simple example of a list of lists<br>\nrepresenting a 250 * 250 matrix, which takes really long time to be<br>\nprocessed in Isabelle 2013 (also in the repository version); actually,<br>\nI gave up after a few minutes of processing without success.</p>\n<p>We are using these kind of lists, usually with every list wrapped with<br>\nthe IArray type constructor<br>\n(<a href=\"http://isabelle.in.tum.de/library/HOL/HOL-Library/IArray.html\">http://isabelle.in.tum.de/library/HOL/HOL-Library/IArray.html</a>) in<br>\norder to use IArrays to implement vectors and matrices.</p>\n<p>Using ML definitions of this size or even greater takes almost no<br>\ntime, so as an alternative solution we are directly executing the ML<br>\ncode and definitions.</p>\n<p>Thanks for any hint,</p>\n<p>Jesus<br>\n<a href=\"/user_uploads/14278/Jzi0wH44TgVgENPpTU67zM3-/Random_Binary_Matrix.thy\">Random_Binary_Matrix.thy</a></p>",
        "id": 294241968,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660907353
    }
]