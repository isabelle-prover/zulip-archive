[
    {
        "content": "<p>From: \"Ali A. Noroozi\" &lt;<a href=\"mailto:aliasghar.noroozi@gmail.com\">aliasghar.noroozi@gmail.com</a>&gt;<br>\nDear all,</p>\n<p>I am trying to define valid quadruple ⊨ {P}c×c'{Q} of Hoare logic in<br>\nIsabelle/HOL, where c and c' are commands and P and Q are assertions.<br>\nAssertions are defined as :</p>\n<p>type_synonym assn = \"state × state ⇒ bool\"</p>\n<p>I have defined the valid quadruple as following:</p>\n<p>definition<br>\n    rel_hoare_valid :: \"assn ⇒ com × com ⇒ assn ⇒ bool\" (\"⊨ {(1_)}/ (_)/<br>\n{(1_)}\" 50)<br>\n    where \"⊨ {P}c×c'{Q} = ...\"</p>\n<p>... contains rest of the code, which is not relevant.</p>\n<p>I know that the syntax annotation part</p>\n<p>(\"⊨ {(1_)}/ (_)/ {(1_)}\" 50)</p>\n<p>is not correct, but I don't know how to fix it.</p>\n<p>The error message is as following:</p>\n<p>Type unification failed: Clash of types \"_ set\" and \"_ × _\"</p>\n<p>Type error in application: incompatible operand type</p>\n<p>Operator:  rel_hoare_valid P :: com × com ⇒ ((char list ⇒ int) × (char<br>\n    list ⇒ int) ⇒ bool) ⇒ bool<br>\n    Operand:   c × c' :: (??'a × ??'b) set</p>\n<p>Can anyone help me correct the definition?</p>",
        "id": 294712124,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661182535
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nIt seems to me that your problem is the syntax for pairs: pairs are written <br>\n(c,c') not c×c'. The infix operator × produces the croos-product of two sets.</p>\n<p>Tobias<br>\n<a href=\"/user_uploads/14278/SsKKEuzoB7gIfjj_cBNyHkjs/smime.p7s\">smime.p7s</a></p>",
        "id": 294712163,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661182548
    }
]