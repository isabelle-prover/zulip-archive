[
    {
        "content": "<p>From: Mark Wassell &lt;<a href=\"mailto:mpwassell@gmail.com\">mpwassell@gmail.com</a>&gt;<br>\nHello,</p>\n<p>I have a problem with bindings in a double inductive rule inductive proof.</p>\n<p>The following is a contrived example:</p>\n<p>inductive P :: \"nat ⇒ bool\"<br>\n  and Q :: \"nat ⇒ bool\"<br>\n  where<br>\n  \"Q n ⟹ P (n+1)\"<br>\n| \"P n ⟹ Q (n+1)\"</p>\n<p>lemma<br>\n  fixes x::nat<br>\n  shows \"P n ⟹ Q m ⟹ P (n+m) \"<br>\n         and \"Q n ⟹ Q m1 ⟹ P (n+m1)\"<br>\nproof(induction arbitrary: m m1 rule: P_Q.inducts)<br>\n  case (1 n)<br>\n  then show ?case sorry<br>\nnext<br>\n  case (2 n)<br>\n  then show ?case sorry<br>\nqed</p>\n<p>If I put the cursor at the proof line I see:</p>\n<ol>\n<li>⋀n m. Q n ⟹ (Q m1 ⟹ P (n + m1)) ⟹ Q m ⟹ P (n + 1 + m)</li>\n<li>⋀n. P n ⟹ (⋀m. Q m ⟹ P (n + m)) ⟹ Q m1 ⟹ P (n + 1 + m1)</li>\n</ol>\n<p>m1 is a free variable; m is bound.</p>\n<p>Why is m1 still free even though I have specified that it should be<br>\narbitrary? Including m1 in the arbitrary specification makes no difference<br>\nhowever removing m from the specification does make m free (as expected).</p>\n<p>Cheers</p>\n<p>Mark</p>",
        "id": 294735858,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189764
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nHi Mark,</p>\n<p>try this:</p>\n<p>proof(induction arbitrary: m and m1 rule: P_Q.inducts)</p>\n<p>Does that yield the proof state that you expected?</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294735896,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189776
    },
    {
        "content": "<p>From: Mark Wassell &lt;<a href=\"mailto:mpwassell@gmail.com\">mpwassell@gmail.com</a>&gt;<br>\nHi,</p>\n<p>Yes it does. Thank you.</p>\n<p>Mark</p>",
        "id": 294735907,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189783
    }
]