[
    {
        "content": "<p>From: Mark Wassell &lt;<a href=\"mailto:mpwassell@gmail.com\">mpwassell@gmail.com</a>&gt;<br>\nHello,</p>\n<p>I am having a couple of problems generating code from inductive predicates<br>\nthat involve a type synonym. Attached is a theory file with examples but<br>\nhere is a summary:</p>\n<p>Problem 1. The type synonym is a pair and attempting to use fst in the<br>\ndefinition of the predicate results in</p>\n<p>exception MATCH raised (line 369 of \"pattern.ML\")</p>\n<p>Defining a monomorphic version of fst gets around this problem.</p>\n<p>Problem 2. If I have a slightly different form for the predicate then I get<br>\na 'proof failed' error. The fact that it is attempting to prove can easily<br>\nbe proved with simp.</p>\n<p>Cheers</p>\n<p>Mark<br>\n<a href=\"/user_uploads/14278/D-MrMD43VgexS79-VaFb1b2P/CodeGenQuery.thy\">CodeGenQuery.thy</a></p>",
        "id": 294765195,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661201611
    }
]