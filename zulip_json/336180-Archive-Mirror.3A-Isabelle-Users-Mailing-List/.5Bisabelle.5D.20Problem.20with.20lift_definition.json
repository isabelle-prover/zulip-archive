[
    {
        "content": "<p>From: Stefan Berghofer &lt;<a href=\"mailto:berghofe@in.tum.de\">berghofe@in.tum.de</a>&gt;<br>\nHi all,</p>\n<p>I am currently trying to define variants of the of_nat and of_int functions using the<br>\noperations from HOL/Algebra (see attachment). While the definition of of_nat works as<br>\nexpected, attempting to define of_int using lift_definition leads to the error message<br>\n'No quotient type \"<a href=\"http://Int.int\">Int.int</a>\" found', because int has been de-registered as a quotient<br>\nat the end of Int.thy. Is there a way to re-register int as a quotient type or am I<br>\nnot supposed to do this? Also, has anyone else already tried to define of_nat and of_int<br>\nusing the operations from HOL/Algebra? I have tried to define of_int using a case distinction<br>\non whether the integer is positive or negative, but this leads to rather clumsy proofs.</p>\n<p>Greetings,<br>\nStefan<br>\n<a href=\"/user_uploads/14278/qgBe6xv1w5-5Khf0UfL5dYA8/Test.thy\">Test.thy</a></p>",
        "id": 294243062,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660907803
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Stefan,</p>\n<p>you can re-register deleted quotients with Lifting_Info.update_quotients as follows:</p>\n<p>setup {*<br>\n   Context.theory_map<br>\n     (Lifting_Info.update_quotients<br>\n        @{type_name int}<br>\n        {quot_thm = @{thm Quotient_int}, pcrel_def = NONE})<br>\n*}</p>\n<p>If you want transfer to work properly, you also have to re-install the transfer rules for <br>\nthe operations on int, i.e., declare the lemmas at the end of Int.thy as [transfer_rule].</p>\n<p>Hope this helps,<br>\nAndreas</p>",
        "id": 294243091,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660907814
    }
]