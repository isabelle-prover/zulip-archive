[
    {
        "content": "<p>From: \"Mark A. Hillebrand\" &lt;<a href=\"mailto:mah@dfki.de\">mah@dfki.de</a>&gt;<br>\nHi all,</p>\n<p>I have a really big and quite old Isabelle heap, which I use<br>\nregularly for regression testing a large collection of theories. Using<br>\nthis heap, my attempt to load a specific theory breaks at a (permissive)<br>\nrecdef with an exception trace and an error message [1]. If I start with<br>\na fresh HOL heap and try to load the same theory, the permissive recdef<br>\nworks without the exception trace and just leaves the error message in<br>\nthe form of the (to-be-expected) warning [2] in the log. (In the theory,<br>\njust after the recdef, the termination condition is shown via<br>\nrecdef_tc, but I do not think that matters here).</p>\n<p>Naturally, while I could start out with a fresh heap to avoid the<br>\nerror at least for some time, I would like to understand (and debug)<br>\nthe reasons leading to this behaviour in the first place.</p>\n<p>My guess is that side effects from loading the additional theories in<br>\nthe big heap cause this behaviour.  Also, the big heap might have<br>\ndifferent global options set than the new one (like, as you see, [1] has<br>\nshow_types turned on). I have tried to check the obvious things<br>\n(simpsets, quick_and_dirty, etc.), but now I am a bit at a loss how to<br>\ninvestigate further.</p>\n<p>What other global settings might influence RecdefPackage in the<br>\ndescribed way? How can I compare these settings easily for my two<br>\nheaps?</p>\n<p>Are there any trace options for RecdefPackage which I could turn on?</p>\n<p>Is it possible to print a list of all lemmas with attributes (not just<br>\nthose with [simp] via `print_simpset (the_context());', but also for the<br>\nless used attributes)?</p>\n<p>I use PolyML-5-based Isabelle-2005 on a 64-bit machine; system<br>\nresources should not be a problem in this case. Also, my experience is<br>\nthat Isabelle works reliably with large heaps; so, I would for the<br>\nmoment also exclude plain bit rot for my old heap.</p>\n<p>Thanks for any hints!</p>\n<p>Best regards,</p>\n<p>Mark</p>\n<p>1. ### Trying full Presburger arithmetic ...</p>\n<p>Exception trace for exception - ERROR<br>\n     Rules.prove(3)<br>\n     Prim.postprocess(9)simplify_tc(3)<br>\n     Prim.postprocess(9)loop(5)<br>\n     Prim.postprocess(9)<br>\n     Prim.postprocess(9)<br>\n     Prim.postprocess(9)<br>\n     Prim.postprocess(9)<br>\n     Prim.postprocess(1)(1)(1)(1)<br>\n     Tfl.proof_stage(11)<br>\n     Tfl.simplify_defn(10)<br>\n     Tfl.define_i(10)<br>\n     Tfl.define(9)<br>\n     RecdefPackage.gen_add_recdef(10)<br>\n     o(2)(1)<br>\n     Toplevel.theory(1)(1)<br>\n     History.apply_copy(1)(1)(1)<br>\n     End of trace</p>\n<p>*** Bad final proof state:<br>\n     *** ALL (T::nat) new_init_T::nat.<br>\n     ***    (EX (tinit::tom_conft) tinp::nat =&gt; tom_conf_inputt.<br>\n     ***        new_init_T = Suc (last_JISR_before T tinit tinp) &amp;<br>\n     ***        exists_JISR_below T tinit tinp) --&gt;<br>\n     ***    new_init_T &lt; Suc T<br>\n     ***  1. ALL (T::nat) new_init_T::nat.<br>\n     ***        (EX (tinit::tom_conft) tinp::nat =&gt; tom_conf_inputt.<br>\n     ***            new_init_T = Suc (last_JISR_before T tinit tinp) &amp;<br>\n     ***            exists_JISR_below T tinit tinp) --&gt;<br>\n     ***        new_init_T &lt; Suc T<br>\n     *** 1 unsolved goals!<br>\n     *** Proof failed!<br>\n     *** At command \"recdef\" (line 1086 of \"/tmp/mah/TP2/verification/proof/VAMP/tomasulo_invs_with_interrupts.thy\").</p>\n<p>2. ### Trying full Presburger arithmetic ...<br>\n     ### Bad final proof state:<br>\n     ### ALL T new_init_T.<br>\n     ###    (EX tinit tinp.<br>\n     ###        new_init_T = Suc (last_JISR_before T tinit tinp) &amp;<br>\n     ###        exists_JISR_below T tinit tinp) --&gt;<br>\n     ###    new_init_T &lt; Suc T<br>\n     ###  1. ALL T new_init_T.<br>\n     ###        (EX tinit tinp.<br>\n     ###            new_init_T = Suc (last_JISR_before T tinit tinp) &amp;<br>\n     ###            exists_JISR_below T tinit tinp) --&gt;<br>\n     ###        new_init_T &lt; Suc T<br>\n     ### 1 unsolved goals!<br>\n     ### Proof failed!</p>",
        "id": 294049918,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660818990
    },
    {
        "content": "<p>From: Norbert Schirmer &lt;<a href=\"mailto:schirmer@in.tum.de\">schirmer@in.tum.de</a>&gt;<br>\nHi Mark,</p>\n<p>the problem is the debug-flag. If the debug flag is true, recdef does  <br>\nno longer convert the exception to a warning (don't ask me why)<br>\nand hence the error reaches the toplevel.</p>\n<p>Norbert</p>",
        "id": 294050470,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660819238
    }
]