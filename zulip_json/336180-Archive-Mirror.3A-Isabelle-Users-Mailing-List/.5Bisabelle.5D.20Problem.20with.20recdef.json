[
    {
        "content": "<p>From: Louise Dennis &lt;<a href=\"mailto:l.a.dennis@liverpool.ac.uk\">l.a.dennis@liverpool.ac.uk</a>&gt;<br>\nI'm trying to define a function using recdef and, as far as I can make <br>\nout, the goal preventing the termination proof going through is one that <br>\nI've both already proved and is quickly discharged by simp.</p>\n<p>I include the relevant bit of the theory below and the relevant Isabelle <br>\noutput in the hope that someone can see what I'm missing or suggest some <br>\nway to get closer to the actual problem.</p>\n<p>All the erase_measure_lem lemmas are proofs I've done following previous <br>\nattempts to get the definition through based on output from recdef or <br>\nrecdef_tc erase.</p>\n<p>-- fragment of theory file missing the lemma proofs including <br>\nmiscellaneous lemmas and the recdef definition at the bottom</p>\n<p>lemma erase_measure_lem1 [simp, rule_format]: \"ALL ann_term_list foannat <br>\nfoterm x.<br>\n    (EX t. x = WaveHole t) &amp; x : set ann_term_list --&gt;<br>\n    ann_term_size (WaveHole_dest x)<br>\n    &lt; ann_term_size (WaveFront foannat foterm ann_term_list)\" by simp</p>\n<p>lemma erase_measure_lem2 [simp, rule_format]: \"ALL ann_term_list foannat <br>\nfoterm x.<br>\n    (ALL t. x = WaveHole t) &amp; x : set ann_term_list --&gt;<br>\n    ann_term_size x<br>\n    &lt; ann_term_size (WaveFront foannat foterm ann_term_list)\"<br>\nproof (clarify)<br>\n    some proof<br>\n   qed</p>\n<p>lemma erase_measure_lem3 [simp, rule_format]: \"(EX t. x = WaveHole t) &amp; <br>\nx : set ann_term_list --&gt;<br>\n        ann_term_size (WaveHole_dest x)<br>\n        &lt; ann_term_size (WaveFront foannat foterm ann_term_list)\" by simp</p>\n<p>lemma erase_measure_lem4 [simp, rule_format]: \"ALL ann_term_list foannat <br>\nfoterm x.<br>\n       (ALL t. x ~= WaveHole t) &amp; x : set ann_term_list --&gt;<br>\n       ann_term_size x &lt; ann_term_size (WaveFront foannat foterm <br>\nann_term_list)\"<br>\nproof (clarify)<br>\n     some proof<br>\n    qed</p>\n<p>lemma erase_measure_lem5 [simp, rule_format] : \"ALL anterm_list foterm x.<br>\n       x : set anterm_list --&gt; ann_term_size x &lt; ann_term_size (anApp <br>\nfoterm anterm_list)\"<br>\nproof (clarify)<br>\n some proof<br>\nqed</p>\n<p>recdef (permissive) erase \"measure ann_term_size\"<br>\n  erase_foterm: \"erase (FoTerm (t)) = t\"<br>\n  erase_anApp: \"erase (anApp foterm anterm_list) = foApp foterm (map <br>\nerase anterm_list)\"<br>\n  erase_wf: \"erase (WaveFront foannat foterm ann_term_list) = foApp <br>\nfoterm (map (%x. (if (EX t. x = (WaveHole t)) then (erase (WaveHole_dest <br>\nx)) else (erase x))) ann_term_list)\"<br>\n  erase_wh: \"erase (WaveHole t) = arbitrary\"<br>\n(hints recdef_simp add: erase_measure_lem1 erase_measure_lem2 <br>\nerase_measure_lem3 erase_measure_lem4 erase_measure_lem5)</p>\n<p>-- Isabelle output at this point</p>\n<h3>Trying Presburger arithmetic ...</h3>\n<h3>Trying Presburger arithmetic ...</h3>\n<h3>Proof failed.</h3>\n<h3>ALL ann_term_list foannat foterm x.</h3>\n<h3>(EX t. x = WaveHole t) &amp; x : set ann_term_list --&gt;</h3>\n<h3>ann_term_size (WaveHole_dest x) &lt; ann_term_size (WaveFront</h3>\n<p>foannat foterm ann_term_list)</p>\n<h3>1. ALL ann_term_list foannat foterm x.</h3>\n<h3>(EX t. x = WaveHole t) &amp; x : set ann_term_list --&gt;</h3>\n<h3>ann_term_size (WaveHole_dest x) &lt; ann_term_size (WaveFront</h3>\n<p>foannat foterm ann_term_list)</p>\n<h3>1 unsolved goal(s)!</h3>\n<h3>The error(s) above occurred for the goal statement:</h3>\n<h3>ALL ann_term_list foannat foterm x.</h3>\n<h3>(EX t. x = WaveHole t) &amp; x : set ann_term_list --&gt;</h3>\n<h3>ann_term_size (WaveHole_dest x) &lt; ann_term_size (WaveFront</h3>\n<p>foannat foterm ann_term_list)</p>\n<h3>Trying Presburger arithmetic ...</h3>\n<hr>\n<p>recdef_tc erase</p>\n<p>gets me the Isabelle output</p>\n<p>proof (prove): step 0</p>\n<p>goal (1 subgoal):</p>\n<ol>\n<li>ALL ann_term_list foannat foterm x.<br>\n       (EX t. x = WaveHole t) &amp; x : set ann_term_list --&gt;<br>\n       ann_term_size (WaveHole_dest x) &lt; ann_term_size (WaveFront <br>\nfoannat foterm ann_term_list)</li>\n</ol>\n<p>--</p>\n<p>and</p>\n<p>recdef_tc erase<br>\nproof(simp)</p>\n<p>gets me the Isabelle output</p>\n<p>proof (state): step 1</p>\n<p>goal:<br>\nNo subgoals!</p>\n<p>--</p>\n<p>Any help or advice?</p>\n<p>Louise</p>\n<p>-- <br>\nDr. Louise Dennis, <br>\nDepartment of Computer Science, Room 117, Ashton Building,<br>\nUniversity of  Liverpool, Liverpool, L69 3BX,  UK.<br>\n<a href=\"http://www.csc.liv.ac.uk/~lad/\">http://www.csc.liv.ac.uk/~lad/</a>  phone: +44 151 795 4237</p>",
        "id": 294061039,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660823721
    }
]