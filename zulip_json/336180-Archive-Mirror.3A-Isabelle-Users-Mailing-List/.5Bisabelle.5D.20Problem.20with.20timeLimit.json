[
    {
        "content": "<p>From: Matthias Schmalz &lt;<a href=\"mailto:Matthias.Schmalz@inf.ethz.ch\">Matthias.Schmalz@inf.ethz.ch</a>&gt;<br>\nHi,</p>\n<p>when using timeLimit I sometimes observe that the code executed <em>after</em> <br>\nthe timeLimit raises an Interrupt exception.</p>\n<p>I had a look at the definition of timeLimit:</p>\n<p>fun timeLimit time f x = uninterruptible (fn restore_attributes =&gt; fn () =&gt;<br>\n   let<br>\n     val worker = Thread.self ();<br>\n     val timeout = ref false;<br>\n     val watchdog = Thread.fork (fn () =&gt;<br>\n       (OS.Process.sleep time; timeout := true; Thread.interrupt <br>\nworker), []);</p>\n<p>val result = Exn.capture (restore_attributes f) x;<br>\n     val was_timeout = Exn.is_interrupt_exn result andalso ! timeout;</p>\n<p>val _ = Thread.interrupt watchdog handle Thread _ =&gt; ();<br>\n   in if was_timeout then raise TimeOut else Exn.release result end) ();</p>\n<p>When evaluating \"timeLimit time f x\", I suspect that the \"watchdog\" <br>\nsometimes interrupts the current thread after the evaluation of <br>\n\"(restore_attributes f) x\"; the interrupt is then delayed (thanks to <br>\nuninterruptible) until after the evaluation of \"timeLimit time f x\".</p>\n<p>Do you agree with that explanation?</p>\n<p>It may be important to mention that I used timeLimit to limit the <br>\nexecution of auto and force. The problem arised only with force. When <br>\nthe problem arised, force consumed a lot of memory and much more run <br>\ntime than specified by the timeout.</p>\n<p>-Matthias</p>",
        "id": 294137868,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660844955
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nYes, I had seen this before.  Just after the Isabelle2011 release I've <br>\nspent some time on it again, including in-depth discussion with David <br>\nMatthews to understand the exact Poly/ML runtime behaviour here.</p>\n<p>This resulted in the following changes <br>\n<a href=\"http://isabelle.in.tum.de/repos/isabelle/log/2b92a6943915/src/Pure/Concurrent/time_limit.ML\">http://isabelle.in.tum.de/repos/isabelle/log/2b92a6943915/src/Pure/Concurrent/time_limit.ML</a></p>\n<p>It probably requires some fiddling to port this back to Isabelle2011.</p>\n<p>You can also try Poly/ML 5.4.1-SVN, although it is still in flux.  IIRC, <br>\nDavid had some clarification there in his code as well, that demands less <br>\nadjustment as I did for the official Poly/ML versions.</p>\n<p>Makarius</p>",
        "id": 294137895,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660844962
    },
    {
        "content": "<p>From: Matthias Schmalz &lt;<a href=\"mailto:Matthias.Schmalz@inf.ethz.ch\">Matthias.Schmalz@inf.ethz.ch</a>&gt;<br>\nThanks. Good to know that the problem is fixed. The current situation is <br>\nquite acceptable for me. If the bug causes more problems, I will <br>\nconsider porting the fix to Isabelle2011.</p>\n<p>-Matthias</p>",
        "id": 294137959,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660844985
    }
]