[
    {
        "content": "<p>From: Li Yongjian &lt;<a href=\"mailto:lyj238@gmail.com\">lyj238@gmail.com</a>&gt;<br>\nDear all:<br>\n   I meet some problem as follows:</p>\n<p>datatype scalrValueType=enum string string |index nat | boolV bool | topVal<br>\n| bottomVal</p>\n<p>axiomatization where axiomOnISub [simp,intro ]: \"  I LAST ''-'' [index m,<br>\nindex 1] = index (m - 1)\"</p>\n<p>(*lemma aux2:\"I LAST ''-'' [index( m - 1 ), index 1] = index ((m - 1 ) - 1)<br>\n\"<br>\n  by blast*)</p>\n<p>lemma test2:\"I LAST ''-'' [index( m - 1 ), index 1] = index (m - 2 ) \"<br>\n(<em>by (simp only:aux2,auto)</em>)<br>\nusing nat_1_add_1 by auto</p>\n<p>Q1:  have thought: the lemma test2 can be solved by auto.</p>\n<p>Isablle's sledgehammer also hint me to use the command \"using nat_1_add_1<br>\nby auto\".</p>\n<p>But all the above fail. I' confused about why Isabelle cann't solve the<br>\nlemma automatically.</p>\n<p>I can prove lemma aux2, then use simp only:aux2,auto to solve it.</p>\n<p>Q2: If I add another axiom: axiomatization where axiomOnISub1 [simp,intro<br>\n]: \"  I LAST ''-'' [index m, index n] = index (m - n)\"<br>\nIsabelle can prove lemma test2 automatically by being given the \" by auto\"<br>\ncommand.</p>\n<p>why?</p>\n<p>Here I use ISabelle 2015, and the proof script is attached.</p>\n<p>regars<br>\nlyj<br>\n<a href=\"/user_uploads/14278/iUCP-uawD_qlFmiuojnRDV4J/test.thy\">test.thy</a></p>",
        "id": 294682247,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661177117
    },
    {
        "content": "<p>From: Simon Wimmer &lt;<a href=\"mailto:wimmersimon@gmail.com\">wimmersimon@gmail.com</a>&gt;<br>\nHi Li,</p>\n<p>your observations are all related to simplification.<br>\nTry typing 'apply simp' after the statement of lemma test2.<br>\nYou will get a goal which looks like</p>\n<p>I LAST ''-'' [index (m - Suc 0), index (Suc 0)] = index (m - 2)</p>\n<p>Now, the reason why auto and simp can't go from there is that your<br>\naxiom axiomOnISub doesn't match this format for rewriting because<br>\nit contains the 'index 1' bit instead of 'index (Suc 0)'.</p>\n<p>You have (at least) two options:</p>\n<p>Either you could rewrite your axiom to match this format:<br>\n  I LAST ''-'' [index m, index (Suc 0)] = index (m - 1)<br>\nThen the lemma can be solved 'by simp'.</p>\n<p>Or you pass the axiom as a chained fact to the simplifier, which<br>\nwill have the effect that is processed by simplification first as well.<br>\nThis will rewrite '1' to 'Suc 0' and then the rule can be applied.<br>\nThis works by writing 'using axiomOnISub by simp'.</p>\n<p>Simon</p>",
        "id": 294682260,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661177119
    }
]