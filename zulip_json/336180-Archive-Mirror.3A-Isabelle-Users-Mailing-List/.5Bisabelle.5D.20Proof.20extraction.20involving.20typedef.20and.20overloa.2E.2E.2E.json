[
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\n[This thread has become too volumnious to be followed in detail by a<br>\ncasual bystander, so I try here with »one issue – one mail«.]</p>\n<p>I did a glimpse at Alexander Krauss and Andreas Schropp, A mechanized<br>\ntranslation from higher-order logic to set theory. According to my<br>\nknowledge this had been the definite reference for taming overloading<br>\nand typedef until recently.</p>\n<p>The critical passages are:</p>\n<p>»Abstracting  out  unresolvable  overloading  would  give  rise  to<br>\ndependent  types.<br>\nThis  is  no  problem  in  the  set-theoretic  interpretation,  but  as<br>\n the  overloading<br>\nelimination is currently implemented as a preprocessing step on the HOL<br>\nside,<br>\nit does not handle such overloading. This can be fixed by collapsing the<br>\ndiffer-<br>\nent parts of the translation. However, to remove unresolvable<br>\noverloading from<br>\ntype definitions while staying in HOL, one has to eliminate the type<br>\ndefinition<br>\naltogether, replacing it by its representing type together with a predicate.<br>\nIt appears that this subtle issue was overlooked in all proof sketches<br>\nof con-<br>\nservativity of overloading so far. Practically, this form of overloading<br>\nseems  to  be  quite  rare.  It  does  not  occur  in  the  main  HOL<br>\nimage,  but  a  few<br>\ninstances exist in the HOLCF development.«</p>\n<p>»The fact that we uncovered a notable omission in all previous proofs of<br>\nconservativity of overloading shows that our approach of »implemented<br>\nsemantics« is also useful for better understanding the logical system.«</p>\n<p>Has anyone tried to apply proof extraction to a »inconsistent typedef«<br>\nexample? According to my blurry understanding of the whole picture this<br>\nshould fail then!? Maybe this would deserve a reference.</p>\n<p>Cheers,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/Px5mBxM03B6AR4_qYGfJBBOi/signature.asc\">signature.asc</a></p>",
        "id": 294653401,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661167039
    }
]