[
    {
        "content": "<p>From: Holger Blasum &lt;<a href=\"mailto:hbl@sysgo.com\">hbl@sysgo.com</a>&gt;<br>\nDear Makarius,</p>\n<blockquote>\n<p>This is the last chance to report any problems before the official<br>\nrelease of Isabelle2012.</p>\n</blockquote>\n<p>if, using RC-3 (linux 32 bit), and jedit I edit a new theory, say \"test.thy\":</p>\n<p>theory test<br>\n        imports Main<br>\n    begin<br>\n    lemma shows \"True\" proof-   </p>\n<p>And then intend to outcomment the proof attempt by inserting \"(*\" before the<br>\nlemma, and \"*)\" after the lemma, that is I want to get </p>\n<p>theory test<br>\n        imports Main<br>\n    begin<br>\n    (* lemma shows \"True\" proof- *)</p>\n<p>then after inserting the \"(*\", I get \"Outer syntax error: <br>\ncommand expected, but bad input (* was found\". Apparently this is <br>\nbecause jedit still assumes that in this scenario I want to be in <br>\nprove mode, while of course by outcommenting it I wanted to abandon <br>\nthe proof attempt. While this is sth I can live with, is it<br>\ndesired or necessary behavior or sth that ought to be reported?</p>\n<p>Best,</p>",
        "id": 294157808,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660851959
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe behaviour is a consequence how the parser of text changes works, so it <br>\nis necessary in that sense.  It is also officially specified as a feature <br>\nin the REAME:</p>\n<p>Incremental reparsing sometimes produces unexpected command spans.<br>\n   Workaround: Cut/paste larger parts or reload buffer.</p>\n<p>This does not mean the specification could not be improved. Compared to <br>\nIsabelle2011-1 it is already slightly better in Isabelle2012, and is <br>\nanticipated to improve further.</p>\n<p>Makarius</p>",
        "id": 294157883,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660851977
    },
    {
        "content": "<p>From: Holger Blasum &lt;<a href=\"mailto:hbl@sysgo.com\">hbl@sysgo.com</a>&gt;</p>\n<blockquote>\n<p>Incremental reparsing sometimes produces unexpected command spans.<br>\n  Workaround: Cut/paste larger parts or reload buffer.</p>\n</blockquote>\n<p>Ok, thanks, works. For the record:</p>\n<p>If the cursor <em>is not</em> at the end of the theory text<br>\n(1) cutting out the entire freshly out-commented section, in our <br>\ncase \"(* lemma shows \"True\" proof- *)\", <br>\n(2) then repasting it <br>\n==&gt; Exits proof mode and also clears the output window.</p>\n<p>If the cursor <em>is</em> at the end of the theory text<br>\nDoing (1) and (2) above, <br>\n==&gt; Again, exits proof mode. <br>\nIn this case, in the \"Output\" window the syntax error <br>\nmessage persists, but I can simply ignore it and just type <br>\non until the system overwrites the output buffer either by a new <br>\nerror message or by an empty string (e.g. after accepting a <br>\nsuccessful declaration).</p>\n<p>Of course, as the README mentions, there is also the option of <br>\n\"File -&gt; Reload\", but it involves saving and for me feels more <br>\ndisruptive to workflow.</p>\n<p>Best,</p>",
        "id": 294157903,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660851990
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Fri, 18 May 2012, Holger Blasum wrote:</p>\n<blockquote>\n<blockquote>\n<p>Incremental reparsing sometimes produces unexpected command spans.<br>\n  Workaround: Cut/paste larger parts or reload buffer.</p>\n</blockquote>\n<p>If the cursor <em>is not</em> at the end of the theory text<br>\n(1) cutting out the entire freshly out-commented section, in our<br>\ncase \"(* lemma shows \"True\" proof- *)\",<br>\n(2) then repasting it<br>\n==&gt; Exits proof mode and also clears the output window.</p>\n<p>If the cursor <em>is</em> at the end of the theory text<br>\nDoing (1) and (2) above,<br>\n==&gt; Again, exits proof mode.<br>\nIn this case, in the \"Output\" window the syntax error<br>\nmessage persists, but I can simply ignore it and just type<br>\non until the system overwrites the output buffer either by a new<br>\nerror message or by an empty string (e.g. after accepting a<br>\nsuccessful declaration).</p>\n</blockquote>\n<p>This is probably an instance of the known incident where the Output panel <br>\nis not updated automatically as expected.  One needs to press the \"Update\" <br>\nbutton manually in such situations.</p>\n<p>The coupling of the output window with the cursor movement in the source <br>\nbuffer is sub-optimal in several ways.  E.g. it is often unclear to which <br>\npart of the source text the output actually refers.</p>\n<p>This arrangement stems from very early versions of Isabelle/jEdit from <br>\nabout 2-3 years ago.</p>\n<blockquote>\n<p>Of course, as the README mentions, there is also the option of \"File -&gt; <br>\nReload\", but it involves saving and for me feels more disruptive to <br>\nworkflow.</p>\n</blockquote>\n<p>When you say \"workflow\" it sounds like such exceptional situations of <br>\nincremental parsing would occur very often.</p>\n<p>Note that it can only happen when you change the \"polarity\" of quoted <br>\nmaterial, especially (* ... <em>) and {</em> ... *}.  The current line is always <br>\nreparsed fully.</p>\n<p>Your original motivation was to abandom a proof attempt temporarily. <br>\nThis can be done formally via the 'oops' command.  Comments are relatively <br>\nrare in formal text anyway, more like % in latex.  (Which does not mean <br>\nthat formal text {* ... *} is not subject to the same problem.)</p>\n<p>Makarius</p>",
        "id": 294158213,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660852119
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nOn 20.05.2012 21:28, Makarius wrote:</p>\n<blockquote>\n<p>On Fri, 18 May 2012, Holger Blasum wrote:</p>\n<blockquote>\n<blockquote>\n<p>Incremental reparsing sometimes produces unexpected command spans.<br>\nWorkaround: Cut/paste larger parts or reload buffer.</p>\n</blockquote>\n<p>If the cursor <em>is not</em> at the end of the theory text<br>\n(1) cutting out the entire freshly out-commented section, in our<br>\ncase \"(* lemma shows \"True\" proof- *)\",<br>\n(2) then repasting it<br>\n==&gt; Exits proof mode and also clears the output window.</p>\n<p>If the cursor <em>is</em> at the end of the theory text<br>\nDoing (1) and (2) above,<br>\n==&gt; Again, exits proof mode.<br>\nIn this case, in the \"Output\" window the syntax error<br>\nmessage persists, but I can simply ignore it and just type<br>\non until the system overwrites the output buffer either by a new<br>\nerror message or by an empty string (e.g. after accepting a<br>\nsuccessful declaration).<br>\n[...]<br>\nOf course, as the README mentions, there is also the option of \"File<br>\n-&gt; Reload\", but it involves saving and for me feels more disruptive to<br>\nworkflow.</p>\n</blockquote>\n<p>When you say \"workflow\" it sounds like such exceptional situations of<br>\nincremental parsing would occur very often.</p>\n</blockquote>\n<p>At least for my working style (I am often changing things in the middle <br>\nof a theory file), this situation is far from being exceptional. Take <br>\ne.g. this multi-line definition:</p>\n<p>definition K33 :: \"('a, 'a × 'a) pre_graph ⇒ bool\" (\"K⇣3⇣3\") where<br>\n   \"K33 G ≡ sym_pair_digraph G ∧ card (verts G) = 6 ∧<br>\n     (∃U ⊆ verts G. ∃V ⊆ verts G. U ∪ V = verts G ∧ card U = 3 ∧ card V <br>\n= 3 ∧<br>\n       (∀u ∈ U. ∀v ∈ V. (u, v) ∈ edges G ∧ (v, u) ∈ edges G) ∧<br>\n       (∀u ∈ U. ∀u' ∈ U. (u, u') ∉ edges G) ∧<br>\n       (∀v ∈ V. ∀v' ∈ V. (v, v') ∉ edges G))\"</p>\n<p>Now, if I input 'term \"x', give it time to reparse and just then add the <br>\nclosing '\"', the definition of K33 is not parsed anymore. And if I am in <br>\nsuch a situation, the incremental reparsing goes wrong every few minutes.</p>\n<p>(The cut-and-repaste workaround is non-disruptive enough that I am fine <br>\nwith it. If the only workaround I knew would be reloading (and thus <br>\nreproving and losing Undo and a lot of time), I would probably switch <br>\nback to Proof General).</p>\n<blockquote>\n<p>Your original motivation was to abandom a proof attempt temporarily.<br>\nThis can be done formally via the 'oops' command.</p>\n</blockquote>\n<p>Not for nested proofs. Also, I have another common use-case for <br>\ncommenting out lemmas: I want to see what breaks, when a lemma is gone.</p>\n<p>-- Lars</p>",
        "id": 294158397,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660852201
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nI am afraid I was in this situation earlier on and I just gave up on jedit. The<br>\ntheory was small, so it was not a question of cut-and-paste vs reload, but my<br>\nworkflow was seriously disrupted by having to do something special every few<br>\nminutes to make jedit happy. It is also confusing to novices because you keep<br>\nstaring at your text thinking there is something wrong with it although there isn't.</p>\n<p>Tobias</p>",
        "id": 294158647,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660852296
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI need to recall some Isabelle/jEdit history here: for 4 years or so I've <br>\nbeen trying desparately make a future beyond Proof General / Emacs happen. <br>\nIn Isabelle2012 it is now the second stable release of it, after the one <br>\nof Isabelle2011-1.  The quality of the result critically depends on <br>\nfeedback by early adopters, not silently giving things up.</p>\n<p>So far I've often had the impression that many peoples don't want to go <br>\nbeyond Proof General at all.  This is fine.  They only need to organize <br>\nthemselves to maintain Proof General in the future, because I have stopped <br>\nworking on it myself in October 2011.  (For the Isabelle2012 release I've <br>\ninvested the canonical 2 weeks of brushing up PG/Emacs into the Windows <br>\ninstaller.)</p>\n<p>So for me there is no way looking back.  I hope to get more constructive <br>\nfeedback on Isabelle/jEdit in the future, and find time to work on the <br>\nsmall and big things that still need to be done.</p>\n<p>Makarius</p>",
        "id": 294158665,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660852302
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nAm 22/05/2012 10:46, schrieb Makarius:</p>\n<blockquote>\n<p>On Tue, 22 May 2012, Tobias Nipkow wrote:</p>\n<blockquote>\n<blockquote>\n<p>(The cut-and-repaste workaround is non-disruptive enough that I am fine with<br>\nit. If the only workaround I knew would be reloading (and thus reproving and<br>\nlosing Undo and a lot of time), I would probably switch back to Proof General).</p>\n</blockquote>\n<p>I am afraid I was in this situation earlier on and I just gave up on jedit.<br>\n</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>The quality of the result critically depends on feedback by<br>\nearly adopters, not silently giving things up.</p>\n</blockquote>\n<p>I don't think my email was silent, or was it? It was the direct reaction to a<br>\njedit session. And to clarify what I said: I gave up on jedit for that session,<br>\nnot for good. I have no doubt that these problems can be surmounted.</p>\n<blockquote>\n<p>So far I've often had the impression that many peoples don't want to go beyond<br>\nProof General at all.</p>\n</blockquote>\n<p>I do, otherwise I wouldn't be using jedit in teaching and have also started to<br>\nuse it for my research.</p>\n<blockquote>\n<p>I hope to get more constructive<br>\nfeedback on Isabelle/jEdit in the future, and find time to work on the small and<br>\nbig things that still need to be done.</p>\n</blockquote>\n<p>I'm not sure what kind of contructive criticism I am supposed to give if<br>\nsomething does not work. My email was meant emphasize what Lars had already<br>\nexpressed: namely that what you call \"exceptional situations of incremental<br>\nparsing\" can occur frequently. Lars is happy with the cut-and-repaste<br>\nworkaround, but I prefer not needing a workaround.</p>\n<p>Tobias</p>",
        "id": 294158684,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660852309
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI also prefer not requiring such workarounds, but for me this feature only <br>\noccurrs in exceptional situations.  This is why it got a lower priority in <br>\nthe list of things to work on.</p>\n<p>Since the balancing problem of quotes/comments is a common problem of <br>\nIDEs, maybe someone on the mailing list can point to solutions that other <br>\npeople have found for it.  For example, Netbeans makes it hard to type <br>\nunbalanced quotes/comments at all by closing the range immediately, but I <br>\ndid not like the mechanics of it very much.</p>\n<p>Makarius</p>",
        "id": 294158716,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660852322
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nFor quotes such an auto-closing feature sounds fairly natural and useful,<br>\nalthough this is just a gut reaction. For comments it won't be so helpful<br>\nbecause one often wants to comment out already existing text (whereas I never<br>\nwant to quote existing unquoted text).</p>\n<p>Tobias</p>",
        "id": 294158766,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660852327
    }
]