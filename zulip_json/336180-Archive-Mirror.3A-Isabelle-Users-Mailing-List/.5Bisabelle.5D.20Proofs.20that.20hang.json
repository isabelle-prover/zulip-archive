[
    {
        "content": "<p>From: Jesper Bengtson &lt;<a href=\"mailto:jesperb@it.uu.se\">jesperb@it.uu.se</a>&gt;<br>\nGreetings</p>\n<p>In my current formalisation I have a relation which is created through  <br>\nsome quite trivial rules. It's an equivalence relation, it is a  <br>\ncongruence, it's idempotent and it has one or two more obscure rules.  <br>\nThe problem is that these rules are inherently symmetric -- especially  <br>\nrules regarding associativity and commutativity of one of the  <br>\noperators and I am having a hard time to have Isabelel automatically  <br>\nverify proofs even though they are seemingly quite simple. Doing it by  <br>\nhand works, but it's a bit of a pain.</p>\n<p>My question is basically if there is a way to reason about these types  <br>\nof relations automatically in Isabelle where the automatic tactics get  <br>\nstuck on symmetries.</p>\n<p>Thank you for your time.</p>\n<p>Jesper Bengtson</p>",
        "id": 294059395,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660822997
    },
    {
        "content": "<p>From: Tjark Weber &lt;<a href=\"mailto:tjark.weber@gmx.de\">tjark.weber@gmx.de</a>&gt;<br>\nJesper,</p>\n<p>Isabelle uses ordered rewriting.  Permutative rules, e.g. commutativity, are <br>\napplied only if this results in a \"smaller\" (with respect to some fixed <br>\nlexicographic order on terms) term.</p>\n<p>For an associative and commutative operator f, you should add not only <br>\nassociativity and commutativity to the set of default rewrite rules, but also <br>\na derived rule, left-commutativity: f(x, f(y, z)) = f(y, f(x, z)).  Please <br>\nsee Section 9.1.1 of the Isabelle/HOL tutorial for further details.</p>\n<p>Since ordered rewriting should prevent the simplifier from \"getting stuck\" on <br>\nsymmetries, loops are probably due to more complex interaction between <br>\ndifferent rewrite rules.  Maybe try \"Isabelle &gt; Settings &gt; Trace Simplifier\" <br>\nin ProofGeneral to see which rules are getting used.  \"apply (simp del: XXX)\" <br>\nand \"apply (simp only: XXX)\" (see Section 3.1.4 of the Isabelle/HOL tutorial) <br>\nmight also be useful to locate the problem.</p>\n<p>I hope this answers your question.  Otherwise could you maybe supply a <br>\nconcrete example of a proof that hangs?</p>\n<p>Best,<br>\nTjark</p>",
        "id": 294059405,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660823007
    }
]