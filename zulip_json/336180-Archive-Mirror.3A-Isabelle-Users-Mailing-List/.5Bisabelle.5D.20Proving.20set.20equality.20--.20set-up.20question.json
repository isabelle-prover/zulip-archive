[
    {
        "content": "<p>From: René Neumann &lt;<a href=\"mailto:rene.neumann@in.tum.de\">rene.neumann@in.tum.de</a>&gt;<br>\nHi,</p>\n<p>when proving some set equality \"A = B\", I'd like to use a lemma like</p>\n<p>lemma set_eqI__comp: (* = subset_antisym[OF subsetI subsetI] *)<br>\n  \"⟦ ⋀x. x ∈ A ⟹ x ∈ B; ⋀x. x ∈ B ⟹ x ∈ A ⟧ ⟹ A = B\"<br>\nby blast</p>\n<p>Unfortunately, this is not in the regular intro-set, hence \"proof\" would<br>\napply subset_antisym only, requiring a little bit more boilerplate to<br>\nreach the final setup.</p>\n<p>Before I put such a rule in my Misc.thy with a nice [intro!], I'd like<br>\nto ask if there is a reason not to: Because, normally there is a reason<br>\nfor something being the way it is in Isabelle/HOL :)</p>\n<p>Thanks,<br>\nRené<br>\n<a href=\"/user_uploads/14278/SSGo-QkRAR21DIpS6x64cdgK/smime.p7s\">smime.p7s</a></p>",
        "id": 294228556,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901243
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nIn the worst case it is a historical reason ... but not here.</p>\n<p>I can't say on the spot if and how that rule can be made implicit as some <br>\nform of intro in a central place.</p>\n<p>Note that \"the regular intro-set\" actually consists of several sub-parts <br>\nwith different priorities.  There is even a split into Pure.intro and <br>\nHOL.intro etc.  Various tools project from that information in slightly <br>\ndifferent ways.</p>\n<p>You say \"nice\" [intro!] but that would affect automated tools, splitting <br>\nup goals in an aggressive way without backtracking.  It will probably <br>\nmess-up the normal automated process of fast, blast, auto.  Larry <br>\nintroduced these concepts quite successfully some decades ago, and I <br>\nrecently refurbished his old reference manual.  In Isabelle2012 it is <br>\nchapter \"9.4 The Classical Reasoner\" in the isar-ref manual for the core <br>\nconcepts of intro/elim/dest.</p>\n<p>The single \"rule\" steps of 'proof' and '..' use the intro/elim/dest <br>\ndeclarations slightly differently.  Pure.intro/elim/dest allow to provide <br>\nfurther single-step rules without affecting the automated tools.  So you <br>\nprobably need one of these here.</p>\n<p>It requires some experimentation and study of the existing rule <br>\ndeclarations what works smoothly for most applications.  See also the <br>\nprint_claset and print_rules commands (although they will swamp you with <br>\ntons of output).</p>\n<p>Makarius</p>",
        "id": 294228592,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901265
    }
]