[
    {
        "content": "<p>From: S W &lt;<a href=\"mailto:s.wong.731@googlemail.com\">s.wong.731@googlemail.com</a>&gt;<br>\nHi,</p>\n<p>I was wondering whether Isabelle can prove theorems bridging between two<br>\ntheories. For example, if I have A.thy and B.thy, can I prove that there is<br>\na constant c in A that equals to v, while c in B doesn't equal to v? A and B<br>\ncan't be merged into one because together they'd be inconsistent.</p>\n<p>Could locales be used here? It seems to me that: \"locale C = A + B\" would<br>\nmerge A and B together to form C. Perhaps another operator could be used to<br>\nindicate that two locales are involved in the proof, but are not imported.<br>\nIs there a better way for proving bridging theorems? If not, would it make<br>\nsense for me to implement such an operator in ML? How much effort do you<br>\nthink the implementation will require?</p>\n<p>Thanks<br>\nSteve</p>",
        "id": 294092570,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660832330
    },
    {
        "content": "<p>From: Steve W &lt;<a href=\"mailto:s.wong.731@googlemail.com\">s.wong.731@googlemail.com</a>&gt;<br>\nHi,</p>\n<p>I'm reposting a question from earlier:</p>\n<p>I was wondering whether Isabelle can prove theorems bridging between two<br>\ntheories or locales. For example, if I have A.thy and B.thy, can I prove<br>\nthat there is a constant c in A that equals to v, while c in B that doesn't<br>\nequal to v? A and B can't be merged into one because together they'd be<br>\ninconsistent.</p>\n<p>Could locales be used here? It seems to me that: \"locale C = A + B\" would<br>\nmerge A and B together to form C. Perhaps another operator could be used to<br>\nindicate that two locales are involved in the proof, but are not imported.<br>\nIs there a better way for proving bridging theorems? If not, would it<br>\nnecessary for me to implement such an operator in ML? How much effort should<br>\nthe implementation require?</p>\n<p>Thanks<br>\nSteve</p>",
        "id": 294092937,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660832451
    }
]