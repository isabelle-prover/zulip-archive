[
    {
        "content": "<p>From: <a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a><br>\nFrom: Re: [isabelle] rigorous axiomatic geometry proof in Isabelle</p>\n<p>On 5/30/2012 11:12 PM, Bill Richter wrote:</p>\n<blockquote>\n<p>...Let me make a rudimentary FOL point:</p>\n<p>I think writing down strict axiomatic FOL proofs would really be<br>\ntedious because e.g. you have manually substitute variables every time<br>\nyou want to use an axiom.</p>\n</blockquote>\n<p>(Preliminary Comment): In my mind, I'm doubting that the so-called <br>\nfirst-order language of Zermelo-Frankael set theory does in fact give <br>\none the ability to completely state and prove set theory as a <br>\nfirst-order language, primarily because of the absence in the symbols <br>\nof  FOL to name constants in relation to FOL formulas. This sentence, <br>\nhowever, should be ignored, since I'm sitting on a question about that.</p>\n<p>Listing the books below is the purpose of this reply.</p>\n<blockquote>\n<p>Also, as you may have observed on hol info, I know next to nothing<br>\nabout HOL... Where is a good place to learn about HOL?</p>\n</blockquote>\n<p>I am a \"book collecting\" step ahead of you when it comes to learning <br>\nIsabelle/HOL, which I consider necessary to use Isabelle. My primary <br>\ninterest is not in HOL but in the first-order language of ZF sets. <br>\nHowever, it's occurred to me that Isabelle/HOL can probably be used as a <br>\nmeta-language to implement any object-language that I'll be interested <br>\nin. Additionally, and maybe of more importance, is the need in <br>\nmathematics for a solid implementation of a number system. I gather that <br>\nimplementing a number system that's useful in a theorem prover is a very <br>\ndifficult thing to do, and it appears that the Isabelle group has put <br>\nput a whole lot of work in doing that in Isabelle/HOL. It also appears <br>\nthat most of the tool support and code development is going into <br>\nIsabelle/HOL.</p>\n<p>Anyway, no one has told me this, but it appears that to understand <br>\nIsabelle/HOL in depth, you need to understand a combination of subjects:</p>\n<p>1) Natural deduction logic<br>\n2) Lambda calculus<br>\n3) Typed lambda calculus, some of it coming from a non-constructivist <br>\nviewpoint<br>\n4) The ML programming language<br>\n5) The meta-logic of Isabelle/Pure</p>\n<p>As to the minimum a person needs to know to be successful with Isabelle, <br>\nI don't know what that is. Whatever the minimum is, I'm not there yet.</p>\n<p>Below are a list of books and documents that I've found. I don't provide <br>\nlinks to Amazon because the Amazon URLs get long, and the list server <br>\nconverts all HTML links to the actual URL.</p>\n<p>-----NATURAL DEDUCTION LOGIC---</p>\n<p>NOTE: You won't find much natural deduction in logic books written by <br>\nmathematicians. They primarily use truth-table based logic.</p>\n<p>\"Proof and Disproof in Formal Logic\", by Richard Bornat (Amazon)<br>\n         This books is what I'm working through. Some of it's written like<br>\n         \"An Idiot's Guide to Natural Deduction\", but it's still good, <br>\nand there's<br>\n         the Jape prover for doing some natural deduction exercises.<br>\n<a href=\"http://www.cs.ox.ac.uk/people/bernard.sufrin/personal/jape.org/\">http://www.cs.ox.ac.uk/people/bernard.sufrin/personal/jape.org/</a></p>\n<p>\"Mathematical Logic\", by Ian Chiswell &amp; Wilfrid Hodges (Amazon)<br>\n         Covers natural deduction, but it also hits on a related logic, <br>\nsequent calculus, that gets<br>\n         referred to in the Isabelle literature.</p>\n<p>\"Logic for Computer Science\", by Jean H. Gallier (Amazon)<br>\n         More advanced. I use it to try and find unfamiliar terminology.</p>\n<p>\"Natural Deduction\", by Dag Prawitz (Amazon)<br>\n         One of the first books (or the first) on natural deduction. I <br>\nuse it to try and find unfamiliar terminology.</p>\n<p>\"Logic for Computer Science\", by Steve Reeves and Mike Clarke (Amazon)<br>\n         Covers natural deduction, but also hits on \"semantic tableaux\", <br>\nwhich gets referred to in the Isabelle literature.<br>\n<a href=\"http://en.wikipedia.org/wiki/Method_of_analytic_tableaux\">http://en.wikipedia.org/wiki/Method_of_analytic_tableaux</a></p>\n<p>---LAMBDA CALCULUS &amp; TYPED LAMBDA CALCULUS---</p>\n<p>NOTE: I separated lambda calculus from typed lambda calculus because <br>\nthere are books for typed lambda calculus that take a strong, <br>\nconstructivist approach, and some of these books don't apply as much. <br>\nWhat you're looking for is simply typed lambda calculus.</p>\n<p>\"An Introduction to Functional Programming through Lambda Calculus\", by <br>\nGreg Michaelson (Amazon)<br>\n       Written to be \"super friendly\", it uses a combination of <br>\npseudo-programming syntax and<br>\n       lambda calculus syntax. It works through examples with an <br>\nobnoxious level of detail which<br>\n       serve their purpose to drive the points in.</p>\n<p>\"Type Theory &amp; Functional Programming\", by Simon Thompson (Amazon)<br>\n       Has intro chapters on propositional logic, first-order logic, and <br>\nlambda-calculus. It<br>\n       ties together logic, lambda-calculus, and functional programming, <br>\nand it emphasizes<br>\n       types as proofs, and proofs as types.</p>\n<p>\"Basic Simple Type Theory\", by J. Roger Hindley (Amazon)<br>\n       A more formal, mathematical treatment. Gets to typed lambda <br>\ncalculus fairly fast.</p>\n<p>\"Lambda-Calculus and Combinators - an Introduction\", by Hindley &amp; Seldin <br>\n(Amazon)<br>\n      Has some of the same material as Hindley's books above, but has <br>\ntoo much on<br>\n      combinatory logic.</p>\n<p>\"Foundations of Functional Programming\", by Lawrence Paulson<br>\n      A quick summary of lambda calculus.<br>\n<a href=\"http://www.cl.cam.ac.uk/~lp15/papers/Notes/Founds-FP.pdf\">http://www.cl.cam.ac.uk/~lp15/papers/Notes/Founds-FP.pdf</a></p>\n<p>\"Introduction to Lambda Calculus\", by Henk Barendregt &amp; Erik Barendsen <br>\n(Amazon)</p>\n<p>\"Lambda Calculi with Types\", by Henk Barendregt (Amazon)</p>\n<p>\"Types and Programming Language\", by Benjamin C. Pierce (Amazon)</p>\n<p>\"Lecture Notes on Lambda Calculus\", by Peter Selinger<br>\n<a href=\"http://www.mscs.dal.ca/~selinger/papers/lambdanotes.pdf\">http://www.mscs.dal.ca/~selinger/papers/lambdanotes.pdf</a></p>\n<p>---ML PROGRAMING LANGUAGE---</p>\n<p>NOTE: The great thing about learning ML is that you can do your little <br>\ncode snippets in Isabelle. Just use the command \"ML{* ...code... *}\".</p>\n<p>\"ML for the Working Programmer\", 2nd, by Larry Paulson (Amazon)</p>\n<p>\"Programming in Standard ML '97\", by Stephen Gilmore<br>\n<a href=\"http://homepages.inf.ed.ac.uk/stg/NOTES/\">http://homepages.inf.ed.ac.uk/stg/NOTES/</a></p>\n<p>\"Introduction to Functional Programming\", by Mike Gordon<br>\n<a href=\"http://www.cl.cam.ac.uk/~mjcg/Teaching/FuncProg/Notes/\">http://www.cl.cam.ac.uk/~mjcg/Teaching/FuncProg/Notes/</a></p>\n<p>\"Programming in Standard ML\", by Robert Harper<br>\n<a href=\"http://www.cs.cmu.edu/~rwh/smlbook/\">http://www.cs.cmu.edu/~rwh/smlbook/</a></p>\n<p>\"Notes on Programming Standard ML of New Jersey\", by Riccardo Pucella<br>\n<a href=\"http://www.ccs.neu.edu/home/riccardo/research.html\">http://www.ccs.neu.edu/home/riccardo/research.html</a></p>\n<p>\"Elements of ML Programming\", by Jeffrey D. Ullman (Amazon)</p>\n<p>---META-LOGIC OF ISABELLE/PURE---</p>\n<p>NOTE: I'll ask the list someday what documents explain the meta-logic, <br>\nbut here's some docs that appear to explain the meta-logic to varying <br>\ndegrees.</p>\n<p>Paulson: <a href=\"http://www.cl.cam.ac.uk/~lp15/papers/refereed.html\">http://www.cl.cam.ac.uk/~lp15/papers/refereed.html</a><br>\n        Isabelle - The Next 700 Theorem Provers<br>\n       The Foundation of a Generic Theorem Prover</p>\n<p>Urban: <a href=\"http://www.inf.kcl.ac.uk/staff/urbanc/Cookbook/\">http://www.inf.kcl.ac.uk/staff/urbanc/Cookbook/</a><br>\n       The Isabelle Cookbook</p>\n<p>Wenzel: <a href=\"http://www4.in.tum.de/~wenzelm/papers/\">http://www4.in.tum.de/~wenzelm/papers/</a><br>\n       Isabelle/Isar - A Generic Framework for Human-Readable Proof <br>\nDocuments<br>\n       Isabelle/Isar - A versatile environment for human-readable formal <br>\nproof documents</p>\n<p>From the Isabelle2012 release:<br>\n      Old Introduction to Isabelle<br>\n      The Isabelle/Isar Reference Manual<br>\n      A Proof Assistant for Higher-Order Logic</p>\n<p>---BEST BOOK I'VE FOUND SO FAR---</p>\n<p>\"Principles of Mathematical Analysis, with a Friendly Introduction to <br>\nNatural Deduction &amp; Typed Lambda Calculus, and How to Implement <br>\nMathematical Proof in Isabelle2012, for the Working Mathematician, 4th <br>\nEdition\", by Walter Rudin (Amazon)</p>\n<p>--GB</p>",
        "id": 294163590,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854134
    },
    {
        "content": "<p>From: <a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a><br>\nThis last part was supposed to be a joke on my part, but I forgot that <br>\nthis is an international community, that Rudin's book is not a standard <br>\ntextbook everywhere, that not everyone would know that it was first <br>\npublished many years ago, and that not everyone would be aware that <br>\nRudin is deceased.</p>\n<p>--GB</p>",
        "id": 294163719,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854198
    },
    {
        "content": "<p>From: Jens Doll &lt;<a href=\"mailto:jd@cococo.de\">jd@cococo.de</a>&gt;<br>\nHello Gottfried,</p>\n<p>let me answer the subject partially: Besides of real world understanding <br>\nand learning by oneself there also some books which could help you <br>\nclarify your (an other people's) thinking. The basic ones are listed at <br>\n<a href=\"http://cococo.de/Context_IT_GmbH/index.jsp?content=columbo&amp;detail=literatur\">http://cococo.de/Context_IT_GmbH/index.jsp?content=columbo&amp;detail=literatur</a> <br>\nand are structured in a certain way.  Sorry for missing translations ...</p>\n<p>Jens</p>",
        "id": 294164832,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854336
    }
]