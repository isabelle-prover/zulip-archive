[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt;<br>\nHi,</p>\n<p>I have defined some datatype using typedef, it encapsulates some<br>\ndata-structure together with its invariant, for example distinct lists<br>\n(used to implement sets here):</p>\n<p>typedef 'a lset = \"{ l::'a list . distinct l }\"</p>\n<p>by auto</p>\n<p>On this, I can define operations, e.g.:</p>\n<p>definition \"ls_empty == Abs_lset []\"</p>\n<p>definition \"ls_\\&lt;alpha&gt; l == set (Rep_lset l)\"</p>\n<p>definition \"ls_memb x l == x mem (Rep_lset l)\"</p>\n<p>definition \"ls_ins x l == if ls_memb x l then l else Abs_lset (x #<br>\nRep_lset l)\"</p>\n<p>...</p>\n<p>My question is, how to setup the code generator such that it implements \"'a<br>\nlset\" by \"'a list\", or, in general, in the same way as it would<br>\nimplement the underlying datatype ?</p>\n<p>With no further ado, the code generator complains about missing code<br>\nequations:</p>\n<p>export_code ls_empty ls_memb ls_ins in SML file -</p>\n<p>*** No code equations for Rep_lset, Abs_lset</p>\n<p>*** At command \"export_code\".</p>\n<p>Regards and thanks in advance for any help/pointers to examples<br>\n  Peter</p>",
        "id": 294092180,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660832201
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt;<br>\nHi,</p>\n<p>I have defined some datatype using typedef, it encapsulates some<br>\ndata-structure together with its invariant, for example distinct lists<br>\n(used to implement sets here):</p>\n<p>typedef 'a lset = \"{ l::'a list . distinct l }\"</p>\n<p>by auto</p>\n<p>On this, I can define operations, e.g.:</p>\n<p>definition \"ls_empty == Abs_lset []\"</p>\n<p>definition \"ls_\\&lt;alpha&gt; l == set (Rep_lset l)\"</p>\n<p>definition \"ls_memb x l == x mem (Rep_lset l)\"</p>\n<p>definition \"ls_ins x l == if ls_memb x l then l else Abs_lset (x #<br>\nRep_lset l)\"</p>\n<p>...</p>\n<p>My question is, how to setup the code generator such that it implements \"'a<br>\nlset\" by \"'a list\", or, in general, in the same way as it would<br>\nimplement the underlying datatype ?</p>\n<p>With no further ado, the code generator complains about missing code<br>\nequations:</p>\n<p>export_code ls_empty ls_memb ls_ins in SML file -</p>\n<p>*** No code equations for Rep_lset, Abs_lset</p>\n<p>*** At command \"export_code\".</p>\n<p>Regards and thanks in advance for any help/pointers to examples<br>\n Peter</p>",
        "id": 294092191,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660832203
    }
]