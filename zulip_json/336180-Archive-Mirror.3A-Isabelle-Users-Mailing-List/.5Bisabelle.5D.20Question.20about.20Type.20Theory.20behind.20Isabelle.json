[
    {
        "content": "<p>From: Georgy Dunaev &lt;<a href=\"mailto:georgedunaev@gmail.com\">georgedunaev@gmail.com</a>&gt;<br>\nI've read Stefan Berghofer's paper<br>\n<a href=\"http://www21.in.tum.de/~berghofe/papers/TYPES2002_slides.pdf\">http://www21.in.tum.de/~berghofe/papers/TYPES2002_slides.pdf</a> ,<br>\nit has great calculus on page 7.</p>\n<p>1) Does exist more detailed book or paper on this calculus?</p>\n<p>2) I will also highly appreciate any reference to e.g. correctness theorem<br>\nof this calculus.</p>\n<p>3) And last, most important: please explain the rule with sigma from that<br>\ncalculus.<br>\nWhat is $\\Sigma(c) [\\vec{\\tau}_n / \\vec{\\alpha}_n] $. ?  What does it mean?<br>\nSigma is greek so it is a set of predicate variables.... I don't understand<br>\nmeaning of the formula \"any set of terms which depend on proof(!) constant<br>\nwith any amount of types instead of atomic types\". What does it mean?<br>\nCould someone clarify this whole constants' mechanism?</p>\n<p>Thanks!<br>\nGeorgy Dunaev</p>",
        "id": 294762371,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661200248
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 30/09/2019 21:48, Georgy Dunaev wrote:</p>\n<blockquote>\n<p>I've read Stefan Berghofer's paper<br>\n<a href=\"http://www21.in.tum.de/~berghofe/papers/TYPES2002_slides.pdf\">http://www21.in.tum.de/~berghofe/papers/TYPES2002_slides.pdf</a> ,<br>\nit has great calculus on page 7.</p>\n</blockquote>\n<p>A more up-to-date version (with more explanations and references) is the<br>\n\"implementation\" manual, chapter 2 \"Primitive Logic\". (E.g. see the<br>\nDocumentation panel in Isabelle/jEdit).</p>\n<blockquote>\n<p>3) And last, most important: please explain the rule with sigma from that<br>\ncalculus.<br>\nWhat is $\\Sigma(c) [\\vec{\\tau}_n / \\vec{\\alpha}_n] $. ?  What does it mean?<br>\nSigma is greek so it is a set of predicate variables.... I don't understand<br>\nmeaning of the formula \"any set of terms which depend on proof(!) constant<br>\nwith any amount of types instead of atomic types\". What does it mean?</p>\n</blockquote>\n<p>That is the \"axiom\" rule in the above document; see also page 74 (top):</p>\n<p>The axiomatization of a theory is implicitly closed by forming all<br>\ninstances of type and term variables</p>\n<p>The consequence are admissible type-instantiation rules, also explained<br>\nin that section.</p>\n<blockquote>\n<p>Could someone clarify this whole constants' mechanism?</p>\n</blockquote>\n<p>In the context of proof terms, \"constants\" are often \"theorem\" constants<br>\n(axioms or proven theorems). Plain term constants are also possible.</p>\n<p>Makarius</p>",
        "id": 294763846,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661200940
    }
]