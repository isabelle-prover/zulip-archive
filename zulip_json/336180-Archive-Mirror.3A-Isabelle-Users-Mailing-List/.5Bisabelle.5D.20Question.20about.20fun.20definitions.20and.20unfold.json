[
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nunfold is brute-force unfolding, not stopped by if-then-else.<br>\nPlease read the section 3.5.3 Simplication in the Tutorial, it explains<br>\nhow to avoid your simp problems.</p>\n<p>Tobias</p>",
        "id": 294073450,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660827990
    },
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:brianh@cs.pdx.edu\">brianh@cs.pdx.edu</a>&gt;<br>\nThe \"unfold\" method applies rewrite rules repeatedly, just like simp.  <br>\n(Internally \"unfold\" is actually implemented as a call to the  <br>\nsimplifier, but with most of the fancy features disabled.)</p>\n<p>To avoid the looping, you can either apply (subst f.simps), to rewrite  <br>\nexactly one step; or you can use unfold with an instantiated rule,  <br>\ne.g. apply (unfold f.simps [of n]).</p>\n<p>Hope this helps,</p>\n<ul>\n<li>Brian</li>\n</ul>\n<p>Quoting Tim Kremann &lt;<a href=\"mailto:twkrema@orion.ncsc.mil\">twkrema@orion.ncsc.mil</a>&gt;:</p>",
        "id": 294073480,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660828002
    }
]