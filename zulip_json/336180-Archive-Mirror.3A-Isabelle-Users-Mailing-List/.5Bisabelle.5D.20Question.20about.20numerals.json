[
    {
        "content": "<p>From: Jørgen Villadsen &lt;<a href=\"mailto:jovi@dtu.dk\">jovi@dtu.dk</a>&gt;<br>\nHi,</p>\n<p>In the example:</p>\n<p>lemmas numeral_nat = eval_nat_numeral BitM.simps One_nat_def</p>\n<p>lemma \"dummy (0::nat) (1::nat) (2::nat) (3::nat)\"<br>\n  unfolding numeral_nat</p>\n<p>I get the state:</p>\n<ol>\n<li>dummy 0 (Suc 0) (Suc (Suc 0)) (Suc (Suc (Suc 0)))</li>\n</ol>\n<p>which is what I want - but is there a better way?</p>\n<p>The following works for 2 only:</p>\n<p>lemma \"dummy (0::nat) (1::nat) (2::nat) (3::nat)\"<br>\n  unfolding numerals</p>\n<p>Is the fact \"Num.numerals\" useful at all?</p>\n<p>It is used once in HOL/ex/Primrec.thy but it seems that it can be omitted.</p>\n<p>Thanks,</p>\n<p>Jørgen</p>",
        "id": 294681083,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661176750
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nIt is literally this:</p>\n<p>lemma numerals: \"Numeral1 = (1::nat)\" \"2 = Suc (Suc 0)\"<br>\n  by (rule numeral_One) (rule numeral_2_eq_2)</p>\n<p>I certainly don’t see the point of making a special case of 1 and 2, especially given that it is almost never used. There are a few uses in the AFP, see below. I’m sure they could all be eliminated easily. I’m not sure who would volunteer to do this.</p>\n<p>Larry Paulson</p>\n<p>./Applicative_Lifting/Combinators.thy:  then show ?thesis by (simp add: numerals)<br>\n./Card_Number_Partitions/Card_Number_Partitions.thy:    from this show ?thesis by (auto simp add: numerals(2))<br>\n./Card_Number_Partitions/Card_Number_Partitions.thy:      by (simp add: numerals(2) del: Partition.simps)<br>\n./Program-Conflict-Analysis/ConstraintSystems.thy:      from S_ENTRY_PAT[of \"{#q#}+{#q'#}\", simplified] REVSPLIT(1) REVSPLIT'(1) have S_ENTRY: \"(v, mon_w fg w, {#q#} + {#q'#}) \\&lt;in&gt; S_cs fg (2::nat)\" by (simp add: numerals)<br>\n./Regular_Algebras/Dioid_Power_Sum.thy:lemmas powsum_simps = powsum_def atLeastAtMostSuc_conv numerals<br>\n./Tree_Decomposition/TreewidthTree.thy:            lessI less_or_eq_imp_le numerals(2))<br>\n./Word_Lib/Word_Lemmas.thy:  by (metis numerals(1) power_not_zero power_zero_numeral)</p>",
        "id": 294681148,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661176775
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;</p>\n<blockquote>\n<blockquote>\n<p>It is used once in HOL/ex/Primrec.thy but it seems that it can be omitted.</p>\n</blockquote>\n</blockquote>\n<p>That one yes, but there's also a non-trivial occurence in HOL, namely in<br>\na tactic in \"Semiring_Normalization\". While a naive cleanup is possible<br>\n(inline the lemma in the tactic), I don't think this is a good idea.</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294682431,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661177168
    }
]