[
    {
        "content": "<p>From: Thomas Göthel &lt;<a href=\"mailto:tgoethel@cs.tu-berlin.de\">tgoethel@cs.tu-berlin.de</a>&gt;<br>\nDear Isabelle-Community!</p>\n<p>Given the following definition of a tree:</p>\n<p>datatype myTree =<br>\n   leaf<br>\n| bin_node \"myTree\" \"myTree\"<br>\n| inf_node \"nat =&gt; myTree\"</p>\n<p>I would like to prove that trees are acyclic. But I do not even have an <br>\nidea how to prove the following lemma</p>\n<p>lemma \"t n \\&lt;noteq&gt; bin_node T (inf_node t)\"</p>\n<p>I would greatly appreciate any hints!</p>\n<p>Best regards,<br>\nThomas</p>",
        "id": 294136668,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660844541
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@kit.edu\">andreas.lochbihler@kit.edu</a>&gt;<br>\nDear Thomas,</p>\n<p>support for infinitely branching trees is a bit weak in the datatype package. <br>\n(For finitely branching datatypes, the datatype package provides a size function <br>\nwhich is typically used to show lemmas like these. Your infinitely branching <br>\ntree however does not have such a size function). The easiest way I know of is <br>\nto define the subterm relation by hand and prove that it is well-founded:</p>\n<p>inductive_set tree_subterm :: \"(myTree * myTree) set\"<br>\nwhere<br>\n   \"(l, bin_node l r) : tree_subterm\"<br>\n| \"(r, bin_node l r) : tree_subterm\"<br>\n| \"(f n, inf_node f) : tree_subterm\"</p>\n<p>inductive_simps tree_subterm_simps [iff]:<br>\n   \"(t, leaf) : tree_subterm\"<br>\n   \"(t, bin_node l r) : tree_subterm\"<br>\n   \"(t, inf_node f) : tree_subterm\"</p>\n<p>lemma wf_tree_subterm: \"wf tree_subterm\"<br>\nunfolding wf_def<br>\napply clarify<br>\napply(induct_tac x)<br>\napply blast+<br>\ndone</p>\n<p>Your inequality is then an easy consequence:</p>\n<p>lemma \"t n \\&lt;noteq&gt; bin_node T (inf_node t)\"<br>\nproof<br>\n   assume \"t n = bin_node T (inf_node t)\"<br>\n   moreover<br>\n   have \"(t n, bin_node T (inf_node t)) : tree_subterm^+\"<br>\n     by(blast intro: trancl.intros)<br>\n   moreover have \"acyclic tree_subterm\" by(rule wf_acyclic wf_tree_subterm)+<br>\n   ultimately show False by(simp add: acyclic_def)<br>\nqed</p>\n<p>Well-foundedness of the subterm relation will also help you a lot when you try <br>\nto prove termination for functions defined with the function package. Alex might <br>\nbe able to tell you more about how to set it up such that the function package <br>\ncan use wf_tree_subterm.</p>\n<p>Hope this helps,<br>\nAndreas</p>\n<p>Thomas Göthel schrieb:</p>",
        "id": 294136677,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660844544
    },
    {
        "content": "<p>From: Alexander Krauss &lt;<a href=\"mailto:krauss@in.tum.de\">krauss@in.tum.de</a>&gt;<br>\nIt won't use it automatically, since automated termination proving is <br>\nbased on measure functions into natural numbers only. However, you can <br>\nuse such a subterm relation in manual termination proofs, e.g., using <br>\nthe \"relation\" method.</p>\n<p>Alex</p>",
        "id": 294136716,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660844556
    },
    {
        "content": "<p>From: Thomas Göthel &lt;<a href=\"mailto:tgoethel@cs.tu-berlin.de\">tgoethel@cs.tu-berlin.de</a>&gt;<br>\nThank you very much!</p>\n<p>The idea of using well-founded relations helped me a lot in this and in <br>\nfurther cases. :-)</p>\n<p>Best regards,<br>\nThomas</p>",
        "id": 294136870,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660844623
    }
]