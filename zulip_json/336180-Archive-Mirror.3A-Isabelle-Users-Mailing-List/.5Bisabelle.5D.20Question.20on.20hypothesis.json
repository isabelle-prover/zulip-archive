[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nHere are some examples that illustrate goal-free experimentation in <br>\nIsabelle2009-2:</p>\n<p>theory Scratch<br>\n   imports Main<br>\n   begin</p>\n<p>example_proof<br>\n     assume \"P (xs @ [])\"<br>\n     thm this [simplified]</p>\n<p>have \"xs @ [] = xxx\" apply simp<br>\n       oops</p>\n<p>Makarius</p>",
        "id": 294123619,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660840606
    },
    {
        "content": "<p>From: olfa mraihi &lt;<a href=\"mailto:olfa.mraihi@yahoo.fr\">olfa.mraihi@yahoo.fr</a>&gt;<br>\nHi Isabelle community,<br>\nI' m newbie on using Isabelle and I need you help by answering if possible these 2 questions:<br>\n<br>\n1)how to represent hypothesis in isabelle? is it with the keyword \"assume\"?<br>\n<br>\n2)how to tell isabelle to simplify a set of hypothesis under the use of the adequate theory?  (remark:there is no goal to prove,only hypothesis to simplify),is it like that?:<br>\nuse_thy \"theoryname.thy\";<br>\nassume a &amp; b &amp; c;<br>\nby auto;<br>\n<br>\nThank you very much.</p>",
        "id": 294123901,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660840697
    },
    {
        "content": "<p>From: olfa mraihi &lt;<a href=\"mailto:olfa.mraihi@yahoo.fr\">olfa.mraihi@yahoo.fr</a>&gt;<br>\nhow to do when I have a conjunction of hypothesis to simplify <br>\nI have tried :<br>\ntheory Scratch<br>\n  imports Main<br>\n  begin<br>\nexample_proof<br>\nhave \"(i+length l2=iP+length l2P) &amp; (l1 @ l2=l1P @ l2P) &amp; (l2P=[]) &amp; (length l1+length l2=length l1P+length l2P)\"  apply simp<br>\n<br>\nbut it doesn't work.<br>\n<br>\nBest Regards.</p>",
        "id": 294124651,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660840922
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nIt works. The simplifier simply cannot simplify it any further. You may<br>\nhave hoped that it replaces l2P by [] everywhere, but by default it does<br>\nnot use one conjunct to simplify another. You can explicitly instruct it<br>\nto use the left conjunct to simplify the right one:</p>\n<p>apply(simp cong: conj_cong)</p>\n<p>Regards<br>\nTobias</p>\n<p>PS No need for parentheses in your example.</p>\n<p>olfa mraihi schrieb:</p>",
        "id": 294124687,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660840928
    },
    {
        "content": "<p>From: olfa mraihi &lt;<a href=\"mailto:olfa.mraihi@yahoo.fr\">olfa.mraihi@yahoo.fr</a>&gt;<br>\nthis is what I have as output<br>\n i + length l2 = iP + length l2P &amp;<br>\n    l1 @ l2 = l1P @ l2P &amp; l2P = [] &amp; length l1 + length l2 = length l1P<br>\n<br>\nbut the simplification should return<br>\n i + length l2 = iP &amp;  l1 @ l2 = l1P &amp; length l1 + length l2 = length l1P<br>\nis it possible?if yes how?<br>\nthank you very much.</p>\n<p>--- En date de : Mer 15.12.10, Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt; a écrit :</p>",
        "id": 294124699,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660840933
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nolfa mraihi schrieb:</p>\n<blockquote>\n<p>this is what I have as output<br>\n i + length l2 = iP + length l2P &amp;<br>\n    l1 @ l2 = l1P @ l2P &amp; l2P = [] &amp; length l1 + length l2 = length l1P</p>\n<p>but the simplification should return<br>\n i + length l2 = iP &amp;  l1 @ l2 = l1P &amp; length l1 + length l2 = length l1P<br>\nis it possible?if yes how?</p>\n</blockquote>\n<p>That is not directly possible. If the formulas you want to simplify are<br>\nassumptions, it works. Try</p>\n<p>lemma \"[| i+length l2=iP+length l2P; l1 @ l2=l1P @ l2P; l2P=[]; length<br>\nl1+length l2=length l1P+length l2P |] ==&gt; P\"<br>\napply simp</p>\n<p>Tobias</p>\n<blockquote>\n<p>thank you very much.</p>\n<p>--- En date de : Mer 15.12.10, Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt; a écrit :</p>\n<p>De: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nObjet: Re: [isabelle] Fw : Re: Question on hypothesis<br>\nÀ: \"olfa mraihi\" &lt;<a href=\"mailto:olfa.mraihi@yahoo.fr\">olfa.mraihi@yahoo.fr</a>&gt;<br>\nCc: <a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a><br>\nDate: Mercredi 15 décembre 2010, 22h12</p>\n<p>It works. The simplifier simply cannot simplify it any further. You may<br>\nhave hoped that it replaces l2P by [] everywhere, but by default it does<br>\nnot use one conjunct to simplify another. You can explicitly instruct it<br>\nto use the left conjunct to simplify the right one:</p>\n<p>apply(simp cong: conj_cong)</p>\n<p>Regards<br>\nTobias</p>\n<p>PS No need for parentheses in your example.</p>\n<p>olfa mraihi schrieb:</p>\n<blockquote>\n<p>how to do when I have a conjunction of hypothesis to simplify <br>\nI have tried :<br>\ntheory Scratch<br>\n   imports Main<br>\n   begin<br>\nexample_proof<br>\nhave \"(i+length l2=iP+length l2P) &amp; (l1 @ l2=l1P @ l2P) &amp; (l2P=[]) &amp; (length l1+length l2=length l1P+length l2P)\"  apply simp</p>\n<p>but it doesn't work.</p>\n<p>Best Regards.</p>\n</blockquote>\n</blockquote>",
        "id": 294124724,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660840943
    },
    {
        "content": "<p>From: olfa mraihi &lt;<a href=\"mailto:olfa.mraihi@yahoo.fr\">olfa.mraihi@yahoo.fr</a>&gt;<br>\n0)thank you very much for your usefull answer<br>\n1)what does it mean [| |]?<br>\n2)what does it mean P?<br>\n3)it works only with assumption l2P=[] or l1P=[] but when I put l1=[], the last assumption (which is  l1+length l2=length l1P+length l2P) disappears in the output and the same thing happens when I put l2=[]!!<br>\n<br>\n</p>\n<p>--- En date de : Jeu 16.12.10, Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt; a écrit :</p>\n<p>De: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nObjet: Re: [isabelle] Fw : Re: Question on hypothesis<br>\nÀ: \"olfa mraihi\" &lt;<a href=\"mailto:olfa.mraihi@yahoo.fr\">olfa.mraihi@yahoo.fr</a>&gt;<br>\nCc: <a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a><br>\nDate: Jeudi 16 décembre 2010, 7h37</p>\n<p>olfa mraihi schrieb:</p>\n<blockquote>\n<p>this is what I have as output<br>\n  i + length l2 = iP + length l2P &amp;<br>\n     l1 @ l2 = l1P @ l2P &amp; l2P = [] &amp; length l1 + length l2 = length l1P</p>\n<p>but the simplification should return<br>\n  i + length l2 = iP &amp;  l1 @ l2 = l1P &amp; length l1 + length l2 = length l1P<br>\nis it possible?if yes how?</p>\n</blockquote>\n<p>That is not directly possible. If the formulas you want to simplify are<br>\nassumptions, it works. Try</p>\n<p>lemma \"[| i+length l2=iP+length l2P; l1 @ l2=l1P @ l2P; l2P=[]; length<br>\nl1+length l2=length l1P+length l2P |] ==&gt; P\"<br>\napply simp</p>\n<p>Tobias</p>\n<blockquote>\n<p>thank you very much.</p>\n<p>--- En date de : Mer 15.12.10, Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt; a écrit :</p>\n<p>De: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nObjet: Re: [isabelle] Fw : Re: Question on hypothesis<br>\nÀ: \"olfa mraihi\" &lt;<a href=\"mailto:olfa.mraihi@yahoo.fr\">olfa.mraihi@yahoo.fr</a>&gt;<br>\nCc: <a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a><br>\nDate: Mercredi 15 décembre 2010, 22h12</p>\n<p>It works. The simplifier simply cannot simplify it any further. You may<br>\nhave hoped that it replaces l2P by [] everywhere, but by default it does<br>\nnot use one conjunct to simplify another. You can explicitly instruct it<br>\nto use the left conjunct to simplify the right one:</p>\n<p>apply(simp cong: conj_cong)</p>\n<p>Regards<br>\nTobias</p>\n<p>PS No need for parentheses in your example.</p>\n<p>olfa mraihi schrieb:</p>\n<blockquote>\n<p>how to do when I have a conjunction of hypothesis to simplify <br>\nI have tried :<br>\ntheory Scratch<br>\n    imports Main<br>\n    begin<br>\nexample_proof<br>\nhave \"(i+length l2=iP+length l2P) &amp; (l1 @ l2=l1P @ l2P) &amp; (l2P=[]) &amp; (length l1+length l2=length l1P+length l2P)\"  apply simp</p>\n<p>but it doesn't work.</p>\n<p>Best Regards.</p>\n</blockquote>\n</blockquote>",
        "id": 294125086,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660841048
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nolfa mraihi schrieb:</p>\n<blockquote>\n<p>0)thank you very much for your usefull answer<br>\n1)what does it mean [| |]?<br>\n2)what does it mean P?</p>\n</blockquote>\n<p>Please refer to the extensive Isabelle documentation. This mailing list<br>\nis intended to discuss technical questions and not to give an<br>\nintroduction to the system to save you reading the basic material.</p>\n<blockquote>\n<p>3)it works only with assumption l2P=[] or l1P=[] but when I put l1=[],<br>\nthe last assumption (which is  l1+length l2=length l1P+length l2P)<br>\ndisappears in the output and the same thing happens when I put l2=[]!!</p>\n</blockquote>\n<p>Assumptions that simplify to True disappear.</p>\n<p>Tobias</p>\n<blockquote>\n<p>--- En date de : <em>Jeu 16.12.10, Tobias Nipkow /&lt;nipkow@in.tum.de&gt;/</em> a<br>\nécrit :</p>\n<p>De: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\n    Objet: Re: [isabelle] Fw : Re: Question on hypothesis<br>\n    À: \"olfa mraihi\" &lt;<a href=\"mailto:olfa.mraihi@yahoo.fr\">olfa.mraihi@yahoo.fr</a>&gt;<br>\n    Cc: <a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a><br>\n    Date: Jeudi 16 décembre 2010, 7h37</p>\n<p>olfa mraihi schrieb:<br>\n    &gt;  this is what I have as output<br>\n    &gt;  i + length l2 = iP + length l2P &amp;<br>\n    &gt;     l1 @ l2 = l1P @ l2P &amp; l2P = [] &amp; length l1 + length l2 =<br>\n    length l1P<br>\n    &gt; <br>\n    &gt; but the simplification should return<br>\n    &gt;  i + length l2 = iP &amp;  l1 @ l2 = l1P &amp; length l1 + length l2 =<br>\n    length l1P<br>\n    &gt; is it possible?if yes how?</p>\n<p>That is not directly possible. If the formulas you want to simplify are<br>\n    assumptions, it works. Try</p>\n<p>lemma \"[| i+length l2=iP+length l2P; l1 @ l2=l1P @ l2P; l2P=[]; length<br>\n    l1+length l2=length l1P+length l2P |] ==&gt; P\"<br>\n    apply simp</p>\n<p>Tobias</p>\n<p>&gt; thank you very much.<br>\n    &gt;<br>\n    &gt; --- En date de : Mer 15.12.10, Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a><br>\n    &lt;<a href=\"http://fr.mc261.mail.yahoo.com/mc/compose?to=nipkow@in.tum.de\">http://fr.mc261.mail.yahoo.com/mc/compose?to=nipkow@in.tum.de</a>&gt;&gt; a<br>\n    écrit :<br>\n    &gt;<br>\n    &gt;<br>\n    &gt; De: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a><br>\n    &lt;<a href=\"http://fr.mc261.mail.yahoo.com/mc/compose?to=nipkow@in.tum.de\">http://fr.mc261.mail.yahoo.com/mc/compose?to=nipkow@in.tum.de</a>&gt;&gt;<br>\n    &gt; Objet: Re: [isabelle] Fw : Re: Question on hypothesis<br>\n    &gt; À: \"olfa mraihi\" &lt;<a href=\"mailto:olfa.mraihi@yahoo.fr\">olfa.mraihi@yahoo.fr</a><br>\n    &lt;<a href=\"http://fr.mc261.mail.yahoo.com/mc/compose?to=olfa.mraihi@yahoo.fr\">http://fr.mc261.mail.yahoo.com/mc/compose?to=olfa.mraihi@yahoo.fr</a>&gt;&gt;<br>\n    &gt; Cc: <a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a><br>\n    &lt;<a href=\"http://fr.mc261.mail.yahoo.com/mc/compose?to=cl-isabelle-users@lists.cam.ac.uk\">http://fr.mc261.mail.yahoo.com/mc/compose?to=cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\n    &gt; Date: Mercredi 15 décembre 2010, 22h12<br>\n    &gt;<br>\n    &gt;<br>\n    &gt; It works. The simplifier simply cannot simplify it any further.<br>\n    You may<br>\n    &gt; have hoped that it replaces l2P by [] everywhere, but by default<br>\n    it does<br>\n    &gt; not use one conjunct to simplify another. You can explicitly<br>\n    instruct it<br>\n    &gt; to use the left conjunct to simplify the right one:<br>\n    &gt;<br>\n    &gt; apply(simp cong: conj_cong)<br>\n    &gt;<br>\n    &gt; Regards<br>\n    &gt; Tobias<br>\n    &gt;<br>\n    &gt; PS No need for parentheses in your example.<br>\n    &gt;<br>\n    &gt; olfa mraihi schrieb:<br>\n    &gt;&gt; how to do when I have a conjunction of hypothesis to simplify<br>\n    &gt;&gt; I have tried :<br>\n    &gt;&gt; theory Scratch<br>\n    &gt;&gt;    imports Main<br>\n    &gt;&gt;    begin<br>\n    &gt;&gt; example_proof<br>\n    &gt;&gt; have \"(i+length l2=iP+length l2P) &amp; (l1 @ l2=l1P @ l2P) &amp;<br>\n    (l2P=[]) &amp; (length l1+length l2=length l1P+length l2P)\"  apply simp<br>\n    &gt;&gt;   <br>\n    &gt;&gt; but it doesn't work.<br>\n    &gt;&gt;   <br>\n    &gt;&gt; Best Regards.<br>\n    &gt;&gt;<br>\n    &gt;&gt;<br>\n    &gt;&gt;<br>\n    &gt;&gt;       <br>\n    &gt;<br>\n    &gt;<br>\n    &gt;<br>\n    &gt;       </p>\n</blockquote>",
        "id": 294125120,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660841060
    },
    {
        "content": "<p>From: Jeremy Dawson &lt;<a href=\"mailto:jeremy@rsise.anu.edu.au\">jeremy@rsise.anu.edu.au</a>&gt;<br>\nSince I've just looked at the indexes of several likely choices among<br>\nthe Isabelle documentation, and the nearest I found to an adequate<br>\nanswer to question (1) was an a manual described as \"old\" and<br>\n\"outdated\", it seems reasonable to answer it here.</p>\n<p>[| P ; Q |] ==&gt; R is an abbreviation (at the level of the parser and<br>\nprettyprinter) for<br>\nP ==&gt; (Q ==&gt; R)</p>\n<p>Jeremy</p>",
        "id": 294125132,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660841065
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nI beg to disagree. The Tutorial (not under old/outdated) has \"[|\" and<br>\n\"|]\" in the index, pointing to a table that explains that they are the<br>\nsame as the similar looking symbols [| |], and those symbols are used<br>\nthroughout the documentation, in particular on page 13, where it is<br>\nexplained that they group together assumptions. I consider this an<br>\nadequate explanation.</p>\n<p>Tobias</p>\n<p>Jeremy Dawson schrieb:</p>",
        "id": 294125174,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660841078
    }
]