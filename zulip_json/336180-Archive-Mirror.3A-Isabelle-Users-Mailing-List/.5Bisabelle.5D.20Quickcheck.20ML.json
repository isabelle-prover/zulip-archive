[
    {
        "content": "<p>From: Moa Johansson &lt;<a href=\"mailto:moa.johansson@chalmers.se\">moa.johansson@chalmers.se</a>&gt;<br>\nHi,</p>\n<p>I'm currently updating IsaPlanner and IsaCoSy to Isabelle2012. Both systems make use of Isabelle's counterexample checker quickcheck, which has been updated. I need to send lists of things of type term for testing, so I'm assuming I need to use the test_term function, which has type</p>\n<p>Proof.context -&gt; bool * bool -&gt; (string * typ) list -&gt; (term * term list) list -&gt; result list option</p>\n<p>I'd like to know what the last argument of type (term * term list) list is representing? Which list is the list of terms I want to counter-example check, and what does the first term in the pair represent?</p>\n<p>Best,<br>\nMoa</p>",
        "id": 294162608,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660853695
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@gmail.com\">jasmin.blanchette@gmail.com</a>&gt;<br>\nLooking at the code, it would seem that the first component is _the_ term to check and the second component is a list of terms that are additionally evaluated. For example, if you pass (\"rev xs = xs\", [\"rev xs\"]), Quickcheck will find a counterexample and print the value of \"rev xs\" (in addition to that of \"xs\"). In your use scenario, you would probably pass an empty list for the second components.</p>\n<p>Jasmin</p>",
        "id": 294162656,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660853707
    },
    {
        "content": "<p>From: Thomas Genet &lt;<a href=\"mailto:thomas.genet@irisa.fr\">thomas.genet@irisa.fr</a>&gt;<br>\nHi to you all.</p>\n<p>By the way, it seems that this nice feature of Quickcheck (the \"eval\" <br>\nparameter) does not always work with the narrowing tester. This is not <br>\nfully surprising since the narrowing-driven testing may send back <br>\npartially instanciated values, like _#[] for instance.</p>\n<p>However, if it is the case it may be a good idea to mention this in the <br>\nisar manual.</p>\n<p>Best regards,</p>\n<p>Thomas</p>",
        "id": 294162678,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660853716
    },
    {
        "content": "<p>From: Lukas Bulwahn &lt;<a href=\"mailto:bulwahn@in.tum.de\">bulwahn@in.tum.de</a>&gt;<br>\nThanks, Jasmin, for answering this question. The implementation seems to <br>\nbe self-explanatory, if you could grasp it with one look in the code.</p>\n<p>Lukas</p>",
        "id": 294162684,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660853720
    },
    {
        "content": "<p>From: Lukas Bulwahn &lt;<a href=\"mailto:bulwahn@in.tum.de\">bulwahn@in.tum.de</a>&gt;<br>\nHi Thomas,</p>\n<p>Thanks for this suggestion. I mentioned it in the NEWS file</p>\n<p>- Added \"eval\" option to evaluate terms for the found counterexample<br>\n     (currently only supported by the default (exhaustive) tester).</p>\n<p>but left it out of the Isar reference. A remark has now been added.</p>\n<p>It is another technical challenge to enable the eval feature also for <br>\nthe narrowing tester, and cannot just be dealt with by reusing the <br>\nsource code for the exhaustive testing infrastructure. Maybe I find time <br>\nto add it, maybe not--it's on my TODO list.</p>\n<p>Lukas</p>",
        "id": 294162730,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660853744
    }
]