[
    {
        "content": "<p>From: Tjark Weber &lt;<a href=\"mailto:tjark.weber@it.uu.se\">tjark.weber@it.uu.se</a>&gt;<br>\nDear quotient type experts,</p>\n<p>When defining</p>\n<p>quotient_type 'a Q = \"'a T\" / \"R\" &lt;proof&gt;</p>\n<p>for some existing type T and an equivalence relation R, I see two<br>\nwarnings:</p>\n<p>No map function defined for T. This will cause problems later on. </p>\n<p>Generation of a parametrized correspondence relation failed.<br>\n  Reason:  No relator for the type \"T\" found.</p>\n<p>What are the problems that these warnings allude to, and how can I<br>\nprovide a map function and a relator to avoid them?</p>\n<p>I have been browsing the documentation and examples, but with limited<br>\ninsight so far.</p>\n<p>Best,<br>\nTjark</p>",
        "id": 294330048,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660929937
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear Tjark,</p>\n<p>These warnings stem from the lifting package, which quotient_type calls internally such <br>\nthat lift_definition can be used. The documentation of the lifting package (Isar-Ref, <br>\nchapter 12.3) explains what form the map function and the relator should have. The <br>\nproblems are that transfer and lifting might not work as expected.</p>\n<p>For (co)datatypes T without dead type variables, the datatype packages already installs a <br>\nmap function and the relator. Apparently, your type does not fall into this category, so <br>\nyou have to define your own map function. It is important that the map function has a <br>\nfunction argument for each argument of T and the relator one relation for each. That is <br>\nwhy you cannot use the map function and the relator from datatypes with dead type variables.</p>\n<p>Hope this helps,<br>\nAndreas</p>",
        "id": 294330134,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660929961
    },
    {
        "content": "<p>From: Ondřej Kunčar &lt;<a href=\"mailto:kuncar@in.tum.de\">kuncar@in.tum.de</a>&gt;<br>\nHi Tjark,<br>\nyou can happily ignore the warning about the map function. This is <br>\nrelevant only if you use the \"old\" Quotient package for constant <br>\ndefinitions and proving and Lifting/Transfer.</p>\n<p>Concerning the other warning. You can be fine if you don't want do <br>\nlifting/transferring that would change 'a in your type 'a Q. Nesting is <br>\nan example when this can happen: 'a Q Q =&gt; 'a T T.</p>\n<p>If you want to support/use this, you have to provide some semantic <br>\ninformation for 'a T (a relator is a part of this). Just look at <br>\nHOL/Lifting_Set.thy where such a thing is provided for the type 'a set <br>\nand follow analogously. As Andreas already mentioned, this is not <br>\nnecessary if 'a T is a datatype without \"dead\" variables.</p>\n<p>Hope this helps,<br>\nOndrej</p>",
        "id": 294330184,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660929968
    },
    {
        "content": "<p>From: Ondřej Kunčar &lt;<a href=\"mailto:kuncar@in.tum.de\">kuncar@in.tum.de</a>&gt;<br>\nSorry for a typo. The second sentence should be:<br>\nThis is relevant only if you use the \"old\" Quotient package for constant <br>\ndefinitions and proving and <em>NOT</em> Lifting/Transfer.</p>",
        "id": 294330199,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660929974
    }
]