[
    {
        "content": "<p>From: \"John F. Hughes\" &lt;<a href=\"mailto:jfh@cs.brown.edu\">jfh@cs.brown.edu</a>&gt;<br>\nI'm having trouble with quotients, and I suspect that I'm trying to use a<br>\ntool in the wrong place, but I'm not sure what tool I *should *be using.<br>\nHere's the setup:</p>\n<p>In synthetic projective geometry, you can define an affine plane to be a<br>\npair of sets (\"points\" and \"lines\") and a function \"meets P k\" which is<br>\ntrue when the point P \"is on\" the line k; the \"meets\" function has to<br>\nsatisfy certain properties (\"two points determine a line\", etc.) to make<br>\nthis an affine plane. (Alternatively, one could define the \"lines\" to be<br>\ncertain subsets of \"points\", and \"meets\" gets replaced by \"element of\";<br>\nthat makes it more difficult to prove duality theorems later, though). In<br>\nIsabelle, I've represented this with a locale:</p>\n<p>theory QuoExample<br>\n  imports Complex_Main</p>\n<p>begin<br>\n  locale affine_plane_data =<br>\n    fixes meets :: \"'point ⇒ 'line ⇒ bool\"<br>\n  begin<br>\n    definition parallel:: \"'line  ⇒ 'line ⇒ bool\" (infix \"||\" 50)<br>\n      where \"l || m ⟷ (l = m ∨ ¬ (∃ P. meets P l  ∧ meets P m))\"<br>\n    definition collinear :: \"'point  ⇒ 'point ⇒ 'point ⇒ bool\"<br>\n      where \"collinear A B C ⟷ (∃ l. meets A l ∧ meets B l ∧ meets C l)\"<br>\n  end<br>\n  value \"affine_plane_data\"</p>\n<p>locale affine_plane =<br>\n    affine_plane_data meets<br>\n  for meets :: \"'point ⇒ 'line ⇒ bool\" +<br>\n  assumes<br>\n    a1: \"P ≠ Q ⟹ ∃!l. meets P l ∧ meets Q l\" and<br>\n    a2: \"¬ meets P l ⟹ ∃!m. l || m ∧ meets P m\" and<br>\n    a3: \"∃P Q R. P ≠ Q ∧ P ≠ R ∧ Q ≠ R ∧ ¬ collinear P Q R\"<br>\nbegin<br>\n  lemma symmetric_parallel: \"l || m ⟹ m || l\"<br>\n    using parallel_def by auto<br>\n  lemma reflexive_parallel: \"l || l\"<br>\n    by (simp add: parallel_def)<br>\n  lemma transitive_parallel: \"⟦l || m ;  m || n⟧ ⟹ l || n\"<br>\n    by (metis a2 parallel_def)<br>\n================<br>\nAt this point, I want to \"complete\" the affine plane. For the ordinary<br>\nEuclidean plane, this consists of adding a \"point at infinity\" to each<br>\nline, with the rules that two parallel lines have the <em>same</em> point at<br>\ninfinity added to them, and then tossing all these newly added points into<br>\na new line (the line at infinity). So the \"points\" of my new space (which<br>\nis a PROJECTIVE geometry rather than an affine one) are (1) all the old<br>\npoints, and (2) all the new \"points at infinity\", one for each set of<br>\nparallel lines in the Euclidean plane.</p>\n<p>The same idea works for any affine geometry: for each \"family of parallel<br>\nlines\", you create a new point, and you then use these new points in<br>\nbuilding a projective plane. The general idea here is that given a function<br>\n\"meets: 'point -&gt; 'line -&gt; bool\", we can build a function<br>\n\"meets2 : 'newpoint -&gt; 'newline -&gt; bool\", where the type \"newpoint\"<br>\nconsists of all original points, plus all the \"points at infinity.\" It's<br>\nnatural to define something like</p>\n<p>quotient_type pencil = \"'line\" / \"parallel\"<br>\ntype ('point 'line) newpoints = OriginalPoint 'point | InfinitePoint 'pencil<br>\ntype ('point 'line) newline = OriginalLine 'line | InfiniteLine</p>\n<p>and then carefully define the meets2 function on these things. (I'm sure<br>\nI've got the syntax on the second and third lines wrong, but it doesn't<br>\nmatter because the very first line of this construction fails: I can't<br>\nconstruct the type \"pencil\"; trying to do so gives me</p>\n<p>\"pencil\": extra type variable(s) on the lhs: \"'line\"<br>\n\"pencil\": extra type variable(s) in the relation: \"'line\", \"'point\"<br>\n\"pencil\": illegal variable(s) in the relation: \"meets\"</p>\n<p>=================</p>\n<p>Is there a way to do this in Isabelle? The general idea --- you have<br>\nsomething that satisfies some axioms, based on items of some fixed but<br>\nunknown type -- and want to construct associated quotients, certainly<br>\nhappens often enough in mathematics. A group, for instance, might<br>\nconsist of matrices, or real-to-real functions, or permutations, or ...<br>\nlots of things. But in all cases, we can have a notion of a normal subgroup<br>\nand quotient groups. I looked at the HOL/HOL-Algebra/Coset.html entry,<br>\nthinking I'd see there exactly how to use quotients but ... there are no<br>\nquotients there, which made me suspect that quotients in Isabelle aren't<br>\nquite what I think they might be.</p>\n<p>Advice, anyone?</p>",
        "id": 294822462,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661242805
    },
    {
        "content": "<p>From: \"John F. Hughes\" &lt;<a href=\"mailto:jfh@cs.brown.edu\">jfh@cs.brown.edu</a>&gt;<br>\nBy the way, even if I parameterize that quotient definition, writing</p>\n<p>quotient_type  ('point, 'line) pencil = \"'line\" / \"parallel\"</p>\n<p>I still get</p>\n<p>\"pencil\": illegal variable(s) in the relation: \"meets\"</p>\n<p>Closer, but not close enough!</p>",
        "id": 294822475,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661242811
    }
]