[
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nOn 10/11/2013 5:23 AM, Makarius wrote:</p>\n<blockquote>\n<p>I see the text encoding UTF-8-Isabelle here for the bsh file, which is <br>\nprobably what you mean by \"not simple text file\".</p>\n<p>You should probably change that to UTF-8 and make sure that the bsh <br>\nscript refers to the Unicode character for \\&lt;^sub&gt; without anything else.</p>\n</blockquote>\n<p>First, they made significant changes from jEdit 5.0 to jEdit 5.1. I now <br>\nhave to escape \"\\\" with \"\\\" in a macro, which wasn't the case before.</p>\n<p>With Isabelle2013, it also loads a bsh file with UTF-8-Isabelle, but the <br>\nmacros run fine with Isabelle symbol commands in them.</p>\n<p>There are different ways to get a bsh file detected asUTF-8:</p>\n<p><a href=\"http://www.jedit.org/users-guide/encodings.html\">http://www.jedit.org/users-guide/encodings.html</a></p>\n<p>However, for me, the safest way with no changes is to put this in a bsh <br>\nfile:</p>\n<p>// :encoding=UTF-8:</p>\n<p>From past experience with WinEdt, I know I can get deceived about <br>\nfinding solutions. The encoding that jEdit uses to open a file for the <br>\nfirst time is what it uses after that, unless you explicitly change it, <br>\nlike with \"Utilities/Buffer Options\".</p>\n<p>If the encoding is specified in the bsh, the macros don't give an error, <br>\nbut a command like \"\\&lt;^sub&gt;1\" is still not converted graphically like it <br>\nis with Isabelle2013.</p>\n<blockquote>\n<p>Behaviour is to some extent accidental, and one needs to change habits <br>\noccasionally.</p>\n</blockquote>\n<p>Occasionally, I suppose, but a proper balance requires than one <br>\noccasionally, or even frequently, fight for his or her right to party, <br>\nas specified in the lyrics of \"(You Gotta) Fight for Your Right (To <br>\nParty!)\", by the Beastie Boys.</p>\n<p>I use what's available, and because a Linux version is available, macros <br>\nare important enough to be willing to see what that version can do, if <br>\nthat's what's needed.</p>\n<p>Take a relatively simple macro for a set of markup tags like this:</p>\n<p>textArea.setSelectedText(\"\\&lt;langle&gt;\\&lt;^isub&gt;<code>+&amp;&amp;\\&lt;^isub&gt;</code>\\&lt;rangle&gt;&amp;&amp;\");</p>\n<p>The macro uses &amp;&amp; to place me at that spot, and then it's used to get me <br>\nout of the tags.</p>\n<p>It's not even just the number of escape sequences and tick characters I <br>\nhave to type. It's remembering what my markup command is, and the fact <br>\nthat there's about a 70% chance I'll get some part of typing it wrong <br>\nevery time.</p>\n<p>It may work to save the file and reload it to get it to it to render the <br>\nsymbol commands.</p>\n<p>Thanks for the help,<br>\nGB</p>",
        "id": 294250592,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660910563
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nUsing \":encoding=UTF-8:\" solved the macro error problem, as I said in <br>\nthe other email. The second part of your suggestion finally sunk in to <br>\nget the macro to insert the subscript rather than insert \\&lt;^sub&gt;.</p>\n<p>So a macro command like this,</p>\n<p>textArea.setSelectedText(\"⇩^+&amp;&amp;⇩_&amp;&amp;\");</p>\n<p>does what \" textArea.setSelectedText(\\&lt;^isub&gt;^+&amp;&amp;\\&lt;^isub&gt;_&amp;&amp;)\" was doing <br>\nbefore.</p>\n<p>When the bsh file is opened up in another editor, the graphical unicode <br>\ncharacters don't display correctly, but the unicode characters, inserted <br>\nby the macro in a THY, get converted to Isabelle commands, such as <br>\n\\&lt;^sub&gt;, as shown when I open up the THY file in my other editor.</p>\n<p>Thanks again,<br>\nGB</p>",
        "id": 294250605,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660910569
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nThe problem is actually only that the \\&lt;^isub&gt; command doesn't exist <br>\nanymore. So if I run a macro that tries to use it rather than \\&lt;^sub&gt;, I <br>\nguess something doesn't get completed correctly by Isabelle/jEdit's <br>\nattempt to convert it, and the macro returns an error.</p>\n<p>I figured out that a bsh file doesn't need to be UTF-8, and once I let <br>\nthem be treated as UTF-8-Isabelle again, if I saved a bsh file in jEdit <br>\nwith a Unicode character for \\&lt;^sub&gt;, it would convert the Unicode <br>\ncharacter back to \\&lt;^sub&gt; just like in a thy file. That and other things <br>\nled me to figuring it out.</p>\n<p>Here's the error message it returns if there's an attempt to insert <br>\n\\&lt;^isub&gt; as text:</p>\n<p>Sourced file: <br>\nE:\\E_1\\02-p\\pi\\home\\.isabelle\\Isabelle2013-1-RC2\\jedit\\macros\\+m..markup3\\mu__mft....font_typewriter_primary.bsh <br>\nToken Parsing Error: Lexical error at line 6, column 28.  Encountered: <br>\n\"&lt;\" (60), after : \"\\\"\\\\\": &lt;at unknown location&gt;</p>\n<p>at org.gjt.sp.jedit.bsh.Interpreter.eval(Interpreter.java:698)<br>\n     at org.gjt.sp.jedit.BeanShell._runScript(BeanShell.java:339)<br>\n     at org.gjt.sp.jedit.BeanShell._runScript(BeanShell.java:287)<br>\n     at org.gjt.sp.jedit.BeanShell.runScript(BeanShell.java:213)<br>\n     at org.gjt.sp.jedit.Macros$BeanShellHandler.runMacro(Macros.java:1151)<br>\n     at org.gjt.sp.jedit.Macros$Macro.invoke(Macros.java:573)<br>\n     at <br>\norg.gjt.sp.jedit.gui.InputHandler.invokeAction(InputHandler.java:342)<br>\n     at org.gjt.sp.jedit.jEdit$4.invokeAction(jEdit.java:3423)<br>\n     at org.gjt.sp.jedit.jEdit$4.invokeAction(jEdit.java:3405)<br>\n     at <br>\norg.gjt.sp.jedit.EditAction$Wrapper.actionPerformed(EditAction.java:212)<br>\n     at <br>\njavax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:2018)<br>\n     at <br>\njavax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2341)<br>\n     at <br>\njavax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:402)<br>\n     at <br>\njavax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:259)<br>\n     at javax.swing.AbstractButton.doClick(AbstractButton.java:376)<br>\n     at <br>\njavax.swing.plaf.basic.BasicMenuItemUI.doClick(BasicMenuItemUI.java:833)<br>\n     at <br>\njavax.swing.plaf.basic.BasicMenuItemUI$Handler.mouseReleased(BasicMenuItemUI.java:877)<br>\n     at <br>\njava.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:289)<br>\n     at java.awt.Component.processMouseEvent(Component.java:6505)<br>\n     at javax.swing.JComponent.processMouseEvent(JComponent.java:3320)<br>\n     at java.awt.Component.processEvent(Component.java:6270)<br>\n     at java.awt.Container.processEvent(Container.java:2229)<br>\n     at java.awt.Component.dispatchEventImpl(Component.java:4861)<br>\n     at java.awt.Container.dispatchEventImpl(Container.java:2287)<br>\n     at java.awt.Component.dispatchEvent(Component.java:4687)<br>\n     at <br>\njava.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4832)<br>\n     at <br>\njava.awt.LightweightDispatcher.processMouseEvent(Container.java:4492)<br>\n     at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4422)<br>\n     at java.awt.Container.dispatchEventImpl(Container.java:2273)<br>\n     at java.awt.Window.dispatchEventImpl(Window.java:2719)<br>\n     at java.awt.Component.dispatchEvent(Component.java:4687)<br>\n     at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:735)<br>\n     at java.awt.EventQueue.access$200(EventQueue.java:103)<br>\n     at java.awt.EventQueue$3.run(EventQueue.java:694)<br>\n     at java.awt.EventQueue$3.run(EventQueue.java:692)<br>\n     at java.security.AccessController.doPrivileged(Native Method)<br>\n     at <br>\njava.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:76)<br>\n     at <br>\njava.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:87)<br>\n     at java.awt.EventQueue$4.run(EventQueue.java:708)<br>\n     at java.awt.EventQueue$4.run(EventQueue.java:706)<br>\n     at java.security.AccessController.doPrivileged(Native Method)<br>\n     at <br>\njava.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:76)<br>\n     at java.awt.EventQueue.dispatchEvent(EventQueue.java:705)<br>\n     at <br>\njava.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:242)<br>\n     at <br>\njava.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:161)<br>\n     at <br>\njava.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:150)<br>\n     at <br>\njava.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:146)<br>\n     at <br>\njava.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:138)<br>\n     at java.awt.EventDispatchThread.run(EventDispatchThread.java:91)</p>",
        "id": 294250631,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660910582
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Sat, 12 Oct 2013, Gottfried Barrow wrote:</p>\n<blockquote>\n<p>The problem is actually only that the \\&lt;^isub&gt; command doesn't exist <br>\nanymore.</p>\n</blockquote>\n<p>The technical term for \\&lt;^isub&gt; is \"control symbol\".  It still exists but <br>\nis uninterpreted, i.e. it looses its former special role as subscript <br>\nwithin identifiers.  It also looses its Unicode rendering, as you have <br>\nalready discovered.</p>\n<blockquote>\n<p>I figured out that a bsh file doesn't need to be UTF-8, and once I let <br>\nthem be treated as UTF-8-Isabelle again, if I saved a bsh file in jEdit <br>\nwith a Unicode character for \\&lt;^sub&gt;, it would convert the Unicode <br>\ncharacter back to \\&lt;^sub&gt; just like in a thy file. That and other things <br>\nled me to figuring it out.</p>\n</blockquote>\n<p>OK, this sounds like problem solved.</p>\n<p>Makarius</p>",
        "id": 294250862,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660910673
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nI'm using Windows.</p>\n<p>jEdit is not treating .bsh files as simple text files, which causes my <br>\nmacros to return an error and not work like they did in Isabelle2013.</p>\n<p>For a test case, I record a simple macro while in jEdit, and save it to <br>\ntest.bsh, the contents which is this:</p>\n<p>textArea.setSelectedText(\"\\\\&lt;^sub&gt;1\");</p>\n<p>Before exiting jEdit, I can run that macro in a THY file and it doesn't <br>\ncause an error, though the inserted text shows \\&lt;^sub&gt;1 rather than a <br>\nsubscripted 1 like it should. Also, before exiting, the text in test.bsh <br>\nis displayed as ASCII text like it should be.</p>\n<p>When I exit jEdit and start it back up, the macro, when run, now causes <br>\na Beanshell error. Also, in the window where test.bsh is viewed, jEdit <br>\nnow displays \\&lt;^sub&gt; as a graphical bar.</p>\n<p>I attach a screenshot showing how jEdit is not displaying only ASCII <br>\ntext in test.bsh.</p>\n<p>Regards,<br>\nGB<br>\n<a href=\"/user_uploads/14278/iW4nMZn46nmJ4KWYGpvY7iQA/jEdit-macro-problem.png\">jEdit macro problem.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/iW4nMZn46nmJ4KWYGpvY7iQA/jEdit-macro-problem.png\" title=\"jEdit macro problem.png\"><img src=\"/user_uploads/14278/iW4nMZn46nmJ4KWYGpvY7iQA/jEdit-macro-problem.png\"></a></div>",
        "id": 294254094,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660911920
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI see the text encoding UTF-8-Isabelle here for the bsh file, which is <br>\nprobably what you mean by \"not simple text file\".</p>\n<p>You should probably change that to UTF-8 and make sure that the bsh script <br>\nrefers to the Unicode character for \\&lt;^sub&gt; without anything else.</p>\n<p>Generally, \"simple text\" and \"Unicode\" are in conflict, and there are <br>\nalways surprises to be expected.</p>\n<p>I can't say where the change of behaviour is coming from.  Isabelle2013 <br>\nwas composed of many contributing components, and Isabelle2013-1 of many <br>\nslightly different ones, and some genuine changes on our side.</p>\n<p>Behaviour is to some extent accidental, and one needs to change habits <br>\noccasionally.</p>\n<p>Makarius</p>",
        "id": 294254129,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660911931
    }
]