[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nThe output window shows the normal output (e.g. the current subgoals)<br>\nbefore the error output, (e.g. tactic failed).</p>\n<p>This is very inconvenient if the list of goals is longer, and you have<br>\nto scroll down every time to see the error message.</p>\n<p>In Isabelle2014, it was fine, and it showed <br>\n  errors, then normal output, then warnings.</p>",
        "id": 294640839,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661162029
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe main place to retrieve errors and warnings is the text area, via the <br>\nsquiggles or icons in the gutter.</p>\n<p>The main place to look at goal states is the Output buffer -- state and <br>\ntracing information are somehow \"internal\" and not shown directly in the <br>\ntext.</p>\n<p>The scheme we now see in Isabelle2015 is a consequence of continuous <br>\nreforms of the message model.  It is there for several months already, and <br>\nwe've had several weeks of RC testing.</p>\n<p>Unless there is a fundamental flaw still hidden somewhere, it is not going <br>\nto change again for this release line, just a few days before final <br>\nlift-off.</p>\n<p>Makarius</p>",
        "id": 294640851,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661162035
    },
    {
        "content": "<p>From: Gerwin Klein &lt;<a href=\"mailto:Gerwin.Klein@nicta.com.au\">Gerwin.Klein@nicta.com.au</a>&gt;<br>\nI’m not as worried about the scrolling as Peter (you could set goals_limit for instance, although I’d prefer not to have to), but I do have to point out that the squiggles can’t be the main interaction mechanism for errors. They are popups: you have to pick up the mouse, navigate there, and wait to see them. If the statement is big, the message sometimes obscures what you typed. That's too disruptive as main mechanism.</p>\n<p>It’s good to have the squiggles for errors (esp for position indication), and they work very well for warnings, but when you’re writing your proof, your brain doesn’t work as asynchronously as the document model. You will still have your mental focus at one point and you will still want to see the result of your last action as quickly as possible and react if it is an error. When you’re writing the proof, your mental focus is on the output window, so that’s where errors reports will cause the least mental overhead.</p>\n<p>We’re seeing a similar thing with the sledgehammer panel: the asynchrony works well, but depending on what the user is doing when they are proving, they will want to see the output before they do anything else. That doesn’t mean that not many other useful things can’t go on in the rest of the document, but the user will be synchronously waiting for the sledgehammer output before proceeding.</p>\n<p>Basically, the asynchrony of Isabelle and the document model have surpassed that of the user’s brains, so that side has now become the bottleneck.</p>\n<p>Cheers,<br>\nGerwin</p>\n<hr>\n<p>The information in this e-mail may be confidential and subject to legal professional privilege and/or copyright. National ICT Australia Limited accepts no liability for any damage caused by this email or its attachments.</p>",
        "id": 294640907,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661162047
    },
    {
        "content": "<p>From: \"C. Diekmann\" &lt;<a href=\"mailto:diekmann@in.tum.de\">diekmann@in.tum.de</a>&gt;<br>\nNow that you mention it, I also prefer errors before normal output.<br>\nProbably it's too late now but I hope we can get this behavior back<br>\nsoon.</p>",
        "id": 294641060,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661162112
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe reason why this changed in Isabelle2015 is that \"state\" output is not <br>\nnormal output.</p>\n<p>Having things \"back\" is no progress.  One always needs to look at the <br>\nwhole picture, as it is emerging step by step over many years.</p>\n<p>Makarius</p>",
        "id": 294641064,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661162114
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nOne only have to be careful not to \"progress away\" from your users, <br>\nor forgetting to introduce well-tested and practical working alternative<br>\nto a feature that gets abandoned for the sake of progress ...</p>\n<p>Using the output window which displays the proof state and errors is the<br>\nde-facto method how proofs are developed today by most users. If you<br>\nabandon the possibility to develop proofs this way because it is<br>\nold-style, better be sure that the new-style alternative is viable and<br>\nworks for your users. </p>\n<p>I have worked for two days with RC5 now, and found it the most annoying<br>\ndifference compared to Isabelle-2014, that I cannot easily see the error<br>\noutput of proof commands when trying to find a proof ... Instead of the<br>\nerror, it shows me the subgoals on which I attempted the proof method,<br>\nand I have to scroll down, or hover the mouse over the squiggly lines<br>\nand wait to see the error, which is the thing I am mostly interested in<br>\nin that moment ... people that do not regularly work with big subgoals<br>\nperhaps find it not that annoying, because they still see the error<br>\nmessage in the output window. However, I doubt that many people<br>\nregularly look at errors by hovering the mouse over the sqiggly<br>\nlines ...</p>",
        "id": 294641090,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661162129
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nMore than 5 weeks ago at RC1 this could have been reconsidered for this <br>\nrelease, but not at RC5 in the last moment before the lift-off.</p>\n<p>Makarius</p>",
        "id": 294641096,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661162133
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nWe are now past the release but this unpleasant behaviour is still with us. <br>\nPlease do not fortget about it.</p>\n<p>Thanks<br>\nTobias<br>\n<a href=\"/user_uploads/14278/21_Yy0xnEFJCbsKo8cdNelwD/smime.p7s\">smime.p7s</a></p>",
        "id": 294644161,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661163354
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe next release will probably happen next year, so there is plenty of <br>\ntime to figure out if there is anything to be done here at all.  So far <br>\nthis thread merely proved a lack of serious testing of release candidates.</p>\n<p>As usual, I need a proper description of what is perceived as <br>\n\"unpleasant\", \"broken\", \"bug\" etc. The initial message on this thread was <br>\nabout message order wrt. different kinds (state vs. non-state, especially <br>\nwarning, errors etc.).  This is e.g. illustrated in the following example:</p>\n<p>lemma A<br>\n   apply (tactic ‹fn st =&gt; (warning \"foo\"; all_tac st)›)</p>\n<p>Here the ordering is the same in Isabelle2014 and Isabelle2015.</p>\n<p>There were other changes in Isabelle2015, to address earlier complaints <br>\nfrom users.  Maybe that had an adverse effect elsewhere.  Or maybe it is <br>\njust a matter to get used to certain new behaviour.</p>\n<p>Makarius</p>",
        "id": 294644165,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661163359
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nOn 20/06/2015 23:36, Makarius wrote:</p>\n<blockquote>\n<p>On Sat, 20 Jun 2015, Tobias Nipkow wrote:<br>\n&gt;</p>\n<p>On 25/05/2015 11:56, Makarius wrote:</p>\n<blockquote>\n<blockquote>\n<p>On Mon, 25 May 2015, Peter Lammich wrote:</p>\n<blockquote>\n<p>I have worked for two days with RC5 now, and found it the most annoying<br>\n difference compared to Isabelle-2014</p>\n</blockquote>\n<p>More than 5 weeks ago at RC1 this could have been reconsidered for this<br>\n release,<br>\n but not at RC5 in the last moment before the lift-off.</p>\n<p>Makarius</p>\n</blockquote>\n<p>We are now past the release but this unpleasant behaviour is still with us.<br>\nPlease do not fortget about it.</p>\n</blockquote>\n<p>The next release will probably happen next year, so there is plenty of time to<br>\nfigure out if there is anything to be done here at all.  So far this thread<br>\nmerely proved a lack of serious testing of release candidates.</p>\n</blockquote>\n<p>The thread proves that there are at least three users who do not like the new <br>\nbehaviour and that you prefer to blame others.</p>\n<blockquote>\n<p>As usual, I need a proper description of what is perceived as \"unpleasant\",<br>\n\"broken\", \"bug\" etc. The initial message on this thread was about message order<br>\nwrt. different kinds (state vs. non-state, especially warning, errors etc.).</p>\n</blockquote>\n<p>Peter's first email was clear on this, and your replies showed that you <br>\nunderstood what he meant. To jog your memory, try this:</p>\n<p>lemma A<br>\napply(rule refl)</p>\n<blockquote>\n<p>This is e.g. illustrated in the following example:</p>\n<p>lemma A<br>\n   apply (tactic ‹fn st =&gt; (warning \"foo\"; all_tac st)›)</p>\n</blockquote>\n<p>No, it is not. You are suddenly dragging in warnings, but this thread is not <br>\nabout them.</p>\n<p>Tobias</p>\n<blockquote>\n<p>Here the ordering is the same in Isabelle2014 and Isabelle2015.</p>\n<p>There were other changes in Isabelle2015, to address earlier complaints from<br>\nusers.  Maybe that had an adverse effect elsewhere.  Or maybe it is just a<br>\nmatter to get used to certain new behaviour.</p>\n<p>Makarius<br>\n<a href=\"/user_uploads/14278/2cs8DocvD0xRuWxwn9L5pnuc/smime.p7s\">smime.p7s</a></p>\n</blockquote>",
        "id": 294644219,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661163367
    }
]