[
    {
        "content": "<p>From: Holger Blasum &lt;<a href=\"mailto:hbl@sysgo.com\">hbl@sysgo.com</a>&gt;<br>\nDear all,</p>\n<p>this is probably an easy one, I am trying to define the range <br>\nof a function that uses pattern matching on a datatype (num_t). <br>\nI can show it by \"auto\" in lemma f_range (see below) on <br>\na function that is num_t-valued. I seem to be missing an intermediate <br>\nstep once I am wrapping that num_t into a record num_wrapper_t, <br>\n(see proof attempt at f_wrapper_def below). </p>\n<p>theory record_valued_function<br>\nimports Main<br>\nbegin</p>\n<p>datatype num_t = ONE | TWO</p>\n<p>(* The following lemma has been proved by \"auto\". *)</p>\n<p>definition f::\"num_t =&gt; nat set\" where <br>\n  \"f n = (if (n = ONE) then {1} else {2})\"<br>\nlemma f_range: \"Union ({x. EX n. x = f n}) = {1,2}\"<br>\nproof-<br>\n  from f_def show ?thesis by auto<br>\nqed</p>\n<p>(* This is the lemma where I am missing an intermediate step. *)</p>\n<p>record num_wrapper_t = num::num_t<br>\ndefinition f_wrapper::\"num_wrapper_t =&gt; nat set\" where <br>\n  \"f_wrapper r = (if ((num r) = ONE) then {1} else {2})\"<br>\nlemma f_wrapper_range: \"Union ({x. (EX r. x = f_wrapper r)}) = {1,2}\"<br>\nproof-<br>\n  from f_wrapper_def have r1: \"ALL r. num r = ONE<br>\n  --&gt; f_wrapper r = {1}\" by fastforce<br>\n  from f_wrapper_def have r2: \"ALL r. num r = TWO<br>\n  --&gt; f_wrapper r = {2}\" by fastforce<br>\n  from r1 and r2 and f_wrapper_def show ?thesis<br>\nsorry &lt;-- fails</p>\n<p>Suggestions on how to complete the second lemma would be welcome,</p>",
        "id": 294222930,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660898486
    },
    {
        "content": "<p>From: Thomas Sewell &lt;<a href=\"mailto:Thomas.Sewell@nicta.com.au\">Thomas.Sewell@nicta.com.au</a>&gt;<br>\nYou can solve this problem via:</p>\n<p>lemma f_wrapper_range: \"Union ({x. (EX r. x = f_wrapper r)}) = {1,2}\"<br>\n   by (auto simp add: f_wrapper_def num_wrapper_t.splits)</p>\n<p>To be slightly clearer:</p>\n<p>lemma f_wrapper_range: \"Union ({x. (EX r. x = f_wrapper r)}) = {1,2}\"<br>\nproof -<br>\n   have exs: \"EX x. num x = ONE\" \"EX x. num x ~= ONE\"<br>\n     by (simp_all add: num_wrapper_t.splits exI[where x=TWO])<br>\n   thus ?thesis<br>\n     by (auto simp add: f_wrapper_def)<br>\nqed</p>\n<p>What you need to show is that there are objects in the num_wrapper_t <br>\ntype with num taking both values. That's not syntactically clear: if num <br>\nx had a more limited range, f_wrapper would too.</p>\n<p>Yours,<br>\n     Thomas.</p>",
        "id": 294222955,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660898504
    },
    {
        "content": "<p>From: Tjark Weber &lt;<a href=\"mailto:webertj@in.tum.de\">webertj@in.tum.de</a>&gt;<br>\nMain already provides image (`) and range operators, cf. Section 4 of<br>\n<a href=\"http://www.cl.cam.ac.uk/research/hvg/isabelle/dist/Isabelle2012/doc/main.pdf\">http://www.cl.cam.ac.uk/research/hvg/isabelle/dist/Isabelle2012/doc/main.pdf</a></p>\n<p>So you could simply claim \"range f = {1,2}\".</p>\n<p>Best regards,<br>\nTjark</p>",
        "id": 294222977,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660898511
    },
    {
        "content": "<p>From: Holger Blasum &lt;<a href=\"mailto:hbl@sysgo.com\">hbl@sysgo.com</a>&gt;<br>\nHi Thomas, Tjark,</p>\n<p>I realize I never followed up this on. Yup, worked. <br>\nThe \"splits\" lemma also made me curious about what exactly gets <br>\nintroduced after declaring a datatype and a record,<br>\nso I also played a bit with \"print_theorems\" after declaring <br>\nthe datatype and the record - useful information.</p>\n<p>Thanks,</p>",
        "id": 294227278,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660900597
    }
]