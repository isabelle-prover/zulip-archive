[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:Views@gmx.de\">Views@gmx.de</a>&gt;<br>\n-------- Original-Nachricht --------<br>\nif the type of the argument is given constructor based, i.e. <a href=\"http://s.th\">s.th</a> like<br>\ndatatype C = Name X | Var Y | Pair C C<br>\nthen you should use a primrec - definition, this will define the measure-function for you :)</p>\n<p>primrec Calculate<br>\n  \"Calculate (Name n) = 0\"<br>\n  \"Calculate (Var n) = 0\"<br>\n  \"Calculate (Pair a b) = Calculate a + Calculate b\"</p>",
        "id": 293912357,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660747765
    },
    {
        "content": "<p>From: Temesghen Kahsai &lt;<a href=\"mailto:lememta@gmail.com\">lememta@gmail.com</a>&gt;<br>\nHi all</p>\n<p>I would like to define function by induction \"Calculate\" ,that takes  <br>\na Term (that could be a Name, Variable or a Pair) and return a Nat.<br>\nEx. Calculate of Name is 0<br>\n        Calculate of Var is 0<br>\n        Calculate of Pair(m,n) is Calculate (m) + Calculate (n)</p>\n<p>Somthing similar to the Fibonacci function. Should I use Recdef or  <br>\nInductive? if I have to use Recdef  how I should map the Term (like:  <br>\nmeasure function Î»n. n in Fibonacci)?<br>\nThanks for any advice</p>\n<p>-T</p>",
        "id": 294040482,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660815046
    },
    {
        "content": "<p>From: Tjark Weber &lt;<a href=\"mailto:tjark.weber@gmx.de\">tjark.weber@gmx.de</a>&gt;<br>\nTemesghen,</p>\n<p>your example is simple enough to be defined with \"primrec\".  Here's how:</p>\n<p>datatype Term = Name<br>\n                | Var<br>\n                | Pair Term Term</p>\n<p>consts<br>\n    Calculate :: \"Term =&gt; nat\"</p>\n<p>primrec<br>\n    \"Calculate Name = 0\"<br>\n    \"Calculate Var = 0\"<br>\n    \"Calculate (Pair t1 t2) = Calculate t1 + Calculate t2\"</p>\n<p>If you want to define a more complicated function using \"recdef\", you will <br>\nneed to provide an appropriate measure function of type \"Term =&gt; nat\" (or, <br>\nless conveniently, a termination set of type \"(Term \\&lt;times&gt; Term) set\").  <br>\nNote that the datatype package already creates a default \"size\" function for <br>\neach datatype.  Use</p>\n<p>thm \"Term.size\"</p>\n<p>to view the size function's definition for your Term datatype.  See Sections <br>\n2.4.3 and 3.5 of the Isabelle/HOL Tutorial [1] for further details.</p>\n<p>Best,<br>\nTjark</p>\n<p>[1] <a href=\"http://isabelle.in.tum.de/dist/Isabelle/doc/tutorial.pdf\">http://isabelle.in.tum.de/dist/Isabelle/doc/tutorial.pdf</a></p>",
        "id": 294040705,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660815131
    }
]