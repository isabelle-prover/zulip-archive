[
    {
        "content": "<p>From: Christoph LANGE &lt;<a href=\"mailto:math.semantic.web@gmail.com\">math.semantic.web@gmail.com</a>&gt;<br>\nDear all,</p>\n<p>I learned about the \"try\" and \"try0\" tools to search for proof methods.<br>\n Now I wonder what's the right way of using them.</p>\n<p>When \"try0\" says that, e.g. \"by fastforce\" is the fastest way to prove<br>\nsomething, does this automatically mean that I should _use_ \"by<br>\nfastforce\"?  Or are there hidden traps?</p>\n<p>More generally, is it a recommended practice to occasionally revisit my<br>\nproofs, replace \"by &lt;some automated method&gt;\" by \"try\" everywhere, and<br>\nthen generally use the proof methods that \"try\" recommends?</p>\n<p>Thanks in advance for your help,</p>\n<p>Christoph</p>",
        "id": 294237978,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660905623
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nOn 08.03.2013 00:07, Christoph LANGE wrote:</p>\n<blockquote>\n<p>I learned about the \"try\" and \"try0\" tools to search for proof methods.<br>\n  Now I wonder what's the right way of using them.</p>\n</blockquote>\n<p>Some of the proof methods in Isabelle are pretty similar on a higher <br>\nlevel, but have different strengths (in particular <br>\nauto/fastforce/force). try0 was invented so that one does not need to <br>\ntry all the different calls by hand.</p>\n<p>Reporting the timing is only a nice side effect, so one can easily <br>\ndistinguish fast and slow proofs, not necessarily find \"the fastest\".</p>\n<blockquote>\n<p>When \"try0\" says that, e.g. \"by fastforce\" is the fastest way to prove<br>\nsomething, does this automatically mean that I should _use_ \"by<br>\nfastforce\"?  Or are there hidden traps?</p>\n</blockquote>\n<p>Using \"by fastforce\" in this case is perfectly fine. Keep in mind that <br>\nthe timings may vary.</p>\n<blockquote>\n<p>More generally, is it a recommended practice to occasionally revisit my<br>\nproofs, replace \"by&lt;some automated method&gt;\" by \"try\" everywhere, and<br>\nthen generally use the proof methods that \"try\" recommends?</p>\n</blockquote>\n<p>If you have a working proof which is robust and not too slow I don't see <br>\nany need to revisit this proof.</p>\n<p>-- Lars</p>",
        "id": 294238051,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660905660
    },
    {
        "content": "<p>From: Jasmin Christian Blanchette &lt;<a href=\"mailto:jasmin.blanchette@gmail.com\">jasmin.blanchette@gmail.com</a>&gt;<br>\nAm 08.03.2013 um 08:14 schrieb Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;:</p>\n<blockquote>\n<blockquote>\n<p>When \"try0\" says that, e.g. \"by fastforce\" is the fastest way to prove<br>\nsomething, does this automatically mean that I should _use_ \"by<br>\nfastforce\"?  Or are there hidden traps?</p>\n</blockquote>\n<p>Using \"by fastforce\" in this case is perfectly fine. Keep in mind that the timings may vary.</p>\n</blockquote>\n<p>I should add that the timings can be off, since we're using threads intensively. Sometimes it says 11 ms for blast and 12 ms for auto when the actual numbers are more like 1 ms for blast and 2 ms for auto. Take these timings with a grain of salt, as upper bounds.</p>\n<blockquote>\n<blockquote>\n<p>More generally, is it a recommended practice to occasionally revisit my<br>\nproofs, replace \"by&lt;some automated method&gt;\" by \"try\" everywhere, and<br>\nthen generally use the proof methods that \"try\" recommends?</p>\n</blockquote>\n<p>If you have a working proof which is robust and not too slow I don't see any need to revisit this proof.</p>\n</blockquote>\n<p>If you have the feeling that your theory is processed slowly, you can spend some time doing that. I've achieved significant gains for Andrei Popescu and Dmitriy Traytel's formalization of cardinals, by turning on global timing and trying various things (often manually, sometimes with try0 or try). But if you're happy with the processing speed, there's no reason to bother.</p>\n<p>Jasmin</p>",
        "id": 294238062,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660905667
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nJasmin,</p>\n<p>What is this \"global timing\"?</p>\n<p>I know how to use \"min\" to check the timing of metis proofs, and I now <br>\nsee that try0 and try give some timing information. But how do I check <br>\nthe timing of proofs in general?</p>\n<p>I found this in the mailing list archives:</p>\n<p>ML_command \"Toplevel.timing := true\"</p>\n<p>When I put that in, the Isar commands have an orange line under them. If <br>\nI hover over them, some give timing information, and some don't. If I <br>\nchange \"by\" to \"apply\", then I get timing information, but \"by\" by <br>\nitself doesn't give any timing information.</p>\n<p>This helps a lot. Is there something special I'm supposed to be doing to <br>\nuse it?</p>\n<p>Thanks,<br>\nGB</p>",
        "id": 294238075,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660905676
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nNote that in jEdit you can already get timings for each command without <br>\nchanging any settings. However, there seems to be no nice interface yet:</p>\n<p>In the Sidekick change the parser from \"isabelle\" to \"isabelle-raw\". If <br>\nyou now hover over commands in the Sidekick, you the see the answers <br>\nfrom the prover in some XML format, including a \"timing\" element.</p>\n<p>-- Lars</p>",
        "id": 294238077,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660905679
    },
    {
        "content": "<p>From: Jasmin Christian Blanchette &lt;<a href=\"mailto:jasmin.blanchette@gmail.com\">jasmin.blanchette@gmail.com</a>&gt;<br>\nHi Gottfried,</p>\n<blockquote>\n<p>What is this \"global timing\"?</p>\n<p>I know how to use \"min\" to check the timing of metis proofs, and I now see that try0 and try give some timing information. But how do I check the timing of proofs in general?</p>\n<p>I found this in the mailing list archives:</p>\n<p>ML_command \"Toplevel.timing := true\"</p>\n</blockquote>\n<p>I think that's what it is. I'm still using Proof General, and there it's activated by going to \"Isabelle &gt; Settings &gt; Global Timing\".</p>\n<blockquote>\n<p>When I put that in, the Isar commands have an orange line under them. If I hover over them, some give timing information, and some don't. If I change \"by\" to \"apply\", then I get timing information, but \"by\" by itself doesn't give any timing information.</p>\n</blockquote>\n<p>I don't know what the feature looks like in jEdit.</p>\n<blockquote>\n<p>This helps a lot. Is there something special I'm supposed to be doing to use it?</p>\n</blockquote>\n<p>I don't know. I use it if I want a background theory to load faster, to find out whether \"blast\" or \"simp\" is best.</p>\n<p>Cheers,</p>\n<p>Jasmin</p>",
        "id": 294238280,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660905788
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nIn jEdit you will get somehow unpredictable behaviour, as <br>\nToplevel.timing is global state. In particular, there is no clean way to <br>\ndisable it.</p>\n<p>-- Lars</p>",
        "id": 294238292,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660905794
    }
]