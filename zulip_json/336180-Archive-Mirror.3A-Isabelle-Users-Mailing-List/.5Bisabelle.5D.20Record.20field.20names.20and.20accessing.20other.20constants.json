[
    {
        "content": "<p>From: \"Yannick Duchêne (Hibou57 )\" &lt;<a href=\"mailto:yannick_duchene@yahoo.fr\">yannick_duchene@yahoo.fr</a>&gt;<br>\nHi people,</p>\n<p>A record field defines a constant of type function, which is the accessors  <br>\nof the field. There's a way to disambiguate between multiple of such  <br>\nconstants, selecting the one of a same name of different records, using a  <br>\nprefix; but I don't see or don't know a way to select one of a same name  <br>\nof the whole theory scope.</p>\n<p>A sample case:</p>\n<p>consts y :: bool<br>\n     consts z :: bool</p>\n<p>record u = x :: bool<br>\n     record v = x :: bool y :: bool</p>\n<p>term \"(| u.x = y |)\"<br>\n     term \"(| v.x = y, v.y = y |)\"</p>\n<p>Both above terms has are erroneous, due to type error with “y”,  <br>\ninterpreted as “v.y” (substituting “= y” to “= z” is OK). I can select “x”  <br>\n from “u” or “v” using the corresponding prefixes, but I don't know how to  <br>\nselect the “y” defined prior to the records definitions.</p>\n<p>Is there a prefix to select the “y::bool” constant?</p>\n<p>The case occurred during investigation, not during a real case, so that's  <br>\nnot blocking for now, but it teases me enough to make me open this thread.</p>",
        "id": 294232901,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660903383
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Yannick,</p>\n<p>You can refer to all constants with their unique long name (unless <br>\naccess has been disabled explicitly with hide_const). In your example, <br>\nyou can refer to y introduced in the consts declaration as TheoryName.y <br>\nwhere TheoryName is the name of the theory that contains the <br>\ndeclaration. Side remark: Name hiding is not specific to the record package.</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 294233071,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660903450
    }
]