[
    {
        "content": "<p>From: Holden Lee &lt;<a href=\"mailto:hl422@cam.ac.uk\">hl422@cam.ac.uk</a>&gt;<br>\nI need a record for a module but the <em>record module</em> in Module.thy actually<br>\ndefines a record for an algebra instead (an algebra has multiplication, a<br>\nmodule does not) - so is a bit of a misnomer.</p>\n<p>record ('a, 'b) module = \"'b <em>ring</em>\" +<br>\n  smult :: \"['a, 'b] =&gt; 'b\" (infixl \"⊙ı\" 70)<br>\n[note it's \"ring\" not \"monoid\"]</p>\n<p>The <em>locale module</em> is correct but does not seem to have a record<br>\nassociated with it.</p>\n<p>I'm wondering whether I've missed it somewhere, or I need to define my own.<br>\nIf I do formalise it myself (by changing \"ring\" to \"monoid\" above) will it<br>\nstill be compatible with the locale module? As a side note, is it true that<br>\na record can only \"inherit\" from one other record (so that there's no way<br>\nto have something like</p>\n<p>record ('a, 'b) Module = \"('a ring)\" + \"('b monoid)\" +<br>\n  smult :: \"['a, 'b] =&gt; 'b\" (infixl \"⊙ı\" 70)</p>\n<p>that would encapsulate both a ring and module?)</p>\n<p>[I'm formalising vector spaces over an arbitrary field; a vector space is a<br>\nmodule where the ring is a field.]</p>\n<p>(Thanks for all the helpful responses to my previous queries!)</p>\n<p>-Holden</p>",
        "id": 294282701,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660920875
    },
    {
        "content": "<p>From: Holden Lee &lt;<a href=\"mailto:hl422@cam.ac.uk\">hl422@cam.ac.uk</a>&gt;<br>\nIt seems that the reason for this is to use the additive \\oplus notation<br>\nfor module rather than \\otimes. (Monoid uses \\otimes, and it seems that<br>\nonce the notation is chosen it cannot be changed.)</p>\n<p>-Holden</p>",
        "id": 294282928,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660920949
    },
    {
        "content": "<p>From: Clemens Ballarin &lt;<a href=\"mailto:ballarin@in.tum.de\">ballarin@in.tum.de</a>&gt;<br>\nHi Holden,</p>\n<p>The problem is that records can only be extended by adding elements.  There is no multiple inheritance.  That is, it is not possible to extend the monoid record by scalar multiplication and then later join in with the ring record.  But this is not a big issue.  \\&lt;otimes&gt; is simply not specified for the module locale.</p>\n<blockquote>\n<p>It seems that the reason for this is to use the additive \\oplus notation<br>\nfor module rather than \\otimes. (Monoid uses \\otimes, and it seems that<br>\nonce the notation is chosen it cannot be changed.)</p>\n</blockquote>\n<p>A distinctive feature of the record approach is that notation is fixed (and one needs to rely on subscripts if necessary).  In an algebra you have two proper multiplications, \\&lt;otimes&gt;_R and \\&lt;otimes&gt;_M and a single multiplication by a scalar \\&lt;odot&gt;_M.</p>\n<p>Clemens</p>\n<blockquote>\n<p>2014-07-16 18:28 GMT+01:00 Holden Lee &lt;<a href=\"mailto:hl422@cam.ac.uk\">hl422@cam.ac.uk</a>&gt;:</p>\n<blockquote>\n<p>I need a record for a module but the <em>record module</em> in Module.thy</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>actually defines a record for an algebra instead (an algebra has<br>\nmultiplication, a module does not) - so is a bit of a misnomer.</p>\n<p>record ('a, 'b) module = \"'b <em>ring</em>\" +<br>\n  smult :: \"['a, 'b] =&gt; 'b\" (infixl \"⊙ı\" 70)<br>\n[note it's \"ring\" not \"monoid\"]</p>\n<p>The <em>locale module</em> is correct but does not seem to have a record<br>\nassociated with it.</p>\n<p>I'm wondering whether I've missed it somewhere, or I need to define my<br>\nown. If I do formalise it myself (by changing \"ring\" to \"monoid\" above)<br>\nwill it still be compatible with the locale module? As a side note, is it<br>\ntrue that a record can only \"inherit\" from one other record (so that<br>\nthere's no way to have something like</p>\n<p>record ('a, 'b) Module = \"('a ring)\" + \"('b monoid)\" +<br>\n  smult :: \"['a, 'b] =&gt; 'b\" (infixl \"⊙ı\" 70)</p>\n<p>that would encapsulate both a ring and module?)</p>\n<p>[I'm formalising vector spaces over an arbitrary field; a vector space is<br>\na module where the ring is a field.]</p>\n<p>(Thanks for all the helpful responses to my previous queries!)</p>\n<p>-Holden<br>\n</p>\n</blockquote>\n</blockquote>",
        "id": 294283055,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660920986
    }
]