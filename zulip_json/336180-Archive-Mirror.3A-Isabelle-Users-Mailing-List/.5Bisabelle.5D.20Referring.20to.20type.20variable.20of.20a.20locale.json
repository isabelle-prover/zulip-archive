[
    {
        "content": "<p>From: Stephan van Staden &lt;<a href=\"mailto:Stephan.vanStaden@inf.ethz.ch\">Stephan.vanStaden@inf.ethz.ch</a>&gt;<br>\nHi, I'm running into a problem whose solution should be simple. The <br>\nfollowing is fine:</p>\n<p>class cla = fixes foo :: \"'a\"<br>\nclass cla2 = cla + fixes a_set :: \"'a set\"<br>\nbegin<br>\nlemma lem1: \"foo \\&lt;in&gt; a_set \\&lt;Longrightarrow&gt; true\"<br>\nsorry<br>\nend</p>\n<p>Yet what I want is not fine:</p>\n<p>locale loc = fixes foo :: \"'a\"<br>\nlocale loc2 = loc + fixes a_set :: \"'a set\"<br>\nbegin<br>\nlemma lem1: \"foo \\&lt;in&gt; a_set \\&lt;Longrightarrow&gt; true\"<br>\nsorry<br>\nend</p>\n<p>The error I get is:<br>\nType unification failed<br>\nType error in application: incompatible operand type<br>\nOperator: op ∈ foo :: ('b ⇒ bool) ⇒ bool<br>\nOperand: a_set :: 'a ⇒ bool</p>\n<p>Can I somehow tell Isabelle that I want the type of a_set to be \"'a::loc <br>\nset\"?</p>\n<p>Thanks in advance for help!</p>",
        "id": 294150098,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660848987
    },
    {
        "content": "<p>From: Peter Gammie &lt;<a href=\"mailto:peteg42@gmail.com\">peteg42@gmail.com</a>&gt;<br>\nStephan,</p>\n<p>You can use a \"for\" clause to constrain the type of foo:</p>\n<p>locale loc = fixes foo :: \"'a\"<br>\nlocale loc2 = loc foo for foo :: \"'a\" + fixes a_set :: \"'a set\"<br>\nbegin<br>\nlemma lem1: \"foo \\&lt;in&gt; a_set \\&lt;Longrightarrow&gt; true\"<br>\nsorry<br>\nend</p>\n<p>There is a lot of information in the mailing list archives about locales - hopefully you can find it without too much bother.</p>\n<p>cheers<br>\npeter</p>",
        "id": 294150102,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660848990
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@kit.edu\">andreas.lochbihler@kit.edu</a>&gt;<br>\nHi Stephan,</p>\n<p>You can constrain foo's type to 'a in loc2 as follows:</p>\n<p>locale loc2 = loc +<br>\n   fixes a_set :: \"'a set\"<br>\n   constrains foo :: \"'a\"<br>\nbegin</p>\n<p>Alternatively, you can redeclare foo explicitly:</p>\n<p>locale loc2 = loc foo<br>\n   for foo :: \"'a\" +<br>\n   fixes a_set :: \"'a set\"<br>\nbegin</p>\n<p>The second solution would erase all mixfix syntax for foo if there was any.</p>\n<p>Since type classes must mention exactly one type type variable, so Isabelle <br>\nunifies the type variables, but locales do not have this restriction.</p>\n<p>Hope this helps,<br>\nAndreas</p>",
        "id": 294150110,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660848996
    },
    {
        "content": "<p>From: Stephan van Staden &lt;<a href=\"mailto:Stephan.vanStaden@inf.ethz.ch\">Stephan.vanStaden@inf.ethz.ch</a>&gt;<br>\nThanks for the help, Peter and Andreas. Problem solved! :)</p>\n<p>Stephan</p>",
        "id": 294150123,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660849002
    }
]