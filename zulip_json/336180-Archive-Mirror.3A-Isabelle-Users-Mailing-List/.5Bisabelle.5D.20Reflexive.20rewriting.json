[
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nHallo,</p>\n<p>I occasionally run into problems where a simplification rule leads to <br>\ninfinite reflexive rewriting, e.g. if I have a constant f and a rule <br>\nlike \"f ?x 1 = f 0 1\", then the simplifier will loop on goals like \"f x <br>\n1 = f y 1\", since \"f 0 1\" will get rewritten to itself infinitely often.</p>\n<p>I know how to fix this with NO_MATCH, but my question is this: why do we <br>\nnot introduce a check in the simplifier that prevents it from rewriting <br>\na term to itself? I don't know much about the simplifier, but I should <br>\nbe surprised if such a check were difficult to implement, and I do not <br>\nthink there would be a significant loss of performance. It also should <br>\nnot break any existing proofs or code.</p>\n<p>Cheers,</p>\n<p>Manuel</p>",
        "id": 294649458,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165512
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI am also not an expert on the Simplifier myself, but by default the blind <br>\nassumptions above need to be inverted. Just empirically, any tiny change <br>\nanywhere will cause lots of unexpected problems in obscure places.</p>\n<p>This does not mean, reforms should not be done -- we do it all the time. <br>\nBut it usually takes really long and hard work to push a change through.</p>\n<p>Makarius</p>",
        "id": 294649471,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165518
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nI agree with Makarius, although I suspect there wouldn't be many broken proofs. <br>\nOn the other hand I am sure it would impact performance noticeably. Now that we <br>\nhave NO_MATCH, I am reluctant to add a special case to the simplifier code.</p>\n<p>Tobias<br>\n<a href=\"/user_uploads/14278/ZFXyqOjuaIGaQBgniM_tZseb/smime.p7s\">smime.p7s</a></p>",
        "id": 294649538,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165531
    }
]