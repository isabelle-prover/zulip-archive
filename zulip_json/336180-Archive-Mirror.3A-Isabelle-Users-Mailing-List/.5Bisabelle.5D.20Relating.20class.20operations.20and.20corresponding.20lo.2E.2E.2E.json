[
    {
        "content": "<p>From: Bertram Felgenhauer via Cl-isabelle-users &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nHi,</p>\n<p>I'm wondering how to best convert between the typeclass and the locale<br>\nversions of operations. For example, the ordered tree property for<br>\nred-black trees can be written as rbt_sorted or ord.rbt_sorted (op &lt;),<br>\nand the two can be shown to be equivalent:</p>\n<p>theory Test<br>\n  imports \"HOL-Library.RBT_Impl\"<br>\nbegin</p>\n<p>lemma rbt_sorted_conv:<br>\n  \"ord.rbt_sorted (op &lt;) = rbt_sorted\"<br>\n  by (auto simp: rbt_sorted_def ord.rbt_sorted_def rbt_less_prop<br>\n    ord.rbt_less_prop rbt_greater_prop ord.rbt_greater_prop)</p>\n<p>end</p>\n<p>However, the way I'm proving this is horrible -- basically I'm unfolding<br>\nthe definitions down to the elementary class operations, which does not<br>\nscale very well. Is there a better way to obtain such conversions?</p>\n<p>Cheers,</p>\n<p>Bertram</p>",
        "id": 294734859,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189427
    },
    {
        "content": "<p>From: Bertram Felgenhauer via Cl-isabelle-users &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nI wrote:</p>\n<blockquote>\n<p>\"ord.rbt_sorted (op &lt;) = rbt_sorted\"</p>\n</blockquote>\n<p>On a related note, I was confused that rbt_sorted has a linorder<br>\nconstraint while being defined in an ord context. This is a<br>\nconsequence of the setup around</p>\n<p><a href=\"http://isabelle.in.tum.de/repos/isabelle/file/f5ca4c2157a5/src/HOL/Library/RBT_Impl.thy#l2055\">http://isabelle.in.tum.de/repos/isabelle/file/f5ca4c2157a5/src/HOL/Library/RBT_Impl.thy#l2055</a></p>\n<p>Is that really necessary?</p>\n<p>Cheers,</p>\n<p>Bertram</p>",
        "id": 294734879,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189432
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:mail@andreas-lochbihler.de\">mail@andreas-lochbihler.de</a>&gt;<br>\nDear Bertram,</p>\n<p>The change in the sort constraint goes back to a small renovation I did a few years ago. <br>\nOriginally, all the rbt_* functions were defined in the locales for the classes order and <br>\nlinorder. I then moved them to the syntactic class ord such that the code generator can <br>\ngenerate code for the locale-based version without further ado. For backwards <br>\ncompatibility, I re-installed the former sort constraints.</p>\n<p>The problem of relaxing the sort constraints is that the rbt_* operations do not really <br>\nmake sense with more general types, because they use if conditions of the form</p>\n<p>if x &lt; y then X else if y &lt; x then Y else Z</p>\n<p>If they were changed to</p>\n<p>if x &lt;= y then if y &lt;= x then Z else X else Y</p>\n<p>then they would also make sense, e.g., if the order is not antisymmetric. Changing this <br>\nwould mean to change the proofs, too. Moreover, since red-black trees are mainly used for <br>\ncode generation, it would be nice to change them to use a comparator, which is independent <br>\nof the logical order. Ren√© Thiemann has done some work in that direction in the AFP, but <br>\nthis has not yet been propagated into the Isabelle standard library.</p>\n<p>So, in short: No, it does not have to be this way. It is a historic relic and nobody was <br>\nsufficiently annoyed by it to put up the effort and change it.</p>\n<p>Andreas</p>",
        "id": 294734938,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189457
    },
    {
        "content": "<p>From: Bertram Felgenhauer via Cl-isabelle-users &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nI wrote:<br>\nTo answer my own question, one can exploit the automatic translation<br>\nbetween the locale and the typeclass with a tiny bit of obfuscation,<br>\ninstead of exhaustively unfolding the definitions. For the example this<br>\nlooks as follows:</p>\n<p>theory Test<br>\n  imports \"HOL-Library.RBT_Impl\"<br>\nbegin</p>\n<p>lemma (in ord) rbt_sorted_conv_aux:<br>\n  \"id ord.rbt_sorted (&lt;) = rbt_sorted\"<br>\n  by simp</p>\n<p>lemmas rbt_sorted_conv = rbt_sorted_conv_aux[unfolded id_def]</p>\n<p>end</p>\n<p>The downside is that this approach pollutes the locale's namespace with<br>\nuseless auxiliary facts.</p>\n<p>I still wish such identities would be accessible in a more direct way,<br>\nam I missing a way of doing that?</p>\n<p>Cheers,</p>\n<p>Bertram</p>",
        "id": 294741234,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661191605
    }
]