[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nJust the canonical question: What is the remaining use of {* ... *} here?</p>\n<p>It won't go away, but might eventually be superseded by \\&lt;open&gt; ... <br>\n\\&lt;close&gt; (which is rendered in Unicode as as ‹...› with some input method <br>\nin the Prover IDE via single backquote).</p>\n<p>I am myself using mainly ‹...› since a few months and it should be easy to <br>\nmake an Isabelle/Scala function to replace outer syntax {* ... *} <br>\nsystematically in existing Isabelle projects.</p>\n<p>At UITP 2014, Andrew Butterfield briefly referred to Isabelle/UTP <br>\n<a href=\"http://www-users.cs.york.ac.uk/~simonf/utp-isabelle\">http://www-users.cs.york.ac.uk/~simonf/utp-isabelle</a> in comparison to his <br>\nown UTP proof assistant.  He made a funny rant about \"terms in double <br>\nquotes with double single quotes to quote UTP within HOL\".  Moving more <br>\nand more towards cartouches ‹...› would make the nesting of Isabelle <br>\nlanguages more regular.</p>\n<p>Makarius</p>",
        "id": 294290985,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660923447
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:igbi@gmx.com\">igbi@gmx.com</a>&gt;<br>\nOn 14-08-27 04:17, Makarius wrote:</p>\n<blockquote>\n<p>On Tue, 26 Aug 2014, Gottfried Barrow wrote:</p>\n<blockquote>\n<p>There is one huge surface addition, and that's \\&lt;open&gt; and \\&lt;closed&gt;. <br>\nThose are huge, because they're subtle and graphical, and they help <br>\nto clearly delimit the beginning and end of text, better than {* and <br>\n*}, though those have their use.</p>\n</blockquote>\n<p>Just the canonical question: What is the remaining use of {* ... *} here?</p>\n</blockquote>\n<p>I was just playing it safe. It might come in useful to be able to <br>\nvisually differentiate something, or someone else may live and die by <br>\nit, for some reason.</p>\n<p>One problem with graphical characters is they don't align good in <br>\ncolumns with ASCII characters, so I set up my notation many times to <br>\ngive myself an ASCII-only version, if I also have one with graphical <br>\ncharacters in it.</p>\n<p>Just now testing out \\&lt;open&gt;, it has the same spacing as an ASCII <br>\ncharacter. Most non-ASCII symbols don't, though a few do, such as \\&lt;bar&gt;.</p>\n<blockquote>\n<p>He made a funny rant about \"terms in double quotes with double single <br>\nquotes to quote UTP within HOL\"...</p>\n</blockquote>\n<p>I take your word that if you didn't use some sort of delimiters for <br>\nterms, that it would come back to haunt you. It seems that the <br>\narchitects of new languages such as Scala and Rust would have abandoned <br>\nthe use of \"{\" and \"}\", like Haskell, but they didn't, so I guess they <br>\nhad good reason not to.</p>\n<p>Here are a maintenance question and comment I've held off on.</p>\n<p>Is there a way to keep PIDE from loading Scratch.thy? I don't use it. In <br>\nthe past, I think I tried to mess with the command line options for <br>\njEdit, though Isabelle, but couldn't force it to not load Scratch.thy.</p>\n<p>That brings up the MyDoggy plugin, which has some quirks, but I've <br>\nfigured workarounds. After I close Scratch.thy, MyDoggy won't parse any <br>\nother buffer view, so I have to shift-mouse-click on the Sidekick tab to <br>\neliminate it, and then shift-mouse-click on it to bring it back.</p>\n<p>The reason I specifically use MyDoggy is to be able to do horizontal <br>\nsplits on the plugin panels. Using MyDoggy is the only way I know of to <br>\ndo that, and it's very important for me to be able to do that. I can <br>\nsplit buffer views horizontally, but I can't normally split plugin <br>\npanels, you can only move them to the top, left, right, and bottom.</p>\n<p>I attach a screenshort to show my normal, one-window setup for the PIDE. <br>\nI normally permanently have two non-buffer views, sidekick and output, <br>\nin addition to two vertical buffer views. The other tabs, I have them <br>\nset up in pin mode. I click on them, they expand out without eliminating <br>\nsidekick and output, then I click on them to eliminate them. With 10 or <br>\nso plugin views, floating windows don't work, except for temporarily <br>\ndetaching a view.</p>\n<p>I understand that MyDoggy is not being actively developed, so it makes <br>\nsense for you not to officially use it. But without MyDoggy, I would be <br>\nin a constant state of annoyance, trying to find some PIDE view that <br>\nworks for me, but never does.</p>\n<p>Regards,<br>\nGB<br>\n<a href=\"/user_uploads/14278/VxPa1YkgSJiT0bVZ1wj27W2p/140827__mydoggy-horizontal-split.png\">140827__mydoggy horizontal split.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/VxPa1YkgSJiT0bVZ1wj27W2p/140827__mydoggy-horizontal-split.png\" title=\"140827__mydoggy horizontal split.png\"><img src=\"/user_uploads/14278/VxPa1YkgSJiT0bVZ1wj27W2p/140827__mydoggy-horizontal-split.png\"></a></div>",
        "id": 294291003,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660923454
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Wed, 27 Aug 2014, Gottfried Barrow wrote:</p>\n<blockquote>\n<blockquote>\n<p>He made a funny rant about \"terms in double quotes with double single<br>\n quotes to quote UTP within HOL\"...</p>\n</blockquote>\n<p>I take your word that if you didn't use some sort of delimiters for <br>\nterms, that it would come back to haunt you. It seems that the <br>\narchitects of new languages such as Scala and Rust would have abandoned <br>\nthe use of \"{\" and \"}\", like Haskell, but they didn't, so I guess they <br>\nhad good reason not to.</p>\n</blockquote>\n<p>There is no plan to remove delimiters, but to simplify them.  The Coq guys <br>\nmade the mistake a long time ago to assume that everything fits into just <br>\none formal syntax, and got a lot of problems over the years.  Coq PIDE is <br>\nstill very crude in its command-span parsing, for example.</p>\n<p>In Isabelle we've had systematic inner syntax that is delimited within the <br>\nouter syntax for uncounted years, but the different kinds of quotes make <br>\nthings a bit complicated and unesthetic.  With cartouches there is a <br>\nchance to improve that.  See also ~~/src/HOL/ex/Cartouche_Examples.thy in <br>\nIsabelle2014 -- it is just playground of possibilities.</p>\n<blockquote>\n<p>Is there a way to keep PIDE from loading Scratch.thy? I don't use it. In <br>\nthe past, I think I tried to mess with the command line options for <br>\njEdit, though Isabelle, but couldn't force it to not load Scratch.thy.</p>\n</blockquote>\n<p>Scratch.thy is not opened if you specify other files to open.</p>\n<p>On Windows the main Isabelle.exe application wrapper accepts normal <br>\narguments according to that platform, e.g. via drag-and-drop.  You can <br>\nalso create a Windows alias for the exe and give it some arguments via the <br>\nWindows Properties dialog.  Using the special argument \"--\" (the <br>\nend-of-options indicator of jEdit) seems to do the trick to imitate a <br>\nsemantically empty command-line that looks syntactically non-empty.</p>\n<blockquote>\n<p>I understand that MyDoggy is not being actively developed, so it makes <br>\nsense for you not to officially use it. But without MyDoggy, I would be <br>\nin a constant state of annoyance, trying to find some PIDE view that <br>\nworks for me, but never does.</p>\n</blockquote>\n<p>There was a recent initiative on the jedit-devel mailing list to re-assign <br>\nmaintainers to some unmaintained plugins.  MyDoggy was one of them.  It <br>\nhas the additional problem that the underlying MyDoggy project is <br>\ninactive.</p>\n<p>Anybody with notable Java/Swing skills should be able to revive that. See <br>\nalso <a href=\"http://mydoggy.sourceforge.net/\">http://mydoggy.sourceforge.net/</a></p>\n<p>Makarius</p>",
        "id": 294291234,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660923527
    }
]