[
    {
        "content": "<p>From: René Neumann &lt;<a href=\"mailto:rene.neumann@in.tum.de\">rene.neumann@in.tum.de</a>&gt;<br>\nHi,</p>\n<p>in my theories I have a fun foo, but I'd like to have it called 'bar' in<br>\nmy SML code (in usage and definition). Is this possible in general<br>\n(without having to add a function bar to Isabelle with the same content<br>\nas foo)?</p>\n<p>I tried:</p>\n<p>definition \"bar = foo\"<br>\nlemma [code_unfold]: \"foo = bar\" by (simp add: bar_def)</p>\n<p>but this did not work out as expected.</p>\n<p>Thanks,<br>\nRené<br>\n<a href=\"/user_uploads/14278/NtnZ9ryvuwLFnGiMl4Wivnqb/smime.p7s\">smime.p7s</a></p>",
        "id": 294230647,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902321
    },
    {
        "content": "<p>From: <a href=\"mailto:andreas.lochbihler@kit.edu\">andreas.lochbihler@kit.edu</a><br>\nHi Rene,</p>\n<p>the code generator provides no means to specify how a constant be named <br>\nin the generated code, so you have to introduce another constant with <br>\nthe desired name and do the necessary setup yourself. Your attempt <br>\nalready pursued the right direction, but it was not complete. You must <br>\nalso transfer foo's code equation to bar:</p>\n<p>lemmas [code] =  foo.simps[folded bar_def] (* if foo is defined with <br>\nprimrec or fun *)<br>\n  foo_def[folded bar_def] (* if foo is defined with definition *)<br>\n  xxx[folded bar_def] (* if xxx is your custom code equation for foo *)</p>\n<p>Here's how this works:</p>\n<ol>\n<li>\n<p>code_unfold on an equation \"lhs = rhs\" tells the code generator to <br>\nreplace any lhs instance on the right-hand side of any other code <br>\nequation with the appropriate rhs. Thus, it rewrites usages of foo to <br>\nusages of bar.</p>\n</li>\n<li>\n<p>The above addition declares foo's code equation for bar, hence bar <br>\nbecomes implemented the same way as foo would.</p>\n</li>\n</ol>\n<p>Afterwards, you can even remove foo's code equations from the code <br>\ngenerator setup, if you wished to do so.</p>\n<p>Hope this helps,<br>\nAndreas</p>\n<p>Quoting René Neumann &lt;<a href=\"mailto:rene.neumann@in.tum.de\">rene.neumann@in.tum.de</a>&gt;:</p>",
        "id": 294230928,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902462
    },
    {
        "content": "<p>From: René Neumann &lt;<a href=\"mailto:rene.neumann@in.tum.de\">rene.neumann@in.tum.de</a>&gt;<br>\nHi Andreas,</p>\n<p>thanks for the explanation. I was using this kind of lifting already to<br>\nget code generation for locale interpretations work properly. But for<br>\nwhatever reason I did not see that it is also applicable here. (And this<br>\n'lifting from locales' is also just renaming ...)</p>\n<ul>\n<li>René<br>\n<a href=\"/user_uploads/14278/CAJs8gp1hWbU27Lbgq3413Xu/smime.p7s\">smime.p7s</a></li>\n</ul>",
        "id": 294231398,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902665
    }
]