[
    {
        "content": "<p>From: René Neumann &lt;<a href=\"mailto:rene.neumann@in.tum.de\">rene.neumann@in.tum.de</a>&gt;<br>\nDear all,</p>\n<p>I've used COMP so far in the following manner:</p>\n<p>lemma lift_foo:<br>\n   assumes \"asm ==&gt; concl\"<br>\n   shows   \"asm ==&gt; concl'\"<br>\nproof - ... qed</p>\n<p>lemmas foo1_impl = foo1[COMP lift_foo]<br>\nlemmas foo2_impl = foo2[COMP lift_foo]<br>\nlemmas foo3_impl = foo3[COMP lift_foo]<br>\n...</p>\n<p>Now I'm porting to Isabelle2013, where COMP has been removed.</p>\n<p>Unfortunately, THEN is no sufficient replacement as the resulting<br>\nfoo_impl has a remaining \"asm ==&gt; asm\" in the premises, which is ugly.</p>\n<p>Is there some nice way of replacing the use of COMP here? Spelling out<br>\nthe whole proofs (i.e. proving \"asm ==&gt; concl'\" directly, for each<br>\nconcl') is no real option here, as concl and concl' are usually quite<br>\nlarge properties which I do not intend to duplicate (maintainability and<br>\nsuch...)</p>\n<p>Thanks a lot,<br>\nRené<br>\n<a href=\"/user_uploads/14278/sywnHkiwuUqdJX2DGNahm43z/smime.p7s\">smime.p7s</a></p>",
        "id": 294244072,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908220
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Mon, 29 Jul 2013, René Neumann wrote:</p>\n<blockquote>\n<p>Now I'm porting to Isabelle2013, where COMP has been removed.</p>\n</blockquote>\n<p>In such situations, the NEWS file is the first place to look.  It says:</p>\n<ul>\n<li>Discontinued obsolete attribute \"COMP\".  Potential INCOMPATIBILITY,<br>\nuse regular rule composition via \"OF\" / \"THEN\", or explicit proof<br>\nstructure instead.  Note that Isabelle/ML provides a variety of<br>\noperators like COMP, INCR_COMP, COMP_INCR, which need to be applied<br>\nwith some care where this is really required.</li>\n</ul>\n<blockquote>\n<p>Unfortunately, THEN is no sufficient replacement as the resulting<br>\nfoo_impl has a remaining \"asm ==&gt; asm\" in the premises, which is ugly.</p>\n</blockquote>\n<p>The usual game is to write statements and proofs in a way that one does <br>\nnot have to disobey the nice structure of rules provided by Larry Paulson <br>\nin 1989. There are many ways to do that, but from the given example it is <br>\nhard to guess what is right.</p>\n<p>Makarius</p>",
        "id": 294244162,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908250
    },
    {
        "content": "<p>From: René Neumann &lt;<a href=\"mailto:rene.neumann@in.tum.de\">rene.neumann@in.tum.de</a>&gt;<br>\nAm 29.07.2013 22:39, schrieb Makarius:</p>\n<blockquote>\n<p>On Mon, 29 Jul 2013, René Neumann wrote:</p>\n<blockquote>\n<p>Now I'm porting to Isabelle2013, where COMP has been removed.</p>\n</blockquote>\n<p>In such situations, the NEWS file is the first place to look.  It says:</p>\n</blockquote>\n<p>I had a look there. That's how I noted it was gone ...</p>\n<blockquote>\n<ul>\n<li>Discontinued obsolete attribute \"COMP\".  Potential INCOMPATIBILITY,<br>\nuse regular rule composition via \"OF\" / \"THEN\", </li>\n</ul>\n</blockquote>\n<p>Can't make it work (that's why I asked here on the list).</p>\n<blockquote>\n<p>or explicit proof structure instead. </p>\n</blockquote>\n<p>Don't want it that way.</p>\n<blockquote>\n<p>Note that Isabelle/ML provides a variety of<br>\noperators like COMP, INCR_COMP, COMP_INCR, which need to be applied<br>\nwith some care where this is really required.</p>\n</blockquote>\n<p>I don't know Isabelle/ML in a way to make it work.</p>\n<blockquote>\n<blockquote>\n<p>Unfortunately, THEN is no sufficient replacement as the resulting<br>\nfoo_impl has a remaining \"asm ==&gt; asm\" in the premises, which is ugly.</p>\n</blockquote>\n<p>The usual game is to write statements and proofs in a way that one does<br>\nnot have to disobey the nice structure of rules provided by Larry<br>\nPaulson in 1989. There are many ways to do that, but from the given<br>\nexample it is hard to guess what is right.</p>\n</blockquote>\n<p>Could you, nevertheless, provide some pointers here, please? Because<br>\ncurrently, I'm unsure how I'd have to refine my example to make my<br>\nintention more visible.</p>\n<ul>\n<li>René</li>\n</ul>",
        "id": 294244168,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908256
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nCan you give a concrete example where the use of COMP leads to something the<br>\nIsabelle user needs to be protected from?</p>\n<p>Tobias</p>",
        "id": 294244195,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908268
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear René,</p>\n<p>You will have to restructure your lemmas or proofs unless you want to define your own COMP <br>\nattribute, there's no way to do it as before with THEN/OF. Here are a few ideas.</p>\n<blockquote>\n<p>lemma lift_foo:<br>\n    assumes \"asm ==&gt; concl\"<br>\n    shows   \"asm ==&gt; concl'\"<br>\nproof - ... qed</p>\n<p>lemmas foo1_impl = foo1[COMP lift_foo]<br>\nlemmas foo2_impl = foo2[COMP lift_foo]<br>\nlemmas foo3_impl = foo3[COMP lift_foo]<br>\n...<br>\nI suspect that foo1 has the form \"asm ==&gt; concl\", right?</p>\n</blockquote>\n<ol>\n<li>The clean way: Use --&gt; instead of ==&gt; for those parts that you want to unify in one <br>\nstep, i.e.,</li>\n</ol>\n<p>lemma lift_foo:<br>\n   assumes \"asm --&gt; concl\"<br>\n   shows \"asm --&gt; concl'\"<br>\nproof ... qed</p>\n<p>lemmas foo1_impl = foo1[THEN lift_foo]</p>\n<ol start=\"2\">\n<li>\n<p>Note that \"asm\" as a premise in the assumes is redundant in lift_foo. The following <br>\nlemma is equivalent:</p>\n<p>lift_foo': \"[| concl; asm |] ==&gt; concl\"</p>\n</li>\n</ol>\n<p>If you now do rule composition with THEN, you get \"[| asm; asm |] ==&gt; concl'\"<br>\ninstead of \"[| asm ==&gt; asm; asm |] ==&gt; concl'\". I don't know if that's better.<br>\nIf you can prove \"concl ==&gt; concl'\" without the assumption asm, then that works perfectly.</p>\n<ol start=\"3\">\n<li>Hide the assumption asm in a local context to hide the asm in rule compositions. <br>\nInstead of an unnamed context, you might also want to consider a locale which you can <br>\nreopen later on.</li>\n</ol>\n<p>context assumes asm begin</p>\n<p>lemma lift_foo: \"concl ==&gt; concl'\"<br>\nproof - ... qed</p>\n<p>lemma foo1: \"concl\"</p>\n<p>lemmas foo1_impl = foo1[THEN lift_foo]</p>\n<p>end</p>\n<ol start=\"4\">\n<li>The hack: You can use unfold with an appropriate lemma to get rid of the \"asm ==&gt; asm\" <br>\npremise as follows:</li>\n</ol>\n<p>lemma remove_trivial_assumption: \"((PROP A ==&gt; PROP A) ==&gt; PROP B) == PROP B\"<br>\n   by(rule equal_intr_rule)<br>\nlemmas foo1_impl = foo1[THEN lift_foo, unfolded remove_trivial_assumption]</p>\n<p>lemma remove_double_assumption: \"(PROP A ==&gt; PROP A ==&gt; PROP B) == (PROP A ==&gt; PROP B)\"<br>\n   by(rule equal_intr_rule)<br>\nlemmas foo1_impl = foo[THEN lift_foo', unfolded remove_double_assumption]</p>\n<p>Hope this helps,<br>\nAndreas</p>",
        "id": 294244206,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908274
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nEven after reading the answers by Andreas, I don't understand the purpose <br>\nof lift_foo.</p>\n<p>Just technically, you can produce a compact form in the sense of (1) above <br>\non the spot, as a variations of the tricks that were shown already:</p>\n<p>thm lift_foo [unfolded atomize_all atomize_imp]</p>\n<p>Can you explain the application behind all this?</p>\n<p>Makarius</p>",
        "id": 294244255,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908293
    },
    {
        "content": "<p>From: René Neumann &lt;<a href=\"mailto:rene.neumann@in.tum.de\">rene.neumann@in.tum.de</a>&gt;<br>\nI have a ton of theorems about some function foo. Now I have some<br>\nrefinement foo_impl, where most of the properties of foo also hold.</p>\n<p>For usability reasons I'd like to lift the appropriate theorems from foo<br>\nto foo_impl (so I don't have to do it everytime I need a lemma about<br>\nfoo_impl), but I'd also like to avoid duplication (i.e. stating the<br>\nproperties over and over again, as it then becomes quite tedious to do<br>\nsmaller refactoring).</p>\n<p>So in the end, it is more of academic use (hah!) and could easily be<br>\nsolved by copy'n'paste,<br>\nbut I hate copying boilerplate.</p>\n<ul>\n<li>René<br>\n<a href=\"/user_uploads/14278/wq5Z0qN3j0Cj2geAhaMJEpD8/smime.p7s\">smime.p7s</a></li>\n</ul>",
        "id": 294244272,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908299
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nCOMP is conceptually outside the Isabelle/Pure framework (Paulson 1989) <br>\nand the Isabelle/Isar proof language (Wenzel 1999).  It violates certain <br>\nassumptions about the structure of rules.</p>\n<p>We've had a recent isabelle-users thread on COMP in May, with the typical <br>\nsituation that someone does not understand the purpose of !! and ==&gt; yet, <br>\nis surprised about its behaviour in rule composition, and wants to bypass <br>\nit without understanding the consequences.</p>\n<p>Before everything is repeated, see especially this explanation by Larry: <br>\n<a href=\"https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2013-May/msg00016.html\">https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2013-May/msg00016.html</a></p>\n<p>Even in its internal use COMP came out of use in recent years -- the <br>\n\"INCR\" variants are more frequent now, but none of that is for regular <br>\nuse, it is just too complicated.</p>\n<p>We've had a few breakdowns on the isabelle-dev mailing list this year <br>\nalready, coming on us from distant past.  This resulted in Thm.bicompose <br>\nin 8 variants (one function with 3 funny flags), where INCR_COMP and <br>\nCOMP_INCR are just the tip of the iceberg. Just formally, such diversity <br>\ncannot be part of a public programming API in Isabelle/ML.  I am even <br>\nmyself never quite sure which of the many COMP variants need to be used <br>\nwhen building certain system infrastructure.</p>\n<p>For Isabelle/Isar the Isabelle2013/NEWS claims that it is really obsolete, <br>\nbased on empirical information from AFP as usual.  So far this thread did <br>\nnot show a counterexample yet, but it might still come.  (If all fails <br>\nusers may always define their own Isar attributes as explained in the <br>\nisar-ref manual, but I don't think this will be required.)</p>\n<p>Makarius</p>",
        "id": 294244290,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908305
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nIn this generic way, it sounds like an application of locale + <br>\ninterpretation.</p>\n<p>Makarius</p>",
        "id": 294244323,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908317
    },
    {
        "content": "<p>From: René Neumann &lt;<a href=\"mailto:rene.neumann@in.tum.de\">rene.neumann@in.tum.de</a>&gt;<br>\nWe already have to deal with way too much locales here, adding one more<br>\nlayer would only complicate things.</p>\n<p>So for the moment, I'll stick with proving it explicitly.</p>\n<p>Thanks for the hints though (also @Andreas -- unfortunately, I couldn't<br>\nuse on of those proposals to make it 'feel right', it always felt kind<br>\nof hackish).</p>\n<ul>\n<li>René<br>\n<a href=\"/user_uploads/14278/zcHiKeHXwBhVivnAb3mv7DA6/smime.p7s\">smime.p7s</a></li>\n</ul>",
        "id": 294244355,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908330
    },
    {
        "content": "<p>From: René Neumann &lt;<a href=\"mailto:rene.neumann@in.tum.de\">rene.neumann@in.tum.de</a>&gt;<br>\nI'm with Tobias (as he stated in the thread you mentioned) to have an OF<br>\nand/or THEN variant which allows to instantiate the premise without<br>\nhandling ==&gt; and !! in a special way, because it is sometimes extremely<br>\nhelpful.</p>\n<p>And COMP is this THEN variant, is it not?</p>\n<p>Btw: Reading the implementation manual on Drule.compose. It should read<br>\n\"The unique s that unifies ψ and φ_i\" (i.e. φ_i and not φ), shouldn't it?</p>\n<ul>\n<li>René<br>\n<a href=\"/user_uploads/14278/OElWhWWUglC0Wtm2pMPcw90u/smime.p7s\">smime.p7s</a></li>\n</ul>",
        "id": 294244377,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908337
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nLooking here again, this note by Andreas seems important.</p>\n<p>Makarius</p>",
        "id": 294244408,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908348
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Wed, 31 Jul 2013, René Neumann wrote:</p>\n<blockquote>\n<p>And COMP is this THEN variant, is it not?</p>\n</blockquote>\n<p>Not at all.  It is just one big misunderstanding.  Every time I see <br>\nremaining occurrences COMP in the Isabelle sources, I need to check <br>\nseveral times to convince myself that it is probably right, and not better <br>\nINCR_COMP or COMP_INCR, or one of the new 8 uniform varieties of the <br>\nthing that are probably in the next release (for internal use only).</p>\n<p>If you want to use Isabelle professionally, you should forget about COMP <br>\nand do it by more standard means.</p>\n<blockquote>\n<p>Btw: Reading the implementation manual on Drule.compose. It should read <br>\n\"The unique s that unifies ψ and φ_i\" (i.e. φ_i and not φ), shouldn't <br>\nit?</p>\n</blockquote>\n<p>Which implementation manual are you reading excactly?  I don't see this in <br>\n<a href=\"http://isabelle.in.tum.de/dist/Isabelle2013/doc/implementation.pdf\">http://isabelle.in.tum.de/dist/Isabelle2013/doc/implementation.pdf</a></p>\n<p>Makarius</p>",
        "id": 294244431,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908354
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nTools that really need that (which was not yet proven here) are doing that <br>\nvia the \"prop\" protective marker, and protectI, protectD rules etc. <br>\ntogether with plain resolution of Pure.</p>\n<p>This is how all the second-generation locale infrastructure was made in <br>\nthe early/mid 2000-nds (COMP is from the early 1990-ies).</p>\n<p>Makarius</p>",
        "id": 294244443,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908360
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe above \"Drule.compose\" (instead of \"compose\") is probably from some <br>\narbitrary repository version after the Isabelle2013, but I had already <br>\ndropped the subscript \"i\" last November when refurbishing really ancient <br>\nmaterial by Larry, so it is not there in the official release.</p>\n<p>In the next release, the old \"ref\" manual will no longer exist, and its <br>\nremaining material fully absorbed into the isar-ref and implementation <br>\nmanuals -- after 5 years of working on that.</p>\n<p>Makarius</p>",
        "id": 294244506,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908366
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi René,</p>\n<p>(the thread is a little but fringed already, I answer at an arbitrary point)</p>\n<p>in the next Isabelle release, there will be interpretation within<br>\nbounded contexts which is maybe helpful in your scenario.</p>\n<p>context<br>\n  fixes …<br>\n  assumes …<br>\nbegin</p>\n<p>…</p>\n<p>interpretation … -- {* + *}</p>\n<p>…</p>\n<p>end -- {* here all facts stemming from + disappear again *}</p>\n<p>This construction appears to me at another powerful means to organize<br>\nabstract specifications and interpretations since it avoid the ancient<br>\n»can bin problem« that you can either interpret a whole locale or nothing.</p>\n<p>Would this fit your scenario?  For me this is indeed hard to judge<br>\nwithout a look at your theories.</p>\n<p>Hope this helps,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/wCtDqrESEjybgRWCNrClcwya/signature.asc\">signature.asc</a></p>",
        "id": 294246139,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908974
    },
    {
        "content": "<p>From: René Neumann &lt;<a href=\"mailto:rene.neumann@in.tum.de\">rene.neumann@in.tum.de</a>&gt;<br>\nThanks for the hint (such a thing is good to know). Unfortunately, it<br>\ndoes not fit my usecase without a larger rewrite. And also I'd like to<br>\navoid introducing new locales (I have several dozens here already that<br>\nare already too confusing).</p>\n<p>I now used one of the proposals of Andreas, namely an unnamed context.<br>\nThis worked out pretty well as it turned out to not just be a<br>\nworkaround but a really useful tool here (a large bunch of lemmas with<br>\nthe same assumption). (Now all that remains to remember is the<br>\nexistence of this context when looking at the theory again in a later<br>\npoint in time :))</p>\n<p>Thanks to all,<br>\nRené<br>\n<a href=\"/user_uploads/14278/pnUpjr2TVw9a1Ln4jEnXiRDR/smime.p7s\">smime.p7s</a></p>",
        "id": 294246153,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908980
    },
    {
        "content": "<p>From: René Neumann &lt;<a href=\"mailto:rene.neumann@in.tum.de\">rene.neumann@in.tum.de</a>&gt;<br>\nAm 31.07.2013 23:48, schrieb Makarius:</p>\n<blockquote>\n<p>On Wed, 31 Jul 2013, Makarius wrote:</p>\n<blockquote>\n<blockquote>\n<p>Btw: Reading the implementation manual on Drule.compose. It should<br>\nread \"The unique s that unifies ψ and φ_i\" (i.e. φ_i and not φ),<br>\nshouldn't it?</p>\n</blockquote>\n<p>Which implementation manual are you reading excactly?  I don't see<br>\nthis in<br>\n<a href=\"http://isabelle.in.tum.de/dist/Isabelle2013/doc/implementation.pdf\">http://isabelle.in.tum.de/dist/Isabelle2013/doc/implementation.pdf</a></p>\n</blockquote>\n<p>The above \"Drule.compose\" (instead of \"compose\") is probably from some<br>\narbitrary repository version after the Isabelle2013, but I had already<br>\ndropped the subscript \"i\" last November when refurbishing really ancient<br>\nmaterial by Larry, so it is not there in the official release.</p>\n</blockquote>\n<p>Yes. In the release version it is just named \"compose\" without the<br>\nDrule. But the rest of text is the same (page 89 near the bottom).</p>\n<p>Still wondering: Was dropping the subscript intentional? Or is my<br>\nunderstanding completely off and it is indeed correct without the i?</p>\n<blockquote>\n<p>In the next release, the old \"ref\" manual will no longer exist, and its<br>\nremaining material fully absorbed into the isar-ref and implementation<br>\nmanuals -- after 5 years of working on that.</p>\n</blockquote>\n<p>I don't get the context (from the rest of the mail/thread), but<br>\ncongratulation.</p>\n<ul>\n<li>René<br>\n<a href=\"/user_uploads/14278/dBdqKDmh1kLUVuylvLnq-jEU/smime.p7s\">smime.p7s</a></li>\n</ul>",
        "id": 294246430,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660909085
    },
    {
        "content": "<p>From: René Neumann &lt;<a href=\"mailto:rene.neumann@in.tum.de\">rene.neumann@in.tum.de</a>&gt;<br>\nI'd like to point out though, that I do not use Isabelle/ML and hence<br>\nthe point (as I understand you), that using it in ML without thought<br>\nmight deal some harm, does not apply here. Or could it really deal some<br>\ndamage in the high-level view I'm using?</p>\n<p>I do trust you that there are good reasons to remove COMP. Still my wish<br>\nto have those THEN/OF variants remains :)</p>\n<ul>\n<li>René<br>\n<a href=\"/user_uploads/14278/9yvhH7fqVPvBLuN2RVUcq9BZ/smime.p7s\">smime.p7s</a></li>\n</ul>",
        "id": 294246583,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660909152
    },
    {
        "content": "<p>From: René Neumann &lt;<a href=\"mailto:rene.neumann@in.tum.de\">rene.neumann@in.tum.de</a>&gt;<br>\nI'm not an Isabelle-Dev. I'm not interested in writing tools, I just<br>\nwant to prove theorems.<br>\n<a href=\"/user_uploads/14278/lJJz8z-xQXat92g56f0w97fW/smime.p7s\">smime.p7s</a></p>",
        "id": 294246812,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660909220
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nNo, I merely dropped the old-style Latex @i of Larry when updating the <br>\nmanual last November.  This \"painting\" of informal text is not <br>\nmachine-checked, so it can occasionally break down.</p>\n<p>Makarius</p>",
        "id": 294246981,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660909286
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Thu, 1 Aug 2013, René Neumann wrote:</p>\n<blockquote>\n<p>I'd like to point out though, that I do not use Isabelle/ML and hence<br>\nthe point (as I understand you), that using it in ML without thought<br>\nmight deal some harm, does not apply here. Or could it really deal some<br>\ndamage in the high-level view I'm using?</p>\n</blockquote>\n<p>We did not get very far so far, the thread is going backwards in circles.</p>\n<p>Andreas Lochbihler made several constructive attempts to guess what you <br>\nare trying to do and propose some alternatives.  Maybe you can show more <br>\nof the actual application, so that it can be sorted out the proper way.</p>\n<blockquote>\n<p>I do trust you that there are good reasons to remove COMP.</p>\n</blockquote>\n<p>Just normal garbage collection on the sources: it was no longer used and <br>\nin conflict with certain concepts, causing occasional breakdown in <br>\nunexpected situations, so it was deleted.  This time it was not about <br>\n\"old-fashioned\" or \"legacy\" features, but obsolete things as the NEWS <br>\nexplained that.  If it would have been non-obsolete, I would have had to <br>\nsit down and think about getting 8 variants of COMP into Isar source <br>\nlanguage.</p>\n<p>Makarius</p>",
        "id": 294247193,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660909354
    }
]