[
    {
        "content": "<p>From: Mitchell Wand &lt;<a href=\"mailto:wand@ccs.neu.edu\">wand@ccs.neu.edu</a>&gt;<br>\nHi,</p>\n<p>I'm trying to run the cygwin version of isabelle from my Windows Gnu Emacs<br>\n22.1.  I successfully built isabelle from the cygwin-x86 image, calling<br>\n\"build\" to compile HOL.  When I call \"isabelle\" from a cygwin bash window, I<br>\nget</p>\n<blockquote>\n<p>val it = () : unit<br>\nval commit = fn : unit -&gt; bool<br>\nML&gt;</p>\n</blockquote>\n<p>which I'm assuming is right.</p>\n<p>I have set isabelle-program-name to point to a batch file that sits in the<br>\nemacs bin directory.  The latest version of the batch file says:</p>\n<p>rem @echo off<br>\nrem set ISATOP=/usr/local/Isabelle2007<br>\nrem set ISALIB=%ISATOP%/lib<br>\nset ISABINWINDOWS=C:\\Cygwin\\usr\\local\\Isabelle2007\\bin<br>\nrem set ISABIN=%ISATOP%/bin<br>\nrem set PATH=%PATH%;%ISABIN%<br>\nrem set HOME=%HOMEPATH%<br>\nbash %ISABINWINDOWS%\\isabelle-process %1 %2 %3</p>\n<p>(This is based on a working script to call coq from proof general).</p>\n<p>When I do this, I get the following in the <em>response</em> buffer:</p>\n<p>*** Exception-<br>\n***    ERROR \"Illegal character(s) \\\":\\\" in path element specification:<br>\n\\\"c:\\\"\"<br>\n***    raised<br>\n*** At command \"ML_command\".</p>\n<p>It looks like I'm actually reaching some part of the isabelle system, but<br>\nsomething is finding a Windows path when it's looking for a cygwin path.</p>\n<p>Anybody have any guesses as to what this might be?</p>\n<p>--Mitch Wand</p>\n<p>PS: Yes, I've tried running isabelle-interface-- this pops up a Gnu Emacs<br>\nunder X and starts Proof General, but I get File mode specification error:<br>\n(file-error \"Searching for program\" \"no such file or directory\"<br>\n\"C:\\\\cygwin\\\\bin\\\\tcsh.exe\") .  Since I use my native Windows emacs for<br>\neverything else, I'd like to pursue that line first.</p>",
        "id": 294057289,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660822118
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nDear Mitchell,</p>\n<blockquote>\n<p>rem @echo off<br>\nrem set ISATOP=/usr/local/Isabelle2007<br>\nrem set ISALIB=%ISATOP%/lib<br>\nset ISABINWINDOWS=C:\\Cygwin\\usr\\local\\Isabelle2007\\bin<br>\nrem set ISABIN=%ISATOP%/bin<br>\nrem set PATH=%PATH%;%ISABIN%<br>\nrem set HOME=%HOMEPATH%<br>\nbash %ISABINWINDOWS%\\isabelle-process %1 %2 %3</p>\n</blockquote>\n<p>one possible solution: use cygwin path convention for ISABINWINDWOS,<br>\ne.g. /cygdrive/c/Cyhwin/usr/local/Isabelle2007/bin</p>\n<blockquote>\n<p>PS: Yes, I've tried running isabelle-interface-- this pops up a Gnu Emacs<br>\nunder X and starts Proof General, but I get File mode specification error:<br>\n(file-error \"Searching for program\" \"no such file or directory\"<br>\n\"C:\\\\cygwin\\\\bin\\\\tcsh.exe\") .  Since I use my native Windows emacs for<br>\neverything else, I'd like to pursue that line first.</p>\n</blockquote>\n<p>This indeed sounds very strange since Isabelle only relies on bash, not<br>\ntcsh.  Have you tried Cygwin/XEmacs?  E.g by \"isabelle-interface -p<br>\nxemacs\"?  Cygwin/XEmacs is known to work with Isabelle/PG reasonably<br>\nwhereas there are no experience reports for Cygwin/GNUEmacs</p>\n<p>Hope this helps<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/Swj6T3W3YsyyiouSRaCdocf1/signature.asc\">signature.asc</a></p>",
        "id": 294057311,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660822128
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nLast time I've checked our packages from the Isabelle download area did <br>\nwork on Cygwin out of the box, either with GNU Emacs 21.x and XEmacs 21.x.  <br>\nYou should make sure that Proof General is the one from our site!  I did <br>\nnot try GNU Emacs 22 on Cygwin, but it works on Ubuntu Linux.</p>\n<p>Your attempt at using a windows version of Emacs is very unlikely to <br>\nsucceed.  I've never seen it work, and what I known from the internals of <br>\nthe whole arrangement it would require a lot of extra efforts (there are <br>\nvery few native windows users out there).</p>\n<p>Makarius</p>",
        "id": 294057334,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660822138
    },
    {
        "content": "<p>From: Mitchell Wand &lt;<a href=\"mailto:wand@ccs.neu.edu\">wand@ccs.neu.edu</a>&gt;<br>\nOn Thu, Feb 28, 2008 at 3:49 AM, Florian Haftmann &lt;<br>\n<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt; wrote:</p>\n<blockquote>\n<blockquote>\n<p>PS: Yes, I've tried running isabelle-interface-- this pops up a Gnu<br>\nEmacs<br>\nunder X and starts Proof General, but I get File mode specification<br>\nerror:<br>\n(file-error \"Searching for program\" \"no such file or directory\"<br>\n\"C:\\\\cygwin\\\\bin\\\\tcsh.exe\") .  Since I use my native Windows emacs for<br>\neverything else, I'd like to pursue that line first.</p>\n</blockquote>\n<p>This indeed sounds very strange since Isabelle only relies on bash, not<br>\ntcsh.  Have you tried Cygwin/XEmacs?  E.g by \"isabelle-interface -p<br>\nxemacs\"?  Cygwin/XEmacs is known to work with Isabelle/PG reasonably<br>\nwhereas there are no experience reports for Cygwin/GNUEmacs</p>\n</blockquote>\n<p>And Markarius said:</p>\n<p>Last time I've checked our packages from the Isabelle download area did</p>\n<blockquote>\n<p>work on Cygwin out of the box, either with GNU Emacs 21.x and XEmacs 21.x.<br>\nYou should make sure that Proof General is the one from our site!  I did<br>\nnot try GNU Emacs 22 on Cygwin, but it works on Ubuntu Linux.</p>\n</blockquote>\n<p>OK, you guys have convinced me to try running emacs from cygwin. -- I can't<br>\nimagine how I'd get the X-symbol stuff to work via windows.</p>\n<p>Interestingly, putting (setq debug-on-error t) didn't seem to work, but I<br>\neventually figured out that the reference to tcsh.exe was coming from my<br>\nWindows SHELL variable.  Changing that to /usr/bin/bash worked like a<br>\ncharm.  I now have what appears to be a working isabelle/GnuEmacs21.2/cygwin<br>\nstack.</p>\n<p>Now all I have to do is find the time to play with it.</p>\n<p>Thanks.</p>\n<p>--Mitch</p>",
        "id": 294057397,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660822169
    },
    {
        "content": "<p>From: Yasuhiko Minamide &lt;<a href=\"mailto:minamide@score.cs.tsukuba.ac.jp\">minamide@score.cs.tsukuba.ac.jp</a>&gt;<br>\nI'm using the same combination for several years with a personally patched<br>\nversion of Isabelle. It might also work for you. </p>\n<p>The code below just converts a Windows path into a cygwin path by calling<br>\n\"cygpath\" command of cygwin. </p>\n<p>Yasuhiko Minamide</p>\n<p>diff -cr Isabelle_08-May-2007/src/Pure/General/path.ML Isabelle_08-May-2007-windows/src/Pure/General/path.ML<br>\n*** Isabelle_08-May-2007/src/Pure/General/path.ML   Fri Dec 15 08:08:09 2006<br>\n--- Isabelle_08-May-2007-windows/src/Pure/General/path.ML   Wed May  9 10:40:14 2007</p>\n<hr>\n<p><strong>* 120,129 </strong>**</p>\n<p>val explode_elems = map explode_elem o filter_out (fn c =&gt; c = \"\" orelse c = \".\");</p>\n<p>! fun explode_path str = Path (norm<br>\n    (case space_explode \"/\" str of<br>\n      \"\" :: ss =&gt; Root :: explode_elems ss<br>\n!   | ss =&gt; explode_elems ss));</p>\n<p>(* base element *)<br>\n--- 120,138 ----</p>\n<p>val explode_elems = map explode_elem o filter_out (fn c =&gt; c = \"\" orelse c = \".\");</p>\n<p>! (* fun explode_path str = Path (norm<br>\n    (case space_explode \"/\" str of<br>\n      \"\" :: ss =&gt; Root :: explode_elems ss<br>\n!   | ss =&gt; explode_elems ss)); *)<br>\n! <br>\n! fun explode_path str = <br>\n!   let val str = execute (\"cygpath \"^str) <br>\n!       val str = String.substring (str, 0, String.size str - 1) in<br>\n!   Path (norm<br>\n!     (case space_explode \"/\" str of<br>\n!       \"\" :: ss =&gt; Root :: explode_elems ss<br>\n!             | ss =&gt; explode_elems ss))<br>\n!   end;</p>\n<p>(* base element *)</p>",
        "id": 294057411,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660822176
    }
]