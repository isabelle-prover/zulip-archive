[
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nDear list,</p>\n<p>I'm currently trying to figure out whether it is feasible to provide an<br>\nopentheory interface as a \"pure Isabelle theory\" (in the sense that it<br>\ncan be loaded in a .thy file and doesn't require an external component).</p>\n<p>Opentheory itself builds with Poly/ML just fine.</p>\n<p>My first approach was to take all the source files that are listed in<br>\nthe Makefile and turn them into a sequence of \"SML_file ...\" as<br>\nindicated in the reference manual.</p>\n<p>Unfortunately, it doesn't quite work.</p>\n<p>When I load the so-generated theory file, I can't access the hidden<br>\n\"PolyML\" structure.</p>\n<p>My second approach was then to bundle everything into a \"ROOT.ML\" file<br>\nand load that from a theory file with \"SML_file\". This almost works:<br>\nWhen I open that \"ROOT.ML\" file in Isabelle/jEdit, I can see markup etc.<br>\nHowever, for the theory file, I get:</p>\n<p>ML error (line 1 of \"~/work/opentheory/opentheory/src/ROOT.ML\"):<br>\nValue or constructor (SML_file) has not been declared</p>\n<p>Here's the code (just the changes):</p>\n<p><a href=\"https://github.com/gilith/opentheory/compare/master...larsrh:topic/isabelle\">https://github.com/gilith/opentheory/compare/master...larsrh:topic/isabelle</a></p>\n<p>Can be cloned from the \"topic/isabelle\" branch of<br>\n\"<a href=\"https://github.com/larsrh/opentheory.git\">https://github.com/larsrh/opentheory.git</a>\".</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294728080,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661187052
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nFor posterity:</p>\n<blockquote>\n<p>When I load the so-generated theory file, I can't access the hidden<br>\n\"PolyML\" structure.</p>\n</blockquote>\n<p>The only required operation from \"PolyML\" is \"pointerEq\":</p>\n<p>SML_import \\&lt;open&gt;structure PolyML = struct val pointerEq = pointer_eq<br>\nend;\\&lt;close&gt;</p>\n<p>With that prefixed before loading the other files, it works. Makarius<br>\nfigured this out.</p>",
        "id": 294733042,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661188781
    }
]