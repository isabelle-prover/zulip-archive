[
    {
        "content": "<p>From: Shuling Wang &lt;<a href=\"mailto:wangsl@ios.ac.cn\">wangsl@ios.ac.cn</a>&gt;<br>\nHello,</p>\n<p>We are trying to integrate an SMT solver to Isabelle/HOL. It seems that the<br>\nintegration of external procedures is done by defining oracles in Isabelle.<br>\nI see that the new release of Isabelle supports SMT solvers like Z3, CVC,<br>\nYices. I would like to know that, if we implement the SMT solver in the same<br>\nlanguage as Z3, and also the same input standard, can we avoid defining the<br>\noracle and apply the existing oracle for Z3 directly?</p>\n<p>I find that our use of Isabelle/HOL needs to go to the ML level, e.g.,<br>\ndefining tactics, and SMT integration mentioned above. But it is very<br>\ndifficult for me to understand the ML implemental theories of Isabelle/HOL.<br>\nCan you please give me some directions to learn them, or any documents<br>\nespecially about the oracle and tactics faculties of Isabelle?</p>\n<p>Looking forward to your reply. Thanks.</p>\n<p>Best,</p>\n<p>Wang Shuling</p>\n<p>Institute of Software</p>\n<p>Chinese Academy of Sciences</p>\n<p>Best,</p>\n<p>王淑灵 Wang Shuling</p>\n<p>Institute of Software</p>\n<p>Chinese Academy of Sciences</p>",
        "id": 294156078,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660851250
    },
    {
        "content": "<p>From: Christian Sternagel &lt;<a href=\"mailto:c-sterna@jaist.ac.jp\">c-sterna@jaist.ac.jp</a>&gt;<br>\nJust a remark: I'm pretty sure that Isabelle/HOL does not use oracles to<br>\nintegrate SMT solvers. The reason is that this would mean to base<br>\nIsabelle/HOL's correctness on the correctness of external tools (which<br>\ndoes not fit the usual \"small trusted kernel\" philosophy). The<br>\nintegration has to be roughly of the following shape:</p>\n<p>Isabelle asks an SMT solver to give a proof for some statement.</p>\n<p>The SMT solvers tries to do so, and if successful gives a certificate of<br>\nsome form.</p>\n<p>Isabelle reads back this certificate using a verified routine (i.e.,<br>\nlogical inferences go through the trusted kernel) and if successful<br>\naccepts the result.</p>\n<p>E.g., in the case of sledgehammer (which integrates first-order provers<br>\ninto Isabelle) the certification mechanism is to replay the found proof<br>\nusing a fully verified (i.e., \"written in Isabelle\") first-order prover.<br>\n(I am a bit sloppy about the details, but I guess the general picture is<br>\ncorrect.)</p>\n<p>cheers</p>\n<p>chris</p>",
        "id": 294156086,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660851256
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@gmail.com\">jasmin.blanchette@gmail.com</a>&gt;<br>\nActually, it allows both. If you add</p>\n<p>declare [[smt_oracle = true]]</p>\n<p>then from then on proofs found by SMT solvers (and parts of the translation from HOL to the SMT-LIB syntax) will be trusted. This is, of course, very dangerous; indeed, I was able to prove \"False\" on one occasion thanks to a bug in Yices.</p>\n<p>Sascha might have more to say about the orignal question by Shuling Wang, but in short the SMT architecture is quite flexible; the files \"HOL/Tools/SMT/smt_setup_solvers.ML\" and \"HOL/Tools/SMT/smt_solver.ML\" show how it's done.</p>\n<p>Jasmin</p>",
        "id": 294156096,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660851264
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nAm 16/04/2012 05:54, schrieb Shuling Wang:</p>\n<blockquote>\n<p>Hello,</p>\n<p>We are trying to integrate an SMT solver to Isabelle/HOL. It seems that the<br>\nintegration of external procedures is done by defining oracles in Isabelle.<br>\nI see that the new release of Isabelle supports SMT solvers like Z3, CVC,<br>\nYices. I would like to know that, if we implement the SMT solver in the same<br>\nlanguage as Z3, and also the same input standard, can we avoid defining the<br>\noracle and apply the existing oracle for Z3 directly?</p>\n</blockquote>\n<p>You can share Isabelle's Z3 oracle if your input language is the same as Z3.<br>\nJasmin already pointed you to the relevant files.</p>\n<p>The Z3 link can also reconstruct Z3 proofs in Isabelle (thanks to Sascha), which<br>\nis the safest way to integrate extertnal tools. If your SMT solver outputs<br>\nproofs in the Z3 format, Isabelle could check them, too.</p>\n<p>Tobias</p>\n<blockquote>\n<p>I find that our use of Isabelle/HOL needs to go to the ML level, e.g.,<br>\ndefining tactics, and SMT integration mentioned above. But it is very<br>\ndifficult for me to understand the ML implemental theories of Isabelle/HOL.<br>\nCan you please give me some directions to learn them, or any documents<br>\nespecially about the oracle and tactics faculties of Isabelle?</p>\n<p>Looking forward to your reply. Thanks.</p>\n<p>Best,</p>\n<p>Wang Shuling</p>\n<p>Institute of Software</p>\n<p>Chinese Academy of Sciences</p>\n<p>Best,</p>\n<p>王淑灵 Wang Shuling</p>\n<p>Institute of Software</p>\n<p>Chinese Academy of Sciences</p>\n</blockquote>",
        "id": 294156105,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660851266
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Mon, 16 Apr 2012, Shuling Wang wrote:</p>\n<blockquote>\n<p>I find that our use of Isabelle/HOL needs to go to the ML level, e.g., <br>\ndefining tactics, and SMT integration mentioned above. But it is very <br>\ndifficult for me to understand the ML implemental theories of <br>\nIsabelle/HOL.</p>\n</blockquote>\n<p>The ML tools of Isabelle/HOL are indeed quite complex, but this does not <br>\nmean that one should be afraid of Isabelle/ML in general. Isabelle/Isar <br>\nand Isabelle/ML are tightly integrated, and I usually do not speak of a <br>\nseparate \"ML level\".  It is more like the Yin and Yang (阴阳) of Isabelle.</p>\n<blockquote>\n<p>Can you please give me some directions to learn them, or any documents <br>\nespecially about the oracle and tactics faculties of Isabelle?</p>\n</blockquote>\n<p>The isar-ref manual section 5.11 explains oracles and points to some basic <br>\nexample in ~~/src/HOL/ex/Iff_Oracle.thy which can be taken as a starting <br>\npoint to warm-up with Isabelle/ML and Isabelle/Isar intermixed.</p>\n<p>This is best used with the Isabelle/jEdit Prover IDE.  I.e. you start <br>\n\"isabelle jedit\" and open the Iff_Oracle.thy file.  ML that is directly <br>\nembedded into theory sources is marked up with inferred type information <br>\nand hyperlinks for identifiers in the ML text.  This greatly helps to <br>\nnavigate ML sources, but it does not work yet for external ML files.</p>\n<p>Makarius</p>",
        "id": 294156123,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660851272
    },
    {
        "content": "<p>From: Thomas Sewell &lt;<a href=\"mailto:Thomas.Sewell@nicta.com.au\">Thomas.Sewell@nicta.com.au</a>&gt;<br>\nA word of warning: the Z3 link can reconstruct Z3 proofs, but Sascha had<br>\nto do a lot of guesswork. Z3 breaks large proofs down into component<br>\nsteps, which is very helpful. Some of these steps are still very large,<br>\nhowever, and all that is given is a name (such as \"lemma\" or \"rewrite\").<br>\nSascha guessed what Z3 had done and picked appropriate Isabelle tools,<br>\nwhich might be totally inappropriate for your tool.</p>\n<p>In conclusion: Z3's proof output format is far from ideal. You might be<br>\nable to come up with a much better one yourself. I can give you some<br>\nhints at a later point. Also, the Z3 input language Sascha picked is<br>\njust SMTLIB/SMTLIB2.</p>\n<p>I would recommend you start by reading some of Sascha's papers on his<br>\nwork. See <a href=\"http://www4.in.tum.de/~boehmes/\">http://www4.in.tum.de/~boehmes/</a> (especially \"Fast LCF-style<br>\nProof Reconstruction for Z3\").</p>\n<p>Yours,<br>\nThomas.</p>",
        "id": 294156154,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660851285
    },
    {
        "content": "<p>From: <a href=\"mailto:wangsl@ios.ac.cn\">wangsl@ios.ac.cn</a><br>\nThanks so much for all your very helpful answers. I realise that it is<br>\nvery necessary to understand the Isabelle/ML for my use of Isabelle. It is<br>\nindeed very tightly integrated to Isabelle/Isar. The literatures and<br>\npapers you advised are very helpful for me.</p>\n<p>We have just started to implement an SMT solver mainly for reasoning about<br>\npolynomial arithmetic based on the previous work of my colleagues. This<br>\nSMT solver will be a backend prover for our theorem proving HCSP<br>\n(continuous + CSP) programs in Isabelle. So we consider at first picking a<br>\nunified input language and output language for it, like SMTLIB standard,<br>\nand thus may save some effort when integrating it to Isabelle. But we will<br>\nnow consider this more carefully for the sake of later reconstruction<br>\nproof in Isabelle.</p>\n<p>Thanks again.</p>\n<p>Best,<br>\nShuling</p>",
        "id": 294156191,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660851298
    },
    {
        "content": "<p>From: <a href=\"mailto:wangsl@ios.ac.cn\">wangsl@ios.ac.cn</a></p>\n<blockquote>\n<p>Send Cl-isabelle-users mailing list submissions to<br>\n<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a></p>\n<p>To subscribe or unsubscribe via the World Wide Web, visit<br>\n<a href=\"https://lists.cam.ac.uk/mailman/listinfo/cl-isabelle-users\">https://lists.cam.ac.uk/mailman/listinfo/cl-isabelle-users</a><br>\nor, via email, send a message with subject or body 'help' to<br>\n<a href=\"mailto:cl-isabelle-users-request@lists.cam.ac.uk\">cl-isabelle-users-request@lists.cam.ac.uk</a></p>\n<p>You can reach the person managing the list at<br>\n<a href=\"mailto:cl-isabelle-users-owner@lists.cam.ac.uk\">cl-isabelle-users-owner@lists.cam.ac.uk</a></p>\n<p>When replying, please edit your Subject line so it is more specific<br>\nthan \"Re: Contents of Cl-isabelle-users digest...\"</p>\n<p>Today's Topics:</p>\n<p>1. Re:  SMT integration to Isabelle/HOL (Thomas Sewell)</p>\n<hr>\n<p>Message: 1<br>\nDate: Tue, 17 Apr 2012 12:23:29 +1000<br>\nFrom: Thomas Sewell &lt;<a href=\"mailto:Thomas.Sewell@nicta.com.au\">Thomas.Sewell@nicta.com.au</a>&gt;<br>\nSubject: Re: [isabelle] SMT integration to Isabelle/HOL<br>\nTo: <a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a><br>\nMessage-ID: &lt;<a href=\"mailto:4F8CD421.4090305@nicta.com.au\">4F8CD421.4090305@nicta.com.au</a>&gt;<br>\nContent-Type: text/plain; charset=GB2312</p>\n<p>On 16/04/12 22:00, Tobias Nipkow wrote:</p>\n<blockquote>\n<p>Am 16/04/2012 05:54, schrieb Shuling Wang:</p>\n<blockquote>\n<p>Hello,</p>\n<p>We are trying to integrate an SMT solver to Isabelle/HOL. It seems that<br>\nthe<br>\nintegration of external procedures is done by defining oracles in<br>\nIsabelle.<br>\nI see that the new release of Isabelle supports SMT solvers like Z3,<br>\nCVC,<br>\nYices. I would like to know that, if we implement the SMT solver in the<br>\nsame<br>\nlanguage as Z3, and also the same input standard, can we avoid defining<br>\nthe<br>\noracle and apply the existing oracle for Z3 directly?<br>\nYou can share Isabelle's Z3 oracle if your input language is the same as<br>\nZ3.<br>\nJasmin already pointed you to the relevant files.</p>\n</blockquote>\n<p>The Z3 link can also reconstruct Z3 proofs in Isabelle (thanks to<br>\nSascha), which<br>\nis the safest way to integrate extertnal tools. If your SMT solver<br>\noutputs<br>\nproofs in the Z3 format, Isabelle could check them, too.</p>\n<p>Tobias<br>\nA word of warning: the Z3 link can reconstruct Z3 proofs, but Sascha had<br>\nto do a lot of guesswork. Z3 breaks large proofs down into component<br>\nsteps, which is very helpful. Some of these steps are still very large,<br>\nhowever, and all that is given is a name (such as \"lemma\" or \"rewrite\").<br>\nSascha guessed what Z3 had done and picked appropriate Isabelle tools,<br>\nwhich might be totally inappropriate for your tool.</p>\n</blockquote>\n<p>In conclusion: Z3's proof output format is far from ideal. You might be<br>\nable to come up with a much better one yourself. I can give you some<br>\nhints at a later point. Also, the Z3 input language Sascha picked is<br>\njust SMTLIB/SMTLIB2.</p>\n<p>I would recommend you start by reading some of Sascha's papers on his<br>\nwork. See <a href=\"http://www4.in.tum.de/~boehmes/\">http://www4.in.tum.de/~boehmes/</a> (especially \"Fast LCF-style<br>\nProof Reconstruction for Z3\").</p>\n<p>Thank you for providing the references. Very helpful.<br>\nYours,<br>\nThomas.</p>\n<p>End of Cl-isabelle-users Digest, Vol 82, Issue 20</p>\n<hr>\n</blockquote>",
        "id": 294156209,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660851303
    },
    {
        "content": "<p>From: Chantal KELLER &lt;<a href=\"mailto:chantal.keller@wanadoo.fr\">chantal.keller@wanadoo.fr</a>&gt;<br>\nHello Shuling,</p>\n<p>I want to point to you that there is a proposal for a unified output<br>\nlanguage for SMT solver that has been proved to be easy to integrate to<br>\ninteractive theorem provers:<br>\n&lt;<a href=\"http://www.loria.fr/~fontaine/Besson1.pdf\">http://www.loria.fr/~fontaine/Besson1.pdf</a>&gt;. See<br>\n&lt;<a href=\"http://www.lix.polytechnique.fr/~keller/Recherche/smtcoq.html\">http://www.lix.polytechnique.fr/~keller/Recherche/smtcoq.html</a>&gt; for an<br>\nintegration of such an output in Coq.</p>\n<p>Cheers,<br>\nChantal.</p>",
        "id": 294156247,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660851315
    }
]