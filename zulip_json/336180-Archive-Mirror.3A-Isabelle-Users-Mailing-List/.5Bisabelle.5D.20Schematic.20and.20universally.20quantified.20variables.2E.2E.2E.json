[
    {
        "content": "<p>From: Martin Desharnais &lt;<a href=\"mailto:martin.desharnais@gmail.com\">martin.desharnais@gmail.com</a>&gt;<br>\nDear Isabelle users,</p>\n<p>I have a situation where I am surprised by the result of forward proof <br>\nstep. Basically, I have a hierarchy of similar theorems that, where each <br>\nstronger level implies the next weaker level. In my formalization, I <br>\nwant to prove the strongest possible theorem, but when using the <br>\nresults, I actually only need the weaker form.</p>\n<p>I want an easy and efficient (in terms of performance and readability) <br>\nway to convert from a strong to a week form and I though a forward <br>\ninstantiation of a lifting lemma (\"lifting\" in the following example) <br>\nwould be a good idea.</p>\n<p>Now, I can use the lifting lemma without problem in a backward proof, <br>\nbut when I use it in a forward proof (with OF or THEN), I am surprised <br>\nat the resulting instantiation. To get the expected form, I have to <br>\nperform a simplification step afterward.</p>\n<p>I realize that \"some_strong_thm\" has schematic variables while the <br>\nlemma's hypothesis uses universally quantified variables and I suppose <br>\nthis is the source of my problem/confusion.</p>\n<p>My questions are:</p>\n<ol>\n<li>\n<p>Is there a way to change the form from schematic to universally <br>\nqualified variables and vice versa?</p>\n</li>\n<li>\n<p>Why does the forward step \"lifting[OF some_strong_thm]\" unify to this <br>\nresult? And is there a way to control the unification or change the <br>\nlifting lemma to not require the simplification step?</p>\n</li>\n<li>\n<p>Is this the usual Isabelle way of handling such a situation or are <br>\nthere better alternative?</p>\n</li>\n</ol>\n<p>Regards,<br>\nMartin Desharnais</p>\n<p>Simplified example:</p>\n<p>locale A =<br>\n   fixes<br>\n     f :: \"'a ⇒ bool\" and<br>\n     g :: \"'a ⇒ 'a ⇒ bool\" and<br>\n     h :: \"'a ⇒ bool\"<br>\n   assumes<br>\n     f_to_h: \"f x ⟹ h x\" and<br>\n     some_strong_thm: \"f x ⟹ ∃y. f y ∧ g x y\"<br>\nbegin</p>\n<p>lemma lifting:<br>\n   assumes<br>\n     strong_thm: \"⋀x. f x ⟹ ∃y. f y ∧ g x y\" and<br>\n     \"f x\"<br>\n   shows \"∃y. h y ∧ g x y\"<br>\nproof -<br>\n   obtain y where \"f y\" and \"g x y\"<br>\n     using strong_thm[OF assms(2)] by auto<br>\n   thus ?thesis by (auto intro: f_to_h)<br>\nqed</p>\n<p>lemma backward_proof: \"f x ⟹ ∃y. h y ∧ g x y\"<br>\n   by (auto intro: some_strong_thm lifting)</p>\n<p>lemmas forward_proofs =<br>\n   lifting[OF some_strong_thm]<br>\n   lifting[OF some_strong_thm, simplified]<br>\n(*<br>\ntheorem forward_proofs:<br>\n             (⋀x. f x ⟹ f x) ⟹ f ?x ⟹ ∃y. h y ∧ g ?x y<br>\n             f ?x ⟹ ∃y. h y ∧ g ?x y<br>\n*)</p>\n<p>end</p>",
        "id": 294755470,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661197283
    }
]