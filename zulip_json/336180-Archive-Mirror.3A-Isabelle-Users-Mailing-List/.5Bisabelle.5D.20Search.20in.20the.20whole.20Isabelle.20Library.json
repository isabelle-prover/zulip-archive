[
    {
        "content": "<p>From: grechukbogdan &lt;<a href=\"mailto:grechukbogdan@yandex.ru\">grechukbogdan@yandex.ru</a>&gt;<br>\nDear members of Isabelle group</p>\n<p>During my trip to Munich, we had an interesting discussion about  search in the Isabelle Library. My point was that I would like to have a search in the whole library (not only imported theories), and we discussed some (complicated) ways for realization. I am thinking whether the following  observation could simplify the situation.</p>\n<p>The naive way to use the current search facility in Isabelle to do global search would be to try to import  everything. This, however, does not work directly: for example, if I try to write “imports Library”  and than type lemma “(A :: real set)&lt;B” I have an error, because “B” is reserved for something else. Moreover, even symbol “&lt;” can have different meaning in different places of the library. In other words, Isabelle cannot parse (understand)  mathematical expressions in this case.</p>\n<p>As I understand, any search can be divided by two steps. First one is parsing, understanding the search string typed by a user. Second – search for relevant lemmas in the Library. Now, I would imagine the following simple search algorithm. </p>\n<p>1) At the level of parsing, look at the imported theories only, as it is now. For example, string  like “(A :: real set)&lt;B” should be correctly understood,  that “user wants to find lemmas where one set of real numbers is a subset of another one”. <br>\n2) Next, do the search in such a way as if  the whole Library would be imported.  Now:</p>\n<ul>\n<li>If in some theory there is a lemma containing “A&lt;B” where A and B are real sets, and “&lt;” means “be a subset”, it will be founded.</li>\n<li>If in some theory there is a lemma looking like “A&lt;B”, but with “&lt;” having completely different meaning, it will not be founded, because “user wants to find lemmas where one set of real numbers is a subset of another one”.</li>\n</ul>\n<p>As I understand, this is just a modification of the current search facility, and should be easier to implement that what we were discussing. Moreover, I would like “auto solve” to work in a similar way – UNDERSTAND the lemma based on imported theories only, but then look in the whole library if exactly such a lemma is already proved. Are there any principal problems with this? </p>\n<p>Sincerely,<br>\nBogdan</p>",
        "id": 294121115,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660839851
    },
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:brianh@cs.pdx.edu\">brianh@cs.pdx.edu</a>&gt;<br>\nA feature I would like to see in Isabelle would be an \"import<br>\nqualified\" option, like Haskell has.</p>\n<p>The idea is that you could go ahead and say \"import qualified Library\"<br>\nat the top of your theory file, and it would bring all of the theorems<br>\nfrom that theory into scope (and make them available for<br>\nfind-theorems, auto-solve, etc.) but it would not bring any more<br>\nunqualified constant names into scope, or import any notations or<br>\nother syntax. Any constants imported in this way could only be<br>\nreferred to by their fully-qualified names, as if they had been hidden<br>\nby the \"hide_const (open)\" command. The point is that a qualified<br>\nimport should not affect the parsing of terms in your theory in any<br>\nway.</p>\n<p>I think such a feature would let you do all the kinds of theorem<br>\nsearching you want to do, plus it would be useful in lots of other<br>\nsituations, too.</p>\n<p>Maybe some of the other developers could comment on how difficult this<br>\nmight be to implement.</p>\n<ul>\n<li>Brian</li>\n</ul>",
        "id": 294121498,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660839986
    },
    {
        "content": "<p>From: Thomas Sewell &lt;<a href=\"mailto:Thomas.Sewell@nicta.com.au\">Thomas.Sewell@nicta.com.au</a>&gt;<br>\nOne of the things we found useful on the L4.verified project is the <br>\nisabelle wwwfind tool, which starts a web server that responds to <br>\nfind-theorem requests.</p>\n<p>It doesn't do anything more than the usual find theorems, but it means <br>\nyou can have a search context which is wider than your current context <br>\nwithout having to keep two emacses on your desktop. We had an obvious <br>\ncandidate for the all-the-world image to use, which may not be so <br>\nobvious in anyone else's project.</p>\n<p>It was also handy on our project to have the server tracking the most <br>\nrecent stable version, since at any time the all-the-world image was <br>\nlikely to be broken.</p>\n<p>This doesn't solve the problem you're interested in, which is parsing <br>\nthe search arguments in the current context and then searching in a <br>\nwider context. I suspect the tool you want might not be difficult at all <br>\nto write - just apply the parser of the existing theorem searcher, code <br>\nthe patterns again using their long names (\"_ &lt; _\" becomes <br>\n\"HOL.ord_class_less _ _\") and send that to the web server.</p>\n<p>Yours,<br>\n     Thomas.</p>",
        "id": 294121726,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660840058
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThis is a recurrent theme on isabelle-users or isabelle-dev for several <br>\nyears already.  It is indeed difficult, but we are moving towards more or <br>\nless exactly that for some years, getting closer after each round of <br>\nreforms and cleaning up legacy features that are in the way.</p>\n<p>It will work via the advanced infrastructure of local theories (and global <br>\nspecifications will be a special case).  Most likely, this means that once <br>\nthe infrastructure is up and running, packages that are not \"localized\" <br>\nwould still emit their global declarations.</p>\n<p>Makarius</p>",
        "id": 294122371,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660840232
    }
]