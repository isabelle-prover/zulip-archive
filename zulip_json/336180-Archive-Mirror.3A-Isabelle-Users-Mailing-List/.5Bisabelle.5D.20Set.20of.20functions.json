[
    {
        "content": "<p>From: \"Roger H.\" &lt;<a href=\"mailto:s57076@hotmail.com\">s57076@hotmail.com</a>&gt;<br>\nHello,</p>\n<p>how do you denote the set of all functions from nat to nat?</p>\n<p>what about the set of all partial functions from nat to nat?</p>\n<p>Thank you!</p>",
        "id": 294242578,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660907606
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nOn 22.05.2013 21:37, Roger H. wrote:</p>\n<blockquote>\n<p>how do you denote the set of all functions from nat to nat?</p>\n</blockquote>\n<p>For some type 'a, (UNIV :: 'a) denotes all values of this type. So \"UNIV <br>\n:: nat =&gt; nat\" are all functions from nat to nat.</p>\n<blockquote>\n<p>what about the set of all partial functions from nat to nat?</p>\n</blockquote>\n<p>Isabelle/HOL is a logic of total functions, i.e. there are no partial <br>\nfunctions. One way to model partial functions is to carry around an <br>\nexplicit domain. Another way is to use functions from 'a to 'b option.</p>\n<p>-- Lars</p>",
        "id": 294242624,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660907624
    },
    {
        "content": "<p>From: René Thiemann &lt;<a href=\"mailto:rene.thiemann@uibk.ac.at\">rene.thiemann@uibk.ac.at</a>&gt;<br>\nDear Roger,</p>\n<p>I would take the UNIV constants, which is the set of all elements<br>\nof a given type.</p>\n<p>I.e., in your case you will require</p>\n<p>term \"UNIV :: (nat =&gt; nat) set\"<br>\nterm \"UNIV :: (nat =&gt; nat option) set\"</p>\n<p>Cheers,<br>\nRené</p>",
        "id": 294242643,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660907630
    }
]