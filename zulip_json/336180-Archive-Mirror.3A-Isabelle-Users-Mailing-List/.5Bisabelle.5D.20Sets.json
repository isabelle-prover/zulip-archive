[
    {
        "content": "<p>From: Clemens Ballarin &lt;<a href=\"mailto:ballarin@in.tum.de\">ballarin@in.tum.de</a>&gt;<br>\nDear Hidetsune,</p>\n<blockquote>\n<p>Let A be a set (A :: 'a set), then is there a <br>\nset (B :: 'b set) which is isomorphic to A?</p>\n</blockquote>\n<p>Not in general.  The type 'b might be too small to accommodate all the<br>\nelements of A.  This doesn't hold because type variables are implicitly<br>\nuniversally quantified at the very beginning of a formula.</p>\n<p>Clemens</p>",
        "id": 293904894,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660745667
    },
    {
        "content": "<p>From: Tjark Weber &lt;<a href=\"mailto:tjark.weber@gmx.de\">tjark.weber@gmx.de</a>&gt;<br>\nHidetsune,</p>\n<p>this depends on A, 'a and 'b.  It is not true in general.  For example, take <br>\n'a to be int, A to be UNIV, and 'b to be bool.</p>\n<p>Best,<br>\nTjark</p>",
        "id": 293904898,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660745668
    },
    {
        "content": "<p>From: \"Kobayashi, Hidetsune\" &lt;<a href=\"mailto:hd_coba@yahoo.co.jp\">hd_coba@yahoo.co.jp</a>&gt;<br>\nHi!</p>\n<p>Let A be a set (A :: 'a set), then is there a <br>\nset (B :: 'b set) which is isomorphic to A? Here,<br>\nisomorphic means only having one-to-one<br>\nonto map from A to B.<br>\n  If yes, is it possible to show the existence of<br>\nthe isomorphism?</p>\n<p>Thank you.</p>\n<p>Kobayashi, Hidetsune</p>\n<hr>\n<p>TSUKAME EIKOU! KAGAYAKE EGAO!<br>\nYahoo! JAPAN JPC OFFICIAL PARTNER INTERNET PORTAL SITE<br>\n<a href=\"http://pr.mail.yahoo.co.jp/wintergames/\">http://pr.mail.yahoo.co.jp/wintergames/</a></p>",
        "id": 293904905,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660745670
    },
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:brianh@csee.ogi.edu\">brianh@csee.ogi.edu</a>&gt;<br>\nMaybe what you want is to define a new type that is isomorphic to the old set. <br>\nYou can do this with Isabelle's typedef command. With your example, I'll <br>\nassume you have a function called direct_product that calculates the direct <br>\nproduct of A; then you can use:</p>\n<p>typedef foo = \"direct_product A\"</p>\n<p>Then the set \"UNIV::foo set\" will be isomorphic to the set \"direct_product A\". <br>\nHowever, you will also need to prove that \"direct_product A\" is nonempty for <br>\nthis to work. You can read more about typedef in the Isabelle tutorial.</p>\n<ul>\n<li>Brian</li>\n</ul>",
        "id": 293904918,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660745673
    },
    {
        "content": "<p>From: \"Kobayashi, Hidetsune\" &lt;<a href=\"mailto:hd_coba@yahoo.co.jp\">hd_coba@yahoo.co.jp</a>&gt;<br>\nHi! Thaks for the answers.</p>\n<p>Let me explain the problem again.</p>\n<p>Given (I :: 'i set), (A i :: 'a set) .<br>\n   The direct product of the family {A i} is <br>\n   ('i =&gt; 'a) set. </p>\n<p>My question is: <br>\n  is it possible to find some set B isomorphic<br>\n  to the direct product and B having  <br>\n  some 'a123 type (the only condition for<br>\n  the type of B is that the type is expressed <br>\n  in one string, say as a123, not as 'i =&gt; 'a)? </p>\n<hr>\n<p>TSUKAME EIKOU! KAGAYAKE EGAO!<br>\nYahoo! JAPAN JPC OFFICIAL PARTNER INTERNET PORTAL SITE<br>\n<a href=\"http://pr.mail.yahoo.co.jp/wintergames/\">http://pr.mail.yahoo.co.jp/wintergames/</a></p>",
        "id": 293904920,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660745673
    },
    {
        "content": "<p>From: \"Kobayashi, Hidetsune\" &lt;<a href=\"mailto:hd_coba@yahoo.co.jp\">hd_coba@yahoo.co.jp</a>&gt;<br>\nElsa L Gunter's answer means:<br>\n   \"if we take I = B and A i = {0,1}  then the<br>\ndirect product has the cardinality strictly<br>\nlarger than that of B and we have contradiction.\"<br>\n Is it?</p>\n<p>This is the key point I am worrying. But, I <br>\nam still thinking that it is possible to express<br>\nsuch set B as type 'b in Isabelle/HOL. Because of<br>\nthe set theory, we see there is a set isomorphic<br>\nto the direct product, we have only to put type<br>\n'b to the set B, I think.<br>\n  It seems that Isabelle polymorphic type has no<br>\nrestriction to instantiate. (My impression, I am <br>\nnot sure, is that a type of a set with higher cardinality<br>\nshouldn't take a type of lower <br>\ncardinality in some cases.)<br>\n   Therefore, if we carefully avoid such a wrong <br>\ninstantiation, we can obtain correct formalization,<br>\nisn't it? Is it OK?</p>\n<p>Best</p>\n<p>Kobayashi, Hidetsune</p>\n<p>--- Elsa L Gunter &lt;<a href=\"mailto:egunter@cs.uiuc.edu\">egunter@cs.uiuc.edu</a>&gt; ï¼š</p>\n<hr>\n<p>TSUKAME EIKOU! KAGAYAKE EGAO!<br>\nYahoo! JAPAN JPC OFFICIAL PARTNER INTERNET PORTAL SITE<br>\n<a href=\"http://pr.mail.yahoo.co.jp/wintergames/\">http://pr.mail.yahoo.co.jp/wintergames/</a></p>",
        "id": 293904933,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660745676
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nI really don't see how to form a type that \"big enough\" to hold this  <br>\ndirect product unless it is some specific construction involving 'i  <br>\nand 'a.</p>\n<p>Larry</p>",
        "id": 293904948,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660745678
    }
]