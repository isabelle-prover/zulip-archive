[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear Isar experts,</p>\n<p>How can I name a variable in an obtains clause whose name clashes with an existing <br>\nconstant name in scope? Here is an minmal example:</p>\n<p>consts P :: \"nat =&gt; bool\"</p>\n<p>lemma<br>\n   assumes \"?map. P map\"<br>\n   obtains map where \"P map\"</p>\n<p>Here, the map in the where clause gets resolved to <a href=\"http://List.map\">List.map</a> rather than the variable map <br>\nbound by the obtains. When I write the lemma as explicit elimination rule, this works as <br>\nexpected:</p>\n<p>lemma<br>\n   assumes \"?map. P map\"<br>\n   and that[intro?]: \"!!map. P map ==&gt; thesis\"<br>\n   shows \"thesis\"</p>\n<p>Is there any way to use the nicer obtains format without changing the name of map? I tried</p>\n<p>lemma<br>\n   fixes map<br>\n   assumes \"?map. P map\"<br>\n   obtains map where \"P map\"</p>\n<p>but this yields the error of map being fixed twice.</p>\n<p>Andreas</p>",
        "id": 294323494,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660927744
    }
]