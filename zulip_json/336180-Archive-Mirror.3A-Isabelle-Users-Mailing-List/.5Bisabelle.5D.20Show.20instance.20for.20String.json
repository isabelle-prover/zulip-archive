[
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nDear Rene and Christian,</p>\n<p>using your AFP entry, I was trying to produce a \"show\" instance for a<br>\nlarge-ish datatype containing a string, and it failed. I managed to find a<br>\nsmall reproducing test case (see attached). The error message reads:</p>\n<p>no show-function available for type \"String.char\"</p>\n<p>... which I find confusing since you do instantiate \"show\" for characters.<br>\nWhat am I doing wrong?</p>\n<p>Cheers<br>\nLars<br>\n<a href=\"/user_uploads/14278/vu8RQpgdGl4l62bLniIbQRmb/Scratch.thy\">Scratch.thy</a></p>",
        "id": 294651598,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661166297
    },
    {
        "content": "<p>From: \"Thiemann, Rene\" &lt;<a href=\"mailto:Rene.Thiemann@uibk.ac.at\">Rene.Thiemann@uibk.ac.at</a>&gt;<br>\nDear Lars,</p>\n<p>thanks for the report, you have actually detected an omission in our setup. Whereas we registered „char“ in the class show, we did not register it in the generator. E.g., in Show_Instances you see the lines</p>\n<p>#&gt; Show_Generator.register_foreign_showsp @{typ unit} @{term \"showsp_unit\"} @{thm show_law_unit}<br>\n  #&gt; Show_Generator.register_foreign_showsp @{typ bool} @{term \"showsp_bool\"} @{thm show_law_bool}<br>\n  #&gt; Show_Generator.register_foreign_showsp @{typ nat} @{term \"showsp_nat\"} @{thm show_law_nat}<br>\n  #&gt; Show_Generator.register_foreign_showsp @{typ int} @{term \"showsp_int\"} @{thm show_law_int}<br>\n  #&gt; Show_Generator.register_foreign_showsp @{typ rat} @{term \"showsp_rat\"} @{thm show_law_rat}</p>\n<p>but no line for „char“.</p>\n<p>We are working on the fix which should be finished soonish, by providing the required @{thm show_law_char}.</p>\n<p>Cheers,<br>\nChristian and René</p>",
        "id": 294651647,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661166307
    },
    {
        "content": "<p>From: \"Thiemann, Rene\" &lt;<a href=\"mailto:Rene.Thiemann@uibk.ac.at\">Rene.Thiemann@uibk.ac.at</a>&gt;<br>\nDear Lars,</p>\n<p>here is a fix:</p>\n<p>insert into the file Show_Instances.thy the following lines:</p>\n<p>abbreviation showsp_char :: \"char showsp\"<br>\nwhere<br>\n  \"showsp_char == shows_prec\"</p>\n<p>lemma show_law_char [show_law_intros]:<br>\n  \"show_law showsp_char x\"<br>\n  by (rule show_lawI) (simp add: show_law_simps)</p>\n<p>and the line</p>\n<p>#&gt; Show_Generator.register_foreign_showsp @{typ char} @{term \"showsp_char\"} @{thm show_law_char}</p>\n<p>somewhere in the lines mentioned before. Just let us know, if there are further problems,</p>\n<p>Cheers,<br>\nRené</p>",
        "id": 294651650,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661166309
    }
]