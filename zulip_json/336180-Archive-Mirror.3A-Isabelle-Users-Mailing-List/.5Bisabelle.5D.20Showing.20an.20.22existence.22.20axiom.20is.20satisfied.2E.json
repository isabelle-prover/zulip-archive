[
    {
        "content": "<p>From: Holden Lee &lt;<a href=\"mailto:hl422@cam.ac.uk\">hl422@cam.ac.uk</a>&gt;<br>\n[A] I'm trying to show a certain space of functions forms a vector space;<br>\none of the necessary conditions is the existence of an additive inverse.</p>\n<p>lemma (in vectorspace) coeff_space_is_vs:<br>\n  fixes S<br>\n  assumes h1: \"finite S\" and h2: \"S⊆carrier V\"<br>\n  shows \"vectorspace K (coeff_space S)\"<br>\nproof -<br>\nhave 0: \"vectorspace K V\"..<br>\nfrom 0 h1 h2 show ?thesis<br>\napply (auto intro!: vs_criteria simp add: coeff_space_def)<br>\napply (auto simp add: vectorspace_def)</p>\n<p>The first goal is now</p>\n<ol>\n<li>(!!v∷'c ⇒ 'a.<br>\n       finite S ⟹<br>\n       S ⊆ carrier V ⟹<br>\n       v ∈ S →⇩E carrier K ⟹<br>\n       module K V ⟹<br>\n       field K ⟹<br>\n       ∃<em>neg_v∷'c ⇒ 'a</em>∈S →⇩E carrier K.<br>\n          (λva∷'c∈S. v va ⊕⇘K⇙ neg_v va) = (λv∷'c∈S. 𝟬⇘K⇙)</li>\n</ol>\n<p>The important part of this is the neg_v. I want to substitute a value to<br>\n<em>neg_v</em> so I try (tutorial p. 85)</p>\n<p><em>apply (rule_tac x=\"restrict (λv'. ⊖⇘K⇙ (v v')) S\" in exI)</em><br>\n(i.e. the additive inverse of a function just has every term negated) but<br>\nthis doesn't work. What's the right way to write this?</p>\n<p>Thanks,</p>\n<p>Holden</p>",
        "id": 294284197,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660921311
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Holden,</p>\n<p>The existential quantifier in your goal is bounded by the set \"S -&gt;_E carrier K\", so you <br>\nhave to use the introduction rule bexI for bounded existentials rather than exI for <br>\nunbounded existentials.</p>\n<p>Hope this helps,<br>\nAndreas</p>",
        "id": 294284213,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660921318
    }
]