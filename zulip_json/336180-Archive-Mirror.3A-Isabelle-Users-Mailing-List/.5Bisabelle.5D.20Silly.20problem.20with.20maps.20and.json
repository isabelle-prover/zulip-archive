[
    {
        "content": "<p>From: John Ridgway &lt;<a href=\"mailto:john@jacelridge.com\">john@jacelridge.com</a>&gt;<br>\nHow do I prove the following?  M is a map, l is just a type, which is  <br>\nwhy I explicitly included the premise that there was an l not in the  <br>\ndomain.<br>\n!! l . [| \\&lt;exists&gt; l . l \\&lt;notin&gt; dom M; l \\&lt;in&gt; dom M |] ==&gt; l  <br>\n\\&lt;noteq&gt; (SOME l. l \\&lt;in&gt; dom M)</p>\n<p>I expect that I'm going to feel silly when somebody solves this for me  <br>\n(or explains why it's false), but, oh well. :-)</p>\n<p>Peace</p>\n<ul>\n<li>John</li>\n</ul>",
        "id": 294080565,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660830526
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nThis is the counterexample that command \"refute\" gave me:</p>\n<p>Size of types: 'b: 1, 'a: 2<br>\nl: a0<br>\nM: {(a0, Some b0), (a1, None)}</p>\n<p>Tobias</p>\n<p>John Ridgway schrieb:</p>",
        "id": 294080591,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660830535
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nJohn Ridgway schrieb:</p>\n<blockquote>\n<p>That is correct, except that I mistranscribed the proposition and<br>\ncorrected it in my second post.</p>\n</blockquote>\n<p>I only received your first post, which is not your fault. I frequently<br>\ndo not get some of the emails on isabelle-users (and no, it is not my<br>\nspam filter).</p>\n<p>I tried sledgehammer on your example, and it did indeed find a proof,</p>\n<p>apply (metis COMBB_def Collect_def Collect_mem_eq Collect_neg_eq ComplD<br>\nComplI exE_some mem_def)</p>\n<p>but unfortunately that proof leads to</p>\n<p>*** metis error (inst_inf): Ill-typed instantiation</p>\n<p>So here is a traditional hand-crafted proof:</p>\n<p>apply (erule someI2_ex)<br>\napply blast</p>\n<p>Tobias</p>\n<blockquote>\n<p>The final \\&lt;in&gt; should have been<br>\n\\&lt;notin&gt; which does not lead to a quick refutal.  In the original you<br>\ndon't even need to play with sizes; all you need to do is assume that<br>\nSOME l is l.</p>\n<p>Peace<br>\n- John</p>\n<p>On Jul 15, 2009, at 3:25 AM, Tobias Nipkow wrote:</p>\n<blockquote>\n<p>This is the counterexample that command \"refute\" gave me:</p>\n<p>Size of types: 'b: 1, 'a: 2<br>\nl: a0<br>\nM: {(a0, Some b0), (a1, None)}</p>\n<p>Tobias</p>\n<p>John Ridgway schrieb:</p>\n<blockquote>\n<p>How do I prove the following?  M is a map, l is just a type, which is<br>\nwhy I explicitly included the premise that there was an l not in the<br>\ndomain.<br>\n!! l . [| \\&lt;exists&gt; l . l \\&lt;notin&gt; dom M; l \\&lt;in&gt; dom M |] ==&gt; l<br>\n\\&lt;noteq&gt; (SOME l. l \\&lt;in&gt; dom M)</p>\n<p>I expect that I'm going to feel silly when somebody solves this for me<br>\n(or explains why it's false), but, oh well. :-)</p>\n<p>Peace<br>\n- John</p>\n</blockquote>\n</blockquote>\n</blockquote>",
        "id": 294080644,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660830553
    },
    {
        "content": "<p>From: John Ridgway &lt;<a href=\"mailto:john@jacelridge.com\">john@jacelridge.com</a>&gt;<br>\nThat is correct, except that I mistranscribed the proposition and  <br>\ncorrected it in my second post.  The final \\&lt;in&gt; should have been  <br>\n\\&lt;notin&gt; which does not lead to a quick refutal.  In the original you  <br>\ndon't even need to play with sizes; all you need to do is assume that  <br>\nSOME l is l.</p>\n<p>Peace</p>\n<ul>\n<li>John</li>\n</ul>",
        "id": 294080664,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660830559
    },
    {
        "content": "<p>From: Tjark Weber &lt;<a href=\"mailto:webertj@in.tum.de\">webertj@in.tum.de</a>&gt;<br>\nWell, to obtain a counterexample to an implication, one must not just<br>\nfalsify the conclusion, but also satisfy the premises.  In the original<br>\nthis requires 'a to have (at least) 2 elements.  In contrast, the range<br>\ntype 'b of M may be a singleton.  That's just what the message \"Size of<br>\ntypes: 'b: 1 'a: 2\" indicates.</p>\n<p>Regards,<br>\nTjark</p>",
        "id": 294080723,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660830584
    }
]