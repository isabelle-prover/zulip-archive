[
    {
        "content": "<p>From: Wolff  Burkhart &lt;<a href=\"mailto:bwolff@inf.ethz.ch\">bwolff@inf.ethz.ch</a>&gt;<br>\nDear all,</p>\n<p>is there any way to erase the following form of<br>\nredundant premises in a rule in forward-reasoning?</p>\n<p>I.e., I'd like to have a function of type thm =&gt; thm that<br>\nconverts:</p>\n<p>[|  A ==&gt; True; B |] ==&gt; C</p>\n<p>into </p>\n<p>B ==&gt; C.</p>\n<p>(We are talking about HOL.)</p>\n<p>Best,</p>\n<p>bu</p>",
        "id": 294050287,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660819146
    },
    {
        "content": "<p>From: Amine Chaieb &lt;<a href=\"mailto:chaieb@in.tum.de\">chaieb@in.tum.de</a>&gt;<br>\nHi,</p>\n<p>The following works for me:</p>\n<p>lemma annoyTrue: \"(P ==&gt; True) == Trueprop True\"<br>\n   apply (atomize (full)) by auto</p>\n<p>lemma \"[| A ==&gt; True ; B |] ==&gt; C\"<br>\n   apply (simp add: annoyTrue)</p>\n<p>proof (prove): step 1</p>\n<p>goal (1 subgoal):</p>\n<p>1. B ==&gt; C</p>\n<p>Amine.</p>\n<p>Wolff Burkhart wrote:</p>",
        "id": 294050325,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660819160
    },
    {
        "content": "<p>From: Amine Chaieb &lt;<a href=\"mailto:chaieb@in.tum.de\">chaieb@in.tum.de</a>&gt;<br>\nWolff Burkhart wrote:</p>\n<blockquote>\n<p>I.e., I'd like to have a function of type thm =&gt; thm that<br>\nconverts:</p>\n</blockquote>\n<p>I have forgotten this part of the question:</p>\n<p>This solves the problem:</p>\n<p>lemma annoyTrue: \"(P ==&gt; True) == Trueprop True\"<br>\n   apply (atomize (full)) by auto</p>\n<p>lemma annoyTrue': \"(True ==&gt; PROP P) == PROP P\" by auto</p>\n<p>ML{* Simplifier.rewrite_rule [@{thm annoyTrue}, @{thm annoyTrue'}]<br>\n   (assume @{cterm \"[| A ==&gt; True ; B |] ==&gt; C\"})*}</p>\n<p>The function is then just</p>\n<p>Simplifier.rewrite_rule [@{thm annoyTrue}, @{thm annoyTrue'}]</p>\n<p>Cheers,<br>\nAmine.</p>",
        "id": 294050331,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660819164
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nfn thm =&gt; TrueI RS thm;</p>\n<p>Makarius</p>",
        "id": 294050342,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660819170
    }
]