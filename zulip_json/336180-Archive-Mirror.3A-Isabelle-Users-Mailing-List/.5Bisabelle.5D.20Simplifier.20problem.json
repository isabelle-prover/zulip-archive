[
    {
        "content": "<p>From: wolff &lt;<a href=\"mailto:bwolff@inf.ethz.ch\">bwolff@inf.ethz.ch</a>&gt;<br>\nDear all,</p>\n<p>I came across with a simplifier problem which<br>\nI would like to understand.</p>\n<p>In a proofstate with a large formula phi in the<br>\nassumptions of a goal:</p>\n<p>1.) phi ==&gt; Xi</p>\n<p>simplification with a very simple rule R of<br>\nthe form \"(C(D x)) == True\" (yes, x is polymorphic,<br>\nany instance of a redex in phi is monomorphic)</p>\n<p>apply (simp add: R)</p>\n<p>does not compute a normal form.</p>\n<p>If I swap via</p>\n<p>apply(erule contrapos_pp)</p>\n<p>to </p>\n<p>1.) ~Xi ==&gt; ~phi</p>\n<p>the method:</p>\n<p>apply (simp add: R)</p>\n<p>does the trick.</p>\n<p>Why? It seems to be dependent on the size of phi -<br>\nis there a way to control this behaviour by some<br>\nflag or depth parameter?</p>\n<p>Best regards,</p>\n<p>bu</p>",
        "id": 293896291,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660742801
    }
]