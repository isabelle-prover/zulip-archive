[
    {
        "content": "<p>From: Rafal Kolanski &lt;<a href=\"mailto:rafalk@cse.unsw.edu.au\">rafalk@cse.unsw.edu.au</a>&gt;<br>\nDear Isabelle Wizards,</p>\n<p>I have encountered what seemed to be a really simple concept in my <br>\nproof. When I see this:</p>\n<p>((\\&lt;lambda&gt;(h, r). (ass1 (v r) (p r)) (h, r)) &amp;&amp;&amp;<br>\n    (\\&lt;lambda&gt;(h, r). (ass2 (p r)) (h, r)) &amp;&amp;&amp; P) (h, r)</p>\n<p>I know, that due to the implementation of &amp;&amp;&amp;, the external r will be <br>\npassed down to all the internal states, making all the lambdas in that <br>\nstatement completely redundant. However I cannot make any generic rules <br>\nsuch as:</p>\n<p>\"((\\&lt;lambda&gt;(h,r). (P r) (h,r)) &amp;&amp;&amp; Q) = (\\&lt;lambda&gt;(h,r). (P r &amp;&amp;&amp; Q) <br>\n(h,r))\"</p>\n<p>and have them substitute. Worse yet, attempting to substitute the above <br>\nresults in:<br>\n    *** exception TYPE raised: Variable \"?Q\" has two distinct types<br>\n    *** At command \"apply\"</p>\n<p>This really seemed a simple thing to do, and now I'm not sure what on <br>\nearth is going on. Please find attached a simplified theory file built <br>\non WordMain which illustrates this problem, with commentary.</p>\n<p>I would love some advice on how to get that to work, even if it involves <br>\nugly ML code.</p>\n<p>Sincerely,</p>\n<p>Rafal Kolanski.<br>\n<a href=\"/user_uploads/14278/iROUbeMs8rD73Z6oj3YefwMh/Temp.thy\">Temp.thy</a></p>",
        "id": 294059927,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660823169
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nIt looks like that is indeed a bug. Meanwhile, the following ugly hack  <br>\nwill let you substitute in an assumption until the bug can be fixed.</p>\n<p>apply (erule rev_mp)<br>\napply (rule sep_conj_pop_r_left [THEN ssubst])</p>\n<p>Larry Paulson</p>",
        "id": 294060003,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660823212
    },
    {
        "content": "<p>From: Rafal Kolanski &lt;<a href=\"mailto:rafalk@cse.unsw.edu.au\">rafalk@cse.unsw.edu.au</a>&gt;<br>\nHi,</p>\n<p>Thanks for that. If/when the bug gets fixed, would I have the slightest <br>\nchance of using things like sep_conj_pop_r_left as a simp rule? Or am I <br>\nlimited to subst or constructing my own tactic?</p>\n<p>As for WordMain, I thought that was the main include of HOL-word? We <br>\nhave our own expanded version of HOL-word, so I might've made a mistake <br>\nthere.</p>\n<p>Sincerely,</p>\n<p>Rafal Kolanski.</p>\n<p>Lawrence Paulson wrote:</p>",
        "id": 294060070,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660823255
    }
]