[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@kit.edu\">andreas.lochbihler@kit.edu</a>&gt;<br>\nHi all,</p>\n<p>I am currently moving a formalisation which resides in the theory context, but <br>\nuses the linorder type class, to the local context of the linorder type class. <br>\nMy goal is to use the (transferred) formalisation in other contexts where type <br>\nclass instantiation is not possible, but locale interpretation is.</p>\n<p>My problem now is that some proofs break when I move them from the type class to <br>\nthe local context. Here is a simple example:</p>\n<p>(* original *)<br>\nlemma \"¬ (a :: 'a :: linorder) &lt; x ==&gt; ¬ x &lt; a ==&gt; f x = f a\" by simp</p>\n<p>(* moved *)<br>\nlemma (in linorder) \"¬ (a :: 'a) &lt; x ==&gt; ¬ x &lt; a ==&gt; f x = f a\"</p>\n<p>simp cannot prove the second lemma. By tracing the simplifier, I found that for <br>\nthe original lemma, the \"antisym less\" simproc in Orderings.thy produces the <br>\nrewrite rule \"¬ a &lt; x == a = x\" for the original lemma, but it does not for the <br>\nnew version because 'a lacks the sort constraint linorder.</p>\n<p>What do I have to do to make the simproc work in the local context, too?</p>\n<p>Andreas</p>",
        "id": 294129759,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660842386
    },
    {
        "content": "<p>From: Clemens Ballarin &lt;<a href=\"mailto:ballarin@in.tum.de\">ballarin@in.tum.de</a>&gt;<br>\nHi Andreas,</p>\n<p>Indeed, it looks like the simproc you mention wasn't setup to support  <br>\nlocal reasoning, while the transitivity reasoner for linear orders  <br>\n(which is a solver and is provided at the same place) is.</p>\n<p>Basically, what you need is the following:</p>\n<ul>\n<li>A generic data slot that receives theorems needed by the simproc.</li>\n<li>\n<p>An attribute that is declared for these theorems in the target  <br>\ncontext linorder, and that stores the theorems in the data slot.</p>\n</li>\n<li>\n<p>A simproc, that inspects its generic data slot and acts based on its  <br>\ncontent.</p>\n</li>\n</ul>\n<p>If you now enter a context that is, imports or interprets linorder,  <br>\nthe theorems are declared and the attribute pushes them into into the  <br>\ndata slot, from where the simproc will pick them up.</p>\n<p>To get an idea how to do this, look at Ordering.thy, structure Orders.  <br>\n  This is a bit more complicated than what you need.  There's also a  <br>\npaper by Chaieb and Wenzel, where they elaborate this idea in the  <br>\ncontext of algebraic simplification.  You might actually want to  <br>\nextend the existing structure Orders a bit instead of providing your  <br>\nown.</p>\n<p>Clemens</p>\n<p>Quoting Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@kit.edu\">andreas.lochbihler@kit.edu</a>&gt;:</p>",
        "id": 294130091,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660842501
    }
]