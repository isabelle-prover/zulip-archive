[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear list,</p>\n<p>I have a sequence of calculational reasoning steps.</p>\n<p>have \"... f ... = ... (f some_argument)\" for f<br>\n   also have \"some_other_subterm = ...\"<br>\n   finally have ... apply -</p>\n<p>In some of the steps I have abstracted over the concrete term by reasoning with some <br>\narbitrary f, which happens to be a function. Unfortunately, the \"finally\" step now <br>\nintroduces a flex-flex pair in \"calculation\", because f is applied to some_argument on the <br>\nright-hand side of the first equation and some_other_subterm occurs in the ... part of the <br>\nfirst right-hand side.</p>\n<p>The problem now is that the calculation at the end is completely unusable. Even a simple <br>\n\"apply -\" raises an exception (in Isabelle2016):</p>\n<p>exception THM 0 raised (line 820 of \"thm.ML\"):<br>\n     forall_intr: variable \"f\" free in assumptions</p>\n<p>Why does also/finally not smash flex-flex pairs? Or is there some way to tell Isabelle to <br>\neliminate them?</p>\n<p>Thanks in advance,<br>\nAndreas</p>",
        "id": 294694539,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661177990
    }
]