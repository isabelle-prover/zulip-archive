[
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nHallo,</p>\n<p>I am currently working on some Social Choice Theory. The proof basically <br>\nworks by deriving a number of equalities and inequalities over real <br>\nnumbers and then showing that they are inconsistent.</p>\n<p>I have already derived these conditions and now need to show that they <br>\nare actually inconsistent. This is goal1 in the attachment. Here, pmf is <br>\nfrom HOL-Probability and sds, R1, R2, a, b, c, d etc. are <br>\nconstants/fixed locale variables whose properties are irrelevant for <br>\nthis goal. To emphasise this: I can restate the goal by generalising it <br>\na bit, introducing real variables for all the expressions (see goal2). <br>\nIf one simplifies this a bit and eliminates redundant variables, one <br>\nobtains goal3.</p>\n<p>I tried the following things:<br>\n– smt (i.e. Z3) is able to solve goal1 within .3 seconds; proof <br>\nreconstruction takes another 12 seconds.<br>\n– smt solves goal2 within .5 seconds; proof reconstruction seems to take <br>\nlonger than my patience will permit though.<br>\n– smt solves goal3 within .3 seconds; proof reconstruction takes 67 seconds.<br>\n– Both goals should be solvable by linarith in theory. I tried it and <br>\ngave up after an hour or so.</p>\n<p>This raises the following questions:<br>\n– Why is this trivial for Z3 but impossible for linarith?<br>\n– Is there any hope of tweaking linarith to get this proof through?<br>\n– Why does proof reconstruction take so much longer on goal2 and goal3, <br>\neven though they are arguably ‘simpler’?</p>\n<p>I know that proofs using smt are not allowed in the AFP, so the prospect <br>\nthat I can only prove this with smt is a bit troubling.</p>\n<p>Incidentally, another question: Is there any easy way to turn something <br>\nlike goal1 into something like goal2, i.e. generalise all real <br>\nnon-literals in a term to real variables? I wrote my own very ad-hoc <br>\ntactic for this, but it seems like quite a common use case.</p>\n<p>Cheers,</p>\n<p>Manuel<br>\n<a href=\"/user_uploads/14278/a2Rp7d8_UW_qGBEsatI9_glT/goal1\">goal1</a><br>\n<a href=\"/user_uploads/14278/sclfJVMjc0c7QW-n4RqdBW0r/goal2\">goal2</a><br>\n<a href=\"/user_uploads/14278/68r9BMAvCWj45EUKKOKqtiHx/goal3\">goal3</a></p>",
        "id": 294671871,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661173637
    },
    {
        "content": "<p>From: Sascha Boehme &lt;<a href=\"mailto:boehmes@in.tum.de\">boehmes@in.tum.de</a>&gt;<br>\nHi Manuel,</p>\n<p>You might be interested to hear that the next Isabelle release will provide a new method named argo that is capable of solving such goals without invoking an external tool. With argo, your goals can be proved within five seconds on off-the-shelf hardware.</p>\n<p>Cheers,<br>\nSascha</p>",
        "id": 294684353,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661177444
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nHallo Sascha,</p>\n<p>very nice indeed! I shall take a look at it.</p>\n<p>I've since converted the SMT-based proof into a fully-structured Isar<br>\nproof (which was my goal anyway, I just wasn't sure whether it was<br>\nfeasible – it was)</p>\n<p>Still, I'm sure this will be very useful if I ever run into similar<br>\nissues in the future.</p>\n<p>Cheers,</p>\n<p>Manuel</p>",
        "id": 294684365,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661177450
    }
]