[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nDepends what you mean by \"modern\" and \"editor\".</p>\n<p>jEdit is a very capable \"programmer's editor\" is it advertizes itself, but <br>\nnot a word processor.  Program text is hardly ever soft-wrapped, so <br>\nrelatively little has been invested in this area.  It you take Isar <br>\nsources, things like {* ... *} are a separate token anyway, like \" ... \". <br>\nWould you expect from a source-code editor to wrap lines within string <br>\nliterals?</p>\n<p>Nonetheless, I can myself imagine Isabelle/jEdit doing something for<br>\ntext {* ... *} blocks within Isar source, but that has to be specific to <br>\nthe language, meaning I have to sit down and provide that functionality.<br>\n(As I did already for many other things.)</p>\n<p>Makarius</p>",
        "id": 294225974,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660899995
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nIf you want to restrict to a subset of a type wityhout creating a completely new<br>\ntype, you must do that on the formula level with explicit assumptions in your<br>\npropositions.</p>\n<p>Tobias</p>",
        "id": 294226763,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660900363
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nGreat stuff, look forward to more of this.</p>\n<p>A small random point: the definition</p>\n<p>definition in_range ::<br>\n  \"nat \\&lt;Rightarrow&gt; nat \\&lt;Rightarrow&gt; bool\" where<br>\n  \"in_range n i \\&lt;equiv&gt; 1 \\&lt;le&gt; i \\&lt;and&gt; i \\&lt;le&gt; n\"</p>\n<p>excludes 0. Unless you have some very good reason for starting at 1, I would<br>\nstart at 0, which typically makes things smoother. For a start, you can just<br>\nwrite \"i&lt;n\" instead of \"in_range n i\".</p>\n<p>Tobias</p>",
        "id": 294226910,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660900431
    },
    {
        "content": "<p>From: \"Tim (McKenzie) Makarios\" &lt;<a href=\"mailto:tjm1983@gmail.com\">tjm1983@gmail.com</a>&gt;</p>\n<blockquote>\n<p>We would like to contribute our formalisation to the AFP, but are unsure about the procedure: once accepted and published, can we submit updates?</p>\n</blockquote>\n<p>Yes; see <a href=\"http://afp.sourceforge.net/updating.shtml\">http://afp.sourceforge.net/updating.shtml</a></p>\n<blockquote>\n<ul>\n<li>It would be nice to be able to introduce proper types (not just type_synonyms) for things such as non-negative real vectors. </li>\n</ul>\n</blockquote>\n<p>Have you seen section 8.5.2 of tutorial.pdf in Isabelle's doc folder?<br>\nPerhaps there's also other documentation in another file; if so, I hope<br>\nsomeone else knows where and points you to it.</p>\n<p>I'm quite interested in what you're doing; after working with Isabelle<br>\nfor my Master's project, I'm now musing about auction theory:<br>\n<a href=\"http://wp.me/p2IaW7-W\">http://wp.me/p2IaW7-W</a>  (I'm not trained in economics, so please be<br>\ngentle, but please do comment on my musings if you think I'm in error,<br>\nor if you have anything else to say about them.)  Consequently, I<br>\ndecided to have a look at your Vickrey theory.  In preparation for this,<br>\nI tried running Isabelle's document preparation system on Vickrey.thy<br>\n(see chapter 4 of isar-ref.pdf, and possibly other parts of Isabelle's<br>\ndocumentation).  Unfortunately, it didn't work at first, for a couple of<br>\nreasons.</p>\n<p>First, Vickrey.thy didn't end with \"end\", which was easy to fix.</p>\n<p>Second, your \"text {* ... *}\" portions don't always contain valid LaTeX.<br>\n I made minimal changes to get your document to compile, but I haven't<br>\nhad time to read it yet.  I've attached my edited version of your<br>\nVickrey.thy, so you can see what changes I've made.  I've made almost no<br>\neffort to make it look as you intended --- only to make it compile.</p>\n<p>Tim<br>\n&lt;&gt;&lt;<br>\n<a href=\"/user_uploads/14278/HOTB-PdlEO0IZGzoP2MjI3wK/Vickrey.thy\">Vickrey.thy</a><br>\n<a href=\"/user_uploads/14278/HSmcRs5yvPtflkGsQF9atCpG/signature.asc\">signature.asc</a></p>",
        "id": 294227272,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660900593
    },
    {
        "content": "<p>From: \"Tim (McKenzie) Makarios\" &lt;<a href=\"mailto:tjm1983@gmail.com\">tjm1983@gmail.com</a>&gt;<br>\nI've had a look at your work, and found it interesting.</p>\n<p>One thing that I noticed was that you defined what it means to be a<br>\nsecond_price_auction, and you proved various things about functions that<br>\nsatisfy this definition, but you never showed that the definition was<br>\nsatisfiable.</p>\n<p>This isn't an inconsequential detail; at first, I thought you'd got the<br>\ndefinition wrong, and that \"second_price_auction n x p\" implied n &lt; 2.<br>\nWhen I tried to prove it, I finally noticed that your allocation and<br>\npayment functions depend on the set of bids.  But it is easy to write<br>\ndefinitions that aren't satisfiable, or that imply trivialities.</p>\n<p>So I decided to prove that your second_price_auction was satisfiable for<br>\nn &gt; 0.  See attached for the proof.</p>\n<p>Also, you made a comment about removing an element from a set.  Given a<br>\nset A, the set of all the elements of A except x can be written as<br>\n\"A - {x}\"</p>\n<p>I have a feeling that there was something else I was going to comment<br>\non, but I should go and have lunch, and write again if I remember it.</p>\n<p>Tim<br>\n&lt;&gt;&lt;<br>\n<a href=\"/user_uploads/14278/D5syyZ0esRDQ4n28kXYeVcub/Vickrey_Extras.thy\">Vickrey_Extras.thy</a><br>\n<a href=\"/user_uploads/14278/kh74H-XlBX1VwclwZKq3NVLS/signature.asc\">signature.asc</a></p>",
        "id": 294227619,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660900785
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Wed, 31 Oct 2012, Christoph LANGE wrote:</p>\n<blockquote>\n<p>QUESTIONS FOR ISABELLE COMMUNITY</p>\n<p>We would like to contribute our formalisation to the AFP, but are unsure <br>\nabout the procedure: once accepted and published, can we submit updates? <br>\nWe could imagine submitting this formalisation soon (as it is <br>\nself-contained and covers a relevant field), but still we are planning <br>\nto evolve and improve it.</p>\n</blockquote>\n<p>I am not an editor of AFP, but it is generally a good idea to refine and <br>\nconsilidate some development several times, before entering the submission <br>\nprocess.</p>\n<p>If you need a hosting platform for the development process, I can <br>\nrecommend <a href=\"https://bitbucket.org/\">https://bitbucket.org/</a> (with Mercurial).</p>\n<blockquote>\n<p>As this was our first major Isabelle formalisation, we may have got a <br>\nlot of things wrong. We would be grateful if any of you were able to <br>\nlook into the source and tell us of any \"anti-patterns\" we shouldn't <br>\nuse. I will also follow up on this mail with a number of mails asking <br>\nspecific questions on how certain things in Isabelle work, and with some <br>\njEdit bug reports.</p>\n</blockquote>\n<p>Looking only briefly over your Vickrey.thy, it already looks quite good as <br>\na start.  There are many fine points to be considered; we should go <br>\nthrough it gradually and without attacking everything at the same time.</p>\n<p>Since Christoph is also a CICM person, I would like to point out the MKM <br>\n2008 paper by myself and Stefan Berghofer on \"Logic-free reasoning in <br>\nIsabelle/Isar\".  It shows how to deflate your theories by a significant <br>\nfactor, by removing unnecessary fluff.  (Informal people sometimes think <br>\nthey are doing formal logic when writing a lot of logical connectives <br>\naround there meterial, but this is not the real point of it.)</p>\n<p>When doing functional programming properly, you also don't write funny <br>\ntuple arguments all the time, just to please ousiders, you use currying.</p>\n<p>Can you write your sources with 80 char per line, or 100 maximum?  These <br>\nexceedingly long lines are hard to read.  The physicial parameters of <br>\ncinema displays have changed a lot recently, but not the parameters of the <br>\nhuman brain.</p>\n<p>jEdit is not very good at soft line-breaks, and it is better to layout <br>\nyour formal sources explicitly yourself.  (The jEdit indentation <br>\nfacilities still need to be activated for Isar sources, like I did many <br>\nyears ago for Proof General / Emacs.)</p>\n<p>Makarius</p>",
        "id": 294228279,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901088
    },
    {
        "content": "<p>From: Christoph LANGE &lt;<a href=\"mailto:c.lange@cs.bham.ac.uk\">c.lange@cs.bham.ac.uk</a>&gt;<br>\nHi Makarius, hi all,</p>\n<p>@All: Let me slowly resume the discussion of your feedback about our <br>\nformalisation.  The earlier feedback sent by others (thanks once more!) <br>\nis not forgotten, I will get back to this next week, but the points in <br>\nthis mail are good for me to start with, as they don't require me to <br>\nlearn a lot of new things.</p>\n<p>2012-11-16 22:49 Makarius:</p>\n<blockquote>\n<p>Since Christoph is also a CICM person, I would like to point out the MKM<br>\n2008 paper by myself and Stefan Berghofer on \"Logic-free reasoning in<br>\nIsabelle/Isar\".  It shows how to deflate your theories by a significant<br>\nfactor, by removing unnecessary fluff.</p>\n</blockquote>\n<p>Thanks for the pointer!</p>\n<blockquote>\n<p>(Informal people sometimes think<br>\nthey are doing formal logic when writing a lot of logical connectives<br>\naround there meterial, but this is not the real point of it.)</p>\n</blockquote>\n<p>Well, I actually didn't try to be as \"formal\" as possible, but I did not <br>\nyet know how to do it right.  In several lemmas I started with a simpler <br>\nstatement, e.g. just the right side of an implication, and put the left <br>\nside into \"assumes\" declarations, but then I wasn't able to reuse these <br>\nassumptions in the proof as expected.  In the cumbersome way I ended up <br>\ndoing it I got the work done at least – but of course I'll be excited to <br>\nlearn about the nicer way of doing it, and how to avoid such pitfalls as <br>\nI mentioned.</p>\n<blockquote>\n<p>Can you write your sources with 80 char per line, or 100 maximum?  These<br>\nexceedingly long lines are hard to read.  The physicial parameters of<br>\ncinema displays have changed a lot recently, but not the parameters of<br>\nthe human brain.</p>\n</blockquote>\n<p>OK, I will try; it should be possible to introduce line breaks where it <br>\nsemantically makes sense.</p>\n<p>But actually I'd like to blame half of the problem on this:</p>\n<blockquote>\n<p>jEdit is not very good at soft line-breaks,</p>\n</blockquote>\n<p>Not having much previous jEdit experience I simply had hoped that a <br>\nmodern editor would be good at that (even recent versions of dinosaurs <br>\nsuch as Emacs are), and somehow denied that it didn't work so well after <br>\nall.</p>\n<p>End of rant; I don't want to start an editor war here.</p>\n<blockquote>\n<p>and it is better to layout<br>\nyour formal sources explicitly yourself.  (The jEdit indentation<br>\nfacilities still need to be activated for Isar sources, like I did many<br>\nyears ago for Proof General / Emacs.)</p>\n</blockquote>\n<p>Let me report a problem related to that: I tried at least to enable <br>\nauto-indentation, so that any new line would be indented as much as the <br>\nprevious line.  But with that I found that Isabelle didn't pick up the <br>\nchanges I made.  (This is roughly what I remember from trying it a few <br>\nweeks ago; if you'd like me to do some experiments and give a more <br>\ndetailed report, I'm happy to do so.)</p>\n<p>Cheers,</p>\n<p>Christoph</p>",
        "id": 294228295,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901100
    }
]