[
    {
        "content": "<p>From: Burkhart Wolff &lt;<a href=\"mailto:Burkhart.Wolff@lri.fr\">Burkhart.Wolff@lri.fr</a>&gt;<br>\nDear all,</p>\n<p>I encountered a strange behaviour of ALLGOALS under<br>\nIsabelle/HOL 2008.</p>\n<p>apply(tactic \"ALLGOALS(COND' contains_eval thyp_ify (K all_tac))\")</p>\n<p>results in the error message:</p>\n<p>*** Unknown context<br>\n*** At command \"apply\".</p>\n<p>while each individual call:</p>\n<p>apply(tactic \"(COND' contains_eval thyp_ify (K all_tac)) 4\")<br>\n   apply(tactic \"(COND' contains_eval thyp_ify (K all_tac)) 3\")<br>\n   apply(tactic \"(COND' contains_eval thyp_ify (K all_tac)) 2\")<br>\n   apply(tactic \"(COND' contains_eval thyp_ify (K all_tac)) 1\")</p>\n<p>works fine.</p>\n<p>According specification in tctical.ML, they should behave the same ...</p>\n<p>Can you help me?</p>\n<p>bu</p>\n<p>PS: In case that you need slightly more context<br>\n(but it should actually not matter):</p>\n<p>ML{*<br>\nfun COND' C T1 T2 n = COND (C n) (T1 n) (T2 n);<br>\nfun contains_eval n thm =<br>\n     let fun T(\"Natural.evalc\",_) = true | T _ = false<br>\n     in  Term.exists_Const T (term_of(cprem_of thm n)) end*}</p>",
        "id": 294075574,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660828738
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThese tactic invocations should be functionally the same, but the exact <br>\ninternal evaluation behaviour is different.  The version without ALLGOALS <br>\ncan potentially run a bit further, and probably peeks at the implicit <br>\ncontext that is still active during compilation of the \"tactic\" <br>\nexpression.  Later at actual runtime this is no longer available, and <br>\nproduces the \"Unknown context\" error.</p>\n<p>Neither ALLGOALS nor COND' are at fault here.  You should look at <br>\ncontains_eval thyp_ify instead at figure out where the context is <br>\naccessed, e.g. via the_context() or simpset() or similar.  All of this <br>\nbelongs to old layers of the system and is more and more at retreat. <br>\nUsually it is best to refer to the context explicitly, passing through <br>\nctxt: Proof.context where required and provide that value in the very end <br>\nvia the @{context} antiquotation. E.g. like this:</p>\n<p>ML {*<br>\n   fun my_tac ctxt i = ...<br>\n*}</p>\n<p>...<br>\n   apply (tactic \"ALLGOALS (my_tac @{context})\")</p>\n<p>Makarius</p>",
        "id": 294075636,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660828762
    },
    {
        "content": "<p>From: Jeremy Dawson &lt;<a href=\"mailto:jeremy@rsise.anu.edu.au\">jeremy@rsise.anu.edu.au</a>&gt;<br>\nBurkhart Wolff wrote:<br>\nBurkhart,</p>\n<p>When I was using Isar I often found strange behaviour which was <br>\nsomething to do with theories, and I think the message *** Unknown <br>\ncontext suggests that this may be the case here also.</p>\n<p>What behaviour do you get not using Isar, ie using the straight ML <br>\ninterface, and</p>\n<p>by (ALLGOALS(COND' contains_eval thyp_ify (K all_tac))) ;</p>\n<p>by ((COND' contains_eval thyp_ify (K all_tac)) 4) ;<br>\nby ((COND' contains_eval thyp_ify (K all_tac)) 3) ;<br>\nby ((COND' contains_eval thyp_ify (K all_tac)) 2) ;<br>\nby ((COND' contains_eval thyp_ify (K all_tac)) 1) ;</p>\n<p>?</p>\n<p>Jeremy</p>",
        "id": 294075688,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660828787
    },
    {
        "content": "<p>From: Burkhart Wolff &lt;<a href=\"mailto:bwolff@inf.ethz.ch\">bwolff@inf.ethz.ch</a>&gt;<br>\nJeremy, thank you for your interest.</p>\n<p>The problem is solved (thanks Makarius) :  I used a construct<br>\nthat makes reference to the proof-state<br>\nand binds the fixeds result somewhere inside a tactic.<br>\n(something equivalent to simpset(), but more<br>\nsubtle: its 'thm \"bla\"', I guess 'theory \"bla\"' is the same ? ).</p>\n<p>This kind of context violation is now rejected<br>\nmuch more strictly by the kernel than it was in<br>\nprevious Isabelle versions.</p>\n<p>The reason why the error pops up to surface at<br>\nthe quite innocent ALLGOALS is somewhat<br>\nmore obscure - but not really intereasting, I guess,<br>\nfor this mailing list.</p>\n<p>bu</p>",
        "id": 294075775,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660828809
    }
]