[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nHi List,</p>\n<p>I ran into an odd effect: inside an experiment environment,<br>\n\"definition\" sometimes seems to produce (partially) eta-expanded terms<br>\ninstead of constants! For me, it occurs in one of my own tools, and I<br>\ncould not yet strip it down, but I found the same strange effect in the<br>\nstandard \"definition\" command, when it automatically augments a type<br>\nargument. Outside an experiment environment, everything is as expected.</p>\n<p>(minimal example attached)</p>\n<p>What is going on here? To fix this thing for my tool, or strip it down<br>\nto a small example, I need some insights why this happens.</p>\n<p>And another question: is this the expected behaviour of definition, to<br>\ngenerate an eta-expanded term instead of a constant? </p>\n<p>Also note that the pretty-printer seems not to be impressed by<br>\n[[eta_contract=false]] at all, and still prints the eta-contracted<br>\nversion. (Which makes it even harder to figure out what is going on)</p>\n<p>Thanks in advance for any pointers or explanations what is going on,<br>\n  Peter</p>\n<hr>\n<p>theory Scratch<br>\nimports<br>\n   Main<br>\nbegin</p>\n<p>declare [[eta_contract = false]]</p>\n<p>experiment<br>\n  begin</p>\n<p>definition \"f ≡ length []\" (* additional type var *)<br>\n    (* Looks OK *)<br>\n    term f (* \"f\" :: \"'a itself ⇒ nat\" *)</p>\n<p>(* But actually is an eta-expanded term, rather than a simple<br>\nconstant: *)<br>\n    ML_val ‹@{term f}› (* Abs (\"type\", \"'a itself\", Const<br>\n(\"Scratch.experiment11092848.f\", \"'a itself ⇒ nat\") $ Bound 0) *)</p>\n<p>(* And tools expecting constant fail on it *)<br>\n    ML_val ‹ @{const_name f}› (* Not a logical constant: \"local.f\" *)<br>\n    ML_val ‹ @{const f (nat)}› (* Not a logical constant: \"local.f\" *)</p>\n<p>end</p>",
        "id": 294828526,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661245530
    }
]