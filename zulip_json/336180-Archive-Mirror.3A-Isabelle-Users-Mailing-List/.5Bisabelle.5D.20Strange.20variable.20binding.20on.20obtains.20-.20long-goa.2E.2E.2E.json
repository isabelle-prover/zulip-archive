[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nHi all,</p>\n<p>referring to Isaballe 2011-1</p>\n<p>I just encountered some (in my opinion strange) behavior of the obtains<br>\nlong-goal format:</p>\n<p>lemma <br>\n  assumes P<br>\n  obtains sym where \"sym = w\"<br>\n  thm that</p>\n<p>Outputs:<br>\n  sym = (w\\&lt;Colon&gt;('a \\&lt;times&gt; 'a \\&lt;Rightarrow&gt; bool) \\&lt;Rightarrow&gt;<br>\nbool) \\&lt;Longrightarrow&gt; thesis\\&lt;Colon&gt;bool</p>\n<p>That is, sym is recognized as a constant (Relation.sym) here, instead of<br>\na bound variable, as I would expect.<br>\nIs there a workaround, i.e., can I use a name declared as a constant<br>\nsomewhere in an obtains-goal?<br>\nAdding a \"fixes sym\" to the lemma results in a \"duplicate fixed<br>\nvariable\" error.</p>\n<p>If this behavior is intended, is there any reason for silently ignoring<br>\nthe variable binding given by the user, not even issuing a warning?</p>\n<p>Regards,<br>\n  Peter</p>",
        "id": 294156318,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660851352
    },
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:huffman@in.tum.de\">huffman@in.tum.de</a>&gt;<br>\nOn Mon, Apr 23, 2012 at 10:48 AM, Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt; wrote:</p>\n<blockquote>\n<p>Hi all,</p>\n<p>referring to Isaballe 2011-1</p>\n<p>I just encountered some (in my opinion strange) behavior of the obtains<br>\nlong-goal format:</p>\n<p>lemma<br>\n assumes P<br>\n obtains sym where \"sym = w\"<br>\n thm that</p>\n<p>Outputs:<br>\n sym = (w\\&lt;Colon&gt;('a \\&lt;times&gt; 'a \\&lt;Rightarrow&gt; bool) \\&lt;Rightarrow&gt;<br>\nbool) \\&lt;Longrightarrow&gt; thesis\\&lt;Colon&gt;bool</p>\n<p>That is, sym is recognized as a constant (Relation.sym) here, instead of<br>\na bound variable, as I would expect.<br>\nIs there a workaround, i.e., can I use a name declared as a constant<br>\nsomewhere in an obtains-goal?</p>\n</blockquote>\n<p>Using a type annotation (even a dummy one) seems to make it work:</p>\n<p>lemma<br>\n  assumes P<br>\n  obtains sym :: \"_\" where \"sym = w\"</p>\n<p>goal (1 subgoal):</p>\n<ol>\n<li>(!!sym. sym = w ==&gt; thesis) ==&gt; thesis</li>\n</ol>\n<p>The behavior in the latest developer version (8b31786fe603) seems to<br>\nbe the same.</p>\n<blockquote>\n<p>Adding a \"fixes sym\" to the lemma results in a \"duplicate fixed<br>\nvariable\" error.</p>\n<p>If this behavior is intended, is there any reason for silently ignoring<br>\nthe variable binding given by the user, not even issuing a warning?</p>\n</blockquote>\n<p>I doubt that the behavior is intended. It seems to me like a classic<br>\nmistake in context-plumbing: Without the type annotation, the term<br>\n\"sym = w\" is parsed in a context where \"sym\" has not been declared as<br>\na variable name.</p>\n<p>Perhaps we will be able to fix this in time for the next release.</p>\n<ul>\n<li>Brian</li>\n</ul>",
        "id": 294156409,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660851370
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThese things are an order of magnitude for complex than they seem.  The <br>\n'obtains' element has suffured from some imperfections ever since its <br>\nintroduction some years ago.  These are not shallow \"bugs\", but some <br>\ndeeper problems how the fixes/assumes/obtains format is processed -- it <br>\nstill cannot process the split into disjunctive contexts properly.</p>\n<p>It is all going back to the wild times of 2006/2007, when too many people <br>\nwhere doing too many too ambitious things at the same time (Wenzel, <br>\nHaftmann, Ballarin, Krauss).  This has resulted in what was called <br>\n\"national debts\" in Isabelle jargon, and it has required many years to pay <br>\nback quite a lot of that, but not all.  (When I am finished here, I will <br>\nask the German government if they need an expert on that.)</p>\n<p>For Isabelle2012, which is due before the end of May, I have again made <br>\nvarious refinements of the local theory and context management <br>\ninfrastructure that is relevant here.  I've also considered to rework <br>\nthese old 'obtains' points, but did not get that far.  So it is again <br>\npostponed to another release after the coming one.</p>\n<p>BTW, in order to get really acquainted with these delicacies of the <br>\nIsabelle implementation at an expert level, the first step is to overcome <br>\nthe illusion that it is easy to \"fix\" the system.  Most of the easy things <br>\nhave all been done already in the past, mainly the hard and very hard ones <br>\nare pending.</p>\n<p>It might be worth documenting the above workarounds on the new Isabelle <br>\ncommunity <a href=\"https://isabelle.in.tum.de/community/Main_Page\">https://isabelle.in.tum.de/community/Main_Page</a> wiki.  I am not <br>\nengaged there myself, but I occasionally look if certain issues being <br>\nraised there should be put on the current agenda to be refined or <br>\nreformed.</p>\n<p>Makarius</p>",
        "id": 294156425,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660851376
    }
]