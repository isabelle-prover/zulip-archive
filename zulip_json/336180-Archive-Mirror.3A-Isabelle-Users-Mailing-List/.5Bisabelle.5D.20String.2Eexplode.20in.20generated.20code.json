[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@kit.edu\">andreas.lochbihler@kit.edu</a>&gt;<br>\nDear all,</p>\n<p>In Isabelle2009-2, the code generator translated the theory String into the <br>\nmodule Stringa. In Isabelle2011, it uses String. Consequently, the SML <br>\ntranslations in HOL/Library/Code_Char for String.implode and String.explode to <br>\nString.implode and String.explode no longer refer to ML's built-in implode and <br>\nexplode functions, but are captured by the new String module, which does not <br>\ndeclare such functions. Consequently, PolyML 5.4 rejects generated code that <br>\nuses String.implode and String.explode.</p>\n<p>Surprisingly, with the @{code} antiquotation, everything seems to work fine.<br>\nHere's a small example:</p>\n<p>theory Test imports Main Code_Char begin<br>\ndefinition foo where \"foo = String.explode (STR ''abc'')\"<br>\nexport_code foo in SML file \"test.ML\"<br>\nML {* @{code foo} *}<br>\nend</p>\n<p>If I adjust the translation to</p>\n<p>code_const explode (SML \"explode\")</p>\n<p>then the raw polyml accepts the code produced by export_code, but the <br>\nantiquotation no longer works.</p>\n<p>What do I have to do such that both work?</p>\n<p>Regards,<br>\nAndreas</p>",
        "id": 294130477,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660842612
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Andreas,</p>\n<p>first, the appropriate solution to your problem should be</p>\n<p>code_modulename SML<br>\n  String Stringa</p>\n<p>The reason is that all runtime services uses target language Eval rather<br>\nthan SML (as noted in code generation tutorial p. 31) and typically do<br>\nnot use different structures.</p>\n<p>After some experimentation I have a feeling that code_reserved does not<br>\nexactly behave as expected, I will keep track on this.</p>\n<p>Cheers,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/cyNm25-rvjG4Z9dAzD9NIo1L/signature.asc\">signature.asc</a></p>",
        "id": 294130882,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660842759
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi again,</p>\n<blockquote>\n<p>After some experimentation I have a feeling that code_reserved does not<br>\nexactly behave as expected, I will keep track on this.</p>\n</blockquote>\n<p>the reason for this »misbevahiour« were the following lines added to<br>\nString.thy: <a href=\"http://isabelle.in.tum.de/reports/Isabelle/rev/0a3fa8fbcdc5\">http://isabelle.in.tum.de/reports/Isabelle/rev/0a3fa8fbcdc5</a></p>\n<p>E.g. they would fix the module name »String«.</p>\n<p>I am not able to reconstruct was my motivation was to add these, but now<br>\nthey are removed for good.</p>\n<p>Florian<br>\n<a href=\"/user_uploads/14278/5iLZAWEBT59tgmkjtH45qPg1/signature.asc\">signature.asc</a></p>",
        "id": 294131346,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660842928
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@kit.edu\">andreas.lochbihler@kit.edu</a>&gt;<br>\nHi Florian,</p>\n<p>thanks for figuring this out. I will keep your code_modulename workaround until <br>\nI switch to the development version again.</p>\n<p>Andreas</p>\n<p>Florian Haftmann schrieb:</p>",
        "id": 294131397,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660842949
    }
]