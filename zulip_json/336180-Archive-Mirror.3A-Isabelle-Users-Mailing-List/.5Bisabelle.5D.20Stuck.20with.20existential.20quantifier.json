[
    {
        "content": "<p>From: Christian Kühnel &lt;<a href=\"mailto:christian.kuehnel@gmail.com\">christian.kuehnel@gmail.com</a>&gt;</p>\n<blockquote>\n<p>Dear isabelle users,</p>\n</blockquote>\n<blockquote>\n<p>I'm trying to prove this obvious lemma:</p>\n</blockquote>\n<blockquote>\n<p>\"~ (EX t. [1::nat,1,1] ! t = 0 )\"</p>\n</blockquote>\n<blockquote>\n<p>I've been trying for a while but could not figure it out. Can you please<br>\ngive me a hint, how I can prove this?</p>\n</blockquote>\n<blockquote>\n<p>Is there more documatation on prooving terms with existential and universal<br>\nquantifiers? The isabelle tutorial did not help me there.</p>\n</blockquote>\n<p>&gt;</p>\n<p>Best regards,<br>\nChristian Kühnel</p>",
        "id": 294139587,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845398
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@kit.edu\">andreas.lochbihler@kit.edu</a>&gt;<br>\nDear Christian,</p>\n<p>your lemma is not provable, because t is not constrained to the length of the <br>\nlist. It could be, say, 42, and you can hardly prove anything about what you get <br>\nif you take an element beyond the list.</p>\n<p>Here's the provable version:</p>\n<p>\"~ (EX t. t &lt; 3 &amp; [1::nat,1,1] ! t = 0 )\"</p>\n<p>If you apply the simplifier to this goal, it will pull the negation in, turning <br>\nthe existential quantifier into a universal one, so this is no longer a problem <br>\nof existential quantifiers. You can prove the statement in by trying every <br>\npossible value -- which is feasible for such small lists, but impractical for <br>\nlarger ones. If you want to split the cases for t automatically, feed nth_Cons' <br>\nto the simplifier:</p>\n<p>by(simp add: nth_Cons')</p>\n<p>Hope this helps,<br>\nAndreas</p>",
        "id": 294139599,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845402
    },
    {
        "content": "<p>From: Christian Sternagel &lt;<a href=\"mailto:christian.sternagel@uibk.ac.at\">christian.sternagel@uibk.ac.at</a>&gt;<br>\nHi,</p>\n<p>the nth function on lists (xs ! n) is undefined when n is outside the <br>\nbounds of xs. That means that we do not know anything about the result. <br>\nSince we do not know anything, we do in particular not know whether the <br>\nresult is 0 or not. Thus your statement is not provable.</p>\n<p>I hope this helps.</p>\n<p>cheers</p>\n<p>chris</p>",
        "id": 294139622,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845408
    }
]