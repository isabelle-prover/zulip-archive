[
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nDear John,</p>\n<p>the problem is simply that our class concept currently does not<br>\nimplement a proper concept for derived definitions relative to classes;<br>\nso the definition</p>\n<blockquote>\n<blockquote>\n<p>definition<br>\n  size_of :: \"'a::C_type itself \\&lt;Rightarrow&gt; nat\" where<br>\n  \"size_of (t::'a::C_type itself) = length (to_bytes (arbitrary::'a))\"</p>\n</blockquote>\n</blockquote>\n<p>does introduce a theory-level constant size_of with class constraint<br>\nC_type, such that</p>\n<blockquote>\n<blockquote>\n<p>class C_byte_type2 = C_type +<br>\n  assumes one_byte_long: \"size_of TYPE('a::C_type) = 1\"</p>\n</blockquote>\n</blockquote>\n<p>fails since inside the locale C_byte and its children 'a always has sort<br>\ntype, not C_type.</p>\n<p>Currently, we cannot even provide a workaround for this, though derived<br>\ndefinitions will be our next step in implementing the class package.</p>\n<p>Note that the current implementation allows \"class\"es to inherit from<br>\n\"axclass\"es, which might provide a (though unsatisfactory) temporary<br>\nsolution.</p>\n<p>Florian<br>\n<a href=\"/user_uploads/14278/d8PaOHBF9J4bZOEWYT86rLod/florian.haftmann.vcf\">florian.haftmann.vcf</a><br>\n<a href=\"/user_uploads/14278/LCcV6Wke2C7RKKIZ57Q3BBtF/signature.asc\">signature.asc</a></p>",
        "id": 294048308,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660818244
    },
    {
        "content": "<p>From: John Matthews &lt;<a href=\"mailto:matthews@galois.com\">matthews@galois.com</a>&gt;<br>\nHi Florian, thanks for putting this on your to-do list. I can work  <br>\naround the issue for now.</p>\n<p>Cheers,<br>\n-john</p>",
        "id": 294048326,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660818250
    },
    {
        "content": "<p>From: John Matthews &lt;<a href=\"mailto:matthews@galois.com\">matthews@galois.com</a>&gt;<br>\nI am trying to use Isabelle's new \"class\" declaration form rather  <br>\nthan the old \"axclass\" form. However, I'm having trouble admitting  <br>\nsubclasses whose axioms contain auxiliary definitions. Below is an  <br>\nexample theory. I'm using Isabelle developer snapshot Isabelle_29- <br>\nJan-2007.</p>\n<p>Thanks,<br>\n-john</p>\n<p>theory \"C_byte_type\"<br>\nimports Main<br>\nbegin</p>\n<p>datatype byte = Byte int</p>\n<p>class C_type =<br>\n   fixes to_bytes   :: \"'a \\&lt;Rightarrow&gt; byte list\"<br>\n   assumes C_type_size_uniform:<br>\n             \"length (to_bytes (x::'a)) = length (to_bytes (y::'a))\"</p>\n<p>definition<br>\n   size_of :: \"'a::C_type itself \\&lt;Rightarrow&gt; nat\" where<br>\n   \"size_of (t::'a::C_type itself) = length (to_bytes (arbitrary::'a))\"</p>\n<p>text {* This class definition is accepted: *}</p>\n<p>class C_byte_type = C_type +<br>\n   assumes one_byte_long: \"length (to_bytes (arbitrary::'a::C_type))  <br>\n= 1\"</p>\n<p>text {* But the next class definition causes this error:</p>\n<p>*** exception THM raised: Type not of sort C_type<br>\n   *** At command \"class\".</p>\n<p>*}<br>\nclass C_byte_type2 = C_type +<br>\n   assumes one_byte_long: \"size_of TYPE('a::C_type) = 1\"</p>\n<p>end</p>",
        "id": 294048485,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660818330
    }
]