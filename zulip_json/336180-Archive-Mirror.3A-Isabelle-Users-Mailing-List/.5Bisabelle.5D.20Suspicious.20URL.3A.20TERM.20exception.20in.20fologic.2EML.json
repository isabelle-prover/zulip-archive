[
    {
        "content": "<p>From: Thomas Sewell &lt;<a href=\"mailto:thomas.sewell@nicta.com.au\">thomas.sewell@nicta.com.au</a>&gt;<br>\nHello Slawomir &amp; Isabelle users.</p>\n<p>I'm sorry I missed this discussion going by. Thanks to Makarius for<br>\nbringing it to my attention.</p>\n<p>The problem can be traced to the way blast_hyp_subst_tac works, and can<br>\nbe triggered like this (in HOL):</p>\n<p>theory Scratch imports main begin</p>\n<p>lemma<br>\n   \"x = y ==&gt; (!!x. True) ==&gt; x : T ==&gt; S &lt;= T ==&gt; T &lt;= R ==&gt; S &lt;= R\"<br>\n   apply blast</p>\n<p>This will happen when blast is called on any goal, in HOL or in ZF,<br>\nwhere the goal must be nontrivial, provable by blast's internal<br>\nstrategy, contain a substitutable equality hypothesis, and contain some<br>\nnon-atomic hypothesis (a meta-forall, meta-implication or meta-equality).</p>\n<p>This has always been the case. What has changed is that auto no longer<br>\nremoves the equality hypothesis itself before calling blast.</p>\n<p>The problem is that blast_hyp_subst_tac just won't work if the<br>\nhypotheses aren't all atomic. The TERM exception comes from the \"map<br>\ndest_Trueprop\", but in any case the implementation won't work with<br>\nmeta-operators either.</p>\n<p>The trivial fix is to extend the \"handle THM _ =&gt; no_tac | EQ_VAR =&gt;<br>\nno_tac\" in blast_hyp_subst_tac to also handle TERM exceptions. This will<br>\ncompletely solve the current problem. I recommend somebody commit this<br>\nin time for the next release, at which point [[hypsubst_thin = true]]<br>\nwill no longer be needed for this auto.</p>\n<p>This leaves the problem that there are three implementations of hypsubst<br>\nin hypsubst.ML, one which doesn't work with Vars and two which don't<br>\nwork with meta-operators. I don't really know what to do about this. It<br>\ndoesn't help that I don't understand what constraints blast really puts<br>\non blast_hyp_subst_tac.</p>\n<p>Cheers,<br>\n     Thomas.</p>\n<hr>\n<p>The information in this e-mail may be confidential and subject to legal professional privilege and/or copyright. National ICT Australia Limited accepts no liability for any damage caused by this email or its attachments.</p>",
        "id": 294323548,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660927759
    }
]