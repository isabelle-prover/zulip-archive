[
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:mail@joachim-breitner.de\">mail@joachim-breitner.de</a>&gt;<br>\nDear List,</p>\n<p>I’m currently in the phase where I make my theories nicely looking, and<br>\nI’m adding text. This means that I’m writing LaTeX code in text {* .. *}<br>\nblocks, and suddenly the automatic completion of abbreviations are very<br>\nannoying: I can’t enter, say \\cite{foo}, without getting ∘te{foo}.</p>\n<p>Since this is (I believe) a common use case I wonder if I am overlooking<br>\nsomething – can I make Isabelle/jEdit be smarter about this?</p>\n<p>Is there maybe a way of entering a \\ that prevents a following auto<br>\ncompletion? I tried “\\\\cite” (which would be a way that I would have<br>\ndiscovered without reading documentation), but that does not work.</p>\n<p>(I guess I can disable auto completion in the options, but that’s 6<br>\nmouse clicks in the midst of a keyboard-only workflow, so I’d consider<br>\nthat a work-around, no better than typing cite C-← \\ C-→).</p>\n<p>Thanks,<br>\nJoachim<br>\n<a href=\"/user_uploads/14278/Ar6NYj97zoENGuSMjMCrtNOW/signature.asc\">signature.asc</a></p>",
        "id": 294274715,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660918379
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Mon, 28 Apr 2014, Joachim Breitner wrote:</p>\n<blockquote>\n<p>I’m currently in the phase where I make my theories nicely looking, and <br>\nI’m adding text. This means that I’m writing LaTeX code in text {* .. *} <br>\nblocks, and suddenly the automatic completion of abbreviations are very <br>\nannoying: I can’t enter, say \\cite{foo}, without getting ∘te{foo}.</p>\n</blockquote>\n<p>In Isabelle2013-2 the completion mechanism still lacks any context, so <br>\nwhat is good behaviour within the term language can easily become bad <br>\nbehaviour in LaTeX source.</p>\n<p>Some weeks ago, I have revisited the whole complex of completion once <br>\nagain, and added a \"language context\" to address the above, but it is so <br>\nsmart that it has other side-effects.  This will still take a few more <br>\nweeks / months to consolidate for Isabelle2014 this summer.</p>\n<blockquote>\n<p>Since this is (I believe) a common use case I wonder if I am overlooking <br>\nsomething – can I make Isabelle/jEdit be smarter about this?</p>\n</blockquote>\n<p>Depends how much you want to invest.  The mechanism reacts on key events <br>\nafter filtering for the ones that insert plain text, ultimately it looks <br>\nat the buffer content independently how that was produce.  So if you can <br>\ninsert text without any critical key event, it will end up in the buffer <br>\nwithout completion.  You can see this with plain C+c to copy from the main <br>\ncliboard register (there are several such registers).  It does not help <br>\nthough, to insert a \\ by special means and then continue typing normally.</p>\n<p>Alternatively, you can undo the accidental completion of \\ci and then <br>\ncontinue typing, although there is an extra selection showing up that <br>\nneeds to be canceled via ESC first.  (I need to check if this is normal <br>\njEdit behaviour, or an accident on the side of Isabelle/jEdit completion.)</p>\n<blockquote>\n<p>I guess I can disable auto completion in the options, but that’s 6 mouse <br>\nclicks in the midst of a keyboard-only workflow, so I’d consider that a <br>\nwork-around, no better than typing cite C-← \\ C-).</p>\n</blockquote>\n<p>It is sufficient to disable the option \"jedit_completion_immediate\". <br>\nThen you still have the popup-TAB mechanism for the term language.</p>\n<p>Further hints on shortening GUI access paths are available on this recent <br>\nthread: <br>\n<a href=\"https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2014-April/msg00144.html\">https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2014-April/msg00144.html</a></p>\n<p>There might be even more possibilities via macros and/or BeanShell <br>\nscripting, but I am myself not an expert of all jEdit features.</p>\n<p>Makarius</p>",
        "id": 294274861,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660918440
    },
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:breitner@kit.edu\">breitner@kit.edu</a>&gt;<br>\nHi,</p>\n<p>a quite horrible workaround is adding</p>\n<p>\\catcode`\\|=0 %</p>\n<p>to your preamble, and then simply write your LaTeX commands with |<br>\ninstead of \\. It will break any real occurrence of | in the code and<br>\nlook really strange, but at least your workflow is uninterrupted. If |<br>\nis not good, other characters might work.</p>\n<p>Greetings,<br>\nJoachim<br>\n<a href=\"/user_uploads/14278/3T9xoS-JdtG0E9GkFJLCstCv/signature.asc\">signature.asc</a></p>",
        "id": 294275020,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660918489
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nLow-level TeX hacking is normally not necessary in the Isabelle document <br>\npreparation system -- we stopped doing that 15 years ago.</p>\n<p>Milner's meta-language is better suited for document programming than <br>\nKnuth's macro-language, i.e. you just make your own document antiquotation <br>\n@{cite NAME} with Isabelle syntax.</p>\n<p>Just do a hypersearch for Thy_Output.antiquotation over all .ML and .thy <br>\nfiles of the Isabelle distribution to get some ideas.<br>\n$ISABELLE_HOME/src/Pure/Thy/rail.ML is a notable example that does <em>not</em> <br>\npretty print formal entities, but emits LaTeX macros directly.</p>\n<p>Makarius</p>",
        "id": 294275060,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660918501
    }
]