[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\n\"Simple\" and \"properly\" are in conflict here.  Raw syntax + translations <br>\nis a global macro mechanism that does not quite fit into the concept of <br>\nlocal theory declarations, and their implicit transformation by morphisms <br>\nthat descrive how to move between different contexts.</p>\n<p>Since raw syntax is totally unchecked, you can make an improper solution <br>\nby some kind of dynamic scoping: produce global syntax that captures <br>\ncertain fixed variables as they occur in a locale, but probably somewhere <br>\nelse.  (Local fixes with mixfix annotations are marked as \"\\&lt;^fixed&gt;xxx\" <br>\nin the syntax layer.)</p>\n<p>Another way is to use \"indexed syntax\" as can be seen in some theories in <br>\nsrc/HOL/Algebra (search for \\&lt;index&gt; symbols).  It would require some <br>\nadditional tinkering to make such context dependent notation work with <br>\nfree-form syntax, not just plain mixfix annotations.</p>\n<p>A fully proper solution should be also possible, but requires further <br>\nthought.  I am trying myself for years to make record and datatype <br>\ndefinitions ready for local theory contexts, together with their specific <br>\nsyntax.  It will happen at some point in the future ...</p>\n<p>BTW, syntax constants as \"MyNotation\" above are usually called like <br>\n\"_my_notation\".  The initial \"_\" prevents accidental overlap with <br>\nnon-syntax things, while still allowing plain prefix application syntax in <br>\ntranslations patterns (independently of the concrete notation).  In <br>\ngeneral, contemporary Isabelle sources are camel-case free.</p>\n<p>Makarius</p>",
        "id": 294151500,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660849462
    },
    {
        "content": "<p>From: Stephan van Staden &lt;<a href=\"mailto:Stephan.vanStaden@inf.ethz.ch\">Stephan.vanStaden@inf.ethz.ch</a>&gt;<br>\nDear all,</p>\n<p>I'm working in a locale where I have an associative and commutative <br>\noperator + with unit 0. I want an alternative notation for it - an <br>\noperator, say {|_|}, with arbitrary (but finite) arity.</p>\n<p>Without Isabelle I would write:</p>\n<p>{| n1, n2, ..., nk |}   =def   n1 + n2 + ... + nk</p>\n<p>Then I want to prove/use theorems such as {|n1, n2|} + n3 = {|n1, n2, <br>\nn3|}, etc.</p>\n<p>In Isabelle, I've tried to write:</p>\n<p>syntax<br>\n   \"MyNotation\" :: \"args =&gt; 'a\"  (\"{|(_)|}\")<br>\ntranslations<br>\n   \"{|x, xs|}\" == \"x + {|xs|}\"<br>\n   \"{| |}\" == \"0\"</p>\n<p>However, it gives the error: 'Illegal application of command \"syntax\" in <br>\nlocal theory mode'.</p>\n<p>Is there a simple way to do it properly in a locale? Thanks in advance <br>\nfor help and pointers!</p>\n<p>Stephan</p>",
        "id": 294153177,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660850092
    }
]