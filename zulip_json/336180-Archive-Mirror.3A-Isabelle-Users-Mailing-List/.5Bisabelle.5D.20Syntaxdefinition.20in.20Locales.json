[
    {
        "content": "<p>From: René Neumann &lt;<a href=\"mailto:lists@necoro.eu\">lists@necoro.eu</a>&gt;<br>\nDear list-members,</p>\n<p>I have the following setting (in Isabelle2011):</p>\n<p>definition foo where<br>\n\"foo a b G = id\"</p>\n<p>locale spam =<br>\n   fixes G :: \"'a\"<br>\nbegin</p>\n<p>abbreviation f (\"_ \\&lt;rightarrow&gt;\\&lt;star&gt; _\" [100,100] 40)<br>\n  where \"f a b == foo a b G\"</p>\n<p>abbreviation test (\"_ \\&lt;star&gt; _\" [100,100] 40)<br>\n  where \"test a b == a &gt; b\"</p>\n<p>end</p>\n<p>locale eggs =<br>\n...</p>\n<p>sublocale eggs &lt;= spam \"some_rather_complex_instantiation\"</p>\n<p>My problem now is, that my new syntax of f is available in the locale<br>\nspam, but not in eggs (after the sublocale proof), while the<br>\nabbreviation itself is.</p>\n<p>To make things even more tricky: The new syntax defined for 'test' works<br>\njust fine in spam and in eggs. It seems like any definition containing G<br>\njust kills the syntax interpretation in sublocales.</p>\n<p>Is this a bug, a feature or something that is wrong to try in the first<br>\nplace? My reason is, that I wanted to hide the<br>\n'some_rather_complex_instantiation' throughout eggs and its sublocales<br>\nwhenever I work with foo. (I know, that I could just use the plain<br>\nabbreviation without the syntax, but well ... :))</p>\n<p>(Btw: Using 'definition' instead of 'abbreviation' does not change<br>\nanything).</p>\n<p>Thanks,<br>\nRené</p>",
        "id": 294144415,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660846985
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@kit.edu\">andreas.lochbihler@kit.edu</a>&gt;<br>\nDear René,</p>\n<p>this is a \"feature\" of the locale mechanism that is documented in the locale <br>\ntutorial, see Section 6, immediately before Section 6.1 starts, and has been <br>\nmentioned in</p>\n<p><a href=\"https://lists.cam.ac.uk/mailman/htdig/cl-isabelle-users/2010-February/msg00058.html\">https://lists.cam.ac.uk/mailman/htdig/cl-isabelle-users/2010-February/msg00058.html</a></p>\n<p>Syntax declarations are disabled when inherited through a non-identical morphism <br>\nas in your case. Test works because it only involves locale parameters that are <br>\nat most renamed -- in fact, it does not involve any parameter.</p>\n<p>As you will notice, not only input syntax is lost, but also the pretty printer <br>\nno longer collapses the abbreviation:</p>\n<p>term \"f\" prints as \"%a b. foo a b some_rather_complex_instantiation\"</p>\n<p>However, you can easily reinstall the syntax translation for f as follows, but <br>\nthis will not give you the print translation.</p>\n<p>notation (in eggs) f (\"_ \\&lt;rightarrow&gt;\\&lt;star&gt; _\" [100,100] 40)</p>\n<p>If you also want to print \"a \\&lt;rightarrow&gt;\\&lt;star&gt; b\" instead of \"foo a b <br>\nsome_rather_complex_instantiation\", you have to manually install a translation. <br>\nYou can achieve this most easily by introducing another abbreviation:</p>\n<p>abbreviation (in eggs)<br>\n   \"f'\" (\"_ \\&lt;rightarrow&gt;\\&lt;star&gt; _\" [100,100] 40)<br>\nwhere \"f' a b == foo a b some_rather_complex_instantiation\"</p>\n<p>Hope this helps,<br>\nAndreas</p>",
        "id": 294144476,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660847003
    }
]