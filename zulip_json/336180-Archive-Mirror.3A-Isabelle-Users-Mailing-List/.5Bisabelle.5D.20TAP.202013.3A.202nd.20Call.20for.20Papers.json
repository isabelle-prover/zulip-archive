[
    {
        "content": "<p>From: \"Achim D. Brucker\" &lt;<a href=\"mailto:brucker@spamfence.net\">brucker@spamfence.net</a>&gt;<br>\n(Apologies if you receive this announcement multiple times.)</p>\n<hr>\n<p><strong>*                                              </strong>*<br>\n<strong>*  TAP 2013                                    </strong>*<br>\n<strong>*                                              </strong>*<br>\n<strong>*  Abstract submission: January 25, 2013       </strong>*<br>\n<strong>*  Paper submission:    February 1, 2013       </strong>*</p>\n<hr>\n<p><strong>*  TAP 2013 solicits both full papers and      </strong>*<br>\n<strong>*  (industrial) experience/tool papers         </strong>*<br>\n<strong>*  in combining proofs and (security) testing  </strong>*</p>\n<hr>\n<p>CALL FOR PAPERS</p>\n<p>7th INTERNATIONAL CONFERENCE ON TESTS AND PROOFS (TAP 2013)<br>\n<a href=\"http://www.spacios.eu/TAP2013\">http://www.spacios.eu/TAP2013</a></p>\n<p>Budapest, Hungary, June 18-19, 2013</p>\n<p>The TAP conference is devoted to the synergy of proofs and tests, to the<br>\napplication of techniques from both sides and their combination for the<br>\nadvancement of software quality.<br>\nTesting and proving seem to be contradictory techniques: once you have<br>\nproved your program to be correct then additional testing seems<br>\npointless; on the other hand, when such a proof in not feasible, then<br>\ntesting the program seems to be the only option. This view has dominated<br>\nthe research community since the dawn of computer science, and has<br>\nresulted in distinct communities pursuing the seemingly orthogonal<br>\nresearch areas.</p>\n<p>However, the development of both approaches has lead to the discovery of<br>\ncommon issues and to the realization of potential synergy. Perhaps, use<br>\nof model checking in testing was one of the first signs that a<br>\ncounterexample to a proof may be interpreted as a test case. Recent<br>\nbreakthroughs in deductive techniques such as satisfiability modulo<br>\ntheories, abstract interpretation, and interactive theorem proving, have<br>\npaved the way for new and practically effective methods of powering<br>\ntesting techniques. Moreover, since formal, proof-based verification is<br>\ncostly, testing invariants and background theories can be helpful to<br>\ndetect errors early and to improve cost effectiveness. Summing up, in<br>\nthe past few years an increasing number of research efforts have<br>\nencountered the need for combining proofs and tests, dropping earlier<br>\ndogmatic views of incompatibility and taking instead the best of what<br>\neach of these software engineering domains has to offer.</p>\n<p>The TAP conference aims to bring together researchers and practitioners<br>\nworking in the converging fields of testing and proving, and will offer<br>\na generous allocation of papers, panels and informal discussions.</p>\n<p>Topics of interest cover theory definitions, tool constructions and<br>\nexperimentations, and include (other topics related to TAP are welcome):</p>\n<ul>\n<li>\n<p>Bridging the gap between concrete and symbolic techniques, e.g. using<br>\n  proof search in satisfiability modulo theories solvers to enhance<br>\n  various testing techniques</p>\n</li>\n<li>\n<p>Transfer of concepts from testing to proving (e.g., coverage criteria)<br>\n  and from proving to testing</p>\n</li>\n<li>\n<p>Program proving with the aid of testing techniques</p>\n</li>\n<li>\n<p>New problematics in automated reasoning emerging from specificities of<br>\n  test generation</p>\n</li>\n<li>\n<p>Verification and testing techniques combining proofs and tests</p>\n</li>\n<li>\n<p>Generation of test data, oracles, or preambles by deductive techniques<br>\n  such as: theorem proving, model checking, symbolic execution,<br>\n  constraint logic programming</p>\n</li>\n<li>\n<p>Model-based testing and verification</p>\n</li>\n<li>Generation of specifications by deduction</li>\n<li>Automatic bug finding</li>\n<li>Debugging of programs combining static and dynamic analysis</li>\n<li>Formal frameworks</li>\n<li>Tool descriptions and experience reports</li>\n<li>Case studies combining tests and proofs</li>\n<li>Domain specific applications of testing and proving to new application<br>\n  domains such as validating security protocols, vulnerability detection<br>\n  of programs, security</li>\n</ul>\n<p>Important Dates:<br>\n================<br>\nAbstract submission:   January 25, 2013<br>\nPaper submission:      February 1, 2013<br>\nNotification:          March 3, 2013<br>\nCamera ready version:  April 5, 2013<br>\nTAP conference:        June 17-21, 2013</p>\n<p>Program Chairs:<br>\n===============<br>\nMargus Veanes (Microsoft Research, USA)<br>\nLuca Vigano` (University of Verona, Italy)</p>\n<p>Program Committee:<br>\n==================<br>\nPaul Ammann<br>\nDirk Beyer<br>\nAchim D. Brucker<br>\nRobert Clarisò<br>\nMarco Comini<br>\nCatherine Dubois<br>\nGordon Fraser<br>\nAngelo Gargantini<br>\nChristoph Gladisch<br>\nMartin Gogolla<br>\nArnaud Gotlieb<br>\nWolfgang Grieskamp<br>\nReiner Hähnle<br>\nBart Jacobs<br>\nThiérry Jeron<br>\nJacques Julliand<br>\nGregory Kapfhammer<br>\nNikolai Kosmatov<br>\nVictor Kuliamin<br>\nMichael Leuschel<br>\nKarl Meinke<br>\nAlexandre Petrenko<br>\nHolger Schlingloff<br>\nT.H. Tse<br>\nMargus Veanes (co-chair)<br>\nLuca Viganò (co-chair)<br>\nBurkhart Wolff<br>\nFatiha Zaidi</p>\n<p>Submission:<br>\n===========<br>\nPlease submit your papers via easychair<br>\n<a href=\"https://www.easychair.org/conferences/?conf=tap2013\">https://www.easychair.org/conferences/?conf=tap2013</a></p>\n<p>TAP 2013 will<br>\naccept two types of papers:</p>\n<ul>\n<li>\n<p>Research papers: full papers with at most 16 pages in LNCS format<br>\n  (pdf), which have to be original, unpublished and not submitted<br>\n  elsewhere.</p>\n</li>\n<li>\n<p>Short contributions: work in progress, (industrial) experience<br>\n  reports or tool demonstrations, position statements; an extended<br>\n  abstract with at most 6 pages in LNCS format (pdf) is expected.</p>\n</li>\n</ul>\n<p>Subject to final approval by Springer, accepted papers will be published<br>\nin the Springer LNCS series and will be available at the conference.</p>\n<p>The contents of previous TAP proceedings is available at:<br>\n<a href=\"http://www.informatik.uni-trier.de/~ley/db/conf/tap/\">http://www.informatik.uni-trier.de/~ley/db/conf/tap/</a></p>",
        "id": 294229298,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901610
    }
]