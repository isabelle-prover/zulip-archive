[
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@gmail.com\">jasmin.blanchette@gmail.com</a>&gt;</p>\n<hr>\n<p>*</p>\n<ul>\n<li>9th International Conference</li>\n<li>on</li>\n<li>\n<p>TESTS AND PROOFS (TAP 2015)\n*</p>\n</li>\n<li>\n<p><a href=\"http://tap2015.in.tum.de/\">http://tap2015.in.tum.de/</a>\n*</p>\n</li>\n<li>\n<p>Part of STAF 2015, L'Aquila, Italy, July 20-24, 2015</p>\n</li>\n<li><a href=\"http://www.disim.univaq.it/staf2015/\">http://www.disim.univaq.it/staf2015/</a>\n*</li>\n</ul>\n<hr>\n<p>*</p>\n<ul>\n<li>\n<p>Call for Papers\n*</p>\n</li>\n<li>\n<p>Abstract submission: February 13, 2015</p>\n</li>\n<li>Paper submission:    February 20, 2015\n*</li>\n</ul>\n<hr>\n<p>Scope<br>\n=====</p>\n<p>The TAP conference is devoted to the synergy of proofs and tests, to<br>\nthe application of techniques from both sides and their combination<br>\nfor the advancement of software quality.</p>\n<p>Testing and proving seem to be orthogonal techniques: Once a program<br>\nhas been proven to be correct then additional testing seems pointless;<br>\nhowever, when such a proof in not feasible, then testing the program<br>\nseems to be the only option. This view has dominated the research<br>\ncommunity for a long time, and has resulted in distinct communities<br>\npursuing the different research areas.</p>\n<p>The development of both approaches has led to the discovery of common<br>\nissues and to the realization of potential synergy. Perhaps the use of<br>\nmodel checking in testing was one of the first signs that a<br>\ncounterexample to a proof may be interpreted as a test case. Recent<br>\nbreakthroughs in deductive techniques such as satisfiability modulo<br>\ntheories, abstract interpretation, and interactive theorem proving<br>\nhave paved the way for new and practically effective methods of<br>\npowering testing techniques. Moreover, since formal, proof-based<br>\nverification is costly, testing invariants and background theories can<br>\nbe helpful to detect errors early and to improve cost effectiveness.<br>\nSumming up, in the past few years an increasing number of research<br>\nefforts have encountered the need for combining proofs and tests,<br>\ndropping earlier dogmatic views of incompatibility and taking instead<br>\nthe best of what each of these software engineering domains has to<br>\noffer.</p>\n<p>The TAP conference aims to bring together researchers and<br>\npractitioners working in the converging fields of testing and proving<br>\nby offering a generous forum for the presentation of ongoing research,<br>\nfor tutorials on established technologies and for informal<br>\ndiscussions.</p>\n<p>Topics of Interest<br>\n==================</p>\n<p>Topics of interest cover theory definitions, tool constructions and<br>\nexperimentations, and include among others:</p>\n<ul>\n<li>\n<p>Bridging the gap between concrete and symbolic techniques, e.g.<br>\n using proof search in satisfiability modulo theories solvers to<br>\n enhance various testing techniques</p>\n</li>\n<li>\n<p>Transfer of concepts from testing to proving (e.g., coverage<br>\n criteria) and from proving to testing</p>\n</li>\n<li>\n<p>Program proving with the aid of testing techniques</p>\n</li>\n<li>Verification and testing techniques combining proofs and tests</li>\n<li>\n<p>Generation of test data, oracles, or preambles by deductive<br>\n techniques such as: theorem proving, model checking, symbolic<br>\n execution, constraint logic programming</p>\n</li>\n<li>\n<p>Model-based testing and verification</p>\n</li>\n<li>Generation of specifications by deduction</li>\n<li>Automatic bug finding</li>\n<li>Debugging of programs combining static and dynamic analysis</li>\n<li>Case studies combining tests and proofs</li>\n<li>\n<p>Domain specific applications of testing and proving to new<br>\n application domains such as validating security protocols,<br>\n vulnerability detection of programs, security</p>\n</li>\n<li>\n<p>Testing of verification environments and reasoning engines like<br>\n solvers and theorem provers</p>\n</li>\n<li>\n<p>New approaches such as crowd-sourcing and serious games to<br>\n infer intended semantics and assess correctness</p>\n</li>\n<li>\n<p>Formal frameworks</p>\n</li>\n<li>Tool descriptions and experience reports</li>\n</ul>\n<p>Important Dates:<br>\n================</p>\n<p>Abstract submission:     February 13, 2015<br>\nPaper submission:         February 20, 2015<br>\nNotification:                   April 13, 2015<br>\nCamera-ready version: May 3, 2015<br>\nSTAF conference:          July 20-24, 2015</p>\n<p>Program Co-Chairs:<br>\n===============</p>\n<p>Jasmin C. Blanchette (TU Muenchen, Inria)<br>\nNikolai Kosmatov (CEA LIST)</p>\n<p>Program Committee:<br>\n==================</p>\n<p>Bernhard K. Aichernig<br>\nDirk Beyer<br>\nNikolaj Bjorner<br>\nJasmin C. Blanchette<br>\nAchim D. Brucker<br>\nKoen Claessen<br>\nRobert Clariso<br>\nMarco Comini<br>\nCatherine Dubois<br>\nJuhan Ernits<br>\nGordon Fraser<br>\nAngelo Gargantini<br>\nChristoph Gladisch<br>\nMartin Gogolla<br>\nArnaud Gotlieb<br>\nReiner Haehnle<br>\nBart Jacobs<br>\nThierry Jeron<br>\nJacques Julliand<br>\nGregory Kapfhammer<br>\nNikolai Kosmatov<br>\nVictor Kuliamin<br>\nPanagiotis Manolios<br>\nKarl Meinke<br>\nAlexandre Petrenko<br>\nAndrew Reynolds<br>\nMartina Seidl<br>\nNikolai Tillmann<br>\nT.H. Tse<br>\nMargus Veanes<br>\nLuca Vigano<br>\nBurkhart Wolff<br>\nFatiha Zaidi</p>\n<p>Submission:<br>\n===========</p>\n<p>Please submit your papers via EasyChair:</p>\n<p><a href=\"https://www.easychair.org/conferences/?conf=tap2015\">https://www.easychair.org/conferences/?conf=tap2015</a></p>\n<p>TAP 2015 will accept three kinds of submissions:</p>\n<ul>\n<li>\n<p>Regular research papers: full papers with at most 16 pages in LNCS<br>\n format (PDF), which have to be original, unpublished and not<br>\n submitted elsewhere. Research papers should clearly describe the<br>\n addressed problem, the relevant state-of-the-art, the<br>\n scientifically-founded solution, and the benefits of the presented<br>\n approach.</p>\n</li>\n<li>\n<p>Short contributions: work in progress, (industrial) experience<br>\n reports or tool demonstrations, position statements; an extended<br>\n abstract with at most 6 pages in LNCS format (PDF) is expected. The<br>\n same evaluation criteria apply to short papers as to regular<br>\n research papers. Short papers will be reviewed to the same standards<br>\n of quality as regular research papers.</p>\n</li>\n<li>\n<p>Tutorial proposals: TAP 2015 further invites one-hour tutorial<br>\n presentations surveying the state-of-the-art of any research field<br>\n related to the topics of TAP. Tutorial proposals shall have a<br>\n maximum length of 3 pages in LNCS format (PDF) and provide<br>\n information about the content, a short outline, information about<br>\n the speakers and previous related tutorials given by the speakers<br>\n (if any).</p>\n</li>\n</ul>\n<p>Accepted full and short papers will be published in the Springer LNCS<br>\nseries and will be available at the conference. Accepted tutorials<br>\nwill be assigned a slot of 60 minutes during the conference.</p>\n<p>The content of last year's proceedings is available at</p>\n<p><a href=\"http://www.informatik.uni-trier.de/~ley/db/conf/tap/tap2014.html\">http://www.informatik.uni-trier.de/~ley/db/conf/tap/tap2014.html</a></p>",
        "id": 294325553,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660928424
    }
]