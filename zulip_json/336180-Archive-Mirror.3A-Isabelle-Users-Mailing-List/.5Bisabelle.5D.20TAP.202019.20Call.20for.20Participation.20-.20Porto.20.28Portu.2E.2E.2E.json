[
    {
        "content": "<p>From: Chantal Keller &lt;<a href=\"mailto:chantal.keller@wanadoo.fr\">chantal.keller@wanadoo.fr</a>&gt;<br>\n[Please accept our apologies for duplicates.]</p>\n<p>=====================================================<br>\nCall for Participation</p>\n<p>13th International Conference on Tests and Proofs (TAP 2019)</p>\n<p>Porto (Portugal), October 9-11, 2019</p>\n<p><a href=\"https://tap.sosy-lab.org/2019/\">https://tap.sosy-lab.org/2019/</a></p>\n<p>Part of the 3rd World Congress on Formal Methods</p>\n<p>=====================================================</p>\n<p>About TAP</p>\n<hr>\n<p>The TAP conference promotes research in verification and formal<br>\nmethods that targets the interplay of proofs and testing:<br>\nthe advancement of techniques of each kind and their combination,<br>\nwith the ultimate goal of improving software and system dependability.</p>\n<p>Research in verification has recently seen a steady convergence of<br>\nheterogeneous techniques and a synergy between the traditionally<br>\ndistinct areas of testing (and dynamic analysis) and of proving (and<br>\nstatic analysis).  Formal techniques for counter-example generation<br>\nbased on, for example, symbolic execution, SAT/SMT-solving or<br>\nmodel checking, furnish evidence for the potential of a combination of<br>\ntest and proof.  The combination of predicate abstraction with testing-like<br>\ntechniques based on exhaustive enumeration opens the perspective<br>\nfor novel techniques of proving correctness.  On the practical side,<br>\ntesting offers cost-effective debugging techniques of specifications<br>\nor crucial parts of program proofs (such as invariants).  Last but not<br>\nleast, testing is indispensable when it comes to the validation of the<br>\nunderlying assumptions of complex system models involving<br>\nhardware or system environments.  Over the years, there is<br>\ngrowing acceptance in research communities that testing and proving<br>\nare complementary rather than mutually exclusive techniques.</p>\n<p>The TAP conference aims to promote research in the intersection of<br>\ntesting and proving by bringing together researchers and practitioners<br>\nfrom both areas of verification.</p>\n<p>Keynote</p>\n<hr>\n<p>\"Extracting Unverified Program Parts from Software Verification Runs\"<br>\nby Heike Wehrheim (Paderborn University, Germany)</p>\n<p>Invited tutorial</p>\n<hr>\n<p>\"RoboStar technology - Testing in Robotics Using Process Algebra\"<br>\nby Ana Cavalcanti (University of York, UK)</p>\n<p>Contributed papers</p>\n<hr>\n<p>See the conference program at: <a href=\"https://tap.sosy-lab.org/2019/program.php\">https://tap.sosy-lab.org/2019/program.php</a></p>\n<p>Registration</p>\n<hr>\n<p>Registration is shared for all FM events:<br>\n<a href=\"http://formalmethods2019.inesctec.pt/?page_id=2363\">http://formalmethods2019.inesctec.pt/?page_id=2363</a></p>\n<p>Early registration is until September 10, 2019.</p>\n<p>Attending</p>\n<hr>\n<p>See the FM webpage at: <a href=\"http://formalmethods2019.inesctec.pt/?page_id=140\">http://formalmethods2019.inesctec.pt/?page_id=140</a></p>\n<p>Contact</p>\n<hr>\n<p>mailto:<a href=\"mailto:tap2019@easychair.org\">tap2019@easychair.org</a></p>",
        "id": 294761354,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661199729
    }
]