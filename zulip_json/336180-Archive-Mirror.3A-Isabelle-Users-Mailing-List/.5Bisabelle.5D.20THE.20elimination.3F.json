[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt;<br>\nDavid Streader wrote:</p>\n<blockquote>\n<p>Hi<br>\n   I need to use definite descriptions  and can introduce THE using <br>\nthe_equality. But I have found no way to eliminate THE</p>\n<p>When stuck  at sorry I am faced with<br>\nusing this:<br>\n (THE re. (nam, re) : Ops adt) = rel</p>\n<p>goal (1 subgoal):<br>\n1. (nam, rel) : Ops adt</p>\n<p>In order to show anything about THE, you need a lemma like:<br>\n  lemma UNIQUE: \"\\&lt;exists&gt;!r. (n,r)\\&lt;in&gt;Ops x\" sorry</p>\n</blockquote>\n<p>i.e. stating that there is exactly one element associated with each name.</p>\n<p>then, you can use theI', e.g. :<br>\nfrom as show  \"(nam, rel) \\&lt;in&gt; Ops adt\" using UNIQUE[THEN theI'] by fast</p>\n<p>note that you cannot derive your statement just from the fact that (THE <br>\nre. (nam, re) \\&lt;in&gt; Ops adt) = rel, I think that is related to the fact <br>\nthat Isabelle has no notion of partial functions or undefined expressions.</p>\n<p>regards,<br>\n  Peter</p>\n<blockquote>\n<p>My intuitions tell me that this should be obvious but nothing works.<br>\nWhat Have I missed?</p>\n<p>david</p>\n<p>lemma \"\\&lt;forall&gt; nam rel. ((OpsF  nam) =rel) = ((nam, rel)\\&lt;in&gt; <br>\n(adtt.Ops adt))\"<br>\nproof (rule allI)+ fix nam rel  show \"(OpsF nam = rel) = ((nam, rel) <br>\n\\&lt;in&gt; Ops adt)\"<br>\n  unfolding  OpsF_def<br>\n  proof<br>\n   assume as: \"(THE re. (nam, re) \\&lt;in&gt; Ops adt) = rel\"  from as<br>\n   show \"(nam, rel) \\&lt;in&gt; Ops adt\"    sorry</p>\n<p>next<br>\n   assume sa: \"(nam, rel) \\&lt;in&gt; Ops adt\" from sa ropsfun [where a=nam <br>\nand relx=rel]<br>\n   have \"\\&lt;And&gt; rely. (nam, rely) \\&lt;in&gt; Ops adt \\&lt;Longrightarrow&gt; rely <br>\n= rel\"  by simp<br>\n   with sa show \"(THE rel. (nam, rel) \\&lt;in&gt; Ops adt) = rel\"    apply <br>\n(rule  the_equality [where a=rel  and P=\"\\&lt;lambda&gt; rel.(nam, rel) <br>\n\\&lt;in&gt; Ops adt \"])<br>\n   by auto<br>\n  qed<br>\nqed</p>\n</blockquote>",
        "id": 294060316,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660823384
    },
    {
        "content": "<p>From: Tjark Weber &lt;<a href=\"mailto:tjark.weber@gmx.de\">tjark.weber@gmx.de</a>&gt;<br>\nIndeed.  Think about the case where  \"(nam, re) : Ops adt\"  is false for <em>any</em> <br>\nchoice of \"re\".  \"THE re. (nam, re) : Ops adt\"  will be defined regardless, <br>\nbut you won't be able to prove much about it.  In particular,<br>\n  \"(nam, (THE re. (nam, re) : Ops adt)) : Ops adt\"<br>\nwill of course not hold.</p>\n<p>Tjark</p>",
        "id": 294060331,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660823393
    }
]