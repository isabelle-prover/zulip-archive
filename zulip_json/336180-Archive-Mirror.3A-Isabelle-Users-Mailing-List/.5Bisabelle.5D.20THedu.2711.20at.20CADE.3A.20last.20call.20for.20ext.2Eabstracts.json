[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;</p>\n<hr>\n<p>LAST CALL FOR EXTENDED ABSTRACTS</p>\n<hr>\n<p>THedu'11<br>\n                   CTP components for educational software<br>\n                   =======================================<br>\n                      (CTP -- Computer Theorem Proving)<br>\n<a href=\"http://www.uc.pt/en/congressos/thedu\">http://www.uc.pt/en/congressos/thedu</a></p>\n<p>Workshop at CADE-23,<br>\n             23nd International Conference on Automated Deduction<br>\n                   Wroclaw, Poland, July 31- August 5, 2011<br>\n<a href=\"http://cade23.ii.uni.wroc.pl/\">http://cade23.ii.uni.wroc.pl/</a></p>\n<hr>\n<p>Important Dates</p>\n<hr>\n<p>* Extended Abstracts/Demo proposals 29 Apr 2011 (PDF, easychair [2])<br>\n     * Author Notification:               3 Jun 2011<br>\n     * Worshop Day:                      31 Jul 2011<br>\n     * Full papers (post-proceedings):   27 Aug 2011 (LaTeX,easychair[2])</p>\n<p>THedu'11 Scope</p>\n<hr>\n<p>This workshop intends to gather the research communities for Computer Theorem <br>\nproving (CTP), Automated Theorem Proving (ATP),  Interactive Theorem Proving <br>\n(ITP) as well as for Computer Algebra Systems (CAS) and Dynamic Geometry <br>\nSystems (DGS).<br>\nThe goal of this union is to combine and focus systems of these areas and to <br>\nenhance existing educational software as well as studying the design of the <br>\nnext generation of mechanised mathematics assistants (MMA). Elements for <br>\nnext-generation MMA's include:</p>\n<p>* Declarative Languages for Problem Solution: education in applied sciences <br>\nand in engineering is mainly concerned with problems, which are understood as <br>\noperations on elementary objects to be transformed to an object representing a <br>\nproblem solution. Preconditions and postconditions of these operations can be <br>\nused to describe the possible steps in the problem space; thus, ATP-systems can <br>\nbe used to check if an operation sequence given by the user does actually <br>\npresent a problem solution. Such \"Problem Solution Languages\" encompass <br>\ndeclarative proof languages like Isabelle/Isar or Coq's Mathematical Proof <br>\nLanguage, but also more specialized forms such as, for example, geometric <br>\nproblem solution languages that express a proof argument in Euclidean Geometry <br>\nor languages for graph theory.</p>\n<p>* Consistent Mathematical Content Representation:  libraries of existing <br>\nITP-Systems, in particular those following the LCF-prover paradigm, usually <br>\nprovide logically coherent and human readable knowledge. In the leading <br>\nprovers, mathematical knowledge is covered to an extent beyond most courses in <br>\napplied sciences. However, the potential of this mechanised knowledge for <br>\neducation is clearly not yet recognised adequately: renewed pedagogy calls for <br>\nenquiry-based learning from concrete to abstract --- and the knowledge's <br>\nlogical coherence supports such learning: for instance, the formula 2.pi <br>\ndepends on the definition of reals and of multiplication; close to these <br>\ndefinitions are the laws like commutativity etc. Clearly, the complexity of the <br>\nknowledge's traceable interrelations poses a challenge to usability design.</p>\n<p>* User-Guidance in Stepwise Problem Solving: Such guidance is indispensable <br>\nfor independent learning, but costly to implement so far, because so many <br>\nspecial cases need to be coded by hand. However, CTP technology makes automated <br>\ngeneration of user-guidance reachable: declarative languages as mentioned <br>\nabove, novel programming languages combining computation and deduction, methods <br>\nfor automated construction with ruler and compass from specifications, etc --- <br>\nall these methods 'know how to solve a problem'; so, using the methods' <br>\nknowledge to generate user-guidance mechanically is an appealing challenge for <br>\nATP and ITP, and probably for compiler construction!</p>\n<p>In principle, mathematical software can be conceived as models of mathematics: <br>\nThe challenge addressed by this workshop is to provide appealing models for <br>\nMMAs which are interactive and which explain themselves such that interested <br>\nstudents can independently learn by inquiry and experimentation.</p>\n<p>Program Chairs</p>\n<hr>\n<p>Ralph-Johan Back, Abo University, Turku, Finland<br>\n     Pedro Quaresma, University of Coimbra, Portugal</p>\n<p>Program Committee<br>\n     Francisco Botana, University of Vigo at Pontevedra, Spain<br>\n     Florian Haftmann, Munich University of Technology, Germany<br>\n     Predrag Janicic, University of Belgrade, Serbia<br>\n     Cezary Kaliszyk, University of Tsukuba, Japan<br>\n     Julien Narboux, University of Strasbourg, France<br>\n     Walther Neuper, Graz University of Technology, Austria<br>\n     Wolfgang Schreiner, Johannes Kepler University, Linz, Austria<br>\n     Laurent Th√©ry, Sophia Antipolis, INRIA, France<br>\n     Makarius Wenzel, University Paris-Sud, France<br>\n     Burkhart Wolff, University Paris-Sud, France</p>\n<p>Submission</p>\n<hr>\n<p>THedu'11 seeks papers and demos presenting original unpublished work which is <br>\nnot been submitted for publication elsewhere.</p>\n<p>Both, papers and demos, are submitted as extended abstracts first (29 Apr <br>\n2011), which must not exceed five pages. The abstract should be new material. <br>\nDemos should be accompanied by links to demos/downloads and [existing] system <br>\ndescriptions. Availability of such accompanying material will be a strong <br>\nprerequisite for acceptance.</p>\n<p>The authors of the extended abstracts and system descriptions should submit to <br>\neasychair [2] in PDF format generated by EPTCS LaTeX style [3] . Selected <br>\nextended abstracts and system descriptions will appear in CISUC Technical <br>\nReport series (ISSN 0874-338X, [1]).</p>\n<p>At least one author of each accepted paper/demo is expected to attend THedu'11 <br>\nand to present her or his paper/demo, and the extended abstracts will be made <br>\navailable online.</p>\n<p>After presentation at the conference selected authors will be invited to submit <br>\na substantially revised version, extended to 10-14 pages, for publication by <br>\nthe Electronic Proceedings in Theoretical Computer Science (EPTCS). <br>\nPapers/system descriptions will be reviewed by blind peer review and evaluated <br>\nby three referees with respect to relevance, clarity, quality, originality, and <br>\nimpact.</p>\n<p>Revised versions are submitted in LaTeX according to the EPTCS style guidelines <br>\n[3] via easychair [2].</p>\n<p>[1] <a href=\"http://www.uc.pt/en/fctuc/ID/cisuc/RecentPublications/Techreports/\">http://www.uc.pt/en/fctuc/ID/cisuc/RecentPublications/Techreports/</a><br>\n[2] <a href=\"http://www.easychair.org/conferences/?conf=thedu11\">http://www.easychair.org/conferences/?conf=thedu11</a><br>\n[3] <a href=\"http://www.cse.unsw.edu.au/%7Ervg/EPTCS/eptcsstyle.zip\">http://www.cse.unsw.edu.au/%7Ervg/EPTCS/eptcsstyle.zip</a></p>",
        "id": 294135475,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660844189
    }
]