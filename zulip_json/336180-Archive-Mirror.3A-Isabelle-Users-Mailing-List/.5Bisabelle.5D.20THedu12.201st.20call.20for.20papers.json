[
    {
        "content": "<p>From: Walther Neuper &lt;<a href=\"mailto:wneuper@ist.tugraz.at\">wneuper@ist.tugraz.at</a>&gt;<br>\nWith apologies for multiple postings !</p>\n<hr>\n<p>CALL FOR PAPERS</p>\n<hr>\n<p>THedu'12<br>\n                    TP components for educational software<br>\n                                 11 July 2012<br>\n<a href=\"http://www.uc.pt/en/congressos/thedu\">http://www.uc.pt/en/congressos/thedu</a></p>\n<p>Workshop at CICM 2012<br>\n                  Conferences on Intelligent Computer Mathematics<br>\n                                9-14. July 2012<br>\n                     Jacobs University, Bremen, Germany<br>\n<a href=\"http://www.informatik.uni-bremen.de/cicm2012/cicm.php\">http://www.informatik.uni-bremen.de/cicm2012/cicm.php</a></p>\n<hr>\n<p>THedu'12 Scope</p>\n<hr>\n<p>This workshop intends to gather the research communities for computer<br>\nTheorem proving (TP), Automated Theorem Proving (ATP), Interactive<br>\nTheorem Proving (ITP) as well as for Computer Algebra Systems (CAS)<br>\nand Dynamic Geometry Systems (DGS). The workshop tries to combine and<br>\nfocus systems of these areas to enhance existing educational software<br>\nas well as studying the design of the next generation of mechanised<br>\nmathematics assistants (MMA). Elements for next-generation MMA's<br>\ninclude:</p>\n<p>* Declarative Languages for Problem Solution: education in applied<br>\n      sciences and in engineering is mainly concerned with problems,<br>\n      which involve operations on elementary objects to be transformed<br>\n      to an object representing a problem solution. Preconditions and<br>\n      postconditions of these operations can be used to describe the<br>\n      possible steps in the problem space; thus, ATP-systems can be used<br>\n      to check if an operation sequence given by the user does actually<br>\n      present a problem solution. Such \"Problem Solution Languages\"<br>\n      encompass declarative proof languages like Isabelle/Isar or Coq's<br>\n      Mathematical Proof Language, but also more specialized forms such<br>\n      as, for example, geometric problem solution languages that express<br>\n      a proof argument in Euklidian Geometry or languages for graph<br>\n      theory.</p>\n<p>* Consistent Mathematical Content Representation: Libraries of<br>\n      existing ITP-Systems, in particular those following the LCF-prover<br>\n      paradigm, usually provide logically coherent and human readable<br>\n      knowledge. In the leading provers, mathematical knowledge is<br>\n      covered to an extent beyond most courses in applied<br>\n      sciences. However, the potential of this mechanised knowledge for<br>\n      education is clearly not yet recognised adequately: renewed<br>\n      pedagogy calls for inquiry-based learning from concrete to<br>\n      abstract --- and the knowledge's logical coherence supports such<br>\n      learning: for instance, the formula 2.pi depends on the definition<br>\n      of reals and of multiplication; close to these definitions are the<br>\n      laws like commutativity etc. However, the complexity of the<br>\n      knowledge's traceable interrelations poses a challenge to<br>\n      usability design.</p>\n<p>* User-Guidance in Stepwise Problem Solving: Such guidance is<br>\n      indispensable for independent learning, but costly to implement so<br>\n      far, because so many special cases need to be coded by<br>\n      hand. However, TP technology makes automated generation of<br>\n      user-guidance reachable: declarative languages as mentioned above,<br>\n      novel programming languages combining computation and deduction,<br>\n      methods for automated construction with ruler and compass from<br>\n      specifications, etc --- all these methods 'know how to solve a<br>\n      problem'; so, use the methods' knowledge to generate user-guidance<br>\n      mechanically, this is an appealing challenge for ATP and ITP, and<br>\n      probably for compiler construction!</p>\n<p>In principle, mathematical software can be conceived as models of<br>\nmathematics: The challenge addressed by this workshop series is to<br>\nprovide appealing models for MMAs which are interactive and which<br>\nexplain themselves such that interested students can independently<br>\nlearn by inquiry and experimentation.</p>\n<p>Program Committee</p>\n<hr>\n<p>Ralph-Johan Back, Abo University, Turku, Finland<br>\n     Francisco Botana, University of Vigo at Pontevedra, Spain<br>\n     Florian Haftman, Munich University of Technology, Germany<br>\n     Predrag Janicic, University of Belgrade, Serbia<br>\n     Cezary Kaliszyk, University of Tsukuba, Japan<br>\n     Julien Narboux, University of Strasbourg, France<br>\n     Filip Maric, University of Belgrade, Serbia<br>\n     Walther Neuper, Graz University of Technology, Austria<br>\n     Pedro Quaresma, University of Coimbra, Portugal<br>\n     Wolfgang Schreiner, Johannes Kepler University, Linz, Austria<br>\n     Laurent Th√©ry, Sophia Antipolis, INRIA, France<br>\n     Makarius Wenzel, University Paris-Sud, France<br>\n     Burkhart Wolff, University Paris-Sud, France</p>\n<p>Important Dates (by easychair)</p>\n<hr>\n<p>* Extended Abstracts/Demo proposals:  01 May 2012<br>\n     * Author Notification:                01 Jun 2012<br>\n     * Final Version:                      15 Jun 2012<br>\n     * Worshop Day:                        11 Jul 2012</p>\n<p>Submission</p>\n<hr>\n<p>We welcome submission of proposals to present a demo, as well as<br>\nsubmissions of extended abstracts (8 pages max) presenting original<br>\nunpublished work which is not been submitted for publication<br>\nelsewhere.</p>\n<p>Selected extended abstracts will appear in CISUC Technical Report<br>\nseries (ISSN 0874-338X, [1]). All accepted extended abstracts and<br>\nsystem demos will be presented at the workshop, and the extended<br>\nabstracts will be made available online. A publication<br>\npost-proceedings (papers, 15 pages max) under EPTCS is under<br>\nconsideration.</p>\n<p>Extended abstracts and demo proposals should be submitted via THedu'12<br>\neasychair [2].</p>\n<p>Extended abstracts should be no more than 8 pages in length and are to<br>\nbe submitted in PDF format. They must conform to the EPTCS style<br>\nguidelines [3].</p>\n<p>At least one author of each accepted extended abstract/demo is<br>\nexpected to attend THedu'12 and presents her or his extended<br>\nabstract/demo.</p>\n<p>[1]http://www.uc.pt/en/fctuc/ID/cisuc/RecentPublications/Techreports/<br>\n[2]http://www.easychair.org/conferences/?conf=thedu12<br>\n[3]http://http://style.eptcs.org/</p>",
        "id": 294151514,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660849470
    }
]