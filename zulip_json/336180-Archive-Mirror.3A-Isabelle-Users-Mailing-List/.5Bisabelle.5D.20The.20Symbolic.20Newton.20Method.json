[
    {
        "content": "<p>From: Jens Doll &lt;<a href=\"mailto:jd@cococo.de\">jd@cococo.de</a>&gt;<br>\nSymbolic computing might be the base for the next computer generation. It <br>\nalso means having more powerful hardware. I recently came across the <br>\nsymbolic newton method for rational functions, which is an iteration, <br>\nwhere the initial value is not known and which is carried out <br>\nsymbolically. The resulting expression grows exponentially for nonlinear <br>\nfunctions and soon exceeds machine power. I now wonder, if the resulting <br>\nexpression could be reduced by some Isabelle tactics, The sample can be <br>\nfound under</p>\n<p><a href=\"http://cococo.de/products/windows/Columbo/sample4.html\">http://cococo.de/products/windows/Columbo/sample4.html</a></p>\n<p>and I would like to receive comments, if the case is of interests.</p>\n<p>Jens</p>",
        "id": 294074692,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660828409
    },
    {
        "content": "<p>From: Tjark Weber &lt;<a href=\"mailto:webertj@in.tum.de\">webertj@in.tum.de</a>&gt;<br>\nJens,</p>\n<p>I'd try \"apply simp\", or perhaps \"apply auto\".  Various useful<br>\ntheorems, e.g., \"0 * a = 0\", are installed as simplification<br>\nrules by default.  Others may have to be added manually.</p>\n<p>If you only care about simplification, rather than theorem<br>\nproving, a computer algebra system (such as Maple) might be<br>\nthe better tool for this task.</p>\n<p>Regards,<br>\nTjark</p>",
        "id": 294074832,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660828444
    }
]