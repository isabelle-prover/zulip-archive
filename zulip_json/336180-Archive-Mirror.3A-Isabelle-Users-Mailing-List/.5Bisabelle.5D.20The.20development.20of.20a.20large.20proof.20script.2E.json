[
    {
        "content": "<p>From: Christian Sternagel &lt;<a href=\"mailto:c.sternagel@gmail.com\">c.sternagel@gmail.com</a>&gt;<br>\nI'm forwarding this to the mailing list, since the question was <br>\noriginally asked there and others might have something useful to say <br>\nbefore I have time to look at it in detail.</p>\n<p>cheers</p>\n<p>chris</p>\n<p>-------- Forwarded Message --------<br>\nSubject:    Fw: The development of a large proof script.<br>\nDate:   Thu, 5 Feb 2015 18:06:08 +0800<br>\nFrom:   <a href=\"mailto:lyj238@ios.ac.cn\">lyj238@ios.ac.cn</a> &lt;<a href=\"mailto:lyj238@ios.ac.cn\">lyj238@ios.ac.cn</a>&gt;<br>\nTo:     Christian Sternagel &lt;<a href=\"mailto:c.sternagel@gmail.com\">c.sternagel@gmail.com</a>&gt;</p>\n<p>Daer christian:<br>\n         I looked up the manuals and 'build' commands.<br>\n         I'm confused on the session concepts. I briefly describe my<br>\n         problems.<br>\n         I need a basic theory file \"cache.thy\" \"localesDef.thy\", then<br>\n         for each<br>\n         case study on a protocol 'a', I imports the basic theory, and<br>\n         generate a<br>\n         'a.thy' with the help of an external tool. Now I want to run<br>\n         Isabelle to<br>\n         check 'a.thy'. Due to special application on the domain, the<br>\n         generated<br>\n         proof script can be checked without much interactions.<br>\n         As I think, I divide the larger file into small parts, which are<br>\n         loaded<br>\n         one by one. And each smaller file are built into  a session (or<br>\n         image).<br>\n         Three thy files are attached, the cache.thy and two case studies.<br>\n         One is small, and the other is moderate. The largest cannot be<br>\n         sent via<br>\n         email I can upload it at some web site.  But I think, you can<br>\n         teach me<br>\n         the method to me at first.<br>\n         I try to use the following command:<br>\n         [lyj@localhost cache]$ ~/Isabelle2014/bin/isabelle build -b<br>\n         cache.thy<br>\n         ### Cannot execute Poly/ML in 32bit mode (missing shared<br>\n         libraries for<br>\n         C/C++)<br>\n         ### Using bulky 64bit version of Poly/ML instead<br>\n         *** Undefined session(s): \"cache.thy\"<br>\n         0:00:01 elapsed time, 0:00:01 cpu time<br>\n         but fails, can you give me some details to build the theory.<br>\n         regards!</p>\n<p>On Wed, 2015-02-04 at 14:27 +0100, David Cock wrote:<br>\n          &gt; On 04/02/15 14:18, <a href=\"mailto:lyj238@ios.ac.cn\">lyj238@ios.ac.cn</a> wrote:<br>\n          &gt; &gt; Dear experts:<br>\n          &gt; &gt;     Now I want to ask some details on the development of a<br>\n         large proof script.<br>\n          &gt; &gt;<br>\n          &gt; &gt;     A   proof script on a real protocol case study has 20<br>\n         MB. It is really<br>\n          &gt; &gt; beyond the ability of Isabelle's JEDIT interface.<br>\n          &gt; &gt;<br>\n          &gt; &gt;     I have used the tty model to run a smaller script with<br>\n         2MBs in batch in previous Isabelle 2012. But<br>\n          &gt; &gt; it is very inconvenient, and the tty model is not supported<br>\n          &gt; &gt;     by Isabelle 2014.<br>\n          &gt;<br>\n          &gt; You can still run noninteractive proofs, you just need to set<br>\n         up the<br>\n          &gt; appropriate build files.   This is covered in the Isabelle<br>\n         system<br>\n          &gt; manual.  Also, if you can factor your proof into several<br>\n         logic images,<br>\n          &gt; with each building on the last, then you can work<br>\n         interactively on any<br>\n          &gt; of them, by loading the next-lowest as your ambient logic.<br>\n          &gt;<br>\n          &gt; &gt;<br>\n          &gt; &gt; (1)  How to run the larger proof in Isabelle 2014?<br>\n          &gt; &gt;<br>\n          &gt; &gt; (2)Essentially, my proof script contain a main lemma and<br>\n         thousands of basic<br>\n          &gt; &gt; lemmas which is used in the proof of the main lemma.  The<br>\n         proof of thousands<br>\n          &gt; &gt; of  basic lemmas can be proved in parallel. Parallel proof<br>\n         (or distributing<br>\n          &gt; &gt; proofs) are supported by Isabelle 2014?<br>\n          &gt;<br>\n          &gt; Yes, very much so.<br>\n          &gt;<br>\n          &gt; David<br>\n          &gt;<br>\n<a href=\"/user_uploads/14278/bKT0aQI5tzSHnqzivUTcuF60/cache.thy\">cache.thy</a><br>\n<a href=\"/user_uploads/14278/TzA45jHPZowsk62apksKDkm-/localesDef.thy\">localesDef.thy</a><br>\n<a href=\"/user_uploads/14278/Z8s5FOP6V2Nr3qdOV55vDPF0/mutualEx.thy\">mutualEx.thy</a></p>",
        "id": 294326553,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660928734
    },
    {
        "content": "<p>From: Christian Sternagel &lt;<a href=\"mailto:c.sternagel@gmail.com\">c.sternagel@gmail.com</a>&gt;<br>\nDear lyj238,</p>\n<p>what constitutes a single session has to be put into a <br>\n\"driver\"/\"project\"/\"session\" file (I'm not sure whether there is any <br>\nofficial name for this file, except for ROOT) called ROOT (see \"System <br>\nManual\", Section 2.1).</p>\n<p>In your case the ROOT file could contain:</p>\n<p>session Main_Session = HOL +<br>\n       theories<br>\n          mutualEx</p>\n<p>which defines a session called \"Main_Session\" on top of HOL (for bigger <br>\ndevelopments, as suggested by David, you can have several of these <br>\nsessions built on top of each other). The session consists of the theory <br>\n\"mutualEx\" (and implicitly all the theories on which \"mutualEx\" depends <br>\nand that are not yet part of the \"HOL\" session).</p>\n<p>Now, in order to build this newly defined session you have to tell <br>\n\"isabelle build\" where your ROOT file is <em>and</em> which session to build <br>\n(since there could be several sessions in a single ROOT file). This is <br>\ndone via</p>\n<p>isabelle build -d . -b Main_Session</p>\n<p>adding \"-v\" will give you some more details about your environment which <br>\nmight be interesting here, in order to analyze the error you obtain. <br>\nE.g,. on my machine</p>\n<p>isabelle build -v -d . -b Main_Session</p>\n<p>results in</p>\n<p>##################################################<br>\nISABELLE_BUILD_OPTIONS=\"threads=4\"</p>\n<p>ML_PLATFORM=\"x86_64-linux\"<br>\nML_HOME=\"/usr/local/Isabelle2014/contrib/polyml-5.5.2-1/x86_64-linux\"<br>\nML_SYSTEM=\"polyml-5.5.2-1\"<br>\nML_OPTIONS=\"-H 500\"</p>\n<p>Session Pure/Pure<br>\nSession HOL/HOL (main)<br>\nSession Unsorted/Main_Session<br>\nBuilding Main_Session ...<br>\nMain_Session: theory cache<br>\nMain_Session: theory localesDef<br>\nMain_Session: theory mutualEx<br>\nTiming Main_Session (4 threads, 6.904s elapsed time, 20.347s cpu time, <br>\n0.749s GC time, factor 2.95)<br>\nFinished Main_Session (0:00:20 elapsed time, 0:00:43 cpu time, factor 2.15)<br>\nFinished at Thu Feb  5 14:38:53 CET 2015<br>\n0:00:26 elapsed time, 0:00:55 cpu time, factor 2.11<br>\n##################################################</p>\n<p>cheers</p>\n<p>chris</p>\n<p>Side remark: Conventionally you would start theory-names (as well as <br>\nsession-names) with a capital letter and use underscores to delimit <br>\nwords (not CamelCaseAsIsConvetionForSomeProgrammingLanguages).</p>",
        "id": 294326750,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660928796
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\n(I did not find time yet to look closely on this thread, which also has <br>\ninvisible parts in my private mail folder.  For continuation it is <br>\nimportant to keep exactly one <em>public</em> thread on this mailing list.)</p>\n<p>Generally, Isabelle and its Prover IDE have been made to cope with the <br>\nincreasingly large formalizations that have emerged in recent years: <br>\neverytime there was some success in using more CPU cores and exploiting <br>\nlarger memory, applications continued to catch up and grow beyond that.</p>\n<p>Just throwing tons of theory and proof text into a single Isabelle/jEdit <br>\nbuffer is unlikely to work: the practical limit is a few hundred kilobyte <br>\nper node in the theory graph, but the graph can be quite large.</p>\n<p>If proof sketches are machine generated, it should be easy to sub-divide <br>\ninto separate theories and see how far you get, before really smart <br>\napproaches need to be devised.</p>\n<p>Makarius</p>",
        "id": 294327327,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660929010
    },
    {
        "content": "<p>From: \"<a href=\"mailto:lyj238@ios.ac.cn\">lyj238@ios.ac.cn</a>\" &lt;<a href=\"mailto:lyj238@ios.ac.cn\">lyj238@ios.ac.cn</a>&gt;<br>\nDear experts:<br>\n   Now I want to ask some details on the development of a large proof script.</p>\n<p>A   proof script on a real protocol case study has 20 MB. It is really<br>\nbeyond the ability of Isabelle's JEDIT interface.</p>\n<p>I have used the tty model to run a smaller script with 2MBs in batch in previous Isabelle 2012. But<br>\nit is very inconvenient, and the tty model is not supported<br>\n   by Isabelle 2014.</p>\n<p>(1)  How to run the larger proof in Isabelle 2014?</p>\n<p>(2)Essentially, my proof script contain a main lemma and thousands of basic<br>\nlemmas which is used in the proof of the main lemma.  The proof of thousands<br>\nof  basic lemmas can be proved in parallel. Parallel proof (or distributing<br>\nproofs) are supported by Isabelle 2014?</p>\n<p>Best regards!</p>\n<p><a href=\"mailto:lyj238@ios.ac.cn\">lyj238@ios.ac.cn</a></p>",
        "id": 294328118,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660929262
    },
    {
        "content": "<p>From: \"<a href=\"mailto:lyj238@ios.ac.cn\">lyj238@ios.ac.cn</a>\" &lt;<a href=\"mailto:lyj238@ios.ac.cn\">lyj238@ios.ac.cn</a>&gt;<br>\nDear experts:<br>\n   Now I want to ask some details on the development of a large proof script.</p>\n<p>A   proof script on a real protocol case study has 20 MB. It is really<br>\nbeyond the ability of Isabelle's JEDIT interface.</p>\n<p>I have used the tty model to run a smaller script with 2MBs in batch in previous Isabelle 2012. But<br>\nit is very inconvenient, and the tty model is not supported<br>\n   by Isabelle 2014.</p>\n<p>(1)  How to run the larger proof in Isabelle 2014?</p>\n<p>(2)Essentially, my proof script contain a main lemma and thousands of basic<br>\nlemmas which is used in the proof of the main lemma.  The proof of thousands<br>\nof  basic lemmas can be proved in parallel. Parallel proof (or distributing<br>\nproofs) are supported by Isabelle 2014?</p>\n<p>Best regards!</p>\n<p><a href=\"mailto:lyj238@ios.ac.cn\">lyj238@ios.ac.cn</a></p>",
        "id": 294328257,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660929329
    },
    {
        "content": "<p>From: David Cock &lt;<a href=\"mailto:david.cock@inf.ethz.ch\">david.cock@inf.ethz.ch</a>&gt;<br>\nOn 04/02/15 14:18, <a href=\"mailto:lyj238@ios.ac.cn\">lyj238@ios.ac.cn</a> wrote:</p>\n<blockquote>\n<p>Dear experts:<br>\n    Now I want to ask some details on the development of a large proof script.</p>\n<p>A   proof script on a real protocol case study has 20 MB. It is really<br>\nbeyond the ability of Isabelle's JEDIT interface.</p>\n<p>I have used the tty model to run a smaller script with 2MBs in batch in previous Isabelle 2012. But<br>\nit is very inconvenient, and the tty model is not supported<br>\n    by Isabelle 2014.</p>\n</blockquote>\n<p>You can still run noninteractive proofs, you just need to set up the <br>\nappropriate build files.   This is covered in the Isabelle system <br>\nmanual.  Also, if you can factor your proof into several logic images, <br>\nwith each building on the last, then you can work interactively on any <br>\nof them, by loading the next-lowest as your ambient logic.</p>\n<blockquote>\n<p>(1)  How to run the larger proof in Isabelle 2014?</p>\n<p>(2)Essentially, my proof script contain a main lemma and thousands of basic<br>\nlemmas which is used in the proof of the main lemma.  The proof of thousands<br>\nof  basic lemmas can be proved in parallel. Parallel proof (or distributing<br>\nproofs) are supported by Isabelle 2014?</p>\n</blockquote>\n<p>Yes, very much so.</p>\n<p>David</p>",
        "id": 294328418,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660929397
    },
    {
        "content": "<p>From: Christian Sternagel &lt;<a href=\"mailto:c.sternagel@gmail.com\">c.sternagel@gmail.com</a>&gt;<br>\nDear lyj238,</p>\n<p>maybe you could give as some more details?</p>\n<p>For example: What do you mean by \"proof script\"? Is what you are talking <br>\nabout a standard Isabelle/Isar development, i.e., a bunch of *.thy files <br>\nwith \"lemma\" statements inside and corresponding \"proof/qed\" blocks?</p>\n<p>And how did you create your \"proof script\" if not with Isabelle/jEdit or <br>\nIsabelle/ProofGeneral?</p>\n<p>The largest Isabelle development I've personally worked on is roughly in <br>\nthe 5 MB area. This can be handled by session management that is <br>\nstandard nowadays (see the Isabelle system manual).</p>\n<p>In general, have a look at the System manual (that comes with the <br>\nIsabelle distribution) and especially at session management and the <br>\n\"build\" tool.</p>\n<p>As for your question about parallelization. Isabelle's \"build\" uses <br>\nimplicit parallelization possible due to interdependencies of theories <br>\n(and maybe lemmas?). So yes, parallelization is supported <em>and</em> you get <br>\nit essentially for free.</p>\n<p>cheers</p>\n<p>chris</p>",
        "id": 294328620,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660929468
    }
]