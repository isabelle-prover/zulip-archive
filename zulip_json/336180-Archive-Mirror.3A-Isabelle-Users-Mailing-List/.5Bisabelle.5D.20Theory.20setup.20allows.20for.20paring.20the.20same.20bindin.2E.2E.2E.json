[
    {
        "content": "<p>From: Yakoub Nemouchi &lt;<a href=\"mailto:y.nemouchi@gmail.com\">y.nemouchi@gmail.com</a>&gt;<br>\nDear list,</p>\n<p>Is the following behavior standard?</p>\n<p>val _ = Theory.setup((antiquotation_docitem @{binding docref}<br>\nDOF_core.default_cid) #&gt;<br>\n                     (* deprecated syntax             ^^^^^^*)<br>\n                     (antiquotation_docitem @{binding docitem_ref}<br>\nDOF_core.default_cid) #&gt;<br>\n                     (* deprecated syntax             ^^^^^^^^^^*)<br>\n                     (antiquotation_docitem @{binding docitem}<br>\nDOF_core.default_cid) #&gt;<br>\n                     (docitem_antiquotation @{binding docref}<br>\nDOF_core.default_cid) #&gt;<br>\n                     (* deprecated syntax             ^^^^^^*)<br>\n                     (docitem_antiquotation @{binding docitem_ref}<br>\nDOF_core.default_cid) #&gt;<br>\n                     (* deprecated syntax             ^^^^^^^^^^*)<br>\n                     (docitem_antiquotation @{binding docitem}<br>\nDOF_core.default_cid) #&gt;</p>\n<p>ML_antiquotation_docitem_value @{binding<br>\ndocitem_value})</p>\n<p>Namely I have two different semantics for the same binding and Isabelle<br>\ndoes not complain about it!</p>\n<p>Best wishes,</p>\n<p>Yakoub.</p>",
        "id": 294757449,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661198142
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nAbove only the name bindings are a standard feature of Isabelle;<br>\nantiquotation_docitem, docitem_antiquotation,<br>\nML_antiquotation_docitem_value are defined in user space of your<br>\napplication.</p>\n<p>If these refer to different name spaces, there is no clash here. (Even<br>\nwithin the same name space, it is possible to override entries,<br>\ndepending on the name space policy.)</p>\n<p>I don't see anything non-standard here.</p>\n<p>Makarius</p>",
        "id": 294757632,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661198211
    },
    {
        "content": "<p>From: Yakoub Nemouchi &lt;<a href=\"mailto:y.nemouchi@gmail.com\">y.nemouchi@gmail.com</a>&gt;<br>\nThank you for the reply.</p>\n<p>This mean that my application somehow break the default \"name space policy\".<br>\nOverriding entries would have been a standard behavior to me.<br>\nI think the effect f my application is worst!</p>\n<p>Could you please point to an example or some guidelines related to the<br>\nconfiguration of \"name space policy\"? For a document model such as HOL?<br>\nI want that my application be a conservative extension of isar and my fear<br>\nis that I am using some function that supposed to be private and left<br>\npublic.<br>\nNamely, I want to understand why I changed the \"name space policy\" in an<br>\nunintentional way.</p>\n<p>Best wishes,</p>\n<p>Yakoub.</p>",
        "id": 294757745,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661198253
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nA name binding is merely a description for a new name; it \"reacts\" with<br>\na naming from the context to produce a new name space entry (full name<br>\nand name \"accesses\"). The key operations for this are Name_Space.declare<br>\nor Name_Space.define, which take a bool to say if you intend a \"strict\"<br>\nupdate. The normal situation is strict = true; there are rare examples<br>\nfor strict = false, e.g. facts or cases in a proof body.</p>\n<p>It is normal in Isabelle that the same name binding (and naming) can be<br>\nreused in different name spaces: e.g. a const \"nat\" and a type \"nat\",<br>\nboth producing the same full name and name accesses in separate name spaces.</p>\n<p>In the Prover IDE tells, the standard CTRL-hover idiom tells you about<br>\ninternal full name and name space name (the \"kind\") for names referenced<br>\nin the source. Thus it is clear to the user what is intended.</p>\n<p>My understanding of your example is that antiquotation_docitem etc. are<br>\ndefined by yourself: updating different name spaces in the theory<br>\ncontext. This looks OK from the surface. It is still unclear to me what<br>\nthe problem really is.</p>\n<p>Makarius</p>",
        "id": 294757751,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661198259
    }
]