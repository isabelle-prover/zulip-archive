[
    {
        "content": "<p>From: Nicole Rauch &lt;<a href=\"mailto:rauch@informatik.uni-kl.de\">rauch@informatik.uni-kl.de</a>&gt;<br>\nHello all,</p>\n<p>recently I painfully discovered that the splitting lemmas that are  <br>\ngenerated for a datatype are not only bound to Datatype.splits and  <br>\nTheoryname.Datatype.splits, but also to Theoryname.splits. It seems  <br>\nas if the latter is bound to the splitting lemmas of the last  <br>\ndatatype found in the theory called Theoryname. Unfortunately, this  <br>\nseems to be stronger than the binding to Datatype.splits.<br>\nThus, in case Datatype equals Theoryname, and if the lemma  <br>\nDatatype.splits is used somewhere in a subsequent theory, and if at a  <br>\nlater stage a new datatype New_Datatype is inserted into Theoryname,  <br>\nthe proofs in the subsequent theory will break due to the fact that  <br>\nDatatype.splits then in fact refers to Theoryname.splits which is  <br>\nbound to New_Datatype.splits.</p>\n<p>A short example might look like this:</p>\n<p>X.thy:</p>\n<hr>\n<p>datatype X = ... something ...</p>\n<hr>\n<p>Y.thy:</p>\n<hr>\n<p>theory Y = X :</p>\n<p>lemma xyz \"...\"<br>\n    ...<br>\n    apply (simp split: X.splits)<br>\n    ...</p>\n<hr>\n<p>If later on X.thy is changed to</p>\n<hr>\n<p>datatype X = ... something ...<br>\ndatatype Z = ... something else ...</p>\n<hr>\n<p>the proofs of Y.thy will break because X.splits refers to X.Z.splits,  <br>\nnot to X.X.splits as intended.</p>\n<p>Well...</p>\n<p>Is this a feature? If so, what would it be good for?</p>\n<p>Thanks for any insights!</p>\n<p>Nicole</p>",
        "id": 293899534,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660743930
    }
]