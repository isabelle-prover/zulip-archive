[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 15/06/18 22:11, Eugene W. Stark wrote:</p>\n<blockquote>\n<p>I'm not doing any funny stuff with system debugging -- just using Isabelle2018-RC0<br>\n\"out of the box\".</p>\n<p>I just tried the \"isabelle console\" thing you suggested, and the output from PolyML<br>\nappears reasonable.  I have attached that, as well as the Monitor window from<br>\nJEdit, which does not appear reasonable.  I tried forking a thread and the<br>\nstats reported by PolyML changed as expected.  So does not look like a PolyML<br>\nissue.</p>\n</blockquote>\n<p>I cannot follow that conclusion.</p>\n<p>The statistics are produced by the Poly/ML runtime system, and<br>\nIsabelle/ML + Isabelle/Scala merely pass-on the values to the GUI panel.</p>\n<p>I have studied the sources once again, and don't see how a negative<br>\nvalue can emerged. There is probably something wrong at the very bottom<br>\nof it.</p>\n<blockquote>\n<p>On 06/15/2018 03:51 PM, Makarius wrote:</p>\n<blockquote>\n<p>If you feel like it, you may also rebuild the bundled Poly/ML version<br>\nfrom sources, and experiment with the resulting poly executable:</p>\n<p>$ cd Isabelle2018-RC0/contrib/polyml-5.7.1-5/src<br>\n  $ ./configure &amp;&amp; make compiler &amp;&amp; make compiler<br>\n  $ ./poly</p>\n<blockquote>\n<p>PolyML.print_depth 100;<br>\nPolyML.Statistics.getLocalStats ();</p>\n</blockquote>\n<p>Note that this gives you x86_64-linux by default: it can be compared<br>\ndirectly with Isabelle2018-RC0/contrib/polyml-5.7.1-5/x86_64-linux/poly<br>\n-- the Isabelle default is normally the x86-linux version, provided you<br>\nhave the package lib32stdc++6 installed, but building it requires more<br>\npackages and options.</p>\n<p>Anyway, if there is a deeper problem behind it, we should move this to<br>\nthe Poly/ML mailing list.</p>\n</blockquote>\n</blockquote>\n<p>Can you try building Poly/ML from the bundled sources? Thus we could<br>\nrule out odd effects from the rather old build environment (Ubuntu<br>\n12.04) of the official binaries.</p>\n<p>You need to test the in the same Isabelle/PIDE environment as before.<br>\nApparently the raw console is not sufficient to see the effect.</p>\n<p>Makarius<br>\n<a href=\"/user_uploads/14278/7QpLX8_rfxN7-rM8j6wCOI0U/signature.asc\">signature.asc</a></p>",
        "id": 294733641,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661188990
    },
    {
        "content": "<p>From: Mathias Fleury &lt;<a href=\"mailto:mathias.fleury12@gmail.com\">mathias.fleury12@gmail.com</a>&gt;<br>\nHello Makarius and Eugene,</p>\n<p>I have the same effect (except with a different values).</p>\n<p>My Computer:<br>\nMacBook Pro (Retina, 15-inch, Mid 2015)<br>\n2,5 GHz Intel Core i7<br>\n16 GB 1600 MHz DDR3<br>\nHigh Sierra 10.13.4</p>\n<p>Isabelle version (more-or-less RC0):<br>\n$ hg id<br>\n4e27f5c361d2 tip</p>\n<blockquote>\n<p>I have studied the sources once again, and don't see how a negative<br>\nvalue can emerged. There is probably something wrong at the very bottom<br>\nof it.</p>\n</blockquote>\n<p>I managed to get a negative total number of threads:</p>\n<p>isabelle console -r<br>\nPoly/ML&gt; fun f n = if n = 0 then () else ignore (Thread.Thread.fork (fn () =&gt; OS.Process.sleep (Time.fromSeconds 10), []));</p>\n<p>After calling f with various numerical arguments (it requires a dozen of calls [I used values between 10 and 100, so it should be more that the number of threads required by Isabelle]; it also seems that different values must be used, but I have not found a reproducible way)</p>\n<p>val it =<br>\n   {gcFullGCs = 0, gcPartialGCs = 0, sizeAllocation = 123731968,<br>\n    sizeAllocationFree = 2708352, sizeHeap = 123731968,<br>\n    sizeHeapFreeLastFullGC = 0, sizeHeapFreeLastGC = 0, threadsInML = 15,<br>\n    threadsTotal = ~1, threadsWaitCondVar = 0, threadsWaitIO = 13,<br>\n    threadsWaitMutex = 0, threadsWaitSignal = 1, timeGCSystem = 0.000,<br>\n    timeGCUser = 0.000, timeNonGCSystem = 1.243, timeNonGCUser = 0.517,<br>\n    userCounters = fromList[0, 0, 0, 0, 0, 0, 0, 0]}:</p>\n<p>val it =<br>\n   {gcFullGCs = 0, gcPartialGCs = 0, sizeAllocation = 140509184,<br>\n    sizeAllocationFree = 1910304, sizeHeap = 140509184,<br>\n    sizeHeapFreeLastFullGC = 0, sizeHeapFreeLastGC = 0, threadsInML = 2,<br>\n    threadsTotal = ~29, threadsWaitCondVar = 0, threadsWaitIO = 1,<br>\n    threadsWaitMutex = 0, threadsWaitSignal = 1, timeGCSystem = 0.000,<br>\n    timeGCUser = 0.000, timeNonGCSystem = 1.791, timeNonGCUser = 0.670,<br>\n    userCounters = fromList[0, 0, 0, 0, 0, 0, 0, 0]}</p>\n<p>Best,<br>\nMathias</p>\n<blockquote>\n<p>On 06/15/2018 03:51 PM, Makarius wrote:</p>\n<blockquote>\n<blockquote>\n<p>If you feel like it, you may also rebuild the bundled Poly/ML version<br>\nfrom sources, and experiment with the resulting poly executable:</p>\n<p>$ cd Isabelle2018-RC0/contrib/polyml-5.7.1-5/src<br>\n $ ./configure &amp;&amp; make compiler &amp;&amp; make compiler<br>\n $ ./poly</p>\n<blockquote>\n<p>PolyML.print_depth 100;<br>\nPolyML.Statistics.getLocalStats ();</p>\n</blockquote>\n<p>Note that this gives you x86_64-linux by default: it can be compared<br>\ndirectly with Isabelle2018-RC0/contrib/polyml-5.7.1-5/x86_64-linux/poly<br>\n-- the Isabelle default is normally the x86-linux version, provided you<br>\nhave the package lib32stdc++6 installed, but building it requires more<br>\npackages and options.</p>\n<p>Anyway, if there is a deeper problem behind it, we should move this to<br>\nthe Poly/ML mailing list.</p>\n</blockquote>\n</blockquote>\n<p>Can you try building Poly/ML from the bundled sources? Thus we could<br>\nrule out odd effects from the rather old build environment (Ubuntu<br>\n12.04) of the official binaries.</p>\n<p>You need to test the in the same Isabelle/PIDE environment as before.<br>\nApparently the raw console is not sufficient to see the effect.</p>\n<p>Makarius</p>\n</blockquote>",
        "id": 294733662,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189000
    },
    {
        "content": "<p>From: Mathias Fleury &lt;<a href=\"mailto:mathias.fleury12@gmail.com\">mathias.fleury12@gmail.com</a>&gt;<br>\nHello Makarius,</p>\n<p>The following seems to be reproducible (both on my mac and on a Linux-Server):</p>\n<p>isabelle console -r<br>\nPoly/ML&gt; fun f n = if n = 0 then () else ignore (Thread.Thread.fork (fn () =&gt; OS.Process.sleep (Time.fromSeconds 10), []));<br>\nval f = fn: int -&gt; unit<br>\nPoly/ML&gt; f 5;<br>\nval it = (): unit<br>\nPoly/ML&gt; f 5;<br>\nval it = (): unit<br>\nPoly/ML&gt; f 5;<br>\nval it = (): unit</p>\n<p>Then I waited 30s and got:</p>\n<p>Poly/ML&gt; PolyML.Statistics.getLocalStats ();<br>\nval it =<br>\n   {gcFullGCs = 0, gcPartialGCs = 0, sizeAllocation = 4194304,<br>\n    sizeAllocationFree = 1725432, sizeHeap = 4194304,<br>\n    sizeHeapFreeLastFullGC = 0, sizeHeapFreeLastGC = 0, threadsInML = 2,<br>\n    threadsTotal = ~1, threadsWaitCondVar = 0, threadsWaitIO = 0,<br>\n    threadsWaitMutex = 0, threadsWaitSignal = 1, timeGCSystem = 0.000,<br>\n    timeGCUser = 0.000, timeNonGCSystem = 0.085, timeNonGCUser = 0.057,<br>\n    userCounters = fromList[0, 0, 0, 0, 0, 0, 0, 0]}:<br>\n   {gcFullGCs: int,<br>\n     gcPartialGCs: int,<br>\n     sizeAllocation: int,<br>\n     sizeAllocationFree: int,<br>\n     sizeHeap: int,<br>\n     sizeHeapFreeLastFullGC: int,<br>\n     sizeHeapFreeLastGC: int,<br>\n     threadsInML: int,<br>\n     threadsTotal: int,<br>\n     threadsWaitCondVar: int,<br>\n     threadsWaitIO: int,<br>\n     threadsWaitMutex: int,<br>\n     threadsWaitSignal: int,<br>\n     timeGCSystem: Time.time,<br>\n     timeGCUser: Time.time,<br>\n     timeNonGCSystem: Time.time,<br>\n     timeNonGCUser: Time.time, userCounters: int vector}</p>\n<p>More iterations of the loop (calling f three times, then waiting) lead to lower values of the \"threadsTotal\".</p>\n<p>Best,<br>\nMathias</p>",
        "id": 294733682,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189009
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOK, I've now seen it too. It is definitely somewhere at the bottom of<br>\nPoly/ML, not in Isabelle/ML.</p>\n<p>Makarius</p>",
        "id": 294733698,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189015
    },
    {
        "content": "<p>From: David Matthews &lt;<a href=\"mailto:dm@prolingua.co.uk\">dm@prolingua.co.uk</a>&gt;<br>\nThe threads count was being decremented twice.  This was a consequence <br>\nof a change in the way thread exit is handled.  I've committed a fix to <br>\nthis to Poly/ML master along with another fix that corrects <br>\n\"threadsInML\".  I'll port these to the fixes-5.7.1 branch if they look <br>\nall right.  Thanks for reducing it to a manageable example.</p>\n<p>David</p>",
        "id": 294733947,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189113
    },
    {
        "content": "<p>From: \"Eugene W. Stark\" &lt;<a href=\"mailto:isabelle-users@starkeffect.com\">isabelle-users@starkeffect.com</a>&gt;<br>\nI happened to be perusing the tabs in the Monitor panel in Isabelle2018-RC0<br>\nand noticed that one of the values (threads total? displayed as some kind of<br>\nred line on my system) has a bizarre value of about -375.  The auto-scaling<br>\nadjusts for this, making the overall graph pretty useless.</p>\n<p>This is on Ubuntu 16.04 LTS:<br>\nLinux 4.4.0-124-generic #148-Ubuntu SMP Wed May 2 13:00:18 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux<br>\nCPU: Intel(R) Core(TM) i5-4670K CPU @ 3.40GHz</p>",
        "id": 294735625,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189684
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI haven't seen anything like this myself, but I remember that you have<br>\nused Linux with special system debugging options before: that might<br>\nsomehow confuse the built-in system statistics of the Poly/ML 5.7.1<br>\nruntime system (in Isabelle2017 that was Poly/ML 5.6).</p>\n<p>This is how to access that data without anything of Isabelle/ML system<br>\ninfrastructure getting in between:</p>\n<p>$ isabelle console -r<br>\n  Poly/ML&gt; PolyML.Statistics.getLocalStats ();</p>\n<p>You can also fork a few threads and then inspect the statistics again:</p>\n<p>Poly/ML&gt; Thread.Thread.fork (fn () =&gt; OS.Process.sleep<br>\n(Time.fromSeconds 10), []);</p>\n<p>If you feel like it, you may also rebuild the bundled Poly/ML version<br>\nfrom sources, and experiment with the resulting poly executable:</p>\n<p>$ cd Isabelle2018-RC0/contrib/polyml-5.7.1-5/src<br>\n  $ ./configure &amp;&amp; make compiler &amp;&amp; make compiler<br>\n  $ ./poly</p>\n<blockquote>\n<p>PolyML.print_depth 100;<br>\nPolyML.Statistics.getLocalStats ();</p>\n</blockquote>\n<p>Note that this gives you x86_64-linux by default: it can be compared<br>\ndirectly with Isabelle2018-RC0/contrib/polyml-5.7.1-5/x86_64-linux/poly<br>\n-- the Isabelle default is normally the x86-linux version, provided you<br>\nhave the package lib32stdc++6 installed, but building it requires more<br>\npackages and options.</p>\n<p>Anyway, if there is a deeper problem behind it, we should move this to<br>\nthe Poly/ML mailing list.</p>\n<p>Makarius</p>",
        "id": 294736067,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189844
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThis appears to be on master dd7f37b157035614295d53aa14db27dfc06b1598 +<br>\naf7995530c13f13ae3e36438c7e1c6b5b44054d9, but I only see the \"inML\"<br>\nchange on fixes-5.7.1 (3f75961b36601451a464b2eb22fb54d4a10ee24c).</p>\n<p>Consequently, it is still possible in Isabelle2018-RC2 to get negative<br>\nthreadsTotal as above.</p>\n<p>Makarius</p>",
        "id": 294736818,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190090
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI have updated to Poly/ML fixes-5.7.1 b3d1ff33a4b4 for the next release<br>\ncandidate, see<br>\n<a href=\"https://isabelle.sketis.net/repos/isabelle-release/rev/8ef8905629ba\">https://isabelle.sketis.net/repos/isabelle-release/rev/8ef8905629ba</a></p>\n<p>Makarius</p>",
        "id": 294737065,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190170
    }
]