[
    {
        "content": "<p>From: Walther Neuper &lt;<a href=\"mailto:wneuper@ist.tugraz.at\">wneuper@ist.tugraz.at</a>&gt;<br>\nIn a file like ...</p>\n<p>/-----------------------------------------------------------------------------------------------------------------<br>\ntheory Foo imports Bar begin<br>\nML {*<br>\n   @{theory Bar}; <br>\n(*OK                                                     *)<br>\n(*Thy_Info.get_theory \"Bar\"; ERROR 'Theory loader: undefined theory <br>\nentry for \"Bar\"'*)<br>\n*}<br>\nend<br>\n-----------------------------------------------------------------------------------------------------------------/</p>\n<p>... \"Thy_Info.get_theory\" causes the theory loader to say \"undefined <br>\ntheory entry\", although \"@{theory Bar}\" works as expected.</p>\n<p>However, if a session Bar is built from Bar.thy, then the theory loader <br>\nis informed and 'Thy_Info.get_theory \"Bar\"' finds the theory.</p>\n<p>So my question is:</p>\n<p>Is there a way to tell the theory loader about newly imported <br>\ntheories ?<br>\n     (without the detour via session)</p>\n<p>Thanks for any help,<br>\nWalther</p>\n<p>PS: Such a way would simplify certain situations in Isac development.</p>",
        "id": 294249326,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660910149
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Walther,</p>\n<p>without being an expert I would guess that you may only retrieve<br>\nfinished theories in that manner.</p>\n<p>Cf. in Isabelle 2013</p>\n<p>theory Foo<br>\nimports Main<br>\nbegin</p>\n<p>ML {* @{theory Foo} *} -- failure<br>\nML {* @{theory Main} *} -- ok</p>\n<p>As a first recommendation I would say to split up such theories in two,<br>\nroughly.</p>\n<p>Cheers,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/1wp2rIL-9gCIVAhmOzosLund/signature.asc\">signature.asc</a></p>",
        "id": 294249344,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660910158
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Thu, 5 Sep 2013, Walther Neuper wrote:</p>\n<blockquote>\n<p>In a file like ...</p>\n<p>/-----------------------------------------------------------------------------------------------------------------<br>\ntheory Foo imports Bar begin<br>\nML {*<br>\n @{theory Bar}; (*OK                                                     *)<br>\n(*Thy_Info.get_theory \"Bar\"; ERROR 'Theory loader: undefined theory entry for <br>\n\"Bar\"'*)<br>\n*}<br>\nend<br>\n-----------------------------------------------------------------------------------------------------------------/</p>\n<p>... \"Thy_Info.get_theory\" causes the theory loader to say \"undefined theory <br>\nentry\", although \"@{theory Bar}\" works as expected.</p>\n<p>However, if a session Bar is built from Bar.thy, then the theory loader is <br>\ninformed and 'Thy_Info.get_theory \"Bar\"' finds the theory.</p>\n</blockquote>\n<p>This observation is correct.  The @{theory} antiquotation follows the <br>\nlogical context, and thus can only refer to the import graph of the <br>\ncurrent theory context.  The global theory loader operation <br>\nThy_Info.get_theory can step outside the context, but only for theories <br>\nthat have been loaded into the parent session already (and can no longer <br>\nchange).</p>\n<p>In Isabelle2013 there is still a mix of old and new concepts how sessions <br>\nand the overall proof document state of PIDE are managed.  This will take <br>\nfurther rounds of refinement, but the trend is more and more away from <br>\nglobal stateful things like Thy_Info.get_theory.</p>\n<blockquote>\n<p>Is there a way to tell the theory loader about newly imported theories ?<br>\n(without the detour via session)</p>\n</blockquote>\n<p>Probably not.</p>\n<blockquote>\n<p>Such a way would simplify certain situations in Isac development.</p>\n</blockquote>\n<p>As usual, one needs to step back and rethink the actual motivation behind <br>\nthis former use of Thy_Info.get_theory.</p>\n<p>Makarius</p>",
        "id": 294249702,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660910268
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nIn the middle of theory body Foo, you can refer to the current background <br>\ncontext via @{theory}.  Of course the final @{theory Foo} might be <br>\nsomething else, but it is guaranteed to be a super-theory.</p>\n<p>Makarius</p>",
        "id": 294249719,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660910274
    },
    {
        "content": "<p>From: Walther Neuper &lt;<a href=\"mailto:wneuper@ist.tugraz.at\">wneuper@ist.tugraz.at</a>&gt;<br>\nThank you for that hint, it will have impact on our plans !</p>\n<p>Walther</p>",
        "id": 294249819,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660910299
    }
]