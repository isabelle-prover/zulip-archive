[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@kit.edu\">andreas.lochbihler@kit.edu</a>&gt;<br>\nHi all,</p>\n<p>I use a locale without assumptions to hide multiple parameters to a <br>\nlarge (mutually recursive) inductive definition. Later on, I would like <br>\nto use the inductive rule generated for the predicate for an <br>\ninstantiation of the locale, but without interpreting the locale because <br>\nthe interpretation simply takes too long. Instead, I would like to use <br>\nthe global version of the induction rule directly.</p>\n<p>Here is a short example:</p>\n<p>locale A =<br>\n   fixes a :: 'a<br>\nbegin</p>\n<p>inductive r and rs<br>\nwhere<br>\n   a: \"a = a d r 0\"<br>\n| b: \"rs [0] d r 0\"<br>\n| c: \"r x d rs [x]\"</p>\n<p>end</p>\n<p>lemma \"A.r x (Suc 0) ==&gt; True\"<br>\n   and \"<a href=\"http://A.rs\">A.rs</a> x [Suc 0] ==&gt; True\"<br>\napply(induct rule: A.r_rs.inducts)</p>\n<p>However, induct complains that it failed to join given rules into one <br>\nmutual rule. I figured out that A.r_rs.inducts is missing the<br>\n[consumes 1] declaration (as well as the case names).</p>\n<p>How can I extract the consumes/case_names/case_conclusion declarations <br>\nof a theorem t in a local context C and transfer this information to the <br>\nglobal version C.t automatically? Is this possible at all?</p>\n<p>Best regards,<br>\nAndreas</p>",
        "id": 294113835,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660837674
    }
]