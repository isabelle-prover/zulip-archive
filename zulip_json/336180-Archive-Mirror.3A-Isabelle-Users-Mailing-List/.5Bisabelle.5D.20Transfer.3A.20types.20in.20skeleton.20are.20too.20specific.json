[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear experts of the transfer package,</p>\n<p>I have a problem with the transfer method (theory attached, Isabelle2016). In the lemma, <br>\ntransfer is supposed to replace the function f2 with the function f1 using the <br>\nparametricity theorem for the operator foo (and thereby replace the natural number i with <br>\nan integer i in the domain of cr).</p>\n<p>However, the proof does not go through, because the expected transfer relation for foo <br>\n(second goal after transfer_start) has a too specific type. In detail, the relation ?Rg12 <br>\nhas type \"bool ⇒ (nat ⇒ bool) ⇒ bool\", but it should be something like \"(nat ⇒ bool) ⇒ <br>\n(nat ⇒ bool) ⇒ bool\" or \"?'a ⇒ (nat ⇒ bool) ⇒ bool\".</p>\n<p>Where does this restricted type come from? And how can I make transfer work for this example?</p>\n<p>Thanks,<br>\nAndreas<br>\n<a href=\"/user_uploads/14278/T9IlfqJQHfjCrZgMD90o9adi/Scratch.thy\">Scratch.thy</a></p>",
        "id": 294691174,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661177830
    },
    {
        "content": "<p>From: Ondřej Kunčar &lt;<a href=\"mailto:kuncar@in.tum.de\">kuncar@in.tum.de</a>&gt;<br>\nHi Andreas,<br>\nthis is a bug in the procedure that tries to preinstantiate some of the <br>\nschematic variables to cut down the search space. The procedure got <br>\nconfused because part of your term got eta contracted after transfer <br>\ninternally universally quantified over the free variables.</p>\n<p>A possible workaround:<br>\nQuantify explicitly over n: \"∀n. foo c (f2 i) n\".</p>\n<p>Ondrej</p>",
        "id": 294691252,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661177867
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Ondrej,</p>\n<p>Thanks for digging into this. I'll live with the workaround until the bug is resolved.</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 294691266,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661177873
    }
]