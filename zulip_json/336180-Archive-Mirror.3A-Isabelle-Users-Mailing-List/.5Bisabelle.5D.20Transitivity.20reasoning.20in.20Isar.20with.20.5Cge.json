[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nHi all,</p>\n<p>I just wondered if it is possible to use the Isar-style transitivity<br>\nreasoning with \\ge, i.e.</p>\n<p>note <code>a\\ge b</code> also note <code>... \\ge c</code> finally have \"a\\ge c\"</p>\n<p>Currently, this does not work for two reasons:<br>\n  First, \\ge is syntactically translated to \\le, before \" ... \" is<br>\nmatched, and, second, there is no \"swapped\"<br>\n    transitivity rule set up as [trans]. The second can be fixed by<br>\nadding such a rule:<br>\n      lemma [trans]: \"a\\&lt;ge&gt;b \\&lt;Longrightarrow&gt; b\\&lt;ge&gt;c<br>\n\\&lt;Longrightarrow&gt; a\\&lt;ge&gt;(c::'a::order)\" by (rule order_trans_rules)<br>\n    Should this be included into the standard setup of the transitivity<br>\nreasoner?</p>\n<p>any ideas wether it is possible to extend the behaviour of \"...\"  to<br>\nalso work with \\ge?</p>\n<p>Best,<br>\n  Peter</p>",
        "id": 294144196,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660846921
    },
    {
        "content": "<p>From: Johannes Hoelzl &lt;<a href=\"mailto:hoelzl@in.tum.de\">hoelzl@in.tum.de</a>&gt;<br>\nHi Peter,</p>\n<p>for such reasoning the xtrans rules are used.<br>\nYou find the following comment in ~~/src/HOL/Orderings.thy.<br>\nHere they use the (is _) keyword to introduce ?rhs as<br>\nabbreviation instead of \"...\", How would you extend ...<br>\nto work here?</p>\n<p>(*</p>\n<p>Since \"a &gt;= b\" abbreviates \"b &lt;= a\", the abbreviation \"...\" stands<br>\n   for the wrong thing in an Isar proof.</p>\n<p>The extra transitivity rules can be used as follows:</p>\n<p>lemma \"(a::'a::order) &gt; z\"<br>\nproof -<br>\n   have \"a &gt;= b\" (is \"_ &gt;= ?rhs\")<br>\n     sorry<br>\n   also have \"?rhs &gt;= c\" (is \"_ &gt;= ?rhs\")<br>\n     sorry<br>\n   also (xtrans) have \"?rhs = d\" (is \"_ = ?rhs\")<br>\n     sorry<br>\n   also (xtrans) have \"?rhs &gt;= e\" (is \"_ &gt;= ?rhs\")<br>\n     sorry<br>\n   also (xtrans) have \"?rhs &gt; f\" (is \"_ &gt; ?rhs\")<br>\n     sorry<br>\n   also (xtrans) have \"?rhs &gt; z\"<br>\n     sorry<br>\n   finally (xtrans) show ?thesis .<br>\nqed</p>\n<p>Alternatively, one can use \"declare xtrans [trans]\" and then<br>\n   leave out the \"(xtrans)\" above.<br>\n*)</p>\n<p>Greetings,<br>\n   Johannes</p>",
        "id": 294144242,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660846924
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThere is still no proper way to do it.  When I've introduced the concept <br>\nof calculational reasoning in Isar the &gt;= abbreviations did not exist, and <br>\nit was already known that it would not work. (The potential for confusion <br>\nwhen swapping order of concrete vs. abstract syntax was known long before <br>\nIsar, which was the reason for avoiding it in early Isabelle/HOL.)</p>\n<p>Later &gt;= was introduced nonetheless, when I was not looking / not quick <br>\nenough to explain the situation.  Since that time I have an item on my <br>\nTODO list to extend the \"...\" treatment of Isar to accomodate that <br>\nextension of the HOL library.  The &gt;= abbreviation is an example where <br>\nbug / feature are one and the same thing.</p>\n<p>Makarius</p>",
        "id": 294144282,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660846941
    }
]