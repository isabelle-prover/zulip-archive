[
    {
        "content": "<p>From: Thomas Arthur Leck Sewell &lt;<a href=\"mailto:tsewell@cse.unsw.EDU.AU\">tsewell@cse.unsw.EDU.AU</a>&gt;<br>\nHello there.</p>\n<p>I've been using Isabelle for some while, and have become a tad frustrated <br>\nwith the amount of time which is spent re-running proof scripts as I move <br>\nfrom file to file. Many of these proofs have been unchanged in my<br>\nrepository for years now, and have presumably been re-executed thousands <br>\nof times.</p>\n<p>The idea is to use the proof-recording mechanism to get a list of <br>\ndependencies when a theorem is proved, which goes in to some kind of <br>\ncache. When a theorem is stated, we can check whether it hits anything in <br>\nthe cache, and if so, whether the assumptions exist in the current context <br>\nand match term-for-term. If all of this is true, we can skip the proof, <br>\nsince it would probably have succeeded anyway. It's not perfect, and you'd <br>\ncertainly have to do regression tests regularly, but it could make a big <br>\ndifference to the cost of manipulating a large proof repository.</p>\n<p>The checks seem fairly straightforward, but I'm stuck on hooking this <br>\nthing into Isar. It's fairly clear that the hook for skipping the proof <br>\nshould be in begin_proof in toplevel.ML, where skip_proofs is checked <br>\nalready. The information available at this point (in a Proof.state) does <br>\nnot, however, tell us exactly what the final theorem will look like. <br>\nInstead we have an intermediate theorem and a list of assumptions.</p>\n<p>One option was to work entirely in terms of the intermediate theorem, <br>\ngiving us a good match for our skip hook. However, in a proof that ends<br>\n\"by auto\", the final Proof.state, the one manipulated by end_proof, is the <br>\none that existed before auto was run, and doesn't have a complete list of <br>\ndependencies.</p>\n<p>The next step down the abstraction chain seems to be to try to work with a <br>\nContext.proof, at which point the just-proved theorem seems to become<br>\nanonymous, and I get totally lost.</p>\n<p>Does anyone have a sensible idea for where to put the hook for trapping<br>\ncompleted theorems? Additionally, if this is done after the theorem is<br>\nconverted from its intermediate to its final form, is there an easy way to <br>\ncheck one against the other? (This may be a related question, since one <br>\nthing we can certainly do when deciding whether to skip is to skip and <br>\ncomplete the proof, and see what gets caught at our hooks).</p>\n<p>I appreciate that this may not be possible, and will be interested in the <br>\ndiscussion regardless.</p>\n<p>Yours,<br>\n    Thomas.</p>",
        "id": 294059231,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660822911
    }
]