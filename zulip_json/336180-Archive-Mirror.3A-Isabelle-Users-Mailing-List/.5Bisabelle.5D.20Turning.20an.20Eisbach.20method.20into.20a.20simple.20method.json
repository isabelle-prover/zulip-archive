[
    {
        "content": "<p>From: Simon Wimmer &lt;<a href=\"mailto:wimmersimon@gmail.com\">wimmersimon@gmail.com</a>&gt;<br>\nDear Eisbach experts,</p>\n<p>I have an Eisbach method, which per default acts as \"structured method\"<br>\n(like rule).<br>\nHowever, I would like to turn it into a \"simple method\" (like simp, blast<br>\nand friends) by essentially mimicking the behaviour of<br>\n  apply -<br>\n  apply &lt;Eisbach method&gt;</p>\n<p>Browsing the manuals and the source of <a href=\"http://method.ml\">method.ml</a>, I wasn't able to figure<br>\nout a way to do so. Is there an easy one?</p>\n<p>Simon</p>",
        "id": 294671660,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661173568
    },
    {
        "content": "<p>From: Daniel Matichuk &lt;<a href=\"mailto:Daniel.Matichuk@nicta.com.au\">Daniel.Matichuk@nicta.com.au</a>&gt;<br>\nHi Simon,</p>\n<p>Eisbach methods aren’t really structured or unstructured, they inherit that from the methods they comprise. This behaviour comes from how the combinators work, i.e. if you write “(-, rule)” then the “rule” invocation gets the using context. There is certainly a case for treating this more explicitly in Eisbach: I was never convinced one way or the other what a sensible default should be.</p>\n<p>My understanding is that you want to hide the “using” context from the Eisbach method, choosing instead to insert it into the goal state first. You are always free to write your own higher-order method in order to do this sort of fiddling:</p>\n<p>method_setup simple_method =<br>\n ‹Method_Closure.method_text &gt;&gt; (fn m =&gt; fn ctxt =&gt; fn facts =&gt;<br>\n   let<br>\n     val insert' = Method.Basic (K (Method.insert facts))<br>\n     val m' = Method.Combinator (Method.no_combinator_info, Method.Then, [insert', m])<br>\n   in Method_Closure.method_evaluate m' ctxt [] end)›</p>\n<p>method use_spec = simple_method ‹erule spec›</p>\n<p>lemma<br>\n  assumes P: \"∀x. P x\"<br>\n  shows \"P x\"<br>\n  using P<br>\n  by use_spec</p>\n<p>-Dan</p>\n<hr>\n<p>The information in this e-mail may be confidential and subject to legal professional privilege and/or copyright. National ICT Australia Limited accepts no liability for any damage caused by this email or its attachments.</p>",
        "id": 294671679,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661173574
    }
]