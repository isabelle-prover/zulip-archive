[
    {
        "content": "<p>From: Gerwin Klein &lt;<a href=\"mailto:gerwin.klein@nicta.com.au\">gerwin.klein@nicta.com.au</a>&gt;<br>\nWe are pleased to announce the availability of two new entries in the <br>\nArchive of Formal Proofs [http://afp.sf.net].</p>\n<p>--- Simpl ---<br>\n        A Sequential Imperative Programming Language<br>\n        Syntax, Semantics, Hoare Logics and Verification Environment</p>\n<p>by Norbert Schirmer</p>\n<p>Abstract:<br>\nWe present the theory of Simpl, a sequential imperative programming <br>\nlanguage. We introduce its syntax, its semantics (big and small-step <br>\noperational semantics) and Hoare logics for both partial as well as <br>\ntotal correctness. We prove soundness and completeness of the Hoare <br>\nlogic. We integrate and automate the Hoare logic in Isabelle/HOL to <br>\nobtain a practically usable verification environment for imperative <br>\nprograms.</p>\n<p>Simpl is independent of a concrete programming language but expressive<br>\nenough to cover all common language features: mutually recursive<br>\nprocedures, abrupt termination and exceptions, runtime faults, local<br>\nand global variables, pointers and heap, expressions with side<br>\neffects, pointers to procedures, partial application and closures,<br>\ndynamic method invocation and also unbounded nondeterminism.</p>\n<p>and</p>\n<p>BDD-Normalisation<br>\nby Veronika Ortner and Norbert Schirmer</p>\n<p>Abstract:<br>\nWe present the verification of the normalisation of a binary decision<br>\ndiagram (BDD). The normalisation follows the original algorithm<br>\npresented by Bryant in 1986 and transforms an ordered BDD in a<br>\nreduced, ordered and shared BDD. The verification is based on Hoare<br>\nlogics.</p>\n<p>Cheers,<br>\nGerwin</p>",
        "id": 294057601,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660822249
    }
]