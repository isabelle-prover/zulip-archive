[
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nXML<br>\nChristian Sternagel and René Thiemann</p>\n<p>This entry provides an XML library for Isabelle/HOL. This includes parsing and <br>\npretty printing of XML trees as well as combinators for transforming XML trees <br>\ninto arbitrary user-defined data. The main contribution of this entry is an <br>\ninterface (fit for code generation) that allows for communication between <br>\nverified programs formalized in Isabelle/HOL and the outside world via XML. This <br>\nlibrary was developed as part of the IsaFoR/CeTA project to which we refer for <br>\nexamples of its usage.</p>\n<p><a href=\"http://afp.sourceforge.net/entries/XML.shtml\">http://afp.sourceforge.net/entries/XML.shtml</a></p>\n<p>Certification Monads<br>\nChristian Sternagel and René Thiemann</p>\n<p>This entry provides several monads intended for the development of stand-alone <br>\ncertifiers via code generation from Isabelle/HOL. More specifically, there are <br>\nthree flavors of error monads (the sum type, for the case where all monadic <br>\nfunctions are total; an instance of the former, the so called check monad, <br>\nyielding either success without any further information or an error message; as <br>\nwell as a variant of the sum type that accommodates partial functions by <br>\nproviding an explicit bottom element) and a parser monad built on top. All of <br>\nthis monads are heavily used in the IsaFoR/CeTA project which thus provides many <br>\nexamples of their usage.</p>\n<p><a href=\"http://afp.sourceforge.net/entries/Certification_Monads.shtml\">http://afp.sourceforge.net/entries/Certification_Monads.shtml</a></p>\n<p>Many thanks, Christian and René!<br>\n<a href=\"/user_uploads/14278/W-BZNGfanXwtWp-1hEM4rrgp/smime.p7s\">smime.p7s</a></p>",
        "id": 294317099,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660925779
    }
]