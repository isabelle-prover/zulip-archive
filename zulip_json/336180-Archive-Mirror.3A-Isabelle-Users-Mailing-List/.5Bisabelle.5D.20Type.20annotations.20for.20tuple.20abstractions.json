[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear syntax experts,</p>\n<p>It seems as if I cannot add type annotations to whole abstraction patterns in <br>\nabstractions. Here is a minimal example:</p>\n<p>type_synonym pair = \"nat × nat\"<br>\n   term \"%(a, b) :: pair. a + b\"</p>\n<p>Here, Isabelle complains about a parse error at \".\" However,</p>\n<p>term \"%(a :: nat, b :: nat). a + b\"</p>\n<p>works as expected. I would prefer to use the type synonyms in the annotations because they <br>\nconvey more meaning than the plain component types.</p>\n<p>Am I just making a silly mistake or are type annotations for composite patterns not <br>\nsupported? If not, why not? What would need to change to support this?</p>\n<p>Is it only me or would other people find such annotations useful, too?</p>\n<p>Side remark: The same parsing errors also occur in other places where tuple syntax is <br>\nsupported, e.g.</p>\n<p>set comprehensions \"{(a, b) :: pair. a + b &gt; 10}\"<br>\n   big operators      \"∑(a, b) :: pair. a + b\"</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 294679791,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661176309
    }
]