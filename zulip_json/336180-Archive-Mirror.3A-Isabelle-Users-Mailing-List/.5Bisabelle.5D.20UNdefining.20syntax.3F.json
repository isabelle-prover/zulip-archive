[
    {
        "content": "<p>From: Rafal Kolanski &lt;<a href=\"mailto:rafalk@cse.unsw.edu.au\">rafalk@cse.unsw.edu.au</a>&gt;<br>\nHello,</p>\n<p>In light of the recent thoughts on Multisets, I was wondering if it's <br>\npossible to undefine previously defined syntax translations.</p>\n<p>For instance:</p>\n<p>definition<br>\n   single :: \"'a =&gt; 'a multiset\"  (\"{#_#}\") where<br>\n   \"{#a#} = Abs_multiset (lb. if b = a then 1 else 0)\"</p>\n<p>Let's say I want {#x#} to mean something else now, or I am not happy <br>\nwith that definition and wish to redefine it (like Tobias did in a <br>\nprevious post). Is it possible to forcibly remove it?</p>\n<p>Sincerely,</p>\n<p>Rafal Kolanski.</p>",
        "id": 294054080,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660820860
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nSince the theory context works in a monotonic fashion all the time, you <br>\ncannot remove logical content.  What you can do is introduce new <br>\ndefinitions that override old entries in the name space (beware of <br>\npotential confusion!).  The ``hide const ...'' facility might be <br>\noccasionally helpful to suppress former name space accesses.</p>\n<p>Moreover, starting with Isabelle2007, concrete syntax is managed in a more <br>\nflexible way, analogous to simp add/del declarations.  Cf. the commands <br>\n'notation' and 'no_notation', which can be used like this:</p>\n<p>no_notation single (\"{#_#}\")<br>\n    -- \"NB: need to specify original notation here, to delete it reliably\"</p>\n<p>notation my_single :: \"'a =&gt; 'a multiset\"  (\"{#_#}\")<br>\n    -- \"whatever syntax you like\"</p>\n<p>Makarius</p>",
        "id": 294054188,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660820893
    }
]