[
    {
        "content": "<p>From: Sven Schneider &lt;<a href=\"mailto:sven.schneider.pub@gmx.de\">sven.schneider.pub@gmx.de</a>&gt;<br>\nHi all,</p>\n<p>I have some old 2014 theory files that I might want to update to the<br>\ncurrent version.<br>\nApparently something has changed and I am unable to find anything in the<br>\nNEWS about it.<br>\nIs there a minimal workaround that requires minimal effort?<br>\nThere are very many instances of this sort in the proofs...</p>\n<p>Best regards</p>\n<p>example<br>\n==========================<br>\ntheory  Test<br>\nimports<br>\n  Main<br>\nbegin</p>\n<p>lemma TEST: \"foo\"<br>\napply(subgoal_tac \"?X\")</p>\n<p>==========================</p>\n<p>output<br>\n=============     <br>\n\"Unbound schematic variable: ?X\"<br>\n=============</p>",
        "id": 294708098,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661181272
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe proper way to do it is via \"eigen-context\" like this:</p>\n<p>apply (subgoal_tac \"X\" for X)</p>\n<p>Unbound schematic variables violate the Isabelle/Isar context<br>\ndiscipline. The more tools are properly localized, the less they can<br>\nsneak into proof texts.</p>\n<p>Here is also a relavant NEWS entry from Isabelle2015:</p>\n<ul>\n<li>Proof methods with explicit instantiation (\"rule_tac\", \"subgoal_tac\"<br>\netc.) allow an optional context of local variables ('for' declaration):<br>\nthese variables become schematic in the instantiated theorem; this<br>\nbehaviour is analogous to 'for' in attributes \"where\" and \"of\".<br>\nConfiguration option rule_insts_schematic (default false) controls use<br>\nof schematic variables outside the context. Minor INCOMPATIBILITY,<br>\ndeclare rule_insts_schematic = true temporarily and update to use local<br>\nvariable declarations or dummy patterns instead.<p>Makarius</p>\n</li>\n</ul>",
        "id": 294708143,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661181288
    }
]