[
    {
        "content": "<p>From: Joshua Chen &lt;<a href=\"mailto:joshua.chen@uibk.ac.at\">joshua.chen@uibk.ac.at</a>&gt;<br>\nDear Isabelle list,</p>\n<p>I have a proof that works:</p>\n<p>have &lt;statement&gt; using &lt;facts&gt;<br>\n    proof (move, infer_ty) qed (auto simp: ty)</p>\n<p>and one that doesn't:</p>\n<p>have &lt;statement&gt; using &lt;facts&gt;<br>\n    by (move, infer_ty) (auto simp: ty)</p>\n<p>The manual says that \"by\" abbreviates \"proof ... qed\" but with <br>\nadditional backtracking, what is it about this that could cause \"by\" to <br>\nfail and \"qed\" to succeed?</p>\n<p>I'm unsure if it would be relevant, but infer_ty is a method that only <br>\nchanges the proof context (by adding some theorems to context data) <br>\nwithout changing the goal.</p>\n<p>Best,<br>\nJosh</p>",
        "id": 294753025,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661196189
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 22/03/2019 17:53, Joshua Chen wrote:</p>\n<blockquote>\n<p>I have a proof that works:</p>\n<p>have &lt;statement&gt; using &lt;facts&gt;<br>\n   proof (move, infer_ty) qed (auto simp: ty)</p>\n<p>and one that doesn't:</p>\n<p>have &lt;statement&gt; using &lt;facts&gt;<br>\n   by (move, infer_ty) (auto simp: ty)</p>\n<p>The manual says that \"by\" abbreviates \"proof ... qed\" but with<br>\nadditional backtracking, what is it about this that could cause \"by\" to<br>\nfail and \"qed\" to succeed?</p>\n</blockquote>\n<p>The 'by' step can enumerate all possibilities for the initial proof<br>\nmethod (move, infer_ty) and then try the auto step and then finish<br>\n(which is implicit). The proof-qed sequence only uses the first<br>\npossibility of 'proof' and 'qed' needs to finish that without further<br>\nbacktracking.</p>\n<p>You can try to put a few 'back' commands between 'proof' and 'qed'<br>\nabove, to see if relevant alternative states emerge in between.</p>\n<blockquote>\n<p>I'm unsure if it would be relevant, but infer_ty is a method that only<br>\nchanges the proof context (by adding some theorems to context data)<br>\nwithout changing the goal.</p>\n</blockquote>\n<p>Other things might go wrong here, as this sounds somewhat non-standard.</p>\n<p>Makarius</p>",
        "id": 294753059,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661196204
    },
    {
        "content": "<p>From: Joshua Chen &lt;<a href=\"mailto:joshua.chen@uibk.ac.at\">joshua.chen@uibk.ac.at</a>&gt;</p>\n<blockquote>\n<p>The 'by' step can enumerate all possibilities for the initial proof <br>\nmethod (move, infer_ty) and then try the auto step and then finish <br>\n(which is implicit). The proof-qed sequence only uses the first <br>\npossibility of 'proof' and 'qed' needs to finish that without further <br>\nbacktracking.</p>\n<p>Right, so this is what I don't yet fully understand, if 'by' enumerates <br>\nall possibilities, what is preventing it from finding the same proof as <br>\n'proof...qed'? Does the latter somehow force the methods to try harder, <br>\nwhile they would give up earlier with backtracking?</p>\n</blockquote>\n<blockquote>\n<p>Other things might go wrong here, as this sounds somewhat non-standard.<br>\nJust as an aside, the same situation has happened in Isabelle/HoTT too, <br>\nthere only Eisbach methods are used so there shouldn't be the same <br>\ncomplications.</p>\n</blockquote>\n<p>Best,<br>\nJosh</p>\n<p>On 3/23/19 11:38 AM, Makarius wrote:</p>\n<blockquote>\n<p>On 22/03/2019 17:53, Joshua Chen wrote:</p>\n<blockquote>\n<p>I have a proof that works:</p>\n<p>have &lt;statement&gt; using &lt;facts&gt;<br>\n    proof (move, infer_ty) qed (auto simp: ty)</p>\n<p>and one that doesn't:</p>\n<p>have &lt;statement&gt; using &lt;facts&gt;<br>\n    by (move, infer_ty) (auto simp: ty)</p>\n<p>The manual says that \"by\" abbreviates \"proof ... qed\" but with<br>\nadditional backtracking, what is it about this that could cause \"by\" to<br>\nfail and \"qed\" to succeed?<br>\nThe 'by' step can enumerate all possibilities for the initial proof<br>\nmethod (move, infer_ty) and then try the auto step and then finish<br>\n(which is implicit). The proof-qed sequence only uses the first<br>\npossibility of 'proof' and 'qed' needs to finish that without further<br>\nbacktracking.</p>\n</blockquote>\n<p>You can try to put a few 'back' commands between 'proof' and 'qed'<br>\nabove, to see if relevant alternative states emerge in between.</p>\n<blockquote>\n<p>I'm unsure if it would be relevant, but infer_ty is a method that only<br>\nchanges the proof context (by adding some theorems to context data)<br>\nwithout changing the goal.<br>\nOther things might go wrong here, as this sounds somewhat non-standard.</p>\n</blockquote>\n<p>Makarius<br>\n</p>\n</blockquote>",
        "id": 294753066,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661196207
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI would say there is something odd with the context update of the proof<br>\nmethod. (In my explanation above, I was actually talking about typical<br>\nsituations where 'by' works but 'proof' ... 'qed' fails.)</p>\n<p>If you can isolate a well-defined example, it is easier to look what<br>\nreally happens.</p>\n<p>Makarius</p>",
        "id": 294753080,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661196214
    }
]