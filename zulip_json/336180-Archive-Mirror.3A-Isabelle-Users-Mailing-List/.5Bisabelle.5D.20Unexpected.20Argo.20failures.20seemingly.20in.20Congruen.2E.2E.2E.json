[
    {
        "content": "<p>From: <a href=\"mailto:mandrykin@ispras.ru\">mandrykin@ispras.ru</a><br>\nHello!</p>\n<p>A bit of context: we are currently experimenting with an approach to <br>\nmore reliable SMT proof replay in Isabelle/HOL with the aim to later <br>\napply it to low-level code verification, where there are typically many <br>\nsimilar and fairly uninteresting goals that can be easily discharged by <br>\nSMT. The approach is based on deterministic quantifier instantiation in <br>\nIsabelle/HOL itself, so that the solver is provided with a <br>\nquantifier-free problem, which is always decideble, making the proof <br>\nreplay very stable and even enabling partial model resonstruction of <br>\ncounterexamples (a preliminary description, if interesting: <br>\n<a href=\"https://forge.ispras.ru/attachments/download/7602/TSMT_Tutorial.pdf\">https://forge.ispras.ru/attachments/download/7602/TSMT_Tutorial.pdf</a>, but <br>\nfor now the reconstruction of deterministic one-liners from normal SMT <br>\nproofs is not yet properly implemented (requires manual efforts)). So, <br>\nnaturally, we explored the possibility to replay the proofs within <br>\nIsabelle/HOL itself using its internal solvers such as Metis and Argo <br>\n(for the fragment without linear integer arithmetic). While we had some <br>\nsuccess with Metis+our instantiation (although it's not consistently <br>\nfaster than SMT proof replay), we encountered unexpected failures in <br>\nArgo, particularly in its congruence closure propagation. I attach a <br>\ntheory with two goals, where Argo fails with an unexpected exception. <br>\nThe second goal is in fact valid and can be discharged with Metis. A <br>\nmore general question is where is it appropriate to reports such <br>\nproblems and whether Argo is maintained in the upstream or it would be <br>\nreasonable to try investigating this ourselves and possibly suggest a <br>\npatch</p>\n<p>Regards,<br>\nMikhail<br>\n<a href=\"/user_uploads/14278/ak45ewtCbPXC2uOEoXiEM_XP/Bug.thy\">Bug.thy</a></p>",
        "id": 294830195,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661246266
    }
]