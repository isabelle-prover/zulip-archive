[
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nNesting two contexts, where the inner context makes assumptions about<br>\nfixed variables from the outer context, results in unexpected<br>\nall-quantified assumptions. Consider this minimal example:</p>\n<p>context<br>\n  fixes I :: \"'a set\"<br>\nbegin</p>\n<p>context<br>\n    assumes I: \"finite I\"<br>\n  begin<br>\n    lemma test: \"something_about I\"<br>\n    sorry<br>\n  end</p>\n<p>end</p>\n<p>Looking at the fact <code>test</code> from outside both contexts with <code>thm test</code>, I<br>\nget:</p>\n<p>(!!I. finite I) ==&gt; ?something_about ?I  [!]</p>\n<p>Obviously, this fact says something completely different. Am I doing<br>\nsomething wrong here?</p>\n<p>(Also, what does the <code>[!]</code> mean after the fact?)</p>",
        "id": 294163803,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854227
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nThis means that this theorem is not really proven (in most cases this <br>\nmeans, that you used \"sorry\", as you did above).</p>",
        "id": 294163815,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854235
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nThis issue arises already after leaving the inner context:</p>\n<p>context<br>\n   fixes I :: \"'a set\" assumes nonempty: \"I ≠ {}\"<br>\nbegin</p>\n<p>context<br>\n     assumes I: \"finite I\"<br>\n   begin<br>\n     lemma card_neq_0: \"card I ≠ 0\" using I nonempty by auto<br>\n   end</p>\n<p>thm card_neq_0</p>\n<p>This gives us \"(⋀I. finite I) ⟹ card I ≠ 0 \", i.e. the I in the <br>\nassumption is generalized (but not the one in the conclusion). I first <br>\nassumed, the I in the inner context might be different from the one in <br>\nthe outer context, but this is not the case as the \"I ~= {}\" can be used <br>\nin the inner context.</p>\n<p>But I don't have any idea how these contexts work or are supposed to work.</p>\n<p>-- Lars</p>",
        "id": 294163830,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854241
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\n(I already posted this several months ago, got no replies, and forgot<br>\nabout it. I'm sending it again in case there's a solution/workaround<br>\nwhich I've missed. The original thread is at<br>\n&lt;<a href=\"https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2012-June/msg00052.html\">https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2012-June/msg00052.html</a>&gt;.)</p>\n<p>Nesting two contexts, where the inner context makes assumptions about<br>\nfixed variables from the outer context, results in unexpected<br>\nall-quantified assumptions. Consider this minimal example:</p>\n<p>context<br>\n  fixes I :: \"'a set\"<br>\nbegin</p>\n<p>context<br>\n    assumes I: \"finite I\"<br>\n  begin<br>\n    lemma test: \"something_about I\"<br>\n    sorry<br>\n  end</p>\n<p>end</p>\n<p>Looking at the fact <code>test</code> from outside both contexts with <code>thm test</code>, I<br>\nget:</p>\n<p>(!!I. finite I) ==&gt; ?something_about ?I</p>\n<p>Obviously, this fact says something completely different. Am I doing<br>\nsomething wrong here?</p>",
        "id": 294224359,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660899194
    },
    {
        "content": "<p>From: Christian Sternagel &lt;<a href=\"mailto:c-sterna@jaist.ac.jp\">c-sterna@jaist.ac.jp</a>&gt;<br>\nDear Lars,</p>\n<p>it seems that your message was at least considered, see</p>\n<p><a href=\"https://mailmanbroy.informatik.tu-muenchen.de/pipermail/isabelle-dev/2012-October/003308.html\">https://mailmanbroy.informatik.tu-muenchen.de/pipermail/isabelle-dev/2012-October/003308.html</a></p>\n<p>Unfortunately that was not visible on the isabelle-users mailing list. <br>\nAs far as I can tell (from looking at the development version of <br>\nIsabelle), the next Isabelle release will behave as expected on your <br>\nexample, i.e., the result will be:</p>\n<p>finite ?I ⟹ ?something_about ?I</p>\n<p>cheers</p>\n<p>chris</p>",
        "id": 294224381,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660899210
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@kit.edu\">andreas.lochbihler@kit.edu</a>&gt;<br>\nHi Lars,</p>\n<p>Makarius has already fixed this in the development branch, your example works <br>\nthere. This will also work in the next Isabelle release as expected. For the <br>\nmoment, you cannot do much about this in Isabelle2012. If you absolutely depend <br>\non this working correct, you could try and switch to the development version, <br>\nbut this incurs a lot of extra trouble.</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 294224428,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660899235
    }
]