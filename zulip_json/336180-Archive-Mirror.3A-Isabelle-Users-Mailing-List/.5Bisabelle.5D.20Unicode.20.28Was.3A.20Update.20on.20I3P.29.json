[
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:mail@joachim-breitner.de\">mail@joachim-breitner.de</a>&gt;<br>\nHi,</p>\n<p>thanks. Unfortunately, the auto-updater does not work for me (no idea<br>\nwhy, \"strace -e network\" does not show anything obvious and I have no<br>\nproxy...). Anyways, I prefer installing updating software manually :-)</p>\n<p>I have another issue with i3p to report that is more severe. In my<br>\ncurrent project, I sometimes get quite large goals. When that happens,<br>\ni3p becomes very slow when I move backwards and forwards in my theory.<br>\nMy ProofGeneral using colleges do not have this problem.</p>\n<p>You can check yourself if you clone git://git.nomeata.de/funcCF.git,<br>\ncheckout revision b625bc51b6a4372f73d807dcd4e79ccedcf2a530 and run<br>\nCFGraph/HOLCFExSV.thy (the final lemma fails in this revision, don‚Äôt<br>\nworry about that). This took &gt;15 minutes on my machine. I then reduced<br>\nthe size of the goals by replacing<br>\n    proof (cases \"(d,ds,ve,b)\" rule:fstate_case)<br>\nwith<br>\n    proof (cases \"(d,ds,ve,b)\" rule:fstate_case,<br>\n           auto split:d.split prim.split simp del:Un_insert_left Un_insert_right)</p>\n<p>which is probably bad style but helped me reduce the time to run the<br>\ntheory to a bearable 1min15s. This is of course a rather big issue, as I<br>\nmight not always be able (or willing) to find a work-around like this. </p>\n<p>Is there anything that can be done about this, or is this an inherent<br>\nconsequence of the i3p design?</p>\n<p>Nevertheless I‚Äôm a happy i3p user,<br>\nJoachim<br>\n<a href=\"/user_uploads/14278/YqpJvjkGNyTZg1BadCNn6oUr/signature.asc\">signature.asc</a></p>",
        "id": 294115386,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838135
    },
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:mail@joachim-breitner.de\">mail@joachim-breitner.de</a>&gt;<br>\nDear Holger,</p>\n<p>I‚Äôm not sure what happened, but it seems it broke somehow: I tried to<br>\nedit this file:<br>\n<a href=\"http://isabelle.in.tum.de/repos/AFP/file/tip/thys/Free-Groups/Isomorphisms.thy\">http://isabelle.in.tum.de/repos/AFP/file/tip/thys/Free-Groups/Isomorphisms.thy</a><br>\nand i3p would fail at \\&lt;Z&gt; and \\&lt;one&gt; (but not at \\&lt;F&gt;). The error<br>\nmessage at \\&lt;Z&gt; is:</p>\n<p>Inner lexical error at: √∞¬ù¬í¬µ, mult = op +, one = 0::int ‚¶à<br>\nFailed to parse proposition<br>\nAt command \"abbreviation\".</p>\n<p>so there is clearly some encoding problem. Notice that \\&lt;F&gt; and \\&lt;Z&gt;<br>\nhave quite different code points:<br>\n\\&lt;F&gt;                    code: 0x002131  font: Isabelle<br>\n\\&lt;Z&gt;                    code: 0x01d4b5  font: Isabelle</p>\n<p>All this is on Debian Linux, using a UTF8 locale and with Isabelle<br>\n2009-2.</p>\n<p>A similar, but not i3p specific, problem is that Isabelle views \\&lt;cdot&gt;<br>\nas U+22C5 DOT OPERATOR. I have ¬∑ (U+00B7 MIDDLE DOT) on my keyboard¬π,<br>\nwhich causes a lexical error in Isabelle as well. As I hope that never<br>\never people would want to define ¬∑ and ‚ãÖ differently in Isabelle, would<br>\nit be possible to accept both U+00B7 and U+22C5 for \\&lt;cdot&gt;?</p>\n<p>Thanks,<br>\nJoachim</p>\n<p>¬π using this xmodmap line:<br>\nkeycode  60 = period colon period colon periodcentered division periodcentered<br>\n<a href=\"/user_uploads/14278/Tcmz3S3hAQNxSxjQ67NBengI/signature.asc\">signature.asc</a></p>",
        "id": 294117077,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838626
    },
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:mail@joachim-breitner.de\">mail@joachim-breitner.de</a>&gt;<br>\nHi again,</p>\n<p>I should add that this sequence of four characters is the utf8<br>\nrepresentation of ùíµ (\\&lt;Z&gt;), re-encoded as utf8:<br>\n$ echo -n √∞¬ù¬í¬µ|iconv -futf8 -tlatin1<br>\nùíµ<br>\n$ echo -n ùíµ | iconv -flatin1 -tutf8<br>\n√∞¬ù¬í¬µ</p>\n<p>Maybe i3p has problems with unicode character code points that do not<br>\nfit in one 16-bit number?</p>\n<p>Greetings,<br>\nJoachim<br>\n<a href=\"/user_uploads/14278/EOkliRv7uOE8ulhO5N8zhjmT/signature.asc\">signature.asc</a></p>",
        "id": 294117106,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838632
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThis is a deeper problem of the way Unicode works on the JVM, see also <br>\n<a href=\"http://download.oracle.com/javase/6/docs/api/java/lang/Character.html\">http://download.oracle.com/javase/6/docs/api/java/lang/Character.html</a></p>\n<p>Few Java applications get this specification of \"surrogate code points\" <br>\nright, because this situation occurs rarely.  UTF-8 works generally better <br>\nbecause the multi-character sequences are the rule, not the exception.</p>\n<p>It is unlikely that this will get fundamentally better on the JVM, <br>\nalthough some people have already started joking that Oracle will soon <br>\nidentify \"\" and null for type String ...</p>\n<p>The easyiest fix is to remove these non-16bit codes from the table of <br>\nIsabelle symbol interpretation.</p>\n<p>Makarius</p>",
        "id": 294117142,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838637
    },
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:mail@joachim-breitner.de\">mail@joachim-breitner.de</a>&gt;<br>\nHi,</p>\n<p>Yes, this is a work-around (although I had to edit the copy of the<br>\nsymbols file in i3p/modules/org-i3p-fontsupport.jar). A proper fix would<br>\nbe nice, though ‚Äì Unicode is just too shiny :-)</p>\n<p>Greetings,<br>\nJoachim<br>\n<a href=\"/user_uploads/14278/1wLgRroOFNUZM8c-E8xoq_7k/signature.asc\">signature.asc</a></p>",
        "id": 294118110,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838902
    },
    {
        "content": "<p>From: Holger Gast &lt;<a href=\"mailto:gast@informatik.uni-tuebingen.de\">gast@informatik.uni-tuebingen.de</a>&gt;<br>\nHi Joachim,</p>\n<p>Not in general; when adding the support for true code points in August,<br>\nI already wrote a number of tests to ensure that theories do not get broken<br>\nby editing them. Unfortunately, this did not catch a remaining bug<br>\nin the on-the-fly encoding in the driver ;(</p>\n<p>This is fixed now (check for updates) and a corresponding test is added<br>\nto make sure it will work more smoothly in the future.</p>\n<p>Thanks for pointing this out,</p>\n<p>Holger</p>",
        "id": 294118299,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838971
    }
]