[
    {
        "content": "<p>From: John Munroe &lt;<a href=\"mailto:munddr@gmail.com\">munddr@gmail.com</a>&gt;<br>\nHi all,</p>\n<p>For the following:</p>\n<p>axiomatization<br>\nf :: \"real =&gt; real\" and<br>\nc :: real<br>\nwhere<br>\nax : \"f c = 0\"</p>\n<p>theorem \"EX (func::real =&gt; real) x. func x = 0\"<br>\napply (intro exI)<br>\napply (rule ax)<br>\nprf;<br>\ndone</p>\n<p>The partial proof gives:</p>\n<p>protectI % EX func x. func x = 0 %%<br>\n (exI % (%x. EX xa. x xa = 0) % (%a. a) %% (OfClass type_class %<br>\nTYPE(real =&gt; real)) %%<br>\n   (exI % (%x. x = 0) % f c %% (OfClass type_class % TYPE(real)) %%<br>\n<a href=\"http://thm.Test.ax\">thm.Test.ax</a>))</p>\n<p>Thus, func is unified to %a. a in the proof. Are there ways to make<br>\nfunc unify to f instead? If I'll need my own tactic, then is there a<br>\ncurrent implementation that I can use as a reference?</p>\n<p>Thanks for the help.<br>\nJohn</p>",
        "id": 294116743,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838529
    }
]