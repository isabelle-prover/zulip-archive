[
    {
        "content": "<p>From: Martin Raszyk &lt;<a href=\"mailto:m.raszyk@gmail.com\">m.raszyk@gmail.com</a>&gt;<br>\nDear Isabelle fellows,</p>\n<p>I would like to report an inefficiency in the implementation of sets using<br>\nRBTs. When computing the union of two sets represented using RBTs, the<br>\napproach of Appel [1] is used. Section 6 of this paper presents three ways<br>\nof computing the union and one of them is chosen dynamically by<br>\napproximating the number of elements in the sets by the black-node height<br>\nof the respective RBTs.</p>\n<p>However, such an approximation can be quite imprecise. As an example, we<br>\ncan consider computing the union of n disjoint sets of l integers each,<br>\nresulting in a set of n * l integers. At the i-th step, we compute the<br>\nunion of a set with l elements and a set with i * l elements. Let us fix n<br>\n= l = 200. Then at the 163-th step, the two RBTs with 200 and 32600<br>\nelements, respectively, are still approximated to be of the same size which<br>\nresults in suboptimal performance. My experiment can be reproduced using<br>\nthe artifact on my GitHub repository:<br>\n<a href=\"https://github.com/mraszyk/RBT_height\">https://github.com/mraszyk/RBT_height</a></p>\n<p>I believe it might help to track the black-node height of an RBT in each<br>\nbranching node explicitly. It might also be beneficial to implement the<br>\napproach for red-black tree set operations discussed on Wikipedia [2] which<br>\nachieves a better asymptotic complexity and is claimed to be optimal in<br>\nterms of the number of comparisons. Hence, I would be interested in your<br>\nopinion on these optimizations and how they could be best accomplished. I<br>\ncan offer my help there.</p>\n<p>Best regards,<br>\nMartin</p>\n<p>[1] Appel, A.W.: Efficient verified red-black trees (2011),<br>\n<a href=\"http://www.cs.princeton.edu/~appel/papers/redblack.pdf\">http://www.cs.princeton.edu/~appel/papers/redblack.pdf</a><br>\n[2]<br>\n<a href=\"https://en.wikipedia.org/wiki/Red%E2%80%93black_tree#Set_operations_and_bulk_operations\">https://en.wikipedia.org/wiki/Red%E2%80%93black_tree#Set_operations_and_bulk_operations</a></p>",
        "id": 294830477,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661246394
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nDear Martin,</p>\n<p>I think the right way to go is via the Join/Split approach discussed in your <br>\nwikipedia link. We do even have an implementation of that in <br>\nHOL/Data_Structures/Set2_Join_RBT.thy.</p>\n<p>Tobias<br>\n<a href=\"/user_uploads/14278/tZnKU0MXqNQpQYFwKEDoKTJW/smime.p7s\">smime.p7s</a></p>",
        "id": 294830484,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661246400
    }
]