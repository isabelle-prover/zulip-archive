[
    {
        "content": "<p>From: Matthew Fernandez &lt;<a href=\"mailto:matthew.fernandez@nicta.com.au\">matthew.fernandez@nicta.com.au</a>&gt;<br>\nHi all,</p>\n<p>Section 3.3 of the Isabelle System Manual [0] indicates that you can use<br>\nthe environment variable ISABELLE_BUILD_OPTIONS to pass extra -o<br>\narguments to <code>isabelle build</code>. I can't get this to work and passing -v<br>\nto <code>isabelle build</code> confirms that ISABELLE_BUILD_OPTIONS is blank.<br>\nFurthermore I get the following behaviour:</p>\n<p>On Isabelle 2012:<br>\n  $ ISABELLE_BUILD_OPTIONS=foo isabelle getenv ISABELLE_BUILD_OPTIONS<br>\n  ISABELLE_BUILD_OPTIONS=foo</p>\n<p>On Isabelle 2013:<br>\n  $ ISABELLE_BUILD_OPTIONS=foo isabelle getenv ISABELLE_BUILD_OPTIONS<br>\n  ISABELLE_BUILD_OPTIONS=</p>\n<p>It looks to me as if Isabelle 2013 is cleaning this variable. Am I doing<br>\nsomething wrong? How is ISABELLE_BUILD_OPTIONS supposed to be used?</p>\n<p>Thanks,<br>\nMatthew</p>\n<p>[0] docs/system.pdf</p>\n<hr>\n<p>The information in this e-mail may be confidential and subject to legal professional privilege and/or copyright. National ICT Australia Limited accepts no liability for any damage caused by this email or its attachments.</p>",
        "id": 294231269,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902609
    },
    {
        "content": "<p>From: Gerwin Klein &lt;<a href=\"mailto:Gerwin.Klein@nicta.com.au\">Gerwin.Klein@nicta.com.au</a>&gt;<br>\nHi Matt,</p>\n<p>you usually set these variables in ~/.isabelle/etc/settings. This gets loaded after the default etc/settings which probably sets the build options to empty.</p>\n<p>Cheers,<br>\nGerwin</p>",
        "id": 294231282,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902617
    },
    {
        "content": "<p>From: Matthew Fernandez &lt;<a href=\"mailto:matthew.fernandez@nicta.com.au\">matthew.fernandez@nicta.com.au</a>&gt;<br>\nOn 01/02/13 22:58, Makarius wrote:</p>\n<blockquote>\n<p>On Thu, 31 Jan 2013, Matthew Fernandez wrote:</p>\n<blockquote>\n<p>Section 3.3 of the Isabelle System Manual [0] indicates that you can use<br>\nthe environment variable ISABELLE_BUILD_OPTIONS to pass extra -o<br>\narguments to <code>isabelle build</code>. I can't get this to work and passing -v<br>\nto <code>isabelle build</code> confirms that ISABELLE_BUILD_OPTIONS is blank.<br>\nFurthermore I get the following behaviour:</p>\n<p>On Isabelle 2012:<br>\n$ ISABELLE_BUILD_OPTIONS=foo isabelle getenv ISABELLE_BUILD_OPTIONS<br>\nISABELLE_BUILD_OPTIONS=foo</p>\n<p>On Isabelle 2013:<br>\n$ ISABELLE_BUILD_OPTIONS=foo isabelle getenv ISABELLE_BUILD_OPTIONS<br>\nISABELLE_BUILD_OPTIONS=</p>\n<p>It looks to me as if Isabelle 2013 is cleaning this variable. Am I doing<br>\nsomething wrong? How is ISABELLE_BUILD_OPTIONS supposed to be used?</p>\n</blockquote>\n<p>It was already pointed out that Isabelle settings are usually statically<br>\nscoped, and defined within the Isabelle environment, not outside it via<br>\nraw \"env\".  (The latter works in exceptional situations only.)</p>\n</blockquote>\n<p>Thanks, Makarius. After talking with Gerwin out-of-band I think I've<br>\nclarified my own thinking about this. My confusion stemmed from the fact<br>\nthat you can use <code>isabelle getenv</code> with other environment variables. I<br>\nwas expecting to have ISABELLE_BUILD_OPTIONS in my shell environment<br>\noverride that in my settings file.</p>\n<blockquote>\n<p>The command-line option -v (verbose) of the \"isabelle build\" tool is not<br>\nan ISABELLE_BUILD_OPTION in that sense.  The predecessor tool usedir did<br>\nknow the first-class notion of \"system options\" of Isabelle2013 yet, so<br>\nit merely imitated that by allowing all command-line options to be made<br>\npersistent in a slightly odd way.</p>\n</blockquote>\n<p>I think I was a bit unclear here. I was not expecting to be able to<br>\nprovide -v via ISABELLE_BUILD_OPTIONS. I was merely using -v to get the<br>\noutput of what ISABELLE_BUILD_OPTIONS was set to. My use case was trying<br>\nto provide \"document=pdf\" via this variable. From what I've gathered,<br>\nthe only ways to do this are with -o, via my settings file or in the<br>\nsession definition in ROOT.</p>\n<blockquote>\n<p>The general approach of the new isabelle build tool is to have system<br>\noptions to configure it the background (see also \"isabelle option\" to<br>\ninspect these), and command-line options to control it in the forground;<br>\nthe command-line option -o allows to modify system options on the spot.</p>\n<p>You normally control isabelle build by \"letter soup\" as for Unix tar,<br>\nfor example.  So its command-line options are more like actions.  See<br>\nthe examples in the system manual.</p>\n<p>Also note that the \"isabelle build_dialog\" that is built into \"isabelle<br>\njedit\" already provides a simplified build interface that is sufficient<br>\nin many situations.  Another notably short-cut is \"isabelle mkroot\" to<br>\nproduce a ROOT setup with certain build options.</p>\n<p>None of this will allow you to hardwire verbose mode though. You make<br>\nyour own isabelle tool script doing that, or just practice certain build<br>\nletter-soup habits.</p>\n<p>Makarius</p>\n</blockquote>\n<hr>\n<p>The information in this e-mail may be confidential and subject to legal professional privilege and/or copyright. National ICT Australia Limited accepts no liability for any damage caused by this email or its attachments.</p>",
        "id": 294233100,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660903463
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nIt was already pointed out that Isabelle settings are usually statically <br>\nscoped, and defined within the Isabelle environment, not outside it via <br>\nraw \"env\".  (The latter works in exceptional situations only.)</p>\n<p>The command-line option -v (verbose) of the \"isabelle build\" tool is not <br>\nan ISABELLE_BUILD_OPTION in that sense.  The predecessor tool usedir did <br>\nknow the first-class notion of \"system options\" of Isabelle2013 yet, so it <br>\nmerely imitated that by allowing all command-line options to be made <br>\npersistent in a slightly odd way.</p>\n<p>The general approach of the new isabelle build tool is to have system <br>\noptions to configure it the background (see also \"isabelle option\" to <br>\ninspect these), and command-line options to control it in the forground; <br>\nthe command-line option -o allows to modify system options on the spot.</p>\n<p>You normally control isabelle build by \"letter soup\" as for Unix tar, for <br>\nexample.  So its command-line options are more like actions.  See the <br>\nexamples in the system manual.</p>\n<p>Also note that the \"isabelle build_dialog\" that is built into \"isabelle <br>\njedit\" already provides a simplified build interface that is sufficient in <br>\nmany situations.  Another notably short-cut is \"isabelle mkroot\" to <br>\nproduce a ROOT setup with certain build options.</p>\n<p>None of this will allow you to hardwire verbose mode though. You <br>\nmake your own isabelle tool script doing that, or just practice certain <br>\nbuild letter-soup habits.</p>\n<p>Makarius</p>",
        "id": 294234067,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660903935
    }
]