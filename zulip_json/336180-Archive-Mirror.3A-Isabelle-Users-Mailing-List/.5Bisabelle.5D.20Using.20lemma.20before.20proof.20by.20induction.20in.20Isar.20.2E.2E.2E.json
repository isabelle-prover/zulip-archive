[
    {
        "content": "<p>From: Andreas Halkjær From &lt;<a href=\"mailto:andro.from@gmail.com\">andro.from@gmail.com</a>&gt;<br>\nHey,</p>\n<p>I ran into this issue in a larger theory (*) but it can be boiled down at<br>\nleast to the following (silly) theory:</p>\n<p>theory THM0_741 imports Main begin</p>\n<p>datatype 'a s  = S 'a</p>\n<p>datatype 'a t = T ‹'a s›</p>\n<p>primrec f :: ‹'a s ⇒ 'a set› where<br>\n  ‹f (S x) = {x}›</p>\n<p>primrec g :: ‹'a t ⇒ 'a set› where<br>\n  ‹g (T x) = f x›</p>\n<p>lemma trigger: ‹f t ⊆ UNIV›<br>\n  by blast</p>\n<p>lemma ‹g p ⊆ UNIV›<br>\n  using trigger (* raises: *)<br>\nproof (induct p)<br>\n  case (T x)    (* exception THM 0 raised (line 741 of \"thm.ML\"):<br>\nassume: variables *)<br>\n  then show ?case<br>\n    by simp<br>\nqed</p>\n<p>end</p>\n<p>Also available here:<br>\n<a href=\"https://gist.github.com/andreasfrom/d4b87d0bbac6d94742ecdfd8605369f7\">https://gist.github.com/andreasfrom/d4b87d0bbac6d94742ecdfd8605369f7</a></p>\n<p>It's unclear from the error what the problem is.<br>\nIn the larger theory I worked around it by moving the <code>using</code> into each<br>\ncase that needed it.</p>\n<p>Andreas</p>\n<p>*:<br>\n<a href=\"https://bitbucket.org/isafol/isafol/src/91dc3bf2cf5c70a61aab2bcdc9b4c8f6f995d321/FOL_Berghofer/FOL_Berghofer.thy?fileviewer=file-view-default#FOL_Berghofer.thy-3340\">https://bitbucket.org/isafol/isafol/src/91dc3bf2cf5c70a61aab2bcdc9b4c8f6f995d321/FOL_Berghofer/FOL_Berghofer.thy?fileviewer=file-view-default#FOL_Berghofer.thy-3340</a></p>",
        "id": 294723322,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661185598
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Andreas,</p>\n<p>I agree that the error message is suboptimal. It occurs when the subgoal corresponding to <br>\nthe case contains schematic (type) variables. In your example, the lemma trigger <br>\nintroduces a schematic type variable ?'a into the goal state, on which the \"case\" command <br>\nchokes. If you instantiate the type variable, the error goes away. For example:</p>\n<p>lemma ‹g p ⊆ UNIV› for p :: \"'a t\"<br>\n   using trigger[where ?'a='a]</p>\n<p>For schematic term variables, the induct(ion) proof method has an optional argument <br>\n\"taking: ...\" where the instantiations can be given. Unfortunately, there is no equivalent <br>\nfor type variables.</p>\n<p>A general remark: You should feed only those assumptions into the induction proof method <br>\nthat are consumed by the induction rule or mention some of the induction variables. <br>\nEveything else such as the trigger should really be added with \"using\" in the relevant <br>\ncases. Every non-inductive assumption just makes the goal state much larger and the proof <br>\nchecking and pretty printing slower.</p>\n<p>Hope this helps,<br>\nAndreas</p>",
        "id": 294723337,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661185603
    },
    {
        "content": "<p>From: Andreas Halkjær From &lt;<a href=\"mailto:andro.from@gmail.com\">andro.from@gmail.com</a>&gt;<br>\nThat makes good sense. Thank you.</p>\n<p>And thank you for the general remark!</p>\n<p>Andreas</p>",
        "id": 294723378,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661185619
    }
]