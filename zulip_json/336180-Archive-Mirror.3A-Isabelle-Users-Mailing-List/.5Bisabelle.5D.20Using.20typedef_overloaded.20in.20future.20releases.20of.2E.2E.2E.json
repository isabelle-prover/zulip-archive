[
    {
        "content": "<p>From: \"C. Diekmann\" &lt;<a href=\"mailto:diekmann@in.tum.de\">diekmann@in.tum.de</a>&gt;<br>\nDear list,</p>\n<p>I'm using a record which contains a machine word of arbitrary length.</p>\n<p>record 'i simple_foo = myString :: string<br>\n                                   myWord :: \"'i::len word\"</p>\n<p>To make this work, I need to state the following:</p>\n<p>declare[[typedef_overloaded]]</p>\n<p>Whenever I'm relying on <code>declare</code> or similar low-level magic, I'm afraid<br>\nthat things will break easily. Will this continue to work in upcoming<br>\nreleases? Is this the intended or official way to achieve what I want to do?</p>\n<p>Will the record package be made context-aware such that I don't need the<br>\nglobal <code>declare</code>? I would like to write the following:</p>\n<p>context<br>\n  notes [[typedef_overloaded]]<br>\nbegin<br>\n  record 'i simple_foo = myString :: string<br>\n                                     myWord :: \"'i::len word\"<br>\nend</p>\n<p>Best Regards,<br>\n  Cornelius</p>",
        "id": 294673524,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661174150
    },
    {
        "content": "<p>From: Gerwin Klein &lt;<a href=\"mailto:Gerwin.Klein@nicta.com.au\">Gerwin.Klein@nicta.com.au</a>&gt;<br>\nYou can say:</p>\n<p>record (overloaded) 'i simple_foo =<br>\n  myString :: string<br>\n  myWord :: \"'i::len word\"</p>\n<p>Cheers,<br>\nGerwin</p>\n<hr>\n<p>The information in this e-mail may be confidential and subject to legal professional privilege and/or copyright. National ICT Australia Limited accepts no liability for any damage caused by this email or its attachments.</p>",
        "id": 294673734,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661174217
    }
]