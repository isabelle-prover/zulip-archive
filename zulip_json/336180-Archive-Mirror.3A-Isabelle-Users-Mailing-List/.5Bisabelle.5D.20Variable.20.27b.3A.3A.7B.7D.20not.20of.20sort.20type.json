[
    {
        "content": "<p>From: Gerwin Klein &lt;<a href=\"mailto:gerwin.klein@nicta.com.au\">gerwin.klein@nicta.com.au</a>&gt;<br>\nWe recently came across this surprising (to me) behaviour in Isabelle 2012 (also development version):</p>\n<p>lemma \"f x = f x\"<br>\n apply (insert refl[where t=\"x\"])</p>\n<p>*** Type unification failed: Variable 'b::{} not of sort type</p>\n<hr>\n<p>*** Failed to meet type constraint:</p>\n<hr>\n<p>*** Term:  x :: 'b<br>\n*** Type:  ??'a</p>\n<p>whereas the workaround</p>\n<p>lemma \"f x = f (x::'b)\"<br>\n apply (insert refl[where t=\"x\"])</p>\n<p>works as expected.</p>\n<p>I would have expected type inference to give 'b the default sort \"type\" (as it does to 'a, if you look at the output of \"term f\" with show_sorts on). </p>\n<p>Am I expecting wrong or should this be changed?</p>\n<p>Cheers,<br>\nGerwin</p>",
        "id": 294224593,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660899309
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nOn 31.10.2012 07:14, Gerwin Klein wrote:</p>\n<blockquote>\n<p>We recently came across this surprising (to me) behaviour in Isabelle 2012 (also development version):</p>\n<p>lemma \"f x = f x\"<br>\n  apply (insert refl[where t=\"x\"])</p>\n<p>*** Type unification failed: Variable 'b::{} not of sort type</p>\n<hr>\n<p>*** Failed to meet type constraint:</p>\n<hr>\n<p>*** Term:  x :: 'b<br>\n*** Type:  ??'a</p>\n</blockquote>\n<p>f ist also a free variable, I assume? This is a long-standing behaviour. <br>\nI remember stumbling on this about two years ago and as far as I <br>\nremember the following discussion lead to the conclusion that changing <br>\nthis behaviour would lead to problems with logics which don't have a <br>\nsingle default sort (HOLCF?).</p>\n<blockquote>\n<p>whereas the workaround</p>\n<p>lemma \"f x = f (x::'b)\"<br>\n  apply (insert refl[where t=\"x\"])</p>\n<p>works as expected.</p>\n</blockquote>\n<p>Fixing the type of f should also help.</p>",
        "id": 294224620,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660899321
    },
    {
        "content": "<p>From: Gerwin Klein &lt;<a href=\"mailto:gerwin.klein@nicta.com.au\">gerwin.klein@nicta.com.au</a>&gt;<br>\nOn 31/10/2012, at 7:10 PM, Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt; wrote:</p>\n<blockquote>\n<p>On 31.10.2012 07:14, Gerwin Klein wrote:</p>\n<blockquote>\n<p>We recently came across this surprising (to me) behaviour in Isabelle 2012 (also development version):</p>\n<p>lemma \"f x = f x\"<br>\napply (insert refl[where t=\"x\"])</p>\n<p>*** Type unification failed: Variable 'b::{} not of sort type</p>\n<hr>\n<p>*** Failed to meet type constraint:</p>\n<hr>\n<p>*** Term:  x :: 'b<br>\n*** Type:  ??'a</p>\n</blockquote>\n<p>f ist also a free variable, I assume? This is a long-standing behaviour. I remember stumbling on this about two years ago and as far as I remember the following discussion lead to the conclusion that changing this behaviour would lead to problems with logics which don't have a single default sort (HOLCF?).</p>\n</blockquote>\n<p>Is that discussion online somewhere? Im skeptical. The type of f is also free, and it does get the default sort. In fact, if that wouldn't usually happen, nothing in Isabelle would work without annotation. </p>\n<p>What does the parser do when it sees a free type variable in a function range in HOLCF? Why is it hard to implement the same behaviour in inference?</p>\n<blockquote>\n<blockquote>\n<p>whereas the workaround</p>\n<p>lemma \"f x = f (x::'b)\"<br>\napply (insert refl[where t=\"x\"])</p>\n<p>works as expected.</p>\n</blockquote>\n<p>Fixing the type of f should also help.</p>\n</blockquote>\n<p>Mentioning the type 'b in any way seems to helps.</p>\n<p>It's rare enough that I don't really care, and it's easy to work around, but it cost us several hours to diagnose, distill an example and to report. It should at least be documented.</p>\n<p>Cheers,<br>\nGerwin</p>",
        "id": 294224731,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660899369
    },
    {
        "content": "<p>From: Gerwin Klein &lt;<a href=\"mailto:gerwin.klein@nicta.com.au\">gerwin.klein@nicta.com.au</a>&gt;<br>\nLars politely didn't point out my lame Google skills and sent me this link:</p>\n<p><a href=\"http://www.mail-archive.com/isabelle-dev@mailbroy.informatik.tu-muenchen.de/msg01573.html\">http://www.mail-archive.com/isabelle-dev@mailbroy.informatik.tu-muenchen.de/msg01573.html</a></p>\n<p>I guess the conclusion is, we stick with the workaround. I hope my email had enough additional keywords in it to make this show up in searches more easily.</p>\n<p>Cheers,<br>\nGerwin</p>",
        "id": 294227637,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660900794
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe main keywords are \"Strugatsky\" and \"Stalker\" :-)</p>\n<p>Skimming over the thread cited above of this recurrent Isabelle type class <br>\ntopic, I take it as a reminder to improve the PIDE document feedback about <br>\nresults of type-inference (in Isabelle/jEdit only, not Proof General / TTY <br>\nanymore).  Then users will see better what type-inference has produced for <br>\nthem, with extra markup for freshly introduced types and their sorts.</p>\n<p>Until this happens (not before the coming release), I recommend to read <br>\nthe book, such that the jokes and allusions about the \"Zone\" become easier <br>\nto understand.  See also <a href=\"http://en.wikipedia.org/wiki/Roadside_Picnic\">http://en.wikipedia.org/wiki/Roadside_Picnic</a></p>\n<p>Makarius</p>",
        "id": 294227847,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660900897
    }
]