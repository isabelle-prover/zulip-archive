[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:lochbihl@ipd.info.uni-karlsruhe.de\">lochbihl@ipd.info.uni-karlsruhe.de</a>&gt;<br>\nHi all,</p>\n<p>I just stumbled over the following, strange behaviour of interpretation <br>\nfor locales in Isabelle 2009: Suppose, L is a locale which fixes only <br>\nparameters and makes a definition:</p>\n<p>locale L = fixes a :: \"nat list\"<br>\nbegin</p>\n<p>definition foo where \"foo = a\"</p>\n<p>end</p>\n<p>When I interpret L, where the parameter is instantiated with a function <br>\napplied to a parameter, which itself is not bound, the following strange <br>\nbehaviour occurs:</p>\n<p>definition bar where \"bar f = [Suc f]\"</p>\n<p>interpretation itrprt: L \"bar f\" .</p>\n<p>thm itrprt.foo_def</p>\n<p>prints \"<a href=\"http://L.foo\">L.foo</a> (bar f) = bar f\" in the response buffer of ProofGeneral.<br>\nThe important thing is that f is not free (?f), but highlighted like a <br>\nvariable in a proof that has not been mentioned before.  In particular, <br>\nit becomes almost impossible to use trprt.foo_def for proving:</p>\n<p>lemma test: \"<a href=\"http://itrprt.foo\">itrprt.foo</a> 0 = [Suc 0]\"</p>\n<p>displays the goal \"<a href=\"http://L.foo\">L.foo</a> (bar 0) = [Suc 0]\", but</p>\n<p>unfolding itrprt.foo_def</p>\n<p>does not affect it. Now, I restate the lemma more complicately:</p>\n<p>lemma test': fixes f<br>\n   defines \"f == 0\"<br>\n   shows \"<a href=\"http://itrprt.foo\">itrprt.foo</a> f = [Suc f]\"</p>\n<p>Here, \"unfolding itrprt.foo_def\" DOES unfold the definition of <a href=\"http://L.foo\">L.foo</a>.<br>\nApparently, the locally bound f is identified with the unbound f in the <br>\ngenerated theorem itrprt.foo_def.<br>\nIf f is replaced with g in this lemma, \"unfolding itrprt.foo_def\" does <br>\nnot change the goal.</p>\n<p>If, however, I add an assumption to L, things again are different:</p>\n<p>locale L2 = fixes a :: \"nat list\"<br>\n   assumes \"a ~= []\"<br>\nbegin<br>\ndefinition foo2 where \"foo2 = a\"<br>\nend<br>\ninterpretation itrprt2: L2 \"bar f\" by(unfold_locales)(simp add: bar_def)<br>\nthm itrprt2.foo2_def</p>\n<p>produces \"L2.foo2 (bar ?f) = bar ?f\" with the f being now free. Hence, <br>\ntest can be shown using this theorem.</p>\n<p>What is happening here? Is this behaviour intended? Am I using the <br>\ninterpretation syntax in a wrong manner?</p>\n<p>Regards,<br>\nAndreas</p>",
        "id": 294078067,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660829670
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Andreas,</p>\n<p>since f is a new parameter, it must be fixed explicitly:</p>\n<p>interpretation itrprt: L \"bar f\" for f .</p>\n<p>Tthen everything looks as expected.</p>\n<p>I remember that there has been some discussion whether free variable<br>\nshould be fixed automatically, but I on my behalf cannot tell what its<br>\nresult are.</p>\n<p>Hope this helps<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/n4fPMk3JRFJIk0xHa9H2FPJ-/signature.asc\">signature.asc</a></p>",
        "id": 294078094,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660829682
    }
]