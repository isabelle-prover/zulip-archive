[
    {
        "content": "<p>From: Gudmund Grov &lt;<a href=\"mailto:ggrov@staffmail.ed.ac.uk\">ggrov@staffmail.ed.ac.uk</a>&gt;<br>\n[Please post - apologies for multiple copies.]</p>\n<hr>\n<p>WING 2012 - 4th International Workshop on INvariant Generation<br>\n<a href=\"http://cs.nyu.edu/acsys/wing2012/\">http://cs.nyu.edu/acsys/wing2012/</a><br>\n             June 30, 2012<br>\nManchester, UK (a satellite Workshop of IJCAR 2012)</p>\n<hr>\n<p>--- Second Call for Papers : 3 weeks to go ---</p>\n<p>General</p>\n<hr>\n<p>The ability to automatically extract and synthesize auxiliary<br>\nproperties of programs has had a profound effect on program analysis,<br>\ntesting, and verification over the last several decades. A key<br>\nimpediment for program verification is the overhead associated with<br>\nproviding, debugging, and verifying auxiliary invariant<br>\nannotations. Releasing the software developer from this burden is<br>\ncrucial for ensuring the practical relevance of program verification.<br>\nIn the context of testing, suitable invariants have the potential of<br>\nenabling high-coverage test-case generation. Thus, invariant<br>\ngeneration is a key ingredient in a broad spectrum of tools that help<br>\nto improve program reliability and understanding. As the design and<br>\nimplementation of reliable software remains an important issue, any<br>\nprogress in this area will have a significant impact.</p>\n<p>The increasing power of automated theorem proving and computer algebra<br>\nhas opened new perspectives for computer-aided program verification;<br>\nin particular for the automatic generation of inductive assertions in<br>\norder to reason about loops and recursion. Especially promising<br>\nbreakthroughs are invariant generation techniques by Groebner bases,<br>\nquantifier elimination, and algorithmic combinatorics, which can be<br>\nused in conjunction with model checking, theorem proving, static<br>\nanalysis, and abstract interpretation. The aim of this workshop is to<br>\nbring together researchers from these diverse fields.</p>\n<p>Scope</p>\n<hr>\n<p>We encourage submissions presenting work in progress, tools under<br>\ndevelopment, as well as work by PhD students, such that the<br>\nworkshop can become a forum for active dialogue between the groups<br>\ninvolved in this new research area.</p>\n<p>Relevant topics include (but are not limited to) the following:</p>\n<ul>\n<li>Program analysis and verification</li>\n<li>Inductive Assertion Generation</li>\n<li>Inductive Proofs for Reasoning about Loops</li>\n<li>Applications to Assertion Generation using the following tools:</li>\n<li>Abstract Interpretation,</li>\n<li>Static Analysis,</li>\n<li>Model Checking,</li>\n<li>Theorem Proving,</li>\n<li>Theory Formation,</li>\n<li>Algebraic Techniques</li>\n<li>Tools for inductive assertion generation and verification</li>\n<li>Alternative techniques for reasoning about loops</li>\n</ul>\n<p>Invited speaker</p>\n<hr>\n<ul>\n<li>Aditya Nori (Microsoft Research)</li>\n</ul>\n<p>Committee</p>\n<hr>\n<p>Program Chairs:</p>\n<ul>\n<li>Gudmund Grov (University of Edinburgh, UK)</li>\n<li>Thomas Wies (New York University, USA)</li>\n</ul>\n<p>Program Committee:</p>\n<ul>\n<li>Clark Barrett (New York University, USA) </li>\n<li>Nikolaj Bjorner (Microsoft Research, USA)</li>\n<li>Gudmund Grov (University of Edinburgh, UK)</li>\n<li>Ashutosh Gupta (IST Austria)</li>\n<li>Bart Jacobs (Katholieke Universiteit Leuven, Belgium) </li>\n<li>Moa Johansson (Chalmers University of Technology, Sweden)</li>\n<li>Laura Kovacs (Vienna University of Technology, Austria)</li>\n<li>David Monniaux (VERIMAG, France)</li>\n<li>Enric Rodriguez Carbonell (Technical University of Catalonia, Spain) </li>\n<li>Helmut Veith (Vienna University of Technology, Austria)</li>\n<li>Thomas Wies (New York University, USA)</li>\n</ul>\n<p>Important Dates</p>\n<hr>\n<p>Submission deadline: April 06, 2012<br>\nNotification of acceptance: May 04, 2012<br>\nFinal version due: June 08, 2012<br>\nWorkshop: June 30, 2012</p>\n<p>Submission</p>\n<hr>\n<p>WING 2012 encourages submissions in the following two categories:</p>\n<ul>\n<li>\n<p>Original papers: contain original research (simultaneous submissions<br>\nare not allowed) and sufficient detail to assess the merits and<br>\nrelevance of the submission. Given the informal style of the<br>\nworkshop, papers describing work in progress, with sufficient detail<br>\nto assess the contribution, are also welcome. Original papers should<br>\nnot exceed 15 pages. </p>\n</li>\n<li>\n<p>Extended abstracts: contain preliminary reports of work in progress,<br>\ncase studies, or tool descriptions. These will be judged based on<br>\nthe expected level of interest for the WING community. They will be<br>\nincluded in the CEUR-WS proceedings. Extended abstracts should not<br>\nexceed 5 pages. </p>\n</li>\n</ul>\n<p>All submissions should conform to Springer's LNCS format. Formatting style <br>\nfiles can be found at </p>\n<p><a href=\"http://www.springer.de/comp/lncs/authors.html\">http://www.springer.de/comp/lncs/authors.html</a> </p>\n<p>Technical details may be included in an appendix to be read at the reviewers' <br>\ndiscretion and to be omitted in the final version.</p>\n<p>Please prepare your submission in accordance with the rules described above and <br>\nsubmit a pdf file via</p>\n<p><a href=\"https://www.easychair.org/?conf=wing2012\">https://www.easychair.org/?conf=wing2012</a></p>\n<p>Publication</p>\n<hr>\n<p>All submissions will be peer-reviewed by the program committee.<br>\nAccepted contributions will be published in archived electronic notes,<br>\nas a volume of CEUR Workshop Proceedings.</p>\n<p>A special issue of the Journal of Science of Computer Programming with<br>\nextended versions of selected papers will be published after the workshop.</p>",
        "id": 294153847,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660850361
    }
]