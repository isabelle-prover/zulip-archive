[
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nHi,</p>\n<p>I put this up in case someone wants to add to what I've learned.</p>\n<p>Attached is a THY and PDF of my exercise. The PDF shows my efforts to <br>\nmake a printout self-contained. The numbered links take you to a theorem <br>\nsummary, which has a bibliography link with a line number, which takes <br>\nyou to the bibliography entry, which links to a Mercurial source file <br>\nwith line numbers.</p>\n<p>Being positively influenced by the concept of sequents, though only just <br>\nstarting to dive into sequents, I saw that there is turnstile, which is <br>\nused as the meta-language symbol to give meaning to everything else.</p>\n<p>There is then the meta-object symbol ==&gt;, and wanting life to be simple, <br>\nI wanted to say that it is ==&gt; that gives meaning to everything else. <br>\nHowever, willing for life to be more complex, I decided that at the <br>\nblackbox-in and blackbox-out levels, there is only prop, schematic <br>\nvariables, and ==&gt;.</p>\n<p>The blackbox-in level is</p>\n<p>theorem foo \"...\"</p>\n<p>with Trueprop coercion unhidden, and the blackbox-out level is</p>\n<p>thm foo</p>\n<p>with Trueprop coercion unhidden, and you can't blame me for wanting only <br>\nprop, schematic variables, and ==&gt;, when that's all I've seen for months <br>\nat the blackbox level.</p>\n<p>In drule.ML, I stumbled on \"equal_intr_rule\", which expresses meta-logic <br>\n\\&lt;equiv&gt; in terms of ==&gt;. I also saw \"triv_forall_equality\", and in <br>\nlogical haste, I decided that by proving a theorem that uses \\&lt;And&gt; and <br>\n\\&lt;equiv&gt;, and using only \"equal_intr_rule\", that would allow me to take <br>\nthe perspective that at the blackbox level, it is ==&gt; that gives <br>\nmeaning, rather than  \\&lt;And&gt; and \\&lt;equiv&gt;, where the function arrow <br>\noperator was far from my mind, though surely it's at a lower level anyway.</p>\n<p>The theorem I chose was \"atomize_all\", but I hit a snag, which was <br>\nfortunate. I set up the assumptions correctly for \"equal_intr_rule\", but <br>\n\"rule\" didn't use them to prove \"atomize_all\" in one step, so I resorted <br>\nto \"simp\" to do parts of the proof.</p>\n<p>The main value of the exercise was in seeing that the simplifier was <br>\ncreating rewrite rules from the assumptions, so it gave new meaning to <br>\nthose mysterious 'Adding rewrite rule \"??.unknown\"' statements.</p>\n<p>What I was looking for was evidence that \\&lt;And&gt; and \\&lt;equiv&gt; operate <br>\nindependently from ==&gt;, so that they all have to be considered <br>\nfundamental. Looking at the simp trace kind of gave me that evidence, <br>\nbut someone can correct me if I'm wrong.</p>\n<p>Also, when \"rule\" didn't use the assumptions I gave it, it then made <br>\ngoals based on \"equal_intr_rule\". But it didn't do an exact <br>\ninstantiation. \\&lt;And&gt; is used in the conclusion of \"atomize_all\", so <br>\n\"rule\" made some decisions, and did some rearranging of the use of <br>\n\\&lt;And&gt; before it printed the goals, which indicates to me that it's <br>\nfundamental.</p>\n<p>I'm a little closer to being able to eventually describe how ==&gt;, <br>\n\\&lt;And&gt;, and \\&lt;equiv&gt; all fit in at the meta-logic level.</p>\n<p>Regards,<br>\nGB<br>\n<a href=\"/user_uploads/14278/f7wfYAcmT9K4UYGFDMP1q94V/i130719_triv_forall_equality.thy\">i130719_triv_forall_equality.thy</a><br>\n<a href=\"/user_uploads/14278/xM60EY3-INNNgfIha3VgMMvq/i130719_triv_forall_equality.pdf\">i130719_triv_forall_equality.pdf</a></p>",
        "id": 294245900,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908902
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nIt's not exactly all there, but starting on page 27 of isar-ref.pdf, <br>\nthere is section \"2.1 The Pure Framework\", in which a brief explanation <br>\nof the four meta-logic symbols is given, where the four symbols are =&gt;, <br>\n\\&lt;And&gt;, \\&lt;equiv&gt;, and ==&gt;. It pays to look at things 4 or 5 times, at least.</p>\n<p>In particular, on page 28, it says, \"Logical statements are composed via <br>\n\\&lt;And&gt;x::alpha. B(x) and A ==&gt; B.\" It then goes on to define some rules <br>\nfor \\&lt;And&gt; and ==&gt; using sequents.</p>\n<p>That's important because there is the section  \"Simulating sequents by <br>\nnatural deduction\" on page 203 which talks about expressing a form of <br>\nsequents using the ==&gt; symbol.</p>\n<p>You put those sections together, and you might be able to figure how to <br>\nuse ==&gt; to have a form of sequents in Isabelle/HOL where ==&gt; is <br>\nconsidered the fundamental symbol for the sequents, and figure out how <br>\nto do it without abusing conventional standards too much.</p>\n<p>You might call them isa-sequents. If you abuse things unintentionally, <br>\nan isa-sequent is whatever  you define it be anyway.</p>\n<p>Regards,<br>\nGB</p>",
        "id": 294245928,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908912
    }
]