[
    {
        "content": "<p>From: \"Yannick Duchêne (Hibou57 )\" &lt;<a href=\"mailto:yannick_duchene@yahoo.fr\">yannick_duchene@yahoo.fr</a>&gt;<br>\nHi people out there,</p>\n<p>Sorry for an other rather beginner's question, but here is: I favor  <br>\nexplicit proof over automated one, except for some simplifications group.  <br>\nThat works, but this often lead to repeated subexpressions in multiple  <br>\n“have”, and that bloats the proof text, which in turn, does not help  <br>\nreadability. I wondered if there is a way to have shorthands for common  <br>\nexpression appearing at multiple places. I tried with a “def E ≡  <br>\n\"my-expression\"” and then an “have \"blah E blah\"”, but it does not work,  <br>\nseems E is not replaced with the corresponding expression as I expected,  <br>\nand proofs by simp which succeed with the literal subexpression, fails  <br>\nwhen I replace the literal subexpression with E. I also tried a naive  <br>\n“write \"my-expression\" (\"E\")”, but that's even worse, Isabelle complains  <br>\nthe expression is an unknown constant.</p>\n<p>You see that's not a question about proving, but a question about style in  <br>\nwriting proofs.</p>\n<p>I have another in the same vein, for which I don't wish to open a new  <br>\nthread. I don't know about LaTex, and wondered if there a way, to do the  <br>\nsame with plain text comments. That is, I would write a comment somewhere,  <br>\nand either include it at another place or else add a reference to it from  <br>\nthat other place.</p>\n<p>I may also have a question about the different way to invoke the  <br>\nsimplifier, but I leave that for later; that's enough for that thread.</p>\n<p>Have a nice day all</p>",
        "id": 294221607,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660897799
    },
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:huffman@in.tum.de\">huffman@in.tum.de</a>&gt;<br>\nWhen you use \"def E == expression\", the definition of E must be<br>\nunfolded explicity (using something like \"apply (simp add: E_def)\" or<br>\n\"unfolding E_def\").</p>\n<p>The alternative is to use \"let\" to define a new schematic variable:<br>\n\"let ?E = expression\". Then \"?E\" is really just an input abbreviation,<br>\nno explicit unfolding necessary.</p>\n<ul>\n<li>Brian</li>\n</ul>",
        "id": 294221659,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660897805
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nYannick,</p>\n<p>Brian already answered your question, which is good information for me <br>\nalso, but for myself, I worked up how to use \"abbreviation\" to <br>\nabbreviate a formula, which is probably not best for your situation, but <br>\nwhich may come in handy for me, though I notice that in prog-prove.pdf, <br>\nit tells me that abbreviations should be used sparingly.</p>\n<p>On 8/4/2012 7:06 AM, Yannick Duchêne (Hibou57) wrote:</p>\n<blockquote>\n<p>Sorry for an other rather beginner's question, but here is: I favor <br>\nexplicit proof over automated one, except for some simplifications group. </p>\n</blockquote>\n<p>For an interesting discussion of an explicit proof example using <br>\nintroduction and elimination rules, scroll down to Wenzel's PhD thesis <br>\non the page below, and have a look at pages 77 to 92 where he takes a <br>\nsimple example and starts with a very abbreviated form and keeps <br>\nexpanding it into more explicit forms.</p>\n<p><a href=\"http://www4.in.tum.de/~wenzelm/papers/\">http://www4.in.tum.de/~wenzelm/papers/</a> <br>\n&lt;<a href=\"http://www4.in.tum.de/%7Ewenzelm/papers/\">http://www4.in.tum.de/%7Ewenzelm/papers/</a>&gt;</p>\n<blockquote>\n<p>I tried with a “def E ≡ \"my-expression\"” and then an “have \"blah E <br>\nblah\"”, but it does not work, seems E is not replaced with the <br>\ncorresponding expression as I expected, and proofs by simp which <br>\nsucceed with the literal subexpression, fails when I replace the <br>\nliteral subexpression with E.</p>\n</blockquote>\n<p>Here's what I get with a simple example:</p>\n<p>theory z0_i_Scratch imports Main begin<br>\ntypedecl sT<br>\nconsts inS::\"sT =&gt; sT =&gt; bool\" (infixl \"IN\" 55)<br>\nconsts emS::sT<br>\naxiomatization where<br>\n   eeA_that_would_have_hard_to_type_name: \"!x. ~(x IN emS)\"<br>\nlemma eeA_ASCI_name1: \"!x. ~(x IN emS)\"<br>\n   by(metis eeA_that_would_have_hard_to_type_name)<br>\nabbreviation<br>\n   eeA_exp_name::\"bool\" where \"eeA_exp_name == (!x. ~(x IN emS))\"<br>\nlemma eeA_ASCI_name2: \"!x. ~(x IN emS)\"<br>\n   by(metis eeA_ASCI_name1)<br>\nend</p>\n<p>When I put the cursor at \"eeA_ASCI_name2\" in the output panel, \"(!x. ¬(x <br>\nIN emS))\" gets replaced with \"eeA_exp_name\", unlike at \"eeA_ASCI_name1\".</p>\n<p>As far as getting something like \"(!x. ¬(x IN emS))\" replaced with <br>\nanother formula (that's not a named identifier), I don't know about that.</p>\n<p>Abbreviation is syntactic sugar (page 14 of prog-prove.pdf).</p>\n<blockquote>\n<p>I have another in the same vein, for which I don't wish to open a new <br>\nthread. I don't know about LaTex, and wondered if there a way, to do <br>\nthe same with plain text comments. That is, I would write a comment <br>\nsomewhere, and either include it at another place or else add a <br>\nreference to it from that other place.</p>\n</blockquote>\n<p>I guess you're talking about defining a \"macro command\" as in Latex, and <br>\nthen using the macro, where it gets expanded when the PDF document is built.</p>\n<p>That would be the use of antiquotations inside of \"text{<em>...</em>}\", <br>\n\"section{<em>...</em>}\", etc., and lots of other places; I don't use <br>\nantiquotations yet. Learning the details of how to use antiquotations <br>\nwould be on the level of learning how to use Latex, but if you were <br>\ngoing to learn one first, then you'd probably want to learn <br>\nantiquotations first (page 64 isar-ref.pdf).</p>\n<p>What you eventually end up doing is using antiquotations with Latex; <br>\nIsabelle uses Latex rather than duplicate it.</p>\n<p>Whether or not you take advantage of additional Latex commands, if you <br>\nspecify the document to be built with something like \"usedir\", Latex is <br>\nused to create the PDF.</p>\n<p>Regards,<br>\nGB</p>",
        "id": 294221677,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660897811
    },
    {
        "content": "<p>From: \"Yannick Duchêne (Hibou57 )\" &lt;<a href=\"mailto:yannick_duchene@yahoo.fr\">yannick_duchene@yahoo.fr</a>&gt;<br>\nCurrently on the page 77 you mentioned, looking at “is” and “concl is”.  <br>\nLooks even shorter and straighter than using “let”. That's what I like  <br>\nwith my discovery of Isabelle: as I go, I understand it's intentionally  <br>\ndesigned to author concise and readable proof, and to balance both  <br>\n(conciseness and verbosity) as you see fits.</p>",
        "id": 294221709,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660897836
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nThe page 77 you're talking about is the absolute page number, which <br>\nwould be the printed page number of 63.</p>\n<p>The example I'm talking about is sections 4.2.3 and 4.2.4, printed page <br>\nnumbers 77 to 92.</p>\n<p>It goes to show that there are lots more examples and explanations in <br>\nthat document on Isar. For each keyword described in Wenzel's document, <br>\nif you look the keyword up in isar-ref.pdf, then you learn even more.</p>\n<p>Regards,<br>\nGB</p>",
        "id": 294221736,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660897848
    },
    {
        "content": "<p>From: \"Yannick Duchêne (Hibou57 )\" &lt;<a href=\"mailto:yannick_duchene@yahoo.fr\">yannick_duchene@yahoo.fr</a>&gt;<br>\nI finally go with both Brian's suggestion to use “let” and Markus's thesis  <br>\nsuggestion to use “\"…\" (is \"…\")”. I ended to the test files attached to  <br>\nthat message. Please note that's nothing exiting, just intended to  <br>\nbeginners like me, and to be opened to comments (comments are easier on  <br>\nsimple things). It's based on something from a function tutorial in  <br>\nIsabelle's documentation directory. I'm not so much happy with the PDF  <br>\nrendering, but I don't know enough about (La)Tex, that may be the reason  <br>\nwhy (I also wonder why the document weight more than expected, but that's  <br>\nanother story).</p>\n<p>Thanks for your tips, to both of you<br>\n<a href=\"/user_uploads/14278/rR6mCC-bHONgdt29WX9Z6-9c/Isa_Test.thy\">Isa_Test.thy</a><br>\n<a href=\"/user_uploads/14278/hZuxR3jYA8q3GDpEHOUFyOVr/Isa_Test.pdf\">Isa_Test.pdf</a></p>",
        "id": 294221760,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660897862
    }
]