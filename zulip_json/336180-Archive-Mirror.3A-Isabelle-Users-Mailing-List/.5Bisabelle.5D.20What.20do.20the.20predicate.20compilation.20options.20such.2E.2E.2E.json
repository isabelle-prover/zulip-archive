[
    {
        "content": "<p>From: Mark Wassell &lt;<a href=\"mailto:mpwassell@gmail.com\">mpwassell@gmail.com</a>&gt;<br>\nHello,</p>\n<p>In Predicate_Compile_Examples/Examples.thy there are the following uses of<br>\ncode_pred and value:</p>\n<p>code_pred [inductify] S⇩1p .<br>\ncode_pred [random_dseq inductify] S⇩1p .</p>\n<p>values [random_dseq 5, 5, 5] 5 \"{x. S⇩1p x}\"</p>\n<p>Is there any detailed documentation or description of what the compilation<br>\noptions such as inductify and random_dseq do? Or will I need to read the ML<br>\n?</p>\n<p>What I can tell from the equation lines is that these options result in<br>\ndifferent code equations with the latter possibly enabling random<br>\ngeneration of the members of the inductive set in a quickcheck like manner.</p>\n<p>Cheers</p>\n<p>Mark</p>",
        "id": 294714641,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661183357
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear Mark,</p>\n<p>Unfortunately, I'm not aware of any detailed documentation for these options. The option <br>\ninductify tries to infer intro and elim rules for constants that have not been defined <br>\nwith (co)inductive and then call the predicate compiler on those such that they can be <br>\npart of the mode inference game. This is particularly useful if you have defined a <br>\npredicate using a first-order formula with quantifiers and want to execute it. You might <br>\nfind something on this and random_dseq in Lukas Bulwahn's PhD thesis.</p>\n<p>What do you need these options for?</p>\n<p>Most of these random generators for quickcheck are not used much because quickcheck has <br>\nbeen configured to use only exhaustive testing by default.</p>\n<p>Cheers,<br>\nAndreas</p>",
        "id": 294714658,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661183363
    },
    {
        "content": "<p>From: Mark Wassell &lt;<a href=\"mailto:mpwassell@gmail.com\">mpwassell@gmail.com</a>&gt;<br>\nAndreas,</p>\n<p>Thank you for your reply.</p>\n<p>My general interest is understand in detail how the code generation for<br>\ninductive predicates works. My specific interest in random_dseq is in being<br>\nable to randomly generate terms in a language from its inductive definition<br>\n(for example terms of a particular type) and to do so in a manner where I<br>\nhave some control over the distribution. I was wondering if the options to<br>\nrandom_dseq in the values statement provided this control or similar.</p>\n<p>I have read \"Code Generation from Inductive Predicates in Isabelle/HOL\"<br>\nMarch 2009, Lukas Bulwahn. Is this the PhD thesis that you refer to?</p>\n<p>Cheers</p>\n<p>Mark</p>",
        "id": 294714692,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661183376
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear Mark,</p>\n<p>On 31/07/17 11:11, Mark Wassell wrote:</p>\n<blockquote>\n<p>My general interest is understand in detail how the code generation for inductive <br>\npredicates works. My specific interest in random_dseq is in being able to randomly <br>\ngenerate terms in a language from its inductive definition (for example terms of a <br>\nparticular type) and to do so in a manner where I have some control over the distribution. <br>\nI was wondering if the options to random_dseq in the values statement provided this <br>\ncontrol or similar.</p>\n<p>Sorry, I cannot help you here. I've never used those smart generators.</p>\n</blockquote>\n<blockquote>\n<p>I have read \"Code Generation from Inductive Predicates in Isabelle/HOL\" March 2009, Lukas <br>\nBulwahn. Is this the PhD thesis that you refer to?<br>\nNo. This is the Lukas' Master's thesis on the predicate compiler. It contains a few more <br>\ndetails about the predicate compiler, but not the integration with quickcheck. Lukas' PhD <br>\nthesis is available here:</p>\n</blockquote>\n<p><a href=\"https://mediatum.ub.tum.de/node?id=1115870\">https://mediatum.ub.tum.de/node?id=1115870</a></p>\n<p>All the best,<br>\nAndreas</p>",
        "id": 294714709,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661183382
    }
]