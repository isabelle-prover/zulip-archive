[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn 23/03/2020 21:23, Georgy Dunaev wrote:</p>\n<blockquote>\n<p>What is the precise definition of truthfulness of an Isabelle's expression?</p>\n<p>Could you please help me to translate the following expressions in<br>\nset-theoretic language:<br>\n\"(A==&gt;B)==&gt;(A--&gt;B)\"<br>\n\"(!!x. P(x))==&gt;(\\forall x. P(x))\" ?</p>\n</blockquote>\n<p>This is a formal notation for Natural Deduction rules, see also section 2.4 in<br>\nthe \"implementation\" manual.</p>\n<p>Most Isabelle object-logics can work with that format directly, even<br>\nIsabelle/ZF. (These days I say more often \"Isabelle application environment\"<br>\ninstead of the more traditional \"object-logic\".)</p>\n<blockquote>\n<p>But I need a precise translation from syntax to semantics in this language.<br>\n(I am talking about Isabelle/FOL or ZF if it matters.)</p>\n<p>I need an interpretation.</p>\n</blockquote>\n<p>If you want you can just collapse everything: identify type \"prop\" with \"o\"<br>\nand use the identity function for \"Trueprop\" etc.</p>\n<p>In that view, the explicit structure merely helps to compose proofs, e.g. in<br>\nthe Isar proof language or with proof methods like \"rule\" or \"blast\".</p>\n<p>Makarius</p>",
        "id": 294823921,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243491
    },
    {
        "content": "<p>From: Joshua Chen &lt;<a href=\"mailto:josh@joshchen.io\">josh@joshchen.io</a>&gt;<br>\nMy sincerest apologies for forgetting to change the subject line!</p>\n<p>Josh</p>\n<p>The setting for thinking about logical frameworks is different from that<br>\nof traditional (first-order, classical, set-theoretic) model theory, so<br>\nasking for set-theoretic interpretations of the sentences you give is<br>\nnot exactly an answerable question. Though if one really wants, one may<br>\nthink about ==&gt;, !! as being the \"actual\" (meta) implication and<br>\nuniversal quantifier, and --&gt;, \\forall as being their Gödel encodings.</p>\n<p>I recommend <a href=\"https://ncatlab.org/nlab/show/logical+framework\">https://ncatlab.org/nlab/show/logical+framework</a> as a good<br>\nintro to the general ideas and for references.</p>\n<p>Cheers,<br>\nJosh</p>",
        "id": 294824000,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243522
    },
    {
        "content": "<p>From: Joshua Chen &lt;<a href=\"mailto:josh@joshchen.io\">josh@joshchen.io</a>&gt;<br>\nBy which I of course mean that sentences involving --&gt;, \\forall are<br>\nGödel encodings of their counterparts that involve ==&gt;, !!. Then you<br>\nmight choose to read</p>\n<p>(A ==&gt; B) ==&gt; (A --&gt; B)</p>\n<p>as being the meta-statement that \"the encoding of 'A ==&gt; B' is derivable<br>\nif A implies B\", and similarly for (!!x. P(x)) ==&gt; (\\forall x. P(x)).</p>\n<p>Josh</p>",
        "id": 294824025,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243528
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;</p>\n<blockquote>\n<p>Could you please help me to translate the following expressions in<br>\nset-theoretic language:<br>\n\"(A==&gt;B)==&gt;(A--&gt;B)\"</p>\n</blockquote>\n<p>It’s best to include the implicit (and normally hidden) coercion, Trueprop:</p>\n<p>\"(Trueprop A ==&gt; Trueprop B) ==&gt; Trueprop (A--&gt;B)”</p>\n<p>Since ==&gt; is ordinary implication (in the meta-logic), this axiom expresses part of the truth table for —&gt;.</p>\n<blockquote>\n<p>\"(!!x. P(x))==&gt;(\\forall x. P(x))”</p>\n</blockquote>\n<p>This one is</p>\n<p>\"(!!x. Trueprop (P x)) ==&gt; Trueprop (\\forall x. P(x))” </p>\n<p>and similarly expresses that (\\forall x. P(x)) must be true whenever (P x) is true for all x.</p>\n<p>More information in the paper <a href=\"https://www.cl.cam.ac.uk/~lp15/papers/Isabelle/chap700.pdf\">https://www.cl.cam.ac.uk/~lp15/papers/Isabelle/chap700.pdf</a></p>\n<p>Larry</p>",
        "id": 294824039,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243534
    },
    {
        "content": "<p>From: Georgy Dunaev &lt;<a href=\"mailto:georgedunaev@gmail.com\">georgedunaev@gmail.com</a>&gt;<br>\nThanks for your response, but it is not exactly what I am looking for...</p>\n<p>Types, terms and proofs of Isabelle may be encide in Z(FC) themselves. They<br>\nare syntactic objects. But they also has to have some precise \"meaning\",<br>\ni.e. semantics. Which is also encoded in zfc. What is the function between<br>\nthese two sets?</p>\n<p>In order to overcome the language barrier I've to ask similar question:</p>\n<p>What is a model of the natural deduction which is used in Isabelle? Does it<br>\nexist? By model I mean a set with structure, like in model theory. Maybe<br>\nthere is an article with precise definition of such model?</p>\n<p>There certainly should be a soundness theorem and a completeness theorem<br>\nfor this system... :/</p>\n<p>Thanks!<br>\nYours sincerely,<br>\nG. D.</p>",
        "id": 294824047,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243540
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nAs I mentioned earlier, the key paper is this one:</p>\n<p><a href=\"https://link.springer.com/article/10.1007%2FBF00248324\">https://link.springer.com/article/10.1007%2FBF00248324</a><br>\n<a href=\"https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-130.html\">https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-130.html</a></p>\n<p>I describe Isabelle’s meta-logic as “intuitionistic higher-order logic”. Here “intuitionistic” means that the excluded middle isn’t assumed, but this logic still has classical models too, including Church’s original (1940) model for simple type theory.</p>\n<p>So you have both a semantic explanation and also (in the paper) a proof-theoretic explanation of how it all works. </p>\n<p>Larry Paulson</p>",
        "id": 294824054,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243547
    },
    {
        "content": "<p>From: Georgy Dunaev &lt;<a href=\"mailto:georgedunaev@gmail.com\">georgedunaev@gmail.com</a>&gt;<br>\nHello!</p>\n<p>What is the precise definition of truthfulness of an Isabelle's expression?</p>\n<p>Could you please help me to translate the following expressions in<br>\nset-theoretic language:<br>\n\"(A==&gt;B)==&gt;(A--&gt;B)\"<br>\n\"(!!x. P(x))==&gt;(\\forall x. P(x))\" ?</p>\n<p>Intuitively, I know that 1st is the deduction theorem, and the 2nd is<br>\ngeneralisation rule.</p>\n<p>But I need a precise translation from syntax to semantics in this language.<br>\n(I am talking about Isabelle/FOL or ZF if it matters.)</p>\n<p>I need an interpretation.</p>\n<p>I know interpretation for object language: that is called models and it is<br>\nabout sets, functions on them and predicates on them. I need something<br>\nsimilar. I feel that the definition of valid expressions is somehow<br>\nextended from object language to the metalanguage.<br>\nThanks!</p>\n<p>Sincerely yours,<br>\nGeorgy Dunaev</p>",
        "id": 294825950,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661244436
    }
]