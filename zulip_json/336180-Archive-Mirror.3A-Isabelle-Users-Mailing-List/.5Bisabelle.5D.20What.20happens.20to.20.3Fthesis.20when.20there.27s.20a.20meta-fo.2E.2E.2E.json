[
    {
        "content": "<p>From: Holden Lee &lt;<a href=\"mailto:hl422@cam.ac.uk\">hl422@cam.ac.uk</a>&gt;<br>\nIn the example, p and q are of type int==&gt;bool. Contrast:</p>\n<p>lemma \"⋀x. (p x)==&gt;(q x)\"<br>\nproof -<br>\nterm ?thesis (<em>\"q\":: \"int ⇒ bool\"</em>)<br>\nshow ?thesis sorry<br>\nqed</p>\n<p>(*<br>\nType unification failed: Clash of types \"_ ⇒ _\" and \"bool\"</p>\n<p>Type error in application: incompatible operand type</p>\n<p>Operator:  Trueprop :: bool ⇒ prop<br>\nOperand:   ?thesis :: int ⇒ bool<br>\n*)</p>\n<p><em>is not OK</em> (I'm mystified as to why ?thesis is \"q\".) but</p>\n<p>lemma \"p x==&gt;q x\"<br>\nproof -<br>\nterm ?thesis (* \"q x\":: \"bool\" *)<br>\nshow ?thesis sorry<br>\nqed</p>\n<p>is OK.</p>\n<p>In the first case, what should I replace ?thesis by to make it correct<br>\n(other than the whole statement in quotes)?</p>\n<p>Thanks,<br>\nHolden</p>",
        "id": 294282038,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660920685
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nYou shouldn’t write a structured proof if the lemma statement includes meta-logical symbols in that way. Instead, try</p>\n<p>lemma<br>\n  fixes x<br>\n  assumes “p x”<br>\n  shows “q x”<br>\nproof … qed</p>\n<p>Larry</p>",
        "id": 294282062,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660920692
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nIf you have a look at ?thesis (\"term ?thesis\"), you'll see that ?thesis<br>\nis a lambda abstraction in this case and must be given a parameter.</p>",
        "id": 294282094,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660920710
    }
]