[
    {
        "content": "<p>From: Victor Porton &lt;<a href=\"mailto:porton@narod.ru\">porton@narod.ru</a>&gt;<br>\nThe following lemma fails to verify (in ZF). It is strange because (simp) should do the job.</p>\n<p>lemma comp_eq_id_iff2:<br>\n  \"[| g: B-&gt;Ag; f: Af-&gt;C; Ag&lt;=Af |] ==&gt; (ALL y:B. f<code>(g</code>y) = y) &lt;-&gt; f O g = id(B)\"<br>\nproof -<br>\n  assume \"g: B-&gt;Ag\" \"f: Af-&gt;C\" \"Ag&lt;=Af\"<br>\n  hence \"f O g: B-&gt;C\" by (rule comp_fun2)<br>\n  moreover<br>\n  have \"id(B): B-&gt;B\" by (rule id_type)<br>\n  ultimately have m: \"(ALL y:B. (f O g)<code>y = id(B)</code>y) &lt;-&gt; f O g = id(B)\" by (rule fun_extension_iff)<br>\n  from <code>g: B-&gt;Ag</code> have c [simp]: \"y:B ==&gt; (f O g)<code>y = f</code>(g<code>y)\" by auto\n  have i [simp]: \"y:B ==&gt; id(B)</code>y = y\" by auto<br>\n  from m show \"(ALL y:B. f<code>(g</code>y) = y) &lt;-&gt; f O g = id(B)\" by simp<br>\nqed</p>\n<p>What is my error? What is the right way to do this?</p>",
        "id": 294123137,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660840443
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nYour problem is in the following line:</p>\n<blockquote>\n<p>have c [simp]: \"y:B ==&gt; (f O g)<code>y = f</code>(g`y)\" by auto</p>\n</blockquote>\n<p>This theorem refers to y, a free variable. All the variables (y, B, f, g) in this theorem have fixed meanings. But for your final proof, you need a theorem that holds for all elements of B. You can fix your proof by changing the line as follows:</p>\n<blockquote>\n<p>have c [simp]: \"!!y. y:B ==&gt; (f O g)<code>y = f</code>(g`y)\" by auto</p>\n</blockquote>\n<p>Larry Paulson</p>\n<p>On 19 Dec 2010, at 21:15, Victor Porton wrote:</p>\n<blockquote>\n<p>The following lemma fails to verify (in ZF). It is strange because (simp) should do the job.</p>\n<p>lemma comp_eq_id_iff2:<br>\n \"[| g: B-&gt;Ag; f: Af-&gt;C; Ag&lt;=Af |] ==&gt; (ALL y:B. f<code>(g</code>y) = y) &lt;-&gt; f O g = id(B)\"<br>\nproof -<br>\n assume \"g: B-&gt;Ag\" \"f: Af-&gt;C\" \"Ag&lt;=Af\"<br>\n hence \"f O g: B-&gt;C\" by (rule comp_fun2)<br>\n moreover<br>\n have \"id(B): B-&gt;B\" by (rule id_type)<br>\n ultimately have m: \"(ALL y:B. (f O g)<code>y = id(B)</code>y) &lt;-&gt; f O g = id(B)\" by (rule fun_extension_iff)<br>\n from <code>g: B-&gt;Ag</code> have c [simp]: \"y:B ==&gt; (f O g)<code>y = f</code>(g<code>y)\" by auto\n have i [simp]: \"y:B ==&gt; id(B)</code>y = y\" by auto<br>\n from m show \"(ALL y:B. f<code>(g</code>y) = y) &lt;-&gt; f O g = id(B)\" by simp<br>\nqed</p>\n<p>What is my error? What is the right way to do this?</p>\n</blockquote>",
        "id": 294123166,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660840446
    }
]