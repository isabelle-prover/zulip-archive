[
    {
        "content": "<p>From: \"W. Douglas Maurer\" &lt;<a href=\"mailto:maurer@gwu.edu\">maurer@gwu.edu</a>&gt;<br>\nI am trying to formalize the usual rule about checking whether a list <br>\nis sorted by checking only adjacent elements of the list. So if t is <br>\nan int list with no duplicate elements, then in order to show that t <br>\n! i &lt; t ! j for all i &lt; j in range, it is enough to show that t ! i &lt; <br>\nt ! (i+1) for all i in range (other than the end of t, where t ! <br>\n(i+1) is not defined). I wanted to formalize this with fixes, <br>\nassumes, and shows, and so I started out by writing lemma fixes \"t :: <br>\nint list\"; and I got an error message reading Legacy feature! Bad <br>\nname binding: \"t :: int list\". Well, if I understand the term \"legacy <br>\nfeature,\" this is something that used to work, in older versions of <br>\nIsabelle, so I must have learned it while using an older version. By <br>\nexperimentation I was able to get this to work by taking the \"t :: \" <br>\noutside the double quotes, like this: lemma fixes t :: \"int list\" . <br>\nBut this raises a larger question: When features are taken out of <br>\nIsabelle n in producing Isabelle n+1, is there a list of such <br>\nfeatures, somewhere, together with what they are replaced by? I don't <br>\nwant to teach my students something that no longer works, even if it <br>\nused to work. I'm particularly interested in seeing such a list for <br>\nIsabelle2015, when that comes out. -WDMaurer</p>",
        "id": 294638206,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661161027
    }
]