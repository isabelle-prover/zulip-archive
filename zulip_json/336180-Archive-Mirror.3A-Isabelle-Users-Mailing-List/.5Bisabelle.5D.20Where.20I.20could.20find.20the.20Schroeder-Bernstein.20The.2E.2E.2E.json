[
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nIt is part of Main:</p>\n<p>thm Schroeder_Bernstein</p>\n<p>There are two proofs. You can find both versions by grepping for Schroeder.</p>\n<p>Tobias<br>\n<a href=\"/user_uploads/14278/3F64SUZySEZRCjX200rnvDxT/smime.p7s\">smime.p7s</a></p>",
        "id": 294744766,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661192986
    },
    {
        "content": "<p>From: Andrei Popescu &lt;<a href=\"mailto:A.Popescu@mdx.ac.uk\">A.Popescu@mdx.ac.uk</a>&gt;<br>\n... and a version for arbitrary sets:</p>\n<p>theory Draft</p>\n<p>imports \"HOL-Library.Cardinal_Notations\"</p>\n<p>begin</p>\n<p>lemma \"inj_on f A ⟹ inj_on g B ⟹ f <code> A ⊆ B ⟹ g </code> B ⊆ A ⟹ |A| =o |B|\"</p>\n<p>by (meson Schroeder_Bernstein card_of_ordIso)</p>\n<p>end</p>\n<p>Best wishes,</p>\n<p>Andrei</p>\n<hr>\n<p>From: <a href=\"mailto:cl-isabelle-users-bounces@lists.cam.ac.uk\">cl-isabelle-users-bounces@lists.cam.ac.uk</a> &lt;<a href=\"mailto:cl-isabelle-users-bounces@lists.cam.ac.uk\">cl-isabelle-users-bounces@lists.cam.ac.uk</a>&gt; on behalf of Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nSent: 12 September 2018 14:34:08<br>\nTo: <a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a><br>\nSubject: Re: [isabelle] Where I could find the Schroeder-Bernstein Theorem?</p>\n<p>It is part of Main:</p>\n<p>thm Schroeder_Bernstein</p>\n<p>There are two proofs. You can find both versions by grepping for Schroeder.</p>\n<p>Tobias</p>\n<p>On 12/09/2018 13:19, José Manuel Rodriguez Caballero wrote:</p>\n<blockquote>\n<p>Hello,<br>\n   I was implementing a number-theoretic proof where I used the following<br>\nfinite version of Schroeder-Bernstein Theorem:</p>\n<p>definition injfun:: ‹('a ⇒ 'b) ⇒ 'a set ⇒ bool› where<br>\n‹injfun ≡ λ f. λ A. (∀ x y::'a. x ∈ A ∧ y ∈ A ∧ f x = f y ⟶ x = y )›</p>\n<p>definition typefun:: ‹('a ⇒ 'b) ⇒ 'a set ⇒ 'b set ⇒ bool› where<br>\n‹typefun ≡ λ f. λ A. λ B. (∀ x ::'a. (x ∈ A ⟶ f x ∈ B) )›</p>\n<p>lemma CantorBernsteinSchroeder:<br>\n   fixes A :: ‹'a set› and B :: ‹'b set› and f :: ‹'a ⇒ 'b› and g :: ‹'b ⇒<br>\n'a›<br>\n   assumes ‹typefun f A B› and ‹typefun g B A› and ‹injfun f A› and ‹injfun<br>\ng B›<br>\n       and ‹finite A› and ‹finite B›<br>\n   shows ‹card A = card B›</p>\n<p>Although I can prove this auxiliary result by myself, this was already done<br>\nin Isabelle/HOL. Indeed in the Top 100 Theorems in Isabelle (<br>\n<a href=\"http://www.cse.unsw.edu.au/~kleing/top100/\">http://www.cse.unsw.edu.au/~kleing/top100/</a>) a more general version of this<br>\nThe Top 100 Theorems in Isabelle - Computer Science and ...&lt;<a href=\"http://www.cse.unsw.edu.au/~kleing/top100/\">http://www.cse.unsw.edu.au/~kleing/top100/</a>&gt;<br>\n<a href=\"http://www.cse.unsw.edu.au\">www.cse.unsw.edu.au</a><br>\nThe following are the theorems from this list proved so far in the Isabelle proof assistant. If you have proved additional ones or know of any, please send me email so I can add them here. If the theorem is not part of the Isabelle distribution, the entry will usually contain a link to the ...</p>\n</blockquote>\n<blockquote>\n<p>result is in position 25:</p>\n<p>lemma schroeder_bernstein:<br>\n   \"[| f ∈ inj(X,Y);  g ∈ inj(Y,X) |] ==&gt; ∃h. h ∈ bij(X,Y)\"</p>\n<p>So, my question is: Where I could find this theorem in order to obtain the<br>\nparticular version that I need as a trivial consequence? Thank you in<br>\nadvance.</p>\n<p>Kind Regards,<br>\nJosé M.<br>\n<a href=\"https://github.com/josephcmac/Folklore-and-miscellaneous-results-in-number-theory\">https://github.com/josephcmac/Folklore-and-miscellaneous-results-in-number-theory</a></p>\n</blockquote>",
        "id": 294744786,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661192999
    },
    {
        "content": "<p>From: Andrei Popescu &lt;<a href=\"mailto:A.Popescu@mdx.ac.uk\">A.Popescu@mdx.ac.uk</a>&gt;<br>\nSorry for my confusing previous message. General cardinals are of course not needed, as the theorem is available from a pre-cardinal theory.  </p>\n<p>Best wishes,</p>\n<p>Andrei </p>\n<hr>\n<p>From: Andrei Popescu<br>\nSent: 12 September 2018 15:04:21<br>\nTo: <a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a><br>\nSubject: Re: [isabelle] Where I could find the Schroeder-Bernstein Theorem?</p>\n<p>... and a version for arbitrary sets:</p>\n<p>theory Draft<br>\nimports \"HOL-Library.Cardinal_Notations\"<br>\nbegin</p>\n<p>lemma \"inj_on f A ⟹ inj_on g B ⟹ f <code> A ⊆ B ⟹ g </code> B ⊆ A ⟹ |A| =o |B|\"<br>\nby (meson Schroeder_Bernstein card_of_ordIso)</p>\n<p>end</p>\n<p>Best wishes,</p>\n<p>Andrei</p>\n<hr>\n<p>From: <a href=\"mailto:cl-isabelle-users-bounces@lists.cam.ac.uk\">cl-isabelle-users-bounces@lists.cam.ac.uk</a> &lt;<a href=\"mailto:cl-isabelle-users-bounces@lists.cam.ac.uk\">cl-isabelle-users-bounces@lists.cam.ac.uk</a>&gt; on behalf of Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nSent: 12 September 2018 14:34:08<br>\nTo: <a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a><br>\nSubject: Re: [isabelle] Where I could find the Schroeder-Bernstein Theorem?</p>\n<p>It is part of Main:</p>\n<p>thm Schroeder_Bernstein</p>\n<p>There are two proofs. You can find both versions by grepping for Schroeder.</p>\n<p>Tobias</p>\n<p>On 12/09/2018 13:19, José Manuel Rodriguez Caballero wrote:</p>\n<blockquote>\n<p>Hello,<br>\n   I was implementing a number-theoretic proof where I used the following<br>\nfinite version of Schroeder-Bernstein Theorem:</p>\n<p>definition injfun:: ‹('a ⇒ 'b) ⇒ 'a set ⇒ bool› where<br>\n‹injfun ≡ λ f. λ A. (∀ x y::'a. x ∈ A ∧ y ∈ A ∧ f x = f y ⟶ x = y )›</p>\n<p>definition typefun:: ‹('a ⇒ 'b) ⇒ 'a set ⇒ 'b set ⇒ bool› where<br>\n‹typefun ≡ λ f. λ A. λ B. (∀ x ::'a. (x ∈ A ⟶ f x ∈ B) )›</p>\n<p>lemma CantorBernsteinSchroeder:<br>\n   fixes A :: ‹'a set› and B :: ‹'b set› and f :: ‹'a ⇒ 'b› and g :: ‹'b ⇒<br>\n'a›<br>\n   assumes ‹typefun f A B› and ‹typefun g B A› and ‹injfun f A› and ‹injfun<br>\ng B›<br>\n       and ‹finite A› and ‹finite B›<br>\n   shows ‹card A = card B›</p>\n<p>Although I can prove this auxiliary result by myself, this was already done<br>\nin Isabelle/HOL. Indeed in the Top 100 Theorems in Isabelle (<br>\n<a href=\"http://www.cse.unsw.edu.au/~kleing/top100/\">http://www.cse.unsw.edu.au/~kleing/top100/</a>) a more general version of this<br>\nThe Top 100 Theorems in Isabelle - Computer Science and ...&lt;<a href=\"http://www.cse.unsw.edu.au/~kleing/top100/\">http://www.cse.unsw.edu.au/~kleing/top100/</a>&gt;<br>\n<a href=\"http://www.cse.unsw.edu.au\">www.cse.unsw.edu.au</a><br>\nThe following are the theorems from this list proved so far in the Isabelle proof assistant. If you have proved additional ones or know of any, please send me email so I can add them here. If the theorem is not part of the Isabelle distribution, the entry will usually contain a link to the ...</p>\n</blockquote>\n<blockquote>\n<p>result is in position 25:</p>\n<p>lemma schroeder_bernstein:<br>\n   \"[| f ∈ inj(X,Y);  g ∈ inj(Y,X) |] ==&gt; ∃h. h ∈ bij(X,Y)\"</p>\n<p>So, my question is: Where I could find this theorem in order to obtain the<br>\nparticular version that I need as a trivial consequence? Thank you in<br>\nadvance.</p>\n<p>Kind Regards,<br>\nJosé M.<br>\n<a href=\"https://github.com/josephcmac/Folklore-and-miscellaneous-results-in-number-theory\">https://github.com/josephcmac/Folklore-and-miscellaneous-results-in-number-theory</a></p>\n</blockquote>",
        "id": 294744866,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661193012
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nBTW, in Oct-2016 I have reworked your proof and one of my former<br>\nHOL-Isar_Examples, to make the version of theorem Schroeder_Bernstein<br>\nthat is presently in Main HOL (and thus easy to find via \"find_theorems<br>\nname: Bernstein\").</p>\n<p>See also <a href=\"http://isabelle.in.tum.de/repos/isabelle/rev/f8e556c8ad6f\">http://isabelle.in.tum.de/repos/isabelle/rev/f8e556c8ad6f</a></p>\n<p>That version does not require Hilbert-Choice (or other versions of<br>\nChoice): it uses \"the_inv\" instead of the more common \"inv\" operator. It<br>\nalso cannot use the proof method \"metis\", which uses Hilbert-Choice<br>\ninternally, so the final \"by (metis ComplI)\" has become a bit more<br>\ncumbersome.</p>\n<p>Nonetheless, I've tried hard to produce a good Isar proof: that example<br>\nemerged from some course on Isabelle some years ago.</p>\n<p>Makarius</p>",
        "id": 294744877,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661193017
    },
    {
        "content": "<p>From: Andrei Popescu &lt;<a href=\"mailto:A.Popescu@mdx.ac.uk\">A.Popescu@mdx.ac.uk</a>&gt;<br>\nHi Makarius,</p>\n<p>Indeed, very nice that the theorem now only depends on definite choice.</p>\n<p>Best wishes,</p>\n<p>Andrei</p>\n<p>BTW, in Oct-2016 I have reworked your proof and one of my former<br>\nHOL-Isar_Examples, to make the version of theorem Schroeder_Bernstein<br>\nthat is presently in Main HOL (and thus easy to find via \"find_theorems<br>\nname: Bernstein\").</p>\n<p>See also <a href=\"https://emea01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fisabelle.in.tum.de%2Frepos%2Fisabelle%2Frev%2Ff8e556c8ad6f&amp;data=02%7C01%7CA.Popescu%40mdx.ac.uk%7Cd09839ee16264f4ffaac08d618bd3aaa%7C38e37b88a3a148cf9f056537427fed24%7C0%7C0%7C636723598369108239&amp;sdata=FgfRO71oQPs28RnQjC5epYbBDCoWQezDl08FTKK25nU%3D&amp;reserved=0\">https://emea01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fisabelle.in.tum.de%2Frepos%2Fisabelle%2Frev%2Ff8e556c8ad6f&amp;data=02%7C01%7CA.Popescu%40mdx.ac.uk%7Cd09839ee16264f4ffaac08d618bd3aaa%7C38e37b88a3a148cf9f056537427fed24%7C0%7C0%7C636723598369108239&amp;sdata=FgfRO71oQPs28RnQjC5epYbBDCoWQezDl08FTKK25nU%3D&amp;reserved=0</a></p>\n<p>That version does not require Hilbert-Choice (or other versions of<br>\nChoice): it uses \"the_inv\" instead of the more common \"inv\" operator. It<br>\nalso cannot use the proof method \"metis\", which uses Hilbert-Choice<br>\ninternally, so the final \"by (metis ComplI)\" has become a bit more<br>\ncumbersome.</p>\n<p>Nonetheless, I've tried hard to produce a good Isar proof: that example<br>\nemerged from some course on Isabelle some years ago.</p>\n<p>Makarius</p>",
        "id": 294744901,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661193033
    }
]