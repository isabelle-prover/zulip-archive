[
    {
        "content": "<p>From: \"Yannick Duchêne (Hibou57 )\" &lt;<a href=\"mailto:yannick_duchene@yahoo.fr\">yannick_duchene@yahoo.fr</a>&gt;<br>\nHi people,</p>\n<p>I hope my question won't look too much stupid to logics gurus.</p>\n<p>Reading at Wikipedia's page about HOL, something tackled me a bit:</p>\n<p><a href=\"http://en.wikipedia.org/wiki/Higher-order_logic\">http://en.wikipedia.org/wiki/Higher-order_logic</a></p>\n<p>“HOL with standard semantics is more expressive than first-order logic.<br>\n     For example, HOL admits categorical axiomatizations of the natural<br>\n     numbers, and of the real numbers, which are impossible with first-order<br>\n     logic. However, by a result of Gödel, HOL with standard semantics does<br>\n     not admit an effective, sound and complete proof calculus.”</p>\n<p>There's also a criticism section on the same page.</p>\n<p>Well, I'm not sure to understand what it really means and would like to  <br>\nknow if there are good pointers to understand how and when difference  <br>\nbetween HOL and FOL matters, and when and how Isabelle has to do with it.  <br>\nThe quote from Wikipedia looks weird to me, as it seems to say they may be  <br>\nsoundness issue with HOL? Is that really it? I've never heard about any  <br>\nsuch assertion before…</p>",
        "id": 294231429,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902683
    },
    {
        "content": "<p>From: Ramana Kumar &lt;<a href=\"mailto:rk436@cam.ac.uk\">rk436@cam.ac.uk</a>&gt;<br>\nThe Wikipedia article is referring to the fact that there will always be<br>\ntrue statements in HOL that are not the conclusion of any derivation in a<br>\nproof calculus.<br>\n(This can be contrasted with FOL: there is a sound proof calculus for FOL<br>\nwith the property that every true FOL statement can be proved in it.)<br>\n(The problem in HOL, as I understand it, is that there are too many true<br>\nstatements, more than could be all the conclusions from a proof calculus.)</p>\n<p>It does not say that there cannot be a sound proof calculus for HOL.<br>\nIndeed, we think Isabelle/HOL implements one such calculus.</p>\n<p>As for how to learn this stuff... I'm sure someone on list will be able to<br>\nrecommend a good textbook.<br>\nPersonally I think Wikipedia is OK, but you have to be patient and willing<br>\nto read carefully and follow links... and sometimes it may be wrong, so<br>\ndiscussing with others helps :)</p>",
        "id": 294231446,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902695
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nOn 1/31/2013 12:54 AM, Yannick Duchêne (Hibou57) wrote:</p>\n<blockquote>\n<p>Hi people,</p>\n<p>I hope my question won't look too much stupid to logics gurus.</p>\n</blockquote>\n<p>Yannick,</p>\n<p>I collect books written by the logic gurus, and occasionally read the <br>\nintroductions, so I am qualified to provide links to books.</p>\n<p>The standard text that keeps getting mentioned by the logic gurus here <br>\nis Andrews' text, which starts with propositional logic and FOL, and <br>\nthen covers type theory, where types would be the beginning of the <br>\nfoundation of HOL in general:</p>\n<p><a href=\"http://www.amazon.com/Introduction-Mathematical-Logic-Type-Theory/dp/1402007639\">http://www.amazon.com/Introduction-Mathematical-Logic-Type-Theory/dp/1402007639</a></p>\n<p>FOL begins with the standard logic operators as its primitives, or a few <br>\nof them from which the others can be derived, as shown by Definitions <br>\n5.1, 5.2, and 5.3 of Bilaniuk's book:</p>\n<p><a href=\"http://euclid.trentu.ca/math/sb/pcml/\">http://euclid.trentu.ca/math/sb/pcml/</a></p>\n<p>FOL is reasonably fixed in stone and standardized.</p>\n<p>HOL begins with variables, functions, and function application as <br>\nprimitives, as shown by Paulson's \"Foundations of Functional <br>\nProgramming\" Definition 1, page 2:</p>\n<p><a href=\"http://www.cl.cam.ac.uk/~lp15/papers/Notes/Founds-FP.pdf\">http://www.cl.cam.ac.uk/~lp15/papers/Notes/Founds-FP.pdf</a></p>\n<p>From there (or somewhere else) HOL diverges, where the two biggest <br>\ncamps would be Coq's higher-order logic, and the HOL family, where HOL <br>\nis not to be confused with the general phrase \"higher-order logic\", and <br>\nwhere John Harrison gives a diagram showing the HOL family of products <br>\non page 9 of \"HOL Light Tutorial\":</p>\n<p><a href=\"http://www.cl.cam.ac.uk/~jrh13/hol-light/tutorial_220.pdf\">http://www.cl.cam.ac.uk/~jrh13/hol-light/tutorial_220.pdf</a></p>\n<p>Alfio recently pointed me to \"Introduction to Type Theory\" by Geuvers <br>\nwhich makes comparisons between type theory and set theory:</p>\n<p><a href=\"http://www.cs.ru.nl/~herman/PUBS/IntroTT-improved.pdf\">http://www.cs.ru.nl/~herman/PUBS/IntroTT-improved.pdf</a></p>\n<p>Because ZFC sets reigns as King and Queen in the world of mathematics, <br>\nand is a FOL language, then HOL vs. FOL is largely \"types vs. ZFC sets\", <br>\nat least for those who even know about the comparison, where education <br>\nabout types is near non-existence in formal, mathematics education, even <br>\nthough Church and Curry had their formal degrees in mathematics.</p>\n<p>To compare the two, the problem is understanding what HOL is, not what <br>\nFOL is, at least for me, since FOL is much simpler, even though HOL <br>\nstarts with a simple set of primitives.</p>\n<p>I shared a list of the books I'd collected on trying to get up to speed <br>\nwith Isabelle/HOL:</p>\n<p><a href=\"http://lists.cam.ac.uk/mailman/htdig/cl-isabelle-users/2012-June/msg00024.html\">http://lists.cam.ac.uk/mailman/htdig/cl-isabelle-users/2012-June/msg00024.html</a></p>\n<p><a href=\"http://lists.cam.ac.uk/mailman/htdig/cl-isabelle-users/2012-June/msg00003.html\">http://lists.cam.ac.uk/mailman/htdig/cl-isabelle-users/2012-June/msg00003.html</a></p>\n<p>Fortunately, I've decided I probably will be able to be live more <br>\nnormally, which is to occasionally ponder questions about foundational <br>\nlogic, but not have to completely understand it all to work at a higher <br>\nlevel. It's a very healthy place to be.</p>\n<p>Regards,<br>\nGB</p>\n<blockquote>\n<p>Reading at Wikipedia's page about HOL, something tackled me a bit:</p>\n<p><a href=\"http://en.wikipedia.org/wiki/Higher-order_logic\">http://en.wikipedia.org/wiki/Higher-order_logic</a></p>\n<p>“HOL with standard semantics is more expressive than first-order <br>\nlogic.<br>\n    For example, HOL admits categorical axiomatizations of the natural<br>\n    numbers, and of the real numbers, which are impossible with <br>\nfirst-order<br>\n    logic. However, by a result of Gödel, HOL with standard semantics <br>\ndoes<br>\n    not admit an effective, sound and complete proof calculus.”</p>\n<p>There's also a criticism section on the same page.</p>\n<p>Well, I'm not sure to understand what it really means and would like <br>\nto know if there are good pointers to understand how and when <br>\ndifference between HOL and FOL matters, and when and how Isabelle has <br>\nto do with it. The quote from Wikipedia looks weird to me, as it seems <br>\nto say they may be soundness issue with HOL? Is that really it? I've <br>\nnever heard about any such assertion before…</p>\n</blockquote>",
        "id": 294231460,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902702
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nWhen I'm only qualified to provide links, and I start speaking <br>\nauthoritatively, then I quickly get in trouble.</p>\n<p>Lambda calculus would be the beginning, and types comes next. I was <br>\nspeaking of lambda calculus and types as being monolithic. In my mind, <br>\nit must be that lambda calculus and types are part of the same <br>\nfoundation. That perception might be eliminated if I read more of the <br>\nbooks, or it might become stronger.</p>\n<p>Regards,<br>\nGB</p>",
        "id": 294231470,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902707
    },
    {
        "content": "<p>From: Alfio Martini &lt;<a href=\"mailto:alfio.martini@acm.org\">alfio.martini@acm.org</a>&gt;<br>\nHi Yannick,</p>\n<p>Adding to Gottfried´s selected readings, I strongly recommend the highly<br>\nreadable</p>\n<p>\"The Seven Virtues of Simple Type Theory' by William Farmer (Journal of<br>\nApplied Logic 6, 2008.</p>\n<p>Best!</p>",
        "id": 294231541,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902726
    },
    {
        "content": "<p>From: \"\\\"Mark\\\"\" &lt;<a href=\"mailto:mark@proof-technologies.com\">mark@proof-technologies.com</a>&gt;<br>\nYou might find my glossary of HOL terminology useful.  It includes various<br>\nentries about mathematical logic.</p>\n<p><a href=\"http://www.proof-technologies.com/misc/Glossary.txt\">www.proof-technologies.com/misc/Glossary.txt</a></p>\n<p>Mark.</p>\n<p>on 31/1/13 3:52 PM, Alfio Martini &lt;<a href=\"mailto:alfio.martini@acm.org\">alfio.martini@acm.org</a>&gt; wrote:</p>\n<blockquote>\n<p>Hi Yannick,</p>\n<p>Adding to Gottfried´s selected readings, I strongly recommend the highly<br>\nreadable</p>\n<p>\"The Seven Virtues of Simple Type Theory' by William Farmer (Journal of<br>\nApplied Logic 6, 2008.</p>\n<p>Best!</p>\n<p>On Thu, Jan 31, 2013 at 12:04 PM, Gottfried Barrow<br>\n&lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a></p>\n<blockquote>\n<p>wrote:</p>\n</blockquote>\n<p>On 1/31/2013 12:54 AM, Yannick Duchêne (Hibou57) wrote:</p>\n<blockquote>\n<blockquote>\n<p>Hi people,</p>\n<p>I hope my question won't look too much stupid to logics gurus.<br>\n</p>\n</blockquote>\n<p>Yannick,</p>\n<p>I collect books written by the logic gurus, and occasionally read the<br>\nintroductions, so I am qualified to provide links to books.</p>\n<p>The standard text that keeps getting mentioned by the logic gurus here is<br>\nAndrews' text, which starts with propositional logic and FOL, and then<br>\ncovers type theory, where types would be the beginning of the foundation<br>\nof<br>\nHOL in general:</p>\n<p><a href=\"http://www.amazon.com/**Introduction-Mathematical-**Logic-Type-Theory/dp/*\">http://www.amazon.com/**Introduction-Mathematical-**Logic-Type-Theory/dp/*</a></p>\n</blockquote>\n<p>*1402007639&lt;<a href=\"http://www.amazon.com/Introduction-Mathematical-Logic-Type-Theor\">http://www.amazon.com/Introduction-Mathematical-Logic-Type-Theor</a><br>\ny/dp/1402007639&gt;</p>\n<blockquote>\n<p>FOL begins with the standard logic operators as its primitives, or a few<br>\nof them from which the others can be derived, as shown by Definitions<br>\n5.1,<br>\n5.2, and 5.3 of Bilaniuk's book:</p>\n</blockquote>\n<p><a href=\"http://euclid.trentu.ca/math/**sb/pcml/&lt;http://euclid.trentu.ca/math/sb/pcml\">http://euclid.trentu.ca/math/**sb/pcml/&lt;http://euclid.trentu.ca/math/sb/pcml</a><br>\n/&gt;</p>\n<blockquote>\n<p>FOL is reasonably fixed in stone and standardized.</p>\n<p>HOL begins with variables, functions, and function application as<br>\nprimitives, as shown by Paulson's \"Foundations of Functional Programming\"<br>\nDefinition 1, page 2:</p>\n</blockquote>\n<p><a href=\"http://www.cl.cam.ac.uk/~lp15/**papers/Notes/Founds-FP.pdf&lt;http://www.cl.cam\">http://www.cl.cam.ac.uk/~lp15/**papers/Notes/Founds-FP.pdf&lt;http://www.cl.cam</a><br>\n.ac.uk/~lp15/papers/Notes/Founds-FP.pdf&gt;</p>\n<blockquote>\n<p>From there (or somewhere else) HOL diverges, where the two biggest camps<br>\nwould be Coq's higher-order logic, and the HOL family, where HOL is not<br>\nto<br>\nbe confused with the general phrase \"higher-order logic\", and where John<br>\nHarrison gives a diagram showing the HOL family of products on page 9 of<br>\n\"HOL Light Tutorial\":</p>\n</blockquote>\n<p><a href=\"http://www.cl.cam.ac.uk/~**jrh13/hol-light/tutorial_220.**pdf&lt;http://www.cl\">http://www.cl.cam.ac.uk/~**jrh13/hol-light/tutorial_220.**pdf&lt;http://www.cl</a>.<br>\n<a href=\"http://cam.ac.uk/~jrh13/hol-light/tutorial_220.pdf\">cam.ac.uk/~jrh13/hol-light/tutorial_220.pdf</a>&gt;</p>\n<blockquote>\n<p>Alfio recently pointed me to \"Introduction to Type Theory\" by Geuvers<br>\nwhich makes comparisons between type theory and set theory:</p>\n</blockquote>\n<p><a href=\"http://www.cs.ru.nl/~herman/**PUBS/IntroTT-improved.pdf&lt;http://www.cs.ru.nl/\">http://www.cs.ru.nl/~herman/**PUBS/IntroTT-improved.pdf&lt;http://www.cs.ru.nl/</a><br>\n~herman/PUBS/IntroTT-improved.pdf&gt;</p>\n<blockquote>\n<p>Because ZFC sets reigns as King and Queen in the world of mathematics,<br>\nand<br>\nis a FOL language, then HOL vs. FOL is largely \"types vs. ZFC sets\", at<br>\nleast for those who even know about the comparison, where education about<br>\ntypes is near non-existence in formal, mathematics education, even though<br>\nChurch and Curry had their formal degrees in mathematics.</p>\n<p>To compare the two, the problem is understanding what HOL is, not what<br>\nFOL<br>\nis, at least for me, since FOL is much simpler, even though HOL starts<br>\nwith<br>\na simple set of primitives.</p>\n<p>I shared a list of the books I'd collected on trying to get up to speed<br>\nwith Isabelle/HOL:</p>\n<p><a href=\"http://lists.cam.ac.uk/**mailman/htdig/cl-isabelle-**\">http://lists.cam.ac.uk/**mailman/htdig/cl-isabelle-**</a></p>\n</blockquote>\n<p>users/2012-June/msg00024.html&lt;<a href=\"http://lists.cam.ac.uk/mailman/htdig/cl-isabel\">http://lists.cam.ac.uk/mailman/htdig/cl-isabel</a><br>\nle-users/2012-June/msg00024.html&gt;</p>\n<blockquote>\n<p><a href=\"http://lists.cam.ac.uk/**mailman/htdig/cl-isabelle-**\">http://lists.cam.ac.uk/**mailman/htdig/cl-isabelle-**</a></p>\n</blockquote>\n<p>users/2012-June/msg00003.html&lt;<a href=\"http://lists.cam.ac.uk/mailman/htdig/cl-isabel\">http://lists.cam.ac.uk/mailman/htdig/cl-isabel</a><br>\nle-users/2012-June/msg00003.html&gt;</p>\n<blockquote>\n<p>Fortunately, I've decided I probably will be able to be live more<br>\nnormally, which is to occasionally ponder questions about foundational<br>\nlogic, but not have to completely understand it all to work at a higher<br>\nlevel. It's a very healthy place to be.</p>\n<p>Regards,<br>\nGB</p>\n<blockquote>\n<p>Reading at Wikipedia's page about HOL, something tackled me a bit:</p>\n</blockquote>\n</blockquote>\n<p><a href=\"http://en.wikipedia.org/wiki/**Higher-order_logic&lt;http://en.wikipedia.org/wi\">http://en.wikipedia.org/wiki/**Higher-order_logic&lt;http://en.wikipedia.org/wi</a><br>\nki/Higher-order_logic&gt;</p>\n<blockquote>\n<blockquote>\n<p>“HOL with standard semantics is more expressive than first-order<br>\nlogic.<br>\n    For example, HOL admits categorical axiomatizations of the natural<br>\n    numbers, and of the real numbers, which are impossible with<br>\nfirst-order<br>\n    logic. However, by a result of Gödel, HOL with standard semantics<br>\ndoes<br>\n    not admit an effective, sound and complete proof calculus.”</p>\n<p>There's also a criticism section on the same page.</p>\n<p>Well, I'm not sure to understand what it really means and would like to<br>\nknow if there are good pointers to understand how and when difference<br>\nbetween HOL and FOL matters, and when and how Isabelle has to do with<br>\nit.<br>\nThe quote from Wikipedia looks weird to me, as it seems to say they may<br>\nbe<br>\nsoundness issue with HOL? Is that really it? I've never heard about any<br>\nsuch assertion before…<br>\n</p>\n</blockquote>\n</blockquote>\n<p>--<br>\nAlfio Ricardo Martini<br>\nPhD in Computer Science (TU Berlin)<br>\nAssociate Professor at Faculty of Informatics (PUCRS)<br>\nCoordenador do Curso de Ciência da Computação<br>\nAv. Ipiranga, 6681 - Prédio 32 - Faculdade de Informática<br>\n90619-900 -Porto Alegre - RS - Brasil</p>\n</blockquote>",
        "id": 294231559,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902740
    },
    {
        "content": "<p>From: \"Yannick Duchêne (Hibou57 )\" &lt;<a href=\"mailto:yannick_duchene@yahoo.fr\">yannick_duchene@yahoo.fr</a>&gt;<br>\nHi Alfio!</p>\n<p>Seems available on‑line; here is a link for the paper you suggest:<br>\n<a href=\"http://www.sciencedirect.com/science/article/pii/S157086830700081X\">http://www.sciencedirect.com/science/article/pii/S157086830700081X#</a><br>\n(the page also has a link at the top, for a PDF version)</p>\n<p>Still looking at Gottfried's list.</p>",
        "id": 294231569,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902744
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThis is indeed a very nice overview, I need to study this further.</p>\n<p>Particularly notable is Theorem 11 / Virtue 6 about the completeness of <br>\nHOL, which goes back to Henkin 1950, published shortly after the famous <br>\nChurch 1940 paper.</p>\n<p>More than 60 years after it, there are still occasional rumors about HOL <br>\nbeing incomplete.  Farmer gives some nice explanations about the overall <br>\nsituation.</p>\n<p>Makarius</p>",
        "id": 294232658,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660903253
    },
    {
        "content": "<p>From: Freek Wiedijk &lt;<a href=\"mailto:freek@cs.ru.nl\">freek@cs.ru.nl</a>&gt;<br>\nHi Larry,</p>\n<blockquote>\n<p>I gather that the Coq kernel also contains a big chunk of<br>\nC code. Surprising, to say the least.</p>\n</blockquote>\n<p>Not if you consider Coq to be a functional language that<br>\nyou want to execute as fast as possible.</p>\n<p>Freek</p>",
        "id": 294232761,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660903302
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThis seems to refer to the virtual machine that runs at the bottom of Coq. <br>\n(We would need some Coq experts here, or move that thread to coq-club, if <br>\nanybody dares to do it.)</p>\n<p>Looking the problem from a higher level, it is the old debate how you make <br>\nthe prover: LCF-style to run through the inference kernel at run-time, or <br>\nsomehow native as part of the computational part of the logic.  This also <br>\nmeans the logic is made in a way to have a computational part in the first <br>\nplace (like Coq, Agda, etc.).</p>\n<p>My impression is that the LCF-style run-time interpretation turns out as <br>\nsurprisingly fast in many practical applications, both relatively and <br>\nabsolutely compared to the Coq computation model.  In a system like <br>\nIsabelle/HOL you are not limited to a single built-in computational model, <br>\nyou can do things with different formal status (say HOL specifications vs. <br>\nemitted code in other languages).  In principle, Coq does not limit you <br>\neither, but the traditional way is to assimilate everything within its one <br>\nbig formal system.</p>\n<p>Incidently, a Coq user has explained to me just last weak, that the <br>\nnotable Isabelle application IsaFoR/CeTA performs best in its category. <br>\nThe code that does the actual work in the end is native in Haskell, <br>\nwithout the prover preventing it from being really fast.</p>\n<p>Makarius</p>",
        "id": 294232765,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660903309
    },
    {
        "content": "<p>From: \"\\\"Mark\\\"\" &lt;<a href=\"mailto:mark@proof-technologies.com\">mark@proof-technologies.com</a>&gt;<br>\nI think it can get quite confusing because different people use the same<br>\nnames for different things, and different names for the same things, and<br>\nsometimes the same people do this too!</p>\n<p>\"HOL\" can mean \"higher-order logic\" (referring to one or more of various<br>\nlogics that are higher-order), or it can mean \"the HOL logic\" (Mike Gordon's<br>\nparticular higher-order logic, implemented by HOL4, Isabelle/HOL, HOL Light,<br>\nProofPower and HOL Zero).  Other theorem provers such as Coq, PVS and IMPS<br>\nimplement other higher-order logics.  So the logic described in the HOL4<br>\nlogic manual really is the same as HOL Light's, etc, the only difference<br>\nbeing that they are built up in different ways (i.e. they start with a<br>\ndifferent initial set of axioms and primitive inference rules, but these<br>\naxiomatisations are just different ways of defining the same logic).</p>\n<p>Does that clear anything up?</p>\n<p>Mark.</p>\n<p>on 1/2/13 2:23 PM, Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt; wrote:</p>\n<blockquote>\n<p>On 1/31/2013 1:46 PM, Yannick Duchêne (Hibou57) wrote:</p>\n<blockquote>\n<p>Seems available on‑line; here is a link for the paper you suggest:<br>\n<a href=\"http://www.sciencedirect.com/science/article/pii/S157086830700081X\">http://www.sciencedirect.com/science/article/pii/S157086830700081X#</a><br>\n(the page also has a link at the top, for a PDF version)</p>\n</blockquote>\n<p>There's a newer dated version, 20 December 2007, at the author's web<br>\nsite. The published one says \"received in revised form 6 August 2007\".</p>\n<p><a href=\"http://imps.mcmaster.ca/doc/seven-virtues.pdf\">http://imps.mcmaster.ca/doc/seven-virtues.pdf</a><br>\n<a href=\"http://imps.mcmaster.ca/doc/\">http://imps.mcmaster.ca/doc/</a></p>\n<p>When the gurus try to succinctly describe Isabelle/HOL, they'll many<br>\ntimes just use the phrase \"simply typed lambda calculus\".</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Simply_typed_lambda_calculus\">https://en.wikipedia.org/wiki/Simply_typed_lambda_calculus</a></p>\n<p>But if they have time to type a few extra characters, they might add the<br>\nphrase \"with polymorphism\".</p>\n<p>If you keep talking long enough, another one might pop in and throw in<br>\nthe term \"type classes\".</p>\n<p>Because there's no HOL which has yet won the HOL wars, then they use<br>\nexternal, historical vocabulary to begin the description of their HOL,<br>\nbut then have to start attaching their own internal vocabulary to the<br>\ndescription.</p>\n<p>For someone looking for a label to label HOL with, as a starting place<br>\nto learn about HOL, it can get confusing.</p>\n<p>If you see the phrase \"simple type theory\" in the title of Farmer's<br>\npaper, then you might ask, \"Ah, is this what's going to tell me what<br>\nIsabelle/HOL is? Because 'simple type theory' sounds suspiciously like<br>\n'simply typed lambda calculus'\".</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Type_theory#Theory_of_simple_types\">https://en.wikipedia.org/wiki/Type_theory#Theory_of_simple_types</a></p>\n<p>Being an authoritative prophet, I can now say that in the future, the<br>\nHOL's which win out in the HOL wars will be the standard themselves, and<br>\nthe references will be to the 700 page textbooks which formalize,<br>\nstarting with the basics, what the logic of these HOLs are.</p>\n<p>For HOL4 they already have that in their logic manual (to what degree I<br>\ncan't say), which I thought would be the perfect place to learn about<br>\nIsabelle/HOL's formal logic, but it's not, it's the perfect place to<br>\nlearn about HOL4's formal logic:</p>\n<p><a href=\"http://hol.sourceforge.net/documentation.html\">http://hol.sourceforge.net/documentation.html</a></p>\n<p>For completeness, I quote from Mark's glossary to show how the gurus<br>\nhave to do a lot qualifying when they try to explain things:</p>\n<p>simply-typed : (adj)  Relating to type systems that are relatively simple<br>\nand<br>\nare not, for example, dependently-typed.  There is considerable variation<br>\nin<br>\nthe<br>\nprecise intended meaning of \"simply-typed\" in contemporary usage: in some<br>\nusages<br>\npolymorphism is not a disqualifying factor, in other usages polymorphism<br>\nis<br>\nonly<br>\na disqualifying factor if it caters for the quantification of type<br>\nvariables,<br>\nand in other usages still any form of polymorphism is a disqualifying<br>\nfactor.<br>\nTo avoid confusion, the usage of this term is avoided in HOL Zero, its<br>\ndocumentation and elsewhere in this glossary.</p>\n<blockquote>\n<p>Still looking at Gottfried's list.</p>\n</blockquote>\n<p>In addition to collecting books, I also rip web pages for past,<br>\neducational courses on Isabelle. I haven't had time to study any of this<br>\nright now. I'm making enough progress just stumbling along. I'll get<br>\nmore sophisticated later. Some of these are linked to from the official<br>\nIsabelle site, many of them aren't.</p>\n<p>Regards, GB</p>\n<p><a href=\"http://www.phil.cmu.edu/~avigad/formal/\">http://www.phil.cmu.edu/~avigad/formal/</a></p>\n<p><a href=\"http://www.andrew.cmu.edu/user/avigad/isabelle/\">http://www.andrew.cmu.edu/user/avigad/isabelle/</a></p>\n<p><a href=\"http://www4.in.tum.de/~ballarin/belgrade08-tut/\">http://www4.in.tum.de/~ballarin/belgrade08-tut/</a></p>\n<p><a href=\"http://cl-informatik.uibk.ac.at/teaching/ss08/atp/schedule.php\">http://cl-informatik.uibk.ac.at/teaching/ss08/atp/schedule.php</a></p>\n<p><a href=\"http://isabelle.in.tum.de/coursematerial/IJCAR04/\">http://isabelle.in.tum.de/coursematerial/IJCAR04/</a></p>\n<p><a href=\"http://archiv.infsec.ethz.ch/education/permanent/csmr.html\">http://archiv.infsec.ethz.ch/education/permanent/csmr.html</a></p>\n<p><a href=\"http://isabelle.in.tum.de/exercises/\">http://isabelle.in.tum.de/exercises/</a></p>\n<p><a href=\"http://www.irisa.fr/celtique/genet/ACF/\">http://www.irisa.fr/celtique/genet/ACF/</a></p>\n<p><a href=\"http://dream.inf.ed.ac.uk/projects/isabelle/\">http://dream.inf.ed.ac.uk/projects/isabelle/</a></p>\n<p><a href=\"http://isabelle.in.tum.de/coursematerial/PSV2009-1/\">http://isabelle.in.tum.de/coursematerial/PSV2009-1/</a></p>\n<p><a href=\"http://www21.in.tum.de/teaching/logik/SS12/\">http://www21.in.tum.de/teaching/logik/SS12/</a></p>\n<p><a href=\"http://www4.in.tum.de/lehre/vorlesungen/semantik/WS1011/\">http://www4.in.tum.de/lehre/vorlesungen/semantik/WS1011/</a></p>\n<p><a href=\"http://www4.in.tum.de/lehre/vorlesungen/semantik/WS1112/\">http://www4.in.tum.de/lehre/vorlesungen/semantik/WS1112/</a></p>\n<p><a href=\"http://www.cs.colorado.edu/~siek/7000/spring07/\">http://www.cs.colorado.edu/~siek/7000/spring07/</a></p>\n<p><a href=\"http://ecee.colorado.edu/~siek/ecen3703/spring10/ECEN_3703.html\">http://ecee.colorado.edu/~siek/ecen3703/spring10/ECEN_3703.html</a></p>\n<p><a href=\"http://cl-informatik.uibk.ac.at/teaching/ss11/eve/content.php\">http://cl-informatik.uibk.ac.at/teaching/ss11/eve/content.php</a></p>\n<p><a href=\"http://www.lri.fr/~wenzel/Isar2010-Orsay/\">http://www.lri.fr/~wenzel/Isar2010-Orsay/</a></p>\n<p><a href=\"http://www.lri.fr/~wenzel/Isabelle2011-Paris/\">http://www.lri.fr/~wenzel/Isabelle2011-Paris/</a></p>\n<p><a href=\"http://www.lri.fr/~wenzel/Isabelle_Orsay_2012/\">http://www.lri.fr/~wenzel/Isabelle_Orsay_2012/</a></p>\n<p><a href=\"http://www.lri.fr/~wenzel/Isabelle_Orleans_2012/\">http://www.lri.fr/~wenzel/Isabelle_Orleans_2012/</a></p>\n</blockquote>",
        "id": 294232936,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660903396
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nOn 2/1/2013 3:41 PM, \"Mark\" wrote:</p>\n<blockquote>\n<p>Does that clear anything up?<br>\nMark,</p>\n</blockquote>\n<p>I was sort of speaking of maybe where I was a year ago, but \"the <br>\nproblem\" is still there to a certain extent.</p>\n<p>So I count 30 folders for the \"HOL section\" of books, then there's the <br>\nnon-HOL logic folders, where I count 49 folders, along with the ML <br>\nfolders, 14 of those, and the Isabelle section with about 14 top level <br>\nfolders, but many subfolders by author or web page.</p>\n<p>Before tying into the last paragraph, in the document <br>\nkanaskskis-8-logic.pdf, I point out the semi-formal BNF grammar <br>\ndescribing a HOL4 type, page 11, and then the first BNF grammar <br>\ndescribing a term, page 15, followed by the second BNF grammar of a term.</p>\n<p>I now ask, \"Where is the semi-formal definition of a Isabelle type and <br>\nterm?\"</p>\n<p>If you said, \"If you understand the HOL4 definitions of a type and term, <br>\nthen you basically understand Isabelle's\".</p>\n<p>To that I would reply, \"But I'm not interested in studying 2 or 3 or 4 <br>\nother HOL's to get a general understanding of Isabelle's logic, I'm <br>\ninterested in studying one logic to get a precise understanding of the <br>\none logic that I'm using.\"</p>\n<p>\"The problem\" is represented by another question. \"What is the clear <br>\nlearning path for learning about a particular HOL so that a person can <br>\nuse that HOL in a theorem assistant, and do that within a reasonable <br>\nperiod of time, and not just end up with a foggy notion of ideas?\"</p>\n<p>The answer is that, for self-education, there is no clear path. It's not <br>\nclear what is essential, and what is an unneeded tangent. But that's not <br>\nanyone's fault. It just indicates that the market is not mature.</p>\n<p>In a mature market, speaking analogously, you don't have to learn C, to <br>\nlearn C++, to learn Java, when it's Java that you're going to be using. <br>\nIn a mature market, people have written lots of books to start you <br>\nwherever you want to start.</p>\n<p>Now to something of a positive nature. The name for your HOL Zero site <br>\non my hard drive is \"hoZ\", and I downloaded the latest glossary, which <br>\nis now named \"hoZ__Glossary 130202.pdf\".</p>\n<p>It occurred to me that I can tweak it to fit my own preferences, so I <br>\nsaved it to PDF, and with Acrobat, I can add a bookmark entry for each <br>\nof the terms, and make them sub-bookmarks of their first character. <br>\nDoing that, I'll be able to see the trees, and not just the forest.</p>\n<p>There are many mini-lessons in there that don't demand a big investment <br>\nof time, so thanks for that.</p>\n<p>Regards,<br>\nGB</p>\n<blockquote>\n<p>I think it can get quite confusing because different people use the same<br>\nnames for different things, and different names for the same things, and<br>\nsometimes the same people do this too!</p>\n<p>\"HOL\" can mean \"higher-order logic\" (referring to one or more of various<br>\nlogics that are higher-order), or it can mean \"the HOL logic\" (Mike Gordon's<br>\nparticular higher-order logic, implemented by HOL4, Isabelle/HOL, HOL Light,<br>\nProofPower and HOL Zero).  Other theorem provers such as Coq, PVS and IMPS<br>\nimplement other higher-order logics.  So the logic described in the HOL4<br>\nlogic manual really is the same as HOL Light's, etc, the only difference<br>\nbeing that they are built up in different ways (i.e. they start with a<br>\ndifferent initial set of axioms and primitive inference rules, but these<br>\naxiomatisations are just different ways of defining the same logic).<br>\nDoes that clear anything up?</p>\n<p>Mark.</p>\n<p>on 1/2/13 2:23 PM, Gottfried Barrow&lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;  wrote:</p>\n<p>On 1/31/2013 1:46 PM, Yannick Duchêne (Hibou57) wrote:</p>\n<blockquote>\n<blockquote>\n<p>Seems available on‑line; here is a link for the paper you suggest:<br>\n<a href=\"http://www.sciencedirect.com/science/article/pii/S157086830700081X\">http://www.sciencedirect.com/science/article/pii/S157086830700081X#</a><br>\n(the page also has a link at the top, for a PDF version)<br>\nThere's a newer dated version, 20 December 2007, at the author's web<br>\nsite. The published one says \"received in revised form 6 August 2007\".</p>\n</blockquote>\n<p><a href=\"http://imps.mcmaster.ca/doc/seven-virtues.pdf\">http://imps.mcmaster.ca/doc/seven-virtues.pdf</a><br>\n<a href=\"http://imps.mcmaster.ca/doc/\">http://imps.mcmaster.ca/doc/</a></p>\n<p>When the gurus try to succinctly describe Isabelle/HOL, they'll many<br>\ntimes just use the phrase \"simply typed lambda calculus\".</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Simply_typed_lambda_calculus\">https://en.wikipedia.org/wiki/Simply_typed_lambda_calculus</a></p>\n<p>But if they have time to type a few extra characters, they might add the<br>\nphrase \"with polymorphism\".</p>\n<p>If you keep talking long enough, another one might pop in and throw in<br>\nthe term \"type classes\".</p>\n<p>Because there's no HOL which has yet won the HOL wars, then they use<br>\nexternal, historical vocabulary to begin the description of their HOL,<br>\nbut then have to start attaching their own internal vocabulary to the<br>\ndescription.</p>\n<p>For someone looking for a label to label HOL with, as a starting place<br>\nto learn about HOL, it can get confusing.</p>\n<p>If you see the phrase \"simple type theory\" in the title of Farmer's<br>\npaper, then you might ask, \"Ah, is this what's going to tell me what<br>\nIsabelle/HOL is? Because 'simple type theory' sounds suspiciously like<br>\n'simply typed lambda calculus'\".</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Type_theory#Theory_of_simple_types\">https://en.wikipedia.org/wiki/Type_theory#Theory_of_simple_types</a></p>\n<p>Being an authoritative prophet, I can now say that in the future, the<br>\nHOL's which win out in the HOL wars will be the standard themselves, and<br>\nthe references will be to the 700 page textbooks which formalize,<br>\nstarting with the basics, what the logic of these HOLs are.</p>\n<p>For HOL4 they already have that in their logic manual (to what degree I<br>\ncan't say), which I thought would be the perfect place to learn about<br>\nIsabelle/HOL's formal logic, but it's not, it's the perfect place to<br>\nlearn about HOL4's formal logic:</p>\n<p><a href=\"http://hol.sourceforge.net/documentation.html\">http://hol.sourceforge.net/documentation.html</a></p>\n<p>For completeness, I quote from Mark's glossary to show how the gurus<br>\nhave to do a lot qualifying when they try to explain things:</p>\n<p>simply-typed : (adj)  Relating to type systems that are relatively simple<br>\nand<br>\nare not, for example, dependently-typed.  There is considerable variation<br>\nin<br>\nthe<br>\nprecise intended meaning of \"simply-typed\" in contemporary usage: in some<br>\nusages<br>\npolymorphism is not a disqualifying factor, in other usages polymorphism<br>\nis<br>\nonly<br>\na disqualifying factor if it caters for the quantification of type<br>\nvariables,<br>\nand in other usages still any form of polymorphism is a disqualifying<br>\nfactor.<br>\nTo avoid confusion, the usage of this term is avoided in HOL Zero, its<br>\ndocumentation and elsewhere in this glossary.</p>\n<blockquote>\n<p>Still looking at Gottfried's list.<br>\nIn addition to collecting books, I also rip web pages for past,<br>\neducational courses on Isabelle. I haven't had time to study any of this<br>\nright now. I'm making enough progress just stumbling along. I'll get<br>\nmore sophisticated later. Some of these are linked to from the official<br>\nIsabelle site, many of them aren't.</p>\n</blockquote>\n<p>Regards, GB</p>\n<p><a href=\"http://www.phil.cmu.edu/~avigad/formal/\">http://www.phil.cmu.edu/~avigad/formal/</a></p>\n<p><a href=\"http://www.andrew.cmu.edu/user/avigad/isabelle/\">http://www.andrew.cmu.edu/user/avigad/isabelle/</a></p>\n<p><a href=\"http://www4.in.tum.de/~ballarin/belgrade08-tut/\">http://www4.in.tum.de/~ballarin/belgrade08-tut/</a></p>\n<p><a href=\"http://cl-informatik.uibk.ac.at/teaching/ss08/atp/schedule.php\">http://cl-informatik.uibk.ac.at/teaching/ss08/atp/schedule.php</a></p>\n<p><a href=\"http://isabelle.in.tum.de/coursematerial/IJCAR04/\">http://isabelle.in.tum.de/coursematerial/IJCAR04/</a></p>\n<p><a href=\"http://archiv.infsec.ethz.ch/education/permanent/csmr.html\">http://archiv.infsec.ethz.ch/education/permanent/csmr.html</a></p>\n<p><a href=\"http://isabelle.in.tum.de/exercises/\">http://isabelle.in.tum.de/exercises/</a></p>\n<p><a href=\"http://www.irisa.fr/celtique/genet/ACF/\">http://www.irisa.fr/celtique/genet/ACF/</a></p>\n<p><a href=\"http://dream.inf.ed.ac.uk/projects/isabelle/\">http://dream.inf.ed.ac.uk/projects/isabelle/</a></p>\n<p><a href=\"http://isabelle.in.tum.de/coursematerial/PSV2009-1/\">http://isabelle.in.tum.de/coursematerial/PSV2009-1/</a></p>\n<p><a href=\"http://www21.in.tum.de/teaching/logik/SS12/\">http://www21.in.tum.de/teaching/logik/SS12/</a></p>\n<p><a href=\"http://www4.in.tum.de/lehre/vorlesungen/semantik/WS1011/\">http://www4.in.tum.de/lehre/vorlesungen/semantik/WS1011/</a></p>\n<p><a href=\"http://www4.in.tum.de/lehre/vorlesungen/semantik/WS1112/\">http://www4.in.tum.de/lehre/vorlesungen/semantik/WS1112/</a></p>\n<p><a href=\"http://www.cs.colorado.edu/~siek/7000/spring07/\">http://www.cs.colorado.edu/~siek/7000/spring07/</a></p>\n<p><a href=\"http://ecee.colorado.edu/~siek/ecen3703/spring10/ECEN_3703.html\">http://ecee.colorado.edu/~siek/ecen3703/spring10/ECEN_3703.html</a></p>\n<p><a href=\"http://cl-informatik.uibk.ac.at/teaching/ss11/eve/content.php\">http://cl-informatik.uibk.ac.at/teaching/ss11/eve/content.php</a></p>\n<p><a href=\"http://www.lri.fr/~wenzel/Isar2010-Orsay/\">http://www.lri.fr/~wenzel/Isar2010-Orsay/</a></p>\n<p><a href=\"http://www.lri.fr/~wenzel/Isabelle2011-Paris/\">http://www.lri.fr/~wenzel/Isabelle2011-Paris/</a></p>\n<p><a href=\"http://www.lri.fr/~wenzel/Isabelle_Orsay_2012/\">http://www.lri.fr/~wenzel/Isabelle_Orsay_2012/</a></p>\n<p><a href=\"http://www.lri.fr/~wenzel/Isabelle_Orleans_2012/\">http://www.lri.fr/~wenzel/Isabelle_Orleans_2012/</a></p>\n</blockquote>\n</blockquote>",
        "id": 294233766,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660903800
    },
    {
        "content": "<p>From: \"\\\"Mark\\\"\" &lt;<a href=\"mailto:mark@proof-technologies.com\">mark@proof-technologies.com</a>&gt;<br>\nYes, I agree it's very difficult.  When I started in theorem proving I was<br>\nalso struck by the lack of a clear learning path.  Isabelle is I think one<br>\nof the most difficult to <em>really</em> understand how everything works.  You have<br>\nto understand each of the many layers of Isabelle.  I'm afraid I don't<br>\nunderstand these layers, although I would like to at some stage, but more<br>\nseem to be getting added as the years go by!  But the main priorities for<br>\nthe implementors of Isabelle, as I understand it, have been usability and<br>\npower, and having an understandable implementation comes way down the list.<br>\nIn HOL Zero, trustworthiness and understandable implementation are top of<br>\nthe list (they go hand-in-hand in my opinion), but of course it is very<br>\nbasic and no good for creating proofs.  So I think an important part of the<br>\nissue here is about priorities.</p>\n<p>Mark.</p>\n<p>on 2/2/13 9:04 PM, Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt; wrote:</p>\n<blockquote>\n<p>On 2/1/2013 3:41 PM, \"Mark\" wrote:</p>\n<blockquote>\n<p>Does that clear anything up?<br>\nMark,</p>\n</blockquote>\n<p>I was sort of speaking of maybe where I was a year ago, but \"the<br>\nproblem\" is still there to a certain extent.</p>\n<p>So I count 30 folders for the \"HOL section\" of books, then there's the<br>\nnon-HOL logic folders, where I count 49 folders, along with the ML<br>\nfolders, 14 of those, and the Isabelle section with about 14 top level<br>\nfolders, but many subfolders by author or web page.</p>\n<p>Before tying into the last paragraph, in the document<br>\nkanaskskis-8-logic.pdf, I point out the semi-formal BNF grammar<br>\ndescribing a HOL4 type, page 11, and then the first BNF grammar<br>\ndescribing a term, page 15, followed by the second BNF grammar of a term.</p>\n<p>I now ask, \"Where is the semi-formal definition of a Isabelle type and<br>\nterm?\"</p>\n<p>If you said, \"If you understand the HOL4 definitions of a type and term,<br>\nthen you basically understand Isabelle's\".</p>\n<p>To that I would reply, \"But I'm not interested in studying 2 or 3 or 4<br>\nother HOL's to get a general understanding of Isabelle's logic, I'm<br>\ninterested in studying one logic to get a precise understanding of the<br>\none logic that I'm using.\"</p>\n<p>\"The problem\" is represented by another question. \"What is the clear<br>\nlearning path for learning about a particular HOL so that a person can<br>\nuse that HOL in a theorem assistant, and do that within a reasonable<br>\nperiod of time, and not just end up with a foggy notion of ideas?\"</p>\n<p>The answer is that, for self-education, there is no clear path. It's not<br>\nclear what is essential, and what is an unneeded tangent. But that's not<br>\nanyone's fault. It just indicates that the market is not mature.</p>\n<p>In a mature market, speaking analogously, you don't have to learn C, to<br>\nlearn C++, to learn Java, when it's Java that you're going to be using.<br>\nIn a mature market, people have written lots of books to start you<br>\nwherever you want to start.</p>\n<p>Now to something of a positive nature. The name for your HOL Zero site<br>\non my hard drive is \"hoZ\", and I downloaded the latest glossary, which<br>\nis now named \"hoZ__Glossary 130202.pdf\".</p>\n<p>It occurred to me that I can tweak it to fit my own preferences, so I<br>\nsaved it to PDF, and with Acrobat, I can add a bookmark entry for each<br>\nof the terms, and make them sub-bookmarks of their first character.<br>\nDoing that, I'll be able to see the trees, and not just the forest.</p>\n<p>There are many mini-lessons in there that don't demand a big investment<br>\nof time, so thanks for that.</p>\n<p>Regards,<br>\nGB</p>\n<blockquote>\n<p>I think it can get quite confusing because different people use the same<br>\nnames for different things, and different names for the same things, and<br>\nsometimes the same people do this too!</p>\n<p>\"HOL\" can mean \"higher-order logic\" (referring to one or more of various<br>\nlogics that are higher-order), or it can mean \"the HOL logic\" (Mike<br>\nGordon's<br>\nparticular higher-order logic, implemented by HOL4, Isabelle/HOL, HOL<br>\nLight,<br>\nProofPower and HOL Zero).  Other theorem provers such as Coq, PVS and<br>\nIMPS<br>\nimplement other higher-order logics.  So the logic described in the HOL4<br>\nlogic manual really is the same as HOL Light's, etc, the only difference<br>\nbeing that they are built up in different ways (i.e. they start with a<br>\ndifferent initial set of axioms and primitive inference rules, but these<br>\naxiomatisations are just different ways of defining the same logic).<br>\nDoes that clear anything up?</p>\n<p>Mark.</p>\n<p>on 1/2/13 2:23 PM, Gottfried Barrow&lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;  wrote:</p>\n<p>On 1/31/2013 1:46 PM, Yannick Duchêne (Hibou57) wrote:</p>\n<blockquote>\n<blockquote>\n<p>Seems available on‑line; here is a link for the paper you suggest:<br>\n<a href=\"http://www.sciencedirect.com/science/article/pii/S157086830700081X\">http://www.sciencedirect.com/science/article/pii/S157086830700081X#</a><br>\n(the page also has a link at the top, for a PDF version)<br>\nThere's a newer dated version, 20 December 2007, at the author's web<br>\nsite. The published one says \"received in revised form 6 August 2007\".</p>\n</blockquote>\n<p><a href=\"http://imps.mcmaster.ca/doc/seven-virtues.pdf\">http://imps.mcmaster.ca/doc/seven-virtues.pdf</a><br>\n<a href=\"http://imps.mcmaster.ca/doc/\">http://imps.mcmaster.ca/doc/</a></p>\n<p>When the gurus try to succinctly describe Isabelle/HOL, they'll many<br>\ntimes just use the phrase \"simply typed lambda calculus\".</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Simply_typed_lambda_calculus\">https://en.wikipedia.org/wiki/Simply_typed_lambda_calculus</a></p>\n<p>But if they have time to type a few extra characters, they might add the<br>\nphrase \"with polymorphism\".</p>\n<p>If you keep talking long enough, another one might pop in and throw in<br>\nthe term \"type classes\".</p>\n<p>Because there's no HOL which has yet won the HOL wars, then they use<br>\nexternal, historical vocabulary to begin the description of their HOL,<br>\nbut then have to start attaching their own internal vocabulary to the<br>\ndescription.</p>\n<p>For someone looking for a label to label HOL with, as a starting place<br>\nto learn about HOL, it can get confusing.</p>\n<p>If you see the phrase \"simple type theory\" in the title of Farmer's<br>\npaper, then you might ask, \"Ah, is this what's going to tell me what<br>\nIsabelle/HOL is? Because 'simple type theory' sounds suspiciously like<br>\n'simply typed lambda calculus'\".</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Type_theory#Theory_of_simple_types\">https://en.wikipedia.org/wiki/Type_theory#Theory_of_simple_types</a></p>\n<p>Being an authoritative prophet, I can now say that in the future, the<br>\nHOL's which win out in the HOL wars will be the standard themselves, and<br>\nthe references will be to the 700 page textbooks which formalize,<br>\nstarting with the basics, what the logic of these HOLs are.</p>\n<p>For HOL4 they already have that in their logic manual (to what degree I<br>\ncan't say), which I thought would be the perfect place to learn about<br>\nIsabelle/HOL's formal logic, but it's not, it's the perfect place to<br>\nlearn about HOL4's formal logic:</p>\n<p><a href=\"http://hol.sourceforge.net/documentation.html\">http://hol.sourceforge.net/documentation.html</a></p>\n<p>For completeness, I quote from Mark's glossary to show how the gurus<br>\nhave to do a lot qualifying when they try to explain things:</p>\n<p>simply-typed : (adj)  Relating to type systems that are relatively<br>\nsimple<br>\nand<br>\nare not, for example, dependently-typed.  There is considerable<br>\nvariation<br>\nin<br>\nthe<br>\nprecise intended meaning of \"simply-typed\" in contemporary usage: in<br>\nsome<br>\nusages<br>\npolymorphism is not a disqualifying factor, in other usages polymorphism<br>\nis<br>\nonly<br>\na disqualifying factor if it caters for the quantification of type<br>\nvariables,<br>\nand in other usages still any form of polymorphism is a disqualifying<br>\nfactor.<br>\nTo avoid confusion, the usage of this term is avoided in HOL Zero, its<br>\ndocumentation and elsewhere in this glossary.</p>\n<blockquote>\n<p>Still looking at Gottfried's list.<br>\nIn addition to collecting books, I also rip web pages for past,<br>\neducational courses on Isabelle. I haven't had time to study any of this<br>\nright now. I'm making enough progress just stumbling along. I'll get<br>\nmore sophisticated later. Some of these are linked to from the official<br>\nIsabelle site, many of them aren't.</p>\n</blockquote>\n<p>Regards, GB</p>\n<p><a href=\"http://www.phil.cmu.edu/~avigad/formal/\">http://www.phil.cmu.edu/~avigad/formal/</a></p>\n<p><a href=\"http://www.andrew.cmu.edu/user/avigad/isabelle/\">http://www.andrew.cmu.edu/user/avigad/isabelle/</a></p>\n<p><a href=\"http://www4.in.tum.de/~ballarin/belgrade08-tut/\">http://www4.in.tum.de/~ballarin/belgrade08-tut/</a></p>\n<p><a href=\"http://cl-informatik.uibk.ac.at/teaching/ss08/atp/schedule.php\">http://cl-informatik.uibk.ac.at/teaching/ss08/atp/schedule.php</a></p>\n<p><a href=\"http://isabelle.in.tum.de/coursematerial/IJCAR04/\">http://isabelle.in.tum.de/coursematerial/IJCAR04/</a></p>\n<p><a href=\"http://archiv.infsec.ethz.ch/education/permanent/csmr.html\">http://archiv.infsec.ethz.ch/education/permanent/csmr.html</a></p>\n<p><a href=\"http://isabelle.in.tum.de/exercises/\">http://isabelle.in.tum.de/exercises/</a></p>\n<p><a href=\"http://www.irisa.fr/celtique/genet/ACF/\">http://www.irisa.fr/celtique/genet/ACF/</a></p>\n<p><a href=\"http://dream.inf.ed.ac.uk/projects/isabelle/\">http://dream.inf.ed.ac.uk/projects/isabelle/</a></p>\n<p><a href=\"http://isabelle.in.tum.de/coursematerial/PSV2009-1/\">http://isabelle.in.tum.de/coursematerial/PSV2009-1/</a></p>\n<p><a href=\"http://www21.in.tum.de/teaching/logik/SS12/\">http://www21.in.tum.de/teaching/logik/SS12/</a></p>\n<p><a href=\"http://www4.in.tum.de/lehre/vorlesungen/semantik/WS1011/\">http://www4.in.tum.de/lehre/vorlesungen/semantik/WS1011/</a></p>\n<p><a href=\"http://www4.in.tum.de/lehre/vorlesungen/semantik/WS1112/\">http://www4.in.tum.de/lehre/vorlesungen/semantik/WS1112/</a></p>\n<p><a href=\"http://www.cs.colorado.edu/~siek/7000/spring07/\">http://www.cs.colorado.edu/~siek/7000/spring07/</a></p>\n<p><a href=\"http://ecee.colorado.edu/~siek/ecen3703/spring10/ECEN_3703.html\">http://ecee.colorado.edu/~siek/ecen3703/spring10/ECEN_3703.html</a></p>\n<p><a href=\"http://cl-informatik.uibk.ac.at/teaching/ss11/eve/content.php\">http://cl-informatik.uibk.ac.at/teaching/ss11/eve/content.php</a></p>\n<p><a href=\"http://www.lri.fr/~wenzel/Isar2010-Orsay/\">http://www.lri.fr/~wenzel/Isar2010-Orsay/</a></p>\n<p><a href=\"http://www.lri.fr/~wenzel/Isabelle2011-Paris/\">http://www.lri.fr/~wenzel/Isabelle2011-Paris/</a></p>\n<p><a href=\"http://www.lri.fr/~wenzel/Isabelle_Orsay_2012/\">http://www.lri.fr/~wenzel/Isabelle_Orsay_2012/</a></p>\n<p><a href=\"http://www.lri.fr/~wenzel/Isabelle_Orleans_2012/\">http://www.lri.fr/~wenzel/Isabelle_Orleans_2012/</a></p>\n</blockquote>\n</blockquote>\n</blockquote>",
        "id": 294233926,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660903871
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nOn 2/2/2013 4:17 PM, \"Mark\" wrote:</p>\n<blockquote>\n<p>Yes, I agree it's very difficult.</p>\n</blockquote>\n<p>Mark,</p>\n<p>But there's still lots of good news, like \"the market\" is way past <br>\nCambridge LCF, and that low-priced computers now can have 4 cores, 8 <br>\nGBytes of ram, and run at 2.5GHz or greater, because without fast <br>\ncomputers, functional programming would still be the domain of the <br>\nacademics. It was only a few years ago that I would rail about Java, <br>\nafter my computer performance would come to crawl because the browser <br>\nwas starting up Java.</p>\n<p>The docs distributed with HOL Zero have some good tutorial information <br>\nin them, like \"3_HOL_Language.txt\".</p>\n<p>I created the file \"HOL_Zero_docs.tex\". If a person unzips <br>\n\"holzero-0.6.0.tgz\", and puts my .tex file in the folder <br>\n\"./holzero-0.6.0\", then they can produce the PDF file \"HOL_Zero_docs.pdf\".</p>\n<p>I had to add the extension \".txt\" to the files without an extension, <br>\notherwise \"\\VerbatimInput\" gave an error.</p>\n<p>I attached \"HOL_Zero_docs.tex\", and I attached \"\"HOL_Zero_docs.pdf\", <br>\nwhere the PDF is for demonstration purposes only. The PDF is to show <br>\nwhat a person would have access to if they were to install Latex on <br>\ntheir machine and compile the .tex file.</p>\n<p>Again, the PDF is for demonstration purposes only. It is required that <br>\nany student of HOL acquire the sources from the web and compile their <br>\nown .tex file. The allotted time for viewing the PDF for demonstration <br>\npurposes is an integer m, where m can be greater than or equal to 1, but <br>\nless than or equal to 30, where the dimension of m is seconds.</p>\n<p>Regards,<br>\nGB</p>\n<blockquote>\n<p>When I started in theorem proving I was<br>\nalso struck by the lack of a clear learning path.  Isabelle is I think one<br>\nof the most difficult to <em>really</em> understand how everything works.  You have<br>\nto understand each of the many layers of Isabelle.  I'm afraid I don't<br>\nunderstand these layers, although I would like to at some stage, but more<br>\nseem to be getting added as the years go by!  But the main priorities for<br>\nthe implementors of Isabelle, as I understand it, have been usability and<br>\npower, and having an understandable implementation comes way down the list.<br>\nIn HOL Zero, trustworthiness and understandable implementation are top of<br>\nthe list (they go hand-in-hand in my opinion), but of course it is very<br>\nbasic and no good for creating proofs.  So I think an important part of the<br>\nissue here is about priorities.</p>\n<p>Mark.</p>\n<p>on 2/2/13 9:04 PM, Gottfried Barrow&lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;  wrote:</p>\n<p>On 2/1/2013 3:41 PM, \"Mark\" wrote:</p>\n<blockquote>\n<blockquote>\n<p>Does that clear anything up?<br>\nMark,</p>\n</blockquote>\n<p>I was sort of speaking of maybe where I was a year ago, but \"the<br>\nproblem\" is still there to a certain extent.</p>\n<p>So I count 30 folders for the \"HOL section\" of books, then there's the<br>\nnon-HOL logic folders, where I count 49 folders, along with the ML<br>\nfolders, 14 of those, and the Isabelle section with about 14 top level<br>\nfolders, but many subfolders by author or web page.</p>\n<p>Before tying into the last paragraph, in the document<br>\nkanaskskis-8-logic.pdf, I point out the semi-formal BNF grammar<br>\ndescribing a HOL4 type, page 11, and then the first BNF grammar<br>\ndescribing a term, page 15, followed by the second BNF grammar of a term.</p>\n<p>I now ask, \"Where is the semi-formal definition of a Isabelle type and<br>\nterm?\"</p>\n<p>If you said, \"If you understand the HOL4 definitions of a type and term,<br>\nthen you basically understand Isabelle's\".</p>\n<p>To that I would reply, \"But I'm not interested in studying 2 or 3 or 4<br>\nother HOL's to get a general understanding of Isabelle's logic, I'm<br>\ninterested in studying one logic to get a precise understanding of the<br>\none logic that I'm using.\"</p>\n<p>\"The problem\" is represented by another question. \"What is the clear<br>\nlearning path for learning about a particular HOL so that a person can<br>\nuse that HOL in a theorem assistant, and do that within a reasonable<br>\nperiod of time, and not just end up with a foggy notion of ideas?\"</p>\n<p>The answer is that, for self-education, there is no clear path. It's not<br>\nclear what is essential, and what is an unneeded tangent. But that's not<br>\nanyone's fault. It just indicates that the market is not mature.</p>\n<p>In a mature market, speaking analogously, you don't have to learn C, to<br>\nlearn C++, to learn Java, when it's Java that you're going to be using.<br>\nIn a mature market, people have written lots of books to start you<br>\nwherever you want to start.</p>\n<p>Now to something of a positive nature. The name for your HOL Zero site<br>\non my hard drive is \"hoZ\", and I downloaded the latest glossary, which<br>\nis now named \"hoZ__Glossary 130202.pdf\".</p>\n<p>It occurred to me that I can tweak it to fit my own preferences, so I<br>\nsaved it to PDF, and with Acrobat, I can add a bookmark entry for each<br>\nof the terms, and make them sub-bookmarks of their first character.<br>\nDoing that, I'll be able to see the trees, and not just the forest.</p>\n<p>There are many mini-lessons in there that don't demand a big investment<br>\nof time, so thanks for that.</p>\n<p>Regards,<br>\nGB</p>\n<blockquote>\n<p>I think it can get quite confusing because different people use the same<br>\nnames for different things, and different names for the same things, and<br>\nsometimes the same people do this too!</p>\n<p>\"HOL\" can mean \"higher-order logic\" (referring to one or more of various<br>\nlogics that are higher-order), or it can mean \"the HOL logic\" (Mike<br>\nGordon's<br>\nparticular higher-order logic, implemented by HOL4, Isabelle/HOL, HOL<br>\nLight,<br>\nProofPower and HOL Zero).  Other theorem provers such as Coq, PVS and<br>\nIMPS<br>\nimplement other higher-order logics.  So the logic described in the HOL4<br>\nlogic manual really is the same as HOL Light's, etc, the only difference<br>\nbeing that they are built up in different ways (i.e. they start with a<br>\ndifferent initial set of axioms and primitive inference rules, but these<br>\naxiomatisations are just different ways of defining the same logic).<br>\nDoes that clear anything up?</p>\n<p>Mark.</p>\n<p>on 1/2/13 2:23 PM, Gottfried Barrow&lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;   wrote:</p>\n<p>On 1/31/2013 1:46 PM, Yannick Duchêne (Hibou57) wrote:</p>\n<blockquote>\n<blockquote>\n<p>Seems available on‑line; here is a link for the paper you suggest:<br>\n<a href=\"http://www.sciencedirect.com/science/article/pii/S157086830700081X\">http://www.sciencedirect.com/science/article/pii/S157086830700081X#</a><br>\n(the page also has a link at the top, for a PDF version)<br>\nThere's a newer dated version, 20 December 2007, at the author's web<br>\nsite. The published one says \"received in revised form 6 August 2007\".</p>\n</blockquote>\n<p><a href=\"http://imps.mcmaster.ca/doc/seven-virtues.pdf\">http://imps.mcmaster.ca/doc/seven-virtues.pdf</a><br>\n<a href=\"http://imps.mcmaster.ca/doc/\">http://imps.mcmaster.ca/doc/</a></p>\n<p>When the gurus try to succinctly describe Isabelle/HOL, they'll many<br>\ntimes just use the phrase \"simply typed lambda calculus\".</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Simply_typed_lambda_calculus\">https://en.wikipedia.org/wiki/Simply_typed_lambda_calculus</a></p>\n<p>But if they have time to type a few extra characters, they might add the<br>\nphrase \"with polymorphism\".</p>\n<p>If you keep talking long enough, another one might pop in and throw in<br>\nthe term \"type classes\".</p>\n<p>Because there's no HOL which has yet won the HOL wars, then they use<br>\nexternal, historical vocabulary to begin the description of their HOL,<br>\nbut then have to start attaching their own internal vocabulary to the<br>\ndescription.</p>\n<p>For someone looking for a label to label HOL with, as a starting place<br>\nto learn about HOL, it can get confusing.</p>\n<p>If you see the phrase \"simple type theory\" in the title of Farmer's<br>\npaper, then you might ask, \"Ah, is this what's going to tell me what<br>\nIsabelle/HOL is? Because 'simple type theory' sounds suspiciously like<br>\n'simply typed lambda calculus'\".</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Type_theory#Theory_of_simple_types\">https://en.wikipedia.org/wiki/Type_theory#Theory_of_simple_types</a></p>\n<p>Being an authoritative prophet, I can now say that in the future, the<br>\nHOL's which win out in the HOL wars will be the standard themselves, and<br>\nthe references will be to the 700 page textbooks which formalize,<br>\nstarting with the basics, what the logic of these HOLs are.</p>\n<p>For HOL4 they already have that in their logic manual (to what degree I<br>\ncan't say), which I thought would be the perfect place to learn about<br>\nIsabelle/HOL's formal logic, but it's not, it's the perfect place to<br>\nlearn about HOL4's formal logic:</p>\n<p><a href=\"http://hol.sourceforge.net/documentation.html\">http://hol.sourceforge.net/documentation.html</a></p>\n<p>For completeness, I quote from Mark's glossary to show how the gurus<br>\nhave to do a lot qualifying when they try to explain things:</p>\n<p>simply-typed : (adj)  Relating to type systems that are relatively<br>\nsimple<br>\nand<br>\nare not, for example, dependently-typed.  There is considerable<br>\nvariation<br>\nin<br>\nthe<br>\nprecise intended meaning of \"simply-typed\" in contemporary usage: in<br>\nsome<br>\nusages<br>\npolymorphism is not a disqualifying factor, in other usages polymorphism<br>\nis<br>\nonly<br>\na disqualifying factor if it caters for the quantification of type<br>\nvariables,<br>\nand in other usages still any form of polymorphism is a disqualifying<br>\nfactor.<br>\nTo avoid confusion, the usage of this term is avoided in HOL Zero, its<br>\ndocumentation and elsewhere in this glossary.</p>\n<blockquote>\n<p>Still looking at Gottfried's list.<br>\nIn addition to collecting books, I also rip web pages for past,<br>\neducational courses on Isabelle. I haven't had time to study any of this<br>\nright now. I'm making enough progress just stumbling along. I'll get<br>\nmore sophisticated later. Some of these are linked to from the official<br>\nIsabelle site, many of them aren't.</p>\n</blockquote>\n<p>Regards, GB</p>\n<p><a href=\"http://www.phil.cmu.edu/~avigad/formal/\">http://www.phil.cmu.edu/~avigad/formal/</a></p>\n<p><a href=\"http://www.andrew.cmu.edu/user/avigad/isabelle/\">http://www.andrew.cmu.edu/user/avigad/isabelle/</a></p>\n<p><a href=\"http://www4.in.tum.de/~ballarin/belgrade08-tut/\">http://www4.in.tum.de/~ballarin/belgrade08-tut/</a></p>\n<p><a href=\"http://cl-informatik.uibk.ac.at/teaching/ss08/atp/schedule.php\">http://cl-informatik.uibk.ac.at/teaching/ss08/atp/schedule.php</a></p>\n<p><a href=\"http://isabelle.in.tum.de/coursematerial/IJCAR04/\">http://isabelle.in.tum.de/coursematerial/IJCAR04/</a><br>\n[message truncated]</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>",
        "id": 294234343,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660904084
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Sat, 2 Feb 2013, \"Mark\" wrote:</p>\n<blockquote>\n<p>Yes, I agree it's very difficult.  When I started in theorem proving I <br>\nwas also struck by the lack of a clear learning path.  Isabelle is I <br>\nthink one of the most difficult to <em>really</em> understand how everything <br>\nworks.  You have to understand each of the many layers of Isabelle. <br>\nI'm afraid I don't understand these layers, although I would like to at <br>\nsome stage, but more seem to be getting added as the years go by!</p>\n</blockquote>\n<p>I don't know anybody who really understands everything of Isabelle.  But I <br>\ndo understand its construction principles, and have a vague idea of the <br>\nvast space of possibilities resulting from it.  This is just plain-old <br>\nmodularity taken seriously.</p>\n<p>There is no need for users to understand everything.  I use Linux everyday <br>\nwithout having a clue how it is done these days, although I know about <br>\ncertain general principles as a mental model.</p>\n<blockquote>\n<p>But the main priorities for the implementors of Isabelle, as I <br>\nunderstand it, have been usability and power, and having an <br>\nunderstandable implementation comes way down the list.</p>\n</blockquote>\n<p>Understandable implementation is actually the main priority in Isabelle. <br>\nOtherwise this vast system could not be managed at all.</p>\n<p>The difference you see is that we have made conceptual progress in the <br>\nlast 20 years how to build a high-end LCF-style system.  Progess is not <br>\nfor free, you have to provide some structure, and that inevitaby <br>\nintroduces some complexity.</p>\n<blockquote>\n<p>In HOL Zero, trustworthiness and understandable implementation are top <br>\nof the list (they go hand-in-hand in my opinion), but of course it is <br>\nvery basic and no good for creating proofs.</p>\n</blockquote>\n<p>This discussion has bounced between the HOL and Isabelle mailing lists <br>\nseveral times already.  HOL Zero is as tiny that you see the problems <br>\ninherited from OCaml immediately.  I would put more trust on OpenTheory <br>\nright now.</p>\n<p>But we don't have users in the queue to ask substantially more <br>\ntrustworthyness than is there in Isabelle already.  Most users actually <br>\nwant less, but I have no inclination to reduce the general robustness of <br>\nIsabelle either.</p>\n<p>Makarius</p>",
        "id": 294234742,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660904279
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nSee the Isabelle/Isar implementation manual chapter 2, about Isabelle/Pure <br>\nas reduced version of Higher-Order Logic to provide the logical framework. <br>\nThis is occasionally interesting to know, although just some tiny <br>\nfoundational bit.  From Isabelle/Pure you move on to Isabelle/HOL, then <br>\nyou add many add-on tools for 'inductive', 'datatype' etc. and lots of <br>\nproof tools like Sledgehammer.  Then you are quite high above the logical <br>\nfoundations and don't care much about them.</p>\n<p>What is also interesting that the final end-user view tends to converge to <br>\nwhat totally different systems offer here, e.g. Coq with its quite <br>\ndifferent foundations, if you take inductive definitions or recursive <br>\nfunctions, for example.</p>\n<p>Makarius</p>",
        "id": 294234939,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660904346
    },
    {
        "content": "<p>From: \"Yannick Duchêne (Hibou57 )\" &lt;<a href=\"mailto:yannick_duchene@yahoo.fr\">yannick_duchene@yahoo.fr</a>&gt;<br>\nLe Mon, 04 Feb 2013 16:16:43 +0100, Makarius  <br>\n&lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; a écrit:</p>\n<blockquote>\n<p>On Sat, 2 Feb 2013, Gottfried Barrow wrote:</p>\n<blockquote>\n<p>I now ask, \"Where is the semi-formal definition of a Isabelle type and  <br>\nterm?\"</p>\n<p>If you said, \"If you understand the HOL4 definitions of a type and  <br>\nterm, then you basically understand Isabelle's\".</p>\n</blockquote>\n<p>See the Isabelle/Isar implementation manual chapter 2, about  <br>\nIsabelle/Pure as reduced version of Higher-Order Logic to provide the  <br>\nlogical framework. This is occasionally interesting to know, although  <br>\njust some tiny foundational bit.  From Isabelle/Pure you move on to  <br>\nIsabelle/HOL,</p>\n</blockquote>\n<p>But Isabelle/HOL is entirely derived from Isabelle/Pure, isn't it?</p>\n<blockquote>\n<p>What is also interesting that the final end-user view tends to converge  <br>\nto what totally different systems offer here, e.g. Coq with its quite  <br>\ndifferent foundations, if you take inductive definitions or recursive  <br>\nfunctions, for example.</p>\n</blockquote>\n<p>People seems to care, only when they have to port some proof from one  <br>\nsystem to another. There seems to be multiple HOL4 to Isabelle papers on  <br>\nthe web, and seems all are concerned with foundations.</p>",
        "id": 294235227,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660904481
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nOn 2/4/2013 9:16 AM, Makarius wrote:</p>\n<blockquote>\n<p>On Sat, 2 Feb 2013, Gottfried Barrow wrote:</p>\n<blockquote>\n<p>I now ask, \"Where is the semi-formal definition of a Isabelle type <br>\nand term?\"</p>\n<p>If you said, \"If you understand the HOL4 definitions of a type and <br>\nterm, then you basically understand Isabelle's\".<br>\nSee the Isabelle/Isar implementation manual chapter 2, about <br>\nIsabelle/Pure as reduced version of Higher-Order Logic to provide the <br>\nlogical framework. </p>\n</blockquote>\n</blockquote>\n<p>Makarius,</p>\n<p>Thanks for the reference. A little guidance can go a long way. But, it <br>\nstill gets unwieldy, so I quote from a cycling blog article, <br>\n<a href=\"http://inrng.com/2013/02/eurosport-david-harmon-interview/\">http://inrng.com/2013/02/eurosport-david-harmon-interview/</a></p>\n<p>In truth the greatest challenge is from having to deal with<br>\n    performances unfolding in front of you that are just so astounding<br>\n    and abnormal that you know precisely what's happening but you just<br>\n    can't say it straight out. The list is endless; Rasmussen, Armstrong<br>\n    and the Postals, Sella, Ricco, Mazzoleni... and on. I now confine<br>\n    myself to saying \"that was an unbelievable performance\"...</p>\n<p>What I know precisely is that the answer is spread out over multiple <br>\ndocuments, which was actually easy to know, just not easy to sort out.</p>\n<p>I'm already past my word limit, so I try to implement a form of the <br>\nmethod from the quote.</p>\n<p>The augmented question at hand: what is a \"more formal\" definition of a <br>\nIsabelle type, term, and formulae.</p>\n<p>We start at the very bottom of page 27 and the first three lines of page <br>\n28 of isar-ref.pdf to give us a conceptual view of 3 important <br>\nmeta-logic types: functions, universal quantification, and implication:</p>\n<p><a href=\"http://isabelle.in.tum.de/website-Isabelle2012/dist/Isabelle2012/doc/isar-ref.pdf\">http://isabelle.in.tum.de/website-Isabelle2012/dist/Isabelle2012/doc/isar-ref.pdf</a></p>\n<p>On page 28, there's reference [5] to Stefan and Tobias' \"Proof terms for <br>\nsimply typed higher order logic\", published 2000, where on page 2 of <br>\nthat, there are semi-formal definitions of types, terms, and formulae, <br>\nwhere two of those important meta-logic types show up again, universal <br>\nquantification, and implication.</p>\n<p><a href=\"http://www4.in.tum.de/~berghofe/papers/TPHOLs2000.pdf\">http://www4.in.tum.de/~berghofe/papers/TPHOLs2000.pdf</a></p>\n<p>There are references [33,34] in isar-ref.pdf and [8,9] in \"Proof terms\" <br>\nto Larry's papers, where the one common reference is most applicable, <br>\n\"The foundation of a generic theorem prover\", published 1989.</p>\n<p><a href=\"http://arxiv.org/ftp/cs/papers/9301/9301105.pdf\">http://arxiv.org/ftp/cs/papers/9301/9301105.pdf</a></p>\n<p>Page 4 introduces types, terms, and formulae, along with three important <br>\nmeta-logic constants, and then on page 7, the three meta-logic constants <br>\nare printed on 3 lines to emphasize them.</p>\n<p>So, you look at the three different documents, read the three different <br>\ndescriptions, look at the types of the meta-logic constants, read about <br>\n\"prop\" and \"trueprop\", and it might make more sense.</p>\n<p>Interesting is that they all list implication and quantification, but <br>\nonly Larry lists meta-logic equality.</p>\n<p>But then things are more complex now, right? But another reference out <br>\nof those listed above is \"Isabelle, a Generic Theorem Prover\", published <br>\n1994.</p>\n<p><a href=\"http://www.amazon.com/Isabelle-Generic-Theorem-Lecture-Computer/dp/3540582444\">http://www.amazon.com/Isabelle-Generic-Theorem-Lecture-Computer/dp/3540582444</a></p>\n<p>And on page 5 they're already talking about type classes.</p>\n<p>(Makarius writes)</p>\n<blockquote>\n<p>This is occasionally interesting to know, although just some tiny <br>\nfoundational bit.  From Isabelle/Pure you move on to Isabelle/HOL, <br>\nthen you add many add-on tools for 'inductive', 'datatype' etc. and <br>\nlots of proof tools like Sledgehammer.  Then you are quite high above <br>\nthe logical foundations and don't care much about them.</p>\n</blockquote>\n<p>In another email, you made the analogy to being a Linux user. I think <br>\nthe better analogy would be where 90% of the code is in C, but then <br>\nthere's that occasional call into assembly language. If assembly <br>\nlanguage is not a total mystery to you, you make tweak here or there.</p>\n<p>Or maybe it's the VHDL analogy. You can read schematics, but that VHDL <br>\nthat the PGA is programmed in, that really stumps you, and you come to a <br>\ngrinding halt because that's not something you easily learn, and a lack <br>\nof understanding really limits your ability to understand the circuit.</p>\n<p>Until the book \"The Isabelle/Pure and Isabelle/HOL Logic, From Top to <br>\nBottom, as Implemented in ML and Isar\" comes out, every 4-6 months <br>\nsomeone will be asking, \"Hey, what's Isabelle/Pure all about?\"</p>\n<p>But there's quite a bit of documentation to all this, or I wouldn't be <br>\nmessing around with it.</p>\n<p>Regards,<br>\nGB</p>\n<blockquote>\n<p>What is also interesting that the final end-user view tends to <br>\nconverge to what totally different systems offer here, e.g. Coq with <br>\nits quite different foundations, if you take inductive definitions or <br>\nrecursive functions, for example.</p>\n<p>Makarius<br>\n</p>\n</blockquote>",
        "id": 294235424,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660904550
    },
    {
        "content": "<p>From: \"\\\"Mark\\\"\" &lt;<a href=\"mailto:mark@proof-technologies.com\">mark@proof-technologies.com</a>&gt;<br>\nMakarius,</p>\n<p>That was quite an aggressive email.  I feel I have to respond to your points<br>\nin order to defend my work.</p>\n<p>on 4/2/13 3:10 PM, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n<blockquote>\n<p>I don't know anybody who really understands everything of Isabelle.  But I<br>\ndo understand its construction principles, and have a vague idea of the<br>\nvast space of possibilities resulting from it.  This is just plain-old<br>\nmodularity taken seriously.</p>\n<p>There is no need for users to understand everything.  I use Linux everyday<br>\nwithout having a clue how it is done these days, although I know about<br>\ncertain general principles as a mental model.</p>\n</blockquote>\n<p>Yeah, but I'm talking here about people who, for whatever reason of their<br>\nown choosing, want to really understand how Isabelle works.  I'm not talking<br>\nabout \"ordinary users\".</p>\n<blockquote>\n<blockquote>\n<p>But the main priorities for the implementors of Isabelle, as I<br>\nunderstand it, have been usability and power, and having an<br>\nunderstandable implementation comes way down the list.</p>\n</blockquote>\n<p>Understandable implementation is actually the main priority in Isabelle.<br>\nOtherwise this vast system could not be managed at all.</p>\n</blockquote>\n<p>The main priority?  I don't believe that!  You've already said that you<br>\ndon't understand everything.  The extra layers that have been introduced<br>\nmassively complicate the implementation, but are done with the good<br>\nintention of improving usability (and maybe other reasons as well).  So, if<br>\nunderstandable implementation were the <em>main</em> priority then why on Earth<br>\nwould this have been done?</p>\n<blockquote>\n<p>This discussion has bounced between the HOL and Isabelle mailing lists<br>\nseveral times already.  HOL Zero is as tiny that you see the problems<br>\ninherited from OCaml immediately.</p>\n</blockquote>\n<p>As far as I understand, the only trustworthiness issue that you have with<br>\nHOL Zero is that it is implemented in OCaml.  Firstly, HOL Zero addresses<br>\nthe main OCaml vulnerabilities to do with string and integer representation,<br>\nand in any case can be relatively easily ported to SML, and I even intend to<br>\ndo this at some stage, as you well know, so please stop banging on about<br>\nthis.  Secondly, the implementation language is secondary here.  The primary<br>\nproblem is designing and implementing a system that itself has no intrinsic<br>\ntrustworthiness-related flaws.  All other HOL systems other than HOL Zero<br>\nhave not managed to do this because they have flaws in their pretty<br>\nprinter/concrete syntax design.  Their implementors either admit these flaws<br>\nor brush them under the carpet with \"well normal users are not malicious so<br>\nwould never in practice exploit these\".  Only HOL Zero has no such known<br>\nflaws, and it even has a bounty of $100 for anyone who can find one.  So,<br>\nplease, try to say something positive about HOL Zero's trustworthiness.</p>\n<blockquote>\n<p>I would put more trust on OpenTheory right now.</p>\n</blockquote>\n<p>It is a misconception that HOL Zero is competing with or incompatible with<br>\nOpen Theory.  HOL Zero is a HOL system.  OpenTheory is a system for porting<br>\ntheory and proofs between HOL systems (and perhaps other systems).  Someone<br>\ncould write an Open Theory importer or exporter for HOL Zero just as much as<br>\nfor any other HOL system.  If they did, this would boost the credibility of<br>\nOpenTheory.</p>\n<blockquote>\n<p>But we don't have users in the queue to ask substantially more<br>\ntrustworthyness than is there in Isabelle already.  Most users actually<br>\nwant less, but I have no inclination to reduce the general robustness of<br>\nIsabelle either.</p>\n</blockquote>\n<p>Yes, there is no such queue of users.  Isabelle quite rightly concentrates<br>\non usability.  This does not mean that I am wrong.</p>\n<p>Mark.</p>",
        "id": 294235556,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660904604
    },
    {
        "content": "<p>From: Steven Ericsson-Zenith &lt;<a href=\"mailto:steven@iase.us\">steven@iase.us</a>&gt;<br>\nI'd say from the point of view of constructing real proofs this inaccessibility is a real problem. Are there proof statements concerning the formal properties of Isabelle?</p>\n<p>Steven</p>",
        "id": 294235584,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660904620
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nIsabelle has been developed over nearly 30 years, but with largely the same formalism; the only real changes have concerned polymorphism and type classes. Thanks to the LCF architecture, only a tiny percentage of the code has to be trusted. There are papers concerning formal properties of the basic calculus and some of its extensions, which should answer many specific questions. I would mention in particular the following papers:</p>\n<p>L. C. Paulson. <br>\nThe foundation of a generic theorem prover. J. Automated Reasoning 5 (1989), 363–397.<br>\n<a href=\"http://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-130.html\">http://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-130.html</a></p>\n<p>Markus Wenzel <br>\nType classes and overloading in higher-order logic<br>\nTheorem Proving in Higher Order Logics<br>\nLecture Notes in Computer Science Volume 1275, 1997, pp 307-322<br>\n<a href=\"http://www4.in.tum.de/~wenzelm/papers/axclass-TPHOLs97.pdf\">http://www4.in.tum.de/~wenzelm/papers/axclass-TPHOLs97.pdf</a></p>\n<p>Larry Paulson</p>",
        "id": 294235603,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660904630
    },
    {
        "content": "<p>From: Ramana Kumar &lt;<a href=\"mailto:rk436@cam.ac.uk\">rk436@cam.ac.uk</a>&gt;<br>\nAs someone who once attempted to write an exporter from Isabelle/HOL to<br>\nOpenTheory, I have to say that figuring out exactly what the primitive<br>\ninference rules for Isabelle/HOL are and how they are used is not an easy<br>\nthing.<br>\nI would anticipate it to be much easier for HOL Zero, and know it to be<br>\nfairly easy for HOL4 and HOL Light.<br>\nMy attempt in Isabelle is on hold at the moment; the last thought was to<br>\nsee if I could use the existing proof-recording technology (Berghofer et<br>\nal) and translate the proof terms it creates into OpenTheory proofs.<br>\nThere have been some references and links in this thread that I haven't<br>\nexamined in detail yet, though, so thanks.</p>",
        "id": 294235618,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660904639
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Tue, 5 Feb 2013, \"Mark\" wrote:</p>\n<blockquote>\n<p>That was quite an aggressive email.  I feel I have to respond to your <br>\npoints in order to defend my work.</p>\n</blockquote>\n<p>I don't know where you see the agression here.  I am rather getting tired <br>\nabout the topic, because it has made so little progress in the past 3 <br>\nyears, where it has occasionally shown up on the mailing lists.</p>\n<p>You should also try to get Coq into the whole picture, because its user <br>\nbase covers all of the HOLs and Isabelle taken together, and the system <br>\nand its logic is even more complex.  So how about moving this thread to <br>\ncoq-club as a change?</p>\n<blockquote>\n<p>on 4/2/13 3:10 PM, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n<blockquote>\n<p>This is just plain-old modularity taken seriously.</p>\n<p>The main priority?  I don't believe that!  You've already said that you<br>\ndon't understand everything.  The extra layers that have been introduced<br>\nmassively complicate the implementation, but are done with the good<br>\nintention of improving usability (and maybe other reasons as well).</p>\n</blockquote>\n</blockquote>\n<p>It is important to discern complexity vs. complication.  Isabelle was not <br>\ndone the way like \"this is a good day to introduce some new layers to <br>\ncomplicate things; we are so smart, and it was hard to write so it should <br>\nbe hard to read\".</p>\n<p>On the contrary, the \"layers\" were always an answer to genuine <br>\ncomplication that had occumulated over time, to rationalize and <br>\nsystematize concepts etc.  Doing this sucessfully then turns complications <br>\ninto mere complexity.  And modularity taken seriously means you only need <br>\nto understand layers separately and the principles of composition, but not <br>\nthe whole of the result.</p>\n<blockquote>\n<p>So, if understandable implementation were the <em>main</em> priority then why <br>\non Earth would this have been done?</p>\n</blockquote>\n<p>To keep the system alive and thriving over a very long time, with ever <br>\ngrowing demands from the applications.  Isabelle has an unbroken tradition <br>\nof more than 25 years, always with the same code-base.  Internally it <br>\nlooks rather young, fresh, and clean, if you compare it to other systems <br>\nof such an age.  For example, I am now routinely exposed to Java and its <br>\nstandard libraries, and that is really complicated, not just complex.</p>\n<blockquote>\n<p>As far as I understand, the only trustworthiness issue that you have with<br>\nHOL Zero is that it is implemented in OCaml.  Firstly, HOL Zero addresses<br>\nthe main OCaml vulnerabilities to do with string and integer representation,<br>\nand in any case can be relatively easily ported to SML, and I even intend to<br>\ndo this at some stage, as you well know, so please stop banging on about<br>\nthis.</p>\n</blockquote>\n<p>The string and int problem is a good example for genuine complication: you <br>\nhave to \"repair\" bad effects from OCaml, but you don't want that extra <br>\nstuff there.  The Coq guys have quite a few such repairs of OCaml in their <br>\ncode.  To make HOL Zero on OCaml really bullet-proof you would probably <br>\nhave to blow up the kernel by a factor of 2 compared to a pure version, <br>\nlets say in SML, or even HOL as specification language.</p>\n<p>I have pointed out further nasty tricks of OCaml occasionally, where you <br>\nsimply cannot trust your eyes reading the OCaml source.  Some LRI guys are <br>\nparticularly good at playing such tricks and proud of it.</p>\n<blockquote>\n<p>The primary problem is designing and implementing a system that itself <br>\nhas no intrinsic trustworthiness-related flaws.  All other HOL systems <br>\nother than HOL Zero have not managed to do this because they have flaws <br>\nin their pretty printer/concrete syntax design. Their implementors <br>\neither admit these flaws or brush them under the carpet with \"well <br>\nnormal users are not malicious so would never in practice exploit <br>\nthese\".</p>\n</blockquote>\n<p>I am one of thos who brush it under the carpet, because it is no real <br>\nproblem in practice, but there are others.  Pinning down parsing / pretty <br>\nprinting like that is neither necessary nor sufficient for <br>\ntrustworthiness.</p>\n<p>I did see real issues in a different area, e.g. when Oracle (via the JVM) <br>\nbombs your GUI display somehow, so that you see an outdated version of <br>\nprover output.  But the HOL-Zero approach does not cover prover IDE <br>\nconnectivity at all.</p>\n<p>Makarius</p>",
        "id": 294235870,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660904733
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Tue, 5 Feb 2013, Ramana Kumar wrote:</p>\n<blockquote>\n<p>As someone who once attempted to write an exporter from Isabelle/HOL to <br>\nOpenTheory, I have to say that figuring out exactly what the primitive <br>\ninference rules for Isabelle/HOL are and how they are used is not an <br>\neasy thing.</p>\n</blockquote>\n<p>It is important to understand Isabelle/HOL as an application of the <br>\nIsabelle framework (a very large and important one), not as a variant of <br>\n\"HOL\", like HOL4, HOL-Light, HOL-XYZ.  I am not surprised that it was <br>\ndifficult to see the logical content there in the belly of Isabelle, if <br>\nyou are expecting it to be just like \"HOL\".</p>\n<blockquote>\n<p>My attempt in Isabelle is on hold at the moment; the last thought was to<br>\nsee if I could use the existing proof-recording technology (Berghofer et<br>\nal) and translate the proof terms it creates into OpenTheory proofs.<br>\nThere have been some references and links in this thread that I haven't<br>\nexamined in detail yet, though, so thanks.</p>\n</blockquote>\n<p>The proof terms by Stefan Berghofer are indeed the main starting point. <br>\nThis aspect of Isabelle has been refined several times over the years, the <br>\nlast time in Spring 2010 when we tried hard to make everything exportable <br>\nin principle, but the practical proof of it was still missing.  Since then <br>\nthere was a lack of significant applications, to justify spending too much <br>\ntime there.</p>\n<p>Someone interested in Open Theory output should look there again.</p>\n<p>Makarius</p>",
        "id": 294235880,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660904739
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Mon, 4 Feb 2013, Gottfried Barrow wrote:</p>\n<blockquote>\n<p>The augmented question at hand: what is a \"more formal\" definition of a <br>\nIsabelle type, term, and formulae.</p>\n<p>We start at the very bottom of page 27 and the first three lines of page 28 <br>\nof isar-ref.pdf to give us a conceptual view of 3 important meta-logic types: <br>\nfunctions, universal quantification, and implication:</p>\n<p><a href=\"http://isabelle.in.tum.de/website-Isabelle2012/dist/Isabelle2012/doc/isar-ref.pdf\">http://isabelle.in.tum.de/website-Isabelle2012/dist/Isabelle2012/doc/isar-ref.pdf</a></p>\n<p>On page 28, there's reference [5] to Stefan and Tobias' \"Proof terms for <br>\nsimply typed higher order logic\", published 2000, where on page 2 of that, <br>\nthere are semi-formal definitions of types, terms, and formulae, where two of <br>\nthose important meta-logic types show up again, universal quantification, and <br>\nimplication.</p>\n<p><a href=\"http://www4.in.tum.de/~berghofe/papers/TPHOLs2000.pdf\">http://www4.in.tum.de/~berghofe/papers/TPHOLs2000.pdf</a></p>\n<p>There are references [33,34] in isar-ref.pdf and [8,9] in \"Proof terms\" to <br>\nLarry's papers, where the one common reference is most applicable, \"The <br>\nfoundation of a generic theorem prover\", published 1989.</p>\n<p><a href=\"http://arxiv.org/ftp/cs/papers/9301/9301105.pdf\">http://arxiv.org/ftp/cs/papers/9301/9301105.pdf</a></p>\n<p>Page 4 introduces types, terms, and formulae, along with three important <br>\nmeta-logic constants, and then on page 7, the three meta-logic constants are <br>\nprinted on 3 lines to emphasize them.</p>\n<p>So, you look at the three different documents, read the three different <br>\ndescriptions, look at the types of the meta-logic constants, read about <br>\n\"prop\" and \"trueprop\", and it might make more sense.</p>\n<p>Interesting is that they all list implication and quantification, but only <br>\nLarry lists meta-logic equality.</p>\n</blockquote>\n<p>All of the above are important references about Isabelle/Pure.</p>\n<p>Generally, you always need to put things into the context of <em>who</em> is <br>\nwriting <em>when</em> -- there different ways to explain things, which also tend <br>\nto change over time.  For example, I always follow the advice by Stefan <br>\nBerghofer from 2000 to say \"logical framework\" and not \"meta-logic\": Pure <br>\ngives you so little to speak about other logics, e.g. no induction on the <br>\nobject-logic formulation.</p>\n<p>The == connective of Pure is hardly relevant for users now, it serves <br>\nmainly foundational purposes, so it appears later in my exposition in the <br>\n\"implementation\" manual.  And there are more important add-on constants in <br>\nIsabelle/Pure, like conjunction or funny prop markers.</p>\n<p>For users mainly =&gt; !! ==&gt; are relevant, to express the structure of your <br>\nabstract syntax and rule statements.</p>\n<blockquote>\n<p>But then things are more complex now, right? But another reference out of <br>\nthose listed above is \"Isabelle, a Generic Theorem Prover\", published 1994.</p>\n<p><a href=\"http://www.amazon.com/Isabelle-Generic-Theorem-Lecture-Computer/dp/3540582444\">http://www.amazon.com/Isabelle-Generic-Theorem-Lecture-Computer/dp/3540582444</a></p>\n<p>And on page 5 they're already talking about type classes.</p>\n</blockquote>\n<p>That is now really really old.  I feel nostalgic about the \"3 standard <br>\nIsabelle manuals\" that were pasted together for the 1994 LNCS volume.</p>\n<p>Things have changed a lot since then, both the system and the way it is <br>\nexplained.  Type classes are not as trivial as they were looking in 1992, <br>\nso you can't just introduce them in passing right at the start of an <br>\narbitrary Isabelle manual.</p>\n<p>What I sometimes do is to show a canonical application of type classes to <br>\nbeginners, e.g. <br>\n<a href=\"http://isabelle.in.tum.de/dist/library/HOL/Isar_Examples/Group.html\">http://isabelle.in.tum.de/dist/library/HOL/Isar_Examples/Group.html</a></p>\n<p>This looks simple and obvious, and people learn something they can re-use <br>\nlater.  It is very far removed from the actual logical foundation of type <br>\nclasses, though.  Lots of \"layers\" around the raw logic at the bottom.</p>\n<p>Makarius</p>",
        "id": 294235892,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660904746
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Mon, 4 Feb 2013, Yannick Duchêne (Hibou57) wrote:</p>\n<blockquote>\n<blockquote>\n<p>See the Isabelle/Isar implementation manual chapter 2, about Isabelle/Pure <br>\nas reduced version of Higher-Order Logic to provide the logical framework. <br>\nThis is occasionally interesting to know, although just some tiny <br>\nfoundational bit.  From Isabelle/Pure you move on to Isabelle/HOL,</p>\n</blockquote>\n<p>But Isabelle/HOL is entirely derived from Isabelle/Pure, isn't it?</p>\n</blockquote>\n<p>Isabelle/HOL is an application within Isabelle/Pure.  Isabelle/Pure has <br>\nsome magic bootstrapping to get the core logical framework with lots of <br>\nadd-on infrastructure for Isabelle/ML in place.  This magic stops just <br>\nafter loading the Pure.thy and shipping the result as \"Isabelle/Pure\" <br>\nimage.  Then comes HOL and loads tons of conventional Isabelle theories <br>\nand tool implementations on top, and ships that as \"Isabelle/HOL\" image.</p>\n<p>So in some sense Isabelle/HOL is indeed derived from Isabelle/Pure, for a <br>\nsuitable definition of \"derived\".</p>\n<blockquote>\n<blockquote>\n<p>What is also interesting that the final end-user view tends to converge <br>\nto what totally different systems offer here, e.g. Coq with its quite <br>\ndifferent foundations, if you take inductive definitions or recursive <br>\nfunctions, for example.</p>\n</blockquote>\n<p>People seems to care, only when they have to port some proof from one <br>\nsystem to another. There seems to be multiple HOL4 to Isabelle papers on <br>\nthe web, and seems all are concerned with foundations.</p>\n</blockquote>\n<p>These converters usually try to convert the \"object-code\".  There are <br>\ninteresting ongoing projects like <br>\n<a href=\"https://www.rocq.inria.fr/deducteam/Dedukti/\">https://www.rocq.inria.fr/deducteam/Dedukti/</a> with potentially interesting <br>\napplications of moving huge lambda terms back and forth between systems.</p>\n<p>The high-level problem of moving huge applications from prover X to prover <br>\nY is not addressed at all.</p>\n<p>Makarius</p>",
        "id": 294235901,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660904751
    },
    {
        "content": "<p>From: Ramana Kumar &lt;<a href=\"mailto:rk436@cam.ac.uk\">rk436@cam.ac.uk</a>&gt;<br>\nOn Wed, Feb 6, 2013 at 2:49 PM, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n<blockquote>\n<p>On Tue, 5 Feb 2013, Ramana Kumar wrote:</p>\n<p>As someone who once attempted to write an exporter from Isabelle/HOL to</p>\n<blockquote>\n<p>OpenTheory, I have to say that figuring out exactly what the primitive<br>\ninference rules for Isabelle/HOL are and how they are used is not an easy<br>\nthing.<br>\n</p>\n</blockquote>\n<p>It is important to understand Isabelle/HOL as an application of the<br>\nIsabelle framework (a very large and important one), not as a variant of<br>\n\"HOL\", like HOL4, HOL-Light, HOL-XYZ.  I am not surprised that it was<br>\ndifficult to see the logical content there in the belly of Isabelle, if you<br>\nare expecting it to be just like \"HOL\".</p>\n</blockquote>\n<p>I was not at all expecting it to be like the other implementations of HOL.<br>\nI am aware of the Isabelle framework. However, I was expecting to find<br>\nsomething resembling higher-order logic, that is, the logic Isabelle/HOL<br>\npurports to implement. The way that is put together using the framework is<br>\nstill somewhat obscure to me, and there is no one reference to learn about<br>\nit. However there are plenty I should read more of.</p>\n<blockquote>\n<p>My attempt in Isabelle is on hold at the moment; the last thought was to</p>\n<blockquote>\n<p>see if I could use the existing proof-recording technology (Berghofer et<br>\nal) and translate the proof terms it creates into OpenTheory proofs.<br>\nThere have been some references and links in this thread that I haven't<br>\nexamined in detail yet, though, so thanks.<br>\n</p>\n</blockquote>\n<p>The proof terms by Stefan Berghofer are indeed the main starting point.<br>\nThis aspect of Isabelle has been refined several times over the years, the<br>\nlast time in Spring 2010 when we tried hard to make everything exportable<br>\nin principle, but the practical proof of it was still missing.  Since then<br>\nthere was a lack of significant applications, to justify spending too much<br>\ntime there.</p>\n<p>Someone interested in Open Theory output should look there again.</p>\n<p>Makarius<br>\n</p>\n</blockquote>",
        "id": 294235909,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660904757
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Wed, 6 Feb 2013, Ramana Kumar wrote:</p>\n<blockquote>\n<p>I was not at all expecting it to be like the other implementations of <br>\nHOL. I am aware of the Isabelle framework. However, I was expecting to <br>\nfind something resembling higher-order logic, that is, the logic <br>\nIsabelle/HOL purports to implement.</p>\n</blockquote>\n<p>That is in principle src/HOL/HOL.thy, which is based on the original <br>\nCambridge HOL report by Mike Gordon.  Note that some of the axiomatic bits <br>\nhave been moved to other Isabelle theories over the years, such as Hilbert <br>\nchoice to src/HOL/Hilbert_Choice.thy.</p>\n<blockquote>\n<p>The way that is put together using the framework is still somewhat <br>\nobscure to me, and there is no one reference to learn about it.</p>\n</blockquote>\n<p>But this is where things really happen, and what makes the difference. <br>\nRules are specified as \"axioms\" in user-space, and the system composes <br>\nthem according to the principles introduced by Larry Paulson 25 years ago.</p>\n<p>Makarius</p>",
        "id": 294235957,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660904764
    },
    {
        "content": "<p>From: \"\\\"Mark\\\"\" &lt;<a href=\"mailto:mark@proof-technologies.com\">mark@proof-technologies.com</a>&gt;<br>\non 6/2/13 2:41 PM, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n<blockquote>\n<p>I don't know where you see the agression here.  I am rather getting tired<br>\nabout the topic, because it has made so little progress in the past 3<br>\nyears, where it has occasionally shown up on the mailing lists.</p>\n</blockquote>\n<p>But Makarius, I merely mentioned Isabelle's priorities, to help explain some<br>\nbackground about its complexity.  You then questioned HOL Zero's<br>\ntrustworthiness, then I responded.  So if you're getting tired of the<br>\ntrustworthiness issue, then don't bring it up.</p>\n<blockquote>\n<blockquote>\n<p>So, if understandable implementation were the <em>main</em> priority then why<br>\non Earth would this have been done?</p>\n</blockquote>\n<p>To keep the system alive and thriving over a very long time, with ever<br>\ngrowing demands from the applications.  Isabelle has an unbroken tradition<br>\nof more than 25 years, always with the same code-base.  Internally it<br>\nlooks rather young, fresh, and clean, if you compare it to other systems<br>\nof such an age.  For example, I am now routinely exposed to Java and its<br>\nstandard libraries, and that is really complicated, not just complex.</p>\n</blockquote>\n<p>My point is that these changes, with their best of intentions, dominate the<br>\nimplementation of Isabelle and yet make the implementation harder to<br>\nunderstand.  Therefore understandable implementation cannot be Isabelle's<br>\n<em>main</em> priority over the years.  The main priorities are things that are<br>\ndriving these changes.</p>\n<blockquote>\n<blockquote>\n<p>The primary problem is designing and implementing a system that itself<br>\nhas no intrinsic trustworthiness-related flaws.  All other HOL systems<br>\nother than HOL Zero have not managed to do this because they have flaws<br>\nin their pretty printer/concrete syntax design. Their implementors<br>\neither admit these flaws or brush them under the carpet with \"well<br>\nnormal users are not malicious so would never in practice exploit<br>\nthese\".</p>\n</blockquote>\n<p>I am one of thos who brush it under the carpet, because it is no real<br>\nproblem in practice, but there are others.  Pinning down parsing / pretty<br>\nprinting like that is neither necessary nor sufficient for<br>\ntrustworthiness.</p>\n</blockquote>\n<p>Pretty printing is very strongly related to trustworthiness!  If the pretty<br>\nprinter prints one thing but internally it's something else, then the user<br>\ngets misled about what has been proved and/or what has beed defined.  I have<br>\nknown examples on real industrial safety-critical projects where this has<br>\ncaused problems.  It doesn't get much more serious than that.</p>\n<blockquote>\n<p>I did see real issues in a different area, e.g. when Oracle (via the JVM)<br>\nbombs your GUI display somehow, so that you see an outdated version of<br>\nprover output.  But the HOL-Zero approach does not cover prover IDE<br>\nconnectivity at all.</p>\n</blockquote>\n<p>Because these are all secondary issues, i.e. issue in the programs that fit<br>\naround the theorem prover rather in the theorem prover itself.  I'll say it<br>\nagain, the primary trustworthiness issue in theorem prover implementation is<br>\ndesigning and implementing a system that itself has no intrinsic<br>\ntrustworthiness-related flaws.  LCF-style architecture gets us a long way on<br>\nthis count, but is not the end of the story because it does not address<br>\npretty printer issues.</p>\n<p>Mark.</p>",
        "id": 294235974,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660904770
    },
    {
        "content": "<p>From: \"Yannick Duchêne (Hibou57 )\" &lt;<a href=\"mailto:yannick_duchene@yahoo.fr\">yannick_duchene@yahoo.fr</a>&gt;<br>\nWhat is “LRI” please?</p>",
        "id": 294236027,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660904800
    },
    {
        "content": "<p>From: Yannick &lt;<a href=\"mailto:yannick_duchene@yahoo.fr\">yannick_duchene@yahoo.fr</a>&gt;<br>\nIsn't it what OpenTheory is for? Or I may have not understand what it is;  <br>\nwill get time to have a real look at it later.</p>",
        "id": 294236036,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660904806
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nFrench habit of making long complicated expressions short: Laboratoire de <br>\nRecherche en Informatique, i.e. the CS lab at Paris Sud.</p>\n<p>The coffee room of the lab is sometimes an exchange point for the latest <br>\nOCaml tricks -- there are many power users of it.  Historically, the lab <br>\nwas also one of the originators of Coq, but that is now mainly done at LIX <br>\nand PPS/Pir2 -- yet more odd abbreviations (you are French yourself, so <br>\nyou should know).</p>\n<p>And of course, Coq is not untrustable just because it is using OCaml. <br>\nThe French colleagues understand the problems and made their homework, but <br>\nit also introduces complexities.  People like Bruno Barras could tell you <br>\nmore.</p>\n<p>So maybe that is now the point for Mark Adams to move this never-ending <br>\nthread to coq-club to see how they react about high-end provers having to <br>\nbe simplistic.</p>\n<p>Makarius</p>",
        "id": 294236045,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660904813
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nI gather that the Coq kernel also contains a big chunk of C code. Surprising, to say the least.</p>\n<p>Larry</p>",
        "id": 294236117,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660904849
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nOn 1/31/2013 1:46 PM, Yannick Duchêne (Hibou57) wrote:</p>\n<blockquote>\n<p>Seems available on‑line; here is a link for the paper you suggest:<br>\n<a href=\"http://www.sciencedirect.com/science/article/pii/S157086830700081X\">http://www.sciencedirect.com/science/article/pii/S157086830700081X#</a><br>\n(the page also has a link at the top, for a PDF version)</p>\n</blockquote>\n<p>There's a newer dated version, 20 December 2007, at the author's web <br>\nsite. The published one says \"received in revised form 6 August 2007\".</p>\n<p><a href=\"http://imps.mcmaster.ca/doc/seven-virtues.pdf\">http://imps.mcmaster.ca/doc/seven-virtues.pdf</a><br>\n<a href=\"http://imps.mcmaster.ca/doc/\">http://imps.mcmaster.ca/doc/</a></p>\n<p>When the gurus try to succinctly describe Isabelle/HOL, they'll many <br>\ntimes just use the phrase \"simply typed lambda calculus\".</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Simply_typed_lambda_calculus\">https://en.wikipedia.org/wiki/Simply_typed_lambda_calculus</a></p>\n<p>But if they have time to type a few extra characters, they might add the <br>\nphrase \"with polymorphism\".</p>\n<p>If you keep talking long enough, another one might pop in and throw in <br>\nthe term \"type classes\".</p>\n<p>Because there's no HOL which has yet won the HOL wars, then they use <br>\nexternal, historical vocabulary to begin the description of their HOL, <br>\nbut then have to start attaching their own internal vocabulary to the <br>\ndescription.</p>\n<p>For someone looking for a label to label HOL with, as a starting place <br>\nto learn about HOL, it can get confusing.</p>\n<p>If you see the phrase \"simple type theory\" in the title of Farmer's <br>\npaper, then you might ask, \"Ah, is this what's going to tell me what <br>\nIsabelle/HOL is? Because 'simple type theory' sounds suspiciously like <br>\n'simply typed lambda calculus'\".</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Type_theory#Theory_of_simple_types\">https://en.wikipedia.org/wiki/Type_theory#Theory_of_simple_types</a></p>\n<p>Being an authoritative prophet, I can now say that in the future, the <br>\nHOL's which win out in the HOL wars will be the standard themselves, and <br>\nthe references will be to the 700 page textbooks which formalize, <br>\nstarting with the basics, what the logic of these HOLs are.</p>\n<p>For HOL4 they already have that in their logic manual (to what degree I <br>\ncan't say), which I thought would be the perfect place to learn about <br>\nIsabelle/HOL's formal logic, but it's not, it's the perfect place to <br>\nlearn about HOL4's formal logic:</p>\n<p><a href=\"http://hol.sourceforge.net/documentation.html\">http://hol.sourceforge.net/documentation.html</a></p>\n<p>For completeness, I quote from Mark's glossary to show how the gurus <br>\nhave to do a lot qualifying when they try to explain things:</p>\n<p>simply-typed : (adj)  Relating to type systems that are relatively simple and<br>\nare not, for example, dependently-typed.  There is considerable variation in the<br>\nprecise intended meaning of \"simply-typed\" in contemporary usage: in some usages<br>\npolymorphism is not a disqualifying factor, in other usages polymorphism is only<br>\na disqualifying factor if it caters for the quantification of type variables,<br>\nand in other usages still any form of polymorphism is a disqualifying factor.<br>\nTo avoid confusion, the usage of this term is avoided in HOL Zero, its<br>\ndocumentation and elsewhere in this glossary.</p>\n<blockquote>\n<p>Still looking at Gottfried's list.</p>\n</blockquote>\n<p>In addition to collecting books, I also rip web pages for past, <br>\neducational courses on Isabelle. I haven't had time to study any of this <br>\nright now. I'm making enough progress just stumbling along. I'll get <br>\nmore sophisticated later. Some of these are linked to from the official <br>\nIsabelle site, many of them aren't.</p>\n<p>Regards, GB</p>\n<p><a href=\"http://www.phil.cmu.edu/~avigad/formal/\">http://www.phil.cmu.edu/~avigad/formal/</a></p>\n<p><a href=\"http://www.andrew.cmu.edu/user/avigad/isabelle/\">http://www.andrew.cmu.edu/user/avigad/isabelle/</a></p>\n<p><a href=\"http://www4.in.tum.de/~ballarin/belgrade08-tut/\">http://www4.in.tum.de/~ballarin/belgrade08-tut/</a></p>\n<p><a href=\"http://cl-informatik.uibk.ac.at/teaching/ss08/atp/schedule.php\">http://cl-informatik.uibk.ac.at/teaching/ss08/atp/schedule.php</a></p>\n<p><a href=\"http://isabelle.in.tum.de/coursematerial/IJCAR04/\">http://isabelle.in.tum.de/coursematerial/IJCAR04/</a></p>\n<p><a href=\"http://archiv.infsec.ethz.ch/education/permanent/csmr.html\">http://archiv.infsec.ethz.ch/education/permanent/csmr.html</a></p>\n<p><a href=\"http://isabelle.in.tum.de/exercises/\">http://isabelle.in.tum.de/exercises/</a></p>\n<p><a href=\"http://www.irisa.fr/celtique/genet/ACF/\">http://www.irisa.fr/celtique/genet/ACF/</a></p>\n<p><a href=\"http://dream.inf.ed.ac.uk/projects/isabelle/\">http://dream.inf.ed.ac.uk/projects/isabelle/</a></p>\n<p><a href=\"http://isabelle.in.tum.de/coursematerial/PSV2009-1/\">http://isabelle.in.tum.de/coursematerial/PSV2009-1/</a></p>\n<p><a href=\"http://www21.in.tum.de/teaching/logik/SS12/\">http://www21.in.tum.de/teaching/logik/SS12/</a></p>\n<p><a href=\"http://www4.in.tum.de/lehre/vorlesungen/semantik/WS1011/\">http://www4.in.tum.de/lehre/vorlesungen/semantik/WS1011/</a></p>\n<p><a href=\"http://www4.in.tum.de/lehre/vorlesungen/semantik/WS1112/\">http://www4.in.tum.de/lehre/vorlesungen/semantik/WS1112/</a></p>\n<p><a href=\"http://www.cs.colorado.edu/~siek/7000/spring07/\">http://www.cs.colorado.edu/~siek/7000/spring07/</a></p>\n<p><a href=\"http://ecee.colorado.edu/~siek/ecen3703/spring10/ECEN_3703.html\">http://ecee.colorado.edu/~siek/ecen3703/spring10/ECEN_3703.html</a></p>\n<p><a href=\"http://cl-informatik.uibk.ac.at/teaching/ss11/eve/content.php\">http://cl-informatik.uibk.ac.at/teaching/ss11/eve/content.php</a></p>\n<p><a href=\"http://www.lri.fr/~wenzel/Isar2010-Orsay/\">http://www.lri.fr/~wenzel/Isar2010-Orsay/</a></p>\n<p><a href=\"http://www.lri.fr/~wenzel/Isabelle2011-Paris/\">http://www.lri.fr/~wenzel/Isabelle2011-Paris/</a></p>\n<p><a href=\"http://www.lri.fr/~wenzel/Isabelle_Orsay_2012/\">http://www.lri.fr/~wenzel/Isabelle_Orsay_2012/</a></p>\n<p><a href=\"http://www.lri.fr/~wenzel/Isabelle_Orleans_2012/\">http://www.lri.fr/~wenzel/Isabelle_Orleans_2012/</a></p>",
        "id": 294236145,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660904863
    },
    {
        "content": "<p>From: \"Yannick Duchêne (Hibou57 )\" &lt;<a href=\"mailto:yannick_duchene@yahoo.fr\">yannick_duchene@yahoo.fr</a>&gt;<br>\nI'm adding this one:</p>\n<p>“What does one need, when she needs higher‑order logic”?<br>\n<a href=\"http://jarda.peregrin.cz/mybibl/PDFTxt/484.pdf\">http://jarda.peregrin.cz/mybibl/PDFTxt/484.pdf</a></p>\n<p>It's about cases where a translation from second/higher order to first  <br>\norder is possible; which may be seen as a way to get a strict  <br>\nidentification of what's unique to orders above the first.</p>\n<p>Unfortunately, it's not easy to read (at least to me), as it refers to  <br>\nexample predicates which seems to be defined elsewhere.</p>",
        "id": 294261058,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914397
    },
    {
        "content": "<p>From: \"Yannick Duchêne (Hibou57 )\" &lt;<a href=\"mailto:yannick_duchene@yahoo.fr\">yannick_duchene@yahoo.fr</a>&gt;<br>\nFrom the same author (W. M. Farmer), an academic course (link below) I  <br>\nlanded into. Its wordings in chapter 5, made me feel I've read something  <br>\nlike this before… indeed, as I checked, this was in the Seven Virtues of  <br>\nSTT.</p>\n<p><a href=\"http://imps.mcmaster.ca/courses/SE-2F03-05/slides/\">http://imps.mcmaster.ca/courses/SE-2F03-05/slides/</a></p>\n<p>Chapter 5 concisely explains (to me, even more concisely than in the Seven  <br>\nVirtues) many of the theoretical concepts found in Isar‑Ref and the  <br>\nIsabelle Tutorial (for people like me who are not from the academic  <br>\nworld). He's a lot fan of the type theory.</p>\n<p>Interestingly, at the end, he suggest an extension of STT, which would  <br>\ninclude indefinite expressions, which seems to be the same as what  <br>\nshown‑up during another topic with references to HOL+LCF as HOLCF (an  <br>\nIsabelle theory).</p>",
        "id": 294261312,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914483
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nYes, the question of whether or not to adopt an explicit logic of “definedness” continues to attract discussion. Most implemented formal systems have only total functions. Then there is PVS and the dependently-typed calculi, which allow partial functions but still don’t formalise the notion of “undefined”. I believe that Farmer advocates such formalisms. LCF and related systems formalise domain theory, in which the concept of definedness induces a partial ordering over all values. As always, increasing the expressiveness of the formalism also increases the difficulty of conducting proofs.</p>\n<p>Larry Paulson</p>",
        "id": 294261346,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660914495
    },
    {
        "content": "<p>From: \"Yannick Duchêne (Hibou57 )\" &lt;<a href=\"mailto:yannick_duchene@yahoo.fr\">yannick_duchene@yahoo.fr</a>&gt;<br>\nLe Fri, 01 Feb 2013 15:22:53 +0100, Gottfried Barrow  <br>\n&lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt; a écrit:</p>\n<blockquote>\n<p>[…]</p>\n<p>For HOL4 they already have that in their logic manual (to what degree I  <br>\ncan't say), which I thought would be the perfect place to learn about  <br>\nIsabelle/HOL's formal logic, but it's not, it's the perfect place to  <br>\nlearn about HOL4's formal logic:</p>\n<p><a href=\"http://hol.sourceforge.net/documentation.html\">http://hol.sourceforge.net/documentation.html</a><br>\n[…]</p>\n</blockquote>\n<p>The one titled “Logic” (file name “kananaskis-8-logic.pdf”) still says in  <br>\nthe preface:</p>\n<blockquote>\n<p>This material was written by Andrew Pitts in 1991, and was<br>\noriginally part of DESCRIPTION. Because this logic is shared<br>\nwith other theorem-proving systems (HOL Light, ProofPower),<br>\nand is similar to that implemented in Isabelle, where it is<br>\ncalled Isabelle/HOL, it is now presented in its own manual.</p>\n</blockquote>",
        "id": 294262984,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660915066
    },
    {
        "content": "<p>From: IG BI &lt;<a href=\"mailto:igbi@gmx.com\">igbi@gmx.com</a>&gt;<br>\n/From/: Yannick Duchêne (Hibou57) &lt;yannick_duchene at <a href=\"http://yahoo.fr\">yahoo.fr</a> <br>\n&lt;mailto:<a href=\"mailto:yannick_duchene@DOMAIN.HIDDEN\">yannick_duchene@DOMAIN.HIDDEN</a>&gt;&gt;<br>\nWhat is perfect will vary according to need. The HOL4 logic manual is <br>\nimperfect for a perfect understanding of Isabelle/HOL, and also of <br>\nIsabelle/Pure, because HOL4 is only similar to what is implemented in <br>\nIsabelle. Significant differences are that with Isabelle there are two <br>\nlogics, along with type classes.</p>\n<p>To set the stage, I repeat a variation of a question I've asked in the <br>\npast, and I state a law.</p>\n<p>QUESTION_1: Where is the BNF grammar, or similar grammar, that precisely <br>\nstates what a typed lambda calculus term is in Isabelle/Pure and <br>\nIsabelle/HOL?</p>\n<p>QUICK_COMMENT: Such a grammar might immediately answer certain <br>\nquestions, such as whether an Isabelle/Pure term is identical to an <br>\nIsabelle/HOL term. Here, I explicitly differentiate between Pure and HOL <br>\nbecause of a paper by Wenzel in which he emphasizes that there are two <br>\nHOLs in Isabelle. I reference the paper below.</p>\n<p>LAW OF RIGOR: If you don't have the time to treat a formal, mathematical <br>\ntopic with proper rigor, then do your best to never mention the topic, <br>\nlest you be accused of being a non-rigorous arm-waver. If you must <br>\ndiscuss the topic, then give the shortest, possible overview of the <br>\ntopic, to make it obvious that the overview is not a formal treatment of <br>\nthe topic.</p>\n<p>I assume that the Law of Rigor is one reason why the grammar I mention <br>\nabove doesn't exist for the current state of the Isabelle art, though <br>\nsuch a thing may actually exist. Simple questions such as \"Where is such <br>\nand such?\", when such and such is somewhere, are many times not <br>\nanswered. Such is life.</p>\n<p>I say here that I've found several, older documents in which a type and <br>\nterm was defined for the state of the Isabelle art at that time. I <br>\nreference those documents below.</p>\n<p><em>COMPLEX TYPED TERMS, NO MOTIVE TO SORT THROUGH A SIMILAR GRAMMAR</em></p>\n<p>Back to the HOL4 logic manual, on page 8 there is the phrase \"[a] more <br>\naccurate grammar of terms is\", and then he gives a grammar which we must <br>\nsort through using previously defined grammars, along with more formal <br>\ndiscussion.</p>\n<p>It would be doable, if I was willing to expend enough brain waves, but <br>\nit would never get me an exact understanding of what an Isabelle/Pure <br>\nand Isabelle/HOL term is.</p>\n<p>I now use my first-order logic analogy. At the point I understood <br>\nBilaniuk's definitions 5.1, 5.2, and 5.3 to define the symbols, terms, <br>\nand formulas of a first-order language, the definition of a first-order <br>\nlanguage ceased to be Ph.D. level knowledge for me. If I completely <br>\nunderstand those definitions, how can it be Ph.D. level knowledge? I <br>\ndon't have a Ph.D.</p>\n<p>I bring the first-order logic analogy to an end prematurely to keep <br>\nthings shorter, lamenting that I must sacrifice what would've been the <br>\nmost intellectually stimulating rhetoric of my whole life (a joke? no, <br>\nno joke), but I also consider the upside of not having to type 800 more <br>\ncharacters. It's six of one, or a half dozen of the other, as they say. <br>\nEconomically speaking, we can equate the most intellectually stimulating <br>\nrhetoric of my whole life with the time I would have spent typing 800 <br>\nmore characters, minus the number of characters in this sentence.</p>\n<p>Anyway, I already know that terms have types, and types have types. I <br>\ndon't see any purpose in straining my brain to study something like the <br>\nHOL4 grammar to only end up understanding, a bit better, that terms have <br>\ntypes and types have types. When an authority on Isabelle publishes the <br>\ngrammar of QUESTION_1 above, then it's worth putting out that kind of <br>\neffort.</p>\n<p><em>SOME ISABELLE SOURCE BEFORE SOME ORIGINAL SOURCES</em></p>\n<p>Frequently, I've seen it stated that Isabelle is simply typed lambda <br>\ncalculus. Here, I'd like to make the point that the definition of a <br>\nlambda calculus term is fairly simple, which I do to compare its <br>\nsimplicity to a typed lambda calculus term, which is not simple.</p>\n<p>Consider the following:</p>\n<p>term \"x::(('a::{type,equal,ord}) list)\"</p>\n<p>Understanding the typing of concrete examples like this is <br>\nstraightforward, though partly straightforward because I can use the <br>\nPIDE to show me what some of the inferred typing is.</p>\n<p>What the example shows is that the general case for a typed term is not <br>\nsimple at all. There are four things that can vary there: variable, type <br>\nvariable, type variable type (the type class), and type constructor.</p>\n<p><em>SOME ORIGINAL SOURCES</em></p>\n<p>Your recent question about sorts led to me sorting through some <br>\nbibliographies again:</p>\n<p>Re: [isabelle] Are sorts of Isabelle the same as what's described for <br>\nsecond order logic?</p>\n<p><a href=\"http://fa.isabelle.narkive.com/oYtXhS2I/isabelle-are-sorts-of-isabelle-the-same-as-what-s-described-for-second-order-logic\">http://fa.isabelle.narkive.com/oYtXhS2I/isabelle-are-sorts-of-isabelle-the-same-as-what-s-described-for-second-order-logic</a></p>\n<p>I've decided the available documentation of Isabelle can be described as <br>\n\"30 documents spread over 20 years\". There is the question of which is <br>\nmore difficult:</p>\n<p>1) Is it more difficult for me to understand involved explanations about <br>\nhow typing works, where some of the names for the types are outdated, <br>\nand the definitions are mainly formatted in paragraph form, rather than <br>\nformatted in a BNF grammar type style?</p>\n<p>2) Or, is it more difficult for me to remember where the difficult <br>\npassages are in the 30 documents spread out over 20 years?</p>\n<p>I list in chronological order some documents I've sorted through, and <br>\nmake some comments:</p>\n<p><em>1987: LOGIC AND COMPUTATION, INTERACTIVE PROOF WITH CAMBRIDGE LCF</em><br>\nBy L. C. Paulson<br>\nPublished by Cambridge Tracts in hardcopy form.</p>\n<p>Section 5.1.3 contains a BNF syntax for types, and 5.1.4 has one for <br>\nterms. The book is pretty much a textbook style book. The first part of <br>\nthe book teaches some basic logic, such as natural deduction and sequent <br>\ncalculus.</p>\n<p>I guess after the first time a person does that, the motivation to <br>\nrepeatedly teach the basics decreases over time.</p>\n<p><em>1994: ISABELLE, A GENERIC THEOREM PROVER</em></p>\n<p>by Lawrence Paulson, with Contributions by Tobias Nipkow<br>\nPublished by Springer-Verlag in hardcopy form.</p>\n<p>This book was broken up into 5 documents, and distributed with the <br>\nIsabelle distribution. I looked at Isabelle1999-2 to Isabelle2008. The <br>\nPDFs for a long time were intro, logics, logics-HOL, logics-ZF, and ref.</p>\n<p>The ref document stayed mostly the same up until 2008, after which it <br>\nstarted to be subsumed by other documents. With Isabelle2013-2, it's <br>\ncompletely gone.</p>\n<p>Of note is that the page count of intro.pdf, the old intro, has stayed <br>\nat about 77 pages from 1999 to 2013-2:</p>\n<p><a href=\"http://isabelle.in.tum.de/website-Isabelle2013-2/dist/Isabelle2013-2/doc/intro.pdf\">http://isabelle.in.tum.de/website-Isabelle2013-2/dist/Isabelle2013-2/doc/intro.pdf</a></p>\n<p>Section 1.2 discusses type classes, and even explains the empty sort. <br>\nThis seems to be an important document.</p>\n<p>Possibly, some type names have changed. I've been wondering what the <br>\ntype of \"int\" is, because the PIDE doesn't show it has a type with this:</p>\n<p>term \"a::int\"</p>\n<p>Section 1.2 tells me that the type of the \"int\" constructor is \"term\". I <br>\ndon't ever see that in the PIDE.</p>\n<p><em>1995: TYPE RECONSTRUCTION FOR TYPE CLASSES</em></p>\n<p>by Tobias Nipkow and Christian Prehofer<br>\n<a href=\"http://www21.in.tum.de/~nipkow/pubs/jfp95.html\">http://www21.in.tum.de/~nipkow/pubs/jfp95.html</a></p>\n<p>There's a grammar for a Mini-Haskell on page 3.</p>\n<p>If someone told me, \"The Mini-Haskell syntax basically describes a <br>\nIsabelle/HOL term\", I'd say, \"Great, so go ahead and modify it so that I <br>\nknow exactly what a Isabelle/HOL term is, rather than basically know. I <br>\nwouldn't understand it at first, but an important starting point is <br>\nhaving a precise definition.\"</p>\n<p><em>1997: TYPE CLASSES AND OVERLOADING IN HIGHER-ORDER LOGIC</em></p>\n<p>by Makarius Wenzel<br>\n<a href=\"http://www4.in.tum.de/~wenzelm/papers/axclass-TPHOLs97.pdf\">http://www4.in.tum.de/~wenzelm/papers/axclass-TPHOLs97.pdf</a></p>\n<p>Here Makarius, in several ways, treats Isabelle/Pure as the HOL to be <br>\nconsidered, rather than Isabelle/HOL. He says,</p>\n<p>As a quite harmless simplification, HOL can be identified directly<br>\n    with Isbelle/Pure.</p>\n<p>The consequence for me is that I now want to see a precise definition <br>\nfor a typed term for both Isabelle/Pure and Isabelle/HOL. It might help <br>\nme see a difference that's important, that I otherwise wouldn't see.</p>\n<p>In section 3.1 HOL Syntax, he quickly describes the HOL types and terms.</p>\n<p><em>OUTRO</em></p>\n<p>I have a better understanding now that terms have types and types have <br>\ntypes. I'm better now at understanding what I see when I have show_sorts on.</p>\n<p>Below, I include some of what I was looking at. I was mainly interested <br>\nin looking at the types \"type\" and \"{}\".</p>\n<p>Regards,<br>\nGB</p>\n<p>(<strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong>***)<br>\ntheory i140105a<br>\nimports Complex_Main<br>\nbegin<br>\ndeclare[[show_sorts=true]]<br>\ndeclare[[show_brackets=true]]</p>\n<p>(*OBJ_EXP_1: lambda calculus terms are simple, but typed Isabelle/HOL <br>\nterms are<br>\ncomplex. Four things are involved here: variable, type variable, type <br>\nvariable<br>\ntype (the type variable type class), and type constructor. Does the type<br>\nconstructor 'list' also have a type?<br>\n*)<br>\nterm \"x::(('a::{type,equal,ord}) list)\"</p>\n<p>(*OJB_EXP_2: Do type variable constants such as 'int' have a type? Type<br>\nvariable constants such as 'int' aren't displayed as having type. But in <br>\nCoq,<br>\ntype constants have a type, such as \"nat:Set\":<br>\n<a href=\"http://www.labri.fr/perso/casteran/CoqArt/Tsinghua/C5.pdf\">http://www.labri.fr/perso/casteran/CoqArt/Tsinghua/C5.pdf</a><br>\nI think that int is a 0-ary type constructor. If so, the basic question <br>\nis the<br>\nsame. Do 0-ary type constructors have a type?<br>\n*)<br>\nterm \"x::int\" (<em>Displayed: \"(x::int)\"::int.</em>)</p>\n<p>(*EXP_3: Inferred: x::('a::{})<br>\n*)<br>\nterm \"x\"<br>\nterm \"x::('a::{})\"</p>\n<p>(*META_EXP_4: Inferred: x::('a::{}).<br>\n*)<br>\nterm \"x == x\"<br>\ntheorem \"x == x\"<br>\n   by(simp)<br>\ntheorem \"x == (x::('a::{}))\"<br>\n   by(simp)</p>\n<p>(*OBJ_EXP_5: Type: x::('a::ab_semigroup_add).<br>\n*)<br>\ntheorem \"(x::('a::{type, plus, semigroup_add, ab_semigroup_add})) = x\"<br>\n   by(simp)</p>\n<p>(*OBJ_EXP_6: Type: x::('a::{plus,equal}).<br>\n*)<br>\ntheorem \"(x::('a::{plus,equal})) = x\"<br>\n   by(simp)</p>\n<p>(*META_EXP_7: Inferred: x::prop. There is no type variable.<br>\n*)<br>\nterm \"PROP x\"<br>\ntheorem \"PROP x == PROP x\"<br>\n   by(simp)</p>\n<p>(*OBJ_EXP_8: Inferred: x::('a::type).<br>\n*)<br>\nterm \"x = x\"<br>\ntheorem \"x = x\"<br>\n   by(si<br>\n[message truncated]</p>",
        "id": 294266962,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660915855
    }
]