[
    {
        "content": "<p>From: Andrei Popescu &lt;<a href=\"mailto:uuomul@yahoo.com\">uuomul@yahoo.com</a>&gt;<br>\nHello, </p>\n<p>I do not understand the following behavior of abbreviations inside locales: </p>\n<p>locale dummy = fixes F::'a </p>\n<p>context dummy begin<br>\n  abbreviation G :: 'a where \"G == id F\"<br>\n  term \"id F\" term G  (* OK  *)<br>\n  (*   *)<br>\n  definition F1::nat where \"F1 == 7\"<br>\n  abbreviation G1 :: nat where \"G1 == F1\"<br>\n  term F1 term G1  (* OK *)<br>\n  (*   *)<br>\n  definition F2::nat where \"F2 == 7\"<br>\n  abbreviation G2 :: nat where \"G2 == id F2\"<br>\n  term \"id F2\" term G2  (* ? *)<br>\nend</p>\n<p>Why doesn't \"G2\" abbreviate \"id F2\" inside \"dummy\"?  It appears that, to the <br>\ncontrary, \"id F2\" abbreviates \"G2\". (This is not the case of \"G\" and \"G1\",  <br>\nhowever, which do behave as I would expect. )    </p>\n<p>Thank you in advance, <br>\n   Andrei</p>",
        "id": 294082147,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660831026
    },
    {
        "content": "<p>From: <a href=\"mailto:popescu2@illinois.edu\">popescu2@illinois.edu</a><br>\nMy previous message sent from yahoo got polluted with extra question <br>\nmarks.  Here is a hopefully clean version: </p>\n<p>I do not understand the following behavior of abbreviations inside locales:</p>\n<p>locale dummy = fixes F::'a</p>\n<p>context dummy begin<br>\n  abbreviation G :: 'a where \"G == id F\"<br>\n  term \"id F\" term G  (* OK  *)<br>\n  (*   *)<br>\n  definition F1::nat where \"F1 == 7\"<br>\n  abbreviation G1 :: nat where \"G1 == F1\"<br>\n  term F1 term G1  (* OK *)<br>\n  (*   *)<br>\n  definition F2::nat where \"F2 == 7\"<br>\n  abbreviation G2 :: nat where \"G2 == id F2\"<br>\n  term \"id F2\" term G2  (* ? *)<br>\nend</p>\n<p>Why doesn't \"G2\" abbreviate \"id F2\" inside \"dummy\"?  It appears that, to the<br>\ncontrary, \"id F2\" abbreviates \"G2\". (This is not the case of \"G\" and \"G1\", <br>\nhowever, which do behave as I would expect. )   </p>\n<p>Thank you in advance,<br>\n   Andrei</p>",
        "id": 294082202,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660831045
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe abbreviation \"G2 == id F2\" expands correctly, but printing produces an <br>\nunexpected result.  The reason for this is an extra indirection in F2, <br>\nwhich is also associated with an internal abbreviation, because it is a <br>\nconstant inside a locale target (even though it does not depend on any <br>\nlocale parameters).</p>\n<p>You can inspect the internals like this:</p>\n<p>ML {* set long_names *}<br>\n   print_abbrevs</p>\n<p>The print mechanism folds \"local.F2 == Scratch.dummy.F2\" first, so <br>\n\"Scratch.dummy.G2 == <a href=\"http://Fun.id\">Fun.id</a> Scratch.dummy.F2\" cannot be folded anymore.</p>\n<p>Folding abbreviations that depend on each other is a bit unpredictable in <br>\ngeneral.  The abbreviation mechanism could be a bit smarter in its <br>\nstrategy, but some uncertainty would always remain.</p>\n<p>Makarius</p>",
        "id": 294082444,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660831129
    }
]