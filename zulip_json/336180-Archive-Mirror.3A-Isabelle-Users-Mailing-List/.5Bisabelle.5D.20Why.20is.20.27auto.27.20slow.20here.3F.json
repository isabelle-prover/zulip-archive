[
    {
        "content": "<p>From: <a href=\"mailto:munddr@googlemail.com\">munddr@googlemail.com</a><br>\nHi,</p>\n<p>I have the following and somehow 'auto' spends a lot of time and not  <br>\ndoesn't terminate:</p>\n<p>consts<br>\nf :: \"real =&gt; real\"<br>\ng :: \"real =&gt; real\"<br>\nS :: \"real set\"</p>\n<p>types S = \"real set\"</p>\n<p>axioms<br>\na1: \"EX Z &lt; S. ALL x : Z. fx ~= g x\"</p>\n<p>lemma lem: \"EX Z &lt; S. EX x : Z. fx ~= g x\"<br>\nusing a1<br>\napply auto</p>\n<p>For some reason, auto doesn't terminate. Shouldn't the lemma be  <br>\nstraightforward to prove given a1?</p>\n<p>Thanks<br>\nJohn</p>",
        "id": 294099156,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660833240
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nI'm afraid your formulae are not well-formed. Never mind the \"fx\", but<br>\n\"EX Z &lt; S. ALL x : Z\" doesnt make sense. Pls send an actual theory that<br>\nIsabelle is prepared to accept.</p>\n<p>Tobias</p>\n<p><a href=\"mailto:munddr@googlemail.com\">munddr@googlemail.com</a> wrote:</p>",
        "id": 294099260,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660833258
    },
    {
        "content": "<p>From: Stephan Merz &lt;<a href=\"mailto:Stephan.Merz@loria.fr\">Stephan.Merz@loria.fr</a>&gt;<br>\nFor your lemma to be true, ax1 should assert that the set Z is non-empty.</p>\n<p>Stephan</p>",
        "id": 294099399,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660833301
    },
    {
        "content": "<p>From: Rafal Kolanski &lt;<a href=\"mailto:rafalk@cse.unsw.edu.au\">rafalk@cse.unsw.edu.au</a>&gt;<br>\nPossibly because your lemma doesn't follow?</p>\n<p>Firstly, don't use axiom unless you really know what you're doing, try <br>\nuse normal lemmas instead. Also, try simplify them to see where isabelle <br>\ngets stuck. If we take this simpler lemma and try to prove it with <br>\nsimple proof steps:</p>\n<p>lemma \"∃Z⊂S. ∀x∈Z. P x ⟹ ∃Z⊂S. ∃x∈Z. P x\"<br>\napply (erule exE)<br>\napply (rule_tac x=Z in exI)<br>\napply (rule conjI, simp)<br>\napply (elim conjE)</p>\n<p>we get to this state: ⋀Z. ⟦Z ⊂ S; ∀x∈Z. P x⟧ ⟹ ∃x∈Z. P x</p>\n<p>The only thing we can apply now is ballE or ballI, which asks that we <br>\nprove the statement for some x in the set Z. Since we don't know whether <br>\nZ is empty or not... well, there might not be any x existing in Z at <br>\nall. Using auto can't make it so. Simplify it further and you get:</p>\n<p>lemma \"∀x∈Z. P x ⟹ ∃x∈Z. P x\"<br>\napply (case_tac \"Z = {}\")<br>\n  apply simp<br>\nwhich asks you to prove \"False\".</p>\n<p>You might want to investigate the Isabelle tutorial for simpler proof <br>\nmethods than just blasting things with metis and auto. While powerful, <br>\nautomation in higher-order logic is hard and will require hand-holding <br>\neventually, like in this case.</p>\n<p>Also, I highly recommend switching to unicode tokens / xsymbols, I don't <br>\nthink anyone uses the ASCII syntax much anymore, doesn't look very pretty.</p>\n<p>Sincerely,</p>\n<p>Rafal Kolanski.</p>\n<p><a href=\"mailto:munddr@googlemail.com\">munddr@googlemail.com</a> wrote:</p>",
        "id": 294099415,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660833307
    }
]