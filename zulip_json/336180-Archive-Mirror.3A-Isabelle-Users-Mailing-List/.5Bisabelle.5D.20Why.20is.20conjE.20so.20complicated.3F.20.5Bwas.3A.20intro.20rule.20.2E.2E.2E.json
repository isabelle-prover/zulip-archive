[
    {
        "content": "<p>From: Holger Blasum &lt;<a href=\"mailto:hbl@sysgo.com\">hbl@sysgo.com</a>&gt;<br>\nDear John,</p>\n<blockquote>\n<p>... which is insoluble. I think the \"apply rule\" step is using the conjE rule. Which rule should I apply in order to obtain the preferred proof state below? I briefly tried conjunctionI but that doesn't seem quite to fit.</p>\n</blockquote>\n<p>Looking at this for curiosity (we all agree that production proofs are <br>\nnot usually down at this low-level) this appears strange to me indeed. </p>\n<p>By \"apply(insert conjE)\" one can inspect what's inside a rule and that <br>\nfor conjE gives me: \"!!P Q R. P &amp; Q ==&gt; (P ==&gt; Q ==&gt; R) ==&gt; R\"</p>\n<p>Conversely, straightforward conjunction elimination rules (conjunctionD1,<br>\nconjunctionD2) happily exists on the metalogical level \"!! A B. PROP A &amp;&amp;&amp; <br>\nPROP B ==&gt; PROP A)\", using it is simple: </p>\n<p>lemma assumes \"A &amp;&amp;&amp; B\" shows \"A\" \"B\" <br>\nusing assms<br>\napply(rule conjunctionD1)<br>\nusing assms<br>\napply(rule conjunctionD2)<br>\ndone</p>\n<p>As remedy, we can simply prove axioms conjD1 and conjD2:</p>\n<p>lemma conjD1: \"!!A B. A &amp; B ==&gt; A\" by simp <br>\nlemma conjD2: \"!!A B. A &amp; B ==&gt; B\" by simp </p>\n<p>And then what I assume you wanted to do (it's not exactly <br>\nyour question, so the email subject was changed, maybe sb else works<br>\nout answering exactly that question) becomes:</p>\n<p>lemma assumes \"A &amp; B\" shows \"A\" \"B\" <br>\nusing assms<br>\napply(rule conjD1)<br>\nusing assms<br>\napply(rule conjD2)<br>\ndone</p>\n<p>Also checked with some treatments of Natural Deduction (examples:<br>\nVan Dalen, Logic and Structure 1997 p. 36, Prawitz, Natural<br>\nDeduction 1965 p. 20, Gentzen 1934, p. 186) that conjunction<br>\nelimination is presented in the style of conjD1 and conjD2 and not <br>\nIsabelle's conjE (of course, disjunction elimination is a different beast).</p>\n<p>Is there any deeper reason \"conjE\" appears overly complicated and/or <br>\n\"conjD1\" and \"conjD2\" are not aboard?</p>\n<p>best,</p>",
        "id": 294229495,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901719
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nAm 20/12/2012 21:55, schrieb Holger Blasum:</p>\n<blockquote>\n<p>lemma conjD1: \"!!A B. A &amp; B ==&gt; A\" by simp <br>\nlemma conjD2: \"!!A B. A &amp; B ==&gt; B\" by simp <br>\n...<br>\nIs there any deeper reason \"conjE\" appears overly complicated</p>\n</blockquote>\n<p>Because you used it with rule, not erule. It makes perfect sense in apply scripts.</p>\n<blockquote>\n<p>and/or \"conjD1\" and \"conjD2\" are not aboard?</p>\n</blockquote>\n<p>They are, and Proof General actually tells you so when you state conjD1:</p>\n<p>Auto solve_direct: The current goal can be solved directly with<br>\n  HOL.conjE: [|?P &amp; ?Q; [|?P; ?Q|] ==&gt; ?R|] ==&gt; ?R<br>\n  HOL.conjunct1: ?P &amp; ?Q ==&gt; ?P</p>\n<p>Regards<br>\nTobias</p>",
        "id": 294229508,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901725
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nAfter some further acquaintance with the truely natural Natural Deduction <br>\nof Isabelle/Pure and Isabelle/Isar you will consider conjD1/conjD2 as much <br>\nless natural than they seem; and they are not elimination rules at all.</p>\n<p>It might also help to ask the 'print_statement' command to print rules for <br>\nyou in structured Isar form.</p>\n<p>Thus neither conjE nor disjE look like beasts anymore.</p>\n<p>Makarius</p>",
        "id": 294229539,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901743
    }
]