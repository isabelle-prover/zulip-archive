[
    {
        "content": "<p>From: Michael Norrish &lt;<a href=\"mailto:michael.norrish@nicta.com.au\">michael.norrish@nicta.com.au</a>&gt;<br>\n2nd Informal ACM SIGPLAN Workshop on Mechanizing Metatheory</p>\n<p>Freiburg, Germany</p>\n<p>Sponsored by ACM SIGPLAN<br>\n                        Co-located with ICFP'07.</p>\n<p><a href=\"http://www.cis.upenn.edu/~sweirich/wmm/\">http://www.cis.upenn.edu/~sweirich/wmm/</a></p>\n<p>Important Dates</p>\n<p>* Submission deadline: 18 June 2007<br>\n      * Author Notification: 16 July 2007<br>\n      * Workshop: 4 October 2007</p>\n<p>Workshop Description</p>\n<p>Researchers in programming languages have long felt the need for<br>\n    tools to help formalize and check their work. With advances in<br>\n    language technology demanding deep understanding of ever larger and<br>\n    more complex languages, this need has become urgent. There are a<br>\n    number of automated proof assistants being developed within the<br>\n    theorem proving community that seem ready or nearly ready to be<br>\n    applied in this domain--yet, despite numerous individual efforts in<br>\n    this direction, the use of proof assistants in programming language<br>\n    research is still not commonplace: the available tools are<br>\n    confusingly diverse, difficult to learn, inadequately documented,<br>\n    and lacking in specific library facilities required for work in<br>\n    programming languages.</p>\n<p>The goal of this workshop is to bring together researchers who have<br>\n    experience using automated proof assistants for programming<br>\n    language metatheory, and those who are interested in using tool<br>\n    support for formalizing their work. One starting point for<br>\n    discussion will be the obstacles that hinder mechanisation (whether<br>\n    they be pragmatic or technical), and what users and developers can<br>\n    do to overcome them.</p>\n<p>Format</p>\n<p>The workshop will consist of presentations by the participants,<br>\n    selected from submitted abstracts. It will focus on providing a<br>\n    fruitful environment for interaction and presentation of ongoing<br>\n    work.  Participants are invited to submit working notes, source<br>\n    files, and abstracts for distribution to the attendees, but as the<br>\n    workshop has no formal proceedings, contributions may still be<br>\n    submitted for publication elsewhere. (See the SIGPLAN republication<br>\n    policy for more details.)</p>\n<p>Scope</p>\n<p>The scope of the workshop includes, but is not limited to:</p>\n<p>* Tool demonstrations: proof assistants, logical frameworks,<br>\n        visualizers, etc.</p>\n<p>* Libraries for programming language metatheory.<br>\n      * Formalization techniques, especially with respect to binding<br>\n        issues.</p>\n<p>* Analysis and comparison of solutions to the POPLmark challenge.<br>\n      * Examples of formalized programming language metatheory.<br>\n      * Proposals for new challenge problems that benchmark programming<br>\n        language work.</p>\n<p>Submission Guidelines</p>\n<p>Email submissions to michael.norrish AT <a href=\"http://nicta.com.au\">nicta.com.au</a>. Submissions<br>\n    should be no longer than one page and in PDF (preferably) or<br>\n    Postscript that is interpretable by Ghostscript and printable on US<br>\n    Letter or A4 sized paper.</p>\n<p>Conference Organization</p>\n<p>Program Committee</p>\n<p>+ Karl Crary, Carnegie Mellon University<br>\n           + Gerwin Klein, National ICT Australia<br>\n           + Michael Norrish, National ICT Australia (chair)<br>\n           + Randy Pollack, Edinburgh University<br>\n           + Steve Zdancewic, University of Pennsylvania</p>\n<p>Workshop Organizers</p>\n<p>+ Benjamin Pierce, University of Pennsylvania<br>\n           + Stephanie Weirich, University of Pennsylvania</p>\n<p>Previous Workshops</p>\n<p>* Portland, 2006 (Colocated with ICFP)</p>",
        "id": 294046204,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660817385
    }
]