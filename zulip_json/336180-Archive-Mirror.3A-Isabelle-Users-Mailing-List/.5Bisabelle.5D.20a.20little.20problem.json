[
    {
        "content": "<p>From: 游珍 &lt;<a href=\"mailto:yucy0405@163.com\">yucy0405@163.com</a>&gt;<br>\nDear friends,</p>\n<p>I have a promble about verifying the next lemma.</p>\n<p>lemma add_finite : \"finite A \\&lt;and&gt; A \\&lt;noteq&gt; {} \\&lt;Longrightarrow&gt; finite {(x::nat) + m |m. m \\&lt;in&gt; A}\" </p>\n<p>Need your help! Thanks.</p>\n<p>yucy</p>",
        "id": 294140774,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845731
    },
    {
        "content": "<p>From: René Thiemann &lt;<a href=\"mailto:rene.thiemann@uibk.ac.at\">rene.thiemann@uibk.ac.at</a>&gt;<br>\nDear yucy,</p>\n<p>perhaps you want to use finite_imageI:</p>\n<p>lemma add_finite : \"finite A \\&lt;Longrightarrow&gt; finite {(x::nat) + m |m. m \\&lt;in&gt; A}\" <br>\nproof -<br>\n  assume f: \"finite A\"<br>\n  have id: \"{x + m | m. m \\&lt;in&gt; A} = (\\&lt;lambda&gt;m. x + m) ` A\" by auto<br>\n  from finite_imageI[OF f]<br>\n  show ?thesis unfolding id .<br>\nqed</p>\n<p>Cheers,<br>\nRené</p>",
        "id": 294140785,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845735
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nThe trick is that {e | m. m : A} is equivalent to (%m. e) <code> A. Now you\ncan use the lemma finite_imageI: finite ?F ==&gt; finite (?h </code> ?F)</p>\n<p>lemma add_finite : \"finite A ==&gt; finite {(x::nat) + m |m. m : A}\"<br>\nusing finite_imageI[of A \"%m. x+m\"]<br>\nby(simp add: image_def)</p>\n<p>Note that A ~= {} is unnecessary.</p>\n<p>Tobias</p>",
        "id": 294140797,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845739
    }
]