[
    {
        "content": "<p>From: Li Yongjian &lt;<a href=\"mailto:lyj238@gmail.com\">lyj238@gmail.com</a>&gt;<br>\nDear experts:<br>\n   Now I meet a problem of formalization of a parameterized bit-vector.<br>\nHere a parameterized bit-vector. means that the width of the bit vector is<br>\na parmeterize, for instance a variable in a program (hardware design) is a<br>\nword of some length k. I want to prove that some property P on the varaible<br>\nis correct for any k.</p>\n<p>I notice that the examples usually are on a fixed-length word such as 32<br>\nword, 8 word. For instance, a lemma<br>\nlemma \"0b110 AND 0b101 = (0b100 :: 5 word)\" by simp</p>\n<p>I want to have a lemma such as<br>\nlemma  lemmaTest: \"0b110 AND 0b101 = (0b100 :: k word)\" by simp, where k is<br>\nany natural number which is greater than or equal to 3.</p>\n<p>But obviously  lemmaTest is not allowed in Isabelle.</p>\n<p>How to formalize such a lemma? Or I can be shown some examples which<br>\nformalize the  parameterized-word problems.</p>\n<p>regards!</p>",
        "id": 294682197,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661177100
    },
    {
        "content": "<p>From: \"C. Diekmann\" &lt;<a href=\"mailto:diekmann@in.tum.de\">diekmann@in.tum.de</a>&gt;<br>\nHi,</p>\n<blockquote>\n<p>How to formalize such a lemma? Or I can be shown some examples which<br>\nformalize the  parameterized-word problems.</p>\n</blockquote>\n<p>We did something quite similar:</p>\n<p><a href=\"https://github.com/diekmann/Iptables_Semantics/blob/master/thy/IP_Addresses/Lib_Word_toString.thy#L100\">https://github.com/diekmann/Iptables_Semantics/blob/master/thy/IP_Addresses/Lib_Word_toString.thy#L100</a></p>\n<p>But once you have an assumption, in your case \"len_of TYPE('k) &gt;= 3\",<br>\nproofs get really hard because Word_Lib cannot help you much. Those<br>\nrestrictions about a minimum length for a word probably only come from<br>\nhard-coded constants, maybe you can rephrase the complicated lemma without<br>\nthe use of hard-coded constants?</p>\n<p>Best,<br>\n  Cornelius</p>",
        "id": 294682231,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661177109
    }
]