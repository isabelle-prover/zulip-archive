[
    {
        "content": "<p>From: Dominique Unruh &lt;<a href=\"mailto:unruh@ut.ee\">unruh@ut.ee</a>&gt;<br>\nHi,</p>\n<p>in the following theory, the term \"overload [] :: bool list\" is parsed <br>\nas \"overload [] :: 'a list\". It seems there is some accidental erasure <br>\nof the type constraint in the adhoc overloading mechanism.</p>\n<p>(Tested with 2018 and 2019-RC0, so it's not a regression.)</p>\n<p>theory Scratch<br>\n   imports \"HOL-Library.Adhoc_Overloading\"<br>\nbegin</p>\n<p>consts someop :: \"'a list ⇒ 'a list\"<br>\nconsts overload :: \"'a ⇒ 'b\"<br>\nadhoc_overloading overload someop<br>\nterm \"overload [] :: bool list\"<br>\n(* Prints:</p>\n<p>\"overload []\"<br>\n   :: \"'a list\"</p>\n<p>*)</p>\n<p>By the way, I would like to check whether this mailing list is the right <br>\nplace for sharing this kind of reports.</p>\n<p>Best wishes,<br>\nDominique.</p>",
        "id": 294757253,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661198044
    },
    {
        "content": "<p>From: Alexander Krauss &lt;<a href=\"mailto:krauss@in.tum.de\">krauss@in.tum.de</a>&gt;<br>\nHi Dominique,</p>\n<p>Am 19.05.2019 um 21:47 schrieb Dominique Unruh:</p>\n<blockquote>\n<p>in the following theory, the term \"overload [] :: bool list\" is parsed<br>\nas \"overload [] :: 'a list\". It seems there is some accidental erasure<br>\nof the type constraint in the adhoc overloading mechanism.</p>\n</blockquote>\n<p>Thanks for reporting this. I can see where Adhoc_Overloading discards<br>\nthe type information here. I'll see if I can fix this.</p>\n<blockquote>\n<p>By the way, I would like to check whether this mailing list is the right<br>\nplace for sharing this kind of reports.<br>\nAbsolutely.</p>\n</blockquote>\n<p>Alex</p>",
        "id": 294757279,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661198056
    }
]