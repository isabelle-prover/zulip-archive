[
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nDear list,</p>\n<p>I have a proof state which can be solved by the subsequent application<br>\nof two methods, i.e.</p>\n<p>have \"P x\"<br>\n    apply (induct x)<br>\n    apply auto<br>\n    done</p>\n<p>If I rewrite this to</p>\n<p>have \"P x\"<br>\n    by (induct x) auto</p>\n<p>the proof fails. Unfortunately I haven't been able to distill a small<br>\nexample exhibiting this behaviour. Now, I know that \"by x y\" is<br>\nequivalent to \"proof x qed y\", but I always thought that is in turn<br>\nequivalent to \"apply x apply y\". Funnily enough, \"by (x, y)\" works. The<br>\nchained facts appear not to be significant here (I tried some variations).</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294647975,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661164898
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nIt is not. I am not sure about proof, but qed usually does a bit more<br>\nthan apply (e.g., solve things by assumption).</p>",
        "id": 294647989,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661164904
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;</p>\n<blockquote>\n<p>It is not. I am not sure about proof, but qed usually does a bit more<br>\nthan apply (e.g., solve things by assumption).</p>\n</blockquote>\n<p>True, but shouldn't that mean that \"by xy\" solves more than \"apply x apply<br>\ny done\", instead of the other way round?</p>",
        "id": 294648002,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661164917
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nI would have expected that, yes. Does \"proof x\" create the same subgoals<br>\nas \"apply x\"? Does \"proof x apply_end y qed\" solve the goal?</p>\n<p>-- Lars</p>",
        "id": 294648050,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661164923
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\n(Back to this old thread.)</p>\n<p>The above situation is indeed a bit odd.  Too bad that there is not an <br>\nisolated experimental setup to test theories what is going on.</p>\n<p>In principle the following equivalences of proof snippets hold:</p>\n<p>by method1 method2</p>\n<p>==</p>\n<p>apply method1<br>\n   apply method2<br>\n   .</p>\n<p>==</p>\n<p>apply method1<br>\n   apply method2<br>\n   apply assumption*<br>\n   done</p>\n<p>But there are various fine points, notably backtracking: \"by\" composes all <br>\npossibilities with the Seq.THEN / Seq.EVERY combinator, while the \"apply\" <br>\nscript takes each step separately and uses only the first result.</p>\n<p>In PIDE interaction, there is also a difference in forked proofs: the <br>\nproof state for \"by\" looks technically a bit different.  Well-behaved <br>\nproof methods should not be able to discern that, but who know what really <br>\nhappens here.  Note that in batch mode, both the \"by\" and \"apply\" proofs <br>\nare forked uniformly.</p>\n<p>If you still happen to have that situation at hand, we could try to <br>\nexplore it further.</p>\n<p>Makarius</p>",
        "id": 294652974,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661166867
    }
]