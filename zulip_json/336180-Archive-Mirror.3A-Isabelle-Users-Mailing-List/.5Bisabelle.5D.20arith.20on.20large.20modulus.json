[
    {
        "content": "<p>From: John Matthews &lt;<a href=\"mailto:matthews@galois.com\">matthews@galois.com</a>&gt;<br>\nHi,</p>\n<p>I would like to automatically prove the following lemma:</p>\n<p>lemma<br>\n    \"[|\\&lt;not&gt; 100 &lt; nat (x); 0 \\&lt;le&gt; x|]<br>\n     ==&gt; nat x + 11 = nat ((x + 11) mod 4294967296)\"</p>\n<p>I thought this fell within the fragment that arith can handle, but it  <br>\ncan't seem to prove it. I know how to prove this manually, but is  <br>\nthere something else I can use to prove it in a single command?</p>\n<p>Thanks,<br>\n-john</p>",
        "id": 294063986,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660824776
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nIt appears there is a bug. Which is not so easy do diagnose :-(</p>\n<p>Tobias</p>\n<p>John Matthews schrieb:</p>",
        "id": 294064023,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660824786
    },
    {
        "content": "<p>From: Amine Chaieb &lt;<a href=\"mailto:chaieb@in.tum.de\">chaieb@in.tum.de</a>&gt;<br>\nHi John,</p>\n<p>There is a problem converting this goal into a goal over int. The new <br>\ngoal after conversion still contains nat and int, which which the core <br>\npresburger tactic can not cope. We need a more clever conversion, which <br>\ntakes numerals into account, which occur in a statement containing both <br>\nnat and int with explicit conversions (nat and int).</p>\n<p>This could be more involved than the actual approach, an I think we can <br>\nnot come around a specialized procedure -- i.e. a conversion or a set of <br>\nsimprocs + rules.</p>\n<p>Amine.</p>\n<p>PS: We could think about adding some intro rules to presburger if such <br>\nstatements occur often. Candidates are mod_pos_pos_trivial and mod_less <br>\nand others, to prove that some modulo operations are basically the same <br>\nas the usual operations assuming that the input is within the size of <br>\nthe modulus.</p>\n<p>Tobias Nipkow wrote:</p>",
        "id": 294064085,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660824810
    },
    {
        "content": "<p>From: John Matthews &lt;<a href=\"mailto:matthews@galois.com\">matthews@galois.com</a>&gt;<br>\nOk, thanks for looking into this, Amine.</p>\n<p>-john</p>",
        "id": 294064148,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660824831
    }
]