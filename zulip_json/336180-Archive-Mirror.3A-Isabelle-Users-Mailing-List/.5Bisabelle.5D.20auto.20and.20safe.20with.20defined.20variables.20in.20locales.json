[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt;<br>\nIn the following example:<br>\nlocale A =<br>\n  fixes X<br>\n  defines \"X==[1::nat]\"</p>\n<p>lemma (in A) test: \"[] ~= X\"<br>\n  apply safe</p>\n<p>The subgoal presented to me is: False.<br>\nI expected something like:  [] = X ==&gt; False, but I get just False.<br>\nThe same is with auto. The reason seems to be the defined variable X of<br>\nthe locale.<br>\nIn some more complex proofs, this forces me to very often fold/unfold<br>\nsymbol definitions in my locales (to prevent auto or safe making such<br>\ntransformations), and this makes the proof scripts more confusing.<br>\nIs this behaviour of safe and auto the intended one ?<br>\nIs there any workaround to use a defined variable like X, but prevent<br>\nsafe/auto from making such steps ?</p>\n<p>Thanks in advance for any help<br>\n-- Peter Lammich</p>",
        "id": 294047013,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660817711
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nAt the moment, any assumption like []=X is deleted after replacing X  <br>\nby []. As you've noticed, that isn't helpful if constrained by a  <br>\nlocale. We could investigate whether anything can be done about it.</p>\n<p>Larry</p>",
        "id": 294047022,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660817716
    }
]