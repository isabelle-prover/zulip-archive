[
    {
        "content": "<p>From: Christoph LANGE &lt;<a href=\"mailto:math.semantic.web@gmail.com\">math.semantic.web@gmail.com</a>&gt;<br>\n2013-10-04 10:42 Makarius:</p>\n<blockquote>\n<p>With the implicit \"auto sledgehammer\" and explicit \"slegdehammer panel\"<br>\nyou normally don't put query commands in the buffer anymore,</p>\n</blockquote>\n<p>Could you once more explain what \"auto sledgehammer\" is?  I know<br>\nentering \"sledgehammer\" (or \"try\", which I use in practice most of the<br>\ntime) into the buffer, and I know the new sledgehammer panel, and I<br>\ndidn't see anything else in the NEWS file.</p>\n<p>Cheers, and thanks in advance,</p>\n<p>Christoph</p>",
        "id": 294252993,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660911496
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe NEWS file has this very terse entry:</p>\n<p>* Support for automatic tools in HOL, which try to prove or disprove<br>\n   toplevel theorem statements.</p>\n<p>The sledgehammer manual then has this:</p>\n<p>For Isabelle/jEdit users, Sledgehammer provides an automatic mode that<br>\n   can be enabled via the “Auto Sledgehammer” option under “Plugins &gt; Plugin<br>\n   Options &gt; Isabelle &gt; General.” In this mode, Sledgehammer is run on<br>\n   every newly entered theorem.</p>\n<p>The Plugin Options have more \"automatically tried tools\" in store, most of <br>\nthem off by default.</p>\n<p>\"Auto methods\" is the same mechanism as 'try0', but it tends to suck up a <br>\nlot of CPU resources, since the classic Isabelle proof tools easily get <br>\ninto non-terminating situations without instrumentation by facts that are <br>\nproperly classified as simp/intro/elim/dest/iff.</p>\n<p>I should probably say a few more general things about the \"auto\" tools in <br>\nthe still empty slots of the jedit manual, pointing to the other manuals, <br>\ntoo.</p>\n<p>We also need more practical experience with such options.</p>\n<p>Makarius</p>",
        "id": 294253012,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660911502
    },
    {
        "content": "<p>From: Christoph LANGE &lt;<a href=\"mailto:math.semantic.web@gmail.com\">math.semantic.web@gmail.com</a>&gt;<br>\n2013-10-04 15:13 Makarius:<br>\nThanks for pointing out!  Very interesting to know, but (now take this<br>\nas feedback from a naive end-user) I probably won't enable all these<br>\nautomations seems.  Auto quickcheck and solve_direct are very nice, but<br>\nI wouldn't want time-consuming tools (such as Sledgehammer) to run<br>\nautomatically even while I am still editing a statement.  I made it into<br>\na habit to invoke \"try\" whenever I've finished writing down a statement.</p>\n<p>Cheers,</p>\n<p>Christoph</p>",
        "id": 294253054,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660911524
    },
    {
        "content": "<p>From: Christoph LANGE &lt;<a href=\"mailto:math.semantic.web@gmail.com\">math.semantic.web@gmail.com</a>&gt;<br>\n2013-10-07 12:25 Jasmin Blanchette:</p>\n<blockquote>\n<p>Auto Sledgehammer and Auto Nitpick run in a much reduced mode -- e.g. Sledgehammer just tries one prover for a few seconds instead of four for half a minute. (The manuals of these tools clarify which options are used.)  I've enabled them months ago and don't really notice them any more than I notice Auto Quickcheck or Auto solve_direct. On the other hand, if you invoke \"try\" regularly, I can see that you don't need those tools.</p>\n</blockquote>\n<p>OK, thanks, you convinced me.  I'll give Auto Sledgehammer a try.  And<br>\notherwise fall back to \"try\" if I don't like it.</p>\n<p>Cheers,</p>\n<p>Christoph</p>",
        "id": 294253306,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660911612
    },
    {
        "content": "<p>From: Christoph LANGE &lt;<a href=\"mailto:math.semantic.web@gmail.com\">math.semantic.web@gmail.com</a>&gt;<br>\n2013-10-07 22:05 Christoph LANGE:<br>\nLet me add that I'm finding Auto Sledgehammer very useful.  You may<br>\nrecall from our recent face-to-face conversation that I'm interested in<br>\nidentifying ATP challenge problems, and that my approach is to look for<br>\nlemmas that look easy, can be proved with a few manual steps, but are<br>\nrelatively hard for ATPs.</p>\n<p>Because of the timeout setting, Auto Sledgehammer certainly won't help<br>\nme to identify those problems for which Sledgehammer needs a long time<br>\nto find an automated proof.</p>\n<p>But for surprisingly many theorems, Auto Sledgehammer does find a proof<br>\nwithin the given time.  Now, to measure the approximate time the actual<br>\nproof would take, it just remains that I make one or two (in case of<br>\n\"sledgehammer [min]\") clicks to see how long metis or smt would need for<br>\nthe proof.</p>\n<p>Much easier than having to enter \"sledgehammer\" manually and then wait.</p>\n<p>Cheers,</p>\n<p>Christoph</p>",
        "id": 294253334,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660911624
    }
]