[
    {
        "content": "<p>From: <a href=\"mailto:dimitri@math.uni-bonn.de\">dimitri@math.uni-bonn.de</a><br>\nHello all,</p>\n<p>since this is my first post in this mailing list, I will shortly introduce<br>\nmyself. My name is Ioanna Matilde Dimitriou, and I work with the<br>\nmathematical logic group of Bonn, on formalising ZF/NBG-Set Theory in<br>\nIsabelle/HOL, in a \"natural\" style, i.e., as in a standard textbook.</p>\n<p>We do this to understand the interplay between Isabelle's, ZF's, and NBG's<br>\nlogics, to be able to use Sledgehammer (which to our knowledge is only<br>\nwritten for HOL), and to explore the controlled natural language parsing<br>\npossibilities in such a setting. For the first goal we chose to revisit<br>\nLawrence Paulson's \"/ZF/Constructible/AC_in_L.thy\", which is a large and<br>\nchallenging metamathematical formal proof, and which states that the Axiom<br>\nof Choice (AC) is true in L, the universe of constructible sets.</p>\n<p>We quickly realised that AC holds in Isabelle/HOL, in fact it is a lemma<br>\nin \"A Proof Assistant for Higher Order Logic\" by Nikpow, Paulson, and<br>\nWenzel (page 87 of the 2015 version).</p>\n<p>Is there any way to completely \"turn off\" AC in Isabelle/HOL? If not,<br>\ncould you please give me some pointers to the direction of writing a<br>\nSledgehammer for Isabelle/Pure, Isabelle/FOL, or Isabelle/ZF?</p>\n<p>Thank you in advance,<br>\nIoanna</p>",
        "id": 294664193,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661171095
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nIsabelle/HOL introduces the axiom of choice fairly late in the development (contrast with other HOL implementations, which include it as part of the basic axiomatic set up), but from that point onwards, it gets intertwined with everything. It would be better if you chose a development involving AC, something to do with cardinals perhaps, or simply some of the more obscure consequences of AC.</p>\n<p>Larry Paulson</p>",
        "id": 294665896,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661171758
    },
    {
        "content": "<p>From: Christian Sternagel &lt;<a href=\"mailto:c.sternagel@gmail.com\">c.sternagel@gmail.com</a>&gt;<br>\nCorrect me if I am wrong, but my impression is that sledgehammer (via<br>\nmetis) has (at least a variant of) the \"Axiom of Choice\" built-in. And I<br>\nthink the same holds true for any tool that employs Skolemization.</p>\n<p>E.g.</p>\n<p>lemma \"ALL x. EX y. P x y ==&gt; EX f. ALL x. P x (f x)\" by metis</p>\n<p>cheers</p>\n<p>chris</p>",
        "id": 294666118,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661171827
    },
    {
        "content": "<p>From: Buday Gergely &lt;<a href=\"mailto:gbuday@karolyrobert.hu\">gbuday@karolyrobert.hu</a>&gt;<br>\nLarry Paulson wrote:</p>\n<p>Her research page tells me that her research goal is especially discovering how far one can get without the axiom of choice.</p>\n<p>Might it be that Isabelle/ZF is better for her aim?</p>\n<ul>\n<li>Gergely</li>\n</ul>",
        "id": 294666362,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661171893
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@inria.fr\">jasmin.blanchette@inria.fr</a>&gt;<br>\nHi Chris,</p>\n<p>This is true, but only if you have loaded \"Hilbert_Choice\". Before that, \"metis\" will fail to prove the above, because it has to rely on a weaker skolemizer. And Sledgehammer is simply not available.</p>\n<p>Cheers,</p>\n<p>Jasmin</p>",
        "id": 294666799,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661172027
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nIsabelle/ZF is surely best for developments in axiomatic set theory. But there is no sledgehammer there.<br>\nLarry</p>",
        "id": 294666976,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661172095
    },
    {
        "content": "<p>From: Ioanna Dimitriou &lt;<a href=\"mailto:dimitri@math.uni-bonn.de\">dimitri@math.uni-bonn.de</a>&gt;<br>\nThank you all for your answers. </p>\n<blockquote>\n<p>Correct me if I am wrong, but my impression is that sledgehammer (via<br>\nmetis) has (at least a variant of) the \"Axiom of Choice\" built-in. And I<br>\nthink the same holds true for any tool that employs Skolemization.</p>\n</blockquote>\n<blockquote>\n<p>Isabelle/HOL introduces the axiom of choice fairly late in the development (contrast with other HOL implementations, which include it as part of the basic axiomatic set up), but from that point onwards, it gets intertwined with everything. It would be better if you chose a development involving AC, something to do with cardinals perhaps, or simply some of the more obscure consequences of AC.</p>\n</blockquote>\n<p>I think that if we have a primitive type \"Class\" of classes with a<br>\nsubtype \"Set\" of sets, and some axioms for them, say NBG without choice,<br>\nthen we can still work in a theory that involves the axiom of choice<br>\nwithout deducing that certain choice functions and Skolem functions<br>\n(which exist in HOL) have type \"Class\". This is similar to constructing<br>\na \"model\" of (ZF+notAC ) while working in (ZF+AC), which is not<br>\nproblematic at all.</p>\n<p>So, unless I'm mistaken, I don't think that working with HOL is<br>\nproblematic in itself, though we now have to put some work in defining<br>\nFOL-formulas with class parameters in order to get Class Separation in<br>\nour theory NGB, and then somehow carefully \"connect\" these formulas to<br>\nformulas in HOL. If we didn't have AC at all, then we could be more<br>\nflexible with rules that deduce that certain metafunctions (\"Set =&gt;<br>\nbool\") have representations of type Class.</p>\n<blockquote>\n<p>Her research page tells me that her research goal is especially discovering how far one can get without the axiom of choice.</p>\n<p>Might it be that Isabelle/ZF is better for her aim?</p>\n</blockquote>\n<p>Though I personally enjoy working without AC, or between AC and notAC,<br>\nthe research goal for the project I mentioned in the last post is to<br>\nformalise ZF(C) (or NBG(C)) in a way that appears natural to a working<br>\nmathematician (like in a textbook). Paulson's proof of AC in L is<br>\nparticularly interesting because of the metamathematical arguments which<br>\nare so commonplace in set theory. In the Bonn logic group we think that<br>\nHOL is more suitable for this task, because of the shorter proof steps,<br>\nthe meta-arguments that become easier when one can talk about classes,<br>\nbecause of the large HOL-libraries we can learn from, and because of<br>\nSledgehammer.</p>\n<p>Having said that, I would also like to compare the two logics (HOL vs<br>\nZF) with respect to formalising ZF(C) in a \"natural\" way. For this, I<br>\nwould really like to be able to use Sledgehammer. That's why I also<br>\nasked for some pointers in the direction of writing a Sledgehammer for<br>\nFOL. Perhaps this has been done already, or there is a detailed<br>\nexplanation of Sledgehammer somewhere? Otherwise, do I just have to<br>\nunderstand the code in Sledgehammer.thy?</p>\n<p>Best wishes,<br>\nIoanna</p>",
        "id": 294667367,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661172232
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nI'm suspicious of this suggestion. Something tells me that AC (which is available for all types) will contaminate the new types that you introduce. This raises the question however of solving your problem using type classes, whether we could allow types that do not assume AC to coexist beside the others.</p>\n<p>Larry Paulson</p>",
        "id": 294667481,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661172261
    },
    {
        "content": "<p>From: Thomas Sewell &lt;<a href=\"mailto:thomas.sewell@nicta.com.au\">thomas.sewell@nicta.com.au</a>&gt;<br>\nHey all.</p>\n<p>It's nice to be able to avoid the Hilbert_Choice theory, and use only<br>\nthe definite description operator (The/THE) as opposed to the strong<br>\nHilbert choice operator (Eps/SOME).</p>\n<p>I played around with this about a year ago, and discovered that this<br>\ndoesn't buy you much in modern Isabelle. The lifting and transfer<br>\npackages seem to make extensive use of Eps, and pretty much everything<br>\nthat isn't a natural seems to now use lifting/transfer in the definition<br>\nof some primitive functions. Even proofs about naturals seem to depend<br>\non the axiom about Eps because the simprocs about naturals sometimes<br>\ncoerce to integers, and int/of_nat is defined by lifting/transfer.</p>\n<p>At least, that's the impression I got. I might have misunderstood what<br>\nwas going on.</p>\n<p>Cheers,<br>\n     Thomas.</p>\n<hr>\n<p>The information in this e-mail may be confidential and subject to legal professional privilege and/or copyright. National ICT Australia Limited accepts no liability for any damage caused by this email or its attachments.</p>",
        "id": 294667677,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661172340
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@inria.fr\">jasmin.blanchette@inria.fr</a>&gt;<br>\nIn addition, the BNF (co)datatype package uses \"Eps\" in a few places. Granted, some of it could be avoided, e.g.</p>\n<p>HOLogic.choice_const T $ absdummy T @{term True}</p>\n<p>could (and perhaps should) be replaced by</p>\n<p>Const (@{const_name undefined}, T)</p>\n<p>Jasmin</p>",
        "id": 294667768,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661172365
    }
]