[
    {
        "content": "<p>From: John Wickerson &lt;<a href=\"mailto:jpw48@cam.ac.uk\">jpw48@cam.ac.uk</a>&gt;<br>\nHello Isabelle,</p>\n<p>As part of a little separation logic theory I'm working on, I have the following axiomatisation of a star operator:</p>\n<blockquote>\n<p>axiomatization<br>\n  Star :: \"assertion =&gt; assertion =&gt; assertion\"<br>\nwhere star_comm: \"Star p q = Star q p\"<br>\n  and star_assoc: \"Star (Star p q) r = Star p (Star q r)\"<br>\n  and star_emp: \"Star p Emp = p\"<br>\n  and emp_star: \"Star Emp p = p\"</p>\n</blockquote>\n<p>I would now like to add a couple more properties of \"star\", such as:</p>\n<blockquote>\n<p>and dist_conj: \"Star p (Conj q r) ≤ Conj (Star p q) (Star p r)\"</p>\n</blockquote>\n<p>However, before I can use \"≤\" to compare assertions, I need \"assertion :: order\". I don't want to <em>prove</em> this (by giving a concrete definition for ≤), instead I want simply to <em>assume</em> this. How is this done?</p>\n<p>Many thanks,<br>\nJohn</p>",
        "id": 294156449,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660851389
    },
    {
        "content": "<p>From: John Wickerson &lt;<a href=\"mailto:jpw48@cam.ac.uk\">jpw48@cam.ac.uk</a>&gt;<br>\nAh, I worked it out. I replaced</p>\n<blockquote>\n<p>typedecl assertion</p>\n</blockquote>\n<p>with</p>\n<blockquote>\n<p>typedecl assertion<br>\narities assertion :: \"order\"</p>\n</blockquote>\n<p>which seems to do the trick.</p>\n<p>John</p>\n<p>On 25 Apr 2012, at 13:51, John Wickerson wrote:</p>\n<blockquote>\n<p>Hello Isabelle,</p>\n<p>As part of a little separation logic theory I'm working on, I have the following axiomatisation of a star operator:</p>\n<blockquote>\n<p>axiomatization<br>\n Star :: \"assertion =&gt; assertion =&gt; assertion\"<br>\nwhere star_comm: \"Star p q = Star q p\"<br>\n and star_assoc: \"Star (Star p q) r = Star p (Star q r)\"<br>\n and star_emp: \"Star p Emp = p\"<br>\n and emp_star: \"Star Emp p = p\"</p>\n</blockquote>\n<p>I would now like to add a couple more properties of \"star\", such as:</p>\n<blockquote>\n<p>and dist_conj: \"Star p (Conj q r) ≤ Conj (Star p q) (Star p r)\"</p>\n</blockquote>\n<p>However, before I can use \"≤\" to compare assertions, I need \"assertion :: order\". I don't want to <em>prove</em> this (by giving a concrete definition for ≤), instead I want simply to <em>assume</em> this. How is this done?</p>\n<p>Many thanks,<br>\nJohn</p>\n</blockquote>",
        "id": 294156460,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660851395
    }
]