[
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:brianh@cs.pdx.edu\">brianh@cs.pdx.edu</a>&gt;<br>\nHello all,</p>\n<p>I have noticed some inconsistency and duplication in Isabelle's<br>\nstandard libraries, as far as bijections to/from type nat are<br>\nconcerned. Here is a list of the functions that I know about:</p>\n<p>Library/Nat_Int_Bij.thy:<br>\n  nat2_to_nat:: \"(nat * nat) =&gt; nat\"<br>\n  nat_to_nat2::  \"nat =&gt; (nat * nat)\"<br>\n  nat_to_int_bij :: \"nat =&gt; int\"<br>\n  int_to_nat_bij :: \"int =&gt; nat\"</p>\n<p>Library/Countable.thy:<br>\n  pair_encode :: \"nat * nat =&gt; nat\"<br>\n  nat_to_rat_surj :: \"nat =&gt; rat\" (* not injective; defined in terms<br>\nof nat_to_nat2 *)</p>\n<p>HOLCF/NatIso.thy:<br>\n  sum2nat  :: \"nat + nat =&gt; nat\"<br>\n  nat2sum  :: \"nat =&gt; nat + nat\"<br>\n  prod2nat :: \"nat * nat =&gt; nat\"<br>\n  nat2prod :: \"nat =&gt; nat * nat\"<br>\n  set2nat :: \"nat set =&gt; nat\" (* injective on the finite sets *)<br>\n  nat2set :: \"nat =&gt; nat set\"</p>\n<p>I would like to consolidate all these libraries and remove duplicate<br>\nfunctionality. (It turns out that prod2nat, pair_encode, and<br>\nnat2_to_nat are all equal as functions, even though they are defined<br>\ndifferently.) I would also like to come up with a consistent naming<br>\nscheme for the various functions and related lemmas.</p>\n<p>Before doing anything, I'd like to get some input from the user<br>\ncommunity. Who is using these libraries, and what are you using them<br>\nfor? What kinds of function names do you like? What kinds of lemmas<br>\nabout these functions do you need? Is there anything <em>missing</em> from<br>\nthese libraries that you would like to have?</p>\n<p>Thanks!</p>\n<ul>\n<li>Brian</li>\n</ul>",
        "id": 294103037,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660834353
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nGreat!</p>\n<p>I have only one comment: the standard naming scheme should be (as in<br>\nIsabelle/ML)</p>\n<p>foo_of_bar :: bar =3D&gt; foo</p>\n<p>Cheers,<br>\n    Florian</p>\n<p>--=20</p>\n<p>Home:<br>\n<a href=\"http://www.in.tum.de/~haftmann\">http://www.in.tum.de/~haftmann</a></p>\n<p>PGP available:<br>\n<a href=\"http://home.informatik.tu-muenchen.de/haftmann/pgp/florian_haftmann_at_in=\">http://home.informatik.tu-muenchen.de/haftmann/pgp/florian_haftmann_at_in=</a><br>\nformatik_tu_muenchen_de<br>\n<a href=\"/user_uploads/14278/Y6gHiivG3pwA3168xeqC-Y_b/signature.asc\">signature.asc</a></p>",
        "id": 294103058,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660834360
    },
    {
        "content": "<p>From: Alexander Krauss &lt;<a href=\"mailto:krauss@in.tum.de\">krauss@in.tum.de</a>&gt;<br>\nFlorian Haftmann wrote:<br>\nI think this naming scheme would be inappropriate here, since it hints <br>\nat some kind of \"obvious conversion\". For example, the function <br>\nnat_to_int_bij is defined as</p>\n<p>nat_to_int_bij n = (if 2 dvd n then int(n div 2) else -int(Suc n div 2))</p>\n<p>Naming it \"int_of_nat\" would be confusing IMO.</p>\n<p>I added pair_encode together with class \"countable\" around 2007, not <br>\nknowing about the others. I think that function is only used to derive <br>\nthe class instance, so it can safely be replaced by any other definition...</p>\n<p>Other naming suggestions:</p>\n<p>cantor_pair   ::  \"nat * nat =&gt; nat\"<br>\ncantor_unpair ::  \"nat =&gt; nat * nat\"<br>\n   (or cantor_split)</p>\n<p>Alex</p>",
        "id": 294103065,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660834362
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi all,</p>\n<blockquote>\n<p>I think this naming scheme would be inappropriate here, since it hints<br>\nat some kind of \"obvious conversion\".</p>\n</blockquote>\n<p>of course you are right, I didn't full realize that we are taking about<br>\nCantor here.  Please ignore my suggestion.</p>\n<blockquote>\n<p>there is also Library/Diagonalize.thy which has similar content</p>\n</blockquote>\n<p>I have done this once.  Either it should be integrated into the emerging<br>\n\"Cantor toolbox\" or been moved to ex/.</p>\n<p>The main difference to other developments is that Diagonalize.thy avoids<br>\nchoice.</p>\n<p>Cheers,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/nRKv8o3_KslrNPjWyiCAZ6TO/signature.asc\">signature.asc</a></p>",
        "id": 294103129,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660834381
    }
]