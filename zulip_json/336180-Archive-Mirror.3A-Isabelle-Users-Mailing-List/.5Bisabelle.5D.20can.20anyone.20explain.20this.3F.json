[
    {
        "content": "<p>From: Jeremy Dawson &lt;<a href=\"mailto:Jeremy.Dawson@rsise.anu.edu.au\">Jeremy.Dawson@rsise.anu.edu.au</a>&gt;<br>\nIN the attached theory file, (also copied below),<br>\nI get an error at</p>\n<p>lemmas bin_nth_simps = bin_nth_0 bin_nth_Suc ;</p>\n<p>the error being</p>\n<p>*** Unknown theorem(s) \"bin_nth_0\"<br>\n*** At command \"lemmas\" (line 40 of <br>\n\"/home/users/jeremy/isabelle/l4/bg.thy\").</p>\n<p>However when I delete the earlier line</p>\n<p>lemmas fs = funpow_Suc ;</p>\n<p>then this error does not occur.</p>\n<p>Does anyone know why this might be?</p>\n<p>Thanks for any help</p>\n<p>Jeremy</p>\n<p>PS this is with Isabelle_11-Feb-2007</p>\n<p>file bg.thy follows</p>\n<p>theory bg imports Main</p>\n<p>begin</p>\n<p>consts<br>\n   (* corresponding operations analysing bins *)<br>\n   bin_nth :: \"int =&gt; nat =&gt; bool\"</p>\n<p>primrec<br>\n   Z : \"bin_nth w 0 = True\"<br>\n   Suc : \"bin_nth w (Suc n) = False\"</p>\n<p>ML {*<br>\nuse_legacy_bindings (the_context()) ;<br>\n*}</p>\n<p>ML {*<br>\nval _ = <a href=\"http://ListPair.app\">ListPair.app</a> bind_thm ([\"funpow_0\", \"funpow_Suc\"],<br>\n   thms \"funpow.simps\") ;<br>\n*}</p>\n<p>(* if this is deleted then bin_nth_0 below is recognised<br>\n*)<br>\nlemmas fs = funpow_Suc ;</p>\n<p>ML {*<br>\nval _ = <a href=\"http://ListPair.app\">ListPair.app</a> bind_thm ([\"bin_nth_0\", \"bin_nth_Suc\"], <br>\nbin_nth.simps) ;<br>\n   *}</p>\n<p>lemmas bin_nth_simps = bin_nth_0 bin_nth_Suc ;</p>\n<p>end<br>\n<a href=\"/user_uploads/14278/RI_zN5VliRkfBKCxDdQglT3y/bg.thy\">bg.thy</a></p>",
        "id": 294047926,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660818097
    },
    {
        "content": "<p>From: Stefan Berghofer &lt;<a href=\"mailto:berghofe@in.tum.de\">berghofe@in.tum.de</a>&gt;<br>\nJeremy Dawson wrote:<br>\nDear Jeremy,</p>\n<p>the bind_thm function is legacy - it was intended for use in *.ML files<br>\nattached to old-style theories. It relies on some imperative features of the<br>\ntheory datatype, which we unfortunately could not yet completely get rid of.<br>\nMore precisely, it destructively updates the theorem database, which is part<br>\nof the theory associated with the theorem you want to store. If you interactively<br>\nstep through a new-style theory, Isabelle creates an intermediate theory for<br>\neach command you execute (to be able to undo the command). If you now use<br>\nbind_thm inside such a theory, the theory associated with the theorem to be<br>\nstored is usually not the current one, but some older theory, so the result of<br>\nthis operation is (as you have noticed) completely random. Instead of<br>\nusing store_thm, you could rename the theorems in bin_nth.simps by</p>\n<p>lemmas bin_nth_0 = bin_nth.simps(1)<br>\n   lemmas bin_nth_Suc = bin_nth.simps(2)</p>\n<p>and then add the corresponding legacy ML bindings later by</p>\n<p>ML {*<br>\n   val bin_nth_0 = thm \"bin_nth_0\";<br>\n   val bin_nth_Suc = thm \"bin_nth_Suc\";<br>\n   *}</p>\n<p>Greetings,<br>\nStefan</p>",
        "id": 294048034,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660818128
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nA general note to anybody working with recent development snapshots: with <br>\nthe advent of ML antiquotations, the need for various legacy ML bindings <br>\nhas disappeared altogether.  See the NEWS file within the sources for <br>\ntypical examples.  This works uniformly for any kind of ML text <br>\nincorporated into an Isar theory.  For example:</p>\n<p>apply (tactic \"ALLGOALS (force_tac @{clasimpset}\")</p>\n<p>No need to worry about changing dynamic contexts etc.  Everything is <br>\nstatically scoped (at compile-time) as expected.</p>\n<p>Makarius</p>",
        "id": 294048192,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660818195
    }
]