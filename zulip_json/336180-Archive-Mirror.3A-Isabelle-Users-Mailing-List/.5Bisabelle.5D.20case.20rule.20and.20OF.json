[
    {
        "content": "<p>From: Esseger &lt;<a href=\"mailto:esseger@free.fr\">esseger@free.fr</a>&gt;<br>\nDear all,</p>\n<p>I am trying to set a convenient case rule, to distinguish if, given a <br>\nparameter p ≥ 1 in ennreal, it is equal to 1, or between 1 and infinity, <br>\nor infinite. When it is strictly between 1 and infinity,<br>\nI would also like p to be written as p = ennreal p2, for some real <br>\nnumber p2.</p>\n<p>I would like to use it as:</p>\n<p>lemma<br>\n   assumes \"p ≥ (1::ennreal)\"<br>\n   show foo<br>\nproof (rule my_case_rule[OF <code>p ≥ 1</code>])<br>\n   case one<br>\n   then show ?thesis sorry<br>\nnext<br>\n   case (gr p2)<br>\n   then show ?thesis sorry<br>\nnext<br>\n   case PInf<br>\n   then show ?thesis sorry<br>\nqed</p>\n<p>I tried to define my rule as:</p>\n<p>lemma my_case_rule:<br>\n   assumes \"p ≥ (1::ennreal)\"<br>\n   obtains (gr) p2 where \"p = ennreal p2\" \"p2 &gt; 1\"<br>\n     | (one) \"p = 1\"<br>\n     | (PInf) \"p = ∞\"<br>\nusing assms by (metis (full_types) antisym_conv ennreal_cases <br>\nennreal_le_1 infinity_ennreal_def not_le)</p>\n<p>It doesn't work, as the names of the cases are not respected, replacing <br>\nthem with the names 1, 2, 3 (with which I can write the proofs, for <br>\nsure, but this is much harder to read).</p>\n<p>I tried several modifications of the rule to keep the names, with <br>\nmodifiers such as case_names or consumes, to no avail. I could not <br>\nlocate in the reference manual any hint on the canonical way to write <br>\nthis kind of thing. Any help on the best practice in this situation?</p>\n<p>Best,<br>\nEsseger</p>",
        "id": 294682822,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661177282
    },
    {
        "content": "<p>From: Esseger &lt;<a href=\"mailto:esseger@free.fr\">esseger@free.fr</a>&gt;<br>\nSorry, of course I meant:</p>\n<p>proof (cases rule: my_case_rule[OF <code>p ≥ 1</code>])</p>\n<p>My problem is that the cases names are not respected with this construction.</p>",
        "id": 294682852,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661177288
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear Esseger,</p>\n<p>When you instantiate some premises of a rule with OF, all the case name information gets <br>\nerased (because it is not trivial to determine how they would have to be shifted). <br>\nHowever, you normally do not instantiate premises manually in case distinctions, but <br>\nappropriately declare the first n premises to be unified with the facts chained in using <br>\nthe \"consumes n\" attribute. \"lemma assumes ... obtains ...\" implicitly sets \"consumes\" <br>\nappropriately. Hence, you merely have to chain in the necessary assumptions, as I had <br>\nshown in my example.</p>\n<p>Andreas</p>",
        "id": 294682864,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661177293
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear Esseger,</p>\n<p>Case names as specified for rules are only honored by the proof methods \"cases\", \"induct\" <br>\nand \"coinduct\" (and their derivatives \"induction\" and \"coinduction\"), but not plain <br>\n\"rule\". Your rule \"my_case_rule\" should work if you use \"cases\" (which is the appropriate <br>\nmethod here, because you are doing a case distinction). So, the following should do the job:</p>\n<p>lemma<br>\n    assumes \"p ≥ (1::ennreal)\"<br>\n    show foo<br>\n    using <code>p &gt;= 1</code><br>\nproof (cases rule: my_case_rule)</p>\n<p>Hope this helps,<br>\nAndreas</p>",
        "id": 294682874,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661177296
    },
    {
        "content": "<p>From: Esseger &lt;<a href=\"mailto:esseger@free.fr\">esseger@free.fr</a>&gt;<br>\nThis is perfectly clear, thanks a lot for the explanations.</p>",
        "id": 294682890,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661177302
    }
]