[
    {
        "content": "<p>From: Patrice Chalin &lt;<a href=\"mailto:chalin@encs.concordia.ca\">chalin@encs.concordia.ca</a>&gt;<br>\nOn a related note: how can I get \"Some x\" to display as, say, \"[x]\"?</p>\n<p>Thanks</p>\n<p>Patrice Chalin wrote:</p>",
        "id": 294068473,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660826303
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Mon, 17 Nov 2008, Patrice Chalin wrote:</p>\n<blockquote>\n<p>On a related note: how can I get \"Some x\" to display as, say, \"[x]\"?</p>\n</blockquote>\n<p>This can be done in a simple and robust way by using the modern <br>\nspecification element 'notation' --- which works for term syntax (consts <br>\nor local fixes):</p>\n<p>notation Some  (\"(\\&lt;lfloor&gt;_\\&lt;rfloor&gt;)\")</p>\n<blockquote>\n<blockquote>\n<p>I have the following type abbreviations:</p>\n<p>types<br>\n     ValOrUndef = \"Val option\"<br>\n     \"Val\\&lt;^isub&gt;\\&lt;bottom&gt;\" = ValOrUndef</p>\n<p>(the above actually parses fine).  But then I cannot use<br>\nVal\\&lt;^isub&gt;\\&lt;bottom&gt; in places where a type is expected because a syntax<br>\nerror is reported.  Is there any way I can get ValOrUndef to be printed (in<br>\nPDF versions of the theory) as Val\\&lt;^isub&gt;\\&lt;bottom&gt;?</p>\n</blockquote>\n</blockquote>\n<p>In the above 'types' declaration, the outer syntax name <br>\n\"Val\\&lt;^isub&gt;\\&lt;bottom&gt;\" is not a valid identifier.  Since 'types' belongs <br>\nto an ancient layer of logical primitives, there is no extra check here.  <br>\nThe error is only seen much later when trying to input such types as inner <br>\nsyntax.</p>\n<p>You need to use concrete syntax as mixfix annotation, but there is nothing <br>\nlike 'type_notation' at the moment.  Using the low-level 'syntax' <br>\nprimitive instead, we can associate certain mixfix grammar clauses <br>\ndirectly with the syntactic constant \"option\" (which is still the way type <br>\nconstructors are represented in the syntax tree, until we make type syntax <br>\n``authentic'' -- this is another story).</p>\n<p>So it works at the moment like this:</p>\n<p>syntax<br>\n  option :: \"type =&gt; type\"  (\"_\\&lt;^sub&gt;\\&lt;bottom&gt;\" [1000] 1000)</p>\n<p>Here are some examples:</p>\n<p>term \"Some x\"<br>\n  term \"Some (Some x)\"<br>\n  term \"Some (Some [x])\"</p>\n<p>As usual with the current version of the Isabelle document preparation <br>\nsystem, you only get the alternative notation if you write the sources <br>\nwith that syntax in the first place, or if you <em>print</em> inner logical <br>\nentities explicitly, e.g. via @{term} or @{thm} antiquotations.</p>\n<p>Makarius</p>",
        "id": 294068485,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660826309
    }
]