[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOne more idea for remote diagnosis of problems: on Windows \"anti-virus\"<br>\nsoftware occasionally causes delay the startup of external tools, e.g.<br>\nprovers for Sledgehammer. This may cause odd crashes elsewhere.</p>\n<p>Makarius</p>",
        "id": 294739276,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190916
    },
    {
        "content": "<p>From: Michal Wallace &lt;<a href=\"mailto:michal.wallace@gmail.com\">michal.wallace@gmail.com</a>&gt;<br>\nsince installing rc4, I've yet to have a crash. (though I've also not had<br>\nas much time to play with Isabelle. :/)</p>",
        "id": 294739323,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661190937
    },
    {
        "content": "<p>From: Michal Wallace &lt;<a href=\"mailto:michal.wallace@gmail.com\">michal.wallace@gmail.com</a>&gt;<br>\nWhy isn't it optional?</p>\n<p>Obviously, it can't be optional when building releases, but for day to day<br>\nwork,<br>\ncouldn't the library files be checked against a hash / signature, and the<br>\ncorresponding internal proof objects be loaded \"pre-proven\" from a<br>\nbinary file on startup when the signature hasn't changed?</p>\n<p>(Part of my problem is that Isabelle crashes several times a day for me<br>\non windows, and I have to restart jEdit. I've been told this is not usual,<br>\nbut I don't yet know how to diagnose what's happening.)</p>",
        "id": 294742200,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661191985
    },
    {
        "content": "<p>From: Michal Wallace &lt;<a href=\"mailto:michal.wallace@gmail.com\">michal.wallace@gmail.com</a>&gt;<br>\nHrm. I see now that when I first install/load a new version, there is a<br>\nsubstantial \"build time\" where the libraries are processed.<br>\nWhy does it still take a minute or so to verify the imported libraries when<br>\nopening a file for the first time in jEdit?</p>\n<p>(Sorry, still making my way through the system/implementation manuals....)</p>",
        "id": 294742211,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661191991
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI have written earlier on this thread: \"\"\"abuse the name of the \"jEdit\"<br>\ntext editor for the whole technology stack behind the Isabelle/jEdit<br>\nproduct\"\"\" for a reasons, or actually two reasons:</p>\n<p>(1) jEdit is a text editor project on its own that deserves more<br>\nacknowledgement and attention</p>\n<p>(2) The Isabelle/jEdit/PIDE/Scala/ML technology stack can fail in<br>\ndifferent spots. Step 0 of sorting this out is to develop a sense where<br>\nit fails and who is responsible for it. E.g. on Windows it could be the<br>\nCygwin32 distribution in Isabelle2017, which is Cygwin64 in<br>\nIsabelle2018; or different Java versions managed by Oracle.</p>\n<p>Makarius</p>",
        "id": 294742228,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661191998
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI am unsure which build time you mean exactly.</p>\n<p>Isabelle2017 introduced an exploration of all potential theory imports<br>\nof all reachable sessions, with a penalty of 30s .. 90s (more on Windows).</p>\n<p>This has become slightly faster in Isabelle2018-RC4, and there are<br>\noptions to narrow the visible session space explicitly: see NEWS on<br>\noptions -R -S -A -i for \"isabelle jedit\" (and \"isabelle vscode\").</p>\n<p>You can also use these options to let the system build an auxiliary<br>\nsession image, e.g. when there are many imports from other sessions that<br>\nyou don't edit continuously.</p>\n<p>Beyond that, much better Prover IDE support could mean:</p>\n<p>* Session dependencies are explored on demand (this probably requires<br>\nto restrict theory sources strictly to the session directory).</p>\n<p>* A dynamic session image for the interactive process is maintained<br>\nincrementally, like in the very old days of the Isabelle REPL and Emacs<br>\nmode, when it was all really slow (several minutes for a single one theory).</p>\n<p>Makarius</p>",
        "id": 294742235,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661192004
    }
]