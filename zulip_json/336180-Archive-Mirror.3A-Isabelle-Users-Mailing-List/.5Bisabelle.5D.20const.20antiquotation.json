[
    {
        "content": "<p>From: Lucas Dixon &lt;<a href=\"mailto:ldixon@inf.ed.ac.uk\">ldixon@inf.ed.ac.uk</a>&gt;<br>\nHi,</p>\n<p>I noticed a strange behaviour with the const antiquotation:</p>\n<p>ML {* @{const \"op =\"} *} raises a TYPE exception.</p>\n<p>I was hoping it would give me the HOL constant for equality. Is there <br>\nsome easy rule of thumb about when the const antiquotation works and <br>\nwhen it doesn't?</p>\n<p>(This is in both Isabelle-2009-2 and Isabelle-2009-1)</p>\n<p>cheers,<br>\nlucas</p>",
        "id": 294109484,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660836318
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Lucas,</p>\n<p>when using the const antiquotation, you must instantiate each of the<br>\nconstant's type parameter:</p>\n<p>ML {* @{const \"op =\" (\"'a\")} *}</p>\n<p>gives equality on 'a.</p>\n<p>You could definitely argue that the error message could be more<br>\ninformative.  I must also confess I can't remember what the original<br>\nmotivation for this antiquotation was.</p>\n<p>Hope this helps,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/huBEDEDSRSZnKWkrzBWMsPJG/signature.asc\">signature.asc</a></p>",
        "id": 294109507,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660836325
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nIt seems to be occasionally used to ensure that some @{term foo} in ML is <br>\nactually a term constant, not a variable.  There are other means to achive <br>\nthat within the regular term language: e.g. using qualified names, or the <br>\nCONST marker of inner syntax.  So @{term \"CONST foo\"} would also do the <br>\njob, despite being a bit unwieldy compared to @{const foo}.</p>\n<p>Makarius</p>",
        "id": 294109537,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660836337
    }
]