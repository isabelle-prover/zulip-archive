[
    {
        "content": "<p>From: barzan stefania &lt;<a href=\"mailto:stefania_barzan@yahoo.com\">stefania_barzan@yahoo.com</a>&gt;<br>\nHi all!</p>\n<p>I want to prove something like this: g^x=h^y ==&gt; g^(x*inv y)=h, for g and h integers and also h is a power of g.  x and y are integers mod p, p prime. So i can use the fact that inv y=y^(p-2) mod p.</p>\n<p>If i work with the function power from Power.thy, i need to have natural exponent.  <br>\nI also need to be able to apply an inverse function for the exponent. Is there  any other power function or some inverse for naturals mod p=prime?</p>\n<p>How is it possible to make conversion in Isabelle? For example if i have (x::int), g^(nat x) doesnt give any error...but what type is (nat x)? If is a bool...then i cannot do operations like : g^(nat x)*g^(nat y)=g^(nat (x+y))...is that right?</p>\n<p>Thank you,<br>\nstefania</p>",
        "id": 294068865,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660826466
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;</p>\n<blockquote>\n<p>How is it possible to make conversion in Isabelle?</p>\n</blockquote>\n<p>You apply a conversion function. The basic ones are</p>\n<p>nat :: int =&gt; nat<br>\nint :: nat =&gt; int<br>\nreal :: 'a =&gt; real</p>\n<p>Warning: nat(i) = 0 if i&lt;0.</p>\n<blockquote>\n<p>For example if i have (x::int), g^(nat x) doesnt give any error...but what type is (nat x)?</p>\n</blockquote>\n<p>nat.</p>\n<p>Tobias</p>",
        "id": 294068882,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660826475
    }
]