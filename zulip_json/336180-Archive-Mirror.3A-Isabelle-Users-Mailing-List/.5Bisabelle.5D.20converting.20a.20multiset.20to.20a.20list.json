[
    {
        "content": "<p>From: Revantha Ramanayake &lt;<a href=\"mailto:revantha@rsise.anu.edu.au\">revantha@rsise.anu.edu.au</a>&gt;<br>\nHi, this question concerns multisets as defined in the theory file <br>\nMultisets in the standard distribution.</p>\n<p>It is easy to define the function multiset_of :: \" 'a list =&gt; 'a <br>\nmultiset \" which forms a multiset from a list in the obvious way.</p>\n<p>How do I define a function (of type \" 'a multiset =&gt; 'a list \") that <br>\naccepts a multiset and returns a list (where each<br>\noccurrence in the multiset is an occurrence in the list and vice versa) <br>\n? I realize<br>\nthat there are many possible output lists. I am interested in obtaining <br>\none such list.</p>\n<p>Cheers,</p>\n<p>Revantha.</p>",
        "id": 294053757,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660820716
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nUnless you have very specific and good reasons for doing so, I would <br>\nadvise against this and would recommend to go in the other direction. If <br>\nyou absolutely insist, you can always use \"inv multiset_of\". Good luck.</p>\n<p>Tobias</p>\n<p>Revantha Ramanayake wrote:</p>",
        "id": 294053787,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660820734
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nIndeed, you cannot define functions by recursion over finite multisets. <br>\nSame as for sets. For a general solution of recursion over sets see<br>\n<a href=\"http://www4.informatik.tu-muenchen.de/~nipkow/pubs/tphols05.html\">http://www4.informatik.tu-muenchen.de/~nipkow/pubs/tphols05.html</a><br>\nSimilar combinators for multisets would be welcome.</p>\n<p>Concerning using \"inv\": you can do it, but it will be a bit tedious, <br>\nalthough probably not too bad. But a general recursion combinator would <br>\nbe nicer.</p>\n<p>Tobias</p>\n<p>Revantha Ramanayake schrieb:</p>",
        "id": 294053910,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660820781
    },
    {
        "content": "<p>From: Revantha Ramanayake &lt;<a href=\"mailto:revantha@rsise.anu.edu.au\">revantha@rsise.anu.edu.au</a>&gt;<br>\nWell, my need is the following:</p>\n<p>suppose I have a function \"f :: form =&gt; nat \". I want to define a <br>\nfunction \"g :: form multiset =&gt; nat\" like this:</p>\n<p>g {# #} = 0<br>\ng ({# a #} + M) = f( {# a #}) + g(M).</p>\n<p>Basically I want to 'strip away' the multiset, element by element. Of <br>\ncourse I gather that the above definition<br>\nwould not work because a multiset is not defined in terms of <br>\nconstructors i.e. it doesn't have the nice structure.</p>\n<p>(this is why I wanted to first convert it to a list. for then I could <br>\ndefine the function g above, replacing {# #} with [] etc. )</p>\n<p>Using \"inv multiset_of\" I suppose things would look something like this:</p>\n<p>Define<br>\nf :: form =&gt; nat<br>\ng' :: form list =&gt; nat<br>\ng :: form multiset =&gt; nat</p>\n<p>g' [] = 0<br>\ng' (x#ys) = f(x)+g'(ys)</p>\n<p>and g(M) = g'(inv multiset_of M)</p>\n<p>This seems to do the trick. Is this what you had in mind? and why do you <br>\nadvise against it?</p>\n<p>cheers,</p>\n<p>revantha.</p>\n<p>Tobias Nipkow wrote:</p>",
        "id": 294053982,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660820819
    },
    {
        "content": "<p>From: Rafal Kolanski &lt;<a href=\"mailto:rafalk@cse.unsw.edu.au\">rafalk@cse.unsw.edu.au</a>&gt;<br>\nIncidentally, I've defined an inductive relation for folding (inspired <br>\nby Finite_Set.thy) and am in the process of proving some of the relevant <br>\nlemmas that make it a function. The multisets defined in isabelle are <br>\nfinite already, so the \"finite S\" assumption can go away.</p>\n<p>Is there anyone else doing what I'm doing? It would be a shame to <br>\nduplicate work unnecessarily.</p>\n<p>Rafal Kolanski.</p>\n<p>Tobias Nipkow wrote:</p>",
        "id": 294053997,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660820826
    }
]