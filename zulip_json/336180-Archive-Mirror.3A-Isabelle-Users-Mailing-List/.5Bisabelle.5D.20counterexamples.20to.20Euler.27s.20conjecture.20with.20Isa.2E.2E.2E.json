[
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nDear Angeliki,</p>\n<p>The original conjecture looks difficult to refute with our tools, unless you are <br>\nvery lucky. The second one, where just A is left, is easy:</p>\n<p>quickcheck[random,size=100,iterations=1000]</p>\n<p>That way quickcheck will try 1000 random values up to 100. Of course you need to <br>\nhave some idea in what range to search and in general you have to be lucky <br>\n(\"random\").</p>\n<p>Tobias<br>\n<a href=\"/user_uploads/14278/8hWWQE0G2Ek1yPeJjXsRrkEm/smime.p7s\">smime.p7s</a></p>",
        "id": 294726113,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661186463
    },
    {
        "content": "<p>From: \"Dr A. Koutsoukou-Argyraki\" &lt;<a href=\"mailto:ak2110@cam.ac.uk\">ak2110@cam.ac.uk</a>&gt;<br>\nDear Tobias,</p>\n<p>Thanks a lot for your answer. This does work and by increasing the size <br>\nvalue<br>\nnitpick is indeed successful in finding the rest of the integers <br>\nindividually as well.<br>\nBut I suppose there is no way to perform a search like<br>\nthis for more than 1 integer simultaneously ?</p>\n<p>Thank you again,<br>\nBest,<br>\nAngeliki</p>",
        "id": 294726133,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661186468
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nJust for fun I tried to find the counterexample by an explicit search:</p>\n<p>function find where<br>\n\"find p (n::int) (t::int) (i::int) =<br>\n  (let ip = i^p in<br>\n   if ip &gt; t then None else<br>\n   if ip = t then if n = 0 then Some [i] else None<br>\n   else if n = 0 then find p n t (i+1)<br>\n        else case find p (n-1) (t-ip) 1 of<br>\n               Some is ⇒ Some(i#is) |<br>\n               None ⇒ find p n t (i+1))\"<br>\nby pat_completeness auto<br>\ntermination sorry (* couldn't be bothered *)</p>\n<p>\"find p n t i\" searches for (n+1) pth powers that sum up to t (starting with i).</p>\n<p>If you know the target value 144^5 the decomposition is found in 2 minutes:</p>\n<p>value \"find 5 3 ((144::int)^5) 1\"</p>\n<p>If you try the target values 1^5, 2^5, ... it takes 4 hours until 144^5 is found.</p>\n<p>I wonder how long it took them on their CDC 6600.</p>\n<p>Tobias<br>\n<a href=\"/user_uploads/14278/h2scnZvbGEeUmFQrwvTbfLju/smime.p7s\">smime.p7s</a></p>",
        "id": 294726172,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661186481
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nOn 27/02/2018 18:38, Dr A. Koutsoukou-Argyraki wrote:</p>\n<blockquote>\n<p>Dear Tobias,</p>\n<p>Thanks a lot for your answer. This does work and by increasing the size value<br>\nnitpick is indeed successful in finding the rest of the integers individually as <br>\nwell.<br>\nBut I suppose there is no way to perform a search like<br>\nthis for more than 1 integer simultaneously ?</p>\n</blockquote>\n<p>In principle it does not matter. For this example it still worked fine for 2 <br>\nintegers but the search space became too large when leaving 3 integers open.</p>\n<p>Tobias</p>\n<blockquote>\n<p>Thank you again,<br>\nBest,<br>\nAngeliki</p>\n<p>On 2018-02-27 16:19, Tobias Nipkow wrote:</p>\n<blockquote>\n<p>Dear Angeliki,</p>\n<p>The original conjecture looks difficult to refute with our tools,<br>\nunless you are very lucky. The second one, where just A is left, is<br>\neasy:</p>\n<p>quickcheck[random,size=100,iterations=1000]</p>\n<p>That way quickcheck will try 1000 random values up to 100. Of course<br>\nyou need to have some idea in what range to search and in general you<br>\nhave to be lucky (\"random\").</p>\n<p>Tobias<br>\n</p>\n</blockquote>\n<p>On 27/02/2018 16:49, Dr A. Koutsoukou-Argyraki wrote:</p>\n<blockquote>\n<blockquote>\n<p>Dear Isabelle users,</p>\n<p>motivated by the following mini-paper from the 1960's<br>\nwhere a counterexample to Euler's conjecture was found by<br>\na direct search using the supercomputer CDC 6600<br>\n<a href=\"https://io9.gizmodo.com/how-two-sentences-overturned-200-years-of-mathematical-1697483698\">https://io9.gizmodo.com/how-two-sentences-overturned-200-years-of-mathematical-1697483698</a> <br>\nI tested if Isabelle can do something similar using nitpick/quickcheck.</p>\n<p>It turns out that for the specific case for n=5 (for which we already do know <br>\nthat there exists a counterexample with 4 summands) after I use nitpick <br>\n/quickcheck for</p>\n<p>lemma euler5 :</p>\n<p>shows<br>\n\"∄ (A ::int) (B ::int) (C ::int) (D ::int) (E ::int). ( (A&gt;0) ∧ (B&gt;0) ∧ (C&gt;0) <br>\n∧ ( D&gt;0) ∧ (E&gt;0) ∧ ( A^5 + B^5+ C^5 +D^5 = E^5))  \"</p>\n<p>I immediately  get the answer:<br>\n\"nitpick/quickcheck found no counterexamples\".</p>\n<p>(Note that without setting :<br>\n(A&gt;0) ∧ (B&gt;0) ∧ (C&gt;0) ∧ ( D&gt;0) ∧ (E&gt;0)<br>\nnitpick gives me the counterexample (-1, -1, 1, 1, 0)  while quickcheck<br>\ngives the counteraxample (0,0,0,0,0)<br>\nbut of course Euler's conjecture is for positive integers only.)</p>\n<p>Actually, even for the following, nitpick and quickcheck give up without finding<br>\nthe counterexample (which should be A=27)</p>\n<p>lemma euler5 :<br>\n   shows<br>\n\"∄ (A ::int).<br>\n  (  (A &gt;26) ∧(A&lt;28) ∧( A^5 + 84^5+ 110^5 +133^5 = 144^5))  \".</p>\n<p>I also tried nitpick quickcheck and sledgehammer after doing the following,<br>\nwithout getting the desired counterexample A=27  (value correctly gives \"true\"):</p>\n<p>value\"( (27::int)^5 + 84^5+ 110^5 +133^5 = 144^5)  \"</p>\n<p>lemma euler5 :</p>\n<p>shows<br>\n\"∄ (A ::int).<br>\n  (  (A &gt;26) ∧(A&lt;28) ∧( A^5 + 84^5+ 110^5 +133^5 = 144^5))  \"</p>\n<p>Any ideas? Could it be somehow possible to make Isabelle's automation find <br>\nsuch counterexamples?</p>\n<p>Thank you,<br>\nBest,</p>\n<p>Angeliki Koutsoukou-Argyraki<br>\n</p>\n</blockquote>\n</blockquote>\n<p><a href=\"/user_uploads/14278/m7OClG6JWDJxWo31F357pERQ/smime.p7s\">smime.p7s</a></p>\n</blockquote>",
        "id": 294726194,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661186487
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nI was also puzzled by this and decided to try a much simpler example: Pythagorean triples. It doesn't take much search to find one of those, but quickcheck (with its default parameters) doesn't manage to find one. Amazingly, nitpick does, although as I gather it doesn't use arithmetic at all but reduces the conjecture to a SAT problem.</p>\n<p>lemma \"∄A B C::int. 0 &lt; A ∧ 0 &lt; B ∧ 0 &lt; C ∧ A<em>A + B</em>B = C*C\"</p>\n<p>Nitpick found a counterexample:</p>\n<p>Skolem constants:<br>\n    A = 4<br>\n    B = 3<br>\n    C = 5</p>\n<p>Larry</p>",
        "id": 294726352,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661186529
    }
]