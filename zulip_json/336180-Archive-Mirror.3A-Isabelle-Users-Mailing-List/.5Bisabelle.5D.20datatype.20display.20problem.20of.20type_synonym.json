[
    {
        "content": "<p>From: chunhan wu &lt;<a href=\"mailto:wuchunhan@gmail.com\">wuchunhan@gmail.com</a>&gt;<br>\nHi,</p>\n<p>I tried the following:</p>\n<p>type_synonym my_int = int</p>\n<p>text {* @{typ my_int} *}</p>\n<p>datatype foo = A | B my_int</p>\n<p>text {* @{datatype foo} *}</p>\n<p>The \"text\" works and prints out \"my_int\",<br>\nbut the \"datatype\" prints out \"int\"<br>\nwhich should be \"my_int\".</p>\n<p>Is there an attribute for datatype antiquotation<br>\nto solve this problem?</p>\n<p>Regards,</p>\n<p>Chunhan</p>",
        "id": 294165423,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854591
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nType synonyms are expanded during parsing. They beautify the input but cannot<br>\noccur in the output.</p>\n<p>Tobias</p>",
        "id": 294165458,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854603
    },
    {
        "content": "<p>From: Ramana Kumar &lt;<a href=\"mailto:rk436@cam.ac.uk\">rk436@cam.ac.uk</a>&gt;<br>\nOn Tue, Jul 17, 2012 at 8:22 AM, Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt; wrote:</p>\n<blockquote>\n<p>Type synonyms are expanded during parsing. They beautify the input but cannot<br>\noccur in the output.</p>\n</blockquote>\n<p>In HOL4, the printer attempts to use user-defined type synonyms when<br>\npossible, helping increase consistency between input and output.<br>\nSometimes, of course, if you have many synonyms for the same type, you<br>\nget the wrong one printed.<br>\nWas it a principled decision not to print synonyms in Isabelle?</p>\n<blockquote>\n<p>Tobias</p>\n<p>Am 16/07/2012 12:25, schrieb chunhan wu:</p>\n<blockquote>\n<p>Hi,</p>\n<p>I tried the following:</p>\n<p>type_synonym my_int = int</p>\n<p>text {* @{typ my_int} *}</p>\n<p>datatype foo = A | B my_int</p>\n<p>text {* @{datatype foo} *}</p>\n<p>The \"text\" works and prints out \"my_int\",<br>\nbut the \"datatype\" prints out \"int\"<br>\nwhich should be \"my_int\".</p>\n<p>Is there an attribute for datatype antiquotation<br>\nto solve this problem?</p>\n<p>Regards,</p>\n<p>Chunhan<br>\n</p>\n</blockquote>\n</blockquote>",
        "id": 294165514,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854615
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nAm 17/07/2012 09:29, schrieb Ramana Kumar:</p>\n<blockquote>\n<p>On Tue, Jul 17, 2012 at 8:22 AM, Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt; wrote:</p>\n<blockquote>\n<p>Type synonyms are expanded during parsing. They beautify the input but cannot<br>\noccur in the output.</p>\n</blockquote>\n<p>In HOL4, the printer attempts to use user-defined type synonyms when<br>\npossible, helping increase consistency between input and output.<br>\nSometimes, of course, if you have many synonyms for the same type, you<br>\nget the wrong one printed.<br>\nWas it a principled decision not to print synonyms in Isabelle?</p>\n</blockquote>\n<p>Yes.</p>\n<p>Tobias</p>\n<blockquote>\n<blockquote>\n<p>Tobias<br>\n</p>\n</blockquote>\n<p>Am 16/07/2012 12:25, schrieb chunhan wu:</p>\n<blockquote>\n<blockquote>\n<p>Hi,</p>\n<p>I tried the following:</p>\n<p>type_synonym my_int = int</p>\n<p>text {* @{typ my_int} *}</p>\n<p>datatype foo = A | B my_int</p>\n<p>text {* @{datatype foo} *}</p>\n<p>The \"text\" works and prints out \"my_int\",<br>\nbut the \"datatype\" prints out \"int\"<br>\nwhich should be \"my_int\".</p>\n<p>Is there an attribute for datatype antiquotation<br>\nto solve this problem?</p>\n<p>Regards,</p>\n<p>Chunhan<br>\n</p>\n</blockquote>\n</blockquote>\n</blockquote>",
        "id": 294165524,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854621
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe question of reverting type synonyms pops up every couple of years, and <br>\nI have reconsidered it myself many times already.  There have been <br>\ncounter-indications both from users getting confused about arbitrary <br>\ntype-subexpressions being subject to contraction, and technical problems <br>\nin the interaction with other syntax mechanisms (such as translations that <br>\nmay depend on type information).</p>\n<p>So Isabelle does not support that, and probably never will support it.</p>\n<p>Nonetheless, some libraries try to simulate it via 'translations' for the <br>\nASTs stemming from types, but this causes other surprises (as I've just <br>\nseen again in the output of 'print_theory' yesterday).</p>\n<p>Makarius</p>",
        "id": 294165879,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854683
    }
]