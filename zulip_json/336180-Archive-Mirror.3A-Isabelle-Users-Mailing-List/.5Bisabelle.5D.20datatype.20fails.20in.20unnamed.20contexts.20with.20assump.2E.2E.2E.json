[
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi all,</p>\n<p>the dropout seems to happen in a case declaration in induct.ML.<br>\nGlimpsing at the code there is some low-level analysis of the given<br>\nrules, e.g.:</p>\n<p>fun left_var_prem thm = mk_var (hd (vars_of (hd (Thm.prems_of thm))))<br>\nhandle List.Empty =&gt;<br>\n  raise THM (\"No variables in major premise of rule\", 0, [thm]);</p>\n<p>My naive impression is that this is just not localized, but I have not<br>\nspend much time on it.</p>\n<p>Cheers,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/10k5HeIxdBl1cFrHqToYlZb0/Broken_Typedef.thy\">Broken_Typedef.thy</a><br>\n<a href=\"/user_uploads/14278/yLoWSQQBt2QmU4fjY0NmALzS/signature.asc\">signature.asc</a></p>",
        "id": 294658789,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661169137
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear BNF developers,</p>\n<p>I noticed that the datatype does not work inside unnamed contexts which make assumptions. <br>\nHere's a minimal example:</p>\n<p>context assumes \"True\" begin<br>\n   datatype f = F<br>\n   end</p>\n<p>The error message varies with the form of the assumptions. In the above example, it is</p>\n<p>exception THM 0 raised (line 111 of \"~~/src/Tools/induct.ML\"):<br>\n   No variables in major premise of rule<br>\n   ⟦True; ⋀y. ⟦?x = ??.Scratch.f.Abs_f_IITN_f y; y ∈ UNIV⟧ ⟹ ?P⟧ ⟹ ?P</p>\n<p>Is this not supported at all (I have not found it listed in the limitations section of the <br>\ndatatype tutorial) or just an implementation insufficiency?</p>\n<p>Some background on my usecase: I want to define a datatype which I just need to reduce a <br>\ncomplex problem to a simpler one (a typical \"without loss of generality\" step), so I'd <br>\nwant to hide the datatype using \"private\" (once this will work properly). However, the <br>\ntheorem already lives in an unnamed context with assumptions, so I cannot easily move the <br>\ndatatype out of the context with assumptions.</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 294659046,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661169241
    },
    {
        "content": "<p>From: Dmitriy Traytel &lt;<a href=\"mailto:traytel@inf.ethz.ch\">traytel@inf.ethz.ch</a>&gt;<br>\nHi Andreas,</p>\n<p>note that this is a limitation of typedef already:</p>\n<p>context assumes \"True\" begin<br>\n typedef f = \"UNIV :: nat set\" by auto<br>\n end</p>\n<p>Dmitriy</p>",
        "id": 294659449,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661169376
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Dmitriy,</p>\n<p>Thanks for the quick reply. Now, I obviously wonder whether this is a fundamental <br>\nlimitation of typedef...</p>\n<p>Andreas</p>",
        "id": 294659861,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661169511
    }
]