[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear BNF developers,</p>\n<p>I just noticed that for the case combinator, the BNF package forgets to prove and register <br>\nthe parametricity theorem as [transfer_rule] for datatypes without type variables. It only <br>\nproves and registers the one for the recursor. As the case combinator is also polymorphic, <br>\nit would be great if I had not state and prove the theorem manually.</p>\n<p>Here's a minimal example:</p>\n<p>datatype test = A nat | B bool<br>\nthm test.case_transfer (* does not exist *)</p>\n<p>datatype 'a test2 = A nat | B bool<br>\nthm test2.case_transfer (* does exist *)</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 294647374,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661164659
    }
]