[
    {
        "content": "<p>From: Jeremy Dawson &lt;<a href=\"mailto:Jeremy.Dawson@rsise.anu.edu.au\">Jeremy.Dawson@rsise.anu.edu.au</a>&gt;<br>\nRandy Pollack wrote:</p>\n<blockquote>\n<p>Even though I have \"show sorts\" on, [] is not shown with a type, but</p>\n</blockquote>\n<p>I've also noticed this - presumably the thinking is, that if a user has <br>\ndeclared a constant, he/she knows what type it is.</p>\n<p>But often I've found it would be helpful, when a polymorphic constant is <br>\nused monomorphically (or with a less general polymorphic type) in a <br>\ntheorem, it would be nice to be able to see the type.</p>\n<p>Apart from printing out the term (which can give rather long output) is <br>\nthere any way of doing this?</p>\n<p>Jeremy</p>",
        "id": 294048220,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660818213
    },
    {
        "content": "<p>From: \"Dr. Brendan Patrick Mahony\" &lt;<a href=\"mailto:brendan.mahony@dsto.defence.gov.au\">brendan.mahony@dsto.defence.gov.au</a>&gt;<br>\nThis is indeed a problem, including the need to type cast constants  <br>\nfrequently in local goals to ensuring<br>\nmatching to global goals.</p>\n<p>A useful flag is the show constants flag, this at least gives you a  <br>\nlist of the constants in the goal state and<br>\ntheir types, but not of which instance is which in the actual goals.</p>\n<p>Specialised syntax for type casting constants is useful. eg</p>\n<p>syntax<br>\n   \"_empty\" :: \"type \\&lt;fun&gt; logic\"  (\"{}[_]\")</p>\n<p>translations<br>\n   \"{}[T]\" =&gt; \"{}::T set\"</p>\n<p>This sort of syntax helps clarify the instantiated type parameters  <br>\nand saves clutter.<br>\nA suitable typed print translation will allow this operator to appear  <br>\nin the goal state display too.<br>\nThis is, of course, a lot of effort!<br>\nSome automatic support for declaring such instantiation syntax for  <br>\nevery generic constant would be useful.</p>\n<p>Brendan</p>\n<hr>\n<p>Dr Brendan Mahony<br>\nC3I Division                                    ph +61 8 8259 6046<br>\nDefence Science and Technology Organisation     fx +61 8 8259 5589<br>\nEdinburgh, South Australia      <a href=\"mailto:Brendan.Mahony@dsto.defence.gov.au\">Brendan.Mahony@dsto.defence.gov.au</a></p>\n<p>Important: This document remains the property of the Australian<br>\nGovernment Department of Defence and is subject to the jurisdiction<br>\nof the Crimes Act section 70. If you have received this document in<br>\nerror, you are requested to contact the sender and delete the document.</p>\n<p>IMPORTANT: This email remains the property of the Australian Defence Organisation and is subject to the jurisdiction of section 70 of the CRIMES ACT 1914.  If you have received this email in error, you are requested to contact the sender and delete the email.</p>",
        "id": 294048234,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660818224
    }
]