[
    {
        "content": "<p>From: Alexander Krauss &lt;<a href=\"mailto:krauss@in.tum.de\">krauss@in.tum.de</a>&gt;</p>\n<blockquote>\n<p>I have some more issues with the Function package, this time with the<br>\ndomintros option.<br>\n[...]</p>\n</blockquote>\n<blockquote>\n<p>I’m not sure if this is a bug in in the Function package, or an<br>\nunavoidable limitation.</p>\n</blockquote>\n<p>It is an unavoidable limitation of the specific implementation, i.e., a <br>\nbug. I know it for a long time, and it is (again) caused by some <br>\nuncontrolled forward simplification (which is from the devil, but I <br>\ndidn't know how bad it was when I wrote the code). Maybe it is time for <br>\na new attempt of improving this... I'll have a look.</p>\n<p>Alex</p>",
        "id": 294116378,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838435
    },
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:mail@joachim-breitner.de\">mail@joachim-breitner.de</a>&gt;<br>\nHi,</p>\n<p>I have some more issues with the Function package, this time with the<br>\ndomintros option. Consider this (not very useful) example:</p>\n<hr>\n<p>function (sequential,domintros) f where<br>\n   \"f v b = (if v = 1 then f 0 b else f (Suc v) b)\"<br>\napply pat_completeness<br>\napply auto<br>\ndone</p>\n<hr>\n<p>The generated domintros rule is too weak:</p>\n<hr>\n<p>thm f.domintros(1)[no_vars]<br>\n⟦f_dom (0, b); v ≠ Suc 0 ⟹ f_dom (Suc v, b)⟧ ⟹ f_dom (v, b)</p>\n<hr>\n<p>Note that the f_rel intros are correct:<br>\nthm f_rel.intros[no_vars]</p>\n<hr>\n<p>v = 1 ⟹ f_rel (0, b) (v, b)<br>\nv ≠ 1 ⟹ f_rel (Suc v, b) (v, b)</p>\n<hr>\n<p>I can work around the issue by wrapping the condition of the if<br>\nstatement in the identity function and removing it temporarily from the<br>\nsimpset:</p>\n<hr>\n<p>declare id_apply[simp del]<br>\nfunction (sequential,domintros) f' where<br>\n   \"f' v b = (if id (v = 0) then f' 0 b else f' (Suc v) b)\"<br>\napply pat_completeness<br>\napply auto<br>\ndone<br>\ndeclare id_apply[simp]</p>\n<hr>\n<p>yields</p>\n<hr>\n<p>thm f'.domintros(1)[no_vars]<br>\n⟦id (v = 0) ⟹ f'_dom (0, b); ¬ id (v = 0) ⟹ f'_dom (Suc v, b)⟧<br>\n⟹ f'_dom (v, b)</p>\n<hr>\n<p>A probably related problem is that</p>\n<hr>\n<p>function (sequential,domintros) f where<br>\n   \"f l = (case l of [a,b,0] ⇒ f [a+b])\"<br>\napply pat_completeness<br>\napply auto<br>\ndone</p>\n<hr>\n<p>gives the domintro rule</p>\n<hr>\n<p>thm f.domintros(1)[no_vars]<br>\n(⋀a aa. f_dom [a + aa]) ⟹ f_dom l  [?]</p>\n<hr>\n<p>where I am missing the connection between l and a,aa.</p>\n<p>I’m not sure if this is a bug in in the Function package, or an<br>\nunavoidable limitation.</p>\n<p>Thanks,<br>\nJoachim<br>\n<a href=\"/user_uploads/14278/2XTdqzHfv2uVf0uTXYQ-71IM/signature.asc\">signature.asc</a></p>",
        "id": 294116470,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838460
    }
]