[
    {
        "content": "<p>From: Jose Manuel Rodriguez Caballero &lt;<a href=\"mailto:jose.manuel.rodriguez.caballero@ut.ee\">jose.manuel.rodriguez.caballero@ut.ee</a>&gt;<br>\nHi,<br>\n  I noticed the following minor problem in the proof of  lemma \"blinfun_of_matrix_works\" (HOL/Analysis/Bounded_Linear_Function.thy):</p>\n<p>also have \"… = (∑i∈Basis. (x ∙ i * (f i ∙ b)))\"<br>\n    using b by (simp add: <a href=\"http://sum.delta\">sum.delta</a>)</p>\n<p>It is enough to write</p>\n<p>also have \"… = (∑i∈Basis. (x ∙ i * (f i ∙ b)))\"<br>\n    using b by simp</p>\n<p>Kind regards,<br>\nJosé M.</p>",
        "id": 294824442,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243749
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThere have been a lot of changes to HOL-Analysis by multiple people, but no<br>\ntangible NEWS entries so far. It is still time to improve the situation (by<br>\nsending me changes).</p>\n<p>Also note that release candidates become obsolete rather quickly: presently we<br>\nare are Isabelle2020-RC3. It does not make sense to continue testing older ones.</p>\n<p>Makarius</p>",
        "id": 294824485,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243762
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nThanks, I have removed the simp rule but I suspect it will not go into the <br>\nrelease as it is not significant enough.</p>\n<p>Tobiass<br>\n<a href=\"/user_uploads/14278/cJviSHSfD1k6svV-d6Nqin3F/smime.p7s\">smime.p7s</a></p>",
        "id": 294824528,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243774
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nI suspect there are probably many hundreds of instances of such things.<br>\nIt does not really cause any problems, so I personally don't think it's<br>\nworth to go through these on the mailing list or even to report them in<br>\nthe first place.</p>\n<p>(If anyone disagrees, feel free to correct me, of course)</p>\n<p>Cheers,</p>\n<p>Manuel</p>",
        "id": 294824538,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243780
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nI have on more than one occasion been confused by such superfluous rules when I <br>\ntried to understand a proof, hence I do think it is worth removing them.</p>\n<p>But I agree that because there will be many of them, one should not post it on <br>\nthe mainling list if it can be avoided: eg collect them first (if one is <br>\nactively weeding them out), send them to an known maintainer or the author of <br>\nthe theory.</p>\n<p>Tobias<br>\n<a href=\"/user_uploads/14278/rghhl7dxc1bbY5MJBxwGruWU/smime.p7s\">smime.p7s</a></p>",
        "id": 294824546,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243786
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nWell, a maintainer could also simply go through the list and look at all<br>\nthe warnings. Most of them will probably either be something like this<br>\nor something like \"rule xyz was already declared as an intro rule\" when<br>\nsomebody does \"auto intro!: continuous_intros\" (which is unavoidable).</p>\n<p>Manuel</p>",
        "id": 294824557,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243792
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nAs a general rule, it’s preferable for proofs to be as simple as possible: not short in characters, but simple in logical structure and dependencies. Suggestions of simpler and clearer proofs are always welcome. Generalisations (removing unnecessary assumptions or relaxing type class constraints) are especially valuable.</p>\n<p>Larry</p>",
        "id": 294824565,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243798
    },
    {
        "content": "<p>From: Tjark Weber &lt;<a href=\"mailto:tjark.weber@it.uu.se\">tjark.weber@it.uu.se</a>&gt;<br>\nIt could be nice to have tool support to address this (and similar<br>\nissues) systematically. A student project, perhaps?</p>\n<p>Best,<br>\nTjark</p>\n<p>När du har kontakt med oss på Uppsala universitet med e-post så innebär det att vi behandlar dina personuppgifter. För att läsa mer om hur vi gör det kan du läsa här: <a href=\"http://www.uu.se/om-uu/dataskydd-personuppgifter/\">http://www.uu.se/om-uu/dataskydd-personuppgifter/</a></p>\n<p>E-mailing Uppsala University means that we will process your personal data. For more information on how this is performed, please read here: <a href=\"http://www.uu.se/en/about-uu/data-protection-policy\">http://www.uu.se/en/about-uu/data-protection-policy</a></p>",
        "id": 294824573,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243804
    },
    {
        "content": "<p>From: \"Klein, Gerwin (Data61, Kensington NSW)\" &lt;<a href=\"mailto:Gerwin.Klein@data61.csiro.au\">Gerwin.Klein@data61.csiro.au</a>&gt;</p>\n<blockquote>\n<p>On 30 Mar 2020, at 17:46, Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt; wrote:<br>\n[..]<br>\nor something like \"rule xyz was already declared as an intro rule\" when<br>\nsomebody does \"auto intro!: continuous_intros\" (which is unavoidable).</p>\n</blockquote>\n<p>Speaking of which: this is a warning we though about removing a while ago. Should we? I can’t remember a case where I have found it useful. Or we could make it configurable whether there is a warning.</p>\n<p>Cheers,<br>\nGerwin</p>",
        "id": 294824588,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243813
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nOn 30/03/2020 11:56, Klein, Gerwin (Data61, Kensington NSW) wrote:</p>\n<blockquote>\n<blockquote>\n<p>On 30 Mar 2020, at 17:46, Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt; wrote:<br>\n[..]<br>\nor something like \"rule xyz was already declared as an intro rule\" when<br>\nsomebody does \"auto intro!: continuous_intros\" (which is unavoidable).</p>\n</blockquote>\n<p>Speaking of which: this is a warning we though about removing a while ago. Should we? I can’t remember a case where I have found it useful. Or we could make it configurable whether there is a warning.</p>\n</blockquote>\n<p>I agree, that one could go.</p>\n<p>Tobias</p>\n<blockquote>\n<p>Cheers,<br>\nGerwin</p>\n<p><a href=\"/user_uploads/14278/rQFgWekA8CVVYG9NpTZIBlUw/smime.p7s\">smime.p7s</a></p>\n</blockquote>",
        "id": 294824596,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243817
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nI would leave this message but only for situations where the insertion is absolutely redundant. It is useful in those situations.<br>\nLarry</p>",
        "id": 294824616,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243829
    },
    {
        "content": "<p>From: \"Klein, Gerwin (Data61, Kensington NSW)\" &lt;<a href=\"mailto:Gerwin.Klein@data61.csiro.au\">Gerwin.Klein@data61.csiro.au</a>&gt;<br>\nSo when you add an intro! rule again as an intro! rule, etc? Yes, that would make sense.</p>\n<p>Cheers,<br>\nGerwin</p>",
        "id": 294824636,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243835
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nIt's not quite that simple.</p>\n<p>I think there are e.g. some \"intro\" rules that are also in<br>\n\"continuous_intros\". So if I do \"apply (auto intro: continuous_intros)\",<br>\nI get a warning.</p>\n<p>You might suggest removing that rule from \"continuous_intros\", but that<br>\nwould then mean that doing something like \"apply (intro<br>\ncontinuous_intros)\" or \"apply (rule continuous_intros | simp)+\" (which I<br>\noccasionally do with derivative_eq_intros, don't judge me) would not<br>\nwork as intended anymore.</p>\n<p>I guess for continuous_intros/derivative_intros etc. the general idea is<br>\nthat all rules should be safe introduction rules anyway, so doing<br>\n\"intro\" instead of \"intro!\" doesn't make much sense, but for other<br>\ntheorem collections that might not be case.</p>\n<p>On a related note: Perhaps we should make a little \"derivative\" method<br>\nbased on \"derivative_eq_intros\", similarly to what I sketched above.</p>\n<p>Cheers,</p>\n<p>Manuel</p>",
        "id": 294824642,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243841
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nGood idea. Currently, tricks like</p>\n<p>apply (intro derivative_eq_intros | simp)+</p>\n<p>are folklore and not everybody knows about them.</p>\n<p>Larry</p>",
        "id": 294824650,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243847
    },
    {
        "content": "<p>From: Dominique Unruh &lt;<a href=\"mailto:unruh@ut.ee\">unruh@ut.ee</a>&gt;<br>\nHi,</p>\n<p>I think the warning should only show if removing the simpl/auto argument <br>\ndoes not change the actions of the method.</p>\n<p>That is:</p>\n<ul>\n<li>\n<p>for \"simp: X\" \"intro: X\" \"intro!: X\", there should be a warning if <br>\n<em>all</em> the theorems in X already are already in the corresponding <br>\ncategory. (In particular, lemmas X = A B declare A[simp] ... by (simp <br>\nadd: X) should not give a warning. Also declare A[intro] ... by (auto <br>\nintro!: A) should not give a warning, but by (auto intro: A) should.</p>\n</li>\n<li>\n<p>for \"simp del: X\" and friends, there should be a warning if <em>none</em> of <br>\nthe theorems in X are in the corresponding category.</p>\n</li>\n</ul>\n<p>If I am not mistaken, this will mean that you never get a warning that <br>\nsomething is redundant, and then if you remove it, things stop working.</p>\n<p>Best wishes,<br>\nDominique.</p>",
        "id": 294824664,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243853
    },
    {
        "content": "<p>From: \"Klein, Gerwin (Data61, Kensington NSW)\" &lt;<a href=\"mailto:Gerwin.Klein@data61.csiro.au\">Gerwin.Klein@data61.csiro.au</a>&gt;<br>\nI agree, that would be nice. We do have the intro issue Manuel mentions already with simp collections, with similar problems.</p>\n<p>Not sure if this check would be expensive to implement for larger sets of rule. Probably not more than the current check, though. </p>\n<p>Cheers,<br>\nGerwin</p>",
        "id": 294824717,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243874
    }
]