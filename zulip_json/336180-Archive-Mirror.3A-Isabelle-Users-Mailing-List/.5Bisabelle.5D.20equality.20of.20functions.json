[
    {
        "content": "<p>From: \"Roger H.\" &lt;<a href=\"mailto:s57076@hotmail.com\">s57076@hotmail.com</a>&gt;<br>\nHi, </p>\n<p>the lemma \"[1 ↦ [4], 2 ↦ [5]] =  [2 ↦ [5], 1 ↦ [4]]\" can be proven by auto,</p>\n<p>but is there any automatic proof, meaning some existing lemma, which i can add to the simplifier,<br>\nso that such identities that occur in the middle of proofs are solved automatically?</p>\n<p>Thank you!</p>",
        "id": 294266891,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660915822
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nHallo,</p>\n<p>in this case: apply (simp add: fun_upd_twist)</p>\n<p>Whether this works for more complicated statements of this kind, I<br>\ncannot say. In particular, I suspect that this lemma could lead the<br>\nsimplifier to loop in some instances – I don't know whether the<br>\nsimplifier recognises that this lemma represents a kind of commutativity<br>\nand treats it accordingly automatically.</p>\n<p>Also, I recommend you use find_theorems to find lemmas of this kind, or<br>\nsledgehammer if you don't want to search manually.</p>\n<p>Cheers,<br>\nManuel</p>",
        "id": 294266900,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660915827
    },
    {
        "content": "<p>From: IG BI &lt;<a href=\"mailto:igbi@gmx.com\">igbi@gmx.com</a>&gt;<br>\nHi,</p>\n<p>Your question is vague enough that I have a lot of freedom here to be <br>\nright, rather than wrong. I take \"solved\" to mean that either the <br>\nformula resolves to <code>True</code>, or that the left-hand side of <code>=</code> will be <br>\nreplaced by the right-hand side.</p>\n<p>If, with auto, you can prove the formula you stated as a lemma, then <br>\nanywhere that the formula is a proof goal, the command <code>apply(auto)</code> <br>\nwill prove it.</p>\n<p>To find the specifics of how <code>auto</code> is proving your formula, you would <br>\nhave to \"investigate\", such as using <code>simp_trace</code>, though <code>simp</code> rules <br>\nmay not be the only thing <code>auto</code> is using.</p>\n<p>If you still feel the need to have a custom rule for your formula, then <br>\nyou just add it as a <code>simp</code> rule, as others have explained, with the <br>\nintent that the left-hand side of the formula will be replaced with the <br>\nright-hand side, or that \"=\" will resolve to \"True\". However, it's <br>\npossible that your  <code>simp</code> rule will never be used, because other <code>simp</code> <br>\nrules might get to it first and do some rewriting, with the result that <br>\nyour rule can no longer be applied.</p>\n<p>Because it takes so much work to work through textbooks and tutorials, I <br>\nget value from questions that other's ask and that are answered by <br>\nothers. However, for a more comprehensive knowledge on some of these <br>\nbasics, I recommend two distribution tutorials:</p>\n<p><a href=\"http://isabelle.in.tum.de/website-Isabelle2013-2/dist/Isabelle2013-2/doc/prog-prove.pdf\">http://isabelle.in.tum.de/website-Isabelle2013-2/dist/Isabelle2013-2/doc/prog-prove.pdf</a></p>\n<p><a href=\"http://isabelle.in.tum.de/website-Isabelle2013-2/dist/Isabelle2013-2/doc/tutorial.pdf\">http://isabelle.in.tum.de/website-Isabelle2013-2/dist/Isabelle2013-2/doc/tutorial.pdf</a></p>\n<p>I also pick one non-distribution web page by Jeremy Siek that, for my <br>\nneeds, will be very helpful in learning how to do non-auto natural <br>\ndeduction proof steps:</p>\n<p><a href=\"http://www.cs.colorado.edu/~siek/7000/spring07/\">http://www.cs.colorado.edu/~siek/7000/spring07/</a></p>\n<p><a href=\"http://www.cs.colorado.edu/~siek/7000/spring07/isabelle-notes.pdf\">http://www.cs.colorado.edu/~siek/7000/spring07/isabelle-notes.pdf</a></p>\n<p>I myself have yet to work through any of these completely, so at times, <br>\nI feel the urge to lash out at the establishment, and become a <br>\nrevolutionary in the Eastern hemisphere.</p>\n<p>What could be easy, though time-consuming, becomes hard, because the <br>\nright kind of textbooks for Isabelle don't exist, such as Martin <br>\nOdersky's book on Scala, his Coursera video on Scala, and the 10 or so <br>\nother textbooks that take you from beginning to moderate level Scala.</p>\n<p>Controlling my emotions, and forcing myself to think rationally, I come <br>\nup with a logical argument as to why affairs are the way they are, <br>\nthough I have little ability to implement such an argument in <br>\nIsabelle/HOL, other than with Sledgehammer, auto, simp, fastforce, fast, <br>\npresburger, etc. You get the picture.</p>\n<p>Thinking rationally, I then feel no obligation to become a revolutionary <br>\nin the Eastern hemisphere. Rather than do the tedius work of working <br>\nthrough tutorials, I make an easy contribution to the mailing list, it <br>\nbeing 17:48 in the German part of the Eastern hemisphere, on Friday, the <br>\nGermans having gone home for the weekend.</p>\n<p>Regards,<br>\nGB</p>",
        "id": 294266939,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660915846
    },
    {
        "content": "<p>From: IG BI &lt;<a href=\"mailto:igbi@gmx.com\">igbi@gmx.com</a>&gt;<br>\nI clarify some of what I said, where what I said are the statements of a <br>\nnovice.</p>\n<p>First, the basic idea behind what I said is that if <code>by(auto)</code> is <br>\nproving your formula above, I don't see why you need to add any rules. <br>\nThe <code>auto</code> method calls <code>simp</code>, among other things, and it seems to be <br>\ndoing a good job with what it has.</p>\n<p>Also, if you did want to add custom rules, then you would create rules <br>\nmore general than your formula, which I suppose you already know. <br>\nHowever, if <code>auto</code> already can solve the identity, then why add <br>\nanything? Maybe there are reasons, such as optimization.</p>\n<p>You can use <code>simp add: myThm</code> to add a <code>simp</code> rule for <code>simp</code> to use, <br>\nbut again, it found everything it needed.</p>\n<p>The problem with mailing list subscriptions is that there's not an <br>\noption for it to be \"read only\". The web page has that functionality, <br>\nbut it's convenient to get everything by email to be able to archive the <br>\nones I want for future reference.</p>\n<p>I'd rather only have \"write mode\" capability most of the time, but I <br>\nhave it all the time, which is unfortunate.</p>\n<p>Regards,<br>\nGB</p>",
        "id": 294266963,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660915857
    }
]