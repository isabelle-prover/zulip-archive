[
    {
        "content": "<p>From: Akash Waran &lt;<a href=\"mailto:awaran@syr.edu\">awaran@syr.edu</a>&gt;<br>\n?Hi,</p>\n<p>I was trying to parse my function in isabelle. The c-parser was able to parse it without issue, however autocorres spit out an \"TRACE_SOLVE_TAC_FAIL\" exception. What does this error mean and how would I go about debugging it?</p>\n<p>Note : The function that failed is pretty complex and hence I didn't include it.</p>\n<p>Thanks and Regards,</p>\n<p>Akash</p>",
        "id": 294634294,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661159516
    },
    {
        "content": "<p>From: Gerwin Klein &lt;<a href=\"mailto:Gerwin.Klein@nicta.com.au\">Gerwin.Klein@nicta.com.au</a>&gt;<br>\nWithout the function it’s hard to say, but this should not usually occur (i.e. it’s a problem in AutoCorres, probably a missing case somewhere).</p>\n<p>This particular exception seems to be thrown only during word abstraction and heap abstraction.</p>\n<p>To narrow down which of these it is, I’d try combinations of</p>\n<p>autocorres [skip_word_abs, no_heap_abs = FUN_NAME]</p>\n<p>These options from the README.md file may also be useful:</p>\n<p>* <code>trace_heap_lift = FUNC_NAMES</code>: Trace the _heap abstraction_<br>\n    process for each of the given functions. The traces<br>\n    are stored in the Isabelle theory and can be quite large.<br>\n    See <code>tests/examples/TraceDemo.thy</code>.</p>\n<p>* <code>trace_word_abs = FUNC_NAMES</code>: As above, but traces<br>\n    _word abstraction_.</p>\n<p>If that doesn’t help, I’d start removing parts of the function to narrow down where the problematic code is.</p>\n<p>Cheers,<br>\nGerwin</p>\n<hr>\n<p>The information in this e-mail may be confidential and subject to legal professional privilege and/or copyright. National ICT Australia Limited accepts no liability for any damage caused by this email or its attachments.</p>",
        "id": 294634357,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661159527
    }
]