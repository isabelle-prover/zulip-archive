[
    {
        "content": "<p>From: Ramana Kumar &lt;<a href=\"mailto:rk436@cam.ac.uk\">rk436@cam.ac.uk</a>&gt;<br>\nHi,</p>\n<p>I am trying to run Sledgehammer on Isabelle2015. Whenever I try, I get this<br>\nerror message:</p>\n<p>Welcome to Isabelle/HOL (Isabelle2015: May 2015)<br>\npoly: loadlocale.c:130: _nl_intern_locale_data: Assertion `cnt &lt; (sizeof<br>\n(_nl_value_type_LC_COLLATE) / sizeof (_nl_value_type_LC_COLLATE[0]))'<br>\nfailed.</p>\n<p>/home/ramana/Isabelle2015/lib/scripts/run-polyml-5.5.2: line 82: 16420<br>\nAborted                 (core dumped) \"$POLY\" -q -i $ML_OPTIONS --eval<br>\n\"$(perl \"$ISABELLE_HOME/lib/scripts/recode.pl\" \"$MLTEXT\")\" --error-exit &lt;<br>\n/dev/null</p>\n<p>message_output terminated<br>\nstandard_output terminated<br>\nstandard_error terminated<br>\nprocess terminated<br>\ncommand_input terminated<br>\nprocess_manager terminated<br>\nReturn code: 134</p>\n<p>I have no idea how to debug this. What could be wrong?</p>\n<p>Thanks,<br>\nRamana</p>",
        "id": 294650201,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165788
    },
    {
        "content": "<p>From: Ramana Kumar &lt;<a href=\"mailto:rk436@cam.ac.uk\">rk436@cam.ac.uk</a>&gt;<br>\nMark,</p>\n<p>Thanks for the link. That link suggests there is an issue with requiring<br>\n32-bit versions of glibc. I thought Isabelle2015 runs natively on a 64-bit<br>\nmachine. Am I incorrect about that?</p>\n<p>(I haven't tried installing lib32-glibc yet, because I suspect it's not<br>\nnecessary. I will try it later, though, to test.)</p>\n<p>Thanks,<br>\nRamana</p>",
        "id": 294650235,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165806
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nIsabelle2015 consists of many components.  This thread is about the \"poly\" <br>\nprocess, i.e. the Poly/ML runtime process.  Running that \"natively\" on <br>\nx86_64 works, but wastes a lot of resources.  The usual way is to install <br>\n32-bit C/C++ standard libraries, what ever that means concretely on <br>\nparticular Linux distributions.</p>\n<p>Gladly, users on Windows and Mac OS X don't have to think about such <br>\nside-conditions.</p>\n<p>Makarius</p>",
        "id": 294650252,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165818
    },
    {
        "content": "<p>From: Ramana Kumar &lt;<a href=\"mailto:rk436@cam.ac.uk\">rk436@cam.ac.uk</a>&gt;<br>\nOn 22 August 2015 at 17:49, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n<blockquote>\n<p>Isabelle2015 consists of many components.  This thread is about the \"poly\"<br>\nprocess, i.e. the Poly/ML runtime process.  Running that \"natively\" on<br>\nx86_64 works, but wastes a lot of resources.  The usual way is to install<br>\n32-bit C/C++ standard libraries, what ever that means concretely on<br>\nparticular Linux distributions.<br>\n</p>\n</blockquote>\n<p>In case it helps anyone else: installing the 32-bit version of glibc did<br>\nindeed fix the problem.</p>\n<blockquote>\n<p>Gladly, users on Windows and Mac OS X don't have to think about such<br>\nside-conditions.</p>\n</blockquote>\n<p>Perhaps, but instead they have to worry about using proprietary software<br>\nand all that that entails.</p>",
        "id": 294650294,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165837
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI am using mostly Linux myself, but in a way to avoid problems.</p>\n<p>The Isabelle system integration we see today makes the system run out of <br>\nthe box for 99% percent of users, but 1% need extra tinkering, or don't <br>\nmanage at all.</p>\n<p>In the worst case, it is always possible to run Virtualbox with Windows or <br>\nplain Ubuntu, even on exotic Linux distributions.</p>\n<p>Makarius</p>",
        "id": 294650346,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165868
    }
]