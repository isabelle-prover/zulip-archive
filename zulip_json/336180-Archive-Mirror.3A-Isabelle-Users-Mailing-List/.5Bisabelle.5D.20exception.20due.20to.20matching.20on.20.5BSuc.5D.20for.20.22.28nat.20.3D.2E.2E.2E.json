[
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:igbi@gmx.com\">igbi@gmx.com</a>&gt;<br>\nHi,</p>\n<p>I probably wouldn't report this, since I've mainly interpreted <br>\nexceptions as error messages without a nice interface, but I mentioned <br>\nan exception in the past, and then Ondrej Kuncar implemented an <br>\nimportant change.</p>\n<p>I moved on to a different solution, but what's below represents what I <br>\nwas trying, and it looks like it could be useful if it did work.</p>\n<p>My first example is a function of type \"nat list =&gt; nat\", and it shows I <br>\ncan match on a 0-ary constructor in a list.</p>\n<p>My second example is a function of type \"(nat =&gt; nat) list =&gt; nat\", and <br>\nit shows that when I try to match on Suc, it causes an exception.</p>\n<p>Here are the examples:</p>\n<p>fun nat_con_0_no_error :: \"nat list =&gt; nat\" where<br>\n   \"nat_con_0_no_error [0] = 0\"</p>\n<p>fun nat_con_Suc_error :: \"(nat =&gt; nat) list =&gt; nat\" where<br>\n   \"nat_con_Suc_error [Suc] = 0\"</p>\n<p>(* OUTPUT: exception Option raised (line 81 of \"General/basics.ML\") *)</p>\n<p>Thanks,<br>\nGB</p>",
        "id": 294271477,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660917364
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nThis fails as functions are not a datatype and \"Suc\" is not a<br>\nconstructor of \"nat =&gt; nat\".</p>\n<p>-- Lars<br>\n<a href=\"/user_uploads/14278/vV2KkIZu4nk2pbHHIKOTKAw2/signature.asc\">signature.asc</a></p>",
        "id": 294271489,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660917369
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:igbi@gmx.com\">igbi@gmx.com</a>&gt;<br>\nLars,</p>\n<p>Thanks. I knew \"fun\" requires a constructor for pattern matching, <br>\nbecause the standard error message tells me that a lot.</p>\n<p>But I was foggy on the rules for nesting constructors, where I wasn't <br>\neven clear on it enough to be thinking \"nested constructors\".</p>\n<p>Thanks again,<br>\nGB</p>",
        "id": 294271501,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660917372
    }
]