[
    {
        "content": "<p>From: Viorel Preoteasa &lt;<a href=\"mailto:viorel.preoteasa@aalto.fi\">viorel.preoteasa@aalto.fi</a>&gt;<br>\nHello,</p>\n<p>I have the theory:</p>\n<p>theory test imports Main<br>\nbegin<br>\n   definition \"F = top\"</p>\n<p>lemma A: \"F (f o g) (n::nat) = top\"<br>\n     apply auto<br>\n     sorry</p>\n<p>lemma B: \"F (f o g) (n::nat) = top\"<br>\n     apply (induction n)<br>\n     apply auto<br>\n     sorry<br>\nend</p>\n<p>The question is why in lemma A, auto fails as expected, while in lemma B <br>\nauto<br>\nchanges (f o g) into (λa. f (g a)). How can I prevent this change?</p>\n<p>Best regards,</p>\n<p>Viorel Preoteasa</p>",
        "id": 294320679,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660926790
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nThe culprit is comp_apply: (f ∘ g) a = f (g a) which you can of course remove:</p>\n<p>apply(auto simp del: comp_apply)</p>\n<p>How to find out? Put \"using [[simp_trace_new mode=full]]\" in front of your <br>\nsimp/auto command.</p>\n<p>Tobias<br>\n<a href=\"/user_uploads/14278/L7fq_oKBp3GNkIKtjpQdGq-V/smime.p7s\">smime.p7s</a></p>",
        "id": 294320698,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660926797
    },
    {
        "content": "<p>From: Viorel Preoteasa &lt;<a href=\"mailto:viorel.preoteasa@aalto.fi\">viorel.preoteasa@aalto.fi</a>&gt;<br>\nIt works if I add \"del: comp_apply\", but I still do not understand why?<br>\nMy term does not contain \"(f o g) a\", so comp_apply does not seem to match<br>\nany sub-term. I tried before to remove comp_def which is applicable<br>\nto (f o g), but then I got the warning that  comp_def is not a simp rule.</p>\n<p>It is also strange that the rule comp_apply becomes applicable only<br>\nafter induction.</p>\n<p>Viorel</p>",
        "id": 294320735,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660926809
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nTerms are eta-contracted before printing and rule application (eg in induction) <br>\nmay eta-expand terms. If you always want to see the uncontracted version:</p>\n<p>declare [[eta_contract=false]]</p>\n<p>Tobias<br>\n<a href=\"/user_uploads/14278/7scsUCtgs7OV3zq3sxYIQKv_/smime.p7s\">smime.p7s</a></p>",
        "id": 294320760,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660926815
    },
    {
        "content": "<p>From: Viorel Preoteasa &lt;<a href=\"mailto:viorel.preoteasa@aalto.fi\">viorel.preoteasa@aalto.fi</a>&gt;<br>\nThank you. This explains it.</p>\n<p>Viorel</p>",
        "id": 294320790,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660926825
    }
]