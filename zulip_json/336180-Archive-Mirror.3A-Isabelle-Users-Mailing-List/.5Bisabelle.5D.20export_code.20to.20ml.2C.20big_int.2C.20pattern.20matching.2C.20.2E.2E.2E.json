[
    {
        "content": "<p>From: Tom Ridge via Cl-isabelle-users &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nDear All,</p>\n<p>I am extracting some isabelle code to ocaml.</p>\n<p>The generated code contains monster definitions like:</p>\n<p>let rec partial_term_of_rresult _A<br>\n  ty x1 = match ty, x1 with<br>\n    ty, Narrowing_constructor ((Big_int.big_int_of_int 1), []) -&gt;<br>\n      Const (\"Util.rresult.Error\",<br>\n              Typerep<br>\n                (\"Util.rresult\", [typerep _A.typerep_partial_term_of Type]))<br>\n    | ty, Narrowing_constructor (Big_int.zero_big_int, [a]) -&gt;<br>\n        App (Const (\"Util.rresult.Ok\",<br>\n                     Typerep<br>\n                       (\"fun\",<br>\n                         [typerep _A.typerep_partial_term_of Type;<br>\n                           Typerep<br>\n                             (\"Util.rresult\",<br>\n                               [typerep _A.typerep_partial_term_of<br>\nType])])),<br>\n              partial_term_of _A Type a)<br>\n    | ty, Narrowing_variable (p, tt) -&gt;<br>\n        Free (\"_\", Typerep<br>\n                     (\"Util.rresult\",<br>\n                       [typerep _A.typerep_partial_term_of Type]));;</p>\n<p>Unfortunately this won't compile: ocamlc gives \"Error: Syntax error:<br>\noperator expected.\"</p>\n<p>The problem is that the expression (Big_int.big_int_of_int 1) is used as a<br>\npattern, but it is a function application.</p>\n<p>A quick fix is to manually replace occurrences with a variable \"x\" and add<br>\na \"when\" clause to the pattern. But obviously manually editing generated<br>\ncode is a no-no.</p>\n<p>What am I doing wrong?</p>\n<p>Thanks</p>",
        "id": 294699325,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661178658
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Tom,</p>\n<p>The problem is that partial_term_of has code equations which pattern-match on <br>\nCode_Integer.integer literals (namely 0 or 1) and there is a code_printing setup for this <br>\ntype. The simplest approach is probably to change the code equations such that they do <br>\nif-tests rather than pattern matching. But before you do that: Why does the export_code <br>\ncommand generate a definition for partial_term_of at all? This is supposed to be a <br>\nconstant that is used only internally by quickcheck with narrowing and therefore should <br>\nonly ever be exported to Haskell.</p>\n<p>Can you find out why partial_term_of shows up in the generated code at all?</p>\n<p>Andreas</p>",
        "id": 294699355,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661178666
    },
    {
        "content": "<p>From: Tom Ridge via Cl-isabelle-users &lt;<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>&gt;<br>\nNot sure why it appears (indeed, I don't really need this defn at all). The<br>\n.thy file is attached. I am on Isabelle2015.<br>\n<a href=\"/user_uploads/14278/Gs1MwkycTDyEnhLafC_ytDE5/Util.thy\">Util.thy</a></p>",
        "id": 294699410,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661178683
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Tom,</p>\n<p>Your export_code command says that you want to export <em>all</em> constants defined in Util.thy. <br>\nSince the partial_term_of instance for rresult happens at the datatype declaration, <br>\n\"Util._\" also selects the definitions for the type class instance. So, if you select only <br>\nthe functions you are interested in (say by explicitly listing them), you should not get <br>\nsuch monster definitions.</p>\n<p>Hope this helps,<br>\nAndreas</p>",
        "id": 294699424,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661178689
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Tom,</p>\n<p>Your export_code command says that you want to export <em>all</em> constants defined in Util.thy. <br>\nSince the partial_term_of instance for rresult happens at the datatype declaration, <br>\n\"Util._\" also selects the definitions for the type class instance. So, if you select only <br>\nthe functions you are interested in (say by explicitly listing them), you should not get <br>\nsuch monster definitions.</p>\n<p>Hope this helps,<br>\nAndreas</p>",
        "id": 294699446,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661178695
    }
]