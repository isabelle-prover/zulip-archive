[
    {
        "content": "<p>From: Michal Wallace &lt;<a href=\"mailto:michal.wallace@gmail.com\">michal.wallace@gmail.com</a>&gt;<br>\nYou were complaining that nobody answers your questions. I'm not sure<br>\nthat's true, but I do think I can answer this one. :)</p>\n<p>(Warning: I'm pretty much a newbie myself)</p>\n<p>On Thu, Aug 9, 2018 at 3:44 AM Jeremy Dawson &lt;<a href=\"mailto:Jeremy.Dawson@anu.edu.au\">Jeremy.Dawson@anu.edu.au</a>&gt;<br>\nwrote:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>Right at the moment I'm trying to understand what the documentation is<br>\ntalking about when it refers to facts.  Which it does in quite a lot<br>\nof places, so I'm surprised you refer to it as low-level exploration.<br>\n</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>At (almost) any point in your document in isabelle/jEdit, type the<br>\nfollowing line:</p>\n<p>print_facts</p>\n<p>Then put your cursor on that line and open the \"output\" panel to see what<br>\nthe current facts are.</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>Further to the above question, where I have a proof state as follows</p>\n<p>proof (state)<br>\nthis:<br>\n   D</p>\n<p>goal (1 subgoal):<br>\n  1. A ==&gt; B &amp; C &amp; D</p>\n<p>what does<br>\nthis:<br>\n   D<br>\nmean?<br>\n</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>notepad begin<br>\n  assume \"D\"<br>\n  print_facts<br>\nend</p>\n<p>It means that D is a fact in the current context, and also that the name<br>\n\"this\" is bound to it.<br>\n\"this\" is special variable that's something like \"the set of facts that you<br>\njust proved.\"<br>\nit allows you to forward chain from one statement to the next (\"from this\"<br>\n/ \"hence\")</p>\n<p>(Looking at an example  is great if you know what it is an example of,</p>\n<blockquote>\n<p>eg adding to, or removing from, or using, the list of current facts or<br>\nlocal facts or method facts or goal facts or any other sort of facts<br>\nthat the system uses; but without any explanation of what the example is<br>\nshowing, then may often not be of any use).<br>\n</p>\n</blockquote>\n<p>Don't just look at it. Load it into the system and put your cursor on<br>\ndifferent places in the file<br>\nand observe the proof state.</p>\n<p>eg running through this example doesn't tell me what are, at each stage,</p>\n<blockquote>\n<p>the current facts or local facts or method facts or goal facts or any<br>\nother sort of facts, and which of these have the same meaning, etc.</p>\n<p>(1) what does the  \\&lt;proof&gt; mean?<br>\n</p>\n</blockquote>\n<p>\"\\&lt;proof&gt;\" is pretty much the same as \"sorry\" as far as Isabelle is<br>\nconcerned, but<br>\nbut is meant to indicate to the reader that the proof is essentially<br>\nunimportant or<br>\nintentionally left out, whereas \"sorry\" indicates that the thing proved by<br>\nit is important<br>\nand there really ought to be a proof there but... well... sorry, there<br>\nisn't.</p>\n<p>(you'll notice that when a \"proof outline\" is generated in AFP, all the<br>\nactual proofs are<br>\nreplaced with \"\\&lt;proof&gt;\")</p>\n<blockquote>\n<p>(2) what does<br>\nthis<br>\nA1<br>\nA2<br>\nB1<br>\nB2<br>\nB3<br>\nmean?</p>\n<p>Ie does it mean that \"this\" refers to A1 or to all of A1 A2 B1 B2 B3?<br>\nOr to something else?  Are all of these facts?<br>\n</p>\n</blockquote>\n<p>Yes. try using the 'print_facts' command before and after.</p>\n<p>(incidentally, if you just type \"print_\" and let isabelle/jEdit<br>\nautocomplete, there's a bunch of other inspectors like these)</p>\n<blockquote>\n<p>(3) what does \"picking this\" mean?  At this point (ie after \"from a\")<br>\nwhat are the facts at the point?  Is something which is once a fact<br>\nalways a fact, or does it cease to become one?  Since just A1 and A2 are<br>\nprinted, does that mean that just those two are facts?</p>\n<p>(4) After the \"have C\" the proof state includes \"using this A1 A2\".<br>\nWhat are the facts at this point?</p>\n<p>(5) After the \"using b\" the proof state becomes \"using this A1 A2 B1 B2<br>\nB3\"?  Same questions.</p>\n<p>(6) After proof ... we get method_facts A1 A2 B1 B2 B3.  Are<br>\nmethod_facts the same as facts?  If not, what is the difference?</p>\n<p>(7) After show ?thesis \\&lt;proof&gt; it says something has been proved, but<br>\nit's not apparent what (I'm guessing C) or how (though I assume it must<br>\nbe that it has used C to prove C, though I can't see where it has been<br>\ntold to do that).<br>\n</p>\n</blockquote>\n<p>I feel like all of thees have the same answers... Just click and look.</p>\n<p>Which, combined with other questions you've asked, makes me wonder if you<br>\nare just completely<br>\nignoring the jEdit component, and trying to use Isabelle only from the<br>\nconsole?</p>\n<p>I can certainly imagine how the other systems you've mentioned using would<br>\nlead you to do that,<br>\nbut it must be terribly frustrating.</p>\n<p>I think (maybe?) modern Isabelle is just a very different thing than what<br>\nyou want/expect it to be.<br>\nIt is still very possible to extend Isabelle with ML, but maybe it's worth<br>\ntaking a step back and<br>\ntelling yourself that what you're dealing with isn't ML. It's a new<br>\nlanguage/environment/system<br>\nall its own that just happens to have ML as a sub component...</p>",
        "id": 294739657,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661191059
    },
    {
        "content": "<p>From: Jeremy Dawson &lt;<a href=\"mailto:Jeremy.Dawson@anu.edu.au\">Jeremy.Dawson@anu.edu.au</a>&gt;<br>\nHi Michal,</p>\n<blockquote>\n<p>At (almost) any point in your document in isabelle/jEdit, type the <br>\nfollowing line:</p>\n<p>print_facts</p>\n<p>Then put your cursor on that line and open the \"output\" panel to see <br>\nwhat the current facts are.</p>\n<p>thanks - that is very helpful.</p>\n<p>Don't just look at it. Load it into the system and put your cursor on <br>\ndifferent places in the file<br>\nand observe the proof state.</p>\n<p>I meant I'd looked at the result of running the example.</p>\n</blockquote>\n<p>Your answer to (1) I think also clarifies (7).  And for some reason I'd <br>\nthought<br>\nthat what is printed after \"using\" or \"using this\" is the facts, which is<br>\napparently not so.</p>\n<p>But do you know what it is that is printed after \"using\" or \"using this\"?</p>\n<blockquote>\n<p>(6) After proof ... we get method_facts A1 A2 B1 B2 B3.  Are<br>\n    method_facts the same as facts?  If not, what is the difference?<br>\n</p>\n</blockquote>\n<p>I've discovered that at several places in the file I can insert<br>\n  apply (print_fact method_facts)<br>\nand what it gives is different from what is printed by print_facts<br>\n(which is described as local facts).</p>\n<p>Do you know what method facts or local facts are?  Presumably they<br>\nare of some relevance, different from them simply being facts.</p>\n<blockquote>\n<p>Which, combined with other questions you've asked, makes me wonder if <br>\nyou are just completely<br>\nignoring the jEdit component, and trying to use Isabelle only from the <br>\nconsole?</p>\n<p>I've certainly tried to do as much as I can from the console, but as for <br>\nrunning the file that my questions were based on and viewing the output <br>\nat each step, I think I must have used jedit, I don't think I know how <br>\nto do that using the console.</p>\n</blockquote>\n<blockquote>\n<p>I can certainly imagine how the other systems you've mentioned using <br>\nwould lead you to do that,<br>\nbut it must be terribly frustrating.</p>\n</blockquote>\n<p>As a matter of fact, being able to jump back and forth in a proof is <br>\nvery nice for doing exactly what you suggest (re print_facts) but <br>\ngenerally it's not worth the sluggishness of jedit, and having to <br>\nenclose everything in ML {* ... *}, and only seeing a few lines of <br>\noutput at a time, and so forth.</p>\n<p>Thanks again for your answers</p>\n<p>Cheers,</p>\n<p>Jeremy</p>",
        "id": 294739864,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661191137
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nBefore this thread is again diverging into non-sense, just a reminder of<br>\nthe most basic facts of Isabelle2018:</p>\n<p>* You do need to use Isabelle/jEdit for almost everything. Don't try<br>\nto bail out into the \"isabelle console\" tool, which is merely a leftover<br>\nfor certain low-level system debugging.</p>\n<p>* \"enclose everything in ML {* ... *}\" is misleading. You rarely need<br>\nIsabelle/ML to use the system properly. ML is the system extension<br>\nlanguage, and using it for that purpose, Isabelle/jEdit is actually more<br>\nconvenient than anything before in the history of Isabelle.</p>\n<p>* \"sluggishness of jedit\": The Isabelle/jEdit application normally<br>\nworks smoothly on decent hardware. You need 2-4 CPU cores and 8-16 GB<br>\nRAM, i.e. cheap mid-range consumer hardware. If you don't want to invest<br>\nin that, you should not use Isabelle2018.</p>\n<p>Also note that the Isabelle/jEdit application title in Isabelle2018 is<br>\nnow \"Isabelle2018/HOL\" (or another logic image). It means that at first<br>\napproximation \"Isabelle2018\" and \"Isabelle/jEdit of Isabelle2018\" are<br>\nthe same thing: there is practically no escape from it, and no point to<br>\ntry it. If you don't like that, you should be honest to yourself use a<br>\ndifferent proof assistant.</p>\n<p>Makarius</p>",
        "id": 294739870,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661191139
    },
    {
        "content": "<p>From: José Manuel Rodriguez Caballero &lt;<a href=\"mailto:josephcmac@gmail.com\">josephcmac@gmail.com</a>&gt;<br>\nI never observe the proof state, I just read my own Isar code as if I was<br>\nwriting a paper in LaTex. The slogan is: Isar is not a video game like Coq,<br>\nbut a typewriter like LaTex.</p>\n<p>To understand the theory behind the proof is the key to write readable<br>\nproofs in Isar. In my case, I follow the following steps (without regarding<br>\nany textbook, just having an idea of the theory in mind):</p>\n<ol>\n<li>\n<p>I write my theorem and I write sorry in its proof.</p>\n</li>\n<li>\n<p>I write the lemmas that I need to prove my theorem, with sorry in the<br>\nproof of each one.</p>\n</li>\n<li>\n<p>I write the proof of my theorem assuming the lemmas as true.</p>\n</li>\n<li>\n<p>I repeat the previous steps with each lemma with sorry as proof.</p>\n</li>\n</ol>\n<p>Jose M.</p>",
        "id": 294739903,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661191149
    },
    {
        "content": "<p>From: Jeremy Dawson &lt;<a href=\"mailto:Jeremy.Dawson@anu.edu.au\">Jeremy.Dawson@anu.edu.au</a>&gt;<br>\nHi,</p>\n<p>I find that for a given proof state,</p>\n<p>Proof.the_facts can indicate a non-empty list of facts, but<br>\n(#facts o Proof.goal) gives an empty list of facts.</p>\n<p>Why is this, and what do these two functions return?  Are there two <br>\ndifferent sorts of facts?</p>\n<p>Variously the documentation refers to \"current facts\" and \"incoming <br>\nfacts\".  What does this terminology mean?</p>\n<p>Method.get_facts and Method.set_facts refer to sets of facts which it <br>\nwould seem belong to a proof context, rather than to a Proof state.  How <br>\ndo these relate to the sets of facts mentioned above which would seem to <br>\nbe are part of the proof state?</p>\n<p>thanks</p>\n<p>Jeremy</p>",
        "id": 294741827,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661191845
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThis looks like a low-level exploration of Isabelle/Isar internals.</p>\n<p>What are you trying to do abstractly. What is your application?</p>\n<p>Makarius</p>",
        "id": 294741915,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661191881
    },
    {
        "content": "<p>From: Jeremy Dawson &lt;<a href=\"mailto:Jeremy.Dawson@anu.edu.au\">Jeremy.Dawson@anu.edu.au</a>&gt;<br>\nRight at the moment I'm trying to understand what the documentation is <br>\ntalking about when it refers to facts.  Which it does in quite a lot of <br>\nplaces, so I'm surprised you refer to it as low-level exploration.</p>\n<p>Jeremy</p>",
        "id": 294741933,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661191887
    },
    {
        "content": "<p>From: Jeremy Dawson &lt;<a href=\"mailto:Jeremy.Dawson@anu.edu.au\">Jeremy.Dawson@anu.edu.au</a>&gt;<br>\nFurther to the above question, where I have a proof state as follows</p>\n<p>proof (state)<br>\nthis:<br>\n   D</p>\n<p>goal (1 subgoal):</p>\n<p>1. A ==&gt; B &amp; C &amp; D</p>\n<p>what does<br>\nthis:<br>\n   D<br>\nmean?</p>\n<p>I guessed from the documentation that it means that D is a fact.  Is <br>\nthat right?</p>\n<p>But when I try Proof_Context.print_local_facts on the proof context <br>\nderived from that proof state, it gives nothing.</p>\n<p>(Proof_Context.print_local_facts appears to the the ML function which <br>\nimplements the Isar command print_facts)</p>\n<p>Thanks</p>\n<p>Jeremy</p>",
        "id": 294742275,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661192023
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nA fact is the most fundamental result produced in a proof context, it is<br>\na multi-thm, i.e. a list of things that hold in a certain context.</p>\n<p>Facts are defined in the theory or proof context via names, just like<br>\nconstants or types. Within a proof, fact names are optional and the last<br>\nfact is always called \"this\". This allows to use forward-chaining of a<br>\nfact towards the next goal statement. Facts chained into a goal are<br>\npresented to proof methods as the primary \"facts\" argument.</p>\n<p>Attached is an example that illustrates this.</p>\n<p>Makarius<br>\n<a href=\"/user_uploads/14278/eVLZSzWeba402PqzoEg6p9Vw/Scratch.thy\">Scratch.thy</a></p>",
        "id": 294742296,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661192039
    },
    {
        "content": "<p>From: Jeremy Dawson &lt;<a href=\"mailto:Jeremy.Dawson@anu.edu.au\">Jeremy.Dawson@anu.edu.au</a>&gt;<br>\nWell, thanks - but that raises more questions than it answers.</p>\n<p>(Looking at an example  is great if you know what it is an example of, <br>\neg adding to, or removing from, or using, the list of current facts or <br>\nlocal facts or method facts or goal facts or any other sort of facts <br>\nthat the system uses; but without any explanation of what the example is <br>\nshowing, then may often not be of any use).</p>\n<p>eg running through this example doesn't tell me what are, at each stage, <br>\nthe current facts or local facts or method facts or goal facts or any <br>\nother sort of facts, and which of these have the same meaning, etc.</p>\n<p>(1) what does the  \\&lt;proof&gt; mean?</p>\n<p>(2) what does<br>\nthis<br>\nA1<br>\nA2<br>\nB1<br>\nB2<br>\nB3<br>\nmean?</p>\n<p>Ie does it mean that \"this\" refers to A1 or to all of A1 A2 B1 B2 B3?<br>\nOr to something else?  Are all of these facts?</p>\n<p>(3) what does \"picking this\" mean?  At this point (ie after \"from a\") <br>\nwhat are the facts at the point?  Is something which is once a fact <br>\nalways a fact, or does it cease to become one?  Since just A1 and A2 are <br>\nprinted, does that mean that just those two are facts?</p>\n<p>(4) After the \"have C\" the proof state includes \"using this A1 A2\". <br>\nWhat are the facts at this point?</p>\n<p>(5) After the \"using b\" the proof state becomes \"using this A1 A2 B1 B2 <br>\nB3\"?  Same questions.</p>\n<p>(6) After proof ... we get method_facts A1 A2 B1 B2 B3.  Are <br>\nmethod_facts the same as facts?  If not, what is the difference?</p>\n<p>(7) After show ?thesis \\&lt;proof&gt; it says something has been proved, but <br>\nit's not apparent what (I'm guessing C) or how (though I assume it must <br>\nbe that it has used C to prove C, though I can't see where it has been <br>\ntold to do that).</p>\n<p>Thanks</p>\n<p>Jeremy</p>",
        "id": 294742382,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661192059
    }
]