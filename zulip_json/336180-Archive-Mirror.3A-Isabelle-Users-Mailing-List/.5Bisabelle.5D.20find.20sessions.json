[
    {
        "content": "<p>From: René Neumann &lt;<a href=\"mailto:rene.neumann@in.tum.de\">rene.neumann@in.tum.de</a>&gt;<br>\nThere is 'isabelle findlogics', which gives me a list of all heaps. Is<br>\nthere some equivalent for sessions? Or would it be possible to add a<br>\nswitch to 'isabelle build'? So that e.g.</p>\n<p>isabelle build -d . -L</p>\n<p>just prints the list of sessions it can find?</p>\n<p>Reason: Have a script select one from the list and pass it on as<br>\n'isabelle jedit -l $SESSION'</p>\n<p>If it is not possible per se, but there is already some workaround<br>\nneeding some scripting, I'd be fine with this too.</p>\n<ul>\n<li>René<br>\n<a href=\"/user_uploads/14278/py9OY3cuEyCDeIfjXW495sLV/smime.p7s\">smime.p7s</a></li>\n</ul>",
        "id": 294254434,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912054
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Tue, 12 Nov 2013, René Neumann wrote:</p>\n<blockquote>\n<p>There is 'isabelle findlogics', which gives me a list of all heaps.</p>\n</blockquote>\n<p>findlogics is one of these obsolete Proof General tools.  Its result is <br>\nnot well-defined, it merely lists files that happen to lie around in <br>\ncertain directories.</p>\n<blockquote>\n<p>Is there some equivalent for sessions? Or would it be possible to add a <br>\nswitch to 'isabelle build'? So that e.g.</p>\n<p>isabelle build -d . -L</p>\n<p>just prints the list of sessions it can find?</p>\n<p>Reason: Have a script select one from the list and pass it on as<br>\n'isabelle jedit -l $SESSION'</p>\n<p>If it is not possible per se, but there is already some workaround <br>\nneeding some scripting, I'd be fine with this too.</p>\n</blockquote>\n<p>You can either try to find suitable letter soups for \"isabelle build\" to <br>\napproximate in the shell what you have in mind, or use Isabelle/Scala as <br>\nthe system programming language that it was meant to be.  The \"system\" <br>\nmanual has a brief entry on the \"Scala script wrapper\".</p>\n<p>Then you are in statically typed Isabelle/Scala, with access to the <br>\nisabelle.Build module etc.  So you can do \"higher-order object-oriented <br>\nscripting\" there with the official Isabelle/Scala interfaces.</p>\n<p>Makarius</p>",
        "id": 294254460,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912072
    },
    {
        "content": "<p>From: René Neumann &lt;<a href=\"mailto:rene.neumann@in.tum.de\">rene.neumann@in.tum.de</a>&gt;<br>\nI just came up with this little Scala-snippet, that seems to do what I<br>\nneed (first time ever I touched Scala):</p>\n<p>val options = isabelle.Options.init()<br>\nval path = isabelle.Path.explode(\"/home/necoro/cava\")<br>\nval sessions = isabelle.Build.find_sessions(options, List((false, path)))</p>\n<p>sessions.graph.keys.foreach{ s =&gt; print(s + \" \") }<br>\nprintln</p>\n<p>Unfortunately, this is rather slow. Both the startup (ie running<br>\nisabelle_scala_script), and also the Options.init() and find_sessions().</p>\n<p>I don't know yet, if I want this to be called from a shell script.</p>\n<ul>\n<li>René<br>\n<a href=\"/user_uploads/14278/9xGbNPQXGOikanhXgT1NLhyO/smime.p7s\">smime.p7s</a></li>\n</ul>",
        "id": 294254547,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912091
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Tue, 12 Nov 2013, René Neumann wrote:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>Reason: Have a script select one from the list and pass it on as<br>\n'isabelle jedit -l $SESSION'<br>\n</p>\n</blockquote>\n</blockquote>\n<p>I just came up with this little Scala-snippet, that seems to do what I<br>\nneed (first time ever I touched Scala):</p>\n</blockquote>\n<p>So far the question what you actually need was left open.</p>\n<p>Isabelle/jEdit already provides a dialog to select the logic image, and it <br>\nis rebuilt automatically on startup.  The reboot is a bit awkward, but it <br>\nshould usually do the job.</p>\n<blockquote>\n<p>Unfortunately, this is rather slow. Both the startup (ie running <br>\nisabelle_scala_script), and also the Options.init() and find_sessions().</p>\n</blockquote>\n<p>By making a cold start from outside the Isabelle system, e.g. from the <br>\nshell, several startup-penalties are adding up: Scala script compilation, <br>\nJVM runtime warmup etc.</p>\n<p>There are ways to reduce this a bit, although I am myself not an expert of <br>\nall the options to scalac and java runtime.</p>\n<p>The general move in recent years is away from Isabelle command-line tools, <br>\nand towards the assumption that you have the Prover IDE already running <br>\nand do things from there.</p>\n<p>Makarius</p>",
        "id": 294254751,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912170
    },
    {
        "content": "<p>From: René Neumann &lt;<a href=\"mailto:rene.neumann@in.tum.de\">rene.neumann@in.tum.de</a>&gt;<br>\nI want jEdit to start right up with the correct session. This<br>\nScala-snippet would mostly be needed for sanity-checks (\"does the<br>\nsession you want me to pass to jEdit exist\"), and hence not doing them<br>\nis ok. The other usecase was that calling my script with a unique<br>\nsubstring of the session name was sufficient. But I rarely use this, and<br>\nif I really will, the dialog in jEdit should take care of it.</p>\n<ul>\n<li>René<br>\n<a href=\"/user_uploads/14278/xgt_1RBfuRBsH0mSQ7qUC1Oh/smime.p7s\">smime.p7s</a></li>\n</ul>",
        "id": 294254792,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912183
    }
]