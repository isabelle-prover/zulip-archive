[
    {
        "content": "<p>From: <a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a><br>\nBurkhart Wolff wrote:</p>\n<blockquote>\n<p>recently, I came across an alternative way to define<br>\na fold on finite sets. In contrast to the Isabelle<br>\nlibrary version (discussed in the recent TPHOLs Paper),<br>\nit has a slightly more general type:</p>\n<p>fold : [['a, 'b] =&gt; 'b, 'b, 'a set] =&gt; 'b</p>\n</blockquote>\n<p>The library version has type (b =&gt; b =&gt; b) =&gt; (a =&gt; b) =&gt; b =&gt; a set =&gt; b<br>\nwhich is not more specific but simply different. The one you suggest is the<br>\none used in HOL4 which we briefly mention towards the end of section 2.2<br>\nwhere we also give a reference [2] that shows that both combinators are<br>\ninterdefinable. Ours is based on the singleton-union (SU) view of set<br>\ngeneration, the one in HOL4 on the insert (I) view.</p>\n<blockquote>\n<p>It is strictly more general:</p>\n</blockquote>\n<p>see above.</p>\n<blockquote>\n<p>you can define the cardinality of finite sets by this fold, but not<br>\nby the old one, for example.</p>\n</blockquote>\n<p>At the end of section 3.5 we show how to define card in terms of our fold.</p>\n<p>The one point that does make the I-fold more attractive than the SU-fold is<br>\ncomplexity: it is obvious how to define the latter in terms of the former,<br>\nbut tricky the other way around. In fact, the tricky direction leads to a<br>\nsituation where you call the SU-fold with a function which is not commutative<br>\nin general but only on the arguments arising in that computation. Hence our<br>\nlibrary (ie the thms) would need to be generalized a little to accommodate<br>\nthis situation. Just like the requirement of left-commutativity for the<br>\nargument of the I-fold is too strong in general.</p>\n<blockquote>\n<p>The same algorithmic scheme would work for multi-sets too,</p>\n</blockquote>\n<p>The duality between SU and I works for sets/multisets/lists.<br>\nSee [2] for the details.</p>\n<blockquote>\n<p>B) Wouldn't it be a better candidate<br>\n  for the Isabelle/HOL library?</p>\n</blockquote>\n<p>If there were multiple instances where the SU-fold is more cumbersome to use<br>\nthan the I-fold, I might agree. But I am only aware of one instance,<br>\ntransitive closure, and that is defined very differently anyway.</p>\n<p>Tobias</p>\n<p>[2] @inproceedings{TannenS-ICALP91,<br>\n author={Val Breazu-Tannen and Ramesh Subrahmanyam},<br>\n title = {Logical and computational aspects of programming with sets/bags/lists},<br>\n booktitle = {Automata, Languages and Programming (ICALP91)},<br>\n editor={J. Leach Albert and B. Monien and M. Rodr\\'{\\i}guez-Artalejo},<br>\n year = {1991},<br>\n pages = {60-75},<br>\n publisher = {Springer},series={LNCS},volume=510<br>\n }</p>",
        "id": 293899825,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660744006
    }
]