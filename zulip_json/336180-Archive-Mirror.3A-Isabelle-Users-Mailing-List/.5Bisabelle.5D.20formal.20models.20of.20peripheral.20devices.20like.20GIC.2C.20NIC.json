[
    {
        "content": "<p>From: Abhishek Anand &lt;<a href=\"mailto:abhishek.anand.iitg@gmail.com\">abhishek.anand.iitg@gmail.com</a>&gt;<br>\nHas someone built formal models of peripheral devices like Arm's Generic<br>\nInterrupt Controller (GIC), network interface cards that could be suitable<br>\nfor proving correctness properties of software driving them (e.g. OS,<br>\nnetwork driver)?<br>\nI'd be grateful for pointers to such work. The models need not be in<br>\nCoq/Isabelle, as long as there is a plausible way to convert them to<br>\nCoq/Isabelle models that describe the behavior of such devices.</p>\n<p>Thanks,<br>\n-- Abhishek<br>\n<a href=\"http://www.cs.cornell.edu/~aa755/\">http://www.cs.cornell.edu/~aa755/</a></p>",
        "id": 294828826,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661245645
    },
    {
        "content": "<p>From: Hira Taqdees Syeda &lt;<a href=\"mailto:hira@chalmers.se\">hira@chalmers.se</a>&gt;<br>\nHi Abhishek,</p>\n<p>Has someone built formal models of peripheral devices like Arm's Generic<br>\nInterrupt Controller (GIC), network interface cards that could be suitable<br>\nfor proving correctness properties of software driving them (e.g. OS,<br>\nnetwork driver)?</p>\n<p>Not ARMâ€™s peripheral devices, but I have, in my PhD, developed a formal model (in Isabelle/HOL) of<br>\nARMv7-A translation lookaside buffer (TLB) based on the reference manual. I have then soundly<br>\nabstracted this model using data refinement to extract an abstract model that is easier to reason about<br>\nfrom software point of view. Using the abstract TLB+page tables as the memory model, I have<br>\nfurther developed a logic for reasoning about low-level programs in the presence of cached<br>\naddress translation, and have with ease extracted invariants for user and kernel level code,<br>\nincluding context switch and page table manipulations.</p>\n<p>Here are some links:</p>\n<p>Publications:<br>\nin chronological order</p>\n<ol>\n<li>\n<p>Reasoning about Translation Lookaside Buffers, LPAR17.<br>\n<a href=\"https://easychair-www.easychair.org/publications/paper/gNH\">https://easychair-www.easychair.org/publications/paper/gNH</a></p>\n</li>\n<li>\n<p>Program verification in the presence of cached address translation, ITP18<br>\n<a href=\"https://link.springer.com/chapter/10.1007/978-3-319-94821-8_32\">https://link.springer.com/chapter/10.1007/978-3-319-94821-8_32</a></p>\n</li>\n<li>\n<p>Formal Reasoning Under Cached Address Translation, JAR20<br>\n<a href=\"https://link.springer.com/article/10.1007/s10817-019-09539-7\">https://link.springer.com/article/10.1007/s10817-019-09539-7</a></p>\n</li>\n</ol>\n<p>PhD thesis:<br>\n<a href=\"https://unsworks.unsw.edu.au/fapi/datastream/unsworks:60079/SOURCE02?view=true\">https://unsworks.unsw.edu.au/fapi/datastream/unsworks:60079/SOURCE02?view=true</a></p>\n<p>Ongoing work: to develop a formally verified TLB-aware compiler.</p>\n<p>Isabelle Theories: <a href=\"https://github.com/SEL4PROJ/tlb\">https://github.com/SEL4PROJ/tlb</a></p>\n<p>Hope this helps,<br>\nThanks<br>\nHira</p>",
        "id": 294828865,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661245664
    }
]