[
    {
        "content": "<p>From: Raymond Rogers &lt;<a href=\"mailto:raymond.rogers72@gmail.com\">raymond.rogers72@gmail.com</a>&gt;<br>\nFormal_Power_Series<br>\nhas</p>\n<p>lemma fps_const_mult[simp]: \"fps_const (c::'a::ring) * fps_const d =<br>\n             fps_const (c * d)\"</p>\n<p>for scalar multiplication of c times fsp and it works but seems to <br>\nrequire a conversion in the \"shows\" before entry.  I would like to state</p>\n<p>shows \"(x::real)*(f::fsp).....\"<br>\nor tacitly<br>\nshows \"(x)*(f::fsp).....\"</p>\n<p>explicitly, but the parser objects.<br>\nIn order to avoid continually digging around in the terms far removed in <br>\nthe heirarchy, is it appropriate to \"overload\" \"*\" ?  Can I even do it <br>\nto \"*\"?  The documentation I am reading seems oriented to overloading <br>\nclasses/types.<br>\nAnd should I do it or not. i.e. are there dangers here?<br>\nIn addition: since the fsp can have coefficients from rings other than <br>\nreal; how should I make sure that \"x in (coefficient ring)\" ?<br>\nI am really open to alternatives to \"overloading\"; but I would really <br>\nlike equations far removed from the base to be expressible \"naturally\".</p>\n<p>Ray</p>",
        "id": 294708562,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661181413
    }
]