[
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:mail@joachim-breitner.de\">mail@joachim-breitner.de</a>&gt;<br>\nHi,</p>\n<p>I’m trying to work with two mutual recursive, partially defined and<br>\nnot-always terminating functions (It evaluates a program, the code is at<br>\n<a href=\"http://git.nomeata.de/?p=funcCF.git;a=blob;f=CFGraph/Eval.thy;hb=HEAD\">http://git.nomeata.de/?p=funcCF.git;a=blob;f=CFGraph/Eval.thy;hb=HEAD</a><br>\nif anyone is curious). The functions happen to be tail-recursive, so I’d<br>\nlike to use the function package’s support for that.</p>\n<p>Unfortunately, it fails when using both tailrec and sequential. But<br>\nalready the following simple example fails, so don’t bother looking at<br>\nmy code :-):</p>\n<p>%%%%%%%%%%%%%%%%%%%%%%%%%%%%%<br>\ntheory Tmp imports Main<br>\nbegin</p>\n<p>function (sequential,tailrec) f where \"f True = 0\"<br>\n  apply pat_completeness<br>\n  apply auto<br>\ndone<br>\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</p>\n<p>gives me:</p>\n<p>*** Tactic failed.<br>\n*** The error(s) above occurred for the goal statement:<br>\n*** f_sumC False = undefined<br>\n*** At command \"done\".</p>\n<p>Is that easily fixable, or is there a work-around?</p>\n<p>Thanks,<br>\nJoachim<br>\n<a href=\"/user_uploads/14278/ZSVDNMIqvw-jaT3VpIxCtR-L/signature.asc\">signature.asc</a></p>",
        "id": 294115183,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838062
    },
    {
        "content": "<p>From: Alexander Krauss &lt;<a href=\"mailto:krauss@in.tum.de\">krauss@in.tum.de</a>&gt;<br>\nHi Joachim,</p>\n<p>These problems with \"tailrec\" are starting to become embarrasing for me. :-}</p>\n<p>I just pushed a quick fix, which seems to help here, and also makes your <br>\nreal example go through:</p>\n<p><a href=\"http://isabelle.in.tum.de/repos/isabelle/rev/39db63c45683\">http://isabelle.in.tum.de/repos/isabelle/rev/39db63c45683</a></p>\n<p>The patch also works for the Isabelle2009-2 release.</p>\n<p>Hope this helps...</p>\n<p>Alex</p>",
        "id": 294115209,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838067
    },
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:mail@joachim-breitner.de\">mail@joachim-breitner.de</a>&gt;<br>\nHI,</p>\n<p>thanks. Now a beginner question: Do you have to rebuild Isabelle to have<br>\nthis fix, or can I just patch the file and it will work?</p>\n<p>Thanks,<br>\nJoachim<br>\n<a href=\"/user_uploads/14278/rti1NdcWkGLOphRtImQIjQmU/signature.asc\">signature.asc</a></p>",
        "id": 294115230,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838073
    },
    {
        "content": "<p>From: Alexander Krauss &lt;<a href=\"mailto:krauss@in.tum.de\">krauss@in.tum.de</a>&gt;<br>\nJoachim Breitner wrote:</p>\n<blockquote>\n<p>thanks. Now a beginner question: Do you have to rebuild Isabelle to have<br>\nthis fix, or can I just patch the file and it will work?</p>\n</blockquote>\n<p>You have to rebuild, by running the \"build\" script at the root of the <br>\nIsabelle tree.</p>\n<p>Alex</p>",
        "id": 294115248,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838079
    },
    {
        "content": "<p>From: Joachim Breitner &lt;<a href=\"mailto:mail@joachim-breitner.de\">mail@joachim-breitner.de</a>&gt;<br>\nDear Alex,</p>\n<p>thanks. I applied the fix, and it worked so far. But when I tried to<br>\nreduce the number of equations generated by sequential by simplifying<br>\nthe pattern matches, I get an error message that does not occur without<br>\ntailrec. I could not cook up a simple example though.</p>\n<p>This change worked:<br>\n<a href=\"http://git.nomeata.de/?p=funcCF.git;a=commitdiff;h=e9a10e7b004fbb1eb6f71a4195c39d6366338302\">http://git.nomeata.de/?p=funcCF.git;a=commitdiff;h=e9a10e7b004fbb1eb6f71a4195c39d6366338302</a><br>\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%<br>\ndiff --git a/CFGraph/Eval.thy b/CFGraph/Eval.thy<br>\nindex ee507b5..4e75111 100644<br>\n--- a/CFGraph/Eval.thy<br>\n+++ b/CFGraph/Eval.thy<br>\n@@ -39,8 +39,8 @@ function (sequential,tailrec,domintros)<br>\n           = (      let b' = Suc b<br>\n                    in if v \\&lt;noteq&gt; 0 then evalF contt [] ve b'<br>\n                                else evalF contt [] ve b')\"</p>\n<ul>\n<li>|     \"evalF Stop [DI i] _ _</li>\n<li>= (i)\"</li>\n<li>|     \"evalF Stop as _ _</li>\n<li>\n<p>= (case as of [DI i] \\&lt;Rightarrow&gt; i)\"</p>\n<p>|     \"evalC (App lab f vs) \\&lt;beta&gt; ve b<br>\n         = (let f' = evalV f \\&lt;beta&gt; ve;<br>\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</p>\n</li>\n</ul>\n<p>while this change of the (seemingly) same kind fails:<br>\n<a href=\"http://git.nomeata.de/?p=funcCF.git;a=commitdiff;h=04c9da1123e3dc8aec3212a0a7bfaf8f9d66849d\">http://git.nomeata.de/?p=funcCF.git;a=commitdiff;h=04c9da1123e3dc8aec3212a0a7bfaf8f9d66849d</a><br>\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%<br>\ndiff --git a/CFGraph/Eval.thy b/CFGraph/Eval.thy<br>\nindex 4e75111..c71295f 100644<br>\n--- a/CFGraph/Eval.thy<br>\n+++ b/CFGraph/Eval.thy<br>\n@@ -35,8 +35,9 @@ function (sequential,tailrec,domintros)<br>\n   |     \"evalF (DP (Plus c)) [DI a1, DI a2, cont] ve b<br>\n           = (let b' = Suc b<br>\n                    in evalF cont [DI (a1 + a2)] ve b')\"</p>\n<ul>\n<li>|     \"evalF (DP (If ct cf)) [DI v, contt, contf] ve b</li>\n<li>= (      let b' = Suc b</li>\n<li>|     \"evalF (DP (If ct cf)) as ve b</li>\n<li>= (case as of [DI v, contt, contf] \\&lt;Rightarrow&gt;</li>\n<li>let b' = Suc b<br>\n                    in if v \\&lt;noteq&gt; 0 then evalF contt [] ve b'<br>\n                                else evalF contt [] ve b')\"<br>\n   |     \"evalF Stop as _ _<br>\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</li>\n</ul>\n<p>The error message I get is:</p>\n<p>%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%<br>\n*** Proof failed.<br>\n*** accp evalF_evalC_rel x<br>\n***  1. ⋀evalF_evalC_sum ct cf as ve b y cta cfa asa vea ba a list int aa lista<br>\n***        ab listb x.<br>\n***        ⟦⋀a list inta aaa lista aba listb x.<br>\n***            ⟦int = inta ∧ aa = aaa ∧ ab = aba; a = DI inta;<br>\n***             list = [aaa, aba]; lista = [aba]; listb = []; x = Suc ba⟧<br>\n***            ⟹ evalF_evalC_graph (Inl (aaa, [], vea, Suc ba))<br>\n***                (evalF_evalC_sum (Inl (aaa, [], vea, Suc ba)));<br>\n***         ⋀a list inta aaa lista aba listb x.<br>\n***            ⟦int = inta ∧ aa = aaa ∧ ab = aba; a = DI inta;<br>\n***             list = [aaa, aba]; lista = [aba]; listb = []; x = Suc ba⟧<br>\n***            ⟹ accp evalF_evalC_rel (Inl (aaa, [], vea, Suc ba));<br>\n***         ⋀a list int aa lista ab listb x.<br>\n***            ⟦False; a = DI 0; list = [aa, ab]; lista = [ab]; listb = [];<br>\n***             x = Suc ba; int = 0⟧<br>\n***            ⟹ evalF_evalC_graph (Inl (aa, [], vea, Suc ba))<br>\n***                (evalF_evalC_sum (Inl (aa, [], vea, Suc ba)));<br>\n***         ⋀a list int aa lista ab listb x.<br>\n***            ⟦False; a = DI 0; list = [aa, ab]; lista = [ab]; listb = [];<br>\n***             x = Suc ba; int = 0⟧<br>\n***            ⟹ accp evalF_evalC_rel (Inl (aa, [], vea, Suc ba));<br>\n***         y = Inl (aa, [], vea, Suc ba);<br>\n***         ct = cta ∧ cf = cfa ∧ as = [DI int, aa, ab] ∧ ve = vea ∧ b = ba;<br>\n***         asa = [DI int, aa, ab]; a = DI int; list = [aa, ab]; lista = [ab];<br>\n***         listb = []; x = Suc ba; int ≠ 0⟧<br>\n***        ⟹ accp evalF_evalC_rel (Inl (aa, [], vea, Suc ba))<br>\n*** 1 unsolved goal(s)!<br>\n*** The error(s) above occurred for the goal statement:<br>\n*** evalF_evalC_graph x y ⟹ accp evalF_evalC_rel x<br>\n*** At command \"done\".<br>\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</p>\n<p>TIA for helping me out here,<br>\nJoachim<br>\n<a href=\"/user_uploads/14278/CfFf0NEHtqnl7vJDMOdxFqHH/signature.asc\">signature.asc</a></p>",
        "id": 294115264,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838086
    },
    {
        "content": "<p>From: Alexander Krauss &lt;<a href=\"mailto:krauss@in.tum.de\">krauss@in.tum.de</a>&gt;<br>\nDear Joachim,</p>\n<blockquote>\n<p>thanks. I applied the fix, and it worked so far. But when I tried to<br>\nreduce the number of equations generated by sequential by simplifying<br>\nthe pattern matches, I get an error message that does not occur without<br>\ntailrec.</p>\n</blockquote>\n<p>[...]</p>\n<blockquote>\n<p>The error message I get is:</p>\n<p>%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%<br>\n*** Proof failed.<br>\n*** accp evalF_evalC_rel x<br>\n***  1. ⋀evalF_evalC_sum ct cf as ve b y cta cfa asa vea ba a list int aa lista<br>\n***        ab listb x.<br>\n***        ⟦⋀a list inta aaa lista aba listb x.<br>\n***            ⟦int = inta ∧ aa = aaa ∧ ab = aba; a = DI inta;<br>\n***             list = [aaa, aba]; lista = [aba]; listb = []; x = Suc ba⟧<br>\n***            ⟹ evalF_evalC_graph (Inl (aaa, [], vea, Suc ba))<br>\n***                (evalF_evalC_sum (Inl (aaa, [], vea, Suc ba)));<br>\n[...]</p>\n</blockquote>\n<p>Tailrec performs some very ugly proofs internally, and unfortunately it <br>\nrelies on the simplifier to do certain case splits automatically, which <br>\ndoes not seem to work in general in the presence of \"case\". There is no <br>\nfix at the moment, and I won't try to find one, since I am working on a <br>\nnew package for certain classes of partial functions, which will subsume <br>\nand replace tailrec in its current form.</p>\n<p>For the moment, if all else fails, you must fall back to the good old <br>\nwhile combinator (HOL/Library/While_Combinator\".</p>\n<p>Alex</p>",
        "id": 294116200,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838392
    }
]