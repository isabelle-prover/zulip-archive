[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nHi all,</p>\n<p>I'm working with really large proof states, that may take tens of<br>\nseconds only to pretty-print (The pretty-printer seems to scale very<br>\npoorly to large terms). </p>\n<p>In order to keep interactive proving manageable, I use goals_limit=1,<br>\nwhich drastically reduces the response-time until I see the next proof<br>\nstate. </p>\n<p>However, if a proof method fails, it dumps the whole proof state to the<br>\noutput buffer, and goals_limit is not applied there. This feature<br>\n(introduced newly in Isabelle2013) again renders interactive proving for<br>\nbig goal states unmanageable: In my case, you have to wait approx. 1<br>\nminute only to see that your proof method failed, and this one minute<br>\ncontains a few milliseconds to find that the method actually fails, and<br>\none minute to pretty print the error message.</p>\n<p>Is there a way to deactivate the goal-state being dumped with the error<br>\nmessage?</p>",
        "id": 294239926,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660906512
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Wed, 17 Apr 2013, Peter Lammich wrote:</p>\n<blockquote>\n<p>I'm working with really large proof states, that may take tens of <br>\nseconds only to pretty-print (The pretty-printer seems to scale very <br>\npoorly to large terms).</p>\n</blockquote>\n<p>The pretty printer as such is relatively fast, it depends what else you <br>\nhave in the context to make it slow (e.g. abbreviations).  Independently <br>\nof that, any system has its range where it works well and breaks down when <br>\nstretched too far, as usual.</p>\n<blockquote>\n<p>In order to keep interactive proving manageable, I use goals_limit=1,<br>\nwhich drastically reduces the response-time until I see the next proof<br>\nstate.</p>\n<p>However, if a proof method fails, it dumps the whole proof state to the <br>\noutput buffer, and goals_limit is not applied there. This feature <br>\n(introduced newly in Isabelle2013) again renders interactive proving for <br>\nbig goal states unmanageable: In my case, you have to wait approx. 1 <br>\nminute only to see that your proof method failed, and this one minute <br>\ncontains a few milliseconds to find that the method actually fails, and <br>\none minute to pretty print the error message.</p>\n<p>Is there a way to deactivate the goal-state being dumped with the error <br>\nmessage?</p>\n</blockquote>\n<p>You can edit Isabelle2013/src/Pure/Isar/proof_display.ML to change the <br>\nstring_of_goal function like this:</p>\n<p>fun string_of_goal ctxt goal =<br>\n   Pretty.string_of (Pretty.chunks<br>\n     [pretty_goal_header goal,<br>\n       Goal_Display.pretty_goal<br>\n         {main = Config.get ctxt Goal_Display.show_main_goal, limit = true} ctxt goal]);</p>\n<p>This is mainly for Isar error messages.  There are a few more situations <br>\nwhere goal states are printed.</p>\n<p>I shall see how to refine that again for the next release, although that <br>\nis still far ahead.</p>\n<p>Makarius</p>",
        "id": 294241289,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660907089
    }
]