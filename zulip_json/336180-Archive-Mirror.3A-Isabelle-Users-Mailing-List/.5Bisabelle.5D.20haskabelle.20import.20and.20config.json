[
    {
        "content": "<p>From: Rick Murphy &lt;<a href=\"mailto:rick@rickmurphy.org\">rick@rickmurphy.org</a>&gt;<br>\nAll:</p>\n<p>I am further testing Haskabelle and observing results such as the following:</p>\n<p>me&gt; /usr/local/Haskabelle/bin/haskabelle tree.hs out<br>\nhaskabelle_bin: user error (The module \"System.IO\" imported from module <br>\n\"Tree\" cannot be found at \"System/IO.hs\"!)</p>\n<p>The Haskabelle documentation calls for a list of Haskell source files.</p>\n<ol>\n<li>\n<p>Does this mean that I am required to include System.IO in that list <br>\nas well?</p>\n</li>\n<li>\n<p>Could you provide a pointer to documentation on the config file?</p>\n</li>\n</ol>",
        "id": 294097965,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660832890
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Rick,</p>\n<p>thanks for trying Haskabelle.</p>\n<blockquote>\n<p>me&gt; /usr/local/Haskabelle/bin/haskabelle tree.hs out<br>\nhaskabelle_bin: user error (The module \"System.IO\" imported from module<br>\n\"Tree\" cannot be found at \"System/IO.hs\"!)</p>\n</blockquote>\n<blockquote>\n<ol>\n<li>Does this mean that I am required to include System.IO in that list<br>\nas well?</li>\n</ol>\n</blockquote>\n<p>Basically, you have the choice between two solutions:</p>\n<ol>\n<li>\n<p>Include source code file of System.IO into your current working<br>\ndirectory structure.</p>\n</li>\n<li>\n<p>Extend the default adaptation in order that all necessary ingredients<br>\nof System.IO have appropriate counterparts in existing Isabelle/HOL/Main<br>\ntheories, including Haskabelle's theory Prelude.thy which can also be<br>\nextended as needed.</p>\n</li>\n</ol>\n<p>Solution (1) is often not feasible since standard library source text<br>\ncontains a lot of technical stuff which cannot be processed by<br>\nHaskabelle, requiring a heavy editing of the file.  Solution (2)<br>\nrequires more dilligence but work quite well in practice.</p>\n<p>Anyway the most fundamental question is which functionality your module<br>\nusing System.IO actually needs.  IO operations cannot be imported<br>\ndirectly because they require some non-functional primitives for which<br>\nIsabelle/HOL has no direct counterparts.  In order to really reason<br>\nabout such programs, you would have to provide an appropriate IO model<br>\nwithin Isabelle/HOL, which is not trivial.  In your case, I would guess<br>\nthat the dependence on System.IO is just due to some pretty printing<br>\nfunction or something like that;  in such a case you should consider<br>\ncommenting this out since I assume you hardly want to reason about<br>\npretty printing functions etc.</p>\n<blockquote>\n<ol start=\"2\">\n<li>Could you provide a pointer to documentation on the config file?</li>\n</ol>\n</blockquote>\n<p>There is no separate documentation; the purpose is to give a mapping of<br>\nexisting Haskell identifiers (classes, types, function symbols --<br>\nconstants in Isabelle parlance) to existing Isabelle identifiers such<br>\nthat these get replaced on translation.  To illustrate this, a quote<br>\nfrom default/adapt.txt:</p>\n<p>types<br>\n      \"Prelude.Bool\"        \"bool\"</p>\n<p>consts<br>\n      \"Prelude.True\"        \"True\"<br>\n      \"Prelude.False\"       \"False\"</p>\n<p>This instructs Haskabelle to replace the Haskabelle built-in type Bool<br>\n(\"Prelude.Bool\") and its constructors \"Prelude.True\" and \"Prelude.False\"<br>\nwith Isabelle's \"bool\" and constants \"True\" and \"False\".</p>\n<p>Hope this helps<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/jn5rfdUX1YqV_wtKlXLvo4hM/signature.asc\">signature.asc</a></p>",
        "id": 294098071,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660832921
    }
]