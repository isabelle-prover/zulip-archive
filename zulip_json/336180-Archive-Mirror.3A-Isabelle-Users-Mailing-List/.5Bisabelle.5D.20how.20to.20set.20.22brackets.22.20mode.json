[
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nPeople often ask how to enable the [| ... |] ==&gt; output, which many find more readable than the default. It’s certainly my preference.</p>\n<p>To do this, open the Plugin Options panel and type the word “brackets” into Print Mode as shown.</p>\n<p>Larry Paulson</p>",
        "id": 294701345,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661179247
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nOn 20/12/2016 12:52, Lawrence Paulson wrote:</p>\n<blockquote>\n<p>People often ask how to enable the [| ... |] ==&gt; output, which many find more readable than the default. It’s certainly my preference.</p>\n</blockquote>\n<p>Some students recently asked me about it, too.</p>\n<p>Tobias</p>\n<blockquote>\n<p>To do this, open the Plugin Options panel and type the word “brackets” into Print Mode as shown.</p>\n<p>Larry Paulson</p>\n<p><a href=\"/user_uploads/14278/0m4k0Ao34Zwoz3wcFJG0QAOY/smime.p7s\">smime.p7s</a></p>\n</blockquote>",
        "id": 294701403,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661179260
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nCan you explain this? Or is it just due to habits and nostalgy?</p>\n<p>The uniform notation of nested ==&gt; goes back to 1998, when Isar concepts<br>\nwere emerging, with some consequences on Pure. E.g. it became possible<br>\nto work with nested rules routinely. Before, rules were mostly flat and<br>\nthe bracketed notation was adequate. Afterwards, I found nested rules<br>\nwith brackets very cumbersome to read and to write, and eventually<br>\nstopped doing that. Since Isabelle/jEdit is shipped with defaults for<br>\nIsar, this print mode also changed approx. 5 years ago.</p>\n<p>Note that plain currying (for =&gt; and ==&gt;) without any special notational<br>\ntricks has the advantage that the depth of nesting is immediately<br>\nvisible by the parentheses around complex items. This visual clue is<br>\nabsent in bracket notation (which is better for long lists of flat items).</p>\n<p>Moreover, typing [| |] is almost impossible on a non-English keyboard. I<br>\nusually prefer input and output to coincide as much as feasible. I<br>\ncannot imagine anybody with a German keyword to prefer these special<br>\nbrackets.</p>\n<p>Another reason from 1998: many people not familiar with Isabelle asking<br>\nin presentations \"What are these semantic brackets? What are these<br>\nsemicolons?\" Any also: What are these question-mark variables?\".</p>\n<p>Typical introductions to Isabelle talk about programming language<br>\nsemantics (even until today, e.g. the \"Concrete Semantics\" book), so it<br>\nlooks very odd to me to construct an artificial conflict with standard<br>\nnotation of semantic brackets and sequential composition. Such<br>\napplications then require double semicolons (Or maybe bold ones?). We<br>\nhave managed to get rid of semicolons in outer syntax some years ago<br>\n(making them free for sequential composition of proof methods), so maybe<br>\nwe can one day do the same for inner syntax.</p>\n<p>I have actually started using \"if\" and \"for\" notation for the clauses in<br>\ninductive definitions, especially in introductions to Isabelle. The<br>\npostfix notation is like in Prolog (what most people already know) and<br>\nthe keywords \"if\" and \"for\" look self-explanatory. That Isar rule<br>\nnotation with semantic brackets and semicolons in their conventional<br>\nmeaning could make a difference for didactic purposes.</p>\n<p>Back to occasional complaints about iterated ==&gt; in output. My<br>\nimpression is that most people talk about goal state output, not rule<br>\noutput. Today, there is no particular reason why the outer subgoal<br>\nstructure should be printed with !! / ==&gt; at all. It could be done in<br>\nsome Isar notation, either fix/assume/show or show/if/for. Moreover it<br>\ncould be done in a way that makes it easy to copy-paste (or \"sendback\")<br>\nthe result into the emerging Isar proof text.</p>\n<p>Also note that the ASCII notation of ==&gt; used to have special<br>\nline-breaks for pretty printing, maybe to require less space when it is<br>\niterated. Just as historic accident, the symbolic notation ⟹ was lacking<br>\nthat: it was introduced as plain infixr in<br>\n<a href=\"http://isabelle.in.tum.de/repos/isabelle/rev/9dd06eeda95c\">http://isabelle.in.tum.de/repos/isabelle/rev/9dd06eeda95c</a> -- maybe by<br>\naccident.</p>\n<p>When the default officially changed from ASCII to symbols recently, I<br>\nalso changed the special formatting of ==&gt; to plain infixr (see<br>\n<a href=\"http://isabelle.in.tum.de/repos/isabelle/rev/301833d9013a#l3.77\">http://isabelle.in.tum.de/repos/isabelle/rev/301833d9013a#l3.77</a>). I<br>\nsimply did not dare to ask what is the <em>right</em> way to print the long<br>\narrow notation, after everybody got used to the presumably wrong way in<br>\nso many years of Isabelle symbols usage (both in the user interface and<br>\nin LaTeX output).</p>\n<p>Maybe we should just recover that line-breaking for both the ASCII and<br>\nsymbolic double-arrow? It could make a difference for screen display,<br>\nbut also cause surprises in LaTeX documents that are tweaked for a<br>\nparticular layout.</p>\n<p>Makarius</p>",
        "id": 294701435,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661179272
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nDifferent people have different preferences, of course.  For me, it is precisely the nesting that makes a clearly bracketed notation preferable. A flat list like [a,b,c,d,e,f,g] is no less readable if written as a:<span aria-label=\"b\" class=\"emoji emoji-1f171\" role=\"img\" title=\"b\">:b:</span>:c::d::e::f::g::nil. But consider [a,[b,c],[d,e],[f,g]].</p>\n<p>Also, with large formulas, it isn’t always clear whether … ==&gt; A is the conclusion or just another premise.</p>\n<p>Larry</p>",
        "id": 294701492,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661179288
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nMy (and my students') preference for \"brackets\" concerns mostly the printing of <br>\nthe proof state. Indeed, part of the problem may be due to the infixr directive <br>\nwhich leads to displays such as this.</p>\n<p>1. (A ⟹ B) ⟹<br>\n     (B ⟹ C) ⟹<br>\n     (C ⟹ D) ⟹<br>\n     (E ⟹ F ⟹ G) ⟹ (A ⟹ B) ⟹ (B ⟹ C) ⟹ (C ⟹ D) ⟹ (E ⟹ F ⟹ G) ⟹ A</p>\n<p>I agree with Larry that lots of arrows make it harder to grasp the structure. I <br>\nthink this is related to the fact that mathematicians write A &amp; B ==&gt; C rather <br>\nthan A ==&gt; B ==&gt; C.</p>\n<p>I am not fixated on the brackets format per se. Something like the suggested <br>\nfix/assume/show or show/if/for format may be a decent alternative. It would also <br>\nclearly separate assumptions from conclusion.</p>\n<p>In the end, it is not clear to me what the optimal format is. AFAIK, in Coq each <br>\nassumption is on a separate line. I wonder how well that works if there are many <br>\nassumptions. Conversely, with \"brackets\" you get a very compact representation, <br>\nwhich can be hard to read because all the assumptions merge into one.</p>\n<p>Jasmin asked students from a course of his (who had previous exposure to Coq) <br>\nwhich output format they preferred and the majority said Coq. Of course there <br>\nare many factors at work here.</p>\n<p>Tobias<br>\n<a href=\"/user_uploads/14278/2ESISz-qi9dE5zsnkvTj0PKO/smime.p7s\">smime.p7s</a></p>",
        "id": 294701538,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661179309
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nOn 20/12/2016 12:52, Lawrence Paulson wrote:</p>\n<blockquote>\n<p>People often ask how to enable the [| ... |] ==&gt; output, which many find more readable than the default. It’s certainly my preference.</p>\n<p>To do this, open the Plugin Options panel and type the word “brackets” into Print Mode as shown.</p>\n</blockquote>\n<p>One more thing, in case you have installed Isabelle2016-1 from scratch: you also <br>\nneed to tick the \"Proof state\" box to see the proof state in the output window. <br>\nIt is disabled by default now.</p>\n<p>Tobias</p>\n<blockquote>\n<p>Larry Paulson</p>\n<p><a href=\"/user_uploads/14278/HAvjPfzDXadvPDmA8_-7NEAm/smime.p7s\">smime.p7s</a></p>\n</blockquote>",
        "id": 294705240,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661180443
    }
]