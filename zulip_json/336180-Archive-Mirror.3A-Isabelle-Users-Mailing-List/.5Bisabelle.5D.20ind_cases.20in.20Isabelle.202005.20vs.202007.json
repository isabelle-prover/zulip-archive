[
    {
        "content": "<p>From: John Ridgway &lt;<a href=\"mailto:john@jacelridge.com\">john@jacelridge.com</a>&gt;<br>\nFriends -</p>\n<p>I have been using Isabelle 2005 for some time now, and I'm trying to  <br>\nmake the transition to Isabelle 2007.  I'm running into a bit of a  <br>\nproblem.  I have a number of inductively defined sets; and I've  <br>\nmodified their definitions to use inductive_set rather than  <br>\ninductive.  Unfortunately I also have a number of<br>\n    apply(ind_cases \"(f x, y) \\&lt;in&gt; z\")<br>\nand these don't seem to be working.  I can get around it by:<br>\n   inductive_cases f_z_cases : \"(f x, y) \\&lt;in&gt; z\"<br>\nand using<br>\n   erule(f_z_cases)<br>\nbut that's going to mean a bunch of changes to my proofs.  Is there a  <br>\nreason this isn't working?  (BTW, f is a constructor in a datatype  <br>\nhere.)</p>\n<p>Please tell me I'm missing something simple... :-)</p>\n<p>Peace</p>\n<ul>\n<li>John</li>\n</ul>",
        "id": 294055940,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660821584
    },
    {
        "content": "<p>From: Stefan Berghofer &lt;<a href=\"mailto:berghofe@in.tum.de\">berghofe@in.tum.de</a>&gt;<br>\nJohn Ridgway wrote:<br>\nind_cases does not work when the formula specified as an argument refers<br>\nto variables bound by meta quantifiers in the current goal (these variables<br>\nare displayed with green colour in ProofGeneral). Like most proper Isar<br>\nproof methods (e.g. \"cases\") and attributes (e.g. \"of\"), \"ind_cases\" cannot<br>\ndeal with such variables. To make it work, you have to explicitly tell ind_cases<br>\n(using the \"for\" keyword) to generalize the variables that you want to match with<br>\nthe bound variables in the goal. In the example</p>\n<p>lemma \"(x, x) : r^* ==&gt; True\"<br>\n     apply (ind_cases \"(x, x) : r^*\")</p>\n<p>everything works as expected, since x is a free variable (as indicated by the<br>\nblue colour in ProofGeneral). In contrast,</p>\n<p>lemma \"!!x. (x, x) : r^* ==&gt; True\"<br>\n     apply (ind_cases \"(x, x) : r^*\")</p>\n<p>fails, because x is a bound variable (as indicated by the green colour in<br>\nProofGeneral). If you instruct ind_cases to generalize x, it works as well:</p>\n<p>lemma \"!!x. (x, x) : r^* ==&gt; True\"<br>\n     apply (ind_cases \"(x, x) : r^*\" for x)</p>\n<p>Greetings,<br>\nStefan</p>",
        "id": 294056036,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660821611
    }
]