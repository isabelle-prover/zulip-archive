[
    {
        "content": "<p>From: Jeremy Dawson &lt;<a href=\"mailto:Jeremy.Dawson@anu.edu.au\">Jeremy.Dawson@anu.edu.au</a>&gt;<br>\nHi,</p>\n<p>In the following theory file,</p>\n<p>theory Scratch imports Main begin</p>\n<p>setup {* Thy_Header.add_keywords<br>\n    [((\"myname\", Position.none), ((\"diag\", []), []))] ; *}</p>\n<p>ML {*<br>\nval _ =<br>\n   Outer_Syntax.command \\&lt;^command_keyword&gt;\\&lt;open&gt;myname\\&lt;close&gt; \"print <br>\nmyname\"<br>\n       (Scan.succeed (Toplevel.keep (fn _ =&gt; writeln \"jeremy\")));<br>\n*}</p>\n<p>print_commands<br>\nprint_commands</p>\n<p>myname</p>\n<p>end</p>\n<p>the print_commands commands shows that the new command \"myname\" has been <br>\nadded, but when we get to using it, it fails with a message like<br>\ncommand expected but identifier myname found</p>\n<p>Why is this?</p>\n<p>When I replace the use of Thy_Header.add_keywords with inserting<br>\nkeyword myname :: \"diag\" in the theory file header it works OK</p>\n<p>What is happening here?</p>\n<p>Thanks</p>\n<p>Jeremy</p>",
        "id": 294741844,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661191851
    },
    {
        "content": "<p>From: <a href=\"mailto:Thomas.Sewell@data61.csiro.au\">Thomas.Sewell@data61.csiro.au</a><br>\nMy understanding is that the commands defined in this theory won't be <br>\navailable until subsequent theories.</p>\n<p>Cheers,<br>\n ¬†¬†¬† Thomas.</p>",
        "id": 294741869,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661191860
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nDear Jeremy,</p>\n<blockquote>\n<p>When I replace the use of Thy_Header.add_keywords with inserting<br>\nkeyword myname :: \"diag\" in the theory file header it works OK</p>\n</blockquote>\n<p>this is indeed the recommended way of adding new commands. It is<br>\nrequired so that Isabelle/jEdit (and other frontends) can statically<br>\nunderstand the outer command syntax of a theory.</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294741875,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661191863
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nEven more it is <em>mandatory</em> to declare keywords statically.</p>\n<p>Recall that the usual way to do things properly in Isabelle is to look<br>\nat representative examples, to see how people have done it successfully<br>\nbefore.</p>\n<p>If all fails, there is also some documentation: \"implementation\" manual<br>\nsection 9.1.2:</p>\n<p>\"\"\"<br>\n  The file üóè‚Äπ~~/src/HOL/ex/Commands.thy‚Ä∫ shows some example Isar command<br>\n  definitions, with the all-important theory header declarations for outer<br>\n  syntax keywords.<br>\n\"\"\"</p>\n<p>Makarius</p>",
        "id": 294741900,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661191875
    },
    {
        "content": "<p>From: Jeremy Dawson &lt;<a href=\"mailto:Jeremy.Dawson@anu.edu.au\">Jeremy.Dawson@anu.edu.au</a>&gt;<br>\nWell, I haven't found any examples showing how to add a new command at <br>\nan arbitrary point in a theory file (the examples all add the required <br>\nkeyword right at the start of the theory file)</p>\n<p>Jeremy</p>",
        "id": 294741995,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661191918
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nThat's because you should not add a new command at an arbitrary point, <br>\nbut at the header. It's just not supported. Why do you want to do it <br>\nsomewhere else?</p>",
        "id": 294742041,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661191924
    },
    {
        "content": "<p>From: Jeremy Dawson &lt;<a href=\"mailto:Jeremy.Dawson@anu.edu.au\">Jeremy.Dawson@anu.edu.au</a>&gt;<br>\nWell, I was thinking of the possibility that the need for a new command <br>\nmight be discovered during the interactive development of a theory.</p>\n<p>It's not clear at this point it would be needed, or couldn't be worked <br>\naround. But that's what I was trying to do, in trying to figure out how <br>\nto add a command.</p>\n<p>Jeremy</p>",
        "id": 294742059,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661191930
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nOn Di, 2018-08-07 at 18:19 +1000, Jeremy Dawson wrote:</p>\n<blockquote>\n<p>On 07/08/18 16:41, Lars Hupel wrote:</p>\n<blockquote>\n<blockquote>\n<p>Well, I haven't found any examples showing how to add a new<br>\ncommand at<br>\nan arbitrary point in a theory file (the examples all add the<br>\nrequired<br>\nkeyword right at the start of the theory file)<br>\nThat's because you should not add a new command at an arbitrary<br>\npoint,¬†<br>\nbut at the header. It's just not supported. Why do you want to do<br>\nit¬†<br>\nsomewhere else?<br>\nWell, I was thinking of the possibility that the need for a new<br>\ncommand¬†<br>\nmight be discovered during the interactive development of a theory.</p>\n</blockquote>\n</blockquote>\n<p>It's not clear at this point it would be needed, or couldn't be<br>\nworked¬†<br>\naround. But that's what I was trying to do, in trying to figure out<br>\nhow¬†<br>\nto add a command.</p>\n</blockquote>\n<p>The need for new commands is usually rare enough that it is realistic<br>\nto go back to the header of the theory each time you discover its need,<br>\nand add a keyword there.</p>",
        "id": 294742097,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661191943
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe 'keywords' are part of the theory header and have to be there on top<br>\n-- there is no way around it.</p>\n<p>The actual command definition can be anywhere in the same theory, and<br>\nyou can use the command right after defining it.</p>\n<p>The example ~~/src/HOL/ex/Commands.thy demonstrates both aspects.</p>\n<p>Makarius</p>",
        "id": 294742117,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661191953
    }
]