[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:lochbihl@ipd.info.uni-karlsruhe.de\">lochbihl@ipd.info.uni-karlsruhe.de</a>&gt;<br>\nHi all,</p>\n<p>when interpreting locales on the theory level with the interpretation <br>\ncommand, free variables in the terms that instantiate the locale <br>\nparameters are automatically universally quantified. How can this be <br>\ndone for the interpret command that can be used inside lemmas.</p>\n<p>For example, take the following artificial locale loc</p>\n<p>locale loc = fixes P :: \"'a =&gt; bool\" assumes Pex: \"EX x. P x\" begin<br>\nlemma Pob: obtains x where \"P x\" using Pex ..<br>\nend</p>\n<p>and some lemma in which I wish to interpret loc locally:</p>\n<p>lemma \"True\"<br>\nproof -<br>\n   { fix b :: nat<br>\n     have \"0 &lt; b\" sorry }<br>\n   interpret loc[\"%n :: nat. n &lt; b\"] sorry<br>\n   thm Pob</p>\n<p>What I want, is to interpret loc not only for a fixed variable b, but <br>\nfor all b, i.e. in the interpreted theorem Pob, I want b to be free such <br>\nthat I can instantiatite it to whatever suits me later without having to <br>\ninterpret loc for every different case again.</p>\n<p>How can this be done?</p>\n<p>Regards and thanks in advance,<br>\nAndreas</p>",
        "id": 294068425,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660826284
    }
]