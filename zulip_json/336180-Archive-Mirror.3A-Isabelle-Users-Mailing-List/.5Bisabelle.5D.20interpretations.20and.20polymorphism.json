[
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nDear David,</p>\n<p>the problem is that internally locally defined constants are just<br>\nhigher-order abbreviations for certain terms.  After interpretation,<br>\nthese abbreviations are only input abbreviations (to avoid strange<br>\noutput behavior).  To get the desired behavior, you have to re-introduce<br>\nthe appropriate abbreviation after interpretation &lt;.  See the following<br>\ncode snippet:</p>\n<p>interpretation pbop &lt; bop<br>\nby unfold_locales</p>\n<p>context pbop<br>\nbegin</p>\n<p>abbreviation bsimulate where<br>\n  \"bsimulate == bop.bsimulate adtA adtC\"</p>\n<p>lemma powerbsim: \"bsimulate a (poweradt a)\"<br>\nunfolding bsimulate_def<br>\nsorry</p>\n<p>end</p>\n<p>Hope this helps<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/lwJ_JOc-GLIKuJJCARNmdZat/florian.haftmann.vcf\">florian.haftmann.vcf</a><br>\n<a href=\"/user_uploads/14278/-2LLLOVH1iiBMR_81hQYZjmV/signature.asc\">signature.asc</a></p>",
        "id": 294056457,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660821752
    }
]