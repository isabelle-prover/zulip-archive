[
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nThe right way is to use a structured proof, where you have elements such as</p>\n<p>def a \\&lt;equiv&gt; \"x+y+z\"</p>\n<p>and</p>\n<p>let ?a = \"x+y+z\"</p>\n<p>The former must be expanded explicitly, while the latter are mere abbreviations and expand automatically.</p>\n<p>Larry Paulson</p>",
        "id": 294131837,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660843096
    },
    {
        "content": "<p>From: Viorel Preoteasa &lt;<a href=\"mailto:viorel.preoteasa@abo.fi\">viorel.preoteasa@abo.fi</a>&gt;<br>\nHello,</p>\n<p>In a proof I need to introduce some local names.<br>\nsomething like: a = x+y+z, b = a + x, ...<br>\napply (subgoal_tac \"\\&lt;exists&gt; a b: a = x+y+z /\\ b = a + x\")<br>\nbut this is simplified away by simp or safe.</p>\n<p>Is there a way to achieve this goal?</p>\n<p>Best regards,</p>\n<p>Viorel</p>",
        "id": 294133779,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660843703
    }
]