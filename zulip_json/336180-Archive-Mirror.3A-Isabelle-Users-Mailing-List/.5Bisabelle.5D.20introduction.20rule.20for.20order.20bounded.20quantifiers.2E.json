[
    {
        "content": "<p>From: Viorel Preoteasa &lt;<a href=\"mailto:viorel.preoteasa@abo.fi\">viorel.preoteasa@abo.fi</a>&gt;<br>\nHello,</p>\n<p>I have a question about order bounded quantifiers.</p>\n<p>I have a goal like \"i &lt;= n ==&gt; \\&lt;exists&gt; j &lt;= Suc n. x ^ j = x ^ i\"<br>\nwhich should be trivial by instantiating j with i, however using<br>\n(rule_tac x = i in exI) does not work. What is the introduction<br>\ntheorem for this kind of quantifiers? Where is this theorem<br>\ndefined?</p>\n<p>Best regards,</p>\n<p>Viorel Preoteasa</p>",
        "id": 294117276,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838662
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nBounded quantifiers are not abbreviations but constants in themselves.<br>\nThe intro rules are bexI and ballI. The rules can be found in Set.thy.<br>\nIf you are wondering where a particular function or syntax comes from, I<br>\nrecommend to look up \"What's in Main\"<br>\n<a href=\"http://isabelle.in.tum.de/dist/Isabelle/doc/main.pdf\">http://isabelle.in.tum.de/dist/Isabelle/doc/main.pdf</a> for locating it.</p>\n<p>Tobias</p>\n<p>Viorel Preoteasa schrieb:</p>",
        "id": 294117773,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838797
    }
]