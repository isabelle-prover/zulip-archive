[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nHi all,</p>\n<p>I have encountered the following undesired behaviour with <br>\nisabelle build -l, when I wanted to list the dependencies of a session<br>\nthat depends on various other sessions. Here is a minimal example:</p>\n<p>I have the following directory structure:<br>\n  /tmp               <br>\n  /tmp/ROOTS       -- Contains A<br>\n  /tmp/A <br>\n  /tmp/A/test.ML   -- Arbitrary ML-file<br>\n  /tmp/A/A.thy     -- Contains ML_file \"test.ML\" command<br>\n  /tmp/A/ROOT      -- Declares session A = HOL + theories A</p>\n<p>Inside /tmp folder, I do:</p>\n<blockquote>\n<p>isabelle build -d. -nl A</p>\n</blockquote>\n<p>and get:<br>\n[...]<br>\nSession Unsorted/A<br>\n  A/A.thy<br>\n  A/test.ML<br>\nI/O error: A/A/test.ML (No such file or directory)<br>\nThe error(s) above occurred in session \"A\" file \"A/A/test.ML\"</p>\n<p>The same error occurs without a ROOTS file and the command:</p>\n<blockquote>\n<p>isabelle build -d A -nl A</p>\n</blockquote>\n<p>Note that the very same command works as expected inside /tmp/A folder.<br>\nAlso note that \"isabelle build -d. A\" verifies the session without<br>\ncomplaints inside both /tmp, and /tmp/A.</p>\n<p>I have attached the minimal example from above.</p>\n<p>Is there any way/workaround how I can get the list of files that my<br>\nsession depends on in a setting with multiple ROOT-files (e.g. the AFP)?<br>\n<a href=\"/user_uploads/14278/ujrysjeXHr14Xbkq0hrSvHl5/tmp.tgz\">tmp.tgz</a></p>",
        "id": 294278421,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660919534
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nI found the following workaround to this problem:</p>\n<p>Just place symbolic links to the ML-files at the places where <br>\nisabelle build -l<br>\nseems to expect them, according to the error message. This blows up your<br>\ndirectory structure, creating meaningless directories, but at least<br>\nlisting of dependencies seems to work, the symbolic links do not even<br>\noccur in the dependencies listing.</p>",
        "id": 294278428,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660919538
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nIn Isabelle2013-2 this should work if you write \"$PWD\" instead of \".\" -- <br>\nand it also works in the totally arbitrary repository version <br>\n2fdd5a0a1f9f, so for Isabelle2014 this should not happen again.</p>\n<p>Generally note that the current working directory is a Unix command-line <br>\nconcept, and in recent years it has mostly disappeared from Isabelle. <br>\n2 years ago we still had this odd Unix \"make\" setup, which does require to <br>\n\"cd\" around and causes many other problems related and unrelated to that.</p>\n<p>The Isabelle/ML and Isabelle/Scala no longer change working directories, <br>\nbut append directories explicitly.  So the above might have been a <br>\nboundary case somewhere, although of little practical relevance, and <br>\nalready gone for some unspecified time (I did not make a bisection when <br>\nthat happened).</p>\n<p>Makarius</p>",
        "id": 294278527,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660919569
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nUsing symlinks with the JVM (i.e. the substrate below Isabelle/Scala) can <br>\nhave surprising effects.</p>\n<p>Before Java 7 there was no symlink support -- they were dereferenced. <br>\nAfter Java 7 the situation has improved, but it merely means there are new <br>\nprogramming interfaces in addition to the old ones that did not change, so <br>\none cannot rely on that with existing JVM tools and applications.</p>\n<p>On Windows there are traditionally no symlinks at all, although Windows 7 <br>\nintroduced that, at least in theory.  To get a taste for Isabelle/Scala <br>\ncross-platform system programming here is an operation to make a symlink <br>\nfor Cygwin:<br>\n<a href=\"http://isabelle.in.tum.de/repos/isabelle/annotate/Isabelle2013-2/src/Pure/Tools/main.scala#l190\">http://isabelle.in.tum.de/repos/isabelle/annotate/Isabelle2013-2/src/Pure/Tools/main.scala#l190</a></p>\n<p>Makarius</p>",
        "id": 294278542,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660919575
    }
]