[
    {
        "content": "<p>From: Omar Montano Rivas &lt;<a href=\"mailto:O.Montano-Rivas-2@sms.ed.ac.uk\">O.Montano-Rivas-2@sms.ed.ac.uk</a>&gt;<br>\nHi,</p>\n<p>I have a question regarding the use of keyword files in  <br>\nIsabelle2009-1. I have developed a theory A and obtained a keyword  <br>\nfile (\"isar-keyword-C.el\") for my new command C using the method  <br>\ndescribed in the isabelle's ML programming tutorial (<a href=\"http://isabelle.in.tum.de/nominal/activities/idp/\">http://isabelle.in.tum.de/nominal/activities/idp/</a> <br>\n). Now I want to build a new theory B on top of A using the command C.  <br>\nI have placed the file \"isar-keyword-C.el\" in \"~/.isabelle/etc\" and  <br>\nthe command \"isabelle emacs -k C\" starts a new proof general session  <br>\nwhere the command C is being perfectly recognized. But when I try to  <br>\nbuild the theory B from the command line with \"isabelle make\" I get an  <br>\nerror at the point where the new command C is used.</p>\n<p>*** Stopper may not occur in input of finite scan!<br>\n*** At command \"&lt;malformed&gt;\" (line 29 of \"...\").</p>\n<p>Is it possible to build B from the command line using \"isabelle make\"  <br>\nto get all the benefits of document preparation (latex, html, etc...)?  <br>\nIs the problem related with the isar-keyword file or it is something  <br>\nelse?</p>\n<p>Thanks,<br>\nOmar.</p>",
        "id": 294102503,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660834215
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nTo me this looks more like a problem in the outer syntax parser for your <br>\nnewly defined command.  Can I see your ML definition for the syntax?</p>\n<p>Makarius</p>",
        "id": 294102536,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660834226
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe thms_parser with its own invocation of Scan.finite looks very odd -- <br>\nit is probably imported from some of Christian Urban's examples on playing <br>\nwith the scanner framework independently from Isar outer syntax. If you <br>\njust use (OuterParse.enum1 \",\" <a href=\"http://OuterParse.name\">OuterParse.name</a>) instead it should work.</p>\n<p>Anyway, the whole modify_trs command looks like just a plain add/del <br>\ndeclaration of theorems to the context.  This can be done more <br>\nconveniently and more flexibly via an \"attribute\", not a command.</p>\n<p>Isar attributes can be used in many places, e.g. as follows</p>\n<p>declare blah [trs add]</p>\n<p>or within a proof:</p>\n<p>note blah [trs del]</p>\n<p>or more -- the above are just typical examples.</p>\n<p>In Isabelle2009-1/src/Pure/Tools/named_thms.ML we have something like a <br>\ncanonical example of managing a plain list of theorems within the context, <br>\ntogether with add/del attribute definition.  The latter can also be done <br>\nin Isar via the attribute_setup command.  You can also use Named_Thms <br>\ndirectly as a simplistic solution, if there are no special demands for <br>\nindexing the content (although proper indexing is usually required for <br>\nadvanced tools).</p>\n<p>Makarius</p>",
        "id": 294102553,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660834233
    },
    {
        "content": "<p>From: Omar Montano Rivas &lt;<a href=\"mailto:O.Montano-Rivas-2@sms.ed.ac.uk\">O.Montano-Rivas-2@sms.ed.ac.uk</a>&gt;<br>\nThis is the ML code for the syntax,</p>\n<hr>\n<p>val thms_parser = Scan.finite OuterLex.stopper (OuterParse.enum1 \",\"  <br>\n<a href=\"http://OuterParse.name\">OuterParse.name</a>)<br>\nval add_rws_parser = OuterParse.reserved \"add\" -- OuterParse.$$$ \":\"  <br>\n|-- thms_parser<br>\nval del_rws_parser = OuterParse.reserved \"del\" -- OuterParse.$$$ \":\"  <br>\n|-- thms_parser</p>\n<p>val _ =<br>\n     OuterSyntax.command \"modify_trs\"<br>\n       \"adds or deletes equations to the global term rewrite system\"<br>\n       OuterKeyword.thy_decl<br>\n       ((Scan.optional add_rws_parser [])<br>\n          -- (Scan.optional del_rws_parser []) &gt;&gt; (fn (adds,dels) =&gt;  <br>\nToplevel.theory (modify_TRS_cmd adds dels)))</p>\n<hr>\n<p>Thanks,<br>\nOmar.</p>",
        "id": 294102623,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660834247
    }
]