[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nHi all,</p>\n<p>while giving a tutorial on Isabelle, I run into the following strange<br>\neffect, where jEdit seems to indicate that a lemma is proven. Actually,<br>\nthe lemma just contains a diverging method invocation. See screenshot.</p>\n<p>To reproduce this behaviour, just load the attached theory file, wait a<br>\nfew seconds (the simp add: A A[symmetric] is marked purple now). Then<br>\nmove the cursor after the lemma and type some newlines, save the file,<br>\nand you get (on my machine) the above effect. You can even use the lemma<br>\nto prove further non-theorems from it without any problems!<br>\n<a href=\"/user_uploads/14278/F3zbO_RO4OjJ7VIObZ2VVJzJ/False.png\">False.png</a><br>\n<a href=\"/user_uploads/14278/q55rYQwjw8Bzp2UZg1OgshWG/False.thy\">False.thy</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/F3zbO_RO4OjJ7VIObZ2VVJzJ/False.png\" title=\"False.png\"><img src=\"/user_uploads/14278/F3zbO_RO4OjJ7VIObZ2VVJzJ/False.png\"></a></div>",
        "id": 294255531,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912447
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nAnother, even nastier, way to reproduce this behaviour:</p>\n<p>Load the theory and wait some time (a few minutes or so),<br>\nthen the purple mark goes away automagically.</p>\n<p>This is confusing, in particular if you use some long-running proof<br>\nmethods or switch to another workspace while your proofs run through ...<br>\nif you return to jEdit after a few minutes, it seems as everything went<br>\nthrough.</p>",
        "id": 294255567,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912465
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nTo be more precise: On my machine, the time required until the command<br>\nappears as processed is, nondeterministically, something between a few<br>\nseconds (!) and a few minutes, so it is almost impossible to distinguish<br>\na long-running method-invocation from a diverging one.</p>",
        "id": 294255577,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912471
    },
    {
        "content": "<p>From: bnord &lt;<a href=\"mailto:bnord01@gmail.com\">bnord01@gmail.com</a>&gt;<br>\nHi,</p>\n<p>I can reproduce this easily on OS X and Windows with Isabelle2013-1.<br>\nAny edit after the non terminating command suffies, no saving or waiting <br>\nrequired.<br>\nSo if one, in good hope, simply presses return, after the command was <br>\ndispatched, the markup disappears and the command seems to be fine.<br>\nVery nasty. ;) Couldn't reproduce it with Isabelle2013.</p>\n<p>Best<br>\n     Benedikt</p>",
        "id": 294255704,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912514
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nHallo,</p>\n<p>you probably missed the relevant entry in the NEWS for Isabelle 2013-1:</p>\n<p><strong>* Prover IDE -- Isabelle/Scala/jEdit </strong>*<br>\n[â€¦]</p>\n<ul>\n<li>Improved integration of HOL/Falso (see <a href=\"https://lists.cam.ac.uk/mailman/htdig/cl-isabelle-users/2013-March/msg00165.html\">https://lists.cam.ac.uk/mailman/htdig/cl-isabelle-users/2013-March/msg00165.html</a>)</li>\n</ul>\n<p>Personally, I am delighted to see this finally happening, I'd say it's<br>\nabout time. In fact, it may be the one thing that finally gets me to<br>\nabandon Proof General in favour of jEdit.</p>\n<p>Cheers,<br>\nManuel</p>",
        "id": 294255720,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912520
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nIt seems to work with any diverging command, not only simp.</p>\n<p>Thus, a minimal example is to type</p>\n<p>lemma False by (intro TrueE) &lt;RETURN&gt;</p>\n<p>and after you typed RETURN, the thing appears proven in jEdit.</p>\n<p>-- Peter</p>",
        "id": 294255762,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912526
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI still need to check what actually happens here.</p>\n<p>In the meantime just a few hints:</p>\n<p>* jEdit is a plain text editor, it proves nothing.</p>\n<p>* Isabelle/jEdit is a Prover IDE, which gives you some view on the<br>\n     interactive document model of Isabelle/Scala, where things really<br>\n     happen in conjunction with the Isabelle/ML process.</p>\n<p>* Just like in Proof General Emacs, there is no guarantee that something<br>\n     that \"looks checked\" actually is checked.  In Proof General the<br>\n     quick_and_dirty flag is enabled by default, and Isabelle/jEdit<br>\n     is likewise relatively bold in favour of performance, instead of<br>\n     strictness of checking.</p>\n<p>I've occasionally seen very bad drop-outs in the past, when some Swing GUI <br>\ncomponent was crashing and displaying outdated content, e.g. a solved goal <br>\nstate instead of a failed one.</p>\n<p>This does not mean that such things should happen too easily.  I do have <br>\nthe ambition to make the Prover IDE appear as correctly as feasible, even <br>\nthough authentic proof checking only happens in batch mode.  We have this <br>\nprinciple for almost 20 years already: only batch builds really count.</p>\n<p>Makarius</p>",
        "id": 294255786,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912538
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nSuch jokes are funny on 01-Apr, but not for production versions of <br>\nIsabelle, especially after an unusually long phase of testing release <br>\ncandidates.</p>\n<p>As there is a tendency here to blame Isabelle/jEdit versus Isabelle Proof <br>\nGeneral, I would like to remind that I was responsible for the latter as <br>\nwell.</p>\n<p>5 years ago, I started to move away from the TTY model of Proof General, <br>\nin order to support interactive document processing natively in <br>\nIsabelle/Scala.</p>\n<p>2 years ago, the first stable release of Isabelle/jEdit came out (as part <br>\nof Isabelle2011-1).</p>\n<p>October 2011 also marks the point where I stopped doing any work on Proof <br>\nGeneral.  As I had been the only one to do anything for Proof General over <br>\nseveral years, the number has dropped to zero ever since.</p>\n<p>People who are still using Proof General should see what they can do <br>\nthemselves to maintain it.  I can give some hints how to get involved -- <br>\nor just look at <a href=\"http://proofgeneral.inf.ed.ac.uk/devel\">http://proofgeneral.inf.ed.ac.uk/devel</a></p>\n<p>Makarius</p>",
        "id": 294255802,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912544
    },
    {
        "content": "<p>From: Christoph Feller &lt;<a href=\"mailto:c_feller@informatik.uni-kl.de\">c_feller@informatik.uni-kl.de</a>&gt;<br>\nHallo,</p>\n<p>I just wanted to add that I migrated to Isabelle/JEdit recently (with<br>\nIsabelle 2013-1) and I was rather confused by this behaviour, too.</p>\n<p>Regards,<br>\nChristoph Feller</p>",
        "id": 294255826,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912557
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe behaviour is definitely bad.  I still need to investigate it further.</p>\n<p>So far I can only declare the extra-long testing phase before the <br>\nIsabelle2013-1 release a failure.  Instead of spending several weeks <br>\nmyself in an alert situation to make sure that all goes well, I went on <br>\nvacation in the middle of the process.</p>\n<p>Problem reports then came in right after official lift-off, as was already <br>\nthe tendency in the last 2 or 3 times.</p>\n<p>Makarius</p>",
        "id": 294255902,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912575
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI confirm that this is a serious problem.  Thanks for reporting this.</p>\n<p>I need further digging in the sources and history to work to the bottom of <br>\nit.  I am also getting mentally ready for another release very soon.</p>\n<p>Are there any further serious problems in Isabelle2013-1 that nobody has <br>\ndared to report yet?</p>\n<p>It is part of the routine of release management to \"disprove\" the need for <br>\nimmediate changes in the last moment.  The incident here was actually <br>\nintroduced by trying to \"fix\" the sledgehammer panel at the end of <br>\nSeptember, just before the Isabelle2013-1-RC phase started <br>\n(<a href=\"https://mailmanbroy.informatik.tu-muenchen.de/pipermail/isabelle-dev/2013-September/004689.html\">https://mailmanbroy.informatik.tu-muenchen.de/pipermail/isabelle-dev/2013-September/004689.html</a>).</p>\n<p>This dilemma of accepting or not accepting issues sometimes discourages <br>\npeople to report things, but the principles of empiric science help: plain <br>\nobservations, no \"fixes\", no \"bugs\", no nonsense.</p>\n<p>Makarius</p>",
        "id": 294255933,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912588
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe situation is indeed so bad that I am about to produce a new stable <br>\nrelease of Isabelle2013-2 soon: the first (and probably only) release <br>\ncandidate is scheduled for Sun 24-Nov-2013 and the final release for Sun <br>\n01-Dec-2013.</p>\n<p>So if there is anything else to report, there are a few days left to do it <br>\nin a relaxed manner.  Changing a formal release candidate next week <br>\nrequires more weight and gravity.  The current state of affairs can be <br>\nseen here <a href=\"https://bitbucket.org/isabelle_project/isabelle-release/commits\">https://bitbucket.org/isabelle_project/isabelle-release/commits</a></p>\n<p>For completeness, here is a wrapup of the incident.</p>\n<p>Formally, the interactive front-ends (Proof General, Isabelle/jEdit, or <br>\nwhatever), are not required to be fully authentic.  Only batch builds <br>\nreally count at the end of the day.  But a system that breaks down too <br>\neasily is not a stable release.  (This concept is taken seriously for <br>\nIsabelle, against the tides of the time.)</p>\n<p>Here the problem is that editing a running task with internal parallel <br>\nforks can cause accidental interrupts, which are not reported as error to <br>\nthe front-end, because they should not happen under normal circumstances. <br>\nSo the proof status appeared OK on the surface, but the internal thm was <br>\nin a \"failed state\" -- as correctly recorded by the LCF-kernel.</p>\n<p>The source of the problem is twofold: (1) a genuine mistake in the <br>\nimplementation of the Execution.fork mechanism of PIDE, which caused the <br>\naccidental interrupt of a running task (Sep-2013).  (2) failure to report <br>\nthe interrupt as error on purpose (!) \"to avoid confusion in log etc.\" as <br>\nthe changelog entry says (Oct-2012).  The \"log etc.\" refers to batch <br>\nbuilds, TTY mode, and Proof General, which is easily confused by error <br>\nmessages coming in the wrong moment.</p>\n<p>This illustrates again the problems of having too many old and new things <br>\nin an increasingly complex system.  I am trying for years to unify the <br>\nbatch build with the PIDE interaction model, which is difficult in its own <br>\nright.  The legacy interaction modes of TTY or Proof General are adding to <br>\nthe complication.</p>\n<p>Last spring, I actually dismantled the old PGIP experiment, which greatly <br>\nsimplified the classic Proof General mode and recovered some long lost <br>\nfunctionality.  Likewise, a much greater relieve will happen when Proof <br>\nGeneral itself comes out of use and can be dismantled.</p>\n<p>I've no idea how long it will take to sort it all out.  The number of <br>\npeople who are still using Proof General is unclear to me. When traveling <br>\nto ITP 2013 this summer, my guess was 40% Isabelle/jEdit vs. 60% Proof <br>\nGeneral among power users, but it turned out the opposite when traveling <br>\nback home.</p>\n<p>Maybe we should make a \"coming out\" session at ITP 2014: \"My name is <br>\nP. W. User, ... and I am still using Proof General\" :-)</p>\n<p>(Further elaboration Proof General issues deserve a separate mail thread.)</p>\n<p>Makarius</p>",
        "id": 294256035,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912630
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nThat's what I was talking about. In the the drop-down box, there's the <br>\nstring \"Previously entered strings:\". There's nothing ever there except <br>\nfor that message.</p>\n<p>Regards,<br>\nGB</p>\n<p>theory i131123a__scala_hask_for_meta_obj_imps<br>\nimports Complex_Main<br>\nbegin<br>\ndefinition metaImp :: \"prop =&gt; prop =&gt; prop\" where<br>\n   \"metaImp x y == (PROP x ==&gt; PROP y)\"</p>\n<p>definition objToMetaImp :: \"bool =&gt; bool =&gt; prop\" where<br>\n   \"objToMetaImp x y == (x ==&gt; y)\"</p>\n<p>definition objImp :: \"bool =&gt; bool =&gt; bool\" where<br>\n   \"objImp x y == (x --&gt; y)\"</p>\n<p>export_code metaImp objToMetaImp objImp in Scala file \"i131123a.scala\"<br>\nexport_code metaImp objToMetaImp objImp in Haskell file \".\"<br>\nend</p>",
        "id": 294256080,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912649
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe history text field updates its history when you type RETURN into it, <br>\nwhich then also has the effect of \"Apply\". The Apply button alone does not <br>\nupdate the history.</p>\n<p>Since the Sledgehammer panel is new, I did not have any ambitions to make <br>\nit super fancy.  Just plain and solid functionality.</p>\n<p>Note that for Isabelle2013-2, I did already change the spontaneous restart <br>\nbehaviour of sledgehammer after editing the text: <br>\n<a href=\"https://bitbucket.org/isabelle_project/isabelle-release/commits/50169ef2cca3\">https://bitbucket.org/isabelle_project/isabelle-release/commits/50169ef2cca3</a></p>\n<p>You can try that when Isabelle2013-2-RC1 appears.</p>\n<p>Makarius</p>",
        "id": 294256099,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912655
    },
    {
        "content": "<p>From: Gottfried Barrow &lt;<a href=\"mailto:gottfried.barrow@gmx.com\">gottfried.barrow@gmx.com</a>&gt;<br>\nOn 11/22/2013 4:16 PM, Makarius wrote:</p>\n<blockquote>\n<p>The history text field updates its history when you type RETURN into <br>\nit, which then also has the effect of \"Apply\". The Apply button alone <br>\ndoes not update the history.</p>\n</blockquote>\n<p>That does it. In the find panel and sledgehammer panel, I was executing <br>\nthe commands with the mouse.</p>\n<p>I make a tangent here, which is not a complaint. It's just to inform you <br>\non how some people work, and how it's related to getting info in the IDE.</p>\n<p>I work a lot with my right hand on the mouse, and my left hand far away <br>\nfrom the keyboad. That causes me to prefer looking at info in the output <br>\npanel, rather than moving my left hand to the keyboard to press the <br>\ncontrol key.</p>\n<p>There are also two other things which prevent me from taking full <br>\nadvantage of the info you make available. In the IDE gutter, I always <br>\nhave line numbers displayed. Consequently, your icons aren't displayed. <br>\nAs far as I can tell, I can't show both line numbers and information <br>\nicons in the gutter.</p>\n<p>I also set the tooltip delay to about 1.5 seconds, because in Windows, <br>\nwhen I start typing, I immediately get an error, and a popup window pops <br>\nup where the mouse cursor is, which is where the text cursor is, and it <br>\nbeeps at me for every character I type. The workaround is to move the <br>\nmouse cursor away from the text cursor before I begin typing, but I <br>\ndon't remember to do that, so I set the tooptip delay to be long,  which <br>\nis not optimal for cntl-mouse hovering.</p>\n<p>You don't need to respond to any of that. I say it to explain that there <br>\nare a number of reasons that keep me hooked on output panel for info, <br>\namong which is wanting to see lots of info at once, primarily to see all <br>\nof the typing, bracketing, and constants.</p>\n<blockquote>\n<p>Note that for Isabelle2013-2, I did already change the spontaneous <br>\nrestart behaviour of sledgehammer after editing the text: <br>\n<a href=\"https://bitbucket.org/isabelle_project/isabelle-release/commits/50169ef2cca3\">https://bitbucket.org/isabelle_project/isabelle-release/commits/50169ef2cca3</a></p>\n<p>You can try that when Isabelle2013-2-RC1 appears.</p>\n</blockquote>\n<p>Okay. I'll try it out. I never actually switched beyond <br>\nIsabelle2013-1-RC3, except for a small test of Isabelle2013-1 on my laptop.</p>\n<p>Thanks,<br>\nGB</p>",
        "id": 294256124,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912667
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nSuch precise descriptions of the manner of working are very important, to <br>\nhelp figure out further refinements of the Prover IDE.</p>\n<p>Makarius</p>",
        "id": 294256209,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912685
    }
]