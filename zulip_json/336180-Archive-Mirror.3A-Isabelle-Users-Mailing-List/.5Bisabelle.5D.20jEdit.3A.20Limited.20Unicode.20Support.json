[
    {
        "content": "<p>From: Tjark Weber &lt;<a href=\"mailto:webertj@in.tum.de\">webertj@in.tum.de</a>&gt;<br>\nHi,</p>\n<p>I just noticed that Isabelle/jEdit (on Linux) does not support the same<br>\nUnicode characters as ProofGeneral: when opening src/HOL/ex/Chinese.thy<br>\nin Isabelle/jEdit, I see lots of black squares. In ProofGeneral 4.1/<br>\nEmacs 23.3.1, I see proper Chinese characters.</p>\n<p>Is this a (possibly well-known) current limitation of Isabelle/jEdit,<br>\nor a problem with my local configuration?</p>\n<p>Best regards,<br>\nTjark</p>",
        "id": 294163206,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660853963
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nYes, these things are all too well-known.  I am struggling with Unicode <br>\nfor several years already.  What you see in Isabelle/Scala/jEdit of <br>\nIsabelle2012 works in almost all practical situations, so that one could <br>\nget the idea that everything should just work, but there are boundary <br>\ncases where it doesn't.</p>\n<p>Unicode on the JVM is particularly delicate.  On Mac OS, the JVM 1.6 by <br>\nApple would collect glyphs from other fonts on the system on demand, in <br>\nthe same way Firefox would do for example (but this can also lead to <br>\nsurprises).  So here the Chinese.thy would look basically OK, potentially <br>\nwith slightly odd font-metrics for the Chinise glyphs.</p>\n<p>On Linux and Windows, the official JVM by Oracle does nothing like that. <br>\nIt just renders the Unicode points that are available in the (single) font <br>\nthat you give to the jEdit text area.</p>\n<p>Isabelle/Scala relies on the IsabelleText font, which is my own collection <br>\nof many glyphs, including many for Eastern Europe and the Middle East, but <br>\nnot the Far East (which I cannot read myself, so I did not dare to play <br>\nwith that).</p>\n<p>More recent versions of jEdit provide another user-space glyph replacement <br>\nfacility for the text area (not the rest of the editor GUI elements), but <br>\nI did not try it out yet.  It will probably interfere with my text painter <br>\nplugin for jEdit, which is required for sub/superscripts with in the text <br>\nbuffer.</p>\n<p>Makarius</p>",
        "id": 294163209,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660853965
    }
]