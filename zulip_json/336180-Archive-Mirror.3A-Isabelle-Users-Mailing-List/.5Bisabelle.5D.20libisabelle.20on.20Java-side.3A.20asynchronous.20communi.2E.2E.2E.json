[
    {
        "content": "<p>From: Walther Neuper &lt;<a href=\"mailto:wneuper@ist.tugraz.at\">wneuper@ist.tugraz.at</a>&gt;<br>\nOn 2015-08-11 18:20, Lars Hupel wrote:</p>\n<blockquote>\n<blockquote>\n<p>questions:<br>\n(1) As you say, libisabelle is dedicated to \"non-IDE applications\" So<br>\nthe synchronous Protocol makes sense. However, Isac is designed for an<br>\nasynchronous communication between Java frontend and the Isabelle/Isac<br>\nbackend -- what are the obstacles to have libisabelle with asynchronous<br>\ncommunication?<br>\nIt is completely asynchronous internally. It uses a concept of \"futures\"<br>\nwhich is available in both ML [*<em>] and Scala [</em>]. Simply speaking,<br>\nwhenever a new operation is invoked from Scala, it is sent to the prover<br>\nasynchronously and processed by some thread in a worker farm.</p>\n</blockquote>\n<p>Could you describe how the asynchronous communication worked previously in<br>\nIsac?</p>\n</blockquote>\n<p>The Isac Java front-end has lots of different methods addressing the <br>\nMath_Engine in Isabelle/Isac [1] and only one kind of reply announcing <br>\n\"the calculation has been changed successfully\" [2] (or an error <br>\nmessage); and then the front-end is free to request further data from <br>\nthe Math_Engine as required.</p>\n<p>However, since we used \"isabelle tty\" so far, this asynchronous design <br>\ndid not yet come into effect due to the synchronous nature of <br>\nstdin/stdout (which we found out only after the design phase).</p>\n<blockquote>\n<p>Isabelle2015 support is there (for the Scala API), I just need to figure<br>\nout how to reconstruct Java support without breaking the previous API<br>\nmuch.</p>\n</blockquote>\n<p>This sounds great; we'd appreciate to see Isac's initial asynchronous <br>\ndesign at work.</p>\n<p>Walther</p>\n<p>[1] Java-side:<br>\n<a href=\"https://intra.ist.tugraz.at/hg/isac/file/32f5e8e1c538/isac-java/src/java/isac/interfaces/IToCalc.java\">https://intra.ist.tugraz.at/hg/isac/file/32f5e8e1c538/isac-java/src/java/isac/interfaces/IToCalc.java</a><br>\n      ML-side:<br>\n<a href=\"https://intra.ist.tugraz.at/hg/isa/file/f323be267fa2/src/Tools/isac/Frontend/interface.sml\">https://intra.ist.tugraz.at/hg/isa/file/f323be267fa2/src/Tools/isac/Frontend/interface.sml</a><br>\n[2] <br>\n<a href=\"https://intra.ist.tugraz.at/hg/isac/file/32f5e8e1c538/isac-java/src/java/isac/interfaces/IToUser.java\">https://intra.ist.tugraz.at/hg/isac/file/32f5e8e1c538/isac-java/src/java/isac/interfaces/IToUser.java</a></p>\n<blockquote>\n<p>[*] See the introductory paragraphs in<br>\n&lt;<a href=\"http://docs.scala-lang.org/sips/completed/futures-promises.html\">http://docs.scala-lang.org/sips/completed/futures-promises.html</a>&gt;<br>\n[**] Sec 3.1 in&lt;<a href=\"http://www4.in.tum.de/~wenzelm/papers/itp-smp.pdf\">http://www4.in.tum.de/~wenzelm/papers/itp-smp.pdf</a>&gt;</p>\n</blockquote>",
        "id": 294651961,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661166453
    }
]