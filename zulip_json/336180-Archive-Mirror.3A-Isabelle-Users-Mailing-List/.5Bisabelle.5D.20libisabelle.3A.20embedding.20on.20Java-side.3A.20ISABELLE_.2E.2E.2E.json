[
    {
        "content": "<p>From: Walther Neuper &lt;<a href=\"mailto:wneuper@ist.tugraz.at\">wneuper@ist.tugraz.at</a>&gt;<br>\nLars,</p>\n<p>thank you very much for continuous support!</p>\n<p>Having slept on your suggestionfor anight ...</p>\n<blockquote>\n<blockquote>\n<p>... Executing java at the appropriate directory works with absolute<br>\npaths now:<br>\n    libisabelle$ java -jar  /home/wneuper/proto4/dist/isac-java.jar<br>\n/home/wneuper/proto4/repos/isac-java/src/java/properties/BridgeMain.properties<br>\nI suspect this can be solved by adapting the path in</p>\n</blockquote>\n<p>JSystem sys = JSystem.instance(new File(\".\"), \"Protocol\");</p>\n<p>(instead of \".\", use the appropriate path)</p>\n</blockquote>\n<p>... now I \"suspect\" we have understood the interdependencies between the <br>\nmany paths in relation with the many tools (Java, sbt, Eclipse) and now <br>\ntell libisabelle-full.jar the path to the ROOT of Protocol ...</p>\n<p>JSystem sys = JSystem.instance(new <br>\nFile(\"/home/wneuper/proto4/libisabelle/.\"), \"Protocol\");</p>\n<p>... and become free to run java from any directory \"xxx\" we want:</p>\n<p>xxx$ java -cp <br>\n/home/wneuper/proto4/libisabelle/full/target/scala-2.11/libisabelle-full.jar <br>\nexamples.src.main.java.Mini_Test</p>\n<p>!!!!!!!!!!!!!!! THUS DEVELOPMENT WITHIN  Eclipse  BECOMES POSSIBLE, <br>\nbecause the paths are free now (to be set in some property file [1]) <br>\n!!!!!!!!!!!!!!!</p>\n<blockquote>\n<blockquote>\n<p>However, now this question comes up:<br>\nIs there eventually a chance (if (1) or (2) are solved) to run our<br>\napplication from Eclipse, if libisabelle is so sensible with respect to<br>\npaths?<br>\nIn principle, this should be possible.</p>\n</blockquote>\n</blockquote>\n<p>Yeahhhhhh, one of the two obstacles for using Eclipse, the paths, is <br>\nremoved. Now only the second obstacle, ISABELLE_HOME, is remaining:</p>\n<blockquote>\n<p>Environment variables in Java are<br>\ntricky, but luckily, Isabelle's Scala code allows setting the path in a<br>\ndifferent way. I'll put it on my list.</p>\n</blockquote>\n<p>Setting ISABELLE_HOME via libisabelle would be **very helpful, <br>\nimmediately** because our development appears to be too complicated [2]  <br>\nto be done without Eclipse.</p>\n<p>So each day setting ISABELLE_HOME would slide towards top on your list <br>\nwould be highly appreciated!</p>\n<p>Walther</p>\n<p>[1] \"examples.src.main.java.Mini_Test\" is relative to <br>\n\"libisabelle-full.jar\". The \"package examples.src.main.java\" turned out <br>\nnecessary for \"import examples.src.main.java.ConvertXML\" from isac-java. <br>\nConvertXML.scala is located in the same directory with Mini_Test, which <br>\ncould be changed, of course.<br>\n[2] The operation_setup for our minimal example reflects the Java-side, <br>\nwhich has not been designed for the present situation:<br>\n<a href=\"https://github.com/wneuper/libisabelle/blob/master/libisabelle/src/main/isabelle/Protocol/Protocol.thy\">https://github.com/wneuper/libisabelle/blob/master/libisabelle/src/main/isabelle/Protocol/Protocol.thy</a></p>",
        "id": 294648935,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165309
    }
]