[
    {
        "content": "<p>From: Walther Neuper &lt;<a href=\"mailto:wneuper@ist.tugraz.at\">wneuper@ist.tugraz.at</a>&gt;<br>\nHi Lars,</p>\n<p>while this makes very optimistic ...</p>\n<blockquote>\n<p>xxx$ java -cp <br>\n/home/wneuper/proto4/libisabelle/full/target/scala-2.11/libisabelle-full.jar <br>\nexamples.src.main.java.Mini_Test</p>\n<p>!!!!!!!!!!!! THUS DEVELOPMENT WITHIN  Eclipse  BECOMES POSSIBLE, <br>\nbecause the paths are free now (to be set in some property file) <br>\n!!!!!!!!!!!!</p>\n</blockquote>\n<p>we just found something not implemented with a path relative to <br>\nlibisabelle: thus we'll face another problem when developing within Eclipse:</p>\n<h1>we pack libisabelle-full.jar into isac-java.jar (analogously to using</h1>\n<p>Run Configurations in Eclipse) as a library</p>\n<h1>we run isac-java.jar (with main BridgeMain):</h1>\n<p>libisabelle$ java -jar /home/wneuper/proto4/dist/isac-java.jar <br>\n/home/wneuper/proto4/repos/isac-java/src/java/properties/BridgeMain.properties</p>\n<p>... which works, but changing the directory still raises an error:</p>\n<h1>/home/wneuper/proto4$ java -jar</h1>\n<p>/home/wneuper/proto4/dist/isac-java.jar <br>\n/home/wneuper/proto4/repos/isac-java/src/java/properties/BridgeMain.properties<br>\n    Exception in thread \"main\" java.lang.RuntimeException: Bad session <br>\nroot directory: \"/home/wneuper/proto4\" at <br>\nisabelle.Library$ERROR$.apply(library.scala:20)</p>\n<p>So there seems to be something concerning session management in <br>\nlibisabelle [1], which is not relative to the directory libisabelle, still.</p>\n<p>Assuming the above is right, could you, please, look at it together with <br>\nISABELLE_HOME ...</p>\n<blockquote>\n<p>but luckily, Isabelle's Scala code allows setting the path in a<br>\ndifferent way. I'll put it on my list.</p>\n</blockquote>\n<p>With best wishes,<br>\nWalther</p>\n<p>[1] This refers to<br>\n<a href=\"https://github.com/larsrh/libisabelle/commit/29bce1cdb2efe7d9f21e1a5d87f710299600c75f\">https://github.com/larsrh/libisabelle/commit/29bce1cdb2efe7d9f21e1a5d87f710299600c75f</a><br>\nand<br>\n<a href=\"https://github.com/wneuper/libisabelle/commit/cba0cf519d1d761a54144c2bca0cd0de478da0a6\">https://github.com/wneuper/libisabelle/commit/cba0cf519d1d761a54144c2bca0cd0de478da0a6</a></p>",
        "id": 294648953,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165315
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;</p>\n<blockquote>\n<p>Assuming the above is right, could you, please, look at it together with<br>\nISABELLE_HOME ...</p>\n<blockquote>\n<p>but luckily, Isabelle's Scala code allows setting the path in a<br>\ndifferent way. I'll put it on my list.</p>\n</blockquote>\n</blockquote>\n<p>Try the following code (untested):</p>\n<p>isabelle.Isabelle_System.init(\"/path/to/isabelle_home\", \"\")</p>\n<p>In your case, it would go right before the creation of the \"JSystem\"<br>\ninstance. This should allow you to start your program without<br>\nISABELLE_HOME set.</p>\n<blockquote>\n<p><a href=\"https://github.com/wneuper/libisabelle/commit/cba0cf519d1d761a54144c2bca0cd0de478da0a6\">https://github.com/wneuper/libisabelle/commit/cba0cf519d1d761a54144c2bca0cd0de478da0a6</a></p>\n</blockquote>\n<p>It looks like there is a typo in that file ... Did you really mean to use</p>\n<p>/home/wneuper/proto4/libisabelle./</p>\n<p>instead of</p>\n<p>/home/wneuper/proto4/libisabelle/</p>\n<p>?</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294649307,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165444
    },
    {
        "content": "<p>From: Walther Neuper &lt;<a href=\"mailto:wneuper@ist.tugraz.at\">wneuper@ist.tugraz.at</a>&gt;<br>\nLars,</p>\n<p>thank you very much for continuous support!</p>\n<blockquote>\n<p>Try the following code (untested):</p>\n<p>isabelle.Isabelle_System.init(\"/path/to/isabelle_home\", \"\")<br>\nIn your case, it would go right before the creation of the \"JSystem\"<br>\ninstance. This should allow you to start your program without<br>\nISABELLE_HOME set.</p>\n</blockquote>\n<p>Great, this worked immediately !!!</p>\n<p>(to be precise: we don't get the error \"Unknown Isabelle home directory\" <br>\nany more; whether it works as intended will become evident when <br>\ncontinuing development now within Eclipse)</p>\n<p>Thanks,<br>\nWalther</p>\n<p>PS: you were right ...</p>\n<blockquote>\n<p>It looks like there is a typo in that file ... Did you really mean to use</p>\n<p>/home/wneuper/proto4/libisabelle./<br>\n... this works now with: /home/wneuper/proto4/libisabelle/.</p>\n</blockquote>",
        "id": 294649313,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165450
    },
    {
        "content": "<p>From: Walther Neuper &lt;<a href=\"mailto:wneuper@ist.tugraz.at\">wneuper@ist.tugraz.at</a>&gt;<br>\nLars,</p>\n<p>since libisabelle's [1] usability is quite pleasing ...</p>\n<p>..., it's embedding on the Isabelle/Isac-side is sufficient for the <br>\npresent phase and the first step of embedding on the Java-side is done, <br>\nwe give a summary of our experiences:</p>\n<p>(1) Embedding on the Isabelle-side would benefit from libisabelle as an <br>\nIsabelle component: then one could drop the very specific ./sbt, which <br>\nenforces at least one absolute path in theory imports [2].</p>\n<p>(2) Embedding on the Java-side benefits from the Scala IDE, which <br>\nsmootly combines Java files and Scala files [3].</p>\n<p>(3) Scala's pattern matching nicely handles transformation from XML.Tree <br>\nto Java Objects and vice versa [4, 5, 6].</p>\n<p>And finally two questions:<br>\n(1) As you say, libisabelle is dedicated to \"non-IDE applications\" So <br>\nthe synchronous Protocol makes sense. However, Isac is designed for an <br>\nasynchronous communication between Java frontend and the Isabelle/Isac <br>\nbackend -- what are the obstacles to have libisabelle with asynchronous <br>\ncommunication?</p>\n<p>(2) Could you, please, include an example in libisabelle, where you ship <br>\na lambda-term through PIDE/xml in both directions ?</p>\n<p>Eagerly awaiting libisabelle's new version running on Isabelle2015,</p>\n<p>Walther</p>\n<p>[1] <a href=\"https://github.com/larsrh/libisabelle\">https://github.com/larsrh/libisabelle</a><br>\n[2] <br>\n<a href=\"https://github.com/wneuper/libisabelle/blob/master/libisabelle/src/main/isabelle/Protocol/Protocol.thy#L3\">https://github.com/wneuper/libisabelle/blob/master/libisabelle/src/main/isabelle/Protocol/Protocol.thy#L3</a><br>\n[3] <br>\n<a href=\"https://intra.ist.tugraz.at/hg/isac/file/419b45750882/isac-java/src/java/isac/bridge/xml\">https://intra.ist.tugraz.at/hg/isac/file/419b45750882/isac-java/src/java/isac/bridge/xml</a><br>\n[4] <br>\n<a href=\"https://intra.ist.tugraz.at/hg/isac/file/419b45750882/isac-java/src/java/isac/bridge/xml/DataTypes.scala\">https://intra.ist.tugraz.at/hg/isac/file/419b45750882/isac-java/src/java/isac/bridge/xml/DataTypes.scala</a><br>\n[5] <br>\n<a href=\"https://intra.ist.tugraz.at/hg/isac/file/419b45750882/isac-java/src/java/isac/bridge/xml/IsaToJava.scala\">https://intra.ist.tugraz.at/hg/isac/file/419b45750882/isac-java/src/java/isac/bridge/xml/IsaToJava.scala</a><br>\n[6]https://intra.ist.tugraz.at/hg/isac/file/419b45750882/isac-java/src/java/isac/bridge/xml/JavaToIsa.scala</p>",
        "id": 294651900,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661166414
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nHi,</p>\n<blockquote>\n<p>(1) Embedding on the Isabelle-side would benefit from libisabelle as an<br>\nIsabelle component: then one could drop the very specific ./sbt, which<br>\nenforces at least one absolute path in theory imports [2].</p>\n</blockquote>\n<p>that is a good point which I haven't considered before. It will probably<br>\nnot get rid of the './sbt' script but I can see how it would be useful in<br>\ngeneral.</p>\n<blockquote>\n<p>And finally two questions:<br>\n(1) As you say, libisabelle is dedicated to \"non-IDE applications\" So<br>\nthe synchronous Protocol makes sense. However, Isac is designed for an<br>\nasynchronous communication between Java frontend and the Isabelle/Isac<br>\nbackend -- what are the obstacles to have libisabelle with asynchronous<br>\ncommunication?</p>\n</blockquote>\n<p>It is completely asynchronous internally. It uses a concept of \"futures\"<br>\nwhich is available in both ML [*<em>] and Scala [</em>]. Simply speaking,<br>\nwhenever a new operation is invoked from Scala, it is sent to the prover<br>\nasynchronously and processed by some thread in a worker farm.</p>\n<p>The libisabelle Java API only appears to be synchronous because there,<br>\nI've added \"barriers\" which block on the results from the prover. By<br>\nswitching to the Scala API, you could leverage concurrency and<br>\nparallelism. Java 8 supports a \"future\"-like concept now, so in principle<br>\nthis arbitrary restriction could be dropped. In practice I haven't<br>\ninvestigated yet how good the interoperability between Java 8 and Scala is<br>\nin that regard.</p>\n<p>Could you describe how the asynchronous communication worked previously in<br>\nIsac?</p>\n<blockquote>\n<p>(2) Could you, please, include an example in libisabelle, where you ship<br>\na lambda-term through PIDE/xml in both directions ?</p>\n</blockquote>\n<p>What exactly do you mean here? An Isabelle term? Or are you talking about<br>\nan ML or a Scala function?</p>\n<blockquote>\n<p>Eagerly awaiting libisabelle's new version running on Isabelle2015</p>\n</blockquote>\n<p>Isabelle2015 support is there (for the Scala API), I just need to figure<br>\nout how to reconstruct Java support without breaking the previous API<br>\nmuch.</p>\n<p>Lars</p>\n<p>[*] See the introductory paragraphs in<br>\n&lt;<a href=\"http://docs.scala-lang.org/sips/completed/futures-promises.html\">http://docs.scala-lang.org/sips/completed/futures-promises.html</a>&gt;<br>\n[**] Sec 3.1 in &lt;<a href=\"http://www4.in.tum.de/~wenzelm/papers/itp-smp.pdf\">http://www4.in.tum.de/~wenzelm/papers/itp-smp.pdf</a>&gt;</p>",
        "id": 294651909,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661166420
    }
]