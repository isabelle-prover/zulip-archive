[
    {
        "content": "<p>From: Walther Neuper &lt;<a href=\"mailto:wneuper@ist.tugraz.at\">wneuper@ist.tugraz.at</a>&gt;<br>\nHi Lars,</p>\n<p>Since libisabelle's embedding works on the ML-side, we have turned to <br>\nthe Java-side.</p>\n<p>Now we run into nasty situations for a while, give a report about our <br>\nstate (where we face obstacles from Eclipse (1) | Java coding (2)) and <br>\nconclude with a question (3):</p>\n<p>(0) Embedding libisabelle's initialisation into our isabisac/isac-java <br>\ngives no syntax/semantics errors in Eclipse, if libisabelle-full.jar is <br>\nincluded as a library in isabisac/isac-java:<br>\n    :<br>\n    import edu.tum.cs.isabelle.japi.JSystem;<br>\n    import edu.tum.cs.isabelle.japi.Operations;<br>\n    import isabelle.XML;<br>\n    import java.io.File;<br>\n    :<br>\n    JSystem sys = JSystem.instance(new File(\".\"), \"Protocol\");<br>\n    :<br>\nThe unsolved problem, however, is how to set ISABELLE_HOME for libisabelle:</p>\n<p>(1) Eclipse provides isac-java &gt; Run &gt; Configurations &gt; Environment:<br>\n     Variable: ISABELLE_HOME<br>\n     Value: /usr/local/isabisac<br>\nbut running isac-java causes the error we already know from running <br>\nHello_PIDE:</p>\n<p>Exception in thread \"main\" java.lang.RuntimeException: Unknown <br>\nIsabelle home directory</p>\n<p>(2) We still haven't found a way to \"export <br>\nISABELLE_HOME=/usr/local/isabisac\" from within Java code. The problem <br>\nseems to be, that Java opens a new shell at any contact with the <br>\noperating system; anyway, we always get the same error as in (1).</p>\n<p>(3) Overcoming (1..2) we let Eclipse export to isac-java.jar and use the <br>\nshell:<br>\n    isac-java$ export ISABELLE_HOME=/usr/local/isabisac<br>\n    isac-java$ java -jar dist/isac-java.jar <br>\n./src/java/properties/BridgeMain.properties<br>\n      Starting Bridge...<br>\n      Exception in thread \"main\" java.lang.RuntimeException: Bad session <br>\nroot directory: \"/home/wneuper/proto4/repos/isac-java\"</p>\n<p>The message \"Bad session root directory\" comes from <br>\nlibisabelle/pide-core/../build.scala:</p>\n<p>What does this message mean here, after libisabelle-full.jar has been <br>\ncreated by ./sbt without errors ?</p>\n<p>Cheers,<br>\nWalther</p>\n<p>PS: We are working on (1) and (2), because (3) forces to resign debugging.</p>",
        "id": 294648714,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165221
    },
    {
        "content": "<p>From: Walther Neuper &lt;<a href=\"mailto:wneuper@ist.tugraz.at\">wneuper@ist.tugraz.at</a>&gt;<br>\nHi Lars,</p>\n<p>sorry for the noise ...</p>\n<blockquote>\n<p>(3) Overcoming (1..2) we let Eclipse export to isac-java.jar and use <br>\nthe shell:<br>\n   isac-java$ export ISABELLE_HOME=/usr/local/isabisac<br>\n   isac-java$ java -jar dist/isac-java.jar <br>\n./src/java/properties/BridgeMain.properties<br>\n     Starting Bridge...<br>\n     Exception in thread \"main\" java.lang.RuntimeException: Bad <br>\nsession root directory: \"/home/wneuper/proto4/repos/isac-java\"</p>\n</blockquote>\n<p>... Executing java at the appropriate directory works with absolute <br>\npaths now:<br>\n    libisabelle$ java -jar  /home/wneuper/proto4/dist/isac-java.jar <br>\n/home/wneuper/proto4/repos/isac-java/src/java/properties/BridgeMain.properties</p>\n<p>However, now this question comes up:<br>\nIs there eventually a chance (if (1) or (2) are solved) to run our <br>\napplication from Eclipse, if libisabelle is so sensible with respect to <br>\npaths?</p>\n<blockquote>\n<p>PS: We are working on (1) and (2), because (3) forces to resign <br>\ndebugging.</p>\n</blockquote>\n<p>Cheers, Walther</p>",
        "id": 294648724,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165223
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;</p>\n<blockquote>\n<p>... Executing java at the appropriate directory works with absolute<br>\npaths now:<br>\n   libisabelle$ java -jar  /home/wneuper/proto4/dist/isac-java.jar<br>\n/home/wneuper/proto4/repos/isac-java/src/java/properties/BridgeMain.properties</p>\n</blockquote>\n<p>I suspect this can be solved by adapting the path in</p>\n<p>JSystem sys = JSystem.instance(new File(\".\"), \"Protocol\");</p>\n<p>(instead of \".\", use the appropriate path)</p>\n<blockquote>\n<p>However, now this question comes up:<br>\nIs there eventually a chance (if (1) or (2) are solved) to run our<br>\napplication from Eclipse, if libisabelle is so sensible with respect to<br>\npaths?</p>\n</blockquote>\n<p>In principle, this should be possible. Environment variables in Java are<br>\ntricky, but luckily, Isabelle's Scala code allows setting the path in a<br>\ndifferent way. I'll put it on my list.</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294648747,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661165236
    }
]