[
    {
        "content": "<p>From: Walther Neuper &lt;<a href=\"mailto:wneuper@ist.tugraz.at\">wneuper@ist.tugraz.at</a>&gt;<br>\nHi Lars,</p>\n<p>Thank you for help, libisabelle says \"hello world\". I also started to <br>\nadd an operation to be executed for test in <br>\n<a href=\"https://github.com/wneuper/libisabelle\">https://github.com/wneuper/libisabelle</a>, which causes an error.</p>\n<p>With debugging I run into questions about a comfortable project setup. I <br>\nsee libisabelle/sbt with the comment</p>\n<blockquote>\n<h1>A more capable sbt runner, coincidentally also called sbt.</h1>\n</blockquote>\n<p>Before I study this and also Scala Build Tool for Eclipse in order to <br>\nselect the most convenient way, I'd like to ask you:</p>\n<p>How do you organize this kind of project involving Java, Scala and <br>\nIsabelle/ML ?<br>\nWhich project setup would you recommend ?</p>\n<p>Walther</p>\n<p>PS: We have the Java-part of isac in Eclipse since ever and I now have <br>\nstarted with Scala IDE for Eclipse.</p>",
        "id": 294328205,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660929305
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nIt depends which project management tool in the JVM world you like best, <br>\nor understand, or are forced to use due to other side-conditions (e.g. the <br>\nIDE).</p>\n<p>Many years ago, I have once used the default \"ant\" setup for Netbeans <br>\nprojects, but it turned out inaccessible and unusable to non-experts of <br>\nNetbeans.  It is now a bit old-fashioned anyway.</p>\n<p>Then I made a counter-movement away from JVM-based project management <br>\ntools, just with minimalistic shell scripts around Isabelle tools.  The <br>\nlatter is briefly documented in the \"system\" manual as follows:</p>\n<p>section {* Scala compiler \\label{sec:tool-scalac} *}</p>\n<p>text {* The @{tool_def scalac} tool is a direct wrapper for the Scala<br>\n   compiler; see also @{tool scala} above.  The command line arguments<br>\n   are that of the underlying Scala version.</p>\n<p>This allows to compile further Scala modules, depending on existing<br>\n   Isabelle/Scala functionality.  The resulting class or jar files can<br>\n   be added to the Java classpath using the @{verbatim classpath} Bash<br>\n   function that is provided by the Isabelle process environment.  Thus<br>\n   add-on components can register themselves in a modular manner, see<br>\n   also \\secref{sec:components}.</p>\n<p>Note that jEdit \\cite{isabelle-jedit} has its own mechanisms for<br>\n   adding plugin components, which needs special attention since<br>\n   it overrides the standard Java class loader.  *}</p>\n<p>Makarius</p>",
        "id": 294328362,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660929366
    },
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;</p>\n<blockquote>\n<p>I also started to add an operation to be executed for test in <br>\n<a href=\"https://github.com/wneuper/libisabelle\">https://github.com/wneuper/libisabelle</a>, which causes an error.</p>\n</blockquote>\n<p>Just had a quick look at the sources. What seems to be the problem? The<br>\ninvocation of 'sendCommand' looks correct to me.</p>\n<blockquote>\n<p>With debugging I run into questions about a comfortable project <br>\nsetup. I see libisabelle/sbt with the comment</p>\n<blockquote>\n<h1>A more capable sbt runner, coincidentally also called sbt.</h1>\n</blockquote>\n</blockquote>\n<p>The naming of that script is rather unfortunate. The \"official\" build<br>\ntool for Scala by Typesafe is \"sbt\", but it's not very easy to give<br>\ncross-platform instructions on how to set it up. The script you've been<br>\nlooking at is also called \"sbt\" and is little more than a cross-platform<br>\n(well, except Windows) way to download and set up the actual build tool.<br>\nNone of that is actually relevant for your main project, though, because ...</p>\n<blockquote>\n<p>How do you organize this kind of project involving Java, Scala and <br>\nIsabelle/ML ?</p>\n</blockquote>\n<p>... for 'libisabelle' specifically I would recommend to just treat the<br>\ngenerated JAR file ('libisabelle-full.jar') as \"just another dependency\"<br>\nand drop it into some suitable folder of your usual Isac project<br>\ndirectory. There's no need to combine everything together into one big<br>\nproject. Ideally, you wouldn't even change the source code of 'libisabelle'.</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294328382,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660929381
    },
    {
        "content": "<p>From: Walther Neuper &lt;<a href=\"mailto:wneuper@ist.tugraz.at\">wneuper@ist.tugraz.at</a>&gt;<br>\nMakarius, Lars,</p>\n<p>Thank you for help, and in particular thank you for the work which <br>\nraised my help requests.</p>\n<p>This work, a restricted version of PIDE, might be life-giving for <br>\nvarious tools, which take advantage of knowledge mechanised within <br>\nIsabelle without need to extend this knowledge from their side --- and <br>\nfor which restricting PIDE makes sense.</p>\n<p>In charge of the isac-project I'm well motivated to contribute to making <br>\nthis work handy for everyone; presently I'm only able to ask questions, <br>\non a practical level \"PIDE by example\" and on a more theoretical level <br>\non \"questions about PIDE architecture\".</p>\n<p>So I'll fork this mail thread into the above two \"headlines\" subsequently.</p>\n<p>Walther</p>",
        "id": 294328490,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660929428
    }
]