[
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nThe following fails in 3201ddb00097 (and most likely also <br>\nIsabelle2016-RC0) with a Subscript exception:</p>\n<p>typedef ('k, 'v) fmap = \"{M :: ('k ⇀ 'v). finite (dom M)}\"<br>\n   by (rule exI[of _ Map.empty]) simp_all</p>\n<p>lift_bnf (dead 'k, 'v) fmap [wits: \"Map.empty :: 'k ⇒ 'v option\"]<br>\n(* exception Subscript raised (line 97 of \"./basis/List.sml\") *)</p>\n<p>Can anybody tell me why? Am I doing something wrong?</p>\n<p>Cheers,</p>\n<p>Manuel</p>",
        "id": 294664903,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661171383
    },
    {
        "content": "<p>From: Dmitriy Traytel &lt;<a href=\"mailto:traytel@inf.ethz.ch\">traytel@inf.ethz.ch</a>&gt;<br>\nHi Manuel,</p>\n<p>indeed the type analysis for the types of the non emptiness witnesses in lift_bnf is a bit simple minded.</p>\n<p>I’ll improve on this tomorrow.</p>\n<p>Thanks for testing,<br>\nDmitriy</p>",
        "id": 294665030,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661171424
    },
    {
        "content": "<p>From: Dmitriy Traytel &lt;<a href=\"mailto:traytel@inf.ethz.ch\">traytel@inf.ethz.ch</a>&gt;<br>\nSee isabelle/b8dc1fd7d900.</p>\n<p>Dmitriy</p>",
        "id": 294665080,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661171445
    }
]