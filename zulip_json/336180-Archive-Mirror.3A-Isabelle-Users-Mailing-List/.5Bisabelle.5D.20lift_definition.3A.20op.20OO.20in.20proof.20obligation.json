[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear experts of the lifting package,</p>\n<p>Normally, the lifting package nicely preprocesses the proof obligation before they are <br>\npresented to the user. This usually works even if lifting is nested, as for example in</p>\n<p>lift_definition dconcat :: \"'a dlist dlist =&gt; 'a dlist\"<br>\nis \"... :: 'a list list =&gt; 'a list\"</p>\n<p>for dlist from ~~/src/HOL/Library/Dlist. However, in my application, I now came across a <br>\ncase where the internal construction is not simplified away. Here's the reduces example:</p>\n<p>datatype_new ('a, 's) step = Done | Skip 's | Yield 'a 's<br>\ntype_synonym ('a, 's) raw = \"'s ⇒ ('a,'s) step\"<br>\nconsts wf :: \"('a, 's) raw ⇒ bool\"<br>\ntypedef ('a,'s) wf = \"{g :: ('a,'s) raw. wf g}\" sorry<br>\nsetup_lifting type_definition_wf</p>\n<p>consts raw :: \"('a ⇒ ('b, 'sg) raw × 'sg) ⇒ ('a, 's) raw ⇒ ('b, 's × (('b, 'sg) raw × 'sg) <br>\noption) raw\"<br>\nlift_definition foo :: \"('a ⇒ ('b, 'sg) wf × 'sg) ⇒ ('a, 's) wf ⇒ ('b, 's × (('b, 'sg) wf <br>\n× 'sg) option) wf\"<br>\nis \"raw\"</p>\n<p>Now, I wonder whether I am missing some setup for lifting or whether I just have to crunch <br>\nmy way through this proof obligation:</p>\n<p>⋀fun1 fun2 fun3.<br>\n⟦⋀x. rel_prod (λx y. wf x ∧ x = y) op = (fun1 x) (fun2 x); wf fun3⟧<br>\n⟹ (rel_fun (rel_prod op = (rel_option (rel_prod (pcr_wf op = op =) op =)))<br>\n       (rel_step op = (rel_prod op = (rel_option (rel_prod (pcr_wf op = op =) op =)))) OO<br>\n      (λx y. wf x ∧ x = y) OO<br>\n      (rel_fun (rel_prod op = (rel_option (rel_prod (pcr_wf op = op =) op =)))<br>\n        (rel_step op = (rel_prod op = (rel_option (rel_prod (pcr_wf op = op =) op =)))))¯¯)<br>\n      (raw fun1 fun3) (raw fun2 fun3)</p>\n<p>If I miss some setup, I'd also be interested in how I could have found out what was missing.</p>\n<p>Thanks,<br>\nAndreas</p>",
        "id": 294317808,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660925987
    }
]