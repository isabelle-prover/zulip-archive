[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:Views@gmx.de\">Views@gmx.de</a>&gt;<br>\nI have some odd(?) behaviour when combining locales:</p>\n<p>Given:<br>\n  locale test = complete_lattice L + complete_lattice FL</p>\n<p>the default index for operators like \\&lt;squnion&gt; is L, but the default structure for referencing a lemma is FL. i.e. the following proof will fail:</p>\n<p>lemma (in test) \"[|a:carrier L; b:carrier L; c:carrier L|] ==&gt; (a\\&lt;squnion&gt;b)\\&lt;squnion&gt;c = a\\&lt;squnion&gt;(b\\&lt;squnion&gt;c)\" by (simp only: join_assoc)</p>\n<p>if I use the qualified name, L.join_assoc to reference the lemma, the proof works. </p>\n<p>I think this behaviour is somewhat odd, because \\&lt;squnion&gt; refers to \\&lt;squnion&gt;\\&lt;^bsub&gt;L\\&lt;^esub&gt;, but join_assoc refers to FL.join_assoc.</p>\n<p>(How) Can I change this behaviour and make both, the default index and the default scope of the lemmas refer to L ?</p>\n<p>Thanks in advance for any help</p>\n<p>-- <br>\n  Peter Lammich</p>\n<p>-- </p>\n<p>Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen!<br>\nIdeal f√ºr Modem und ISDN: <a href=\"http://www.gmx.net/de/go/smartsurfer\">http://www.gmx.net/de/go/smartsurfer</a></p>",
        "id": 294040418,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660815018
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt;</p>\n<blockquote>\n<p>I have some odd(?) behaviour when combining locales:</p>\n<p>Given:<br>\n  locale test = complete_lattice L + complete_lattice FL</p>\n</blockquote>\n<blockquote>\n<p>the default index for operators like \\&lt;squnion&gt; is L, but the default <br>\nstructure for referencing a lemma is FL.</p>\n</blockquote>\n<p>I now retired to the following locale, where both, the default indexing <br>\nof operators and the default qualifiyng of theorem names are L.<br>\n  locale test = struct L + complete_lattice FL + complete_lattice L</p>\n<p>although I have no idea, why this works.</p>\n<p>-- Peter Lammich</p>",
        "id": 294040437,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660815026
    },
    {
        "content": "<p>From: Clemens Ballarin &lt;<a href=\"mailto:ballarin@in.tum.de\">ballarin@in.tum.de</a>&gt;<br>\nDear Peter,</p>\n<blockquote>\n<p>I have some odd(?) behaviour when combining locales:</p>\n<p>Given:<br>\n  locale test = complete_lattice L + complete_lattice FL</p>\n<p>the default index for operators like \\&lt;squnion&gt; is L, but the default structure for referencing a lemma is FL. i.e. the following proof will fail:</p>\n<p>lemma (in test) \"[|a:carrier L; b:carrier L; c:carrier L|] ==&gt; (a\\&lt;squnion&gt;b)\\&lt;squnion&gt;c = a\\&lt;squnion&gt;(b\\&lt;squnion&gt;c)\" by (simp only: join_assoc)</p>\n<p>if I use the qualified name, L.join_assoc to reference the lemma, the proof works.</p>\n</blockquote>\n<p>The structure default only applies to term syntax.  Theorem names are <br>\nmanaged through name spaces, and the later declaration wins.  This is <br>\nalso the reason why the modified declaration</p>\n<blockquote>\n<p>locale test = struct L + complete_lattice FL + complete_lattice L</p>\n</blockquote>\n<p>of you later e-mail \"works\", because the order of theorems is changed.</p>\n<p>Clemens</p>",
        "id": 294040449,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660815031
    }
]