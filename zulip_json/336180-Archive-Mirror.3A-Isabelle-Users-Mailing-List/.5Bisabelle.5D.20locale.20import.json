[
    {
        "content": "<p>From: Christian STERNAGEL &lt;<a href=\"mailto:c-sterna@jaist.ac.jp\">c-sterna@jaist.ac.jp</a>&gt;<br>\nI was not aware of HOL-Algebra. That looks great, thank you! Until now I <br>\ndid always skip (or simply not understand) parts of the documentation<br>\nthat mentioned (structure) and indices, but this looks really useful. Is <br>\nthere some paper/tutorial/documentation that describes structures for <br>\ndummies? ;)</p>\n<p>cheers</p>\n<p>chris</p>",
        "id": 294146976,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660847877
    },
    {
        "content": "<p>From: Christian STERNAGEL &lt;<a href=\"mailto:c-sterna@jaist.ac.jp\">c-sterna@jaist.ac.jp</a>&gt;<br>\nHi all,</p>\n<p>I seem to be unable to extract the necessary information from the locale <br>\ndocumentation. Could somebody explain what happens in the following <br>\ndeclaration?</p>\n<p>locale poset = ord +<br>\n   fixes A :: \"'a set\"<br>\n   assumes lt_le_not_le: \"[|x : A; y : A|] ==&gt; x &lt; y &lt;-&gt; x &lt;= y &amp; ~ (y <br>\n&lt;= x)\"<br>\n     and refl: \"x : A ==&gt; x &lt;= x\"<br>\n     and trans: \"[|x : A; y : A; z : A; x &lt;= y; y &lt;= z|] ==&gt; x &lt;= z\"</p>\n<p>My goal was to reuse the syntax of ord and define a locale capturing <br>\npartially ordered sets. However, the above declaration gives me:</p>\n<p>print_locale poset</p>\n<p>locale elements:<br>\n   fixes less_eq :: \"'a ⇒ 'a ⇒ bool\"<br>\n     and less :: \"'a ⇒ 'a ⇒ bool\"<br>\n     and A :: \"'b ⇒ bool\"<br>\n   assumes \"poset A\"</p>\n<p>And I doen't see why the carrier A does not have elements of the same <br>\ntype as less_eq and less? How could I achieve this effect?</p>\n<p>cheers</p>\n<p>chris</p>",
        "id": 294148593,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660848463
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@kit.edu\">andreas.lochbihler@kit.edu</a>&gt;<br>\nHi Christian,</p>\n<p>ord is a type class in the first place, not a pure locale. Hence, mixfix syntax <br>\nworks a little differently, which interferes with parsing of the assumptions. If <br>\nord was a standard locale that declares &lt; and &lt;= as notation, your declaration <br>\nwould work.</p>\n<blockquote>\n<p>locale poset = ord +<br>\nfixes A :: \"'a set\"<br>\nassumes lt_le_not_le: \"[|x : A; y : A|] ==&gt; x &lt; y &lt;-&gt; x &lt;= y &amp; ~ (y &lt;= x)\"<br>\nand refl: \"x : A ==&gt; x &lt;= x\"<br>\nand trans: \"[|x : A; y : A; z : A; x &lt;= y; y &lt;= z|] ==&gt; x &lt;= z\"</p>\n</blockquote>\n<p>Trying to process this declaration in Isabelle2011-1, I get an error message <br>\nsaying that 'a was not of class ord. This already give some hint about the <br>\nproblem. Syntax declarations in type class contexts do not arrive at the locale, <br>\nthe following post mentions this:</p>\n<p><a href=\"https://lists.cam.ac.uk/mailman/htdig/cl-isabelle-users/2011-June/msg00045.html\">https://lists.cam.ac.uk/mailman/htdig/cl-isabelle-users/2011-June/msg00045.html</a></p>\n<p>Hence, Isabelle does not parse the occurrences of &lt; and &lt;= as the locale <br>\nparameters. Instead, it interprets them as the overloaded \"constants\" less and <br>\nless_eq. Consequently, A's type is not related to less' and less_eq's.<br>\nExperts on classes and locales (Florian, Clemens) might tell you why syntax is <br>\nnot imported.</p>\n<p>I don't know any satisfactory workaround. Of course, you could force the type <br>\nvariables to agree by repeating less and less_eq with type signatures in a for <br>\nclause, but that would erase all notation. Equivalently, you could refrain from <br>\nmixfix syntax and literally use less and less_eq in the assumptions. Then, <br>\nIsabelle unifies the type variables. But syntax is still not available inside <br>\nthe context.</p>\n<p>Best regards,<br>\nAndreas</p>",
        "id": 294148608,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660848471
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Christian,</p>\n<p>the issue is that the syntax &lt;= &lt; is not defined in the locale ord, but<br>\nin the type class ord.  Hence &lt;= &lt; in your spec do not refer to 'a but<br>\nto a fresh 'b::ord.</p>\n<p>A quick solution to your issue is to turn »locale« into »class«.  If<br>\nthis it not suitable for your modelling, I suggest to use syntactic<br>\nvariants for &lt;= &lt;, e.g. bended ones.  Replacing or overloading standard<br>\nsyntax in HOL-Main is nothing I recommend.</p>\n<p>Btw. did you have a look at HOL-Algebra?  You will also find order<br>\nspecifications there which look quite similar to yours.</p>\n<p>Florian</p>",
        "id": 294148628,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660848475
    }
]