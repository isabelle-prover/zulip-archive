[
    {
        "content": "<p>From: Henri DEBRAT &lt;<a href=\"mailto:Henri.Debrat@loria.fr\">Henri.Debrat@loria.fr</a>&gt;<br>\nHi all,</p>\n<p>I am trying to demonstrate the following probability lemma (prob being defined as a measure in a prob_space according to the Probability library) :<br>\n\"⋀ A B.  finite A ⟹ finite B ⟹ prob (A ∪ B) + prob (A ∩ B) = prob A + prob B\"</p>\n<p>The closer theorem I could discover in the Isabelle/HOL library is Finite_Set.folding_image_simple.union_inter.</p>\n<p>Si I am trying this:</p>\n<p>have \"⋀ A B.  finite A ⟹ finite B ⟹ prob (A ∪ B) + prob (A ∩ B) = prob A + prob B\"<br>\n   proof -<br>\n      fix A B::\"(nat×'proc ⇒ bool) set\"<br>\n      assume A:\"finite A\" and B:\"finite B\"<br>\n      show \"prob (A ∪ B) + prob (A ∩ B) = prob A + prob B\" <br>\n      proof (intro folding_image_simple.union_inter [OF _ A B, of \"op +\" \"0::real\" \"λω. prob {ω}\" prob], default)</p>\n<p>There, it output I should now demonstrate that:</p>\n<p>⋀A. finite A ⟹ prob A = fold_image op + (λω. prob {ω}) 0 A</p>\n<p>I feel a little lost from this point, as I do not understand why  f(A)  + 0 = f(A) for any peculiar function f ! As far a I know, this is part of the addition definition.</p>\n<p>Any clue ?</p>\n<p>Thanks in advance.<br>\nH.</p>",
        "id": 294227352,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660900640
    },
    {
        "content": "<p>From: Henri DEBRAT &lt;<a href=\"mailto:Henri.Debrat@loria.fr\">Henri.Debrat@loria.fr</a>&gt;</p>\n<blockquote>\n<p>I feel a little lost from this point, as I do not understand why  f(A)  + 0 = f(A) for any peculiar function f ! As far a I know, this is part of the addition definition.</p>\n</blockquote>\n<p>I meant \"I do not understand why  f(A)  + 0 = f(A) SHOULD BE PROVED for any peculiar function f \", of course...</p>",
        "id": 294227358,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660900645
    },
    {
        "content": "<p>From: Stephan Merz &lt;<a href=\"mailto:Stephan.Merz@loria.fr\">Stephan.Merz@loria.fr</a>&gt;<br>\nHi Henri,</p>\n<p>while not a direct answer to your proof attempt, I believe that the lemma you are trying to prove is a simple consequence of existing lemmas:</p>\n<p>prob(A \\&lt;union&gt; B)<br>\n= prob((A - (A \\&lt;inter&gt; B)) \\&lt;union&gt; B)       [by simple set theory]<br>\n= prob(A - (A \\&lt;inter&gt; B)) + prob(B)          [by lemma finite_measure_Union]<br>\n= (prob(A) - prob(A \\&lt;inter&lt; B)) + prob(B)    [by lemma finite_measure_Diff]</p>\n<p>Hope this helps,</p>\n<p>Stephan</p>",
        "id": 294227388,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660900664
    },
    {
        "content": "<p>From: Johannes Hölzl &lt;<a href=\"mailto:hoelzl@in.tum.de\">hoelzl@in.tum.de</a>&gt;<br>\nAs Stephan Merz already mentioned this is better done with<br>\nfinite_measure_Union and finite_measure_Diff in the prob_space locale.</p>\n<p>fold_image (op +) is used to define setsum and setprod, so it is easier<br>\nto just use setsum. The rules you need are setsum_Un_Int and<br>\nmeasure_eq_setsum_singleton. But my experience is, that staying as long<br>\nas possible in the probability theory setting (i.e. use prob on sets) is<br>\nusually easier.</p>\n<p>I hope this helps,<br>\n  Johannes</p>",
        "id": 294227399,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660900670
    }
]