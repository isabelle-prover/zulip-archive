[
    {
        "content": "<p>From: Tom Ridge &lt;<a href=\"mailto:tjr22@cam.ac.uk\">tjr22@cam.ac.uk</a>&gt;<br>\nDear All,</p>\n<p>I am trying to prove the following trivial first order theorem:</p>\n<p>lemma \"[|<br>\nALL x y z.<br>\n    (X x | Y x | Z x | W x) &amp;<br>\n    (X y | Y y | Z y | W y) &amp; (X z | Y z | Z z | W z) --&gt;<br>\n    R x y &amp; R y z --&gt; R x z;<br>\nR x y;<br>\nR y z;<br>\nX x;  X y; X z |]<br>\n==&gt; R x z\"<br>\n(* apply(metis) *)<br>\napply(blast)<br>\ndone</p>\n<p>It works fine. But if I change blast to metis, the proof fails. Why?</p>\n<p>Thanks</p>\n<p>Tom</p>",
        "id": 294059136,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660822849
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nDuring the conversion to clause form, the first assumption is ignored  <br>\nbecause it would yield 64 clauses.<br>\nLarry</p>",
        "id": 294059169,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660822868
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nObviously HOL has different code for translating into clause form.<br>\nLarry</p>",
        "id": 294059179,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660822874
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nIt would be easy to make this limit a parameter that the user could  <br>\nset. To the best of my knowledge, this is an issue only with  <br>\nartificial problems.<br>\nLarry</p>",
        "id": 294059189,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660822880
    }
]