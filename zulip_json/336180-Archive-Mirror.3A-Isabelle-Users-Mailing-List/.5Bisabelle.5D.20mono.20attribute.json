[
    {
        "content": "<p>From: John Wickerson &lt;<a href=\"mailto:jpw48@cam.ac.uk\">jpw48@cam.ac.uk</a>&gt;<br>\nHi Isabelle,</p>\n<p>I'm a bit confused about the [mono] attribute. The Isar tutorial says that I can declare new monotonicity rules using the mono attribute, but when I type the simplest monotonicity lemma I can think of:</p>\n<p>lemma blah [mono]:<br>\n  \"x ≤ y ⟹ Suc x ≤ Suc y\"<br>\nby auto</p>\n<p>I get the following error:</p>\n<p>Bad monotonicity theorem:<br>\n?x ≤ ?y ⟹ Suc ?x ≤ Suc ?y </p>\n<p>Could somebody kindly explain what's happening here? Thanks very much.</p>\n<p>john</p>",
        "id": 294229228,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901559
    },
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:huffman@in.tum.de\">huffman@in.tum.de</a>&gt;<br>\nThe [mono] attribute is used by the \"inductive\" package to keep track<br>\nof monotonicity of predicates w.r.t implication (--&gt;) on type bool. In<br>\nolder versions of Isabelle it used monotonicity w.r.t the subset<br>\nordering on type 'a set. I don't think the package can do anything<br>\nwith rules about monotonicity w.r.t (&lt;=) on type nat.</p>\n<p>Isabelle2012 doesn't have a command for listing all the registered<br>\nmono theorems (although it appears Makarius added a 'print_inductives'<br>\ncommand to the dev repo recently, 9149a07a6c67) but you can access<br>\nthem via ML:</p>\n<p>ML_val {* Inductive.get_monos @{context} *}</p>\n<p>This should give you a general idea of what kinds of rules are accepted.</p>\n<ul>\n<li>Brian</li>\n</ul>",
        "id": 294229235,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901566
    },
    {
        "content": "<p>From: John Wickerson &lt;<a href=\"mailto:jpw48@cam.ac.uk\">jpw48@cam.ac.uk</a>&gt;<br>\nThanks Brian. I was just using \"==&gt;\" when I should have used \"--&gt;\".</p>\n<p>john</p>",
        "id": 294229264,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901584
    }
]