[
    {
        "content": "<p>From: Данијела Петровић &lt;<a href=\"mailto:danijela.p9@gmail.com\">danijela.p9@gmail.com</a>&gt;<br>\nDear Sir/Madam,</p>\n<p>I am having problem in proving this lemma:</p>\n<p>lemma coords_mono_point_poly:<br>\n   \"point_coords state \\&lt;subseteq&gt;\\&lt;^sub&gt;m point_coords (fst (point_poly p<br>\nstate)) \\&lt;and&gt;<br>\n    line_coords state \\&lt;subseteq&gt;\\&lt;^sub&gt;m line_coords (fst (point_poly p<br>\nstate))\"<br>\n   and<br>\n      coords_mono_line_poly:<br>\n   \"point_coords state \\&lt;subseteq&gt;\\&lt;^sub&gt;m point_coords (fst (line_poly l<br>\nstate)) \\&lt;and&gt;<br>\n    line_coords state  \\&lt;subseteq&gt;\\&lt;^sub&gt;m line_coords (fst (line_poly l<br>\nstate))\"<br>\nproof (induct p and l arbitrary: state)</p>\n<p>As you can see there are actually two lemmas, but they are \"mutually<br>\nrecursive\" (because the functions point_poly and line_poly that I previously<br>\ndefined are mutually recursive). The problem is that when i try to prove<br>\nlike this, then this 'arbitrary:state' only affects the first lemma, but not<br>\nthe second one, and that is not convenient at all. Any suggestions how to<br>\nsolve this?</p>\n<p>Yours faithfully,<br>\nDanijela Petrovic</p>",
        "id": 294139168,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845249
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nYou probably need to give arbitrary a list for each of the goals, <br>\nseparated by \"and\": So try using \"arbitrary: state and state\".</p>\n<p>-- Lars</p>",
        "id": 294140394,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845630
    }
]