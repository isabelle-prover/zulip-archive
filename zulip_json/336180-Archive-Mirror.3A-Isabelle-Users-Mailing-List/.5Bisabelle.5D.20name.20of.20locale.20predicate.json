[
    {
        "content": "<p>From: Christian Sternagel &lt;<a href=\"mailto:christian.sternagel@uibk.ac.at\">christian.sternagel@uibk.ac.at</a>&gt;<br>\nHi,</p>\n<p>if I understood correctly, for every locale of name \"L\" we get a <br>\npredicate of name \"L\" taking the fixes of the locale as argument. Is it <br>\npossible to influence the name of this predicate?</p>\n<p>cheers</p>\n<p>chris</p>",
        "id": 294107441,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660835689
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Christian,</p>\n<p>on the ML level this is possible;  however there is no Isar syntax for<br>\nthis.  What is your scenario?  The illusion of a differently named<br>\nlocale predicate can be created using an abbreviation.</p>\n<p>Hope this helps,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/5DyVeAGxXbSdaErTB-5wDrBx/signature.asc\">signature.asc</a></p>",
        "id": 294107508,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660835706
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Christian,</p>\n<p>this problem will disappear in the next Isabelle release: we introduced<br>\nmandatory prefixes for locale predicates stemming from classes ;-)</p>\n<p>Florian<br>\n<a href=\"/user_uploads/14278/jKpnFaFpwzIvRjnzioCZcaTd/signature.asc\">signature.asc</a></p>",
        "id": 294107547,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660835718
    },
    {
        "content": "<p>From: Christian Sternagel &lt;<a href=\"mailto:christian.sternagel@uibk.ac.at\">christian.sternagel@uibk.ac.at</a>&gt;<br>\nI have a type class that is essentially the same as Haskell's Show <br>\nclass. Hence I wanted to name it show, but then I can not define a <br>\nfunction named 'show' (for showing a string) inside the class. Currently <br>\nI'm using to_string instead of show, but I thought it would be nice to <br>\nhave the same naming as in Haskell :)</p>\n<p>cheers</p>\n<p>chris</p>",
        "id": 294107600,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660835736
    }
]