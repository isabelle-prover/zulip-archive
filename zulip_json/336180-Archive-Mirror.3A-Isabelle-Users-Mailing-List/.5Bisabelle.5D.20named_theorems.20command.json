[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nHi,</p>\n<p>I just had to learn that the named_theorems command introduced <br>\n\"a subtle change of semantics due to external visual order vs. internal<br>\nreverse order\" [NEWS].</p>\n<p>What is the rationale behind this change?</p>\n<p>The most common case where I use named_theorems, I want to be able to<br>\nlater \"overwrite\" rules that have been declared previously, to allow for<br>\na modular style of theory development. However, the new ordering of<br>\nnamed_theorems, and the ordering in which methods like \"rule\" or \"subst\"<br>\ntry the rules do no longer allow for such a modular development, as the<br>\noldest rules will always be tried first.</p>\n<p>For my applications, this change means that I cannot use named_theorems<br>\nat all in many cases.</p>",
        "id": 294651878,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661166401
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nThe new named_theorems allow you to add more general rules later on. In<br>\npractice, I always encountered the same case as Peter: I wanted to add<br>\nmore specialized rules.</p>\n<p>-- Lars</p>",
        "id": 294651885,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661166407
    }
]