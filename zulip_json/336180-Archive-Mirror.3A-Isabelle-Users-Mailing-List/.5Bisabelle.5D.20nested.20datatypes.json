[
    {
        "content": "<p>From: Jeremy Dawson &lt;<a href=\"mailto:Jeremy.Dawson@anu.edu.au\">Jeremy.Dawson@anu.edu.au</a>&gt;<br>\nI'm familiar with a datatype declaration such as</p>\n<p>datatype 'a rose_tree = Rtree \"'a rose_tree list\"<br>\n                     | Ritem \"'a\"</p>\n<p>and this gives the induction theorem</p>\n<p>rose_tree.induct ;<br>\nval it =<br>\n  \"[| !!list. ?P2.0 list ==&gt; ?P1.0 (Rtree list); !!a. ?P1.0 (Ritem a);<br>\n        ?P2.0 [];<br>\n        !!rose_tree list.<br>\n           [| ?P1.0 rose_tree; ?P2.0 list |] ==&gt; ?P2.0 (rose_tree # <br>\nlist) |]<br>\n     ==&gt; ?P1.0 ?rose_tree &amp; ?P2.0 ?list\" : Thm.thm</p>\n<p>But I want to do the same sort of thing with multisets instead of lists, ie</p>\n<p>datatype 'a mrose_tree = MRtree \"'a mrose_tree multiset\"<br>\n                     | MRitem \"'a\"</p>\n<p>but this is not allowed,</p>\n<p>*** Non-admissible type expression<br>\n*** 'a mrose_tree multiset<br>\n*** Multiset_no_le.multiset is not a datatype - can't use it in nested <br>\nrecursion</p>\n<p>Is there any way around this problem?</p>\n<p>Cheers,</p>\n<p>Jeremy</p>",
        "id": 294246187,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660909002
    },
    {
        "content": "<p>From: Dmitriy Traytel &lt;<a href=\"mailto:traytel@in.tum.de\">traytel@in.tum.de</a>&gt;<br>\nHi Jeremy,</p>\n<p>in Isabelle2013 there is a new datatype package (session HOL-BNF, entry <br>\ntheory \"src/HOL/BNF/BNF\") that covers nested recursion through many <br>\nnon-free data structures (including finite sets, countable sets, and <br>\nmultisets).</p>\n<p>It allows you to define</p>\n<p>data 'a rose_tree = Rtree \"'a rose_tree multiset\" | Ritem \"'a\"</p>\n<p>Here multiset is the type defined in src/HOL/Library/Multiset. From your <br>\nerror message I see that you use a different multiset type (from a <br>\ndifferent theory). In order to use this type in datatype declarations it <br>\nmust be proved to be a so called bounded natural functor (BNF, [1]). <br>\nThis (admittedly tedious) work we have done for multiset from <br>\nsrc/HOL/Library/Multiset in src/HOL/BNF/More_BNFs (search for \"bnf_def <br>\nmultiset_map\"). You would need to do a similar thing for your custom <br>\nmultiset (so far there is also no documentation on bnf_def, only <br>\nexamples---I can help to sort out the details).</p>\n<p>Moreover, the proper integration of the package is happening right now <br>\n[2]. Currently, in order to define recursive functions on the defined <br>\ndatatype you will have to use low level combinators (rose_tree_fold, <br>\nrose_tree_rec) rather than primrec/fun. The plan is to have at least <br>\nprimrec support in the next Isabelle release.</p>\n<p>Cheers,<br>\nDmitriy</p>\n<p>[1] <a href=\"http://www21.in.tum.de/~traytel/papers/lics12-codatatypes/codat.pdf\">http://www21.in.tum.de/~traytel/papers/lics12-codatatypes/codat.pdf</a><br>\n[2] <br>\n<a href=\"https://mailmanbroy.informatik.tu-muenchen.de/pipermail/isabelle-dev/2013-July/004390.html\">https://mailmanbroy.informatik.tu-muenchen.de/pipermail/isabelle-dev/2013-July/004390.html</a></p>",
        "id": 294246197,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660909008
    }
]