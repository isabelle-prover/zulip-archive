[
    {
        "content": "<p>From: Viorel Preoteasa &lt;<a href=\"mailto:viorel.preoteasa@aalto.fi\">viorel.preoteasa@aalto.fi</a>&gt;<br>\nHello,</p>\n<p>I am interested in building a new outer syntax in Isabelle to support<br>\nthe following kind of construction within a theory:</p>\n<p>program Search<br>\nbegin<br>\n   situation Init<br>\n      fixes n::nat and a::\"nat =&gt; 'a\" and x :: 'a</p>\n<p>situation Loop = Init +<br>\n     fixes i::nat<br>\n     assumes \"i &lt;= n\"<br>\n     assumes \"j &lt; i ==&gt; a i \\not= x\"</p>\n<p>situation Found = Loop +<br>\n     assumes \"i &lt; n\"<br>\n     assumes \"a i = x\"</p>\n<p>situation NotFound = Loop +<br>\n     assumes \"i = n\"</p>\n<p>context Loop:<br>\n   begin<br>\n     transition to_Loop:<br>\n       assumes grd1: \"i &lt; n\"<br>\n       assumes grd2: \"a i \\not= x\"<br>\n       assumes inc: \"i' = i + 1\"<br>\n       shows Loop n a i'<br>\n       proof ...<br>\n   end</p>\n<p>... more transitions<br>\nend</p>\n<p>The situations are variations of the existing Isabelle locales, with<br>\nsome additional syntax to distinguish between different kind<br>\nof variables.</p>\n<p>The program environment should support declaring<br>\nsituations (locales), definitions, theorems, possibly also<br>\nvariables. So in a way the program environment should<br>\nbe also almost like a locale.</p>\n<p>The information within a program environment will be<br>\nused to automatically generate a collection of<br>\nmutually recursive functions implementing the program<br>\n(in this case the program searches for an element<br>\nin an array).</p>\n<p>I have been able to play with the Isabelle outer syntax,<br>\nbut I could not figure out how to create a nested environment<br>\nas described above.</p>\n<p>Any hints on where I should look to get started would be<br>\nappreciated.</p>\n<p>The underlying construction of this approach is explained in</p>\n<p>Preoteasa, Back, Eriksson. Verification and code generation for<br>\ninvariant diagrams in Isabelle. Journal of Logical and Algebraic<br>\nMethods in Programming. Volume 84, Issue 1.</p>\n<p>Best regards,</p>\n<p>Viorel Preoteasa</p>",
        "id": 294646399,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661164255
    }
]