[
    {
        "content": "<p>From: Gerwin Klein &lt;<a href=\"mailto:Gerwin.Klein@nicta.com.au\">Gerwin.Klein@nicta.com.au</a>&gt;<br>\nThree new AFP entries by Pasquale Noce are available from <a href=\"http://afp.sf.net\">http://afp.sf.net</a> :</p>\n<p>Reasoning about Lists via List Interleaving<br>\n<a href=\"http://afp.sourceforge.net/entries/List_Interleaving.shtml\">http://afp.sourceforge.net/entries/List_Interleaving.shtml</a></p>\n<p>Abstract:<br>\n Among the various mathematical tools introduced in his outstanding work on<br>\nCommunicating Sequential Processes, Hoare has defined \"interleaves\" as the<br>\npredicate satisfied by any three lists such that the first list may be split<br>\ninto sublists alternately extracted from the other two ones, whatever is the<br>\ncriterion for extracting an item from either one list or the other in each step.<br>\n This paper enriches Hoare's definition by identifying such criterion with the<br>\ntruth value of a predicate taking as inputs the head and the tail of the first<br>\nlist. This enhanced \"interleaves\" predicate turns out to permit the proof of<br>\nequalities between lists without the need of an induction. Some rules that allow<br>\nto infer \"interleaves\" statements without induction, particularly applying to<br>\nthe addition or removal of a prefix to the input lists, are also proven.<br>\nFinally, a stronger version of the predicate, named \"Interleaves\", is shown to<br>\nfulfil further rules applying to the addition or removal of a suffix to the<br>\ninput lists.</p>\n<p>The Ipurge Unwinding Theorem for CSP Noninterference Security<br>\n<a href=\"http://afp.sourceforge.net/entries/Noninterference_Ipurge_Unwinding.shtml\">http://afp.sourceforge.net/entries/Noninterference_Ipurge_Unwinding.shtml</a></p>\n<p>Abstract:<br>\n The definition of noninterference security for Communicating Sequential<br>\nProcesses requires to consider any possible future, i.e. any indefinitely long<br>\nsequence of subsequent events and any indefinitely large set of refused events<br>\nassociated to that sequence, for each process trace. In order to render the<br>\nverification of the security of a process more straightforward, there is a need<br>\nof some sufficient condition for security such that just individual accepted and<br>\nrefused events, rather than unbounded sequences and sets of events, have to be<br>\nconsidered.<br>\n Of course, if such a sufficient condition were necessary as well, it would be<br>\neven more valuable, since it would permit to prove not only that a process is<br>\nsecure by verifying that the condition holds, but also that a process is not<br>\nsecure by verifying that the condition fails to hold.<br>\n This paper provides a necessary and sufficient condition for CSP noninterference<br>\nsecurity, which indeed requires to just consider individual accepted and refused<br>\nevents and applies to the general case of a possibly intransitive policy. This<br>\ncondition follows Rushby's output consistency for deterministic state machines<br>\nwith outputs, and has to be satisfied by a specific function mapping security<br>\ndomains into equivalence relations over process traces. The definition of this<br>\nfunction makes use of an intransitive purge function following Rushby's one;<br>\nhence the name given to the condition, Ipurge Unwinding Theorem.<br>\n Furthermore, in accordance with Hoare's formal definition of deterministic<br>\nprocesses, it is shown that a process is deterministic just in case it is a<br>\ntrace set process, i.e. it may be identified by means of a trace set alone,<br>\nmatching the set of its traces, in place of a failures-divergences pair. Then,<br>\nvariants of the Ipurge Unwinding Theorem are proven for deterministic processes<br>\nand trace set processes.</p>\n<p>The Generic Unwinding Theorem for CSP Noninterference Security<br>\n<a href=\"http://afp.sourceforge.net/entries/Noninterference_Generic_Unwinding.shtml\">http://afp.sourceforge.net/entries/Noninterference_Generic_Unwinding.shtml</a></p>\n<p>Abstract:<br>\n The classical definition of noninterference security for a deterministic state<br>\nmachine with outputs requires to consider the outputs produced by machine<br>\nactions after any trace, i.e. any indefinitely long sequence of actions, of the<br>\nmachine. In order to render the verification of the security of such a machine<br>\nmore straightforward, there is a need of some sufficient condition for security<br>\nsuch that just individual actions, rather than unbounded sequences of actions,<br>\nhave to be considered.<br>\n By extending previous results applying to transitive noninterference policies,<br>\nRushby has proven an unwinding theorem that provides a sufficient condition of<br>\nthis kind in the general case of a possibly intransitive policy. This condition<br>\nhas to be satisfied by a generic function mapping security domains into<br>\nequivalence relations over machine states.<br>\n An analogous problem arises for CSP noninterference security, whose definition<br>\nrequires to consider any possible future, i.e. any indefinitely long sequence of<br>\nsubsequent events and any indefinitely large set of refused events associated to<br>\nthat sequence, for each process trace.<br>\n This paper provides a sufficient condition for CSP noninterference security,<br>\nwhich indeed requires to just consider individual accepted and refused events<br>\nand applies to the general case of a possibly intransitive policy. This<br>\ncondition follows Rushby's one for classical noninterference security, and has<br>\nto be satisfied by a generic function mapping security domains into equivalence<br>\nrelations over process traces; hence its name, Generic Unwinding Theorem.<br>\nVariants of this theorem applying to deterministic processes and trace set<br>\nprocesses are also proven. Finally, the sufficient condition for security<br>\nexpressed by the theorem is shown not to be a necessary condition as well, viz.<br>\nthere exists a secure process such that no domain-relation map satisfying the<br>\ncondition exists.</p>\n<p>Enjoy!<br>\nGerwin</p>\n<hr>\n<p>The information in this e-mail may be confidential and subject to legal professional privilege and/or copyright. National ICT Australia Limited accepts no liability for any damage caused by this email or its attachments.</p>",
        "id": 294643646,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661163158
    }
]