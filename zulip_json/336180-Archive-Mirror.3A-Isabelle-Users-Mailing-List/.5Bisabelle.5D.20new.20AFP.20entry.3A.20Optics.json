[
    {
        "content": "<p>From: <a href=\"mailto:Gerwin.Klein@data61.csiro.au\">Gerwin.Klein@data61.csiro.au</a><br>\nA new entry is available in the AFP:</p>\n<p>Optics<br>\nby Simon Foster and Frank Zeyda</p>\n<p>Lenses provide an abstract interface for manipulating data types through spatially-separated views. They are defined abstractly in terms of two functions, get, the return a value from the source type, and put that updates the value. We mechanise the underlying theory of lenses, in terms of an algebraic hierarchy of lenses, including well-behaved and very well-behaved lenses, each lens class being characterised by a set of lens laws. We also mechanise a lens algebra in Isabelle that enables their composition and comparison, so as to allow construction of complex lenses. This is accompanied by a large library of algebraic laws. Moreover we also show how the lens classes can be applied by instantiating them with a number of Isabelle data types. This theory development is based on our recent work, which shows how lenses can be used to unify heterogeneous representations of state-spaces in formalised programs.</p>\n<p><a href=\"https://www.isa-afp.org/entries/Optics.shtml\">https://www.isa-afp.org/entries/Optics.shtml</a></p>\n<p>Enjoy!<br>\nGerwin</p>",
        "id": 294711794,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661182438
    }
]