[
    {
        "content": "<p>From: Gerwin Klein &lt;<a href=\"mailto:Gerwin.Klein@nicta.com.au\">Gerwin.Klein@nicta.com.au</a>&gt;<br>\nNew in the AFP:</p>\n<p>pGCL in Isabelle<br>\nby David Cock</p>\n<p>pGCL is both a programming language and a specification language that incorporates both probabilistic and nondeterministic choice, in a unified manner. Program verification is by refinement or annotation (or both), using either Hoare triples, or weakest-precondition entailment, in the style of GCL.</p>\n<p>This package provides both a shallow embedding of the language primitives, and an annotation and refinement framework. The generated document includes a brief tutorial.</p>\n<p><a href=\"http://afp.sourceforge.net/entries/pGCL.shtml\">http://afp.sourceforge.net/entries/pGCL.shtml</a></p>\n<p>As presented this morning at ITPâ€™14.</p>\n<p>Enjoy!<br>\nGerwin</p>\n<hr>\n<p>The information in this e-mail may be confidential and subject to legal professional privilege and/or copyright. National ICT Australia Limited accepts no liability for any damage caused by this email or its attachments.</p>",
        "id": 294282248,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660920741
    }
]