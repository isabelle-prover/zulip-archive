[
    {
        "content": "<p>From: Aaron Gray &lt;<a href=\"mailto:aaronngray.lists@gmail.com\">aaronngray.lists@gmail.com</a>&gt;<br>\nHi,</p>\n<p>I am new to Isabelle/HOL and Isar in general although I know the principles<br>\nand am familiar with languages like Z. And with Haskell and ML.</p>\n<p>I am trying to work out how to use the jEdit IDE, but would prefer to work<br>\nfrom command line as well.</p>\n<p>How do I generate Haskell and ML and friends from a proof like CoreC++ for<br>\nexample ?</p>\n<p>Many thanks in advance,</p>\n<p>Aaron</p>",
        "id": 294228685,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901297
    },
    {
        "content": "<p>From: René Thiemann &lt;<a href=\"mailto:rene.thiemann@uibk.ac.at\">rene.thiemann@uibk.ac.at</a>&gt;<br>\nDear Aaron,</p>\n<blockquote>\n<p>How do I generate Haskell and ML and friends from a proof like CoreC++ for<br>\nexample ?</p>\n</blockquote>\n<p>As far as I know, you cannot generate Haskell code from a \"proof\", but just from<br>\ndefinitions and functions, and in certain cases also from inductive definitions<br>\nby using the predicate compiler.</p>\n<p>In principle, everything that can be written as an equality \"lhs = rhs\" can be fed<br>\nto the code-generator.</p>\n<p>lemma [code]: \"lhs = rhs\"<br>\nproof ...</p>\n<p>declare my_theorem[code]</p>\n<p>then getting the code is as easy as writing</p>\n<p>export_code some_function in Haskell file ...</p>\n<p>however, it might fail whenever there are non-executable involved.</p>\n<p>For example, defining</p>\n<p>definition fermat where \"fermat n = (?x y z. x &gt; 0 /\\ y &gt; 0 /\\ x^n + y^n = z^n)\"</p>\n<p>then </p>\n<p>export_code fermat in Haskell file -</p>\n<p>will fail, but if you first prove a code-equation</p>\n<p>lemma fermat_code[code]: \"fermat n = (n &lt;= 2)\"<br>\nproof ...</p>\n<p>then of course it will become executable.</p>\n<p>Further information on the code-generator can be found by</p>\n<p>isabelle doc codegen</p>\n<p>Hope this helps,<br>\nRené</p>",
        "id": 294228701,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901308
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@kit.edu\">andreas.lochbihler@kit.edu</a>&gt;<br>\nDear Aaron,</p>\n<p>it is not clear to me what you mean by generating code from a proof like <br>\nCoreC++. A proof of a theorem is not executable in ML or Haskell, only Isabelle <br>\ncan check the proof. However, you can generate ML and Haskell code from <br>\ndefinitions in a formalisation, if they satisfy the restrictions of Isabelle's <br>\ncode generator. The generated code then executes the definitions, not the <br>\nproofs. By the correctness of the code generator (unless someone messed with the <br>\nsetup), the output of the generated code then is correct in the sense that you <br>\ncould prove in Isabelle that the result is the denotation of the definitions for <br>\nthe given input.</p>\n<p>For CoreC++ in particular, the big-step semantics and the type system are <br>\nexecutable. This means that you can run CoreC++ programs in the semantics and <br>\nthat you can infer the type of a statement or expression. Only two weeks ago, I <br>\nhave spent a few days on reactivating the setup which got broken due to changes <br>\nin Isabelle's code generator. So, if you want to execute CoreC++, you need to <br>\nuse the development version of the AFP. Most probably, this version will not <br>\nwork with Isabelle2012, so you also have to use the development version, e.g., <br>\nfrom <a href=\"http://isabelle.in.tum.de/devel/\">http://isabelle.in.tum.de/devel/</a>.</p>\n<p>Now, back to your question. The export_code keyword generates such code. For <br>\nCoreC++, you might put these five lines into a file in the same folder as <br>\nCoreC++ and load it in jedit:</p>\n<p>theory Code_Generation imports Execute begin<br>\nexport_code big_step WT WT_i_i_i_o<br>\n   in SML module_name CoreCpp<br>\n   file \"path_to_my_file.ML\"<br>\nend</p>\n<p>Once this file is processed, the code for the big step semantics, type checks <br>\nand type inference is in the file, along with the abstract syntax definition for <br>\nthe CoreC++ language.</p>\n<p>You can export to other language by replacing the \"in SML ...\" line as needed, <br>\nsee the code generator tutorial for that.</p>\n<p>If you prefer the command line, there's also Isabelle codegen tool with hardly <br>\nany documentation.</p>\n<p>Once you have managed to get so far, you are now ready to execute CoreC++ <br>\nprograms. However, the type system and semantics expect the input to be in <br>\nCoreC++ abstract syntax, so you cannot feed in C++ programs directly. Daniel <br>\nWasserrab once had a converter from C to CoreC++, but this has never been <br>\nadapted to the changes in Isabelle's code generator. So it probably won't work <br>\nout of the box. It should still work with the old generated ML files which <br>\nDaniel probably has somewhere, so you might ask him.</p>\n<p>If you just want to try one small program in CoreC++, the easiest way is to <br>\nfollow the examples in Execute.thy: Manually convert the program into CoreC++ <br>\nsyntax and define it inside Isabelle as a constant. Then, you can use the values <br>\ncommand to execute it.</p>\n<p>Hope this helps,</p>\n<p>Andreas</p>",
        "id": 294228714,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901314
    },
    {
        "content": "<p>From: Aaron Gray &lt;<a href=\"mailto:aaronngray.lists@gmail.com\">aaronngray.lists@gmail.com</a>&gt;<br>\nDear Andreas,</p>\n<p>Thank you for the information and a path forwards. I will try running Linux<br>\nin a VM tomorrow. I have Linux servers but they are headless. And I have<br>\nWindows/Cygwin/Java 1.7 problems using the development branch.</p>\n<p>Then will look into using Java native on Windows with MinGW for Bash rather<br>\nthan via Cygwin. It would also be nice to have an environment that is not<br>\ndependent upon Bash though.</p>\n<p>Has/is Isabelle/HOL been/being migrated to Scala from ML ? If so do you<br>\nknow what the status is here ?</p>\n<p>Regards,</p>\n<p>Aaron</p>",
        "id": 294228751,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901339
    },
    {
        "content": "<p>From: Aaron Gray &lt;<a href=\"mailto:aaronngray.lists@gmail.com\">aaronngray.lists@gmail.com</a>&gt;<br>\nDear René,</p>\n<p>Thanks for the info and tips. Hopefully I will get somewhere tomorrow.</p>\n<p>Regards,</p>\n<p>Aaron</p>",
        "id": 294228764,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901345
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Fri, 7 Dec 2012, Aaron Gray wrote:</p>\n<blockquote>\n<p>Thank you for the information and a path forwards. I will try running <br>\nLinux in a VM tomorrow. I have Linux servers but they are headless. And <br>\nI have Windows/Cygwin/Java 1.7 problems using the development branch.</p>\n</blockquote>\n<p>Since \"the\" development branch is continously moving, you should subscribe <br>\nto the isabelle-dev mailing list and post any observations and problems <br>\nthere.  We are aready moving towards the next stable release, and I have <br>\nrecently started to make it again easier to get it running on Windows.</p>\n<p>It would be interesting to know what were your problems with Java 7, <br>\nbecause that will be very important for the coming Isabelle release. (Did <br>\nyou try to download add-components yourself?  You shouldn't.  See the <br>\nexplanations in README_REPOSITORY in the toplevel directory of the <br>\nMercurial clone.)</p>\n<p>Follow-ups on isabelle-dev, where anything related to arbitrary Isabelle <br>\nrepository versions belongs.  You should also have changeset ids ready, <br>\nwhen pointing to the version that you have.</p>\n<blockquote>\n<p>Then will look into using Java native on Windows with MinGW for Bash <br>\nrather than via Cygwin. It would also be nice to have an environment <br>\nthat is not dependent upon Bash though.</p>\n</blockquote>\n<p>Isabelle depends on much more than just bash, and I don't understand why <br>\nit should be avoided.  Cygwin is also essential for many add-on tools and <br>\nPoly/ML as well.  It is not realistic to change such system integration <br>\nthings as a \"newbie\" as you've called yourself.  Even for myself after so <br>\nmany years of Isabelle integration and distribution management it is <br>\nalways a struggle to get things forward and work more smoothly for more <br>\nusers.</p>\n<blockquote>\n<p>Has/is Isabelle/HOL been/being migrated to Scala from ML ? If so do you <br>\nknow what the status is here ?</p>\n</blockquote>\n<p>Isabelle has many languages and many aspects.  ML remains the main <br>\nimplementation and extension language for the logical parts.  Scala is <br>\nalready the main system programming language, including front-end tools <br>\netc.  (Doing POSIX-oid things on Scala/JVM is quite odd to implement, but <br>\nit works out in the end.)</p>\n<p>There are also connections between the different Isabelle languages.  For <br>\nexample, you can use</p>\n<p>ML {* val a = 1 *}</p>\n<p>inside the Isar source language of .thy files routinely for many years.</p>\n<p>Moreover you can invoke Isabelle/Scala from there like this:</p>\n<p>ML {* Invoke_Scala.method \"java.lang.System.getProperty\" \"user.home\" *}</p>\n<p>That gives you a String =&gt; String interface between the ML and Scala <br>\nworld, and you can then use Isabelle XML/YXML data encoding to transport <br>\nactual content easily.</p>\n<p>Note that Invoke_Scala.method currently only works while Isabelle/jEdit is <br>\nrunning.  Wrapping the Isabelle/Scala process around any Isabelle session <br>\nis still open, and won't happen for the coming release.</p>\n<p>Makarius</p>",
        "id": 294228778,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660901351
    },
    {
        "content": "<p>From: <a href=\"mailto:andreas.lochbihler@kit.edu\">andreas.lochbihler@kit.edu</a><br>\nDear Aaron,</p>\n<p>Sorry for the late response, I have been out of office for 3 weeks.</p>\n<p>This looks like you are using the Isabelle2012 version of CoreC++ from <br>\n<a href=\"http://afp.sourceforge.net/entries/CoreC++.shtml\">http://afp.sourceforge.net/entries/CoreC++.shtml</a> and not the <br>\ndevelopment version of the AFP from <br>\n<a href=\"http://afp.sourceforge.net/devel-entries/CoreC++.shtml\">http://afp.sourceforge.net/devel-entries/CoreC++.shtml</a>. The above code <br>\nworks fine for me with the latter.</p>\n<p>Hope this helps,<br>\nAndreas</p>",
        "id": 294230135,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660902051
    }
]