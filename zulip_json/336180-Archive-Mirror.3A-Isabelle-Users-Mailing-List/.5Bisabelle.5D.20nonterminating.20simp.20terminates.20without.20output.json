[
    {
        "content": "<p>From: Dmitriy Traytel &lt;<a href=\"mailto:traytel@inf.ethz.ch\">traytel@inf.ethz.ch</a>&gt;<br>\nHi Makarius,</p>\n<p>a student in our Isabelle-course has alerted me about the following behavior in Isabelle2017-RC2. (I'm currently traveling and can't test RC3.)</p>\n<p>theory Scratch<br>\n  imports Main<br>\nbegin</p>\n<p>lemma [simp]: \"length xs = length (rev xs)\"<br>\n  by simp</p>\n<p>lemma \"P (length xs)\"<br>\n  by simp</p>\n<p>end</p>\n<p>The second call to simp will turn from purple to red after a few minutes on my (and the student's) machine without outputting anything. In Isabelle2016-1, I couldn't reproduce this behavior (i.e., it would stay purple). The fact that it turns red is at least better than what happened in Isabelle2013-1, but it still can be confusing. Is this happening on purpose?</p>\n<p>Dmitriy</p>",
        "id": 294720836,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661184741
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Dmitriy,</p>\n<p>Red errors in jedit without a message are nothing new in Isabelle2017. I've also seen them <br>\nin Isabelle2016-1 in case the PolyML runs out of memory, e.g., a non-terminating value <br>\n[code] command which constructs ever larger terms (e.g. an infinite codatatype value). <br>\nThen the command just showed a red error mark without any error message. In <br>\nIsabelle2016-1, I haven't seen this happen with simp, though, but maybe I was never <br>\npatient enough. But I suspect this is precisely what is happening in your example, simp <br>\nwill create increasingly large terms.</p>\n<p>Andreas</p>",
        "id": 294720843,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661184745
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nI have observed this behavior in 2016-1 occasionally. I believe that happens<br>\non stack overflow and maybe some other low- level errors.</p>\n<p>Peter</p>",
        "id": 294720854,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661184750
    },
    {
        "content": "<p>From: Dmitriy Traytel &lt;<a href=\"mailto:traytel@inf.ethz.ch\">traytel@inf.ethz.ch</a>&gt;<br>\nHi Andreas,</p>\n<p>right. But it seems that the amount of \"patience\" needed has reduced (compared to Isabelle2016-1). For both, I use the default ML_OPTIONS=\"-H 500\".</p>\n<p>Dmitriy</p>",
        "id": 294720875,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661184758
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI have made some more experiments. This command-line invocation works<br>\nbest to see the error:</p>\n<p>$ isabelle process -T Scratch</p>\n<h3>Warning - Unable to increase stack - interrupting thread</h3>\n<p>Exception- Interrupt raised</p>\n<p>To compare the amount of \"patience\" required, here are some results on<br>\nlxbroy10 (x86-linux):</p>\n<p>97f16ada519c 2m16.102s<br>\n18f3d341f8c0 2m22.646s<br>\nIsabelle2016-1 2m19.796s</p>\n<p>In contrast, I did see a difference on my home machine (x86-linux):</p>\n<p>Isabelle2017-RC3: approx. 5min<br>\nIsabelle2016-1: approx. 44min</p>\n<p>I am unsure which side-conditions can cause such an effect.</p>\n<p>Also note that the Poly/ML version is essentially the same in all<br>\nversions above.</p>\n<p>Of course, the example is pathological in any case. It is just a matter<br>\nhow non-termination is presented to the user.</p>\n<p>Makarius</p>",
        "id": 294720884,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661184762
    }
]