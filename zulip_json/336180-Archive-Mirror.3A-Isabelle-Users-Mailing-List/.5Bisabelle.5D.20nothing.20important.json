[
    {
        "content": "<p>From: Christian Sternagel &lt;<a href=\"mailto:c.sternagel@gmail.com\">c.sternagel@gmail.com</a>&gt;<br>\nDear all,</p>\n<p>The following comment in Nat.thy seems odd to me:</p>\n<p>lemma nat_induct [case_names 0 Suc, induct type: nat]:<br>\n   -- {* for backward compatibility -- names of variables differ *}<br>\n   fixes n<br>\n   assumes \"P 0\"<br>\n     and \"!!n. P n ==&gt; P (Suc n)\"<br>\n   shows \"P n\"<br>\n   using assms by (rule nat.induct)</p>\n<p>Either I do not understand the meaning (what names are different) -- in <br>\nwhich case, please somebody explain -- or it is obsolete -- then please <br>\nremove ;).</p>\n<p>cheers</p>\n<p>chris</p>",
        "id": 294243926,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908151
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nI think this is nat.induct vs. nat_induct, which only differ in the <br>\nbound variable, i.e. \"nat\" vs \"n\". There might be some really old proofs <br>\nrelying on that.</p>\n<p>-- Lars</p>",
        "id": 294243959,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908168
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nThe first is indeed true.  I am not sure whether there are still<br>\nexamples for that (which should affect only legacy induct_tac)-</p>\n<p>Florian<br>\n<a href=\"/user_uploads/14278/MuUgAeAXq4vwCW3sJgP1l9hk/signature.asc\">signature.asc</a></p>",
        "id": 294246106,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908966
    }
]