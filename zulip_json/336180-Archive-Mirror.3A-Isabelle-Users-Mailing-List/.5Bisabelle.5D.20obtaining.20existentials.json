[
    {
        "content": "<p>From: John Wickerson &lt;<a href=\"mailto:jpw48@cam.ac.uk\">jpw48@cam.ac.uk</a>&gt;<br>\nHi,</p>\n<p>I have a very quick isabelle question about existentials...</p>\n<p>Here is a snippet of my proof:</p>\n<p>&lt;BEGIN&gt;</p>\n<p>hence \"∃b. ∃l' T.<br>\n⌊h'⌋ = (⌊l'⌋ ⋅ (toheap T) ⋅ ⌊r⌋) <br>\n∧ safe n C' l' T (Γ(a := ⌊A⌋)) ([Q]a) <br>\n∧ ((S(a:=⌊l⌋)) = T ∨ (∃B Sb Tb. (Γ(a := ⌊A⌋)) b = ⌊B⌋ <br>\n∧ (S(a:=⌊l⌋)) b = ⌊Sb⌋ ∧ T b = ⌊Tb⌋ ∧ (empty, Sb, Tb) ∈ B <br>\n∧ (S(a:=⌊l⌋))(b:=None) = T(b:=None)))\" by auto</p>\n<p>then obtain b where \"∃l' T.<br>\n⌊h'⌋ = (⌊l'⌋ ⋅ (toheap T) ⋅ ⌊r⌋) <br>\n∧ safe n C' l' T (Γ(a := ⌊A⌋)) ([Q]a) <br>\n∧ ((S(a:=⌊l⌋)) = T ∨ (∃B Sb Tb. (Γ(a := ⌊A⌋)) b = ⌊B⌋ <br>\n∧ (S(a:=⌊l⌋)) b = ⌊Sb⌋ ∧ T b = ⌊Tb⌋ ∧ (empty, Sb, Tb) ∈ B <br>\n∧ (S(a:=⌊l⌋))(b:=None) = T(b:=None)))\" by auto</p>\n<p>&lt;END&gt;</p>\n<p>It looks like a very straightforward deduction to me. Ignoring the messy long expression, we start with a something of the form \"∃b. BLAH\", and from this I want to say \"obtain b where BLAH\". But it doesn't work; auto can't handle it.</p>\n<p>My question is: which tactic should I use to prove this?</p>\n<p>Thanks very much,<br>\nJohn</p>",
        "id": 294121700,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660840048
    },
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:brianh@cs.pdx.edu\">brianh@cs.pdx.edu</a>&gt;<br>\nYou can use</p>\n<p>from <code>EX b. BLAH</code><br>\nobtain b where \"BLAH\" by (rule exE)</p>\n<p>or more simply,</p>\n<p>from <code>EX b. BLAH</code><br>\nobtain b where \"BLAH\" ..</p>\n<p>Of course, this can still fail if the types of the expressions don't<br>\nmatch. If \"BLAH\" has some polymorphic stuff in it, you might need to<br>\nadd some type constraints (either on parts of \"BLAH\" or on the<br>\nvariable \"b\").</p>\n<p>Hope this helps,</p>\n<ul>\n<li>Brian</li>\n</ul>",
        "id": 294121731,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660840060
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nSince the quantified expression was proved so easily, you can often<br>\nobtain the witnesses right away with the same method. In your case this<br>\nmeans you can probably drop the \"hence ... by auto\" altogether. If this<br>\nis too much in one go, prove the EX-statement first, as you did. But<br>\ndon't repeat the text but</p>\n<p>hence \"EX b. ...\" (is \"EX b. ?P b\") by auto<br>\nthen obtain b where \"?P b\" ..</p>\n<p>Note also that .. no longer works for multiple witnesses.</p>\n<p>Tobias</p>\n<p>John Wickerson schrieb:</p>",
        "id": 294121750,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660840067
    },
    {
        "content": "<p>From: John Wickerson &lt;<a href=\"mailto:jpw48@cam.ac.uk\">jpw48@cam.ac.uk</a>&gt;<br>\nHi Brian and Tobias, thanks very much for your helpful replies.</p>\n<p>cheers,<br>\nJohn</p>",
        "id": 294121762,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660840072
    }
]