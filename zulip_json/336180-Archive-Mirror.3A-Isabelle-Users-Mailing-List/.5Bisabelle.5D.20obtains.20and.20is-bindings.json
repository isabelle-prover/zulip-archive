[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@kit.edu\">andreas.lochbihler@kit.edu</a>&gt;<br>\nHi,</p>\n<p>when I declare an shorthand via (is \"?A\") in an obtain statement, the shorthand <br>\nonly becomes bound after the proof has been completed. Why is this? For ordinary <br>\nhave and show, I can use such shortcuts inside the proof. Is this different <br>\nbehaviour intended?</p>\n<p>Here's an example:</p>\n<p>notepad begin<br>\n   fix f :: \"'a =&gt; 'b\"<br>\n   obtain x y where \"f x = y\" (is \"?A x y\")<br>\n     (* term \"?A\"  fails *)<br>\n   proof -<br>\n     (* term \"?A\" fails *)<br>\n     show thesis sorry<br>\n   qed<br>\n   term ?A (* works *)</p>\n<p>have \"f x = y\" (is \"?A x y\")<br>\n   proof    -<br>\n     term \"?A\" (* works *)<br>\n     show ?thesis sorry<br>\n   qed<br>\nend</p>\n<p>Andreas</p>",
        "id": 294147409,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660848009
    },
    {
        "content": "<p>From: Christoph LANGE &lt;<a href=\"mailto:math.semantic.web@gmail.com\">math.semantic.web@gmail.com</a>&gt;<br>\nDear all,</p>\n<p>I ran into an issue related to one that was reported on this list before<br>\n(<a href=\"https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2011-November/msg00002.html\">https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2011-November/msg00002.html</a>,<br>\nby Andreas Lochbihler) but didn't get answered back then.</p>\n<p>Is there a way of abbreviating, with '(is \"&lt;abbrev-pattern&gt;\")', terms in<br>\na statement involving 'obtain … where \"&lt;term&gt;\"' or 'obtains … where<br>\n\"&lt;term&gt;\"' such that the abbreviations are usable in the proof of the<br>\nstatement?  Or, if there is no such way, is there are particular reason<br>\nfor why this is not possible?</p>\n<p>I encountered this in a lemma roughly structured as follows:</p>\n<p>lemma<br>\n  assumes …<br>\n  obtains thing where \"prop1 thing\" (* actually a lengthy expression *)<br>\n      and \"prop2 thing\"<br>\nproof -<br>\n  from assms obtain thing<br>\n    where \"prop1 thing\"<br>\n      and \"prop2 thing\"<br>\n    … (* proof *)<br>\n  then show ?thesis ..<br>\nqed</p>\n<p>I would have liked to abbreviate this to, e.g.,</p>\n<p>lemma<br>\n  assumes …<br>\n  obtains thing where \"prop1 thing\" (is \"?prop1\")<br>\n      and \"prop2 thing\" (is \"?prop2\")<br>\nproof -<br>\n  from assms obtain thing<br>\n    where \"?prop1\"<br>\n      and \"?prop2\"<br>\n    … (* proof *)<br>\n  then show ?thesis ..<br>\nqed</p>\n<p>Cheers, and thanks in advance for any help,</p>\n<p>Christoph</p>",
        "id": 294243399,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660907937
    }
]