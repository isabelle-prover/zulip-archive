[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nHi list,</p>\n<p>more or less intuitively, I used the of-attribute with dummy-patterns,<br>\ne.g.  <br>\n  thm imp_refl[of \"undefined _ _\"]</p>\n<p>inside a proof, this works fine. However, outside a proof, I get the<br>\nerror message <br>\n  Duplicate fixed variable(s): \"uu_\"</p>\n<p>The same behaviour for \"where\".</p>\n<p>Is the of-attribute supposed to work with dummy-patterns or<br>\ndo they only work by accident within proofs?</p>\n<p>If the latter is the case:<br>\n  FEATURE REQUEST: Dummy patterns with \"of\" and \"where\"!</p>\n<p>Best,<br>\n  Peter</p>\n<p>==============================================<br>\nExample:</p>\n<p>theory Scratch<br>\nimports Main <br>\nbegin<br>\n  thm imp_refl[of \"undefined _ _\"]   (* Duplicate fixed variable(s):<br>\n\"uu_\" *)<br>\n  context begin<br>\n    thm imp_refl[of \"undefined _ _\"] (* Duplicate fixed variable(s):<br>\n\"uu_\" *)<br>\n  end</p>\n<p>notepad begin<br>\n    thm imp_refl[of \"undefined _ _\"] (* undefined ?uu5 ?uua5 ‚ü∂<br>\nundefined ?uu5 ?uua5 *)<br>\n  end</p>",
        "id": 294645099,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661163727
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nIt is official since Isabelle2015, see NEWS:</p>\n<ul>\n<li>Explicit instantiation via attributes \"where\", \"of\", and proof methods<br>\n\"rule_tac\" with derivatives like \"subgoal_tac\" etc. admit dummy patterns<br>\n(\"_\") that stand for anonymous local variables.</li>\n</ul>\n<p>The breakdown above indicates that I've got the context policy wrong for <br>\nthe \"eigen context\" of dummy variables.  I need to revisit the whole <br>\ncomplex again for the next release anyway: the main point is to have <br>\ninstantiations work properly in Eisbach, and we are only half-way through <br>\nwith that.</p>\n<p>Right now it works outside a proof body for at most one dummy variable. In <br>\nany case the result will be a bit ugly: some derivative of \"uu\".</p>\n<p>Makarius</p>",
        "id": 294645187,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661163770
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nJust for documentation: The (obvious) workaround is to write <br>\n  thm imp_refl[of \"undefined a b\" for a b]</p>",
        "id": 294645296,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661163815
    }
]