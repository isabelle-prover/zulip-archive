[
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nHallo,</p>\n<p>this is analogous to the approach taken in functional languages such as<br>\nHaskell: you can define a type class (e.g. \"getval\") that defines a<br>\ngetval function of the appropriate type and then declare type class<br>\ninstances for your two datatypes. This way, you get something akin to<br>\noverloading in Java. But let us not talk about the Java type system.</p>\n<p>If you don't know how to do use type classes in Isabelle, you can find<br>\nlots of examples in the Isabelle theory library; off the top of my head,<br>\nI vaguely remember something like this being done for a function<br>\nextracting variables from boolean and arithmetic expressions in IMP,<br>\nthat could serve as an example.</p>\n<p>Of course, there is also the type class tutorial by Florian Haftmann:<br>\n<a href=\"http://isabelle.in.tum.de/dist/Isabelle2013/doc/classes.pdf\">http://isabelle.in.tum.de/dist/Isabelle2013/doc/classes.pdf</a></p>\n<p>Regarding the second question, I'm not entirely sure if I understood<br>\nthat correctly, but if I have, the only way to do this that I can think<br>\nof is also by incorporating a function that does this into the type<br>\nclass and then writing appropriate instances for your datatypes.</p>\n<p>Cheers,<br>\nManuel</p>",
        "id": 294246030,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908956
    },
    {
        "content": "<p>From: Henri DEBRAT &lt;<a href=\"mailto:Henri.Debrat@loria.fr\">Henri.Debrat@loria.fr</a>&gt;<br>\nHi all,</p>\n<p>Let's say I have two datatypes:</p>\n<p>datatype 't t1 = C1a 't | C1b 't option</p>\n<p>datatype 't t2 = C2a 't | C2b 't option</p>\n<p>Then let's say that for a common 'y type, I have two elements e1 of type 'y t1  and e2 of type 'y t2.</p>\n<p>let us finally say there is a value v such that e1 = C1a v and e2 = C2a v.</p>\n<p>How could I define a \"getval\" function such that getval e1 = getval e2 is a admissible expression ? What type would it have ? It sounds like Java overloading, but I do not reckon there is such a thing in Isabelle, am I wrong ?</p>\n<p>Secondly, is there any way I could say that some element e, which type could be either t1 or t2, is such that getval e = Some v, without having to say wether C1b or C2b was used to define it ?</p>\n<p>Thanks in advance !<br>\nH.</p>",
        "id": 294247537,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660909489
    }
]