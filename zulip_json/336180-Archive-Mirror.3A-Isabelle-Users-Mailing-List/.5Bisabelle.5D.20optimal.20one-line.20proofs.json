[
    {
        "content": "<p>From: Jose Manuel Rodriguez Caballero &lt;<a href=\"mailto:jose.manuel.rodriguez.caballero@ut.ee\">jose.manuel.rodriguez.caballero@ut.ee</a>&gt;<br>\nHi,<br>\n  I was revisiting Real_Vector_Spaces.thy in Isabelle2020-RC1 and I found the following lemma:</p>\n<p>lemma of_real_mult [simp]: \"of_real (x * y) = of_real x * of_real y\"<br>\n  by (simp add: of_real_def mult.commute)</p>\n<p>I do not understand why \"mult.commute\" is added to the simplifier.</p>\n<p>Indeed, I did the following experiment in order to check whether or not \"mult.commute\" was essential in this proof.</p>\n<p>hide_const of_real</p>\n<p>hide_fact of_real_mult</p>\n<p>definition of_Real :: \"real ⇒ 'a::real_algebra_1\"<br>\n  where \"of_Real r = scaleR r 1\"</p>\n<p>lemma of_Real_mult [simp]: \"of_Real (x * y) = of_Real x * of_Real y\"<br>\n  by (simp add: of_Real_def)</p>\n<p>If this is the case, could it be possible to automatically check proof-by-proof (in all the libraries of Isabelle/HOL using sledgehammer) if all the one-line proofs are optimal, i.e., there are not unnecessary assumptions?</p>\n<p>Kind regards,<br>\nJosé M.</p>",
        "id": 294824837,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243921
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nWithout any doubt, there must be numerous proofs can be simplified in this way.</p>\n<p>Much more useful however would be to identify theorems that include unnecessary preconditions or where the type class constraints are needlessly strong. I’m not aware of any practical way of doing this.</p>\n<p>Thanks for pointing out this example!</p>\n<p>Larry</p>",
        "id": 294824842,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661243926
    }
]