[
    {
        "content": "<p>From: \"Thiemann, René\" &lt;<a href=\"mailto:Rene.Thiemann@uibk.ac.at\">Rene.Thiemann@uibk.ac.at</a>&gt;<br>\nHi José,</p>\n<p>I only skimmed over the paper, and from what I saw it is not clear to me whether <br>\nexisting Isabelle libraries can do the computations:</p>\n<p>1) In the paper I mostly see operations like matrix-addition, multiplication, etc.<br>\n   All of these operations will be efficiently computed, by either using the<br>\n   matrices in HOL-Analysis/Euclidean_Space or AFP/Jordan_Normal_Form/Matrix.</p>\n<p>2) However, the oracle also mentions some library Sympy for symbolic manipulations.<br>\n   So, if this would involve calculations over matrices with symbolic expressions inside, then<br>\n   I’m not so sure whether that is supported.</p>\n<p>Best,<br>\nRené</p>",
        "id": 294748857,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661194618
    },
    {
        "content": "<p>From: Dominique Unruh &lt;<a href=\"mailto:unruh@ut.ee\">unruh@ut.ee</a>&gt;<br>\nHi,</p>\n<p>in <a href=\"https://github.com/dominique-unruh/qrhl-tool/\">https://github.com/dominique-unruh/qrhl-tool/</a> (file<br>\nisabelle-thys/QRHL_Code.thy), I have used AFP/Jordan_Normal_Form as a<br>\nbackend for checking verification-conditions for finite-dimensional<br>\npredicates in a quantum Hoare calculus (so far, a lot in my developent is<br>\nonly axiomatized, not proven, but it mostly just invokes the algorithms<br>\nfrom AFP/Jordan_Normal_Form). That works well. In my case, the predicates<br>\ninvolved are modeled as subspaces, and thus the verification conditions are<br>\nsubspace inclusions. In [liu2016theorem], they consider a quantum Hoare<br>\ncalculus where the predicates are Hermitian operators, so the<br>\nverification-conditions are of the form \"A is a positive operator\" which is<br>\na more difficult problem. I have not checked whether the algorithms from<br>\nAFP/Jordan_Normal_Form can do that.</p>\n<p>Best wishes,<br>\nDominique.</p>",
        "id": 294749054,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661194692
    },
    {
        "content": "<p>From: \"Thiemann, René\" &lt;<a href=\"mailto:Rene.Thiemann@uibk.ac.at\">Rene.Thiemann@uibk.ac.at</a>&gt;<br>\nDear Dominique,</p>\n<p>I’m not an expert here, but a quick web-search led me to the page:<br>\n<a href=\"https://www.gaussianwaves.com/2013/04/tests-for-positive-definiteness-of-a-matrix/\">https://www.gaussianwaves.com/2013/04/tests-for-positive-definiteness-of-a-matrix/</a></p>\n<p>Here, 3 sufficient criteria are provided which can ensure positiveness. (I’m not sure about completeness)<br>\nAll of these criteria can be implemented via the algorithms available in AFP/Jordan_Normal_Form:</p>\n<p>1) only positive pivots: well this is an easy test, since Gauss-Jordan-elimination is available.<br>\n2) only positive determinants of upper-left sub-matrices: also easy, since determinants and taking<br>\n   sub-matrices is supported.<br>\n3) only positive eigenvalues: in combination with algebraic numbers (AFP/Algebraic_Numbers) this is easy, since you just invoke<br>\n   the factorization algorithm on the charateristic polynomial to compute the eigenvalues.<br>\n   Only limitation: the input matrix must contain rational numbers as input, since otherwise the factorization<br>\n   algorithm will most likely fail.</p>\n<p>Cheers,<br>\nRené<br>\n<a href=\"/user_uploads/14278/cESuVks2SjkoCMVa0UrU-JW1/signature.asc\">signature.asc</a></p>",
        "id": 294749499,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661194882
    },
    {
        "content": "<p>From: Dominique Unruh &lt;<a href=\"mailto:unruh@ut.ee\">unruh@ut.ee</a>&gt;<br>\nHi René,</p>\n<p>thanks for those pointers. I assume that the authors of [liu2016theorem]<br>\neither were not aware of AFP/Jordan_Normal_Form, or went for an external<br>\noracle for simplicity or speed.</p>\n<p>Some comments on the three approaches:</p>\n<p>Here, 3 sufficient criteria are provided which can ensure positiveness.</p>\n<blockquote>\n<p>(I’m not sure about completeness)<br>\n</p>\n</blockquote>\n<p>We need to be clear what we mean by \"positive\". In the context of<br>\n[liu2016theorem],<br>\nI think we need what is called more precisely \"positive semidefinite\"<br>\n(usually called positive in the quantum community). The page you linked, I<br>\nthink, refers to positive-definite. So the criteria are slightly different.</p>\n<blockquote>\n<p>All of these criteria can be implemented via the algorithms available in<br>\nAFP/Jordan_Normal_Form:</p>\n<p>1) only positive pivots: well this is an easy test, since<br>\nGauss-Jordan-elimination is available.<br>\n</p>\n</blockquote>\n<p>I don't know what they mean by this. Consider the (0 1 \\\\ 1 0). This matrix<br>\nis negative. Gaussian elimination gives the identity which has only 1's on<br>\nthe diagonal. So something's wrong here.</p>\n<blockquote>\n<p>2) only positive determinants of upper-left sub-matrices: also easy, since<br>\ndeterminants and taking<br>\n   sub-matrices is supported.<br>\n</p>\n</blockquote>\n<p>For positive-semidefinite, we need to check <em>all</em> sub-matrices (not just<br>\nupper-left). (<a href=\"https://en.wikipedia.org/wiki/Sylvester%27s_criterion\">https://en.wikipedia.org/wiki/Sylvester%27s_criterion</a>) Thus<br>\nexponentially many!</p>\n<blockquote>\n<p>3) only positive eigenvalues: in combination with algebraic numbers<br>\n(AFP/Algebraic_Numbers) this is easy, since you just invoke<br>\n   the factorization algorithm on the charateristic polynomial to compute<br>\nthe eigenvalues.<br>\n   Only limitation: the input matrix must contain rational numbers as<br>\ninput, since otherwise the factorization<br>\n   algorithm will most likely fail.<br>\n</p>\n</blockquote>\n<p>And you can read off the eigenvalues directly from the Jordan normal form.</p>\n<p>But the limitation to rational inputs might be a problem: Matrices involved<br>\nin quantum computing often involve [image: \\frac{1}{\\sqrt{2}}].</p>\n<p>That being said, I think it might be interesting to explore this in more<br>\ndetail to make [liu2016theorem] not rely on oracles.</p>\n<p>Best wishes,<br>\nDominique.</p>\n<blockquote>\n<p>Cheers,<br>\nRené<br>\n</p>\n</blockquote>",
        "id": 294749534,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661194894
    },
    {
        "content": "<p>From: \"Thiemann, René\" &lt;<a href=\"mailto:Rene.Thiemann@uibk.ac.at\">Rene.Thiemann@uibk.ac.at</a>&gt;</p>\n<blockquote>\n<p>Some comments on the three approaches:</p>\n<p>Here, 3 sufficient criteria are provided which can ensure positiveness. (I’m not sure about completeness)</p>\n<p>We need to be clear what we mean by \"positive\". In the context of [liu2016theorem], I think we need what is called more precisely \"positive semidefinite\" (usually called positive in the quantum community). The page you linked, I think, refers to positive-definite. So the criteria are slightly different.</p>\n</blockquote>\n<p>Ok, agreed.</p>\n<blockquote>\n<p>All of these criteria can be implemented via the algorithms available in AFP/Jordan_Normal_Form:</p>\n<p>2) only positive determinants of upper-left sub-matrices: also easy, since determinants and taking<br>\n   sub-matrices is supported.</p>\n<p>For positive-semidefinite, we need to check all sub-matrices (not just upper-left). (<a href=\"https://en.wikipedia.org/wiki/Sylvester%27s_criterion\">https://en.wikipedia.org/wiki/Sylvester%27s_criterion</a>) Thus exponentially many!</p>\n</blockquote>\n<p>Indeed, but still it is executable. So, if the matrices are small enough, this might be a feasible approach.</p>\n<blockquote>\n<p>3) only positive eigenvalues: in combination with algebraic numbers (AFP/Algebraic_Numbers) this is easy, since you just invoke<br>\n   the factorization algorithm on the charateristic polynomial to compute the eigenvalues.<br>\n   Only limitation: the input matrix must contain rational numbers as input, since otherwise the factorization<br>\n   algorithm will most likely fail.</p>\n<p>And you can read off the eigenvalues directly from the Jordan normal form. </p>\n</blockquote>\n<p>Well, this does not help in algorithm in AFP/Jordan_Normal_Form: there, the JNF-computation demands a factorization<br>\nof the characteristic polynomial: it is based on Schur-decomposition which as input takes the list of eigenvalues.</p>\n<blockquote>\n<p>But the limitation to rational inputs might be a problem: Matrices involved in quantum computing often involve 1/sqrt(2).</p>\n</blockquote>\n<p>Interesting. Then perhaps approach 2) can be used now, and it will give me some motivation by trying to extend the <br>\nformalized factorization algorithm so that it can also deal with polynomials that have algebraic coefficients, not just rational.</p>\n<p>Best,<br>\nRené</p>",
        "id": 294749558,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661194900
    },
    {
        "content": "<p>From: Dominique Unruh &lt;<a href=\"mailto:unruh@ut.ee\">unruh@ut.ee</a>&gt;<br>\nHi René,</p>\n<blockquote>\n<p>2) only positive determinants of upper-left sub-matrices: also easy,<br>\nsince determinants and taking</p>\n<blockquote>\n<p>sub-matrices is supported.</p>\n<p>For positive-semidefinite, we need to check all sub-matrices (not just<br>\nupper-left). (<a href=\"https://en.wikipedia.org/wiki/Sylvester%27s_criterion\">https://en.wikipedia.org/wiki/Sylvester%27s_criterion</a>) Thus<br>\nexponentially many!</p>\n</blockquote>\n<p>Indeed, but still it is executable. So, if the matrices are small enough,<br>\nthis might be a feasible approach.<br>\n</p>\n</blockquote>\n<p>But we should not forget that this means that we also have to prove<br>\nSylvester's theorem.<br>\nI don't know how difficult that is.</p>\n<p>An easier approach (both algorithmically and in terms of what development<br>\nalready exists) might be the following:</p>\n<p>- Input: Matrix A.<br>\n   - If A is not hermitian, return false. (Positive matrices are hermitian<br>\n   by definition.)</p>\n<p>- Compute the characteristic polynomial p of A. (Since A is hermitian, A<br>\n   has only real eigenvalues, thus p is a polynomial with only real roots, and<br>\n   thus has only real coefficients.)</p>\n<p>- We use Sturm's theorem/algorithm (over the algebraic reals) to find<br>\n   out if all roots of p are &gt;=0. If so, return true. Otherwise, return false.</p>\n<p>Of course, there might be even better algorithms for deciding positivity. I<br>\nam not an expert in that area.</p>\n<p>Best wishes,<br>\nDominique.</p>\n<blockquote>\n<blockquote>\n<p>3) only positive eigenvalues: in combination with algebraic numbers<br>\n(AFP/Algebraic_Numbers) this is easy, since you just invoke<br>\n   the factorization algorithm on the charateristic polynomial to<br>\ncompute the eigenvalues.<br>\n   Only limitation: the input matrix must contain rational numbers as<br>\ninput, since otherwise the factorization<br>\n   algorithm will most likely fail.</p>\n<p>And you can read off the eigenvalues directly from the Jordan normal<br>\nform.</p>\n</blockquote>\n<p>Well, this does not help in algorithm in AFP/Jordan_Normal_Form: there,<br>\nthe JNF-computation demands a factorization<br>\nof the characteristic polynomial: it is based on Schur-decomposition which<br>\nas input takes the list of eigenvalues.</p>\n<blockquote>\n<p>But the limitation to rational inputs might be a problem: Matrices<br>\ninvolved in quantum computing often involve 1/sqrt(2).</p>\n</blockquote>\n<p>Interesting. Then perhaps approach 2) can be used now, and it will give me<br>\nsome motivation by trying to extend the<br>\nformalized factorization algorithm so that it can also deal with<br>\npolynomials that have algebraic coefficients, not just rational.</p>\n<p>Best,<br>\nRené</p>\n</blockquote>",
        "id": 294749570,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661194907
    },
    {
        "content": "<p>From: José Manuel Rodriguez Caballero &lt;<a href=\"mailto:josephcmac@gmail.com\">josephcmac@gmail.com</a>&gt;<br>\nJust to emphasize that the decision problem</p>\n<p>INPUT: A Hermitian matrix H of order n whose entries are computable complex<br>\nnumbers.<br>\nOUTPUT: Is H positive semidefinite?</p>\n<p>is undecidable.</p>\n<p>Indeed, consider an arbitrary computational real number x. Let H be the<br>\nmatrix of order 1 whose single entry is x. Notice that x is equal to zero<br>\nif and only if both H and -H are positive semidefinite. On the one hand, if<br>\nthe above-mentioned problem was decidable, then we will be able to decide<br>\nwhether x is equal to zero or not. On the other hand, we can encode the<br>\nhalting problem as the proposition: x is equal to zero. Thus, the<br>\nabove-mentioned problem is undecidable.</p>\n<p>Therefore, the function of the oracle in</p>\n<p>Liu T, Li Y, Wang S, Ying M, Zhan N. A theorem prover for quantum Hoare<br>\nlogic and its applications. arXiv preprint arXiv:1601.03835. 2016 Jan 15.<br>\n<a href=\"https://arxiv.org/pdf/1601.03835.pdf\">https://arxiv.org/pdf/1601.03835.pdf</a></p>\n<p>is not to decide whether the matrix H is positive semidefinite, but just to<br>\nprovide a proof in cases where it is possible to do it in Python, e.g., if<br>\nthe entries of H are algebraic numbers, etc. Of course, we can think about<br>\nan oracle solving the above-mentioned decision problem, but such an oracle<br>\nwill be non-computable.</p>\n<p>Kind Regards,<br>\nJosé M.</p>",
        "id": 294749663,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661194931
    },
    {
        "content": "<p>From: José Manuel Rodriguez Caballero &lt;<a href=\"mailto:josephcmac@gmail.com\">josephcmac@gmail.com</a>&gt;<br>\nHello,<br>\n  I tend to be skeptical with respect to the mathematical meaning of the<br>\nclaims of the paper:</p>\n<p>Liu T, Li Y, Wang S, Ying M, Zhan N. A theorem prover for quantum Hoare<br>\nlogic and its applications. arXiv preprint arXiv:1601.03835. 2016 Jan 15.<br>\n<a href=\"https://arxiv.org/pdf/1601.03835.pdf\">https://arxiv.org/pdf/1601.03835.pdf</a><br>\n<a href=\"https://github.com/ijcar2016/propitious-barnacle\">https://github.com/ijcar2016/propitious-barnacle</a></p>\n<p>I feel that something essential is missing in the space between<br>\nIsabelle/HOL and Python. For example, in the lemma</p>\n<p>lemma grover:  \"valid I<br>\n               ((((Init q0 0);Init q1 1;Init q 2;Init r 3;<br>\n               Utrans Delta 2;Utrans H 0;Utrans H 1;Utrans H 2);<br>\n              While M0 M1 C Q);<br>\n           Cond [(N0,SKIP,p0),(N1,SKIP,p1),(N2,SKIP,p2),(N3,SKIP,p3)] )</p>\n<p>P\"</p>\n<p>on the one hand, we have that both I and P are just formal symbols<br>\nsatisfying some axioms, which happens to be satisfied also by square<br>\nmatrices having complex coefficients. On the other hand, in Python, these<br>\nsymbols are interpreted as concrete matrices. I feel a gap. I propose two<br>\napproaches in order to make sense of this situation.</p>\n<p>---Approach I.</p>\n<p>I think that the rigorous way to justify the use of the oracle in Python is<br>\nas follows:</p>\n<p>(a) we need to define I, P, and all the other formal symbols, as matrices<br>\nhaving complex numbers as entries in Isabelle/HOL;</p>\n<p>(b) we need to embed Python in Isabelle/HOL;</p>\n<p>(c) we need to prove the correctness of the algorithm for deciding the<br>\npositive semidefiniteness of the matrices (assuming that the entries are<br>\nalgebraic numbers) in the embedding of Python in Isabelle/HOL.</p>\n<p>Of course, we can forget Python and implement the algorithm for deciding<br>\nthe positive semidefiniteness of the matrices (assuming that the entries<br>\nare algebraic numbers) in Isabelle/HOL. I recall that for any complex<br>\nnumber z, we have:</p>\n<p>AlgebraicNumber(z) = there exists a polynomial P(X) ,having integer<br>\ncoefficients, such that P(z) = 0.</p>\n<p>I think that the hypothesis AlgebraicNumber(z) is essential for the oracle<br>\nto make sense, because without any restriction, the problem concerning the<br>\npositive semidefiniteness is undecidable.</p>\n<p>---Approach II. Do everything in Python and formally verify what we did in<br>\nIsabelle/HOL using an embedding of Python.</p>\n<p>I am not claiming that there is a problem in this paper. I am only pointing<br>\nout the parts where I am not convinced yet. Suggestions and criticism are<br>\nwelcome.</p>\n<p>Kind Regards,<br>\nJosé M.</p>",
        "id": 294749684,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661194937
    }
]