[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Tue, 12 Aug 2014, Alexander Kurz wrote:</p>\n<blockquote>\n<p>On 6 Aug 2014, at 10:35, Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n<blockquote>\n<p>A simple way to change the style for 'text' blocks is this:</p>\n<p>\\usepackage{color}<br>\n \\renewenvironment{isamarkuptext}{\\par\\isastyletext\\color{red}\\begin{isapar}}{\\end{isapar}}</p>\n</blockquote>\n<p>Thanks a lot, that works.</p>\n<p>**) What if I want to change the color of the Isabelle code (instead of <br>\nthe color of the text)?</p>\n</blockquote>\n<p>The isabelle.sty file defines various \\isastyle macros near the start, but <br>\nnote that certain high-level macros like \\isabellestyle redefine them <br>\nagain later.  You can have the last word in redefinition like this:</p>\n<p>\\renewcommand{\\isastyle}{\\small\\it\\color{blue}}<br>\n\\renewcommand{\\isastyletext}{\\normalsize\\rm\\color{black}}<br>\n\\renewcommand{\\isastyletxt}{\\rm\\color{black}}<br>\n\\renewcommand{\\isastylecmt}{\\rm\\color{black}}</p>\n<blockquote>\n<p>**) The command \"isabelle build -D …” takes a lot of time (approx a <br>\nminute) to produce the pdf. If I look at the log there seems to be going <br>\na lot before pdflatex starts. Is all of this needed if I just want to <br>\nget a quick pdf? Is there an option that would shorten the time needed <br>\nto produce the pdf?</p>\n</blockquote>\n<p>It depends on the base session of your Isabelle document.  The \"isabelle <br>\nbuild\" invokation is slowed down by JVM warmup and the size of the total <br>\nsource dependencies, before actually starting the build.  The startup can <br>\nbe accelarated by running the build tool directly from the Isabelle/Scala <br>\nshell that is available in Isabelle/jEdit via the Console/Scala <br>\nsub-plugin.</p>\n<p>Here is an example for Isabelle2014-RC3:</p>\n<p>Build.build(PIDE.options.value, new Build.Console_Progress, select_dirs = List(Path.explode(\"~/tmp/Test\")))</p>\n<p>This corresponds to the following bash command line:</p>\n<p>isabelle build -D ~/tmp/Test</p>\n<p>Makarius</p>",
        "id": 294288626,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660922692
    },
    {
        "content": "<p>From: Alexander Kurz &lt;<a href=\"mailto:axhkrz@gmail.com\">axhkrz@gmail.com</a>&gt;<br>\nHello,</p>\n<p>I have a question on the Isabelle document preparation using the command</p>\n<p>isabelle build -D MySession</p>\n<p>Is there an elegant way of outputting different colours? Eg Isabelle code in black and the latex text in between in blue? </p>\n<p>At the moment I am doing this by explicitly changing the colour inside the text{<em>…</em>} but that is tedious and, moreover, does not allow me to change the colour of the Isabelle code.</p>\n<p>Any help?</p>\n<p>Best wishes,</p>\n<p>Alexander</p>",
        "id": 294292517,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660923917
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nIsabelle document preparation is a fine art, and many more tricks have <br>\naccumulated over the years. Ultimately the generated tex source determines <br>\nthe meaning within the typesetting system.  I recommend to study the <br>\ngenerated .tex sources from the .thy and the isabelle sty files -- it all <br>\naccumulates in the document_output directory.</p>\n<p>A simple way to change the style for 'text' blocks is this:</p>\n<p>\\usepackage{color}<br>\n   \\renewenvironment{isamarkuptext}{\\par\\isastyletext\\color{red}\\begin{isapar}}{\\end{isapar}}</p>\n<p>You can also use semi-formal \"tags\" of document elements.  Some commands <br>\nalready have an implicit tag, e.g. theory begin/end and proof commands. <br>\nTheir style can be changed like this:</p>\n<p>\\renewcommand{\\isatagtheory}{\\begingroup\\color{blue}}<br>\n   \\renewcommand{\\endisatagtheory}{\\endgroup}</p>\n<p>\\renewcommand{\\isatagproof}{\\begingroup\\color{green}}<br>\n   \\renewcommand{\\endisatagproof}{\\endgroup}</p>\n<p>The notation %mytag after some command changes the default tag on the spot <br>\nand inserts isatag macros accordingly, which can then be defined in latex.</p>\n<p>Makarius</p>",
        "id": 294292543,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660923926
    }
]