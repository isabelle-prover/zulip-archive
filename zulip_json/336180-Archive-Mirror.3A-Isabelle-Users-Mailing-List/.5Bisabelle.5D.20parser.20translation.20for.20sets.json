[
    {
        "content": "<p>From: Paqui Lucio &lt;<a href=\"mailto:paqui.lucio@ehu.es\">paqui.lucio@ehu.es</a>&gt;<br>\nThe idea is to allow set expressions like  \"S1 Un {~A}\" (or \"S1 Un {~A} Un<br>\nS2\") for representing<br>\na set containing \"~A\" somewhere and, at the same time, naming the remaining<br>\nof the set by \"S1\". This would be<br>\nvery useful to implement sequents calculi using de set.thy of Isabelle/HOL<br>\nto represent the antecedent (and the consequent in the symmetric case). I am<br>\ntrying to do it, but I am a beginner Isabelle's user and parse_translations<br>\nare a bit hard for me.<br>\nThanks,<br>\nPaqui</p>\n<hr>\n<p>Paqui Lucio                                <br>\nDpto de LSI                    <br>\nFacultad de Informática<br>\nPaseo Manuel de Lardizabal, 1<br>\n20080-San Sebastián<br>\nSPAIN</p>\n<hr>\n<p>e-mail: <a href=\"mailto:paqui.lucio@ehu.es\">paqui.lucio@ehu.es</a><br>\nTfn: (+34) (9)43 015049  <br>\nFax: (+34) (9)43 015590<br>\nWeb: <a href=\"http://www.sc.ehu.es/paqui\">http://www.sc.ehu.es/paqui</a></p>\n<hr>",
        "id": 294045900,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660817270
    },
    {
        "content": "<p>From: \"Dr. Brendan Patrick Mahony\" &lt;<a href=\"mailto:brendan.mahony@dsto.defence.gov.au\">brendan.mahony@dsto.defence.gov.au</a>&gt;<br>\nIs this much better than simply checking for set membership?</p>\n<p>We tried to incorporate the Sequents.thy mechanism into HOL for our  <br>\nDOVE environment and<br>\nfound that all such rules needed to be augmented with a monotonicity  <br>\ncheck. The trick. as<br>\nI recall, in Sequents.thy is to translate $F, A to something like F <br>\n(A) and allow higher-order<br>\nunification to solve the sequence membership problem. When you  <br>\nactually try to model a semantics<br>\nfor this, you find the need to check that the higher order function F  <br>\nhas the property of adding<br>\nA to the sequence membership. Thus you are really just moving the  <br>\nsemantic problem from one place<br>\nto another.</p>",
        "id": 294045974,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660817288
    },
    {
        "content": "<p>From: Paqui Lucio &lt;<a href=\"mailto:paqui.lucio@ehu.es\">paqui.lucio@ehu.es</a>&gt;</p>\n<blockquote>\n<p>Is this much better than simply checking for set membership?</p>\n</blockquote>\n<p>I think that it allows an easier and more natural way of reasoning <br>\nwith sequent than the membersphip and subseteq checks, but <br>\nmaybe I miss something about how using sets better than I do it.</p>\n<blockquote>\n<p>We tried to incorporate the Sequents.thy mechanism into HOL <br>\nfor our DOVE environment and found that all such rules needed <br>\nto be augmented with a monotonicity check. The trick. as I <br>\nrecall, in Sequents.thy is to translate $F, A to something like F<br>\n(A) and allow higher-order<br>\nunification to solve the sequence membership problem. When <br>\nyou actually try to model a semantics for this, you find the <br>\nneed to check that the higher order function F has the <br>\nproperty of adding A to the sequence membership. Thus you are <br>\nreally just moving the semantic problem from one place to another.</p>\n</blockquote>\n<p>I see, thanks for the advice, I had imagine that semantics issues<br>\nshould be more complicate than in the set case because the higher-order<br>\nunification. However, once you have proved the meta-logical properties<br>\nof your calculus (if possible) using a this more intrincate semantics, <br>\nthe resulting calculus is, in my opinion, more suitable for users that<br>\nare accustomed to sequents. </p>\n<p>Please, could you tell me how to have access to more information <br>\n(public .thy files and so on, if possible)<br>\nabout your attempt for incorporating the Sequents.thy mechanism into HOL.<br>\nIn particular, how do you solve the incompatibility between Pure and CPure.<br>\nThanks in advance,<br>\nPaqui</p>\n<blockquote>\n<p>On 02/02/2007, at 9:13 PM, Paqui Lucio wrote:</p>\n<blockquote>\n<p>The idea is to allow set expressions like  \"S1 Un {~A}\" (or \"S1 Un <br>\n{~A} Un<br>\nS2\") for representing<br>\na set containing \"~A\" somewhere and, at the same time, naming the <br>\nremaining of the set by \"S1\". This would be very useful to <br>\nimplement <br>\nsequents calculi using de set.thy of Isabelle/HOL to represent the <br>\nantecedent (and the consequent in the symmetric case). I am <br>\ntrying to <br>\ndo it, but I am a beginner Isabelle's user and <br>\nparse_translations are <br>\na bit hard for me.</p>\n</blockquote>\n</blockquote>",
        "id": 294045984,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660817293
    },
    {
        "content": "<p>From: Paqui Lucio &lt;<a href=\"mailto:paqui.lucio@ehu.es\">paqui.lucio@ehu.es</a>&gt;<br>\nI wonder if there exists \"a parser/print translation\" for sets (from<br>\nHOL/set.thy) similar to the existing one for sequences in Sequents.thy. This<br>\nwould allows us to work with sets in a more confortable way. ¿Does somebody<br>\nknow some work on that?<br>\nPaqui</p>\n<hr>\n<p>Paqui Lucio                                <br>\nDpto de LSI                    <br>\nFacultad de Informática<br>\nPaseo Manuel de Lardizabal, 1<br>\n20080-San Sebastián<br>\nSPAIN</p>\n<hr>\n<p>e-mail: <a href=\"mailto:paqui.lucio@ehu.es\">paqui.lucio@ehu.es</a><br>\nTfn: (+34) (9)43 015049  <br>\nFax: (+34) (9)43 015590<br>\nWeb: <a href=\"http://www.sc.ehu.es/paqui\">http://www.sc.ehu.es/paqui</a></p>\n<hr>",
        "id": 294047037,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660817729
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nThis is an interesting idea, but it is non-trivial. The syntactic  <br>\ntreatment of sequents is designed to allow expressions like G, ~A, H  <br>\nthat represent a sequence of formulas containing ~A somewhere. It  <br>\nrelies on an encoding of associative unification in higher-order  <br>\nunification. It allows sequent calculus rules to be written naturally.</p>\n<p>It's not immediately clear to me how this could be added to the  <br>\ncurrent syntax for sets or what examples would benefit from it.</p>\n<p>Larry Paulson</p>",
        "id": 294047047,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660817735
    }
]