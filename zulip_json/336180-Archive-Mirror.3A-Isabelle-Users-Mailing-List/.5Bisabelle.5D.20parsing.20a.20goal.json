[
    {
        "content": "<p>From: Jeremy Dawson &lt;<a href=\"mailto:Jeremy.Dawson@anu.edu.au\">Jeremy.Dawson@anu.edu.au</a>&gt;<br>\nHi,</p>\n<p>In the file Scratch.thy (attached) the code</p>\n<p>ML {*<br>\nval tm = Syntax.read_term @{context}<br>\n   \"Pure.imp (HOL.Trueprop (A)) (HOL.Trueprop (A))\" ;<br>\nval ty = Term.type_of tm ;<br>\n*}</p>\n<p>works fine, giving a term of type prop,<br>\nbut the following code fails</p>\n<p>lemma test: \"Pure.imp (HOL.Trueprop (A)) (HOL.Trueprop (A))\"</p>\n<p>with an error message which I don't understand:</p>\n<p>Type unification failed: Clash of types \"prop\" and \"bool\"</p>\n<p>Type error in application: incompatible operand type</p>\n<p>Operator:  Trueprop :: bool \\&lt;Rightarrow&gt; prop<br>\nOperand:   A \\&lt;Longrightarrow&gt; A :: prop</p>\n<p>Can anyone explain why this happens?</p>\n<p>Thanks</p>\n<p>Jeremy<br>\n<a href=\"/user_uploads/14278/hJicOn4IC8OCqXLH8rZIfVPA/Scratch.thy\">Scratch.thy</a></p>",
        "id": 294735808,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189756
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nThe parser tries to parse as Boolean by default, wrapping around a<br>\nHOL.Trueprop automatically.</p>\n<p>Use PROP to override.</p>\n<p>lemma test: \"PROP (Pure.imp (HOL.Trueprop A) (HOL.Trueprop  A))\"</p>\n<p>note: This is the same as</p>\n<p>lemma test: \"A==&gt;A\"</p>",
        "id": 294735812,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189758
    },
    {
        "content": "<p>From: Dominique Unruh &lt;<a href=\"mailto:unruh@ut.ee\">unruh@ut.ee</a>&gt;<br>\nIn addition to Peter's insight:<br>\nTo get the same parsing behaviour in both cases, use Syntax.read_prop in<br>\nthe ML code.<br>\nThis will give you the same error in ML as in the lemma command.<br>\n(And Peter's fix works there, too.)</p>\n<p>Best wishes,<br>\nDominique.</p>",
        "id": 294735917,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189789
    },
    {
        "content": "<p>From: Jeremy Dawson &lt;<a href=\"mailto:Jeremy.Dawson@anu.edu.au\">Jeremy.Dawson@anu.edu.au</a>&gt;<br>\nHi Peter and Dominique,</p>\n<p>Thanks for your help!</p>\n<p>Cheers,</p>\n<p>Jeremy</p>",
        "id": 294735992,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661189820
    }
]