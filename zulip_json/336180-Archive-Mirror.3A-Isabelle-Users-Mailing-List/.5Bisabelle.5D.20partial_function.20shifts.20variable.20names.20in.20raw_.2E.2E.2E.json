[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi,</p>\n<p>The induction rule that partial_function generates shifts the names of the function's <br>\nparameters in the quantifiers in the induction hypothesis (see below for an example). This <br>\noccurs in both Isabelle2013-1 and 2013 (I did not check how it was before).  While these <br>\nnames are logically insignificant, not shifting them would ease reading these rules, <br>\nespecially, when I use meaningful names in the specification.</p>\n<p>theory Scratch imports Main begin</p>\n<p>partial_function (option) foo :: \"int =&gt; string =&gt; string option\"<br>\nwhere \"foo number msg = (if number = 0 then Some msg else foo (number - 1) (tl msg))\"</p>\n<p>thm foo.raw_induct</p>\n<p>(* prints as:<br>\n[|foo number msg numbera.<br>\n     !!msg b y. foo msg b = Some y ==&gt; ?P msg b y;<br>\n      (if number = 0 then Some msg else foo (number - 1) (tl msg)) =<br>\n      Some numbera |]<br>\n     ==&gt; ?P number msg numbera;<br>\n  foo ?number ?msg = Some ?y |]<br>\n==&gt; ?P ?number ?msg ?y<br>\n*)</p>\n<p>Note how the bound variable msg in the second line has type int, whereas b type string there.</p>\n<p>In the same spirit, I doubt that numbera (of type string) is a good name for the result of <br>\nthe computation.</p>\n<p>Andreas</p>",
        "id": 294255542,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660912452
    }
]