[
    {
        "content": "<p>From: C Y &lt;<a href=\"mailto:smustudent1@yahoo.com\">smustudent1@yahoo.com</a>&gt;<br>\nHas anyone tried building Isabelle with the new 4.2.0 release of<br>\npolyml?  I was able to build with the binary provided on the Isabelle<br>\nwebsite but using 4.2.0 doesn't seem to work at all - do I need some<br>\nsupport libs in polyml?</p>\n<p>Sorry for such an elementary question - I'm looking at putting together<br>\nan ebuild for gentoo linux and matters would be somewhat simplified if<br>\n4.2.0 worked, since the license on that release is LGPL.</p>\n<p>Cheers,<br>\nCliff Yapp</p>\n<hr>\n<p>Do You Yahoo!?<br>\nTired of spam?  Yahoo! Mail has the best spam protection around <br>\n<a href=\"http://mail.yahoo.com\">http://mail.yahoo.com</a></p>",
        "id": 293911741,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660747603
    },
    {
        "content": "<p>From: Lucas Dixon &lt;<a href=\"mailto:ldixon@inf.ed.ac.uk\">ldixon@inf.ed.ac.uk</a>&gt;<br>\nThe 2005 release of Isabelle doesn't type-check with the 4.2 release of <br>\nPolyML as some library things changed. However PolyML4.1.4 is the same <br>\nas 4.2 with some small changes for backward compatibility. The CVS <br>\nversion of Isabelle builds fine with PolyML 4.2</p>\n<p>best,<br>\nlucas</p>\n<p>C Y wrote:</p>",
        "id": 293911752,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660747609
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nNote that the Isabelle website offers a build with 4.1.4, which is an <br>\ninternal downgraded version of 4.2.0.  See the included README of the <br>\npolyml package for further details.  Please ignore the other 4.1.4 version <br>\non the source forge site of PolyML.</p>\n<p>You can spend quite some time playing around with all these variants.  We <br>\nhave found that it is most convenient for users just to download plain <br>\ntar.gz files for Isabelle + PolyML + ProofGeneral, without system package <br>\nmanagers getting in the way.</p>\n<p>Makarius</p>",
        "id": 293911753,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660747609
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThis sounds a bit strange to me -- users cannot be controlled like this. <br>\nEven more, all of this is free software, so people out there are free to <br>\ndo what they want (ideally help other people to simplify their life).</p>\n<p>Anyway, I suppose it is possible to produce Gentoo packages in the spirit <br>\nof the original Isabelle ones, while minimizing the potential for <br>\nsurprise. (I've once seen a BSD port of Isabelle where everything was torn <br>\nto bits and pieces -- doc into /usr/share/doc, src into /usr/src etc. -- <br>\njust to have a point to package things in the first place.)</p>\n<p>By default, Isabelle expects everything at the same directory level as <br>\nitself (e.g. /opt/Isabelle2005, /opt/polyml, /opt/ProofGeneral), or within <br>\nits own contrib (e.g. /opt/Isabelle2005/contrib/polyml, <br>\n/opt/Isabelle2005/contrib/ProofGeneral etc.).</p>\n<p>ProofGeneral can also go into some central /usr/lib/emacs place, but then <br>\nusers are forced to that version -- emacs will ignore private ones! PolyML <br>\nsetup has various traps and pitfalls, too, but I cannot recall all of them <br>\non the spot.</p>\n<p>Also note that some users have several Isabelle/PolyML/ProofGeneral <br>\nversions at the same time.</p>\n<p>Makarius</p>",
        "id": 293911758,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660747610
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Sat, 24 Jun 2006, C Y wrote:</p>\n<blockquote>\n<blockquote>\n<p>where everything was torn to bits and pieces -- doc  <br>\ninto /usr/share/doc, src into /usr/src etc. -- </p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>While I do not say that such reorganizations are never done arbitrarily, <br>\nthere is normally a global operating system level organization policy <br>\nacting to dictate such locations.</p>\n</blockquote>\n<p>Not quite so.  If you look at the Linux File System Standard, for example, <br>\nit leaves the freedom for vendors to put everything in one place, such as <br>\n/opt/my-application or /usr/local/my-application.  Then there is little <br>\nneed to do extra packaging, of course.</p>\n<p>In contrast Isabelle does expect certain things in certain positions <br>\nrelative to its main directory (doc, src, lib, etc).  The idea is that an <br>\nIsabelle installation is a single integral unit, not a collection of files <br>\nfloating through the global file system.</p>\n<blockquote>\n<blockquote>\n<p>Also note that some users have several Isabelle/PolyML/ProofGeneral <br>\nversions at the same time.</p>\n</blockquote>\n<p>Obviously, in a case such as that the packaging mechanisms are seldom <br>\nthe best way to go.</p>\n</blockquote>\n<p>So why bother at all? Why make simple things complicated anyway? With the <br>\npresent tar.gz collection even non-root users can install as many Isabelle <br>\nversions in any place they wish.</p>\n<p>Makarius</p>",
        "id": 293911769,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660747612
    },
    {
        "content": "<p>From: Martin Ellis &lt;<a href=\"mailto:m.a.ellis@ncl.ac.uk\">m.a.ellis@ncl.ac.uk</a>&gt;<br>\nOn Saturday 24 June 2006 21:21, Makarius wrote:</p>\n<blockquote>\n<p>ProofGeneral can also go into some central /usr/lib/emacs place, but then<br>\nusers are forced to that version -- emacs will ignore private ones! PolyML<br>\nsetup has various traps and pitfalls, too, but I cannot recall all of them<br>\non the spot.</p>\n</blockquote>\n<p>I think there's also an issue if the user decides to rebuild an Isabelle logic <br>\nwith their own patches.  If I understood/recall correctly, Isabelle favours <br>\nthe heaps in the installation directory over the ones in the user's <br>\n~/isabelle directory.</p>\n<p>For example, if there's a Pure logic build in both the install directory and <br>\nthe user's home directory, then I think HOL will be built using the Pure in <br>\nthe install directory as a basis.</p>\n<p>Personally, Isabelle is about the only piece of software I don't like the idea <br>\nof trusting to a package manager anyway, but I can see how providing binary <br>\npackages might help people get started with Isabelle faster.  However, it'd <br>\nprobably only save &lt; 1 hour of finding and following the installation <br>\ninstructions.  If the ebuild compiles from source, I suspect it'd take <br>\nsomewhat longer than that to install.</p>\n<blockquote>\n<p>Also note that some users have several Isabelle/PolyML/ProofGeneral<br>\nversions at the same time.</p>\n</blockquote>\n<p>Not to mention emacs. :o)</p>\n<p>Martin</p>",
        "id": 293911777,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660747614
    },
    {
        "content": "<p>From: C Y &lt;<a href=\"mailto:smustudent1@yahoo.com\">smustudent1@yahoo.com</a>&gt;<br>\n--- Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n<blockquote>\n<p>On Thu, 22 Jun 2006, C Y wrote:</p>\n<blockquote>\n<p>Has anyone tried building Isabelle with the new 4.2.0 release of<br>\npolyml?  I was able to build with the binary provided on the<br>\nIsabelle website but using 4.2.0 doesn't seem to work at all -<br>\ndo I need some support libs in polyml?</p>\n</blockquote>\n<p>Note that the Isabelle website offers a build with 4.1.4, which<br>\nis an internal downgraded version of 4.2.0.  See the included<br>\nREADME of the polyml package for further details.  Please ignore the<br>\nother 4.1.4 version on the source forge site of PolyML.</p>\n</blockquote>\n<p>Ah!  OK, that makes sense.</p>\n<blockquote>\n<p>You can spend quite some time playing around with all these<br>\nvariants. We have found that it is most convenient for users<br>\njust to download plain tar.gz files for Isabelle + PolyML +<br>\nProofGeneral, without system package managers getting in the way.</p>\n</blockquote>\n<p>The main reason I was asking is I was hoping to provide ebuild files<br>\nfor Gentoo Linux.  Gentoo is a bit uncommon in that the entire<br>\ndistribution and all end user applications are normally built from<br>\nsource.  Traditionally Gentoo usually does its best to stay out of the<br>\nway of software authors, insofar as this is consistent with maintaining<br>\na sane environment.</p>\n<p>Would there be objection to creating ebuild files for Isabelle, if the<br>\nebuild instructed the person installing the software that they should <br>\nnot contact the Isabelle team with support issues related to the ebuild<br>\ninstall?</p>\n<p>Cheers,<br>\nCY</p>\n<hr>\n<p>Do You Yahoo!?<br>\nTired of spam?  Yahoo! Mail has the best spam protection around <br>\n<a href=\"http://mail.yahoo.com\">http://mail.yahoo.com</a></p>",
        "id": 293911780,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660747616
    },
    {
        "content": "<p>From: C Y &lt;<a href=\"mailto:smustudent1@yahoo.com\">smustudent1@yahoo.com</a>&gt;<br>\n--- Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n<blockquote>\n<p>On Sat, 24 Jun 2006, C Y wrote:</p>\n<blockquote>\n<p>Would there be objection to creating ebuild files for Isabelle,<br>\nif the ebuild instructed the person installing the software that<br>\nthey should  not contact the Isabelle team with support issues<br>\nrelated to the ebuild install?</p>\n</blockquote>\n<p>This sounds a bit strange to me -- users cannot be controlled like<br>\nthis. Even more, all of this is free software, so people out there<br>\nare free to do what they want (ideally help other people to<br>\nsimplify their life).</p>\n</blockquote>\n<p>I didn't mean to suggest controlling the users.  This is done in (for<br>\nexample) the e17 ebuild to inform the end users that the gentoo ebuilds<br>\nare not a supported method of installing the software and advising them<br>\nthat the core development team may not wish to respond to bug reports<br>\ngenerated from the ebuild installed software.  Of course, the user may<br>\ndecide to raise a given issue anyway.</p>\n<p>Of course, free software allows the freedom for many things.  It is<br>\nusually a matter of courtesy to the original developers to consult with<br>\nthem and respect their wishes in cases such as this.  Unilateral action<br>\nseldom builds community spirit ;-).</p>\n<blockquote>\n<p>Anyway, I suppose it is possible to produce Gentoo packages in the<br>\nspirit of the original Isabelle ones, while minimizing the<br>\npotential for surprise. (I've once seen a BSD port of Isabelle<br>\nwhere everything was torn to bits and pieces -- doc  <br>\ninto /usr/share/doc, src into /usr/src etc. -- <br>\njust to have a point to package things in the first place.)</p>\n</blockquote>\n<p>This was more probably done in order to allow Isabelle users to locate<br>\ndocumentation, src, and other components in the same top level<br>\nstructured used by the vast majority of other software on the system. <br>\nWhile I do not say that such reorganizations are never done<br>\narbitrarily, there is normally a global operating system level<br>\norganization policy acting to dictate such locations.</p>\n<p>Possibly symlinking between standard OS level locations and standard<br>\nIsabelle locations would allow both to function, but that's just an<br>\nidea.</p>\n<blockquote>\n<p>By default, Isabelle expects everything at the same directory level<br>\nas itself (e.g. /opt/Isabelle2005, /opt/polyml, /opt/ProofGeneral),<br>\nor within its own contrib (e.g. /opt/Isabelle2005/contrib/polyml, <br>\n/opt/Isabelle2005/contrib/ProofGeneral etc.).</p>\n</blockquote>\n<p>OK, that explains its behavior when I installed it.  It does pose a<br>\ndifficult problem for packaging.</p>\n<blockquote>\n<p>ProofGeneral can also go into some central /usr/lib/emacs place, but<br>\nthen users are forced to that version -- emacs will ignore private<br>\nones! PolyML setup has various traps and pitfalls, too, but I cannot<br>\nrecall all of them on the spot.</p>\n</blockquote>\n<p>proofgeneral is actually already available in the Gentoo ebuild system,<br>\nand polyml is installable in its 4.2.0 form (the ebuild has not yet<br>\nbeen made mainstream.)  Hmm - it's a bit of a surprise that you can't<br>\nspecify a specific location for the proofgeneral package.  I'll have to<br>\ncheck into that. </p>\n<blockquote>\n<p>Also note that some users have several Isabelle/PolyML/ProofGeneral <br>\nversions at the same time.</p>\n</blockquote>\n<p>Obviously, in a case such as that the packaging mechanisms are seldom<br>\nthe best way to go.  It is actually possible to do this in Gentoo using<br>\na slot mechanism, but I doubt it is worth that trouble.  I was merely<br>\nhoping to make the \"most current\" Isabelle available for automatic<br>\ninstall (and more important, file tracking by the emerge system.)  For<br>\nthose doing serious development, package managers are usually a poor<br>\nfit.  Perhaps for software like Isabelle there is little distinction<br>\nbetween user and developer?  In any case, Isabelle's expectation of<br>\nhaving all activity at the same root level location does make packaging<br>\nproblematic.  Just out of curosity, what motivated that design<br>\ndecision?  Is the core Isabelle system itself changed by the<br>\nmanipulations performed?  (Sorry about my ignorance in such matters. <br>\nIt's looking like this is a much more difficult problem than I had<br>\nanticipated, so I'll have to do some research first.)</p>\n<p>Cheers,<br>\nCY</p>\n<hr>\n<p>Do You Yahoo!?<br>\nTired of spam?  Yahoo! Mail has the best spam protection around <br>\n<a href=\"http://mail.yahoo.com\">http://mail.yahoo.com</a></p>",
        "id": 293911784,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660747617
    },
    {
        "content": "<p>From: C Y &lt;<a href=\"mailto:smustudent1@yahoo.com\">smustudent1@yahoo.com</a>&gt;<br>\n--- Martin Ellis &lt;<a href=\"mailto:m.a.ellis@ncl.ac.uk\">m.a.ellis@ncl.ac.uk</a>&gt; wrote:</p>\n<blockquote>\n<p>On Saturday 24 June 2006 21:21, Makarius wrote:</p>\n<blockquote>\n<p>ProofGeneral can also go into some central /usr/lib/emacs place,<br>\nbut then users are forced to that version -- emacs will ignore<br>\nprivate ones! PolyML setup has various traps and pitfalls, too,<br>\nbut I cannot recall all of them on the spot.</p>\n</blockquote>\n<p>I think there's also an issue if the user decides to rebuild an<br>\nIsabelle logic with their own patches.  If I understood/recall<br>\ncorrectly, Isabelle favours the heaps in the installation directory<br>\nover the ones in the user's  ~/isabelle directory.</p>\n</blockquote>\n<p>Erm.  Is this configurable?</p>\n<blockquote>\n<p>For example, if there's a Pure logic build in both the install<br>\ndirectory and the user's home directory, then I think HOL will be<br>\nbuilt using the Pure in the install directory as a basis.</p>\n</blockquote>\n<p>Yes, that could pose a problem.</p>\n<blockquote>\n<p>Personally, Isabelle is about the only piece of software I don't <br>\nlike the idea of trusting to a package manager anyway, but I can<br>\nsee how providing binary packages might help people get started<br>\nwith Isabelle faster.  However, it'd probably only save &lt; 1 hour<br>\nof finding and following the installation instructions.  If the<br>\nebuild compiles from source, I suspect it'd take <br>\nsomewhat longer than that to install.</p>\n</blockquote>\n<p>The latter, pretty much by definition, is not an issue for Gentoo users<br>\n;-).  Building a complete system, particularly with KDE and OpenOffice<br>\ninstalled, usually takes a couple of days.</p>\n<p>As to the former, the major benefit of the emerge system is not<br>\nautomatic installation (although that is a convenience) but the ability<br>\nto track all files associated with the core install of the software,<br>\nand the ability to cleanly and automatically remove old/upgrade to new<br>\nversions of said software.  The case of root vs. user logic builds,<br>\nhowever, is a sticky one.  Normal practice would be for the \"builtin\"<br>\nlogic to be built and protected, and user experimentation on top of<br>\nthat or replacing it would take place in a user directory.  I gather<br>\nthat it is normal for each researcher to have their own copy or copies<br>\nof Isabelle which are altered, and for there to be no \"installed\"<br>\nbenchmark from which everyone diverges? (For instance, the way Firefox<br>\nhas a core browser installed but each user may significantly alter its<br>\nbehavior for themselves via config and plugin extensions?)  This<br>\ndefinitely would explain the absence of most major proof software from<br>\nGentoo and other distributions.</p>\n<p>Anyway, sorry to cause all the fuss.  If it works, it works.  Certainly<br>\nthe binaries seem functional on Gentoo in a \"normal\" install.</p>\n<p>Cheers,<br>\nCY</p>\n<hr>\n<p>Do You Yahoo!?<br>\nTired of spam?  Yahoo! Mail has the best spam protection around <br>\n<a href=\"http://mail.yahoo.com\">http://mail.yahoo.com</a></p>",
        "id": 293911787,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660747617
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nWhich means that there is no point to package Isabelle like this, because<br>\nit can be put into a single directory of the user's choice, and removed<br>\nwith rm -rf.</p>\n<p>So is there actually a problem you are trying to solve here, or is this<br>\njust the fun of playing with package managers?  (I know this only too<br>\nwell, because I used to entertain myself like this many years ago.)</p>\n<p>Makarius</p>",
        "id": 293911790,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660747618
    },
    {
        "content": "<p>From: C Y &lt;<a href=\"mailto:smustudent1@yahoo.com\">smustudent1@yahoo.com</a>&gt;<br>\n--- Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt; wrote:</p>\n<p>I guess you could say the \"problem\" I was trying to solve was providing<br>\na convenient installation method for Isabelle within the framework of<br>\nthe Gentoo system.  My own experience with software outside the package<br>\nmanagement system is somewhat mixed, as I have on more than one<br>\noccasion had \"abandoned\" programs hide for some time in isolated<br>\ndirectories and cause trouble when trying to run newer versions of the<br>\nsame software.  Or, on rarer occasions, a mistake on my part results in<br>\nthe accidental corruption or removal of a user level tree in some<br>\nfashion.  Also, binary only packages will age as core system libraries<br>\nare updated, eventually resulting in a non-working setup.  (For<br>\nexample, I cannot currently run Wolfram's MathReader.)  All of these<br>\nsituations can be avoided with a managed install in Gentoo, which not<br>\nonly tracks the package but has an automated way to rebuild any<br>\nsoftware that breaks as a result of an upgrade to some other library.</p>\n<p>I grant that Isabelle might be a less logical prospect for package<br>\nmanagement then most software - I am more accustomed to the model of<br>\nhaving a \"core\" set of functionality defined in a program which is<br>\nshared among multiple users and has the user specific<br>\ncode/functionality/settings defined in the user directory.  If Isabelle<br>\ndoesn't have a logical \"core\" that should be protected/shared, that<br>\ndoes tend to make it a less attractive prospect.  That also means I<br>\nneed to make a much more careful study of how Isabelle works.</p>\n<p>I seem to have stirred up a bit of a hornet's nest, for which I<br>\napologize - that was not my intention.  Mostly my thinking was that I<br>\nwould like to see tools such as Isabelle in much wider use, and one way<br>\nto help might be to \"incorporate\" Isabelle as a standard package in<br>\nGentoo.  Isabelle looks to be one of the best tools in this particular<br>\nfield of research, so it was a natural place to start.  If there are<br>\nsound reasons for avoiding package management then that is no problem.</p>\n<p>Cheers,<br>\nCY</p>\n<hr>\n<p>Do You Yahoo!?<br>\nTired of spam?  Yahoo! Mail has the best spam protection around <br>\n<a href=\"http://mail.yahoo.com\">http://mail.yahoo.com</a></p>",
        "id": 293911794,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660747619
    },
    {
        "content": "<p>From: Gerwin Klein &lt;<a href=\"mailto:gerwin.klein@nicta.com.au\">gerwin.klein@nicta.com.au</a>&gt;<br>\nNo, it's the other way around. By default ~/isabelle/heaps is looked in first.</p>\n<p>Cheers,<br>\nGerwin</p>",
        "id": 293911796,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660747620
    }
]