[
    {
        "content": "<p>From: Thomas Sternagel &lt;<a href=\"mailto:Thomas.Sternagel@uibk.ac.at\">Thomas.Sternagel@uibk.ac.at</a>&gt;<br>\nDear list,</p>\n<p>another question on corecursion and friends in Isabelle/HOL development<br>\nversion 6703434c96d6:<br>\nIn theory 'Foo' below I am able to show that function \"some\" which<br>\ndepends on an inductive set \"A\" is friendly but when I try to do the<br>\nsame for function \"some'\" defined similarly but depending on the<br>\ninductive set \"C X\" instead, I get the error message:</p>\n<p>\"Eps\" not polymorphic enough to be applied like this and no friend</p>\n<p>I'm not quite sure why the former works whereas the latter fails.<br>\nMaybe someone besides Jasmin is able to answer this one?</p>\n<p>theory Foo<br>\nimports<br>\n  \"~~/src/HOL/Library/Stream\"<br>\n  \"~~/src/HOL/Library/BNF_Corec\"<br>\nbegin</p>\n<p>inductive_set A :: \"'a stream set\" where \"s ∈ A\"</p>\n<p>primcorec some :: \"'a ⇒ 'a stream ⇒ 'a stream\" where<br>\n  \"some a s = (let t = SOME v. v ∈ A in SCons a (stl t))\"</p>\n<p>friend_of_corec some :: \"'a ⇒ 'a stream ⇒ 'a stream\" where<br>\n  \"some a s = (let t = SOME v. v ∈ A in SCons a (stl t))\"<br>\nby (auto simp add: stream.expand)</p>\n<p>inductive_set C :: \"'a set ⇒ 'a stream set\" for X :: \"'a set\" where<br>\n\"shd s ∈ X ⟹ s ∈ C X\"</p>\n<p>primcorec some' :: \"'a set ⇒ 'a ⇒ 'a stream ⇒ 'a stream\" where<br>\n  \"some' X a s = (let t = SOME v. v ∈ C X in SCons a (stl t))\"</p>\n<p>friend_of_corec some' :: \"'a set ⇒ 'a ⇒ 'a stream ⇒ 'a stream\" where<br>\n  \"some' X a s = (let t = SOME v. v ∈ C X in SCons a (stl t))\"</p>\n<p>end</p>\n<p>Cheers,<br>\nTom</p>",
        "id": 294684503,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661177499
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@inria.fr\">jasmin.blanchette@inria.fr</a>&gt;<br>\nHi Thomas,</p>\n<p>At the heart of \"corec\" and friends is a procedure we call \"surface synthesis\". It is described in our paper draft \"Friends with Benefits\" (found e.g. on my home page).</p>\n<p>That synthesis is difficult to explain, but in short, if it succeeds, you still have to prove parametricity of whatever polymorphic constants in ran along the way. And I can already guarantee you that you will not succeed at proving \"Eps\" parametric, because it is not. (In general, underspecification is a killer for parametricity.)</p>\n<p>Cheers,</p>\n<p>Jasmin</p>",
        "id": 294694656,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661178033
    }
]