[
    {
        "content": "<p>From: Lars Hupel &lt;<a href=\"mailto:hupel@in.tum.de\">hupel@in.tum.de</a>&gt;<br>\nDear BNF developers,</p>\n<p>may I suggest theorems of the following form to be generated by the<br>\ndatatype package?</p>\n<p>theorem list_all_map:<br>\n  fixes P :: \"'a ⇒ bool\"<br>\n    and f :: \"'b ⇒ 'a\"<br>\n    and xs :: \"'b list\"<br>\n  shows \"list_all P (map f xs) = list_all (λx. P (f x)) xs\"</p>\n<p>Cheers<br>\nLars</p>",
        "id": 294670864,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661173358
    },
    {
        "content": "<p>From: Dmitriy Traytel &lt;<a href=\"mailto:traytel@inf.ethz.ch\">traytel@inf.ethz.ch</a>&gt;<br>\nHi Lars,</p>\n<p>in a recent repository version (e.g. c4fad0569a24) you get list.pred_map:</p>\n<p>theorem<br>\n  fixes Q :: \"'a ⇒ bool\" <br>\n    and f :: \"'b ⇒ 'a\" <br>\n    and x :: \"'b list\" <br>\n  shows \"list_all Q (map f x) = list_all (Q o f) x”</p>\n<p>Additionally unfolding o_def will give you what you want.</p>\n<p>Dmitriy</p>",
        "id": 294670895,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661173365
    }
]