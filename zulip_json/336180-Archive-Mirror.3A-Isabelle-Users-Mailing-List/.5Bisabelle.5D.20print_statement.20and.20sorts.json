[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\nHi all,</p>\n<p>print_statement is a nice feature, as it prints a theorem in long-goal<br>\nformat, ready to be copied into the edit-buffer, e.g. to slightly modify<br>\nit.</p>\n<p>However, if sorts are involved, the printed statement is, in many cases,<br>\njust not valid, as sort constraints are omitted:</p>\n<p>print_statement order_refl</p>\n<p>theorem order_refl:<br>\n  fixes x :: \"'a\" <br>\n  shows \"x ≤ x\"</p>\n<p>*** Type unification failed: Variable 'a::type not of sort ord</p>\n<p>Using show_sorts is also not what I really want, as the sort-annotations<br>\npop up in the term, too:</p>\n<p>theorem order_refl:<br>\n  fixes x :: \"'a∷preorder\" <br>\n  shows \"(x∷'a∷preorder) ≤ x\"</p>\n<p>The best way might be to make print_statement only print non-default<br>\nsorts in the fixes-part.</p>",
        "id": 294279858,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660919980
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThere is a deeper problem here: the simulteneous \"uncheck\" phase for <br>\ntypes/terms before printing should take care of constraints, and reduce <br>\nthem to a sensible minimum.  It doesn't do that for various historic <br>\nreasons: the scope is just a single type or term.</p>\n<p>It has required some years to make the dual \"check\" phase use constraints <br>\nsimulteneously, and \"uncheck\" might require some time to get there as <br>\nwell.</p>\n<p>Makarius</p>",
        "id": 294284765,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660921477
    }
]