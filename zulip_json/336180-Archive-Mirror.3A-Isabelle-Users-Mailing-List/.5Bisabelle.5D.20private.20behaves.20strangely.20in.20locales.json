[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear Makarius,</p>\n<p>The qualifier private behaves strangely inside locales. If I have a private constant <br>\ndefinition (say foo) in a locale (say l1) and want to define a constant of the same name <br>\nin a sublocale (say l2), I get an error about <a href=\"http://local.foo\">local.foo</a> being declared twice if and only <br>\nif both definitions depend on parameters of the locale. As the private modifier should <br>\nensure that the first declaration does not leave the scope of the unnamed context block, I <br>\nwould have expected Isabelle to accept this always.</p>\n<p>Below is a minimal example. If you change any of the defining equations to \"foo = ()\", <br>\nIsabelle2015 accepts them. As is, I get the error. Is there anything else I can do other <br>\nthan choosing different names?</p>\n<p>locale l1 = fixes n :: unit begin<br>\ncontext begin<br>\nprivate definition foo where \"foo = n\"<br>\nend<br>\nend</p>\n<p>locale l2 = l1 + assumes \"True\" begin<br>\ndefinition foo where \"foo = n\" (* error duplicate constant declaration *)<br>\nend</p>\n<p>Thanks,<br>\nAndreas</p>",
        "id": 294641303,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661162225
    }
]