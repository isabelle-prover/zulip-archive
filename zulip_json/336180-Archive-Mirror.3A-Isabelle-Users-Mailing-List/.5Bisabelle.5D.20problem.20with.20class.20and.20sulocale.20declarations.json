[
    {
        "content": "<p>From: Viorel Preoteasa &lt;<a href=\"mailto:viorel.preoteasa@abo.fi\">viorel.preoteasa@abo.fi</a>&gt;<br>\nHello,</p>\n<p>I have many algebraic structures developed as classes. At some point<br>\nI want a new class with additional constant zero.</p>\n<p>class bounded_some_algebra = zero + some_algebra +<br>\n   assumes zero_smallest: \"0 &lt;= a\"</p>\n<p>However, when I introduce this declaration I get the error:</p>\n<p>*** Type unification failed</p>\n<hr>\n<p>*** Cannot meet type constraint:</p>\n<hr>\n<p>*** Term:  times::'b =&gt; 'b =&gt; 'b :: 'b =&gt; 'b =&gt; 'b<br>\n*** Type:  'a =&gt; 'a =&gt; 'a</p>\n<hr>\n<p>*** At command \"class\".</p>\n<p>This problem occur after the sublocale declaration:</p>\n<p>sublocale some_algebra &lt; lattice1!:some_lattice_b \"1\" \"op *\" \"op l-&gt;\" <br>\n\"op &lt;=\" \"op &lt;\" \"op r-&gt;\" \"op ­\\&lt;squnion&gt;1\"</p>\n<p>Here both some_lattice_b and some_algebra are subclasses of a common class.</p>\n<p>If I introduce the class bounded_some_algebra before the sublocale, then <br>\nit works,<br>\nexcept that I get a similar problem later when using bounded_some_algebra.</p>\n<p>I tried to make a smaller example to show the problem, but I could not <br>\nreproduce<br>\nit.</p>\n<p>Best regards,</p>\n<p>Viorel Preoteasa</p>",
        "id": 294116675,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838521
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Viorel,</p>\n<p>this problem has indeed already been detected and will disappear in the<br>\nnext Isabelle release.  For the moment an explicit type annotation<br>\nshould help:</p>\n<p>class bounded_some_algebra = zero + some_algebra +<br>\n  assumes zero_smallest: \"(0::'a) &lt;= a\"</p>\n<p>Sorry for the inconvenience,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/vbrRYrmZResWfPUAo_okQcSI/signature.asc\">signature.asc</a></p>",
        "id": 294116794,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838541
    },
    {
        "content": "<p>From: Viorel Preoteasa &lt;<a href=\"mailto:viorel.preoteasa@abo.fi\">viorel.preoteasa@abo.fi</a>&gt;<br>\nHi Florian,</p>\n<p>Your suggested solution is the first thing that I tried myself, however <br>\nit did not help.<br>\nThe problem occurs also for:</p>\n<p>class bounded_some_algebra = zero + some_algebra</p>\n<p>without assumptions.</p>\n<p>Best regards,</p>\n<p>Viorel</p>",
        "id": 294116809,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838548
    },
    {
        "content": "<p>From: Viorel Preoteasa &lt;<a href=\"mailto:viorel.preoteasa@abo.fi\">viorel.preoteasa@abo.fi</a>&gt;<br>\nHi Florian,</p>\n<p>I think that I have narrowed down the problem:</p>\n<p>class sup_a =<br>\n   fixes sup_a :: \"'a =&gt; 'a =&gt; 'a\" (infixl \"\\&lt;squnion&gt;1\" 65)</p>\n<p>class inf_a =<br>\n   fixes inf_a :: \"'a =&gt; 'a =&gt; 'a\" (infixl \"\\&lt;sqinter&gt;1\" 65)</p>\n<p>class test = ord + times + one + sup_a + inf_a +<br>\n   assumes a[simp]: \"a = 1\"<br>\n   and b[simp]:\"a = b\"<br>\n   and [simp]: \"a \\&lt;le&gt; b\"<br>\n   and [simp]: \"\\&lt;not&gt; a &lt; b\"<br>\nbegin<br>\nend;</p>\n<p>sublocale test &lt;  testlattice!: lattice \"op \\&lt;le&gt;\" \"op &lt;\" \"op <br>\n\\&lt;sqinter&gt;1\" \"op \\&lt;squnion&gt;1\";<br>\n   apply unfold_locales;<br>\n   by simp_all;</p>\n<p>class bounded = zero + test</p>\n<p>In this theory I get the same error for \"class bounded = zero + test\"</p>\n<p>I have two more unrelated questions for this example:</p>\n<ol>\n<li>\n<p>Why squnion and sqinter symbols are not defined in separate classes<br>\nas most of the other symbols? This would make there reuse simpler.</p>\n</li>\n<li>\n<p>Why the proof for the above sublocale fails if I remove assumption b <br>\nfrom test?<br>\nassumption a should replace any element with 1.</p>\n</li>\n</ol>\n<p>Best regards,</p>\n<p>Viorel</p>",
        "id": 294116858,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838564
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Viorel,</p>\n<p>sorry for that problem.  Its technical source is rather obscure (c.f.<br>\n<a href=\"http://isabelle.in.tum.de/repos/isabelle/rev/95a41e6ef5a8\">http://isabelle.in.tum.de/repos/isabelle/rev/95a41e6ef5a8</a>).  Until the<br>\nnext Isabelle release however we somehow have to live with it.  Since an<br>\nexplicit annotation fails in your example, I would suggest an auxiliary<br>\nclass with zero and one:</p>\n<blockquote>\n<p>class sup_a =<br>\n  fixes sup_a :: \"'a =&gt; 'a =&gt; 'a\" (infixl \"⊔1\" 65)</p>\n<p>class inf_a =<br>\n  fixes inf_a :: \"'a =&gt; 'a =&gt; 'a\" (infixl \"⊓1\" 65)</p>\n<p>class test = ord + times + one + sup_a + inf_a +<br>\n  assumes a[simp]: \"a = 1\"<br>\n  and b[simp]:\"a = b\"<br>\n  and [simp]: \"a ≤ b\"<br>\n  and [simp]: \"¬ a &lt; b\"<br>\nbegin<br>\nend</p>\n<p>sublocale test &lt;  testlattice!: lattice \"op ≤\" \"op &lt;\" \"op ⊓1\" \"op ⊔1\"<br>\n  apply unfold_locales<br>\n  by simp_all</p>\n<p>class zero_one = zero + one</p>\n<p>class bounded = zero_one + test</p>\n</blockquote>\n<p>The obscure problem is likely to occur if classes are combined with<br>\ndifferent parameters which are not mentioned in the body of the class<br>\ndeclaration, e.g. by assume.</p>\n<blockquote>\n<ol>\n<li>Why squnion and sqinter symbols are not defined in separate classes<br>\nas most of the other symbols? This would make there reuse simpler.</li>\n</ol>\n</blockquote>\n<p>The point is that inf and sup carry <em>no</em> syntax by default, so you are<br>\nfree to use squnion and sqinter in syntax as you like; only by importing<br>\nLattice_Syntax from the library this gets attached to inf and sup.</p>\n<blockquote>\n<ol start=\"2\">\n<li>Why the proof for the above sublocale fails if I remove assumption b<br>\nfrom test?<br>\nassumption a should replace any element with 1.</li>\n</ol>\n</blockquote>\n<p>a is not applied by the simplifier since it would loop: \"a = 1 = 1 = 1 =<br>\n...\".  You can apply it manually e.g. using apply (subst a).</p>\n<p>Hope this helps,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/KNu-Ndg9K4xbZNFLAluLjCvy/signature.asc\">signature.asc</a></p>",
        "id": 294116909,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838577
    },
    {
        "content": "<p>From: Viorel Preoteasa &lt;<a href=\"mailto:viorel.preoteasa@abo.fi\">viorel.preoteasa@abo.fi</a>&gt;<br>\nHi Florian,</p>\n<blockquote>\n<blockquote>\n<p>sublocale test&lt;   testlattice!: lattice \"op ≤\" \"op&lt;\" \"op ⊓1\" \"op ⊔1\"<br>\n   apply unfold_locales<br>\n   by simp_all</p>\n<p>class zero_one = zero + one</p>\n<p>class bounded = zero_one + test<br>\nThe obscure problem is likely to occur if classes are combined with<br>\ndifferent parameters which are not mentioned in the body of the class<br>\ndeclaration, e.g. by assume.<br>\nI managed to go forward using bot instead of zero. This is a good <br>\nsolution for me.</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<ol start=\"2\">\n<li>Why the proof for the above sublocale fails if I remove assumption b<br>\nfrom test?<br>\nassumption a should replace any element with 1.<br>\na is not applied by the simplifier since it would loop: \"a = 1 = 1 = 1 =<br>\n...\".  You can apply it manually e.g. using apply (subst a).<br>\nI tried apply (subst a), but when using on \"x = y\" it only replace x to <br>\n1, and<br>\nI did not know how to replace y with 1. The second application of subst will<br>\nchange again 1 to 1.</li>\n</ol>\n</blockquote>\n</blockquote>\n<p>Best regards,</p>\n<p>Viorel</p>",
        "id": 294116933,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838582
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\napply (subst (1) a)<br>\napply (subst (2) a)</p>\n<p>Hope this helps,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/RkS3B_rrsV-f0s2cEWpOXzaf/signature.asc\">signature.asc</a></p>",
        "id": 294116953,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838589
    }
]