[
    {
        "content": "<p>From: Randy Pollack &lt;<a href=\"mailto:rpollack@inf.ed.ac.uk\">rpollack@inf.ed.ac.uk</a>&gt;<br>\nConsider the following example, which I'm running in version 0.08 of<br>\nNominal Isabelle.</p>\n<p>theory example<br>\n  imports Nominal<br>\n  begin</p>\n<p>atom_decl name<br>\n  types names = \"(name * name) list\"</p>\n<p>lemma fresh_cxt_list:<br>\n    fixes a::name and G::names<br>\n    assumes h:\"a \\&lt;sharp&gt; G\"<br>\n    shows  \"a \\&lt;sharp&gt; map fst G\"<br>\n    using h<br>\n  proof (induct G, simp_all)<br>\n    case Nil<br>\n    hence \"a \\&lt;sharp&gt; ([]::names)\" by simp</p>\n<p>This is accepted.  The goal is </p>\n<p>[| a \\&lt;sharp&gt; []; a \\&lt;sharp&gt; G |] ==&gt; a \\&lt;sharp&gt; []</p>\n<p>Even though I have \"show sorts\" on, [] is not shown with a type, but<br>\nwe know that [] in the hyps can be given type \"[]::names\" because the<br>\nline \"hence ...\" is accepted.  However, this goal is not solved by<br>\nsimp or auto, and in fact Isabelle refuses to give type \"names\" to []<br>\nin the conclusion, even though it came from induction over an<br>\nexplicitely typed object, G.  E.g.</p>\n<p>thus \"a \\&lt;sharp&gt; ([]::names)\"</p>\n<p>is not accepted:</p>\n<p>*** Local statement will fail to solve any pending goal<br>\n  *** Failed attempt to solve goal by exported rule:<br>\n  ***   ((a \\&lt;sharp&gt; []) ==&gt; a \\&lt;sharp&gt; []<br>\n  *** At command \"thus\".</p>\n<p>How can I do this proof?</p>\n<p>Best,<br>\nRandy</p>",
        "id": 294048241,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660818227
    }
]