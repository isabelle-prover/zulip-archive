[
    {
        "content": "<p>From: Michael Norrish &lt;<a href=\"mailto:michael.norrish@nicta.com.au\">michael.norrish@nicta.com.au</a>&gt;<br>\nThe following code</p>\n<p>val thy = let<br>\n     val subrel_t =<br>\n         Logic.mk_classrel (nclass,<br>\n                            \"ArraysMemInstance.fourthousand_count\")<br>\n     val subrel_th =<br>\n         Goal.prove_raw [] (cterm_of thy subrel_t) (tac thy [])<br>\n   in<br>\n     AxClass.add_classrel subrel_th thy before<br>\n     writeln(\"Proved \" ^ nclass ^ \" &lt; fourthousand_count\")<br>\n   end</p>\n<p>produces the following error:</p>\n<p>Exception-<br>\n    THM<br>\n       (\"add_classrel: malformed class relation\",<br>\n          0,<br>\n          [\"OFCLASS('a, fourthousand_count_class)\"]) raised</p>\n<p>The theorem is proved, but then add_classrel complains.  What should I<br>\ndo differently?</p>\n<p>Michael.</p>",
        "id": 294051146,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660819525
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nAxClass.add_classrel refers to Logic.dest_classrel internally, which <br>\nexpectes results in canonical form, with generalized variables.  In <br>\ncontrast Logic.mk_classrel produces a fixed form, because this is what you <br>\nneed during the proof.</p>\n<p>Normally the system converts between fixed and arbitrary variables <br>\ntransparently, but this requires use of higher-level goal interfaces <br>\nrather than Goal.prove_raw.  See AxClass.prove_classrel (in <br>\nsrc/Pure/axclass.ML) of how to do something like that.</p>\n<p>Makarius</p>",
        "id": 294051253,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660819569
    },
    {
        "content": "<p>From: Michael Norrish &lt;<a href=\"mailto:michael.norrish@nicta.com.au\">michael.norrish@nicta.com.au</a>&gt;<br>\nMakarius wrote:</p>\n<p>Thanks.  Indeed, I should have been using prove_classrel all along.</p>\n<p>Michael.</p>",
        "id": 294051337,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660819605
    }
]