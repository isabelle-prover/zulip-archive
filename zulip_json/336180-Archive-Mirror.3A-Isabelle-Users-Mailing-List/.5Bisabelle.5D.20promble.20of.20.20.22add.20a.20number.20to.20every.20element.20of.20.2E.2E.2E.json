[
    {
        "content": "<p>From: Yucy &lt;<a href=\"mailto:yucy0405@163.com\">yucy0405@163.com</a>&gt;<br>\nHello,<br>\n   In order to add a integer number \"x\" to every elements of a \"int set A\", I  don't find a direct operation about it in the file \"HOL/Set.thy\". Hence, I try to define a function which can excute this operation, but i don't known how to proof the completeness and termination of this function. My function is given as follow:</p>\n<p>function f:: \"int \\&lt;Rightarrow&gt; int set \\&lt;Rightarrow&gt; int set\"<br>\n where <br>\n    \"f i {} = {}\"  |<br>\n    \"f i (insert a A) = {i+a}\\&lt;union&gt;(f i A)\"</p>\n<p>Maybe there are some simple methods which can implement this operation, I need your help! thanks for your attention!<br>\n                                         yucy</p>",
        "id": 294067845,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660826077
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt;<br>\nYucy wrote:<br>\nTry the image-function (syntax is _ ` _), defined in Set.thy.</p>\n<p>e.g. try</p>\n<p>\"(op + 1) <code> A\" (equal to: \"(%x. x+1) </code> A\" )</p>\n<p>which is the set A, where every element gets added one to it.</p>\n<p>Your approach might work for finite sets, but will definitely not for <br>\ninfinite sets.</p>\n<p>Regards,<br>\nPeter</p>",
        "id": 294067894,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660826101
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:lochbihl@ipd.info.uni-karlsruhe.de\">lochbihl@ipd.info.uni-karlsruhe.de</a>&gt;<br>\nHello Yucy,</p>\n<p>you can change a set by applying a modifying function (like \"add i\") to <br>\nevery element using the image function from Set.thy.</p>\n<p>Your function f is then:</p>\n<p>definition f<br>\nwhere \"f i A = (op + i) ` A\"</p>\n<p>You can then prove the lemmas<br>\n\"f i {} = {}\"\"<br>\n\"f i (insert a A) = insert (i + a) (f i A)\"<br>\nseparately.</p>\n<p>Recursion over sets is not easy at all, but there is the fold function <br>\nin Finite_Set, which only works properly for finite sets.</p>\n<p>Andreas</p>\n<p>Yucy schrieb:</p>",
        "id": 294067920,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660826107
    }
]