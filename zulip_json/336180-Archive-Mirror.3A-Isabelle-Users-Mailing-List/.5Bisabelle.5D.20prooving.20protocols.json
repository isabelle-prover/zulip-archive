[
    {
        "content": "<p>From: Novio &lt;<a href=\"mailto:novio@azet.sk\">novio@azet.sk</a>&gt;<br>\nHi,<br>\nI didnt find any material about how to<br>\nproove something in Isabelle. I need<br>\nto proove security protocols. I found<br>\nthat in installation package in Isabelle<br>\nare some protocols but I didnt find in<br>\nIsabelle's web page what to do exactly,<br>\nwhich button to push to begin prooving.</p>\n<p>Thanks, PH</p>",
        "id": 294122160,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660840183
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nYou will find ample documentation on our website:</p>\n<p><a href=\"http://www.cl.cam.ac.uk/research/hvg/Isabelle/documentation.html\">http://www.cl.cam.ac.uk/research/hvg/Isabelle/documentation.html</a></p>\n<p>Isabelle is not a push-button verifier. It takes some time to learn, and security protocol verification is one of the more demanding applications. Push-button security protocol verifiers do exist, and possibly you should obtain one of those.</p>\n<p>Larry Paulson</p>",
        "id": 294122205,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660840195
    },
    {
        "content": "<p>From: Jean Martina &lt;<a href=\"mailto:Jean.Martina@cl.cam.ac.uk\">Jean.Martina@cl.cam.ac.uk</a>&gt;<br>\nComplementing Larry's comments: You can start by looking to other automatic methods such as Graham Steel's and Christopher Weidenbach's approaches. They are a good way to understand how protocol verification works under an inductive framework, but with automation. This can clearly cut some corners when you got to do protocol verification with Isabelle. If you are really interested in Higher-Order formalisation for that, you can start by reading Larry's JCS paper on the Inductive Method and/or Giampaolo Bella's book on Formal Correctness of Security Protocols.</p>\n<p>Jean</p>",
        "id": 294122337,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660840222
    }
]