[
    {
        "content": "<p>From: Christian Sternagel &lt;<a href=\"mailto:c-sterna@jaist.ac.jp\">c-sterna@jaist.ac.jp</a>&gt;<br>\nDear all,</p>\n<p>how does sledgehammer decide which provers to use by default? After <br>\ninstalling yices, I can do</p>\n<p>sledgehammer [yices]</p>\n<p>to explicitly call yices. However, when using</p>\n<p>sledgehammer</p>\n<p>it seems that \"just\" spass, e, remote_vampire, remote_e_sine, and z3 are <br>\nrun; but not yices. Can I change this globally (e.g., in my <br>\netc/settings) without having to use sledgehammer_params or explicitly <br>\nsetting options when calling sledgehammer?</p>\n<p>cheers</p>\n<p>chris</p>",
        "id": 294166198,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854824
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@gmail.com\">jasmin.blanchette@gmail.com</a>&gt;<br>\nIf you change it through the good old Proof General settings, I think it will do the right thing and remember it across sessions. Otherwise, no: That's what \"sledgehammer_params\" is for, and it would be tedious to emulate its functionality in \"etc/settings\" (e.g. to change the default timeout or whatever else...).</p>\n<p>Cheers,</p>\n<p>Jasmin</p>",
        "id": 294166219,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854836
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nI'm fine with the default settings, so I don't have a need for this <br>\nfunctionality; but could you not just reuse the parser for <br>\nsledgehammer_params to parse a $SLEDGEHAMMER_PARAMS environment <br>\nvariable, when you setup the default values?</p>\n<p>-- Lars</p>",
        "id": 294166274,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854845
    },
    {
        "content": "<p>From: Christian Sternagel &lt;<a href=\"mailto:c-sterna@jaist.ac.jp\">c-sterna@jaist.ac.jp</a>&gt;<br>\nLet me reformulate ;). Why not use all installed provers by default? (If <br>\nI wouldn't want to use it I would hardly install a prover.)<br>\n-cheers chris</p>",
        "id": 294166283,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854848
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nNote again that Isabelle Proof General is umaintained since October 2011, <br>\nso it has reached End-of-Life unless someone else stands forward to <br>\ncontinue its maintenance.  (Pretty soon I will stop reminding people of <br>\nthis, and then it is really dead.)</p>\n<p>Concerning the current Isabelle/Scala and Prover IDE infrastructure, there <br>\nis still no persistent preferences mechanisms, but I am working on it.</p>\n<p>Righ now one can imitate what Proof General did here by hand:</p>\n<p>ML {* Sledgehammer_Isar.provers := \"e spass vampire\" *}</p>\n<p>Makarius</p>",
        "id": 294166296,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854855
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@gmail.com\">jasmin.blanchette@gmail.com</a>&gt;<br>\nHi Christian,</p>\n<p>It's a bit tricky -- e.g. we ship CVC3, which is then installed but it doesn't mean you want to use it. CVC3 and Yices don't yield unsat cores or usable proofs, so we have to use brute-force minimalization to get usable Metis proofs, which can be quite expensive.</p>\n<p>How many cores do you have on your machine? If you have only 4, then E, SPASS, Vampire, Z3 is probably the best combination anyway. If you have 8, then what you describe would probably make sense. I think I'll change the default to do something along those lines.</p>\n<p>Cheers,</p>\n<p>Jasmin</p>",
        "id": 294166325,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854871
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@gmail.com\">jasmin.blanchette@gmail.com</a>&gt;<br>\nYes, but then why not do it for Nitpick, Quickcheck, Refute? And what about other options, e.g. simplifier traces? Whatever we do, it's going to be tedious, inconsistent, or both.</p>\n<p>Jasmin</p>",
        "id": 294166334,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854877
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThat would indeed stretch the Isabelle system settings concept a bit far. <br>\nThere are also physical limitations on the process environment size, <br>\nnotably on Windows.</p>\n<p>No need to worry about the above problems, though. At the next stage, the <br>\nIsabelle/Scala infrastructure will provide a concept of externalized <br>\noptions, somehow in correspondence to internal configuration options, with <br>\nsome support to make them persistent as preferences.  So the tendency will <br>\nbe to declare such options once and for all, and let the user modify them <br>\neither within the theory context, or as background default for the running <br>\nsession.</p>\n<p>Stay tuned ...</p>\n<p>Makarius</p>",
        "id": 294166368,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854898
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nIt is customary to continue maintaining a tool until the replacement is ready<br>\nfor prime time. Currently jedit is not at the point (and PG still works). I<br>\nexpect that PG will be kept in a working state until key jedit problems like<br>\n\"Workaround: Cut/paste larger parts or reload buffer\" and the absence of menus<br>\n(which force people to remember and type commands) have been eliminated.</p>\n<p>Tobias</p>",
        "id": 294166382,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660854904
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nSo who is continuing the maintenance of Proof General?  It won't continue <br>\nto work magically without doing anything.</p>\n<p>One of the reasons why Isabelle/jEdit is still not as complete as I would <br>\nlike to have is the extra time that I have spent to keep Isabelle Proof <br>\nGeneral working in the last 4 years.</p>\n<p>This is why I have now stopped its maintenance after the Isabelle2011-1 <br>\nrelease; the Isabelle2012 version of Isabelle/jEdit is sufficient to be <br>\noutside the critical range.</p>\n<p>And again: I have now reason to see Isabelle Proof General broken too <br>\nearly after so many years taking care of it.  So I would welcome someone <br>\nstanding forward to continue its maintenance.  (It needs to be someone who <br>\nunderstands what maintenance of sofware systems means in general.)</p>\n<p>Makarius</p>",
        "id": 294216620,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660895203
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nAm 20/07/2012 16:43, schrieb Makarius:</p>\n<blockquote>\n<p>On Fri, 20 Jul 2012, Tobias Nipkow wrote:</p>\n<blockquote>\n<p>It is customary to continue maintaining a tool until the replacement is ready<br>\nfor prime time. Currently jedit is not at the point (and PG still works). I<br>\nexpect that PG will be kept in a working state until key jedit problems like<br>\n\"Workaround: Cut/paste larger parts or reload buffer\" and the absence of menus<br>\n(which force people to remember and type commands) have been eliminated.</p>\n</blockquote>\n<p>So who is continuing the maintenance of Proof General?  It won't continue to<br>\nwork magically without doing anything.</p>\n</blockquote>\n<p>By default the person who introduced the tool in the first place or the one who<br>\nis responsible for the change that stops it functioning. That is you, I should<br>\nthink.</p>\n<blockquote>\n<p>One of the reasons why Isabelle/jEdit is still not as complete as I would like<br>\nto have is the extra time that I have spent to keep Isabelle Proof General<br>\nworking in the last 4 years.</p>\n<p>This is why I have now stopped its maintenance after the Isabelle2011-1 release;<br>\nthe Isabelle2012 version of Isabelle/jEdit is sufficient to be outside the<br>\ncritical range.</p>\n</blockquote>\n<p>For teaching it is still withing the critical range. We have first-hand<br>\nexperience with students who are really frustrated because Isabelle/jedit<br>\ncomplains that there is something wrong with their text, but there isn't, the<br>\nincremental parsing has gone wrong.</p>\n<blockquote>\n<p>And again: I have now reason to see Isabelle Proof General broken too early<br>\nafter so many years taking care of it.  So I would welcome someone standing<br>\nforward to continue its maintenance.  (It needs to be someone who understands<br>\nwhat maintenance of sofware systems means in general.)</p>\n</blockquote>\n<p>Of course it would be great if somebody did volunteer, but Larry pointed out<br>\nsome of the obstacles.</p>\n<p>Tobias</p>",
        "id": 294216627,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660895208
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@gmail.com\">jasmin.blanchette@gmail.com</a>&gt;<br>\nMy personal preference would be for somebody who will be around in Chair 21 for the next 2 or 3 years at least. But if none of the people meeting this criterion (and the maintenance criterion) step forward, I'd be willing to step in at least for the next year and do the minimal amount of work needed to keep it running on our three main platforms with the latest Isabelle.</p>\n<p>Being the maintainer of several binary packages already (e.g. E 1.6 this week again), I'm not exactly thrilled about the prospect, but I think we all agree that Proof General has to be maintained for a couple of years, until the late adopters run out of reasons not to use jEdit/PIDE.</p>\n<p>Jasmin</p>",
        "id": 294216654,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660895223
    },
    {
        "content": "<p>From: Jasmin Christian Blanchette &lt;<a href=\"mailto:jasmin.blanchette@gmail.com\">jasmin.blanchette@gmail.com</a>&gt;<br>\nLarry wrote off-list that he would be willing to help with occasional Emacs Lisp programming.</p>\n<p>Both of us are fervent adepts of Aquamacs. One of the first things we'd like to do is make that the default on the Mac again. Some issues were mentioned on the list but don't seem to affect me (with PG 3.7.1.1) or Larry (with PG 4.0?). Do you remember anything specific from the top of your head?</p>\n<p>Jasmin</p>",
        "id": 294216684,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660895243
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOK, so Jasmin and Larry will take care of it in the near future, until <br>\nsome more Proof General adherents will join eventually.  Some people could <br>\nalso share their experience with old versions of PG and old versions of <br>\nEmacs on the Isabelle community wiki.</p>\n<p>Jasmin and Larry, you should also get in touch with David Aspinall, <br>\nconcerning recent PG repository versions.  There has been quite some <br>\nactivity recently, and last time I've checked it did not work on stock <br>\nLinux distributions with slightly old Emcas 23 anymore.  (This is not <br>\nsurprising, it has happenend routinely over the years.)</p>\n<p>Makarius</p>",
        "id": 294216696,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660895260
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOdd.  I am not responsible for Apple changing Mac OS every 1-2 years, <br>\nLinux distributors changing Emacs versions, Emacs changing, PG itself <br>\nchanging upstream etc. The few Isabelle changes that have ever affected <br>\nsome PG version in the past are negligible compared to that, and are <br>\nusually quick and easy to repair if people report them quickly and <br>\nconstructively.</p>\n<p>It seems I have done maintainence too efficiently in the past, so that it <br>\nwas almost invisible, and one could think systems just work on their own <br>\nand continue indefinitely.</p>\n<p>Change is sometimes annyoing, but part of the normal software life-cycle. <br>\nAn alternative to that is embalming of old versions in stasis: just last <br>\nyear I've taken a stock Isabelle2005 release and made it work again with <br>\nXEmacs 21.x in the classic manner, with 100% of its nastalgic look and <br>\nfeel, even real \"X-Symbol\" and the bitmap fonts of that time.  But that <br>\njust showed again that there is subjective bit rot as well: what was fine <br>\n10 years ago is hardly bearable today.  Even the most conservative PG user <br>\nwould not want to continue 10 years with the same old version.</p>\n<p>Makarius</p>",
        "id": 294216702,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660895265
    }
]