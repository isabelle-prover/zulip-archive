[
    {
        "content": "<p>From: Peter Sewell &lt;<a href=\"mailto:Peter.Sewell@cl.cam.ac.uk\">Peter.Sewell@cl.cam.ac.uk</a>&gt;<br>\nDear Isabelle,</p>\n<p>I'd like to write an expository document based on some Isabelle, and<br>\nso need to quote selected definitions, not necessarily in the order<br>\nthey appear in the main .thy.</p>\n<p>I expect this is a standard and solved problem, but the Tutorial<br>\ndoesn't seem to address it.  I can see how to quote (e.g.) type and<br>\nconstant names, viz</p>\n<p>text {* @{typ event_structure} @{const writes} *}</p>\n<p>but not the bodies of selected \"types\" or \"constdefs\" definitions...?</p>\n<p>many thanks,<br>\nPeter</p>\n<p>p.s.  While I'm here, could I appeal for _line numbers_ in the error<br>\nmessages reported by the isabelle/proof-general combo?  I recall that<br>\na couple of years ago we humble users (primarily Keith Wansbrough) had<br>\nto add line numbers to the HOL error messages, dragging that kicking<br>\nand screaming into the 1960s.  It'd be great if Isabelle could also catch up...:)</p>\n<p>p.p.s.  Also, the LaTeX generated from my .thy by \"isatool make\"<br>\ndoesn't typeset !, ?, --&gt; etc with the proper LaTeX symbols.  Is there<br>\nany way to turn that on, without rewriting my sources with \\&lt;forall&gt;<br>\netc?</p>",
        "id": 294054287,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660820945
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nYou cannot quote type abbreviations but definitions work: @{thm f_def}</p>\n<p>You may also want to look at \"LaTeX sugar for proof documents\" <br>\n<a href=\"http://isabelle.in.tum.de/dist/Isabelle/doc/sugar.pdf\">http://isabelle.in.tum.de/dist/Isabelle/doc/sugar.pdf</a></p>\n<p>There is no way to display \"!\" etc as \\forall, you need to write it that <br>\nway in the first place - it's a subtle issue.</p>\n<p>Tobias</p>\n<p>Peter Sewell wrote:</p>",
        "id": 294054295,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660820949
    },
    {
        "content": "<p>From: Peter Sewell &lt;<a href=\"mailto:Peter.Sewell@cl.cam.ac.uk\">Peter.Sewell@cl.cam.ac.uk</a>&gt;</p>\n<blockquote>\n<p>You cannot quote type abbreviations but definitions work: @{thm f_def}</p>\n</blockquote>\n<p>I hadn't thought of that, but it destroys the line breaks and<br>\nindentation, so it looks like the only real option is to cut-and-paste<br>\nfrom the generated LaTeX :(   A crude but very useful thing we do in<br>\nOtt, which maybe could be done by Isabelle with minimal effort, is to<br>\nfactor generated LaTeX into definitions of separate LaTeX commands<br>\nto generate each component of the output, with a predictable naming<br>\nconvention - e.g. </p>\n<p>\\newcommand{\\myisadatatypeXXXdirn}{dirn\\ {\\isacharequal}\\ R\\ {\\isacharbar}\\ W}</p>\n<p>in one file, with</p>\n<p>\\isanewline<br>\n\\isacommand{datatype}\\isamarkupfalse%<br>\n\\ \\myisadatatypeXXXdirn\\ \\ \\ \\isanewline<br>\n\\isanewline</p>\n<p>in another, instead of </p>\n<p>\\isanewline<br>\n\\isacommand{datatype}\\isamarkupfalse%<br>\n\\ dirn\\ {\\isacharequal}\\ R\\ {\\isacharbar}\\ W\\ \\ \\ \\isanewline<br>\n\\isanewline</p>\n<blockquote>\n<p>You may also want to look at \"LaTeX sugar for proof documents\" <br>\n<a href=\"http://isabelle.in.tum.de/dist/Isabelle/doc/sugar.pdf\">http://isabelle.in.tum.de/dist/Isabelle/doc/sugar.pdf</a></p>\n</blockquote>\n<p>y - seen that, which looks useful indeed.</p>\n<blockquote>\n<p>There is no way to display \"!\" etc as \\forall, you need to write it that <br>\nway in the first place - it's a subtle issue.</p>\n</blockquote>\n<p>thanks,<br>\nPeter</p>",
        "id": 294054304,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660820955
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Fri, 14 Dec 2007, Peter Sewell wrote:</p>\n<blockquote>\n<p>into</p>\n<p>\\newcommand{\\myisadatatypeXXXdirn}{dirn\\ {\\isacharequal}\\ R\\ {\\isacharbar}\\ W}</p>\n</blockquote>\n<p>This does not work in general, because the presentation system does not <br>\nknow about the syntax of individual commands.  Even if we pretend to know <br>\nthe particular datatype syntax, what happens with mutual datatype <br>\ndefinitions, for example?</p>\n<blockquote>\n<p>Then the user can LaTeX-include the first file and write just</p>\n<p>\\myisadatatypeXXXdirn</p>\n<p>whereever they need to quote that defn.</p>\n</blockquote>\n<p>This also does not work, because specifications of name bindings do not <br>\nidentify the resulting internal object uniquely.  E.g. there could be <br>\nseveral \"dirn\" types in different name spaces, local scopes etc.</p>\n<p>The Isabelle document preparation might look crude at first sight, but it <br>\nis indeed very sophisticated: it manages to get 99% of typesetting quality <br>\nwith only 1% of knowledge about the structure of the sources.</p>\n<p>See also chapter 2 of the Isabelle system manual for the general <br>\nexplanation on how things really work.  The gory details can then be <br>\nglimpsed from the Isabelle style files and the generated LaTeX.</p>\n<p>If you really want to move around portions of typeset text, you can try to <br>\nfind a LaTeX package that allows to move marked regions.  You can then let <br>\nIsabelle insert the required markup either via the 'text_raw' command or <br>\nusing the new %tag facility, which is also explained in the manual.</p>\n<p>Makarius</p>",
        "id": 294054321,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660820964
    },
    {
        "content": "<p>From: Thomas Bleher &lt;<a href=\"mailto:ThomasBleher@gmx.de\">ThomasBleher@gmx.de</a>&gt;</p>\n<ul>\n<li>Peter Sewell &lt;<a href=\"mailto:Peter.Sewell@cl.cam.ac.uk\">Peter.Sewell@cl.cam.ac.uk</a>&gt; [2007-12-14 12:51]:<br>\nI had a similar problem for my diploma thesis, which I wanted to write<br>\nin LaTeX, but quoting many lemmas and definitions.</li>\n</ul>\n<p>The attached crude perl script takes a number of theory files as input,<br>\nparses them (well, not really, but enough for my purposes) and creates<br>\ntext_raw {* *} blocks in which it defines appropriate LaTeX commands.</p>\n<p>So if you have a constdef foo it defines two LaTeX commands: \\fooDef and<br>\n\\fooDefInline (with different display options).</p>\n<p>I put the output of the script into a new theory file with dependencies<br>\non the original theories, processed it with Isabelle into a .tex file<br>\nand \\included the resulting file into my main .tex file (after removing<br>\nthe preamble and other unneeded stuff).</p>\n<p>Worked very well for me.</p>\n<p>Regards,<br>\nThomas<br>\n<a href=\"/user_uploads/14278/OfMPocx1dER7YKn8UmzlSL5R/generate_presentation_theorem\">generate_presentation_theorem</a><br>\n<a href=\"/user_uploads/14278/kHpW0NDHwthQyOujcDEuEBFy/signature.asc\">signature.asc</a></p>",
        "id": 294054366,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660820988
    }
]