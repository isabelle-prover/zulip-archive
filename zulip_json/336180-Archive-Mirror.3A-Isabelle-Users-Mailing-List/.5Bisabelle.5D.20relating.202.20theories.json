[
    {
        "content": "<p>From: Joao Marcos &lt;<a href=\"mailto:jmarcos@dimap.ufrn.br\">jmarcos@dimap.ufrn.br</a>&gt;<br>\nDear All:</p>\n<p>Suppose you have two Isabelle theories, T1.thy and T2.thy, and you<br>\nwant to check which axioms of T2 are provable in T1, and, conversely,<br>\nwhich axioms of T1 are provable in T2.</p>\n<p>To make things simpler, let's suppose both theories are written in the<br>\nsame signature (containing thus constructors identified by the same<br>\nstrings, but possibly characterized by different sets of rules), and<br>\nare based on the same formalism (say, both are formulated as sequent<br>\ncalculi, or in natural deduction).  The case where the theories have<br>\ndifferent constructors is also interesting, however, if T1 and T2 are<br>\nintended for instance to be two different axiomatizations of the same<br>\ntheory (T1 could be, say, a formulation of classical logic over<br>\nnegation, conjunction and disjunction, while T2 could be classical<br>\nlogic over implication and co-implication).</p>\n<p>One way of accomplishing this task, of course, is typing the axioms of<br>\nT2 by hand as goals inside T1 and proving them, and vice-versa<br>\n(appropriate rewrite rules could be added somewhere to take care of<br>\nthe case with different constructors).  Another obvious way is to<br>\nwrite a new theory T0 containing the axioms and definitions of both T1<br>\nand T2 and doing proofs there with some care not to mix axioms with<br>\n\"different origins\".</p>\n<p>My question is: Is there a more \"natural\" way of doing this in Isabelle?<br>\n(What I have in mind is some way of referring to the axioms of T2<br>\ndirectly from inside T1, or referring to the axioms of both theories,<br>\nin turn, from \"outside\" them.)</p>\n<p>The next step will be then to prove things by induction using theory<br>\nT1 as the \"meta-theory\" of T2, that is, proving properties of T2 by<br>\ninduction using the properties and axioms of T1 as facts.<br>\nHow can that be smoothly done inside Isabelle without \"dirty tricks\"?<br>\n(Do consider that the axioms of both theories might have similar<br>\nnames, and some of them might even coincide, independently of their<br>\nparticular names.)</p>\n<p>I thank you in advance for your practical advice on this issue,<br>\nJoao Marcos</p>",
        "id": 294065713,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660825373
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nI'm afraid that Isabelle does not interpret these activities directly on<br>\nthe level of theories. If you want to show implicational relations<br>\nbetween axiomatizations, Isabelle's locales are probably a good<br>\nframework. If you need to take the inductive definition of derivability<br>\ninto account, you need to set up your own inductive definition of the<br>\ndifferent logics involved.</p>\n<p>Tobias</p>\n<p>Joao Marcos schrieb:</p>",
        "id": 294065742,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660825383
    },
    {
        "content": "<p>From: Jeremy Dawson &lt;<a href=\"mailto:jeremy@rsise.anu.edu.au\">jeremy@rsise.anu.edu.au</a>&gt;<br>\nJoao Marcos wrote:<br>\nA somewhat similar question relates to axiomatic type classes.</p>\n<p>It is possible to define two type classes (defining them unrelated to <br>\neach other, and in two theories which are independent of each other).</p>\n<p>Then, in a supertheory which sees both type class definitions, it is <br>\npossible to express and prove that one type class is a subclass of the <br>\nother (by the &lt;-form of the instance command).  Unfortunately it is not <br>\npossible to express (except, I guess, in two independent theories) that <br>\ntype class a &lt; type class b, and vice versa - understandably, Isabelle <br>\ndoesn't like cyclic subclass relationships.</p>\n<p>Jeremy</p>",
        "id": 294065775,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660825395
    },
    {
        "content": "<p>From: Clemens Ballarin &lt;<a href=\"mailto:ballarin@in.tum.de\">ballarin@in.tum.de</a>&gt;<br>\nIn contrast, locales permit cyclic relationships.  That is, if two  <br>\nlocales have equivalent specifications and the parameters are the  <br>\nsame (up to renaming) you can declare them to interpret each other.</p>\n<p>Clemens</p>",
        "id": 294065827,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660825420
    }
]