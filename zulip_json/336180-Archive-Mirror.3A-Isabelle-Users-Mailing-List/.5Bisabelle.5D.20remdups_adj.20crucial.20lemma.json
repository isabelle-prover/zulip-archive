[
    {
        "content": "<p>From: Jakob von Raumer &lt;<a href=\"mailto:javra@web.de\">javra@web.de</a>&gt;<br>\nHello everyone,</p>\n<p>am I just bad at using find_theorems or is there no lemma that remdups_adj<br>\nreally yields lists with no adjacent entries being equal? If it's really<br>\nmissing, here's my somewhat lengthy proof:<br>\n<a href=\"https://gist.github.com/javra/68c7f852a060d7cb6036\">https://gist.github.com/javra/68c7f852a060d7cb6036</a></p>\n<p>Best regards<br>\nJakob</p>",
        "id": 294290389,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660923251
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nImportant lemma. I have just added a more succinct proof of it due to Manuel<br>\nEberl <a href=\"http://shodan.linuxd.org/paste/oyIsOBq1\">http://shodan.linuxd.org/paste/oyIsOBq1</a> to List.thy.</p>\n<p>Thanks to both of you!<br>\nTobias</p>",
        "id": 294290553,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660923302
    },
    {
        "content": "<p>From: Jakob von Raumer &lt;<a href=\"mailto:javra@web.de\">javra@web.de</a>&gt;<br>\nWow, thank you! I really have to learn to search for short proofs (or in<br>\nthis case, remember to use the right induction lemmas). Another lemma,<br>\nwhich is useful for working not with inductively defined lists but by<br>\nindexing lists is the following: Adjacencies are preserved by remdups_adj<br>\nin the sense that for each index in the reduced list there's an index in<br>\nthe original list so that the list entries coincide at this entry and their<br>\nrespective successors: <a href=\"https://gist.github.com/javra/11b9a6770cab2e17559d\">https://gist.github.com/javra/11b9a6770cab2e17559d</a><br>\n(I could work on a shorter proof the next days).</p>\n<p>Best regards<br>\nJakob</p>",
        "id": 294290567,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660923306
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nSometimes, I find working on shorter proofs a nice exercise to<br>\nunderstand the system and for getting more out of the automation.</p>\n<p>Note that the \"0 &lt; length xs\" assumption on your lemma is not needed (it<br>\nis already implied by \"j + 1 &lt; length xs\").</p>",
        "id": 294290585,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660923312
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nIt seems to me that we need an abstract nonrecursive characterisation of<br>\nremdups_adj from which specific lemmas follow easily. Is the following correct?</p>\n<p>remdups_adj xs = ys &lt;-&gt;<br>\nEX f::nat =&gt; nat. mono f &amp; f ` {0 ..&lt; size xs} = {0 ..&lt; size ys}<br>\n  &amp; (ALL i &lt; size xs. xs!i = ys!(f i)<br>\n       &amp; (xs!i = xs!(i+1) &lt;-&gt; f i = f(i+1)))</p>\n<p>It should be sound (--&gt;), but is it complete (&lt;--)?</p>\n<p>Tobias</p>",
        "id": 294290599,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660923318
    },
    {
        "content": "<p>From: René Thiemann &lt;<a href=\"mailto:rene.thiemann@uibk.ac.at\">rene.thiemann@uibk.ac.at</a>&gt;<br>\nDear all,</p>\n<p>At least there needs to be one more implication added, since<br>\notherwise the reference to xs!(i+1) is critical.</p>\n<p>remdups_adj xs = ys &lt;-&gt;<br>\nEX f::nat =&gt; nat. mono f &amp; f ` {0 ..&lt; size xs} = {0 ..&lt; size ys}<br>\n &amp; (ALL i &lt; size xs. xs!i = ys!(f i)<br>\n      &amp; (i + 1 &lt; size xs --&gt; (xs!i = xs!(i+1) &lt;-&gt; f i = f(i+1))))</p>\n<p>Otherwise, it looks good (soundness and completeness can easily be proven<br>\nfor lists upto length 1, but the inductive case became quite tedious in my proof attempt)</p>\n<p>René</p>",
        "id": 294290624,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660923324
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nI've got a (lenghty, but otherwise straightforward) proof of<br>\ncompleteness for the modified theorem.<br>\n<a href=\"/user_uploads/14278/b-yxr-Gu3WXDns4jan74yclF/Scratch.thy\">Scratch.thy</a></p>",
        "id": 294290688,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660923349
    },
    {
        "content": "<p>From: René Thiemann &lt;<a href=\"mailto:rene.thiemann@uibk.ac.at\">rene.thiemann@uibk.ac.at</a>&gt;<br>\nAnd since I already proved soundness (also in a lengthy version), I copied my proof into Lars<br>\nfile, which now contains the equivalence proof.</p>\n<p>Cheers,<br>\nRené<br>\n<a href=\"/user_uploads/14278/N3dX06pOxehcGIOZBtEtHAub/Scratch.thy\">Scratch.thy</a></p>",
        "id": 294290723,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660923361
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nA little bit of cleanup, but no significant shortening.<br>\n<a href=\"/user_uploads/14278/tpD_WLsN6qf3oJ6WZQp58_95/Scratch.thy\">Scratch.thy</a></p>",
        "id": 294290787,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660923374
    }
]