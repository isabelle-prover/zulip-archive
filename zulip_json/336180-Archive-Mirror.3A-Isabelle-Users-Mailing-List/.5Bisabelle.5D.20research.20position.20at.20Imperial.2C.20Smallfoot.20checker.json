[
    {
        "content": "<p>From: Cristiano Calcagno &lt;<a href=\"mailto:ccris@doc.ic.ac.uk\">ccris@doc.ic.ac.uk</a>&gt;<br>\nPhilippa Gardner and I have a three-year postdoctoral research position<br>\navailable at Imperial, to build a static assertion checker for C based<br>\non separation logic. This is a joint project with Peter O'Hearn at Queen<br>\nMary, comprising one PhD student and one RA at each site.</p>\n<p>The details are given below. The deadline for application is 28th July<br>\n2006. Please send informal enquiries to me.</p>\n<p>I'd be grateful if you could forward this email to candidates you think<br>\nmight be suitable.</p>\n<p>Best wishes,</p>\n<p>Cristiano Calcagno</p>\n<hr>\n<p>Research Assistant/Associate<br>\nDepartment of Computing, Imperial College London</p>\n<p>Title: Smallfoot: Static Assertion Checking for C programs</p>\n<p>Salary: £22,870 - £33,330 inclusive of London Allowance per annum</p>\n<p>Deadline for Applications: 28th July 2006</p>\n<p>A postdoctoral Research Fellowship is available in the Department of<br>\nComputing to work with Cristiano Calcagno and Philippa Gardner on an<br>\nEPSRC project joint with Peter O'Hearn at Queen Mary. This is a fixed<br>\nterm post of 3 years starting on 1 October 2006 with some flexibility.<br>\nThe aim of the project is to develop a static assertion checker for C<br>\nbased on separation logic, and demonstrate it on systems code such as a<br>\nmemory manager. See<br>\n<a href=\"http://www.dcs.qmul.ac.uk/research/logic/theory/projects/smallfoot/\">http://www.dcs.qmul.ac.uk/research/logic/theory/projects/smallfoot/</a> for<br>\nmore details.</p>\n<p>Applicants must hold, or being nearing completion of, a PhD in Computer<br>\nScience in a relevant subject. Preference will be given to applicants<br>\nwith a proven record in software development or theoretical computer<br>\nscience. Experience in one or more of the following is desirable: logic<br>\n(especially separation logic), verification, program analysis, model<br>\nchecking.</p>\n<p>Formal applications should be sent to the address at the end of this<br>\nmessage. Please send informal enquiries to</p>\n<p>Cristiano Calcagno, email: <a href=\"mailto:ccris@doc.ic.ac.uk\">ccris@doc.ic.ac.uk</a></p>\n<p>Background of the Project</p>\n<hr>\n<p>Pointers have long been one of the dark corners of programming<br>\nlanguages. Tractable proof and analysis tools are lacking for all but<br>\nthe most simple, shallow, properties of the program heap. A recent<br>\ntheory, separation logic, has shed fresh light on this area, and has<br>\ngenerated considerable interest worldwide. It has lead to much simpler<br>\nby-hand specifications and program proofs than previous formalisms, and<br>\nit suggests, for the first time, the possibility of scalable analysis<br>\nmethods for expressive heap properties. To date though, separation logic<br>\nremains mainly a theoretical advance; there are no tools based on<br>\nseparation logic for any real programming languages.<br>\nWe propose to develop a static assertion checker for C based on<br>\nseparation logic. Separation logic works naturally with a low-level RAM<br>\nmodel, and thus appears to be well suited to code that must run close to<br>\nthe hardware without an intermediate abstraction of the kind found in<br>\nthe runtimes of high-level languages such as ML or Java. Much<br>\nfundamental code of this sort is written in the C programming language,<br>\nand is outside the effective range of current tools.<br>\nOur tool, Smallfoot, will accept precondition and postcondition<br>\nassertions written in separation logic, and programs will be checked<br>\nusing a combination of symbolic execution and specialized proof<br>\nprocedures. Abstract interpretation will be used to alleviate the need<br>\nto state invariants. We will check structural integrity properties of<br>\nprograms -- such as that data structures are in consistent states, or<br>\nthat resource boundaries are respected -- rather than full functional<br>\ncorrectness. In this way we hope to keep specifications simple, and to<br>\nachieve a high degree of automation. As it is aimed at low-level<br>\nprograms, Smallfoot will be complementary to static assertion checkers<br>\nfor higher-level languages such as the ESC tool for Java and the Spec#<br>\ntool for C#.<br>\nSuccess on the problems in this project could have a significant impact<br>\non the use of logic to check properties of systems programs.</p>\n<p>Application</p>\n<hr>\n<p>Applications should include a College application form, which can be<br>\nobtained from <a href=\"http://www.imperial.ac.uk/employment/academicform.htm\">http://www.imperial.ac.uk/employment/academicform.htm</a>.<br>\nApplications should be on the correct form quoting Job Reference Number:<br>\nSmallfoot 06. Applications must include a full CV, stating the names and<br>\naddresses of three referees and should be sent to:</p>\n<p>Nicola Rogers<br>\nDepartment of Computing,<br>\nImperial College London,<br>\nSouth Kensington Campus,<br>\nLondon, SW7 2AZ</p>\n<p>email: <a href=\"mailto:n.c.rogers@imperial.ac.uk\">n.c.rogers@imperial.ac.uk</a></p>",
        "id": 293911729,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660747601
    }
]