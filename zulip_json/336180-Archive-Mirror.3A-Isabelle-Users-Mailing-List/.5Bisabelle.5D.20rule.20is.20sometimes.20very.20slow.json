[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nDrule.multi_resolves is not relevant here, it is merely a wrapper for <br>\nThm.biresolution, i.e. the main rule composition principle of <br>\nIsabelle/Pure.</p>\n<p>The key difference of the structured form</p>\n<p>then have \"∃m. P m\" by (rule exI)</p>\n<p>compared to the other ones above is the order of higher-order unification <br>\nattempts.  The 'then' means that some fact is unified with the premise of <br>\nexI, which is the worst-case situation ?P ?x and thus can go amiss.</p>\n<p>Only in the second stage, the closed conclusion ∃. P m contributes more <br>\nspecific unification constraints.</p>\n<p>This problem has been there in Isar proofs since 1998/1999, and until <br>\ntoday I don't know a better way.  The HO-unification code of Isabelle is <br>\nultimately a mystery to me.</p>\n<p>Makarius</p>\n<hr>\n<p><a href=\"http://stop-ttip.org\">http://stop-ttip.org</a>  1,070,319 people so far</p>\n<hr>",
        "id": 294323267,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660927661
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nHi,</p>\n<p>consider the following theory:</p>\n<p>theory Scratch imports Main<br>\nbegin</p>\n<p>abbreviation funswapid :: \"'a ⇒ 'a ⇒ 'a ⇒ 'a\" (infix \"⇌⇩F\" 90) where<br>\n  \"x ⇌⇩F y ≡ Fun.swap x y id\"</p>\n<p>notepad begin<br>\n  fix uv uw vu vw wu wv f GM HM m n a<br>\n  assume \"(vw ⇌⇩F vu ∘ f HM ^^ Suc m ∘ (uw ⇌⇩F uv ∘ vw ⇌⇩F vu)) a = (f<br>\nGM ^^ Suc n) a\"<br>\n  then have \"∃m. (vw ⇌⇩F vu ∘ f HM ^^ Suc m ∘ (uw ⇌⇩F uv ∘ vw ⇌⇩F vu)) a<br>\n= (f GM ^^ Suc n) a\"<br>\n    by (rule exI)<br>\nend</p>\n<p>The proof step \"rule exI\" takes several seconds to complete on my<br>\nmachine (in Isabelle 2014). Similar proofs, like</p>\n<p>by (rule_tac exI)<br>\n   by -  (rule exI)<br>\n   by - (erule exI)<br>\n   by metis<br>\n   by blast</p>\n<p>are instantaneous, as expected. I looked a bit into the implementation<br>\nof rule and it seems that most time is spend<br>\nin evaluating the result of</p>\n<p>Drule.multi_resolves facts @{thms exI}</p>\n<p>-- Lars</p>",
        "id": 294324054,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660927913
    }
]