[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt;<br>\nI want to use a rule_format transformation for a lemma inside a locale, <br>\nbut it does not work:</p>\n<p>If I have, for example:<br>\n  consts A :: 'a<br>\n             B :: 'a</p>\n<p>locale dummy<br>\n  lemma (in dummy) X[rule_format]: \"ALL x . A x --&gt; B x\" sorry</p>\n<p>the lemma will be:</p>\n<blockquote>\n<p>thm dummy.X<br>\nALL x . A x --&gt; B x [!]</p>\n</blockquote>\n<p>but I expected something like<br>\n!! x . A x ==&gt; B x<br>\nor<br>\nA ?x ==&gt; B ?x<br>\nas I get when using rule_format outside a locale.</p>\n<p>Can I use something similiar to rule_format that works inside a locale, <br>\nor do I have to transform the lemmas \"by hand\" ?</p>\n<p>Greetings and thanks for any hints<br>\n  Peter Lammich</p>",
        "id": 294041125,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660815337
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt;<br>\nPeter Lammich wrote:</p>\n<blockquote>\n<p>I want to use a rule_format transformation for a lemma inside a <br>\nlocale, but it does not work:</p>\n<p>If I have, for example:<br>\n consts A :: 'a<br>\n            B :: 'a</p>\n<p>locale dummy<br>\n lemma (in dummy) X[rule_format]: \"ALL x . A x --&gt; B x\" sorry</p>\n<p>the lemma will be:</p>\n<blockquote>\n<p>thm dummy.X<br>\nALL x . A x --&gt; B x [!]</p>\n</blockquote>\n<p>but I expected something like<br>\n!! x . A x ==&gt; B x<br>\nor<br>\nA ?x ==&gt; B ?x<br>\nas I get when using rule_format outside a locale.</p>\n</blockquote>\n<p>If I declare<br>\n  lemmas (in dummy) XX = X[rule_format]<br>\nXX has the expected format !</p>\n<blockquote>\n<p>Can I use something similiar to rule_format that works inside a <br>\nlocale, or do I have to transform the lemmas \"by hand\" ?</p>\n<p>Greetings and thanks for any hints<br>\n Peter Lammich<br>\n</p>\n</blockquote>",
        "id": 294041159,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660815354
    },
    {
        "content": "<p>From: Clemens Ballarin &lt;<a href=\"mailto:ballarin@in.tum.de\">ballarin@in.tum.de</a>&gt;<br>\nPeter Lammich wrote:</p>\n<blockquote>\n<p>I want to use a rule_format transformation for a lemma inside a locale <br>\n...</p>\n</blockquote>\n<p>The attribute is only applied inside the locale, not to the exported <br>\nversion (as dummy.X in your example).</p>\n<p>It is not recommended to use attributes that undertake heavy theorem <br>\ntransformations inside a locale---for example, simplified.  These are <br>\nexecuted whenever a context is built from the locale and you will end <br>\nup with very slow code.</p>\n<p>Clemens</p>",
        "id": 294041206,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660815362
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe easiest way is to avoid rule_format altogether, which is a legacy <br>\nfeature anyway.  If you state your problems with !!/==&gt; or <br>\nfixes/assumes/shows in the first place, the outcome will be in canonical <br>\nrule format as expected.  (Note that the induct method will do the right <br>\nthing on !!/==&gt; goals).</p>\n<p>Makarius</p>",
        "id": 294041231,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660815367
    }
]