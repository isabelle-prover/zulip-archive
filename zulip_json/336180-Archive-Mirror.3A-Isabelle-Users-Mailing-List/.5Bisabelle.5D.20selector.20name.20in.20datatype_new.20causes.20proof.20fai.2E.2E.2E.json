[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nDear BNF developers,</p>\n<p>in Isabelle2014, the datatype_new declaration below results in a proof failure. If I <br>\nremove the selector name specification bar, the proof succeeds. Is there anything I can do <br>\nto get the selector names I want?</p>\n<p>datatype_new ('t, 'id) foo =<br>\n   Foo \"('t list ⇒ 't) + 't\"<br>\n| Bar (bar: 'id)</p>\n<p>Andreas</p>",
        "id": 294308548,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660925067
    },
    {
        "content": "<p>From: Dmitriy Traytel &lt;<a href=\"mailto:traytel@in.tum.de\">traytel@in.tum.de</a>&gt;<br>\nHi Andreas,</p>\n<p>if no selector is specified for datatypes, there will be none generated <br>\n(a recent policy change). Your example shows tactic failures in the case <br>\nwhen selectors are generated, so the problem is even worse than just <br>\ngetting the right name. Fortunately, there is a simple workaround in <br>\nthis case:</p>\n<p>datatype_new (dead 't, 'id) foo =<br>\n   Foo \"('t list ⇒ 't) + 't\"<br>\n| Bar (bar: 'id)</p>\n<p>Marking 't explicitly as dead, changes the underlying BNFs slightly and <br>\nthe tactic succeeds. In the repository version we will make the tactic <br>\nmore robust also in the other case.</p>\n<p>Thanks for the report,<br>\nDmitriy</p>",
        "id": 294308761,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660925134
    }
]