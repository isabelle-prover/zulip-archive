[
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@inf.ethz.ch\">andreas.lochbihler@inf.ethz.ch</a>&gt;<br>\nHi Jasmin,</p>\n<p>Another application of the Ctr_Sugar/BNF machinery would be generating selector equations <br>\nfrom a record specification or specifying a record via its selectors. Here is an example <br>\nof what I have in mind:</p>\n<p>record point =<br>\n     x :: nat<br>\n     y :: nat</p>\n<p>definition my_point :: point where \"my_point = (| x = 5, y = 7 |)\"</p>\n<p>Now, I have to manually state and derive</p>\n<p>lemma point_sel:<br>\n     \"x my_point = 5\"<br>\n     \"y my_point = 7\"<br>\n   by(simp_all add: my_point_def)</p>\n<p>Conversely, it seems sensible to specify records by their fields, as in</p>\n<p>record_definition my_point :: point where \"x my_point = 5\" | \"y my_point = 7\"</p>\n<p>which could internally derive</p>\n<p>my_point_ctr: \"my_point = (| x = 5; y = 7 |)\"</p>\n<p>Johannes Hölzl has changed the definition of the complex numbers to a codatatype to be <br>\nable to use primcorec which does these conversions already internally. Is there already <br>\nsomething similar for extensible records which I have missed?</p>\n<p>Best,<br>\nAndreas</p>",
        "id": 294647117,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661164567
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@inria.fr\">jasmin.blanchette@inria.fr</a>&gt;<br>\nHi Andreas,</p>\n<blockquote>\n<p>Another application of the Ctr_Sugar/BNF machinery would be generating selector equations from a record specification or specifying a record via its selectors. Here is an example of what I have in mind:<br>\n…<br>\nJohannes Hölzl has changed the definition of the complex numbers to a codatatype to be able to use primcorec which does these conversions already internally. Is there already something similar for extensible records which I have missed?</p>\n</blockquote>\n<p>No, there is nothing like that. I think the key would be to extend “primcorec” to work with arbitrary “ctr_sugar”s that have selectors, by building a degenerate corecursor (term) from the case constant. This would be fairly easy. I might even have a student to work on this.</p>\n<p>Cheers,</p>\n<p>Jasmin</p>",
        "id": 294647132,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661164573
    }
]