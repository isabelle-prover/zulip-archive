[
    {
        "content": "<p>From: <a href=\"mailto:Gerwin.Klein@data61.csiro.au\">Gerwin.Klein@data61.csiro.au</a><br>\nOne for the lifting/transfer and code generator experts:</p>\n<p>I have a type that I’d like to define as a datatype, because it produces a nice constructor, code, etc setup, but the datatype also happens to be easy to define as a typedef, which gives me lifting and transfer to another type. I’d like to have both (of course ;-)).</p>\n<p>The type_definition theorem is easy to derive, but the command “setup_lifting” will overwrite the code generator setup from the datatype definition, which mostly makes quickcheck fail on this type (I haven’t investigated precisely when, but it at least complains about not knowing the constructors of the datatype any more).</p>\n<p>Is there a way to tell setup_lifting not to touch the code generator? Or a not too annoying way to do the job of setup_lifting manually?</p>\n<p>Cheers,<br>\nGerwin</p>",
        "id": 294725568,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661186300
    }
]