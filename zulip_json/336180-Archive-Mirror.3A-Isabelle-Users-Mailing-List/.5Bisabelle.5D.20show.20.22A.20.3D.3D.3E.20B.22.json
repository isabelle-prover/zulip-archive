[
    {
        "content": "<p>From: Askar Safin &lt;<a href=\"mailto:safinaskar@mail.ru\">safinaskar@mail.ru</a>&gt;<br>\nHi. I think I found a bug in the Isabelle 2013-2 (OS: Debian GNU/Linux 7, Interface: jEdit). For example, I type the following in the jEdit Isabelle interface:</p>\n<p>==begin==<br>\nnotepad begin<br>\nhave \"A ==&gt; B\" and \"C\" proof -<br>\n  show \"A ==&gt; B\" sorry<br>\n==end==</p>\n<p>Then, Isabelle will accept this \"show\" and the \"Output\" section of jEdit will show me:</p>\n<p>==begin==<br>\nshow A ⟹ B <br>\nSuccessful attempt to solve goal by exported rule:<br>\n  A ⟹ B <br>\nproof (state): step 4</p>\n<p>this:<br>\n  A ⟹ B</p>\n<p>goal (2 subgoals):<br>\n 1. A ⟹ A<br>\n 2. C<br>\n==end==</p>\n<p>So, we see strange \"A ==&gt; A\" goal. Then I can continue:</p>\n<p>==begin==<br>\n  show \"C\" sorry<br>\nqed<br>\n==end==</p>\n<p>And Isabelle will accept my proof. So, proof checking is OK, but the \"Output\" shows confusing output.</p>\n<p>You may say \"just use A --&gt; B\". Yes, this works, but in some cases I have to deal with namely \"A ==&gt; B\"-like goals. For example, when I prove something by induction, I deal with goals like \"P n ==&gt; P (Suc n)\" (and when I try to solve such goal using 'show \"P n ==&gt; P (Suc n)\"' I see confusing output in the \"Output\").</p>\n<p>You may say: just use 'assume \"A\" thus \"B\"' instead of 'show \"A ==&gt; B\"'. Yes, this works, too. But in some cases the resulting proof will became bigger. For example, I have a lot of goals A1 ==&gt; B1, A2 ==&gt; B2, etc, for example, created by induction on some datatype with many constructors. Then the following proof:<br>\n==begin==<br>\nassume A1<br>\nshow B1 sorry<br>\nnext<br>\nassume A2<br>\nshow B2 sorry<br>\nnext<br>\n...<br>\n==end==<br>\nis bigger than the following:<br>\n==begin==<br>\nshow \"A1 ==&gt; B1\" sorry<br>\nshow \"A2 ==&gt; B2\" sorry<br>\n...<br>\n==end==</p>\n<p>Moreover, imagine the following situation:<br>\n==begin==<br>\ndatatype t =<br>\n  c0<br>\n| c1 t<br>\n| c2 t<br>\n| c3 t</p>\n<p>lemma<br>\n  fixes x :: t<br>\n  assumes prem: \"A x\"<br>\n  shows \"B x\"<br>\nusing prem proof (induct x)<br>\n  fix x<br>\n  assume \"A x ⟹ B x\"<br>\n  hence \"C x\" sorry (* Some intermediate fact *)<br>\n  thus<br>\n    \"A (c1 x) ⟹ B (c1 x)\" and<br>\n    \"A (c2 x) ⟹ B (c2 x)\" and<br>\n    \"A (c3 x) ⟹ B (c3 x)\"<br>\n  sorry (* Let's image \"C x\" can prove all this goals at once using some simple method, for example, auto *)<br>\nnext<br>\n  show \"A c0 ⟹ B c0\" sorry<br>\nqed<br>\n==end==</p>\n<p>Any attempt to rewrite this proof not using 'thus \"A (c1 x) ==&gt; B (c1 x)\"' will result in bigger proof (even if we will use \"cases\"). Of course, all this are toy examples. In real proofs size increase will be more noticeable. In either case user should be able to write 'show \"A ==&gt; B\"' and not to see strange \"Output\".</p>\n<p>Also, the last example shows very strange behavior: \"thus\" solve goals, but simultaneously they leave unchanged (according to the \"Output\")! If I put cursor between \"sorry\" and \"next\" words, I will see in the jEdit \"Output\":<br>\n==begin==<br>\nshow A (c1 x) ⟹ B (c1 x)<br>\n  and A (c2 x) ⟹ B (c2 x)<br>\n  and A (c3 x) ⟹ B (c3 x) <br>\nSuccessful attempt to solve goal by exported rule:<br>\n  (A ?xa2 ⟹ B ?xa2) ⟹ A (c1 ?xa2) ⟹ B (c1 ?xa2) <br>\nSuccessful attempt to solve goal by exported rule:<br>\n  (A ?xa2 ⟹ B ?xa2) ⟹ A (c2 ?xa2) ⟹ B (c2 ?xa2) <br>\nSuccessful attempt to solve goal by exported rule:<br>\n  (A ?xa2 ⟹ B ?xa2) ⟹ A (c3 ?xa2) ⟹ B (c3 ?xa2) <br>\nproof (state): step 6</p>\n<p>this:<br>\n    A (c1 x) ⟹ B (c1 x)<br>\n    A (c2 x) ⟹ B (c2 x)<br>\n    A (c3 x) ⟹ B (c3 x)</p>\n<p>goal (4 subgoals):<br>\n 1. A c0 ⟹ B c0<br>\n 2. ⋀x. (A x ⟹ B x) ⟹ A (c1 x) ⟹ A (c1 x)<br>\n 3. ⋀x. (A x ⟹ B x) ⟹ A (c2 x) ⟹ A (c2 x)<br>\n 4. ⋀x. (A x ⟹ B x) ⟹ A (c3 x) ⟹ A (c3 x)<br>\n==end==</p>\n<p>I see lots of \"Successful attempt to solve goal by exported rule\" and then I see this goals again in \"goal (4 subgoals)\". Even if I put the cursor at the following \"next\" I will see:<br>\n==begin==<br>\nproof (state): step 7</p>\n<p>goal (4 subgoals):<br>\n 1. A c0 ⟹ B c0<br>\n 2. ⋀x. (A x ⟹ B x) ⟹ A (c1 x) ⟹ A (c1 x)<br>\n 3. ⋀x. (A x ⟹ B x) ⟹ A (c2 x) ⟹ A (c2 x)<br>\n 4. ⋀x. (A x ⟹ B x) ⟹ A (c3 x) ⟹ A (c3 x)<br>\n==end==</p>\n<p>And despite of all this the proof works! I. e. the last \"qed\" successfully finishes proof despite lots of goals present at the \"Output\" (for example, if I put the cursor to \"next\" or before \"qed\").</p>\n<p>So, please fix this issue or say how to workaround it or document it.</p>\n<p>(Redirected from <a href=\"https://mailmanbroy.informatik.tu-muenchen.de/pipermail/isabelle-dev/2014-July/005564.html\">https://mailmanbroy.informatik.tu-muenchen.de/pipermail/isabelle-dev/2014-July/005564.html</a> )</p>\n<p>==<br>\nAskar Safin</p>",
        "id": 294282117,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660920717
    }
]