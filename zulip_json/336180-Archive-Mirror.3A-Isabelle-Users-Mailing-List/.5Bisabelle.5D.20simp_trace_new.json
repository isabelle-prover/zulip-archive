[
    {
        "content": "<p>From: Walther Neuper &lt;<a href=\"mailto:wneuper@ist.tugraz.at\">wneuper@ist.tugraz.at</a>&gt;<br>\nFollowing a recent hint (cited at the bottom below) I tried to inspect <br>\n(in Isabelle2014), which rewrite rules are used by \"auto\" for proving <br>\nthis lemma:</p>\n<blockquote>\n<p>lemma \"(∃x. ∀y. P x y) ⟶ (∀y. ∃x. P x y)\"<br>\nusing [[simp_trace_new mode=full]]<br>\nusing [[simp_break \"_ ⟶ _\"]]<br>\nby auto</p>\n</blockquote>\n<p>With focus on \"auto\" &lt;Output&gt; indeed shows</p>\n<blockquote>\n<p>lemma (∃x. ∀y. ?P x y) ⟶ (∀y. ∃x. ?P x y)<br>\nSee &lt;simplifier trace&gt;</p>\n</blockquote>\n<p>but klicking \"&lt;simplifier trace&gt;\" opens two empty windows.</p>\n<p>Now I don't know whether</p>\n<ul>\n<li>\"auto\" doesn't need the simplifier in the above proof</li>\n<li>there is something I am doing wrong</li>\n<li>the hint below does not yet apply to Isabelle2014.</li>\n</ul>\n<p>Thanks a lot in advance,<br>\nWalther</p>\n<p>PS: \"isar-ref\" explains \"simp_trace_new\" and \"simp_break\", but my <br>\nquestions above remain; in \"jedit\" I found no match.</p>\n<p>On 14-11-28 03:25 PM, Tobias Nipkow wrote:</p>\n<blockquote>\n<p>:<br>\n:<br>\nHow to find out? Put \"using [[simp_trace_new mode=full]]\" in front of <br>\nyour simp/auto command.</p>\n<p>Tobias<br>\n</p>\n</blockquote>",
        "id": 294322716,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660927459
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nYour problem is purely logical and should be proved by the logical part of “auto” before simplification gets invoked.</p>\n<p>Larry Paulson</p>",
        "id": 294322761,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660927473
    },
    {
        "content": "<p>From: Walther Neuper &lt;<a href=\"mailto:wneuper@ist.tugraz.at\">wneuper@ist.tugraz.at</a>&gt;<br>\nHi David,</p>\n<p>thanks a lot for your reply to my questions in isabelle-users@ ...</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>lemma \"(∃x. ∀y. P x y) ⟶ (∀y. ∃x. P x y)\"<br>\nusing [[simp_trace_new mode=full]]<br>\nusing [[simp_break \"_ ⟶ _\"]]<br>\nby auto<br>\nWith focus on \"auto\" &lt;Output&gt; indeed shows<br>\nlemma (∃x. ∀y. ?P x y) ⟶ (∀y. ∃x. ?P x y)<br>\nSee &lt;simplifier trace&gt;<br>\nbut klicking \"&lt;simplifier trace&gt;\" opens two empty windows.</p>\n</blockquote>\n<p>Now I don't know whether\n* \"auto\" doesn't need the simplifier in the above proof\n* there is something I am doing wrong\n* \"simp_trace_new mode=full\" does not yet apply to Isabelle2014.<br>\nIf the simplifier trace doesn't help you, you might want to look<br>\nat Daniel Matichuk's \"apply_trace\" command, which I have described<br>\nat:<br>\n<a href=\"http://stackoverflow.com/a/26827242/570879\">http://stackoverflow.com/a/26827242/570879</a><br>\n... this looks great ...</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>(* attempt 5 to watch *)<br>\nlemma \"(∃x. ∀y. P x y) ⟶ (∀y. ∃x. P x y)\"<br>\napply_trace auto<br>\ndone<br>\n(*used theorems:<br>\n    allE: ∀x. ?P x ⟹ (?P ?x ⟹ ?R) ⟹ ?R<br>\n    allI: (⋀x. ?P x) ⟹ ∀x. ?P x<br>\n    ccontr: (¬ ?P ⟹ False) ⟹ ?P<br>\n    exE: ∃x. ?P x ⟹ (⋀x. ?P x ⟹ ?Q) ⟹ ?Q<br>\n    exI: ?P ?x ⟹ ∃x. ?P x<br>\n    impI: (?P ⟹ ?Q) ⟹ ?P ⟶ ?Q<br>\n    swap: ¬ ?P ⟹ (¬ ?R ⟹ ?P) ⟹ ?R *)</p>\n</blockquote>\n<p>... and seems to give a negative answer to our ultimate question: Can we <br>\nhave a \"naive mathematician's approach\" to simple quantifier reasoning <br>\nin Isabelle without delving down to the meta-logic?</p>\n<p>Walther</p>",
        "id": 294323169,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660927625
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nIsabelle is a logical framework, and that is how quantifier rules are expressed. The declarative representation of quantifier rules in the meta-logic is clearer, I hope, than the common alternative of representing them as computer code.</p>\n<p>Larry Paulson</p>",
        "id": 294323182,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660927630
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe \"meta-logic\" is just a formal notation for Natural Deduction rules, <br>\nand not much delving is required.</p>\n<p>Alternatively, it is always possible to print rules as Isar statements, <br>\ne.g. as in the 'print_statement' command.</p>\n<p>Makarius</p>\n<hr>\n<p><a href=\"http://stop-ttip.org\">http://stop-ttip.org</a>  1,069,976 people so far</p>\n<hr>",
        "id": 294323233,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660927649
    }
]