[
    {
        "content": "<p>From: José Manuel Rodríguez Caballero &lt;<a href=\"mailto:josephcmac@gmail.com\">josephcmac@gmail.com</a>&gt;<br>\nA pedagogical way to express the distinction between simple type theory and<br>\ndependent type theory is as follows.</p>\n<p>Roughly speaking, a type theory is a simple type theory iff types are not<br>\nparameterized, e.g., the type of matrices is not parametrized by the<br>\ndimensions of the matrices. In order to specify the dimension of a given<br>\nmatrix, a function should be defined.</p>\n<p>Roughly speaking, a type theory is a dependent type theory iff types can be<br>\nparametrized, e.g., the type of matrices can be parametrized by the<br>\ndimension of the matrices.</p>\n<p>In order to translate dependent type theory to simply type theory, a good<br>\nstrategy is to define some function playing the role of the parameters.</p>\n<p>Kind Regards,<br>\nJosé M.</p>\n<p>El vie., 22 feb. 2019 a las 12:39, Freek Wiedijk (&lt;<a href=\"mailto:freek@cs.ru.nl\">freek@cs.ru.nl</a>&gt;)<br>\nescribió:</p>",
        "id": 294751444,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661195637
    },
    {
        "content": "<p>From: Freek Wiedijk &lt;<a href=\"mailto:freek@cs.ru.nl\">freek@cs.ru.nl</a>&gt;<br>\nDear José,</p>\n<blockquote>\n<p>A pedagogical way to express the distinction between simple<br>\ntype theory and dependent type theory is as follows.<br>\n[...]</p>\n</blockquote>\n<p>I strongly disagree.  In the Mizar system one has \"dependent<br>\ntypes\" exactly in the way that you describe it.  But Mizar<br>\nis in no way based on \"dependent type theory\".  It does<br>\nnot have typed lamdba terms in _any_ fashion, so it is<br>\ncertainly not based on \"type theory\".  It _does_ have types,<br>\nand the types are parametrized exactly like you describe it.<br>\nWhich means it has dependent types.  But is not based on<br>\ntype theory, let alone on dependent type theory.</p>\n<p>My \"pedagogical way\" would be to say that in dependent type<br>\ntheory, one has typed lamdba terms represent the proofs.<br>\nI.e., it is based on the Curry-Howard isomorphism.</p>\n<p>So:</p>\n<p>simple type theory<br>\n     typed lambda terms for terms/formulas<br>\n     no lambda terms for proofs</p>\n<p>dependent type theory <br>\n    typed lambda terms for terms/formulas/proofs</p>\n<p>Dependent type theory really is the grand unification of<br>\nformal stuff: _everything_ is a typed lambda term there!</p>\n<p>Whether this is a good thing is disputable.  It naturally<br>\nleads to constructive logic, which is a distraction if<br>\nyou want to formalize classical mathematics.  Which is my<br>\nmain interest.</p>\n<p>Freek</p>",
        "id": 294751570,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661195668
    },
    {
        "content": "<p>From: José Manuel Rodríguez Caballero &lt;<a href=\"mailto:josephcmac@gmail.com\">josephcmac@gmail.com</a>&gt;<br>\nAccording to nlab:</p>\n<p>any type theory is called a simple type theory if type formation is not<br>\n<a href=\"https://ncatlab.org/nlab/show/simple+type+theory\">https://ncatlab.org/nlab/show/simple+type+theory</a></p>\n<p>Do you agree with this definition?</p>",
        "id": 294751616,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661195692
    }
]