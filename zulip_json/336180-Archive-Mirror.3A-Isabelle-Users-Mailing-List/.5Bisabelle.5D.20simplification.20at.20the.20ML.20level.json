[
    {
        "content": "<p>From: <a href=\"mailto:Clement.Hurlin@esial.uhp-nancy.fr\">Clement.Hurlin@esial.uhp-nancy.fr</a><br>\nHello,</p>\n<p>I woud like to simplify goals having the following pattern : \"X ==&gt; False\" .<br>\nLike for example simplifying<br>\n¬ ( (a /= b) \\/ (f a = b)) ==&gt; False<br>\nto<br>\n(a = b /\\ f b /= b) ==&gt; False</p>\n<p>(at the ML level) But the Simp_tac tactic fails, I guess because it  <br>\nworks from bottom to up.<br>\nWhat should I use ?</p>\n<p>Another problem I'm running into is that I want to simplify goal  <br>\nwithout implicitly applying assumption too. For example I would like  <br>\nto get<br>\n\"X ==&gt; X\" from \"<del> X ==&gt; </del>X\"<br>\nAt the proof general level, using \"simp\" is too strong and finishs the  <br>\nproof in 1 step. Using \"simp (no_asm)\" only simplifies the right hand  <br>\nside which is not what I want too. I'm maybe confused by the term  <br>\n\"assumption\" sometimes refering to the hypothesis, sometimes refering  <br>\nto the \"assumption\" tactic.<br>\nAnd what about that at the ML level ?</p>\n<p>Thanks for your help,<br>\nClément</p>",
        "id": 293905315,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660745770
    },
    {
        "content": "<p>From: Tjark Weber &lt;<a href=\"mailto:tjark.weber@gmx.de\">tjark.weber@gmx.de</a>&gt;<br>\nClément,</p>\n<p>if you just need CNF conversion, I suggest you take a look at the existing <br>\ncode in HOL/Tools/cnf_funcs.ML, and also in HOL/Tools/meson.ML.</p>\n<p>Best,<br>\nTjark</p>",
        "id": 293905347,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660745778
    },
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:brianh@csee.ogi.edu\">brianh@csee.ogi.edu</a>&gt;<br>\nHi Clement,</p>\n<p>On Thursday 20 April 2006 08:44, <a href=\"mailto:Clement.Hurlin@esial.uhp-nancy.fr\">Clement.Hurlin@esial.uhp-nancy.fr</a> wrote:</p>\n<blockquote>\n<p>Hello,</p>\n<p>I woud like to simplify goals having the following pattern : \"X ==&gt;<br>\nFalse\" . Like for example simplifying<br>\n¬ ( (a /= b) \\/ (f a = b)) ==&gt; False<br>\nto<br>\n(a = b /\\ f b /= b) ==&gt; False</p>\n<p>(at the ML level) But the Simp_tac tactic fails, I guess because it<br>\nworks from bottom to up.<br>\nWhat should I use ?</p>\n</blockquote>\n<p>In addition to Simp_tac, the following variations are also available: <br>\nAsm_simp_tac, Full_simp_tac, Asm_lr_simp_tac, and Asm_full_simp_tac. They are <br>\ndefined in Pure/simplifier.ML in the Isabelle sources. They each call the <br>\ngeneric simplifier tactic with different sets of flags. (These lower-case <br>\nversions are basically the same as the upper-case ones but take a simpset as <br>\nan argument.)</p>\n<p>val simp_tac = generic_simp_tac false (false, false, false);<br>\nval asm_simp_tac = generic_simp_tac false (false, true, false);<br>\nval full_simp_tac = generic_simp_tac false (true, false, false);<br>\nval asm_lr_simp_tac = generic_simp_tac false (true, true, false);<br>\nval asm_full_simp_tac = generic_simp_tac false (true, true, true);</p>\n<p>Each variation has a \"mode\" with three boolean flags, which control:<br>\n1) whether to simplify premises;<br>\n2) whether to use premises as additional simp rules;<br>\n3) whether to allow later premises to simplify earlier ones.</p>\n<p>In your case, it seems that you want to simplify the premises, but without <br>\nusing the premises to simplify the conclusion: You should use Full_simp_tac.</p>\n<blockquote>\n<p>Another problem I'm running into is that I want to simplify goal<br>\nwithout implicitly applying assumption too. For example I would like<br>\nto get<br>\n\"X ==&gt; X\" from \"<del> X ==&gt; </del>X\"<br>\nAt the proof general level, using \"simp\" is too strong and finishs the<br>\nproof in 1 step. Using \"simp (no_asm)\" only simplifies the right hand<br>\nside which is not what I want too. I'm maybe confused by the term<br>\n\"assumption\" sometimes refering to the hypothesis, sometimes refering<br>\nto the \"assumption\" tactic.</p>\n</blockquote>\n<p>In theory files, using \"simp\" is like Asm_full_simp_tac, \"simp (no_asm)\" is <br>\nlike Simp_tac, \"simp (no_asm_simp)\" is like Asm_simp_tac, and \"simp <br>\n(no_asm_use)\" is like Full_simp_tac. These simp options are described in the <br>\nIsabelle Tutorial, section 3.1.5.</p>\n<p>In your case, it seems that you would want \"simp (no_asm_use)\".</p>\n<ul>\n<li>Brian</li>\n</ul>",
        "id": 293905350,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660745779
    }
]