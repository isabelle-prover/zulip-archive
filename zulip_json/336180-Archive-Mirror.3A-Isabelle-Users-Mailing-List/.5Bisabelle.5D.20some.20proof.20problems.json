[
    {
        "content": "<p>From: noam neer &lt;<a href=\"mailto:noamneer@gmail.com\">noamneer@gmail.com</a>&gt;<br>\nhi everybody.</p>\n<p>I have two problems I encountered while proving something.<br>\nI'm bringing them here in a very simplified form.<br>\nI'm working with Isabelle/jEdit 2018 on win10.</p>\n<p>1) here there is external lemma which is not really important,<br>\nso I simplified it to \"Y=Y\".<br>\ninside the proof there is a lemma L7 whose proof is again not important,<br>\nso I used \"sorry\".<br>\nthe problem comes in the \"apply\" statement where the cursor stands.<br>\nfor some reason the simplifier can't apply L7, and I don't know why.<br>\nmaybe you know?</p>\n<p>[image: query_19_02_16a.png]</p>\n<ol start=\"2\">\n<li>it seems I can solve the first problem by applying 'subst' and 'auto'<br>\ninstead of 'simp'.<br>\nbut when I'm trying to continue the equality, before even applying anything,<br>\nI get some typing problem I don't understand. maybe you do.</li>\n</ol>\n<p>[image: query_19_02_16b.png]</p>\n<p>I'm attaching the text files just in case.<br>\nthanx in advance.</p>\n<p>&lt;<a href=\"https://www.avast.com/sig-email?utm_medium=email&amp;utm_source=link&amp;utm_campaign=sig-email&amp;utm_content=webmail&amp;utm_term=icon\">https://www.avast.com/sig-email?utm_medium=email&amp;utm_source=link&amp;utm_campaign=sig-email&amp;utm_content=webmail&amp;utm_term=icon</a>&gt;<br>\nVirus-free.<br>\n<a href=\"http://www.avast.com\">www.avast.com</a><br>\n&lt;<a href=\"https://www.avast.com/sig-email?utm_medium=email&amp;utm_source=link&amp;utm_campaign=sig-email&amp;utm_content=webmail&amp;utm_term=link\">https://www.avast.com/sig-email?utm_medium=email&amp;utm_source=link&amp;utm_campaign=sig-email&amp;utm_content=webmail&amp;utm_term=link</a>&gt;<br>\n&lt;#DAB4FAD8-2DD7-40BB-A1B8-4E2AA1F9FDF2&gt;<br>\n<a href=\"/user_uploads/14278/1iTRpollB7NKHjLviPYiPXsh/query_19_02_16a.png\">query_19_02_16a.png</a><br>\n<a href=\"/user_uploads/14278/XQYUdk6apfw7dJauCpl4YoWN/query_19_02_16b.png\">query_19_02_16b.png</a><br>\n<a href=\"/user_uploads/14278/Nzp2Olaf-tDr7BmWx3zUiA48/query_19_02_16a.thy\">query_19_02_16a.thy</a><br>\n<a href=\"/user_uploads/14278/obMNdLYmgm-glcSs6aj_9Tn3/query_19_02_16b.thy\">query_19_02_16b.thy</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/1iTRpollB7NKHjLviPYiPXsh/query_19_02_16a.png\" title=\"query_19_02_16a.png\"><img src=\"/user_uploads/14278/1iTRpollB7NKHjLviPYiPXsh/query_19_02_16a.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/14278/XQYUdk6apfw7dJauCpl4YoWN/query_19_02_16b.png\" title=\"query_19_02_16b.png\"><img src=\"/user_uploads/14278/XQYUdk6apfw7dJauCpl4YoWN/query_19_02_16b.png\"></a></div>",
        "id": 294750951,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661195424
    },
    {
        "content": "<p>From: Wolfgang Jeltsch &lt;<a href=\"mailto:wolfgang-it@jeltsch.info\">wolfgang-it@jeltsch.info</a>&gt;<br>\nHi!<br>\nI think you shouldn’t send screenshots and add the text files with the<br>\nsource code “just in case”. Instead you should only send the source code<br>\n(perhaps as part of the e-mail text). It’s the source code that counts,<br>\nnot its appearance on your screen. Having the source code allows others<br>\nto easily put it into the Isabelle IDE and experiment with them to<br>\ndiagnose the source of your problems.<br>\nAll the best,<br>\nWolfgang<br>\n<a href=\"/user_uploads/14278/hDQ9aZ5BIkoWJ3jhT3J0xr7E/query_19_02_16a.png\">query_19_02_16a.png</a><br>\n<a href=\"/user_uploads/14278/z_kA6ED9cyniXKQ7yzvZfVaa/query_19_02_16b.png\">query_19_02_16b.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/hDQ9aZ5BIkoWJ3jhT3J0xr7E/query_19_02_16a.png\" title=\"query_19_02_16a.png\"><img src=\"/user_uploads/14278/hDQ9aZ5BIkoWJ3jhT3J0xr7E/query_19_02_16a.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/14278/z_kA6ED9cyniXKQ7yzvZfVaa/query_19_02_16b.png\" title=\"query_19_02_16b.png\"><img src=\"/user_uploads/14278/z_kA6ED9cyniXKQ7yzvZfVaa/query_19_02_16b.png\"></a></div>",
        "id": 294750993,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661195448
    },
    {
        "content": "<p>From: Dominique Unruh &lt;<a href=\"mailto:unruh@ut.ee\">unruh@ut.ee</a>&gt;<br>\nThe error in the second example (involving ...) is due to the behaviour of<br>\n...</p>\n<p>If you show a fact <em>have \"x=y\"</em> then <em>...</em> will afterwards be short for <em>y</em><br>\nas you expect.<br>\nYou can check this using the command <em>term \"...\"</em><br>\nHowever, in some cases, it is not possible to bind <em>...</em> to the rhs of the<br>\nfact.<br>\nFor example, if you show <em>have \"!!z. x = y\"</em> where <em>y</em> is a term containing<br>\n<em>z</em>, then it is not possible to have <em>...</em> denote <em>y</em> because then <em>...</em><br>\nwould contain an unbound variable.<br>\nInstead, <em>...</em> is defined as <em>%z. y</em>, i.e., as a function such that <em>... z</em><br>\nis <em>y</em>. (Again, you can try <em>term \"...\"</em> and <em>term \"... z\"</em> to see.)<br>\nSo if you continue your calculation, you have to write <em>have \"... z = w\"</em><br>\nnot <em>have \"... = w\".</em></p>\n<p>In your example, you seem to have a similar case.<br>\nExcept that the \"unbound variable\" is a type variable.<br>\n(Although I am not sure why.)<br>\nThis is why the type <em>??'a itself</em> occurs in your typing error.<br>\nNamely, <em>...</em> is now a function that takes an extra argument that indicates<br>\nwhat type it should be instantiated with.<br>\nTry using <em>... TYPE(t)</em> instead of just <em>...</em> where <em>t</em> is whatever type<br>\nyou want plugged in.<br>\n(Or <em>... TYPE(_)</em> probably also works to leave it to type inference.)<br>\nAgain, try <em>term \"...\"</em> to understand how <em>...</em> is defined.</p>\n<p>Best wishes,<br>\nDominique.<br>\n<a href=\"/user_uploads/14278/qGsOiWoZUny2Bi4PvifY1Si7/query_19_02_16a.png\">query_19_02_16a.png</a><br>\n<a href=\"/user_uploads/14278/l_LNAiDOzE7i8wKoMXF5ilYx/query_19_02_16b.png\">query_19_02_16b.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/14278/qGsOiWoZUny2Bi4PvifY1Si7/query_19_02_16a.png\" title=\"query_19_02_16a.png\"><img src=\"/user_uploads/14278/qGsOiWoZUny2Bi4PvifY1Si7/query_19_02_16a.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/14278/l_LNAiDOzE7i8wKoMXF5ilYx/query_19_02_16b.png\" title=\"query_19_02_16b.png\"><img src=\"/user_uploads/14278/l_LNAiDOzE7i8wKoMXF5ilYx/query_19_02_16b.png\"></a></div>",
        "id": 294751005,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661195454
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThis is due to a numeral 2::'a -- numerals are polymorphic by default,<br>\nand sometimes the inferred types can be confusing.</p>\n<p>Included is my version of both of your examples: the first problem was<br>\nan improperly oriented rewrite rule -- the \"simp\" method usually wants<br>\nan actual simplification from left to right.</p>\n<p>A few more notes:</p>\n<p>* A theory name should be always Capitalized.</p>\n<p>* Meaning less fact names can be <em>, <strong>, </strong></em> or 1, 2, 3, 4, ... --<br>\nthere is no need to attach meaningless letters as in \"L7\".</p>\n<p>* Too many redundant parentheses obscure the term structure; the<br>\noutput uses minimal parentheses, this helps to figure out what is<br>\nrequired an what not.</p>\n<p>* The auto-indentation of the Isabelle Prover IDE helps to get the<br>\nsource structure right.</p>\n<p>Makarius<br>\n<a href=\"/user_uploads/14278/Uh7MzRj8jRnSXcw6wFzqEzhK/Query_19_02_16.thy\">Query_19_02_16.thy</a></p>",
        "id": 294751016,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661195459
    },
    {
        "content": "<p>From: noam neer &lt;<a href=\"mailto:noamneer@gmail.com\">noamneer@gmail.com</a>&gt;<br>\nthank u very much.</p>\n<p>is there a way to tell Isabelle that in a certain region of the code all<br>\nnumerals will be real (or some other specific type)?</p>\n<p>&lt;<a href=\"https://www.avast.com/sig-email?utm_medium=email&amp;utm_source=link&amp;utm_campaign=sig-email&amp;utm_content=webmail&amp;utm_term=icon\">https://www.avast.com/sig-email?utm_medium=email&amp;utm_source=link&amp;utm_campaign=sig-email&amp;utm_content=webmail&amp;utm_term=icon</a>&gt;<br>\nVirus-free.<br>\n<a href=\"http://www.avast.com\">www.avast.com</a><br>\n&lt;<a href=\"https://www.avast.com/sig-email?utm_medium=email&amp;utm_source=link&amp;utm_campaign=sig-email&amp;utm_content=webmail&amp;utm_term=link\">https://www.avast.com/sig-email?utm_medium=email&amp;utm_source=link&amp;utm_campaign=sig-email&amp;utm_content=webmail&amp;utm_term=link</a>&gt;<br>\n&lt;#DAB4FAD8-2DD7-40BB-A1B8-4E2AA1F9FDF2&gt;</p>",
        "id": 294751047,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661195471
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nNo.</p>\n<p>Numerals are like polymorphic constants in type-inference. You need to<br>\nprovide sufficient syntactic context in the term to force it to be some<br>\ntype, but sometimes this means to add a type-constraint.</p>\n<p>Note that the Prover IDE allows to query the inferred type of<br>\npolymorphic constants via normal C-mouse-hover.</p>\n<p>Makarius</p>",
        "id": 294751082,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661195484
    }
]