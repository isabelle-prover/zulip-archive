[
    {
        "content": "<p>From: Matthias Schmalz &lt;<a href=\"mailto:Matthias.Schmalz@inf.ethz.ch\">Matthias.Schmalz@inf.ethz.ch</a>&gt;<br>\nHi,</p>\n<p>Out of curiosity and for my thesis introduction, I have the following <br>\nquestion.<br>\nI am wondering whether there is a theorem prover out there that gives <br>\nstronger soundness guarantees than Isabelle/HOL and whether there is <br>\nempirical evidence showing that the difference is practically relevant.<br>\nI would also like to know when the last unsoundness bug in Isabelle's <br>\ninference core has been observed.</p>\n<p>I already know that Isabelle follows the LCF approach and that HOL is <br>\nbuilt from a modest number of axioms using conservative extension <br>\nmethods. It is therefore very likely that proofs by Isabelle are <br>\ncorrect. I also know that this soundness guarantee is restricted to the <br>\ninference core; for example, nothing prevents users from configuring the <br>\nparser to parse \"False\" as \"True\" and therefore giving the impression <br>\nthat \"False\" can be proved. (And of course, soundness rests on the <br>\nassumption that compiler, ML libraries, operating system, and hardware <br>\nbehave correctly.)</p>\n<p>Many thanks in advance,<br>\nMatthias</p>",
        "id": 294150966,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660849295
    },
    {
        "content": "<p>From: Lars Noschinski &lt;<a href=\"mailto:noschinl@in.tum.de\">noschinl@in.tum.de</a>&gt;<br>\nI think HOL Zero tries to make sure that you cannot reconfigure parser <br>\nand pretty-printer in a way that confuses the user. If you search for <br>\n<a href=\"mailto:mark@proof-technologies.com\">mark@proof-technologies.com</a> on this list, you should find some <br>\ndiscussion on this topic.</p>\n<p>-- Lars</p>",
        "id": 294150992,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660849303
    },
    {
        "content": "<p>From: Ramana Kumar &lt;<a href=\"mailto:rk436@cam.ac.uk\">rk436@cam.ac.uk</a>&gt;<br>\nHOL Zero (<a href=\"http://proof-technologies.com/holzero.html\">http://proof-technologies.com/holzero.html</a>) was mentioned already.<br>\nHOL Light has had some self-verification applied (<br>\n<a href=\"http://www.cl.cam.ac.uk/~jrh13/papers/holhol.html\">http://www.cl.cam.ac.uk/~jrh13/papers/holhol.html</a>).<br>\nJitawa is a theorem prover verified in HOL (<br>\n<a href=\"http://www.cl.cam.ac.uk/~mom22/jitawa/\">http://www.cl.cam.ac.uk/~mom22/jitawa/</a>).<br>\nFor more about the idea you mentioned, parsing \"False\" as \"True\", see<br>\nPollack Inconsistency (<a href=\"http://www.cs.ru.nl/~freek/pubs/rap.pdf\">http://www.cs.ru.nl/~freek/pubs/rap.pdf</a>).</p>",
        "id": 294151033,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660849316
    },
    {
        "content": "<p>From: Ramana Kumar &lt;<a href=\"mailto:rk436@cam.ac.uk\">rk436@cam.ac.uk</a>&gt;<br>\nSorry - Jitawa is the verified runtime. The self-verifying prover on top of<br>\nit is called Milawa (<a href=\"http://www.cs.utexas.edu/~jared/milawa/Web/\">http://www.cs.utexas.edu/~jared/milawa/Web/</a>).</p>",
        "id": 294151081,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660849322
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nForgive me if I launch into my usual lecture: I have never seen a piece of work spoilt by soundness bugs in a theorem prover. I have seen many pieces of work spoilt by unrealistic models, incorrect axioms or proofs of irrelevant properties. Soundness is vital, but (contrary to a widely held belief) it doesn't absolve users of the need to know what they are doing.</p>\n<p>Larry Paulson</p>",
        "id": 294151120,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660849332
    },
    {
        "content": "<p>From: \"\\\"Mark\\\"\" &lt;<a href=\"mailto:mark@proof-technologies.com\">mark@proof-technologies.com</a>&gt;<br>\nI would summarise the potential soundness-related vulnerabilities of<br>\nLCF-style systems as follows:</p>\n<ol>\n<li>\n<p>Small risk that the inference kernel still has problems with the<br>\ndesign/implementation of its logic.  This might include:</p>\n<ul>\n<li>\n<p>a) errors in tricky term operations such as substitution (most or<br>\nperhaps every HOL system has had problems with this at some stage);</p>\n</li>\n<li>\n<p>b) errors in the inference rules or axiom/definition commands (this risk<br>\nis amplified if the kernel implements various derivable inference rules as<br>\nprimitives).</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Vulnerabilities in the implementation of the LCF-style architecture.<br>\nThis might include:</p>\n<ul>\n<li>\n<p>a) backdoors to creating theorems, thus sidestepping the logic (e.g. by<br>\nimporting theorems from disk purely as statements without proof);</p>\n</li>\n<li>\n<p>b) not keeping track of theory (e.g. not maintaining a list of the<br>\ndefinitions of each constant in the theory, thus making it difficult to<br>\nreview definitions and what has been assumed);</p>\n</li>\n<li>\n<p>c) ability to overwrite crucial ML values and/or abstract datatypes<br>\n(such as the list of axioms or the datatype for theorems);</p>\n</li>\n<li>\n<p>d) vulnerability from aspects of the implementation language (e.g.<br>\nOCaml's mutable strings, OCaml's Obj.magic) .</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Problems associated with the pretty printer (and arguably the parser)<br>\nfooling the user about what has been proved.  This might include:</p>\n<ul>\n<li>\n<p>a) ambiguously displaying theorems (such as not annotating theorems with<br>\ntheir types, or not distinguishing between overloaded entities).  This has<br>\nbecome know recently as Pollack Inconsistency;</p>\n</li>\n<li>\n<p>b) vulnerability to having the pretty printer overwritten or extended in<br>\na problematic way.</p>\n</li>\n</ul>\n</li>\n</ol>\n<p>My HOL Zero system addresses most of these vulnerabilities, although there<br>\nis little that can be done about some of the 2c), 2d) and 3b)<br>\nvulnerabilities if an ML toplevel is allowed.  It is implemented in OCaml,<br>\nbut does manage to avoid the mutable strings problem.  I will be porting it<br>\nto SML sometime soon hopefully, which is a fundamentally more secure<br>\nlanguage.  I give out $100 bounty rewards for anyone uncovering new<br>\nunsoundness-related vulnerabilities.  The website includes a list of all<br>\nsoundness-related vulnerabilities that have been uncovered (even those found<br>\nby myself).  See the HOL Zero page at:<br>\n<a href=\"http://www.proof-technologies.com/holzero.html\">http://www.proof-technologies.com/holzero.html</a></p>\n<p>The inference kernels of most other LCF-style systems are actually a bit<br>\ncomplex, involving a few thousand lines of ML.  As of 2012, the risks of<br>\nvulnerability 1 are probably quite small because they get used so much, but<br>\nthere have been some unsoundnesses uncovered in the 1990s, and I would very<br>\nmuch like developers to clearly publish all discovered soundness-related<br>\nvulnerabilities in their systems.</p>\n<p>HOL Light manages to keep the inference kernel down to about 500 lines<br>\n(depending on exactly how you count the lines) by various measures,<br>\nincluding: not implementing derivable inference rules in the kernel (other<br>\nthan TRANS) and having a monolithic theory instead of maintaining a theory<br>\nhierarchy.  John Harrison has proved the consistency of the HOL Light<br>\nkernel, but this just addresses vulnerability 1.  Indeed I can prove false<br>\nwithout leaving a trace in the HOL Light state in about 5 lines of ML!</p>\n<p>I'm fairly sure that alll existing HOL systems (other than HOL Zero) still<br>\nhave various known vulnerabilities in their pretty printer, although some<br>\nhave been addressed.</p>\n<p>Mark Adams.</p>\n<p>on 30/1/12 10:00 AM, Matthias Schmalz &lt;<a href=\"mailto:Matthias.Schmalz@inf.ethz.ch\">Matthias.Schmalz@inf.ethz.ch</a>&gt; wrote:</p>",
        "id": 294151149,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660849340
    },
    {
        "content": "<p>From: \"\\\"Mark\\\"\" &lt;<a href=\"mailto:mark@proof-technologies.com\">mark@proof-technologies.com</a>&gt;<br>\nLarry, you rightly point out that there are more important worries for<br>\ntheorem prover users.  But this doesn't mean that soundness-related<br>\nvulnerabilities should be ignored now.</p>\n<p>And also, importantly, I would say that theorem proving hasn't yet reached<br>\nits potential.  Nowadays formal proof is largely confined to university<br>\ndepartments and a handful of reputed specialist companies.  If/when theorem<br>\nproving does become big, commercial realities mean that there will be<br>\nconsiderable outsourcing of proofs to contractors.  Undoubtedly commercial<br>\npressures will tempt some contractors to maliciously exploit<br>\nsoundness-related vulnerabilities, and so we should be taking steps now to<br>\naddress this.  I'm sure there would have been many in 1970s/80s pooh-poohing<br>\nthe risk of computer users exploiting security-related vulnerabilities.</p>\n<p>Mark.</p>\n<p>on 30/1/12 11:51 AM, Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt; wrote:</p>\n<blockquote>\n<p>Forgive me if I launch into my usual lecture: I have never seen a piece of<br>\nwork spoilt by soundness bugs in a theorem prover. I have seen many pieces<br>\nof work spoilt by unrealistic models, incorrect axioms or proofs of<br>\nirrelevant properties. Soundness is vital, but (contrary to a widely held<br>\nbelief) it doesn't absolve users of the need to know what they are doing.</p>\n<p>Larry Paulson</p>\n<p>On 30 Jan 2012, at 09:59, Matthias Schmalz wrote:</p>\n<blockquote>\n<p>Hi,</p>\n<p>Out of curiosity and for my thesis introduction, I have the following<br>\nquestion.<br>\nI am wondering whether there is a theorem prover out there that gives<br>\nstronger soundness guarantees than Isabelle/HOL and whether there is<br>\nempirical evidence showing that the difference is practically relevant.<br>\nI would also like to know when the last unsoundness bug in Isabelle's<br>\ninference core has been observed.</p>\n<p>I already know that Isabelle follows the LCF approach and that HOL is<br>\nbuilt from a modest number of axioms using conservative extension methods.<br>\nIt is therefore very likely that proofs by Isabelle are correct. I also<br>\nknow<br>\nthat this soundness guarantee is restricted to the inference core; for<br>\nexample, nothing prevents users from configuring the parser to parse<br>\n\"False\"<br>\nas \"True\" and therefore giving the impression that \"False\" can be proved.<br>\n(And of course, soundness rests on the assumption that compiler, ML<br>\nlibraries, operating system, and hardware behave correctly.)</p>\n<p>Many thanks in advance,<br>\nMatthias<br>\n</p>\n</blockquote>\n</blockquote>",
        "id": 294151165,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660849346
    },
    {
        "content": "<p>From: Randy Pollack &lt;<a href=\"mailto:rpollack@inf.ed.ac.uk\">rpollack@inf.ed.ac.uk</a>&gt;<br>\n---------- Forwarded message ----------<br>\nFrom: Randy Pollack &lt;<a href=\"mailto:rpollack0@gmail.com\">rpollack0@gmail.com</a>&gt;<br>\nDate: Mon, Jan 30, 2012 at 9:50 AM<br>\nSubject: Re: [isabelle] soundness of Isabelle/HOL<br>\nTo: \"\\\"Mark\\\"\" &lt;<a href=\"mailto:mark@proof-technologies.com\">mark@proof-technologies.com</a>&gt;<br>\nCc: <a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>, <a href=\"mailto:Matthias.Schmalz@inf.ethz.ch\">Matthias.Schmalz@inf.ethz.ch</a>,<br>\n<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a></p>\n<p>A well known approach to soundness, not discussed here yet, is<br>\nindependent checking.</p>\n<p>As Larry points out, a user must read and understand the statements of<br>\ntheorems s/he wants to believe, and all definitions they hereditarily<br>\ndepend on.</p>\n<p>Further there must be confidence that whatever form these theorems are<br>\npresented in is correctly captured by a proof tool's internal<br>\nrepresentation (issues of printing/parsing/overloading, etc).</p>\n<p>But the actual proofs are no cause to worry, at least in principle, at<br>\nleast in a system like Coq or Isabelle that can produce complete,<br>\nindependently checkable proof scripts. in some completely unambiguous<br>\nnotation.</p>\n<p>Randy Pollack</p>",
        "id": 294151194,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660849358
    },
    {
        "content": "<p>From: \"\\\"Mark\\\"\" &lt;<a href=\"mailto:mark@proof-technologies.com\">mark@proof-technologies.com</a>&gt;<br>\nThat's right, what I didn't say was that proof checking can address many of<br>\nthe remaining soundness-related vulnerabilities (and HOL Zero is very much<br>\nintended to be used in precisely this way, as a proof checker).  For<br>\nexample, any concern that the datatype for theorems is being overwritten by<br>\nthe proof script can be addressed by recording the proof and exporting it to<br>\nanother system.</p>\n<p>But this proof checking can still suffer problems if the system importing<br>\nthe proof is not suitably trustworthy.  For example, if both systems have a<br>\npretty printer that have the same vulnerability (e.g. not distinguishing<br>\nbetween two overloaded HOL variables), then the problem won't get noticed in<br>\neither system.</p>\n<p>Mark.</p>\n<p>on 30/1/12 2:50 PM, Randy Pollack &lt;<a href=\"mailto:rpollack0@gmail.com\">rpollack0@gmail.com</a>&gt; wrote:</p>\n<blockquote>\n<p>A well known approach to soundness, not discussed here yet, is<br>\nindependent checking.</p>\n<p>As Larry points out, a user must read and understand the statements of<br>\ntheorems s/he wants to believe, and all definitions they hereditarily<br>\ndepend on.</p>\n<p>Further there must be confidence that whatever form these theorems are<br>\npresented in is correctly captured by a proof tool's internal<br>\nrepresentation (issues of printing/parsing/overloading, etc).</p>\n<p>But the actual proofs are no cause to worry, at least in principle, at<br>\nleast in a system like Coq or Isabelle that can produce complete,<br>\nindependently checkable proof scripts. in some completely unambiguous<br>\nnotation.</p>\n<p>Randy Pollack<br>\n--<br>\nOn Mon, Jan 30, 2012 at 7:59 AM, \"Mark\" &lt;<a href=\"mailto:mark@proof-technologies.com\">mark@proof-technologies.com</a>&gt;<br>\nwrote:</p>\n<blockquote>\n<p>Larry, you rightly point out that there are more important worries for<br>\ntheorem prover users.  But this doesn't mean that soundness-related<br>\nvulnerabilities should be ignored now.</p>\n<p>And also, importantly, I would say that theorem proving hasn't yet<br>\nreached<br>\nits potential.  Nowadays formal proof is largely confined to university<br>\ndepartments and a handful of reputed specialist companies.  If/when<br>\ntheorem<br>\nproving does become big, commercial realities mean that there will be<br>\nconsiderable outsourcing of proofs to contractors.  Undoubtedly<br>\ncommercial<br>\npressures will tempt some contractors to maliciously exploit<br>\nsoundness-related vulnerabilities, and so we should be taking steps now<br>\nto<br>\naddress this.  I'm sure there would have been many in 1970s/80s<br>\npooh-poohing<br>\nthe risk of computer users exploiting security-related vulnerabilities.</p>\n<p>Mark.</p>\n<p>on 30/1/12 11:51 AM, Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt; wrote:</p>\n<blockquote>\n<p>Forgive me if I launch into my usual lecture: I have never seen a piece<br>\nof<br>\nwork spoilt by soundness bugs in a theorem prover. I have seen many<br>\npieces<br>\nof work spoilt by unrealistic models, incorrect axioms or proofs of<br>\nirrelevant properties. Soundness is vital, but (contrary to a widely<br>\nheld<br>\nbelief) it doesn't absolve users of the need to know what they are<br>\ndoing.</p>\n<p>Larry Paulson<br>\n</p>\n</blockquote>\n<p>On 30 Jan 2012, at 09:59, Matthias Schmalz wrote:</p>\n<blockquote>\n<blockquote>\n<p>Hi,</p>\n<p>Out of curiosity and for my thesis introduction, I have the following<br>\nquestion.<br>\nI am wondering whether there is a theorem prover out there that gives<br>\nstronger soundness guarantees than Isabelle/HOL and whether there is<br>\nempirical evidence showing that the difference is practically relevant.<br>\nI would also like to know when the last unsoundness bug in Isabelle's<br>\ninference core has been observed.</p>\n<p>I already know that Isabelle follows the LCF approach and that HOL is<br>\nbuilt from a modest number of axioms using conservative extension<br>\nmethods.<br>\nIt is therefore very likely that proofs by Isabelle are correct. I also<br>\nknow<br>\nthat this soundness guarantee is restricted to the inference core; for<br>\nexample, nothing prevents users from configuring the parser to parse<br>\n\"False\"<br>\nas \"True\" and therefore giving the impression that \"False\" can be<br>\nproved.<br>\n(And of course, soundness rests on the assumption that compiler, ML<br>\nlibraries, operating system, and hardware behave correctly.)</p>\n<p>Many thanks in advance,<br>\nMatthias<br>\n</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>",
        "id": 294151233,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660849376
    },
    {
        "content": "<p>From: Konrad Slind &lt;<a href=\"mailto:konrad.slind@gmail.com\">konrad.slind@gmail.com</a>&gt;<br>\nHi all,</p>\n<p>Matt Kaufmann and I ran a workshop on topics related to this issue<br>\n(Trusted Extensions of Interactive Theorem Provers). See</p>\n<p><a href=\"http://www.cs.utexas.edu/~kaufmann/itp-trusted-extensions-aug-2010/\">http://www.cs.utexas.edu/~kaufmann/itp-trusted-extensions-aug-2010/</a></p>\n<p>for the homepage and</p>\n<p><a href=\"http://www.cs.utexas.edu/~kaufmann/itp-trusted-extensions-aug-2010/summary/summary.pdf\">http://www.cs.utexas.edu/~kaufmann/itp-trusted-extensions-aug-2010/summary/summary.pdf</a></p>\n<p>for a summary of the techniques.</p>\n<p>Cheers,<br>\nKonrad.</p>",
        "id": 294151254,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660849383
    },
    {
        "content": "<p>From: Ramana Kumar &lt;<a href=\"mailto:rk436@cam.ac.uk\">rk436@cam.ac.uk</a>&gt;<br>\nOn independent checking, relevant projects (apart from HOL Zero) include<br>\nOpenTheory ( <a href=\"http://www.gilith.com/research/opentheory/\">http://www.gilith.com/research/opentheory/</a>) and dedukti (<br>\n<a href=\"http://www.lix.polytechnique.fr/dedukti/\">http://www.lix.polytechnique.fr/dedukti/</a>).</p>\n<blockquote>\n<p>On Jan 30, 2012 2:56 PM, \"Randy Pollack\" &lt;<a href=\"mailto:rpollack@inf.ed.ac.uk\">rpollack@inf.ed.ac.uk</a>&gt; wrote:</p>\n<blockquote>\n<p>---------- Forwarded message ----------<br>\nFrom: Randy Pollack &lt;<a href=\"mailto:rpollack0@gmail.com\">rpollack0@gmail.com</a>&gt;<br>\nDate: Mon, Jan 30, 2012 at 9:50 AM<br>\nSubject: Re: [isabelle] soundness of Isabelle/HOL<br>\nTo: \"\\\"Mark\\\"\" &lt;<a href=\"mailto:mark@proof-technologies.com\">mark@proof-technologies.com</a>&gt;<br>\nCc: <a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>, <a href=\"mailto:Matthias.Schmalz@inf.ethz.ch\">Matthias.Schmalz@inf.ethz.ch</a>,<br>\n<a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a></p>\n<p>A well known approach to soundness, not discussed here yet, is<br>\nindependent checking.</p>\n<p>As Larry points out, a user must read and understand the statements of<br>\ntheorems s/he wants to believe, and all definitions they hereditarily<br>\ndepend on.</p>\n<p>Further there must be confidence that whatever form these theorems are<br>\npresented in is correctly captured by a proof tool's internal<br>\nrepresentation (issues of printing/parsing/overloading, etc).</p>\n<p>But the actual proofs are no cause to worry, at least in principle, at<br>\nleast in a system like Coq or Isabelle that can produce complete,<br>\nindependently checkable proof scripts. in some completely unambiguous<br>\nnotation.</p>\n<p>Randy Pollack<br>\n--</p>\n</blockquote>\n<p>On Mon, Jan 30, 2012 at 7:59 AM, \"Mark\" &lt;<a href=\"mailto:mark@proof-technologies.com\">mark@proof-technologies.com</a>&gt;<br>\nwrote:</p>\n<blockquote>\n<blockquote>\n<p>Larry, you rightly point out that there are more important worries for<br>\ntheorem prover users.  But this doesn't mean that soundness-related<br>\nvulnerabilities should be ignored now.</p>\n<p>And also, importantly, I would say that theorem proving hasn't yet<br>\nreached<br>\nits potential.  Nowadays formal proof is largely confined to university<br>\ndepartments and a handful of reputed specialist companies.  If/when<br>\ntheorem<br>\nproving does become big, commercial realities mean that there will be<br>\nconsiderable outsourcing of proofs to contractors.  Undoubtedly<br>\ncommercial<br>\npressures will tempt some contractors to maliciously exploit<br>\nsoundness-related vulnerabilities, and so we should be taking steps<br>\nnow to<br>\naddress this.  I'm sure there would have been many in 1970s/80s<br>\npooh-poohing<br>\nthe risk of computer users exploiting security-related vulnerabilities.</p>\n<p>Mark.</p>\n<p>on 30/1/12 11:51 AM, Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt; wrote:</p>\n<blockquote>\n<p>Forgive me if I launch into my usual lecture: I have never seen a<br>\npiece of<br>\nwork spoilt by soundness bugs in a theorem prover. I have seen many<br>\npieces<br>\nof work spoilt by unrealistic models, incorrect axioms or proofs of<br>\nirrelevant properties. Soundness is vital, but (contrary to a widely<br>\nheld<br>\nbelief) it doesn't absolve users of the need to know what they are<br>\ndoing.</p>\n<p>Larry Paulson<br>\n</p>\n</blockquote>\n<p>On 30 Jan 2012, at 09:59, Matthias Schmalz wrote:</p>\n<blockquote>\n<blockquote>\n<p>Hi,</p>\n<p>Out of curiosity and for my thesis introduction, I have the following<br>\nquestion.<br>\nI am wondering whether there is a theorem prover out there that gives<br>\nstronger soundness guarantees than Isabelle/HOL and whether there is<br>\nempirical evidence showing that the difference is practically<br>\nrelevant.<br>\nI would also like to know when the last unsoundness bug in Isabelle's<br>\ninference core has been observed.</p>\n<p>I already know that Isabelle follows the LCF approach and that HOL is<br>\nbuilt from a modest number of axioms using conservative extension<br>\nmethods.<br>\nIt is therefore very likely that proofs by Isabelle are correct. I<br>\nalso<br>\nknow<br>\nthat this soundness guarantee is restricted to the inference core; for<br>\nexample, nothing prevents users from configuring the parser to parse<br>\n\"False\"<br>\nas \"True\" and therefore giving the impression that \"False\" can be<br>\nproved.<br>\n(And of course, soundness rests on the assumption that compiler, ML<br>\nlibraries, operating system, and hardware behave correctly.)</p>\n<p>Many thanks in advance,<br>\nMatthias<br>\n</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>",
        "id": 294151274,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660849389
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nBefore everything is repeated, see also the following thread from Jan <br>\n2011: <br>\n<a href=\"https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2011-January/msg00047.html\">https://lists.cam.ac.uk/pipermail/cl-isabelle-users/2011-January/msg00047.html</a></p>\n<p>IIRC, the thread also contains some explanations why your points 2c), 2d) <br>\nand 3b) concerning the \"ML toplevel\" are merely an accidental feature of <br>\nyour implementation that follows the classic Cambridge HOL paradigm.  The <br>\nIsabelle/ML toplevel is integrated with the prover differently -- it would <br>\neasily allow to amend these issues if they were of practical relevance, <br>\nbut there are more imporant things to do.</p>\n<p>Makarius</p>",
        "id": 294152144,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660849696
    }
]