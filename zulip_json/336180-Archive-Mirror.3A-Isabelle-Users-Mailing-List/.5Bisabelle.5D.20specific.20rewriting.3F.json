[
    {
        "content": "<p>From: Kawin Worrasangasilpa &lt;<a href=\"mailto:kw448@cam.ac.uk\">kw448@cam.ac.uk</a>&gt;<br>\nHi,</p>\n<p>Lately, I have been working with big summation terms and what I do mostly<br>\nis to simplify or unfold it line by line. But then yesterday I found some<br>\nweird problem that is when I want to fold a specific term in the expression<br>\nbelow I couldn't get it done by simp, auto or blast as I used to do.<br>\n...<br>\nalso have \"... = (∑a∈{f. ∀x. x ∉ {..&lt;n} ⟶ f x = False}. pmf (w_i_pmf n) a<br>\n*⇩R<br>\n              (<em>Φ_n i (map a [0..&lt;n])</em> - Φ_n (i-1) (map a [0..&lt;n])))\"<br>\n    using expectation_return_pmf<br>\n    by (simp add: Δ_n_def)<br>\n...<br>\nso I want it to be unfolded to:</p>\n<p>also have \"... = (∑a∈{f. ∀x. x ∉ {..&lt;n} ⟶ f x = False}. pmf (w_i_pmf n) a<br>\n*⇩R<br>\n(*real_of_int (fst (rev_m (drop (length (map a [0..&lt;n]) - i) (map a<br>\n[0..&lt;n]))))*</p>\n<ul>\n<li>\n<ul>\n<li>α * real_of_int (min 0 (snd (rev_m (drop (length (map a [0..&lt;n]) - i)<br>\n(map a [0..&lt;n])))))*)</li>\n</ul>\n</li>\n<li>\n<p>Φ_n (i-1) (map a [0..&lt;n]))\"</p>\n</li>\n</ul>\n<p>since I have<br>\ndefinition Φ_n :: \"nat ⇒ bool list ⇒ real\" where<br>\n  \"Φ_n n l= (λp. real_of_int (fst p) + α * (real_of_int (min 0 (snd p))))<br>\n(rev_m (drop (size l - n) l))\".<br>\nusually, it should be trivial and done by (simp add: Φ_n_def), but this<br>\ntime it doesn't work. So I would like to ask if there is any tactic that we<br>\ncan use to replace the exact term at the exact place in an expression with<br>\nsome term either simpler or more complicated if we know they are equal. I<br>\nhave never had this problem before and had no idea how trivial it was but I<br>\ncouldn't find a way to solve it.</p>\n<p>Thanks,<br>\nKawin</p>",
        "id": 294746115,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661193511
    },
    {
        "content": "<p>From: Simon Wimmer &lt;<a href=\"mailto:wimmersimon@gmail.com\">wimmersimon@gmail.com</a>&gt;<br>\nHi Kawin,</p>\n<p>there is the rewrite method in \"HOL-Library.Rewrite\".<br>\nYou can have a look at src/HOL/ex/Rewrite_Examples.thy for usage examples.</p>\n<p>Simon</p>",
        "id": 294746119,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661193513
    },
    {
        "content": "<p>From: Manuel Eberl &lt;<a href=\"mailto:eberlm@in.tum.de\">eberlm@in.tum.de</a>&gt;<br>\nThere is also the less fancy \"subst\", which performs a single rewrite<br>\nstep in the goal. If there is more than one possible place for the<br>\nrewrite, the positions can be chosen with a number, e.g. \"apply (subst<br>\n(2 4 5) my_equation)\". Assumptions can be rewritten with an additional<br>\n\"(asm)\" option.</p>\n<p>Manuel</p>",
        "id": 294746136,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661193519
    }
]