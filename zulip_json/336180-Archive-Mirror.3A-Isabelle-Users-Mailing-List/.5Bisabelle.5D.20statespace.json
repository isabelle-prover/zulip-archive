[
    {
        "content": "<p>From: Nils Jähnig &lt;<a href=\"mailto:jaehnig@mi.fu-berlin.de\">jaehnig@mi.fu-berlin.de</a>&gt;<br>\nHello,</p>\n<p>want to use the statespace construct to model state spaces and i have<br>\nsome questions:</p>\n<p>0) is there some reference to statespace which might answer my<br>\nquestions? until now i only have \"State Spaces - The Locale Way\" and<br>\nin there i could not find the answers to the following questions. (and<br>\ni found StateSpaceEx.thy which has similar examples)</p>\n<p>1) before, i tried to model the statespace as a record. I defined<br>\noperational semantics of the type \"record =&gt; instruction =&gt; record =&gt;<br>\nbool\" to have a function that indicates, whether the transition from<br>\none state to another via an instruction is allowed. How can I do this<br>\nwith statespaces, as they are not a variable type?</p>\n<p>2) is there a way to instantiate such a statespace? Or is there no<br>\nneed to? i'm still thinking in terms of records or functions, whose<br>\nvariables could be updated bit by bit, but maybe<br>\nthis just not the way statespaces are meant to be.</p>\n<p>3) i played around with the variable renaming of statespaces. here's my example<br>\nstatespace A = a::nat<br>\nstatespace B = A + b::nat<br>\nstatespace C = B[a=z] --- does not work</p>\n<p>so my perception is, that i can only rename variables, that were<br>\nintroduced in the named statespace, not in its parents.<br>\nwhy is it like this? is there some conceptual meaning?</p>\n<p>thanks in advance<br>\nbest regards<br>\nNils</p>",
        "id": 294121129,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660839858
    },
    {
        "content": "<p>From: Nils Jähnig &lt;<a href=\"mailto:jaehnig@mi.fu-berlin.de\">jaehnig@mi.fu-berlin.de</a>&gt;<br>\nHello,</p>\n<p>want to use the statespace construct to model state spaces and i have<br>\nsome questions:</p>\n<p>0) is there some reference to statespace which might answer my<br>\nquestions? until now i only have \"State Spaces - The Locale Way\" and<br>\nin there i could not find the answers to the following questions. (and<br>\ni found StateSpaceEx.thy which has similar examples)</p>\n<p>1) before, i tried to model the statespace as a record. I defined<br>\noperational semantics of the type \"record =&gt; instruction =&gt; record =&gt;<br>\nbool\" to have a function that indicates, whether the transition from<br>\none state to another via an instruction is allowed. How can I do this<br>\nwith statespaces, as they are not a variable type?</p>\n<p>2) is there a way to instantiate such a statespace? Or is there no<br>\nneed to? i'm still thinking in terms of records or functions, whose<br>\nvariables could be updated bit by bit, but maybe<br>\nthis just not the way statespaces are meant to be.</p>\n<p>3) i played around with the variable renaming of statespaces. here's my example<br>\nstatespace A = a::nat<br>\nstatespace B = A + b::nat<br>\nstatespace C = B[a=z] --- does not work</p>\n<p>so my perception is, that i can only rename variables, that were<br>\nintroduced in the named statespace, not in its parents.<br>\nwhy is it like this? is there some conceptual meaning?</p>\n<p>thanks in advance<br>\nbest regards<br>\nNils</p>",
        "id": 294121168,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660839872
    },
    {
        "content": "<p>From: Norbert Schirmer &lt;<a href=\"mailto:schirmer@in.tum.de\">schirmer@in.tum.de</a>&gt;<br>\nHello Nils,</p>\n<p>On 08.11.2010, at 21:19, Nils Jähnig wrote:</p>\n<blockquote>\n<p>Hello,</p>\n<p>want to use the statespace construct to model state spaces and i have<br>\nsome questions:</p>\n<p>0) is there some reference to statespace which might answer my<br>\nquestions? until now i only have \"State Spaces - The Locale Way\" and<br>\nin there i could not find the answers to the following questions. (and<br>\ni found StateSpaceEx.thy which has similar examples)</p>\n</blockquote>\n<p>I thought everything is said in that paper ;)</p>\n<blockquote>\n<p>1) before, i tried to model the statespace as a record. I defined<br>\noperational semantics of the type \"record =&gt; instruction =&gt; record =&gt;<br>\nbool\" to have a function that indicates, whether the transition from<br>\none state to another via an instruction is allowed. How can I do this<br>\nwith statespaces, as they are not a variable type?<br>\n</p>\n</blockquote>\n<p>As a statespace is just a locale, you<br>\ncan define the function in the context of the statespace / locale using the \"local-theory\" concepts of Isabelle e.g.:</p>\n<p>statespace state = ...</p>\n<p>context state<br>\nbegin</p>\n<p>fun myfun <br>\nwhere<br>\n\"myfun s = use s with selectors and updates here\"</p>\n<p>end</p>\n<blockquote>\n<p>2) is there a way to instantiate such a statespace? Or is there no<br>\nneed to? i'm still thinking in terms of records or functions, whose<br>\nvariables could be updated bit by bit, but maybe<br>\nthis just not the way statespaces are meant to be.</p>\n</blockquote>\n<p>Yes by the standard means of locale instantiation. <br>\nThere is currently not more automation.<br>\nFor example you can define a record with all the fields, then instantiate the statespace-locale which leaves you with the obligation to proof that the record selector / update functions fulfill the locale assumptions, which they should.</p>\n<blockquote>\n<p>3) i played around with the variable renaming of statespaces. here's my example<br>\nstatespace A = a::nat<br>\nstatespace B = A + b::nat<br>\nstatespace C = B[a=z] --- does not work</p>\n<p>This seems to be a bug or missing feature, but no conceptual thing.</p>\n</blockquote>\n<p>Hope this helps.</p>\n<p>Norbert</p>",
        "id": 294121298,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660839925
    }
]