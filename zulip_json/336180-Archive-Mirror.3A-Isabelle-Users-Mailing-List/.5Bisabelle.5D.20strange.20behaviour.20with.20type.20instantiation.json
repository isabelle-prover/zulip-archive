[
    {
        "content": "<p>From: Burkhart Wolff &lt;<a href=\"mailto:Burkhart.Wolff@lri.fr\">Burkhart.Wolff@lri.fr</a>&gt;<br>\nDear all,</p>\n<p>I'd like to do the following standard type instantiation:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>&gt;</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>instantiation  list :: (type) ord<br>\nbegin</p>\n<p>definition  le_list_def  : \"s \\&lt;le&gt; t \\&lt;longleftrightarrow&gt; (\\&lt;exists&gt;  <br>\nr. s @ r = t)\"<br>\ndefinition  less_list_def: \"s &lt; t \\&lt;longleftrightarrow&gt; s \\&lt;le&gt; t  <br>\n\\&lt;and&gt; s \\&lt;noteq&gt; t\"</p>\n<p>(*<br>\ndefinition  less_list_def : \"less \\&lt;equiv&gt; \\&lt;lambda&gt; x y. (x \\&lt;le&gt; y  <br>\n\\&lt;and&gt; x \\&lt;noteq&gt; y)\"<br>\n*)<br>\ninstance  ..</p>\n<p>end</p>\n<p>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;<br>\nHowever, I got the following respionse (under Isabelle 2008):</p>\n<p>*** Bad head of lhs: existing constant \"op &lt;\"<br>\n*** The error(s) above occurred in definition: \"s &lt; t  s ~ t ~ s ~ t\"<br>\n*** At command \"definition\".</p>\n<p>Exchanging the offending s &lt; t by the core notation (see comments)<br>\nno avail.</p>\n<p>Can anyone help me out ?</p>\n<p>Best regards,</p>\n<p>bu</p>",
        "id": 294077606,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660829489
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Burkhart,</p>\n<blockquote>\n<p>instantiation  list :: (type) ord<br>\nbegin</p>\n<p>definition  le_list_def  : \"s \\&lt;le&gt; t \\&lt;longleftrightarrow&gt; (\\&lt;exists&gt;<br>\nr. s @ r = t)\"<br>\ndefinition  less_list_def: \"s &lt; t \\&lt;longleftrightarrow&gt; s \\&lt;le&gt; t \\&lt;and&gt;<br>\ns \\&lt;noteq&gt; t\"</p>\n<p>(*<br>\ndefinition  less_list_def : \"less \\&lt;equiv&gt; \\&lt;lambda&gt; x y. (x \\&lt;le&gt; y<br>\n\\&lt;and&gt; x \\&lt;noteq&gt; y)\"<br>\n*)<br>\ninstance  ..</p>\n<p>end</p>\n</blockquote>\n<p>The problem is that the inferred type for less_list is too general.<br>\nType annotations help:</p>\n<p>instantiation  list :: (type) ord<br>\nbegin</p>\n<blockquote>\n<p>instantiation  list :: (type) ord<br>\nbegin</p>\n<p>definition  le_list_def  : \"s \\&lt;le&gt; t \\&lt;longleftrightarrow&gt; (\\&lt;exists&gt; r. s @ r = t)\"<br>\ndefinition  less_list_def: \"(s :: 'a list) &lt; t \\&lt;longleftrightarrow&gt; s \\&lt;le&gt; t \\&lt;and&gt; s \\&lt;noteq&gt; t\"</p>\n</blockquote>\n<p>...</p>\n<p>AFAIK there are some theories in HOL/Library which define different<br>\norders on lists (Prefix_ord.thy, ...).  Perhaps these are helpful also.</p>\n<p>Hope this helps<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/7uHGr_nDpkCzKKBpEJrluX0n/signature.asc\">signature.asc</a></p>",
        "id": 294077612,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660829492
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Burkhart,<br>\nThis is a misunderstanding how type variables work wrt. instantiation:<br>\ntype variables for instance specifications are locally fixes during the<br>\nwhole instantiation block.  Thus you have to write \"'a\" instead of<br>\n\"'\\&lt;alpha&gt;\".</p>\n<p>Hope this helps,</p>\n<p>Florian<br>\n<a href=\"/user_uploads/14278/L9RbLjWEQvWmCaynVHXioeJg/signature.asc\">signature.asc</a></p>",
        "id": 294077646,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660829511
    },
    {
        "content": "<p>From: Burkhart Wolff &lt;<a href=\"mailto:Burkhart.Wolff@lri.fr\">Burkhart.Wolff@lri.fr</a>&gt;<br>\nHi Florian,</p>\n<p>did you actually try this ?</p>\n<p>I did of course, among other variants, and I still get:</p>\n<p>instantiation  list :: (type) ord<br>\nbegin</p>\n<p>definition  le_list_def  : \"s \\&lt;le&gt; t \\&lt;longleftrightarrow&gt; (\\&lt;exists&gt;  <br>\nr. s @ r = t)\"</p>\n<p>definition  less_list_def: \"(s::'\\&lt;alpha&gt; list) &lt; t  <br>\n\\&lt;longleftrightarrow&gt; s \\&lt;le&gt; t \\&lt;and&gt; s \\&lt;noteq&gt; t\"<br>\n(*<br>\ndefinition  less_list_def : \"less \\&lt;equiv&gt; \\&lt;lambda&gt; x y. (x \\&lt;le&gt; y  <br>\n\\&lt;and&gt; x \\&lt;noteq&gt; y)\"<br>\n*)<br>\ninstance  ..</p>\n<p>end</p>\n<p>and still get the same error message:</p>\n<p>*** Bad head of lhs: existing constant \"op &lt;\"<br>\n*** The error(s) above occurred in definition: \"s &lt; t == s &lt;= t &amp; s ~=  <br>\nt\"<br>\n*** At command \"definition\".</p>\n<p>Best,</p>\n<p>bu</p>",
        "id": 294077697,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660829523
    }
]