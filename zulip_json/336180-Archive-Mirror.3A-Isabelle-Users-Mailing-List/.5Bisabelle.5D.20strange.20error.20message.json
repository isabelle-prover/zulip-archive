[
    {
        "content": "<p>From: michel levy &lt;<a href=\"mailto:michel.levy@imag.fr\">michel.levy@imag.fr</a>&gt;<br>\nI am a french beginner in Isabelle.<br>\nI write this very short theory with jEdit</p>\n<p>theory all<br>\nimports Main<br>\nbegin<br>\n  lemma \"∀ x. P(w,x) ⟹ P(w,a)\"<br>\n  apply(erule_tac x =\"a\" in allE)<br>\n<em>Her</em><em>e I have the goal P(w,a) ==&gt; P(w,a)</em><br>\n  oops</p>\n<p>lemma \"∀ y. P(w,y) ⟹ P(w,a)\"<br>\n  apply(erule_tac y= \"a\" in allE)<br>\n<em>Here I have the unexpected message No such variable in theorem : \"?y\"</em><br>\n  oops</p>\n<p>Why this difference between these proofs ?</p>",
        "id": 294657511,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661168659
    },
    {
        "content": "<p>From: Christian Sternagel &lt;<a href=\"mailto:c.sternagel@gmail.com\">c.sternagel@gmail.com</a>&gt;<br>\nDear Michel,</p>\n<p>the name (\"x\" and \"y\" in your examples) refers to variables of the fact<br>\nyou are using, which is \"allE\", not to names inside the current goal.</p>\n<p>allE: ∀x. ?P x ⟹ (?P ?x ⟹ ?R) ⟹ ?R</p>\n<p>As you can see, there is an \"x\" in \"allE\", but not \"y\", hence the error<br>\nmessage.</p>\n<p>hope this helps</p>\n<p>chris</p>",
        "id": 294657556,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661168676
    },
    {
        "content": "<p>From: Jasmin Blanchette &lt;<a href=\"mailto:jasmin.blanchette@inria.fr\">jasmin.blanchette@inria.fr</a>&gt;<br>\nTo clarify further, the \"x\" Christian is talking about is the so-called schematic variable \"?x\" occurring in the second assumption, not the bound \"x\" occurring in the first one. Although the variable's official name is \"?x\", there is no need to specify the question mark when instantiating it.</p>\n<p>Jasmin</p>",
        "id": 294657567,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661168683
    },
    {
        "content": "<p>From: Larry Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nIt is worth mentioning that Isabelle is based on a logical framework. Therefore inference rules such as allE are not built in, and variants (e.g. with different variable names) are easily introduced. </p>\n<p>Simple examples such as the one you include in your message (there are many in the documentation) are obviously good for learning, but as you gain experience, you will see that Isabelle’s built-in notions of abstraction and generalisation provide ways of plugging values into theorems without having to do low-level reasoning with quantifiers.</p>\n<p>Larry Paulson</p>",
        "id": 294657581,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661168689
    }
]