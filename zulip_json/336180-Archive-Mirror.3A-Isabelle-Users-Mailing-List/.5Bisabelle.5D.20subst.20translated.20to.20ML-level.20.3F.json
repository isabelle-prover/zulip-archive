[
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt;<br>\nHi all,</p>\n<p>I cannot figure out how to write<br>\n  apply (subst theorem)<br>\nin the form:<br>\n  apply (tactic {* ... *})</p>\n<p>The file Provers/eqsubst.thy seems to define this method, but it lacks <br>\ndocumentation in the isabelle reference manual, the chapter on <br>\nsubstitution there describes \"stac\" instead, which is not quite the same.</p>\n<p>Maybe my question reduces to the stupid question: What to fill in for <br>\nthe parameters of \"fun eqsubst_tac ctxt occL thms i th\", when I want to <br>\nuse it inside an:<br>\n  apply (tactic {* ... *}) ?</p>\n<p>Regards and thanks in advance for any help,<br>\n  Peter</p>",
        "id": 294066222,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660825511
    },
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:brianh@cs.pdx.edu\">brianh@cs.pdx.edu</a>&gt;<br>\nQuoting Peter Lammich &lt;<a href=\"mailto:peter.lammich@uni-muenster.de\">peter.lammich@uni-muenster.de</a>&gt;:</p>\n<blockquote>\n<p>Hi all,</p>\n<p>I cannot figure out how to write<br>\n apply (subst theorem)<br>\nin the form:<br>\n apply (tactic {* ... *})</p>\n</blockquote>\n<p>Hi Peter,</p>\n<p>Here is a silly example:</p>\n<p>lemma \"(x = y) = (a = b)\"<br>\napply (subst (1 3) eq_commute)<br>\n-- New subgoal is \"(y = x) = (b = a)\"</p>\n<p>Note that there are three places that the eq_commute rule could apply  <br>\nto this subgoal; the optional (1 3) argument to \"subst\" says to apply  <br>\nthe rule to the first and third, but not the second.</p>\n<p>You can get the same result with:<br>\napply (tactic {* EqSubst.eqsubst_tac @{context} [1,3] [@{thm  <br>\neq_commute}] 1 *})</p>\n<p>(The \"1\" at the end just says that the tactic should be applied to the  <br>\nfirst subgoal.)</p>\n<p>If you use [0] as the occL argument, this corresponds to the default  <br>\nbehavior of subst where the optional argument is omitted. (There is a  <br>\ncomment in eqsubst.ML to this effect.) So the following are equivalent:</p>\n<p>apply (subst eq_commute)<br>\napply (tactic {* EqSubst.eqsubst_tac @{context} [0] [@{thm eq_commute}] 1 *})</p>\n<p>Hope this helps.</p>\n<ul>\n<li>Brian</li>\n</ul>\n<blockquote>\n<p>The file Provers/eqsubst.thy seems to define this method, but it lacks<br>\ndocumentation in the isabelle reference manual, the chapter on<br>\nsubstitution there describes \"stac\" instead, which is not quite the<br>\nsame.</p>\n<p>Maybe my question reduces to the stupid question: What to fill in for<br>\nthe parameters of \"fun eqsubst_tac ctxt occL thms i th\", when I want to<br>\nuse it inside an:<br>\n apply (tactic {* ... *}) ?</p>\n<p>Regards and thanks in advance for any help,<br>\n Peter</p>\n</blockquote>",
        "id": 294066234,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660825518
    }
]