[
    {
        "content": "<p>From: Walther Neuper &lt;<a href=\"mailto:wneuper@ist.tugraz.at\">wneuper@ist.tugraz.at</a>&gt;<br>\nHow get can one the term of the body from a function defined as<br>\npartial_function ?</p>\n<p>Example: From a function definition like</p>\n<blockquote>\n<p>partial_function (tailrec)<br>\n  solve_equation :: \"bool ⇒ int ⇒ bool list \"<br>\nwhere<br>\n  \"solve_equation eq bdv = {eq, eq, eq}\"</p>\n</blockquote>\n<p>we get</p>\n<blockquote>\n<p>val t as Const (\"Scratch.solve_equation\", T) = @{term solve_equation}<br>\n(* T = \"bool ⇒ int ⇒ bool list\" *)</p>\n</blockquote>\n<p>while we also want</p>\n<blockquote>\n<p>val Const (\"Set.insert\", _) $ Free (\"eq\", _) $<br>\n     (Const (\"Set.insert\", _) $ Free (\"eq\", _) $<br>\n       (Const (\"Set.insert\", _) $ Free (\"eq\", _) $<br>\n         Const (\"<a href=\"http://Orderings.bot_class.bot\">Orderings.bot_class.bot</a>\", _))) = @{term \"{eq, eq, eq}\"}</p>\n</blockquote>\n<p>from the definition by \"partial_function\".</p>\n<p>Thanks in advance,<br>\nWalther</p>",
        "id": 294728325,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661187132
    },
    {
        "content": "<p>From: Peter Lammich &lt;<a href=\"mailto:lammich@in.tum.de\">lammich@in.tum.de</a>&gt;<br>\n\\-------- Original Message --------  <br>\nSubject: Re: [isabelle] term of partial_function body  <br>\nFrom: Peter Lammich  <br>\nTo: Walther Neuper  <br>\nCC:  </p>\n<blockquote>\n<p>There should be a theorem solve_equation.simps, and its rhs should be the<br>\nterm you are looking for.  </p>\n<p>Peter</p>\n<p>\\-------- Original Message --------  <br>\nSubject: [isabelle] term of partial_function body  <br>\nFrom: Walther Neuper  <br>\nTo: <a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a>  <br>\nCC:  </p>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>How get can one the term of the body from a function defined as  <br>\npartial_function ?  </p>\n</blockquote>\n<p>Example: From a function definition like  </p>\n<blockquote>\n<p>partial_function (tailrec)  <br>\nsolve_equation :: \"bool ⇒ int ⇒ bool list \"  <br>\nwhere  <br>\n\"solve_equation eq bdv = {eq, eq, eq}\"  </p>\n</blockquote>\n<p>we get  </p>\n<blockquote>\n<p>val t as Const (\"Scratch.solve_equation\", T) = @{term solve_equation}  <br>\n(* T = \"bool ⇒ int ⇒ bool list\" *)  </p>\n</blockquote>\n<p>while we also want  </p>\n<blockquote>\n<p>val Const (\"Set.insert\", _) $ Free (\"eq\", _) $  <br>\n(Const (\"Set.insert\", _) $ Free (\"eq\", _) $  <br>\n(Const (\"Set.insert\", _) $ Free (\"eq\", _) $  <br>\nConst (\"<a href=\"http://Orderings.bot_class.bot\">Orderings.bot_class.bot</a>\", _))) = @{term \"{eq, eq, eq}\"}  </p>\n</blockquote>\n<p>from the definition by \"partial_function\".  </p>\n<p>Thanks in advance,  <br>\nWalther  </p>\n</blockquote>",
        "id": 294728348,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661187137
    },
    {
        "content": "<p>From: Walther Neuper &lt;<a href=\"mailto:wneuper@ist.tugraz.at\">wneuper@ist.tugraz.at</a>&gt;<br>\nOn 2018-03-29 21:21, Peter Lammich wrote:</p>\n<blockquote>\n<p>There should be a theorem solve_equation.simps, and its rhs should<br>\n    be the term you are looking for.<br>\n</p>\n</blockquote>\n<p>Ahhh, there is all we need in Isabelle/ML (while a theorem cannot be not<br>\nfound in Isabele/jEdit for good reasons).</p>\n<p>Thanks a lot (saved much time for hacking context.ML) !</p>\n<blockquote>\n<p>Peter</p>\n<p>Walther</p>\n</blockquote>",
        "id": 294728359,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661187143
    }
]