[
    {
        "content": "<p>From: Sean McLaughlin &lt;<a href=\"mailto:seanmcl@cmu.edu\">seanmcl@cmu.edu</a>&gt;<br>\nHello,</p>\n<p>I often need to investigate the instantiation of type variables in  <br>\na proofterm.<br>\nThe order in which this is done is that returned by the function<br>\nterm_tvars : term -&gt; (indexname * sort) list<br>\nThis works fine when I extract a term from a proofterm, eg</p>\n<p>ML {* val (_ %% (_ %% ((((((PAxm(_,x,_) % _) % _) % _) % _)%% _) %%  <br>\n_)) %% _) = get_proof \"HOL.TrueI\" *}<br>\nML {* term_tvars x *}</p>\n<p>val it = [((\"'b\", 0), [\"logic\"]), ((\"'a\", 0), [\"logic\"])]<br>\n: (Term.indexname * Term.sort) list</p>\n<p>However, when I construct a term myself, it doesn't</p>\n<p>ML {* term_tvars (read \"INTER\") *}<br>\nval it = [] : (Term.indexname * Term.sort) list</p>\n<p>even though this INTER has two free type variables.</p>\n<p>How can I get this to work?</p>\n<p>Thanks,</p>\n<p>Sean</p>",
        "id": 293896498,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660742872
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nOne suggestion is that you work directly with the ML level rather  <br>\nthan from the Isar level: use \"isabelle\" rather than \"Isabelle\" to  <br>\nstart up. Then use the constructors in Pure/term.ML to express terms.</p>\n<p>~: isabelle<br>\nPoly/ML RTS version PPC-4.1.3 (12:32:32 Dec 21 2004)<br>\nCopyright (c) 2002 CUTS and contributors.<br>\nRunning with heap parameters  <br>\n(h=81920K,ib=16384K,ip=100%,mb=20480K,mp=20%)<br>\nMapping /Users/lcp/isabelle/heaps/polyml-4.1.3_ppc-darwin/HOL<br>\nMapping /Users/lcp/isabelle/Repos/polyml-4.1.3/ppc-darwin/ML_dbase<br>\nPoly/ML 4.1.3 Release</p>\n<blockquote>\n<p>val it = () : unit<br>\nFree (\"fred\", TVar ((\"'a\",3), [\"logic\"]));<br>\nval it = Free (\"fred\", \"?'a3\") : Term.term<br>\nterm_tvars it;<br>\nval it = [((\"'a\", 3), [\"logic\"])] : (Term.indexname * Term.sort) list<br>\n</p>\n</blockquote>\n<p>Larry Paulson</p>",
        "id": 293896500,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660742873
    },
    {
        "content": "<p>From: Tjark Weber &lt;<a href=\"mailto:tjark.weber@gmx.de\">tjark.weber@gmx.de</a>&gt;<br>\nSean,</p>\n<p>The result of  read \"INTER\"  has two TFree's, but no TVar's.  Consequently, <br>\nterm_tvars returns an empty list.  Use<br>\n  term_tfrees : Term.term -&gt; (string * Term.sort) list<br>\nto obtain a list with all TFree's in a term.  See Pure/term.ML for further <br>\ndetails.</p>\n<p>Best regards,<br>\nTjark</p>",
        "id": 293896503,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660742873
    }
]