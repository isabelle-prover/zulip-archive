[
    {
        "content": "<p>From: Michael Norrish &lt;<a href=\"mailto:Michael.Norrish@nicta.com.au\">Michael.Norrish@nicta.com.au</a>&gt;<br>\nUsing the repository version of Isabelle, and working in HOL, I find I<br>\ncan't write</p>\n<p>datatype 'a atyp_tag = aword \"'a itself\" | aptr_tt</p>\n<p>It gives me the strangest error too.   If I write \"option\" instead of<br>\n\"itself\" it works.  If I write \"foo\" instead of \"itself\" it gives me<br>\nan error because foo is not a recognised constructor.   But with<br>\n\"itself\", I get </p>\n<p>*** Illegal type for constant \"op =\" :: 'a itself =&gt; 'a itself =&gt; bool<br>\n*** At command \"datatype\".</p>\n<p>Should my declaration work?</p>\n<p>Michael.</p>",
        "id": 293904965,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660745682
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe error is not as strange as it seems if your ask the type-inference <br>\nabout this situation:</p>\n<p>term \"(x::'a itself) = x\"</p>\n<p>*** Type unification failed: No way to get itself :: type<br>\n  *** Type error in application: Incompatible operand type</p>\n<hr>\n<p>*** Operator:  op = :: ??'a =&gt; ??'a =&gt; bool<br>\n  *** Operand:   x :: 'a itself</p>\n<p>Which says that itself is not a HOL type.  It can be made one by issueing <br>\nan (axiomatic) arity declaration.</p>\n<p>Anyway, what is the motivation for using 'a itself within a datatype? Note<br>\nthat the following version is already polymorphic in the same sense as 'a<br>\nitself would make it:</p>\n<p>datatype 'a atyp_tag = aword | aptr_tt<br>\n  term \"aword :: bool atyp_tag\"<br>\n  term \"aword :: nat atyp_tag\"<br>\n  term \"aword :: 'a list atyp_tag\"</p>\n<p>Incidently, aptr_tt will depend on the type argument in the very same<br>\nmanner!  There is no way to hide this dependency, which would essentially<br>\nbe an existential type.</p>\n<p>Makarius</p>",
        "id": 293904993,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660745690
    }
]