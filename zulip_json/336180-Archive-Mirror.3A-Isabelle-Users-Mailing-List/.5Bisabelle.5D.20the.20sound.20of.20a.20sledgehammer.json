[
    {
        "content": "<p>From: John Wickerson &lt;<a href=\"mailto:jpw48@cam.ac.uk\">jpw48@cam.ac.uk</a>&gt;<br>\nDear Isabelle,</p>\n<p>Following on from a point Tobias made a while ago, that ...</p>\n<blockquote>\n<p>jedit ... forces you to wait until sledgehammer has returned before you can scroll around - otherwise s/h is interrupted and restarts</p>\n</blockquote>\n<p>... can I suggest a new feature: that sledgehammer gives some sort of audible feedback? Because I can't do anything until the sledgehammer is finished, I usually type \"sledgehammer\", then go and browse the internet or look out of my window for a minute or so, then come back and see if it worked. So, I think it would be nice if sledgehammer made some sort of noise to tell me when it has succeeded or timed-out.</p>\n<p>John</p>",
        "id": 294233848,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660903818
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThe JVM might support sound and more, but I don't know how it works out in <br>\npractice.  JavaFX might be another starting point for multi-media etc.</p>\n<p>I am myself not as ambitious right now. For Isabelle2013 I have dared to <br>\nuse pupup windows with a little bit of focus change, and it caused a lot <br>\nof trouble that is not fully settled yet (e.g. with strange Linux window <br>\nmanagers).</p>\n<p>Generally note that the synchronous behaviour of sledgehammer in <br>\nIsabelle/jEdit is accidental.  The documement model is meant to be as <br>\nasynchronous and parallel as feasible, so you don't wait in the first <br>\nplace.  Having 5 sledgehammers in parallel would also cause a lot of noise <br>\nif they would produce audible feedback.</p>\n<p>I had already sketched an approach to integrate \"asynchronous agents\" <br>\nnatively into the document model around 2009, but got distracted by <br>\nendless other problems, like maintaining Proof General at the same time, <br>\npeople asking for imitation of Proof General features in Isabelle/jEdit, <br>\nOracle and Apple fighting each other etc.</p>\n<p>After stopping Proof General maintenance in October 2011, progress with <br>\nIsabelle/jEdit has become much faster.  And I hope to have a chance to <br>\nrevisit the old \"asynchronous agents\" idea soon, if there are not again <br>\nall these distractions and complaints about things changing.</p>\n<p>Makarius</p>",
        "id": 294233856,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660903824
    },
    {
        "content": "<p>From: Lawrence Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nI certainly hope instead to see a restoration of one of sledgehammer's key advantages, namely that it ran in the background so that you could indeed continue to work on your proof. This was one of its design goals from the very beginning.</p>\n<p>The entire internal architecture supports this background execution, so it should be possible.</p>\n<p>Larry Paulson</p>",
        "id": 294233879,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660903837
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nWhich version of the architecture do you mean?  Fabian Immler and myself <br>\nrewrote most of it from scratch in 2008, to make it work without Unix <br>\nprocess fork, and thus on Cygwin for the first time.  Later Jasmin also <br>\nrewrote it again.</p>\n<p>All of that is for the TTY loop, though.  It has to be re-integrated into <br>\nthe native Isabelle document model, and this is where I am stuck for <br>\nseveral years for no particular technical reasons, just social ones.</p>\n<p>Makarius</p>",
        "id": 294233899,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660903849
    }
]