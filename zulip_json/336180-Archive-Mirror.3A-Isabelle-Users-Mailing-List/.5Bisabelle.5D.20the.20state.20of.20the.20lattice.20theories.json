[
    {
        "content": "<p>From: Peter Gammie &lt;<a href=\"mailto:peteg42@gmail.com\">peteg42@gmail.com</a>&gt;<br>\nHello,</p>\n<p>Recently I've been in need of a theory of complete lattices.</p>\n<p>There are two on offer:</p>\n<ul>\n<li>HOL/Lattice/*</li>\n</ul>\n<p>This look really polished but uses a type class hierarchy distinct from the rest of the HOL image.</p>\n<p>It includes a type for dual orders, which I need.</p>\n<ul>\n<li>HOL/Complete_Lattice.thy and it's friend HOL/Inductive.thy</li>\n</ul>\n<p>These use the standard HOL type classes. There are lots of proofs of dual results but no \"dual\" type constructor. Also the syntax for lattices gets nuked at the end of the development.</p>\n<p>In both cases there is no support for product lattices, which is straightforward to add.</p>\n<p>I am sure there are more differences than just these.</p>\n<p>I also note that there is another definition of partial orders (etc) in HOLCF, and probably elsewhere.</p>\n<p>Has there been enough exploration of this design space such that the one true order and lattice theory is waiting to spring forth?</p>\n<p>More generally, is there (or should there be) a bug/feature/wishlist tracker for Isabelle for these sorts of things? It might help reduce parallel developments, or least clarify what their relative strengths are.</p>\n<p>cheers<br>\npeter</p>",
        "id": 294139828,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845476
    },
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:brianh@cs.pdx.edu\">brianh@cs.pdx.edu</a>&gt;<br>\nWhy don't you just start one yourself? I don't think it matters too<br>\nmuch who hosts it, as long as we can get enough people use it. I would<br>\ndefinitely use it.</p>\n<ul>\n<li>Brian</li>\n</ul>",
        "id": 294139943,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845506
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Peter,</p>\n<p>first of all, HOL-Lattice is more an example than a library.  I would<br>\nguess that the lattice in HOL-Algebra is what you want to start an.  The<br>\norder development in HOLCF is traditionally something specific apart.</p>\n<blockquote>\n<p>Has there been enough exploration of this design space such that the one true order and lattice theory is waiting to spring forth?</p>\n</blockquote>\n<p>Well, there <em>has</em> been a lots of effort to reduce the number of lattice<br>\ndevelopments to effectively two.  For the background, I quote here from<br>\nan e-mail from isabelle-dev:</p>\n<blockquote>\n<p>a few years<br>\nago, around 2006, when I entered this type class adventure in more deep,<br>\nI came to the conclusion that it is usually better to have<br>\n»constructive« type classes, e.g. if we specify a semilattice as type<br>\nclass, we don't assume »there exists a inf such that …« but we add an<br>\nexplicit parameter »inf« which a corresponding set of properties.</p>\n<p>Otherwise we would define »inf« with »THE x. …«, and this means that for<br>\nparticular instances of lattices (sets, nats, …) you have to derive<br>\ntype-specific primitive rules (e.g. inf on 0/Suc representation, inf on<br>\n{}/insert representation) manually starting with a »THE x. …«<br>\ndefinition.  In practice, it is much more straightforward to define inf<br>\non particular types directly and then prove that this instance conforms<br>\nto its axiomatic specification.  As a side effect, you get reasonable<br>\ncode equations, something which can hardly be achieved if inf would be a<br>\ngeneric polymorphic operation rather than a class parameter.</p>\n<p>Of course, these constructive type classes are more specific than the<br>\nmathematical concept they represent, but for meta-theory a<br>\nrecord/locale-based approach with explicit carrier sets as in<br>\nHOL-Algebra is much more feasible anyway.  But see also the funny lemma<br>\n<a href=\"http://isabelle.in.tum.de/repos/isabelle/file/7270ae921cf2/src/HOL/Lattices.thy#l447\">http://isabelle.in.tum.de/repos/isabelle/file/7270ae921cf2/src/HOL/Lattices.thy#l447</a><br>\nwhich shows how even the contructive type classes are able to talk about<br>\nuniqueness.</p>\n</blockquote>\n<p>Cheers,<br>\n    Florian</p>\n<p>-- </p>\n<p>PGP available:<br>\n<a href=\"http://www.haftmann-online.de/florian/florian_at_haftmann_online_de\">http://www.haftmann-online.de/florian/florian_at_haftmann_online_de</a></p>\n<p>-- </p>\n<p>Home:<br>\n<a href=\"http://www.in.tum.de/~haftmann\">http://www.in.tum.de/~haftmann</a></p>\n<p>PGP available:<br>\n<a href=\"http://home.informatik.tu-muenchen.de/haftmann/pgp/florian_haftmann_at_informatik_tu_muenchen_de\">http://home.informatik.tu-muenchen.de/haftmann/pgp/florian_haftmann_at_informatik_tu_muenchen_de</a><br>\n<a href=\"/user_uploads/14278/PLSmDBWLo843DZXgugT_Iig0/signature.asc\">signature.asc</a></p>",
        "id": 294140070,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845544
    },
    {
        "content": "<p>From: Peter Gammie &lt;<a href=\"mailto:peteg42@gmail.com\">peteg42@gmail.com</a>&gt;<br>\nFlorian,</p>\n<p>On 29/07/2011, at 3:58 PM, Florian Haftmann wrote:</p>\n<blockquote>\n<p>first of all, HOL-Lattice is more an example than a library.  I would<br>\nguess that the lattice in HOL-Algebra is what you want to start an.</p>\n</blockquote>\n<p>OK. This being the case, could (/should) it be moved from the top-level, to e.g. HOL/Library/ or ex/, or maybe Proofs/?</p>\n<p>On a related note, HOL/Library/ is a zoo. Would it be reasonable to introduce more structure there, ala Haskell's hierarchical libraries? How about the stuff in the top-level HOL/ directory?</p>\n<blockquote>\n<p>The order development in HOLCF is traditionally something specific apart.</p>\n</blockquote>\n<p>Indeed it was an entirely separate Isabelle logic (built on top of HOL), but Brian's recent work has made HOLCF a HOL library. It provides convenient ways of making recursive definitions over PCPOs that strike me as useful for doing the same thing over complete lattices.</p>\n<blockquote>\n<blockquote>\n<p>Has there been enough exploration of this design space such that the one true order and lattice theory is waiting to spring forth?</p>\n</blockquote>\n<p>Well, there <em>has</em> been a lots of effort to reduce the number of lattice<br>\ndevelopments to effectively two.  For the background, I quote here from<br>\nan e-mail from isabelle-dev:</p>\n<p>&lt;...&gt;</p>\n</blockquote>\n<p>Thanks for that. I am using the lattice theory in HOL/ (Complete_Lattice and friends) which is quite pleasant.</p>\n<p>cheers<br>\npeter</p>",
        "id": 294140147,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845571
    },
    {
        "content": "<p>From: Alexander Krauss &lt;<a href=\"mailto:krauss@in.tum.de\">krauss@in.tum.de</a>&gt;<br>\nSee also this thread on isabelle-dev from 2009:</p>\n<p><a href=\"http://thread.gmane.org/gmane.science.mathematics.logic.isabelle.devel/793\">http://thread.gmane.org/gmane.science.mathematics.logic.isabelle.devel/793</a></p>\n<p>We do indeed have a number of long-standing issues, which may be worth<br>\ndocumenting more formally, to make it easier for people to learn about <br>\nthe deeper reasons behind them. But this won't make them go away sooner, <br>\nas most of them are due to conceptual problems in the interactions of <br>\ndifferent parts of the system. As a consequence, the \"report -&gt; analyze <br>\n-&gt; fix\" cycle often takes many years.</p>\n<p>btw: The original claim, that a tracker would help reduce parallel <br>\ndevelopments is unclear to me.</p>\n<p>Alex</p>",
        "id": 294140184,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845587
    },
    {
        "content": "<p>From: Florian Haftmann &lt;<a href=\"mailto:florian.haftmann@informatik.tu-muenchen.de\">florian.haftmann@informatik.tu-muenchen.de</a>&gt;<br>\nHi Peter,</p>\n<blockquote>\n<p>OK. This being the case, could (/should) it be moved from the top-level, to e.g. HOL/Library/ or ex/, or maybe Proofs/?</p>\n</blockquote>\n<p>here there are two misunderstandings mixed together:</p>\n<p>a) Basically, everything inside HOL/ can be considered a library as long<br>\nit is a suitable development to build upon, be it HOL-Algebra or<br>\nHOL-Imperative_HOL.  Typically the developer of a (let's call it)<br>\nextension is able to tell you whether it can suit your purpose.</p>\n<p>b) Proofs/ is not a directory, it is a particular image of the HOL<br>\nsession run with proof terms.</p>\n<blockquote>\n<p>On a related note, HOL/Library/ is a zoo. Would it be reasonable to<br>\nintroduce more structure there, ala Haskell's hierarchical libraries?</p>\n</blockquote>\n<p>It would surely, but we have no hierarchical theory name space (yet).</p>\n<blockquote>\n<p>Indeed it was an entirely separate Isabelle logic (built on top of HOL), but Brian's recent work has made HOLCF a HOL library. It provides convenient ways of making recursive definitions over PCPOs that strike me as useful for doing the same thing over complete lattices.</p>\n</blockquote>\n<p>I dimly remember that once Brian and I discussed whether some ordering<br>\nstuff could be shared here, but AFAIR the major obstacle was that HOL<br>\norderings have an explicit strict part &lt;, which seems to be inconvenient<br>\nfor HOLCF.</p>\n<p>Hope this helps,<br>\n    Florian<br>\n<a href=\"/user_uploads/14278/4pUGF7StWDbZwGDUL_Ik6qvp/signature.asc\">signature.asc</a></p>",
        "id": 294142261,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660846261
    }
]