[
    {
        "content": "<p>From: Jeremy Dawson &lt;<a href=\"mailto:Jeremy.Dawson@rsise.anu.edu.au\">Jeremy.Dawson@rsise.anu.edu.au</a>&gt;<br>\nI've just donwloaded a new development version of Isabelle and I find<br>\nthat thms_containing no longer exists.</p>\n<p>I've looked at the NEWS and find:</p>\n<ul>\n<li>Command 'thms_containing' has been discontinued in favour of<br>\n'find_theorems'; INCOMPATIBILITY.</li>\n</ul>\n<p>The trouble is, 'find_theorems' doesn't seem to exist either.<br>\nWell, actually, its features are extolled at such length that<br>\nI assume it exists - but how do I use it?<br>\nIt's not mentioned in the reference manual (which, incidentally,<br>\nstill shows  thms_containing)</p>\n<p>Jeremy</p>",
        "id": 293899805,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660744001
    },
    {
        "content": "<p>From: Gerwin Klein &lt;<a href=\"mailto:gerwin.klein@nicta.com.au\">gerwin.klein@nicta.com.au</a>&gt;<br>\nOn Wednesday 22 February 2006 10:47, Jeremy Dawson wrote:</p>\n<blockquote>\n<ul>\n<li>Command 'thms_containing' has been discontinued in favour of<br>\n'find_theorems'; INCOMPATIBILITY.</li>\n</ul>\n<p>The trouble is, 'find_theorems' doesn't seem to exist either.</p>\n</blockquote>\n<p>find_theorems is a user-level Isar command. It is explained in the Isar <br>\nreference manual.</p>\n<blockquote>\n<p>Well, actually, its features are extolled at such length that<br>\nI assume it exists - but how do I use it?</p>\n</blockquote>\n<p>I assume you want to use it from the ML level. You can find it in <br>\nPure/Isar/find_theorems.ML, usage corresponds closely to the Isar level <br>\ndescription, although it is not actually thought to be used directly from <br>\nthe ML level (but it's possible, of course).</p>\n<blockquote>\n<p>It's not mentioned in the reference manual (which, incidentally,<br>\nstill shows  thms_containing)</p>\n</blockquote>\n<p>The reference manual is kept up to date for releases, it usually lags behind <br>\nfor the development version.</p>\n<p>Cheers,<br>\nGerwin</p>",
        "id": 293899811,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660744002
    },
    {
        "content": "<p>From: Jeremy Dawson &lt;<a href=\"mailto:jeremy@rsise.anu.edu.au\">jeremy@rsise.anu.edu.au</a>&gt;<br>\nThis function seems to have disappeared form a very recent development <br>\nversion of Isabelle.  Or, rather, it seems it recently changed its name <br>\nto thms_containing_consts, since I apparently changed my own code <br>\naccordingly, but now it has disappeared completely.</p>\n<p>What has happened to it / what other function has the same or similar <br>\nfunctionality?</p>\n<p>regards,</p>\n<p>Jeremy</p>",
        "id": 294059420,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660823016
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nThis ancient way of indexing facts was both very slow to build, and in <br>\nfact unused in the past few years.  Facts are now stored in a plain <br>\nFacts.T table; the following example shows how the 'find_theorems' command <br>\nretrieves facts from the context:</p>\n<p>fun all_facts_of ctxt =<br>\n  maps Facts.selections<br>\n   (Facts.dest (PureThy.all_facts_of (ProofContext.theory_of ctxt)) @<br>\n    Facts.dest (ProofContext.facts_of ctxt));</p>\n<p>The result is just a plain list, without any special indexing.</p>\n<p>If you need special-purpose indexing you can use Theory.at_begin or <br>\nTheory.at_end hooks to maintain a derived data structure, but this is not <br>\ncompletely trivial.</p>\n<p>Makarius</p>",
        "id": 294059434,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660823021
    }
]