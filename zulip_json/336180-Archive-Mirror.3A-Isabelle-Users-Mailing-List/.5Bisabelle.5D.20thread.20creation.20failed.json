[
    {
        "content": "<p>From: Andrei Popescu &lt;<a href=\"mailto:uuomul@yahoo.com\">uuomul@yahoo.com</a>&gt;<br>\nHello, </p>\n<p>I have a fairly large Isabelle development and I am trying to create html and <br>\nlatex documents based on it.  </p>\n<p>However, attempting to run the session results (after running for a while) in <br>\nthe following error: \"thread creation failed\".  </p>\n<p>I also attach the log file produced.  Presumably the problem is caused by the <br>\nsize of the development. (?)   </p>\n<p>Thank you in advance for any possible advice on how to work around this.  </p>\n<p>(Here is some more info: I am working with Cygwin (with the packages recommended <br>\nfrom the Isabelle site) </p>\n<p>under Windows 7, <br>\nwith a processor Intel(R) Core(TM) i5 CPU M540 @ 2.53GHz<br>\nand RAM 4GB (2.43 GB usable).</p>\n<p>I have tried with both Isabelle-2009-1 and Isabelle-2009-2.  Occasionally<br>\nI also get this error when working interactively in Isabelle in emacs (just in <br>\nthe middle of some theory, when </p>\n<p>moving to a new definition or lemma), but interactively I am usually able to run <br>\nall the scripts.)</p>\n<p>Best regards, <br>\n   Andrei<br>\n<a href=\"/user_uploads/14278/QoYnUNo7mLa7ijvycjTT-nsc/HOL-Lambda\">HOL-Lambda</a></p>",
        "id": 294115023,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838015
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Sat, 21 Aug 2010, Andrei Popescu wrote:</p>\n<blockquote>\n<p>I have a fairly large Isabelle development and I am trying to create <br>\nhtml and latex documents based on it. </p>\n<p>However, attempting to run the session results (after running for a <br>\nwhile) in the following error: \"thread creation failed\". </p>\n<p>I also attach the log file produced.  Presumably the problem is caused <br>\nby the size of the development. (?)   </p>\n</blockquote>\n<p>Yes, this is just a typical out-of-memory problem.  You can try something <br>\nlike this:</p>\n<p>* Enlarge Cygwin heap size according to<br>\n<a href=\"http://cygwin.com/cygwin-ug-net/setup-maxmem.html\">http://cygwin.com/cygwin-ug-net/setup-maxmem.html</a> -- 1.0 .. 1.5 GB<br>\n     usually works, but I have hardly ever got beyond that on Windows.</p>\n<p>* Compactify the Poly/ML while running, i.e. via invoking<br>\n     share_common_data() in your ROOT.ML after loading some of the<br>\n     theories, and then continue with more of them.</p>\n<blockquote>\n<p>under Windows 7, with a processor Intel(R) Core(TM) i5 CPU M540 @ <br>\n2.53GHz and RAM 4GB (2.43 GB usable).</p>\n</blockquote>\n<p>This looks like fairly nice hardware for Linux / x86_64.  Unlike Windows, <br>\n64bit mode really works for Linux -- you will be able to use all of your <br>\nphysical memory.  Nonetheless, the Poly/ML binaries should be those for <br>\nx86 for best memory utilization in this scenario.</p>\n<p>Makarius</p>",
        "id": 294115036,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838019
    },
    {
        "content": "<p>From: Andrei Popescu &lt;<a href=\"mailto:uuomul@yahoo.com\">uuomul@yahoo.com</a>&gt;<br>\nThank you very much, I'll try these.</p>\n<p>Actually, what would clearly solve my problem in an almost platform-independent <br>\nway would be the ability </p>\n<p>to remove completely (i.e., just delete from everywhere, including all the <br>\ndatabases, etc.) some </p>\n<p>of the theorems, <em>even if remaining theorems are based on them</em>.  E.g., all of <br>\nthe theorems </p>\n<p>from a certain intermediate theory.  Note that such an operation would be <br>\nacceptable from a foundational / certification point of </p>\n<p>view, just as acceptable as not storing proof terms, and would be IMO highly <br>\nappreciated by users who write </p>\n<p>their Isabelle development employing several layers, where each layer offers an <br>\ninterface independent  from previous layers.  </p>\n<p>(I'll stop here from making this case though, since maybe such a feature is <br>\nalready there and I don't know if it.)</p>\n<p>Best regards, <br>\n   Andrei </p>\n<hr>\n<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nTo: Andrei Popescu &lt;<a href=\"mailto:uuomul@yahoo.com\">uuomul@yahoo.com</a>&gt;<br>\nCc: <a href=\"mailto:cl-isabelle-users@lists.cam.ac.uk\">cl-isabelle-users@lists.cam.ac.uk</a><br>\nSent: Mon, August 23, 2010 4:52:29 AM<br>\nSubject: Re: [isabelle] thread creation failed</p>\n<p>On Sat, 21 Aug 2010, Andrei Popescu wrote:</p>\n<blockquote>\n<p>I have a fairly large Isabelle development and I am trying to create html and <br>\nlatex documents based on it. </p>\n<p>However, attempting to run the session results (after running for a while) in <br>\nthe following error: \"thread creation failed\". </p>\n<p>I also attach the log file produced.  Presumably the problem is caused by the <br>\nsize of the development. (?)   </p>\n</blockquote>\n<p>Yes, this is just a typical out-of-memory problem.  You can try something like <br>\nthis:</p>\n<p>* Enlarge Cygwin heap size according to<br>\n<a href=\"http://cygwin.com/cygwin-ug-net/setup-maxmem.html\">http://cygwin.com/cygwin-ug-net/setup-maxmem.html</a> -- 1.0 .. 1.5 GB<br>\n    usually works, but I have hardly ever got beyond that on Windows.</p>\n<p>* Compactify the Poly/ML while running, i.e. via invoking<br>\n    share_common_data() in your ROOT.ML after loading some of the<br>\n    theories, and then continue with more of them.</p>\n<blockquote>\n<p>under Windows 7, with a processor Intel(R) Core(TM) i5 CPU M540 @ 2.53GHz and <br>\nRAM 4GB (2.43 GB usable).</p>\n</blockquote>\n<p>This looks like fairly nice hardware for Linux / x86_64.  Unlike Windows, 64bit <br>\nmode really works for Linux -- you will be able to use all of your physical <br>\nmemory.  Nonetheless, the Poly/ML binaries should be those for x86 for best <br>\nmemory utilization in this scenario.</p>\n<p>Makarius</p>",
        "id": 294115044,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838024
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Mon, 23 Aug 2010, Andrei Popescu wrote:</p>\n<blockquote>\n<p>Thank you very much, I'll try these.</p>\n</blockquote>\n<p>One more thing: you can disable multi-threaded processing, which is on by <br>\ndefault.  So something like -M1 in usedir options should conserve some <br>\nmemory.</p>\n<blockquote>\n<p>Actually, what would clearly solve my problem in an almost <br>\nplatform-independent way would be the ability to remove completely <br>\n(i.e., just delete from everywhere, including all the databases, etc.) <br>\nsome</p>\n</blockquote>\n<p>Such workarounds to save memory remind of of the ancient days of 8bit or <br>\n16bit machines.  At some point MS was very prood to present NT as \"32 bit\" <br>\noperating system.  Now that technology is already a bottle neck again, and <br>\nthe move to full 64 bit address happening right now.</p>\n<p>One problem we face here is that Cygwin is for 32 bit only, and will stay <br>\nso for quite some time (like most other things on the Windows platform).</p>\n<p>Makarius</p>",
        "id": 294115061,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660838031
    }
]