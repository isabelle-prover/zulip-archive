[
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nAm 19/10/2012 03:13, schrieb Christian Sternagel:</p>\n<blockquote>\n<blockquote>\n<p>Note that the abbreviations \"thus == then show\" and \"hence == then have\"<br>\nare merely historical accidents.  They require fewer bytes in memory,<br>\nbut more typing by the user and more explanations to newcomers.  The<br>\nreason is that the chaining or not chaining for elementary 'show' and<br>\n'have' elements are often changed during the proof development.  And<br>\nthere are further combinators like 'also' and 'moreover' that can be<br>\ncombined with 'have' or 'show', and other goal elements like 'obtain'<br>\nthat can participate in the chaining of facts in the same manner.</p>\n<p>So there is a large combinatorial space of</p>\n<p>(then | from | with | ... | also | finally | moreover | ultimately)<br>\n     (have | show | obtain | interpret ...)</p>\n<p>which is better spelled out as such explicitly, without the somewhat<br>\npointless shortcuts 'hence' and 'thus' getting in the way.<br>\nI figure you thus (sorry) discourage the usage of \"hence\" and \"thus\". I have<br>\noften wondered myself whether I should use those idioms or not. Currently I do,<br>\nbut especially your point about \"chaining or not chaining\" is very true and<br>\nhence (sorry again) \"hence\" and \"thus\" almost always cause more typing than they<br>\nsave. I guess it is a reasonable convention to not use them in your proves?</p>\n</blockquote>\n</blockquote>\n<p>Just as reasonable as using them - it's a pro-choice system ;-)</p>\n<p>Tobias</p>\n<blockquote>\n<p>cheers</p>\n<p>chris</p>\n</blockquote>",
        "id": 294225316,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660899676
    }
]