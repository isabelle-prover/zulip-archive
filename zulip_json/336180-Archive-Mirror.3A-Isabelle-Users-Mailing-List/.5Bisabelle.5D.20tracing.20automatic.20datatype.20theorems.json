[
    {
        "content": "<p>From: Buday Gergely &lt;<a href=\"mailto:gbuday@karolyrobert.hu\">gbuday@karolyrobert.hu</a>&gt;<br>\nHi,</p>\n<p>is it possible to see the details of the proof of</p>\n<p>Suc n ≠ 0</p>\n<p>?</p>\n<p>This is an automatic proof so the proof script is not easily available I guess.</p>\n<ul>\n<li>Gergely</li>\n</ul>",
        "id": 294657734,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661168744
    },
    {
        "content": "<p>From: Larry Paulson &lt;<a href=\"mailto:lp15@cam.ac.uk\">lp15@cam.ac.uk</a>&gt;<br>\nThis is virtually an atomic statement, so in effect you are asking for the details of how datatypes are represented internally. This representation has always been complicated, and I think the new system is even more complicated.</p>\n<p>Larry Paulson</p>",
        "id": 294657747,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661168750
    },
    {
        "content": "<p>From: Andrei Popescu &lt;<a href=\"mailto:a.popescu@mdx.ac.uk\">a.popescu@mdx.ac.uk</a>&gt;<br>\nHi Gergely, </p>\n<blockquote>\n<p>Suc n ≠ 0</p>\n</blockquote>\n<p>Indeed, this holds \"by construction.\"  The papers </p>\n<p><a href=\"http://www.eis.mdx.ac.uk/staffpages/andreipopescu/pdf/LICS2012.pdf\">http://www.eis.mdx.ac.uk/staffpages/andreipopescu/pdf/LICS2012.pdf</a> </p>\n<p><a href=\"http://www.eis.mdx.ac.uk/staffpages/andreipopescu/pdf/codat-impl.pdf\">http://www.eis.mdx.ac.uk/staffpages/andreipopescu/pdf/codat-impl.pdf</a></p>\n<p>give details on how the construction is currently performed in Isabelle/HOL. </p>\n<p>That fact is an instance of a general phenomenon: the structural morphism of the initial algebra (a.k.a. the constructor) is injective. </p>\n<p>Best, <br>\n  Andrei</p>",
        "id": 294657759,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661168757
    }
]