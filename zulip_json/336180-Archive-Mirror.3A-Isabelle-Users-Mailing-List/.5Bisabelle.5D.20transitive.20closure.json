[
    {
        "content": "<p>From: Randy Pollack &lt;<a href=\"mailto:rpollack@inf.ed.ac.uk\">rpollack@inf.ed.ac.uk</a>&gt;<br>\nTransitive_Closure.thy defines </p>\n<p>inductive_set<br>\n   trancl :: \"('a × 'a) set =&gt; ('a × 'a) set\"  (\"(_^+)\" [1000] 999)<br>\n   for r :: \"('a × 'a) set\"<br>\n where<br>\n     r_into_trancl [intro, Pure.intro]: \"(a, b) : r ==&gt; (a, b) : r^+\"<br>\n   | trancl_into_trancl [Pure.intro]: \"(a, b) : r^+ ==&gt;<br>\n    (b, c) : r ==&gt; (a, c) : r^+\"</p>\n<p>but this doesn't seem to work right with new style relations, e.g. </p>\n<p>term \"(less :: nat =&gt; nat =&gt; bool)^+\"</p>\n<p>produces a type error.  Is there a transitive closure operator for new<br>\nstyle relations?</p>\n<p>Thanks,<br>\nRandy</p>",
        "id": 294065496,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660825297
    },
    {
        "content": "<p>From: Amine Chaieb &lt;<a href=\"mailto:chaieb@in.tum.de\">chaieb@in.tum.de</a>&gt;<br>\nThe type is not correct -- you need st of type 'a * 'a set. You need to <br>\nuncurry \"less\".</p>\n<p>trancl (split less) should work.</p>\n<p>Amine.</p>\n<p>Randy Pollack wrote:</p>",
        "id": 294065513,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660825303
    },
    {
        "content": "<p>From: Alexander Krauss &lt;<a href=\"mailto:krauss@in.tum.de\">krauss@in.tum.de</a>&gt;</p>\n<blockquote>\n<p>Is there a transitive closure operator for new<br>\nstyle relations?</p>\n</blockquote>\n<p>Yes. The curried versions of these predicates are \"tranclp\", \"rtranclp\" <br>\netc. Syntax: \"^++\", \"^**\"</p>\n<p>Alex</p>",
        "id": 294065527,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660825309
    }
]