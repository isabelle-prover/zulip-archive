[
    {
        "content": "<p>From: Christian Sternagel &lt;<a href=\"mailto:Christian.Sternagel@uibk.ac.at\">Christian.Sternagel@uibk.ac.at</a>&gt;<br>\nAs far as I figured out, it is not possible to<br>\ndefine a translation like</p>\n<hr>\n<p>syntax<br>\n \"_common_rewrite_step\" :: \"['a, 'a, 'a] =&gt; bool\" (\"_ ---&gt; _ &lt;--- _\" 100)</p>\n<p>translations<br>\n \"a ---&gt; c &lt;--- b\" == \"(a,c) : r &amp; (b,c) : r\"</p>\n<hr>\n<p>because internally two rewrite rules are established and<br>\none of it is not left-linear.</p>\n<p>Is there another way to define abbreviations like above?</p>\n<p>mfG</p>\n<p>Christian Sternagel</p>",
        "id": 294041036,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660815294
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Wed, 30 Aug 2006, Christian Sternagel wrote:</p>\n<blockquote>\n<p>As far as I figured out, it is not possible to define a translation like</p>\n</blockquote>\n<blockquote>\n<p>translations<br>\n \"a ---&gt; c &lt;--- b\" == \"(a,c) : r &amp; (b,c) : r\"</p>\n<hr>\n</blockquote>\n<blockquote>\n<p>because internally two rewrite rules are established and one of it is <br>\nnot left-linear.</p>\n</blockquote>\n<p>You can omit the second one by using =&gt; instead of == above.  This will at <br>\nleast provide the input syntax.  The other direction can be done by <br>\nlow-level ML translations (cf. parse_translation), although I do not <br>\nrecommend this.</p>\n<blockquote>\n<p>Is there another way to define abbreviations like above?</p>\n</blockquote>\n<p>In future versions of Isabelle, using 'abbreviation'.</p>\n<p>Makarius</p>",
        "id": 294041051,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660815300
    }
]