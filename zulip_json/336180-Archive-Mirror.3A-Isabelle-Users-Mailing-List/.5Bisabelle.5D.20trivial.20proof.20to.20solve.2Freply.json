[
    {
        "content": "<p>From: Tjark Weber &lt;<a href=\"mailto:tjark.weber@gmx.de\">tjark.weber@gmx.de</a>&gt;<br>\nClint,</p>\n<p>On Friday 12 January 2007 17:44, clefort wrote:</p>\n<blockquote>\n<p>I'm using straight Isar,Isabelle:</p>\n</blockquote>\n<p>Isabelle comes with several object logics, e.g. HOL, FOL, ZF.  (See <br>\n<a href=\"http://isabelle.in.tum.de/logics.html\">http://isabelle.in.tum.de/logics.html</a> for details.)  I was wondering<br>\nwhich one you are using.  In ProofGeneral, you can check \"Isabelle &gt;<br>\nLogics\" (the default is HOL, unless you changed it).</p>\n<blockquote>\n<p>The F,S,HS and EQ are uninterpreted functions.</p>\n<p>I'm attaching a copy of the trivial.thy file. Unfortunately I cannot<br>\nfind a way to copy the goals.</p>\n</blockquote>\n<p>,-----<br>\nlemma  \"\\&lt;forall&gt;x. \\&lt;forall&gt;y.  \\&lt;forall&gt;z. EQ(F(e,c),S(e,c),EQ(e,c))<br>\n                      \\&lt;and&gt; EQ(HS(e,co),F(e,c),S(e,c))<br>\n                             \\&lt;Longrightarrow&gt; \\&lt;forall&gt;x. \\&lt;forall&gt;y.  <br>\n\\&lt;forall&gt;z. EQ(S(e,c),F(e,c),HS(e,c))\"<br>\n`-----</p>\n<p>This lemma is different from the one that you posted earlier.  It parses<br>\nfine now, but note that the bound variables (x, y, z) do not occur in the <br>\nformula at all.</p>\n<p>,-----<br>\napply (rule conjunct1)<br>\napply (rule conjunct2)<br>\napply (rule conjE)<br>\napply (auto)<br>\n`-----</p>\n<p>The first three of these apply statements are useful only for goals that <br>\ncontain conjunctions.  For your lemma, they are useless at best.  Just<br>\nleave them away.</p>\n<p>\"apply auto\" discards the redundant quantifiers to produce the following <br>\nsubgoal:</p>\n<p>\\&lt;lbrakk&gt;EQ (F (e, c), S (e, c), EQ (e, c));<br>\n     EQ (HS (e, co), F (e, c), S (e, c))\\&lt;rbrakk&gt;<br>\n    \\&lt;Longrightarrow&gt; EQ (S (e, c), F (e, c), HS (e, c))</p>\n<p>This subgoal is not provable if you have no additional information about the <br>\nfunctions involved.  Isabelle can even give you an interpretation that makes<br>\nthe formula false: try \"Isabelle &gt; Commands &gt; refute\" in ProofGeneral.</p>\n<p>Best,<br>\nTjark</p>",
        "id": 294045112,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660816993
    }
]