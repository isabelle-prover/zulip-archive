[
    {
        "content": "<p>From: Christian Sternagel &lt;<a href=\"mailto:c.sternagel@gmail.com\">c.sternagel@gmail.com</a>&gt;<br>\nDear all,</p>\n<p>is it possible to use type classes without any class parameters (i.e., <br>\nfixed constants)?</p>\n<p>For example, something like</p>\n<p>class infinite =<br>\n     assumes infinite: \"infinite (UNIV::'a set)\"</p>\n<p>but then the resulting type of the class predicate is</p>\n<p>term class.infinite<br>\n     :: \"'a itself â‡’ bool</p>\n<p>I'm not sure whether this would make sense at all. My initial thought <br>\nwas to replace assumptions like</p>\n<p>assumes \"infinite (UNIV :: 'a)\"</p>\n<p>by \"'a :: infinite\" in appropriate places.</p>\n<p>cheers</p>\n<p>chris</p>",
        "id": 294243889,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908133
    },
    {
        "content": "<p>From: Brian Huffman &lt;<a href=\"mailto:huffman.brian.c@gmail.com\">huffman.brian.c@gmail.com</a>&gt;<br>\nOn Jul 25, 2013 9:30 AM, \"Christian Sternagel\" &lt;<a href=\"mailto:c.sternagel@gmail.com\">c.sternagel@gmail.com</a>&gt;<br>\nwrote:</p>\n<blockquote>\n<p>Dear all,</p>\n<p>is it possible to use type classes without any class parameters (i.e.,<br>\nfixed constants)?</p>\n<p>For example, something like</p>\n<p>class infinite =<br>\n    assumes infinite: \"infinite (UNIV::'a set)\"</p>\n</blockquote>\n<p>Yes, that is certainly possible. See for example class \"finite\" from the<br>\nstandard libraries.</p>\n<p>The problem with a type class for infinite types is that you can't quite<br>\ndefine the instances you want. For example, 'a*'b is infinite if either 'a<br>\nOR 'b is infinite, but you can't express this with an instance declaration.</p>\n<ul>\n<li>Brian</li>\n</ul>",
        "id": 294243916,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660908146
    }
]