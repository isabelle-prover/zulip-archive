[
    {
        "content": "<p>From: Peter Sewell &lt;<a href=\"mailto:Peter.Sewell@cl.cam.ac.uk\">Peter.Sewell@cl.cam.ac.uk</a>&gt;<br>\nDear Isabelle,</p>\n<p>How is it possible to introduce typeset syntax with compound<br>\nsubscripts?  For example, given an indexed family \"tos\" of relations,<br>\nwhere I currently write </p>\n<p>(t1,t2) \\&lt;in&gt; tos n          </p>\n<p>I'd like to write something that will be typeset roughly as the LaTeX </p>\n<p>t1 \\leq_{tos n} t2</p>\n<p>(Here tos is a bound variable, not something introduced by a consts, if that makes any difference.)</p>\n<p>My attempts have all failed miserably (except when the subscript is a<br>\nsingle-character identifier), trying various combinations of Isabelle<br>\nsyntax and translations declarations, definitions of \\isactrlfoo's,<br>\nand \\&lt;^bsub&gt;...\\&lt;^esub&gt;.</p>\n<p>many thanks,<br>\nPeter</p>\n<p>example:</p>\n<p>types t = \"string\"<br>\ntypes indexed_orders = \"nat \\&lt;Rightarrow&gt; (t*t) set\"</p>\n<p>constdefs<br>\nmytest :: \"indexed_orders \\&lt;Rightarrow&gt; nat \\&lt;Rightarrow&gt; t \\&lt;Rightarrow&gt; t \\&lt;Rightarrow&gt; bool\"</p>\n<p>\"mytest tos n t1 t2 == (t1,t2) \\&lt;in&gt; tos n\"</p>",
        "id": 294056081,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660821629
    },
    {
        "content": "<p>From: Stefan Berghofer &lt;<a href=\"mailto:berghofe@in.tum.de\">berghofe@in.tum.de</a>&gt;<br>\nPeter Sewell wrote:<br>\nDear Peter,</p>\n<p>this could be achieved by introducing an abbreviation mapping</p>\n<p>x \\&lt;le&gt;\\&lt;^bsub&gt;R\\&lt;^esub&gt; y</p>\n<p>to</p>\n<p>(x, y) \\&lt;in&gt; R</p>\n<p>as shown in the attached theory file. Note that this abbreviation will<br>\naffect all terms of the form \"(x, y) \\&lt;in&gt; R\", which for example means<br>\nthat also the intoduction rules for the transitive closure are printed<br>\nusing this syntax.</p>\n<p>Greetings,<br>\nStefan<br>\n<a href=\"/user_uploads/14278/O6p9GxpfEkurDJKSQEFa1Wg6/Peter.thy\">Peter.thy</a></p>",
        "id": 294056535,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660821783
    },
    {
        "content": "<p>From: Peter Sewell &lt;<a href=\"mailto:Peter.Sewell@cl.cam.ac.uk\">Peter.Sewell@cl.cam.ac.uk</a>&gt;<br>\nMany thanks!</p>\n<p>Part of my confusion was the difference between what happens when<br>\nIsabelle typesets constdefs at the top level of a .thy file, and what<br>\nhappens when it pretty-prints quoted theorems, as in your @{thm<br>\n[display] mytest_def [no_vars]}.  At present I'm using the former, to<br>\nget some control over the layout of big formulas, and to include<br>\ncomments in them.  Am I right in (now) guessing that to get the intended<br>\ntypesetting I therefore have to use the verbose syntax explicitly,<br>\ne.g. something like this:</p>\n<p>constdefs<br>\nmytest3 :: \"indexed_orders \\&lt;Rightarrow&gt; nat \\&lt;Rightarrow&gt; t \\&lt;Rightarrow&gt; t \\&lt;Rightarrow&gt; bool\"<br>\n\"mytest3 tos n t1 t2 ==  (t1 \\&lt;le&gt;\\&lt;^bsub&gt; tos n \\&lt;^esub&gt; t2)\"</p>\n<p>ie, there's no way to have the abbreviation automatically applied?</p>\n<p>ta,<br>\nPeter</p>",
        "id": 294056545,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660821788
    }
]