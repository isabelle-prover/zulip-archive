[
    {
        "content": "<p>From: Viorel Preoteasa &lt;<a href=\"mailto:viorel.preoteasa@abo.fi\">viorel.preoteasa@abo.fi</a>&gt;<br>\nHello,</p>\n<p>I have the following theory fragment:</p>\n<p>theory test imports Main<br>\nbegin</p>\n<p>class test = lattice<br>\nbegin</p>\n<p>theorem test:<br>\n   \"f x  = (x::'a) ==&gt; mono f ==&gt; f x = x\"</p>\n<p>When processing the theorem test I get the following error:</p>\n<p>*** Type unification failed: Variable 'a::type not of sort order</p>\n<p>The predicate mono is defined in class order and class lattice<br>\nextends the class order.</p>\n<p>Best regards,</p>\n<p>Viorel Preoteasa</p>",
        "id": 294135850,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660844297
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@kit.edu\">andreas.lochbihler@kit.edu</a>&gt;<br>\nDear Viorel,</p>\n<p>this is how the type error arises:<br>\nIn the context order, mono has the type \"'a :: type =&gt; 'b :: order =&gt; bool\", <br>\nwhich is specified in the definition of mono in theory Orderings. The sort <br>\nconstraint order on 'b is necessary such that the order operation are availabe <br>\non the image type.</p>\n<p>In your theorem test, you are in the locale context test, which is a sublocale <br>\nof order, i.e. mono has the polymorphic type \"'a :: type =&gt; ?'b :: order =&gt; <br>\nbool\" where ?'b is free and 'a is bound.<br>\nThe function f has type \"'a :: type =&gt; 'a\", i.e., mono's type must be <br>\nspecialized such that ?'b becomes 'a. However, 'a is not known to be of sort <br>\norder, so this gives the type error.</p>\n<p>I know of three approaches to your problem:</p>\n<ol>\n<li>State and prove your theorem test outside the context test, but with explicit <br>\nsort constraints:</li>\n</ol>\n<p>class test = lattice</p>\n<p>theorem test: \"f x  = (x::'a :: test) ==&gt; mono f ==&gt; f x = x\"</p>\n<p>Alternatively, you can use the sort constraint \"order\" instead of \"test\".</p>\n<p>This approach is suitable if</p>\n<ul>\n<li>\n<p>you analogously move all theorems that rely on theorem test out of the context <br>\ntest and add sort constraints where necessary, and</p>\n</li>\n<li>\n<p>you never need to interpret the locale for class test in a context where 'a is <br>\ninstantiated to a type which is not in class test (via the commands sublocale or <br>\ninterpretation).</p>\n</li>\n</ul>\n<ol start=\"2\">\n<li>\n<p>Change the definition of class test such that 'a has the sort constraint <br>\norder. The conditions are similar to 1., but now, everything in context test <br>\nincludes the sort constraint.</p>\n</li>\n<li>\n<p>Give up on type classes and do everything in locales. Then, you will have to <br>\ndefine mono yourself in a locale for order morphisms and setup proof automation <br>\nby yourself. The locale tutorial contains such an example with order <br>\nhomomorphisms. If you base your order morphism locale on the locale \"order\" that<br>\nlives behind the type class \"order\", you get some automation from the type class <br>\n\"order\" for free, but not everything (cf. <br>\n<a href=\"https://lists.cam.ac.uk/mailman/htdig/cl-isabelle-users/2011-February/msg00132.html\">https://lists.cam.ac.uk/mailman/htdig/cl-isabelle-users/2011-February/msg00132.html</a>).<br>\nYou cannot have order morphisms as type class because they would involve <br>\nmultiple type variables, which Isabelle does not support.</p>\n</li>\n</ol>\n<p>Hope this helps,<br>\nAndreas</p>\n<p>Viorel Preoteasa schrieb:</p>",
        "id": 294135871,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660844305
    },
    {
        "content": "<p>From: Andreas Lochbihler &lt;<a href=\"mailto:andreas.lochbihler@kit.edu\">andreas.lochbihler@kit.edu</a>&gt;<br>\nHello Viorel,</p>\n<p>there is no direct way to enforce this. The easiest is to add a trivial <br>\nassumption which introduces the sort constraint, for example:</p>\n<p>class test = lattices +<br>\n   assumes \"(a :: 'a :: order) = a\"</p>\n<p>The class command also accepts the constrains element that locales support, but <br>\nthis seems to be without effect.</p>\n<p>Andreas</p>\n<p>Viorel Preoteasa schrieb:</p>",
        "id": 294135904,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660844317
    }
]