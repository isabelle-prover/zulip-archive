[
    {
        "content": "<p>From: Viorel Preoteasa &lt;<a href=\"mailto:viorel.preoteasa@aalto.fi\">viorel.preoteasa@aalto.fi</a>&gt;<br>\nHello,</p>\n<p>I have created a simproc using Simplifier.make_simproc.<br>\nIf I use it in Simplifier.rewrite, then it works as expected.<br>\nHowever, if I use it within the context of Outer_Syntax.local_theory'<br>\nit does not simplify the term.</p>\n<p>In Isabelle 2015, I created the simproc using simproc_global_i<br>\nand it was working as I expected.</p>\n<p>Attached is a theory that shows this behavior.<br>\nAt the end there is \"thm tt_simp\" that display:</p>\n<p>tt = MyDef 5</p>\n<p>However if the simproc would be applied, then the<br>\nresult should be:</p>\n<p>tt = 6</p>\n<p>Best regards,</p>\n<p>Viorel Preoteasa<br>\n<a href=\"/user_uploads/14278/w83xGeDJxWscspoGo0hdfPQY/simproc_test.thy\">simproc_test.thy</a></p>",
        "id": 294667110,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661172132
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Mon, 22 Feb 2016, Viorel Preoteasa wrote:</p>\n<blockquote>\n<p>I have created a simproc using Simplifier.make_simproc. If I use it in <br>\nSimplifier.rewrite, then it works as expected. However, if I use it <br>\nwithin the context of Outer_Syntax.local_theory' it does not simplify <br>\nthe term.</p>\n</blockquote>\n<p>When such things happen, there is usually something wrong with the <br>\ncontext. We have spent the last 10 years \"localizing\" virtually all <br>\nIsabelle programming interfaces, to make everything work uniformly <br>\naccording to standard context disciplines. These are documented in the <br>\n\"implementation\" manual.</p>\n<blockquote>\n<p>In Isabelle 2015, I created the simproc using simproc_global_i and it <br>\nwas working as I expected.</p>\n</blockquote>\n<p>This indicates that old code has been updated too quickly and <br>\nsuperficially. Changes in Isabelle mean that old and conceptually outdated <br>\nforms are replaced by new and conceptually different forms.</p>\n<p>The relevant bit of documentation is in Isabelle2016/NEWS:</p>\n<ul>\n<li>Simproc programming interfaces have been simplified:<br>\nSimplifier.make_simproc and Simplifier.define_simproc supersede various<br>\nforms of Simplifier.mk_simproc, Simplifier.simproc_global etc. Note that<br>\nterm patterns for the left-hand sides are specified with implicitly<br>\nfixed variables, like top-level theorem statements. INCOMPATIBILITY.</li>\n</ul>\n<p>The provided example is a bit odd in creating the simproc on the spot in a <br>\ncertain context just before use. This can be done theoretically, but needs <br>\nextra attention about the scopes of variables. E.g. it is difficult to <br>\npredict what a blue \"x\" will be in an arbitrary application context. The <br>\nNEWS entry hints at \"implicitly fixed variables, like top-level theorem <br>\nstatements\". Apparently, the \"x\" does not come out as arbitrary in this <br>\nsituation.</p>\n<p>I did not try to figure out why the \"x\" is treated like that, because <br>\ncounting on such behaviour in the middle of a more complex definition is <br>\nfragile context discipline.</p>\n<p>Instead, the simproc should be defined once beforehand, e.g. via <br>\nsimproc_setup, and then used via the @{simproc} antiquotation.</p>\n<p>Makarius</p>",
        "id": 294667147,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661172144
    },
    {
        "content": "<p>From: Viorel Preoteasa &lt;<a href=\"mailto:viorel.preoteasa@aalto.fi\">viorel.preoteasa@aalto.fi</a>&gt;<br>\nThis solved my problem. Thank you.</p>\n<p>Viorel</p>",
        "id": 294667165,
        "sender_full_name": "Email Gateway",
        "timestamp": 1661172150
    }
]