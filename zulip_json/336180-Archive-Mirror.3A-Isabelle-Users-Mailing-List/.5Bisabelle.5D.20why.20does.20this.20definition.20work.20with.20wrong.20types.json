[
    {
        "content": "<p>From: Martin Klebermaß &lt;<a href=\"mailto:martin@klebermass.de\">martin@klebermass.de</a>&gt;<br>\nHello,</p>\n<p>during review of my theorems i found a wrong definition of a set in  <br>\nmy definition.</p>\n<p>For better reading i introduced a syntax for my defined sets.<br>\nIn one case i introduced a wrong definition of the syntax i used a  <br>\nnat list instead of a nat.</p>\n<p>So why does this definition work, because i think it should not work  <br>\n(a nat list is mapped to a nat)</p>\n<p>theory syntaxdef imports Main</p>\n<p>begin</p>\n<p>consts<br>\n   typing  :: \"(nat * nat * nat * nat) set\"<br>\nsyntax<br>\n   \"_typing\"  :: \"[nat,nat,nat list,nat] \\&lt;Rightarrow&gt; bool\" (\"_;_  <br>\n\\&lt;turnstile&gt; _ : _\" [80,80,80,80] 80)<br>\ntranslations<br>\n   \"CT;sEnv \\&lt;turnstile&gt; e : C\" \\&lt;rightleftharpoons&gt; \"(CT,sEnv,e,C)  <br>\n\\&lt;in&gt; typing\"<br>\ninductive typing<br>\nintros<br>\nt_dummy :<br>\n   \"0;1 \\&lt;turnstile&gt; 2 : 3\"</p>\n<p>Es grüßt Sie freundlich/best regards,<br>\n    Martin Klebermaß</p>\n<p>============================<br>\n<a href=\"mailto:martin@klebermass.de\">martin@klebermass.de</a><br>\n============================<br>\nSchweiz:<br>\nTramstr. 107<br>\nCH-5034 Suhr</p>\n<p>Deutschland:<br>\nFuchsbergstr. 11<br>\nD-82223 Eichenau</p>\n<p>Mobil(DE): +49 (0) 176 / 70073282<br>\nTelefon(DE): +49 (0) 8141 / 509040<br>\nMobil(CH): +41 (0) 79 / 7870352<br>\nTelefon(CH): +41 (0) 32 / 5107586</p>\n<p>============================<br>\n<a href=\"/user_uploads/14278/FtnuF1zW6Kqnleg7EPs2dj1Q/smime.p7s\">smime.p7s</a></p>",
        "id": 294045719,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660817200
    },
    {
        "content": "<p>From: Tobias Nipkow &lt;<a href=\"mailto:nipkow@in.tum.de\">nipkow@in.tum.de</a>&gt;<br>\nMartin Klebermaß wrote:<br>\nBecause this is just syntax, Isabelle (more or less, for parsing <br>\nreasons) ignores the precise types you give to \"_typing\". Thus things <br>\nmay parse, but then the type checker would complain if you did actually <br>\nsupply a list.</p>\n<p>Tobias</p>",
        "id": 294045723,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660817201
    }
]