[
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI've learned a few more fine points about that in the past few days, so <br>\nthe heuristics will approximate an actual solution eventually.  That is <br>\nall for the next release though, and it is a bit early to speculate how it <br>\nwill be there.  (There are still many Java/Swing issues on various <br>\nplatforms, some of them hard drop-outs due to Oracle.)</p>\n<p>Makarius</p>",
        "id": 294236883,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660905162
    },
    {
        "content": "<p>From: John Wickerson &lt;<a href=\"mailto:jpw48@cam.ac.uk\">jpw48@cam.ac.uk</a>&gt;<br>\nMinor bug report (not sure if this is Isabelle's fault or jEdit's, but here goes)...</p>\n<p>The word wrapping in the Output window of Isabelle/jEdit is a little bit off. That is, each line of text breaks about 1cm beyond the right-hand edge of the Output window (and that's independent of how I resize the window). Of course it's only a minor quibble because I can always scroll horizontally a little bit to see the rest of the output. It doesn't help to turn on/off the gutter.</p>\n<p>john</p>",
        "id": 294238532,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660905909
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nI think you mean the breaking of pretty-printed formal output. <br>\n(Word-wrap in the source is a different issue: there is also a snag here, <br>\nbecause Isabelle tokenization for {* ... *} is in conflict with jEdit <br>\ntokenization for words.)</p>\n<p>The font metrics and window size parameters for pretty printed output are <br>\nonly precise once the inner GUI component geometry is known.  It does not <br>\nquite work with extra decoration (scrollbars, window borders): before the <br>\nwindow is mapped these sizes are unknown, or I did not know how to get <br>\nthem in Java/AWT/Swing.</p>\n<p>So Isabelle2013 has some funny heuristics here that work for the most <br>\ncommon platforms, GUI look-and-feels, fonts, and font-sizes.  What do you <br>\nhave in this respect?</p>\n<p>Makarius</p>",
        "id": 294238536,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660905910
    },
    {
        "content": "<p>From: John Wickerson &lt;<a href=\"mailto:jpw48@cam.ac.uk\">jpw48@cam.ac.uk</a>&gt;<br>\nOn 13 Mar 2013, at 14:52, Makarius wrote:</p>\n<blockquote>\n<p>On Wed, 13 Mar 2013, John Wickerson wrote:</p>\n<blockquote>\n<p>The word wrapping in the Output window of Isabelle/jEdit is a little bit off. That is, each line of text breaks about 1cm beyond the right-hand edge of the Output window (and that's independent of how I resize the window). Of course it's only a minor quibble because I can always scroll horizontally a little bit to see the rest of the output. It doesn't help to turn on/off the gutter.</p>\n</blockquote>\n<p>I think you mean the breaking of pretty-printed formal output. (Word-wrap in the source is a different issue: there is also a snag here, because Isabelle tokenization for {* ... *} is in conflict with jEdit tokenization for words.)</p>\n</blockquote>\n<p>Yes, that's what I mean.</p>\n<blockquote>\n<p>The font metrics and window size parameters for pretty printed output are only precise once the inner GUI component geometry is known.  It does not quite work with extra decoration (scrollbars, window borders): before the window is mapped these sizes are unknown, or I did not know how to get them in Java/AWT/Swing.</p>\n<p>So Isabelle2013 has some funny heuristics here that work for the most common platforms, GUI look-and-feels, fonts, and font-sizes.  What do you have in this respect?</p>\n</blockquote>\n<p>I'm on Mac OS 10.7.5, with \"Swing look &amp; feel\" set to \"Metal\", font \"IsabelleText 14 Plain\". I've tried fiddling with each of these settings (well, except the OS) and the break points remain consistently about 1cm off the right edge of the window.</p>",
        "id": 294238582,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660905935
    },
    {
        "content": "<p>From: David Greenaway &lt;<a href=\"mailto:david.greenaway@nicta.com.au\">david.greenaway@nicta.com.au</a>&gt;<br>\nOn 14/03/13 00:52, Makarius wrote:</p>\n<blockquote>\n<p>On Wed, 13 Mar 2013, John Wickerson wrote:</p>\n<blockquote>\n<p>The word wrapping in the Output window of Isabelle/jEdit is a little<br>\nbit off. That is, each line of text breaks about 1cm beyond the<br>\nright-hand edge of the Output window (and that's independent of how<br>\nI resize the window). Of course it's only a minor quibble because<br>\nI can always scroll horizontally a little bit to see the rest of the<br>\noutput. It doesn't help to turn on/off the gutter.</p>\n</blockquote>\n</blockquote>\n<p>I also hit this problem, and had a go at fixing, with only minor<br>\nsuccess.</p>\n<blockquote>\n<p>I think you mean the breaking of pretty-printed formal output.<br>\n(Word-wrap in the source is a different issue: there is also a snag<br>\nhere, because Isabelle tokenization for {* ... *} is in conflict with<br>\njEdit tokenization for words.)</p>\n<p>The font metrics and window size parameters for pretty printed output<br>\nare only precise once the inner GUI component geometry is known.  It<br>\ndoes not quite work with extra decoration (scrollbars, window<br>\nborders): before the window is mapped these sizes are unknown, or<br>\nI did not know how to get them in Java/AWT/Swing.</p>\n</blockquote>\n<p>I found that \"getPainter.getWidth\" gave a better indication of a window<br>\nsize as opposed to getting the control's width and attempting to<br>\nsubtract off the size of scrollbars, etc.</p>\n<p>Another snag I hit is that \"metrics.stringWidth\" doesn't take into<br>\naccount anti-aliasing, which after 80 characters of rendering really<br>\nstarts to add up.</p>\n<p>Attached is a patch that may be a starting point to address some of the<br>\nproblems, but is by no means complete. I still get overflows when<br>\nIsabelle renders many wide characters on a line.</p>\n<p>I suspect a \"proper\" solution is to give the line-breaking algorithm<br>\na better understanding of how wide each character is, but I haven't had<br>\na chance to sit down and work out how hard this would be to implement.</p>\n<p>Cheers,<br>\nDavid</p>\n<hr>\n<p>The information in this e-mail may be confidential and subject to legal professional privilege and/or copyright. National ICT Australia Limited accepts no liability for any damage caused by this email or its attachments.<br>\n<a href=\"/user_uploads/14278/8uP5TAmCFNi8Cz6Tl8uFrEH9/jedit_proof.patch\">jedit_proof.patch</a></p>",
        "id": 294238631,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660905960
    },
    {
        "content": "<p>From: David Greenaway &lt;<a href=\"mailto:david.greenaway@nicta.com.au\">david.greenaway@nicta.com.au</a>&gt;<br>\nOn 14/03/13 10:00, David Greenaway wrote:</p>\n<blockquote>\n<p>I also hit this problem, and had a go at fixing, with only minor<br>\nsuccess.<br>\n[...]<br>\nAttached is a patch that may be a starting point to address some of<br>\nthe problems, but is by no means complete. I still get overflows when<br>\nIsabelle renders many wide characters on a line.</p>\n<p>I suspect a \"proper\" solution is to give the line-breaking algorithm<br>\na better understanding of how wide each character is, but I haven't<br>\nhad a chance to sit down and work out how hard this would be to<br>\nimplement.</p>\n</blockquote>\n<p>I decided to sit down and actually see if I could come up with a better<br>\nsolution for this problem. Attached is what I came up with (replacing<br>\nmy previously posted patch completely).</p>\n<p>In particular, \"Pretty\" internally uses \"number of spaces\" as its<br>\nmeasuring units. This patch attempts modifies \"PrettyTextArea\" to more<br>\naccurately measure strings and feed these widths into \"Pretty\" in the<br>\ncorrect units.</p>\n<p>This seems to give good results on Linux, with all combinations of<br>\nhinted/non-hinted aliased/anti-aliased fixed-width/non-fixed-width fonts<br>\nI tried.</p>\n<p>A one-space margin remains on the right-hand-side because non-hinted</p>\n<ul>\n<li>anti-aliased fonts still sometimes overflows by a few pixels, and<br>\nI couldn't determine why.</li>\n</ul>\n<p>The patch doesn't attempt to fix SideKick or tool-tips; if the Isabelle<br>\nmaintainers are happy with the approach in this patch, I would be happy<br>\nto extend it.</p>\n<p>Cheers,<br>\nDavid</p>\n<hr>\n<p>The information in this e-mail may be confidential and subject to legal professional privilege and/or copyright. National ICT Australia Limited accepts no liability for any damage caused by this email or its attachments.<br>\n<a href=\"/user_uploads/14278/WcWro2xDwduQ5ULUe9drJB6Z/jedit_rendering.patch\">jedit_rendering.patch</a></p>",
        "id": 294238678,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660905966
    }
]