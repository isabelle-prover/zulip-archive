[
    {
        "content": "<p>From: Gergely Buday &lt;<a href=\"mailto:gbuday@gmail.com\">gbuday@gmail.com</a>&gt;<br>\nMakarius wrote:</p>\n<blockquote>\n<p>Please excuse the ugly look-and-feel of XEmacs, we are trying hard to get<br>\nrid of it in the near future.</p>\n</blockquote>\n<p>I'm using fedora 10, the built-in xemacs did not work, gnu emacs did.</p>\n<p>What do you mean by getting rid of xemacs? Is the eclipse plugin on the way?</p>\n<ul>\n<li>Gergely</li>\n</ul>",
        "id": 294070401,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660826953
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nOn Sat, 10 Jan 2009, Gergely Buday wrote:</p>\n<blockquote>\n<p>Makarius wrote:</p>\n<blockquote>\n<p>Please excuse the ugly look-and-feel of XEmacs, we are trying hard to get<br>\nrid of it in the near future.</p>\n</blockquote>\n<p>I'm using fedora 10, the built-in xemacs did not work, gnu emacs did.</p>\n</blockquote>\n<p>This is also my experience: most xemacs packages of current Linux <br>\ndistributions are unusable.  Many people have switched to GNU Emacs 22 / <br>\nGtk already.</p>\n<blockquote>\n<p>What do you mean by getting rid of xemacs? Is the eclipse plugin on the <br>\nway?</p>\n</blockquote>\n<p>First of all, the (unfinished) 4.0 branch of Proof General is for GNU <br>\nEmacs only, no longer XEmacs.</p>\n<p>Concerning Eclipse, I have personally dismissed it altogether after <br>\nextensive comparison with alternatives, notably Netbeans 6.x (not 5.0 or <br>\nearlier).</p>\n<p>Right now we are working on some new prover interface technology that is <br>\nmeant to be \"generic\" to some extend -- it will work with usual Swing <br>\nthings, and is implemented in Scala/JVM.  Our main platform for <br>\nexperiments is jEdit, which is quite nice and small enough to get things <br>\ndone relatively quickly.</p>\n<p>Makarius</p>",
        "id": 294070421,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660826959
    },
    {
        "content": "<p>From: Slawomir Kolodynski &lt;<a href=\"mailto:skokodyn@yahoo.com\">skokodyn@yahoo.com</a>&gt;<br>\nWill it have support for mathematical notation (symbols) at<br>\nleast on the level ProofGeneral/XEmacs provides?  </p>\n<p>Slawekk</p>",
        "id": 294070439,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660826966
    },
    {
        "content": "<p>From: Makarius &lt;<a href=\"mailto:makarius@sketis.net\">makarius@sketis.net</a>&gt;<br>\nBasically yes, although some details will be different.</p>\n<p>First of all, native Isabelle symbols like \\&lt;forall&gt; will remain as is -- <br>\nthey provide an infinite store of symbols.  Note that the usual set of <br>\n\"standard\" symbols is just a convention.  E.g. one can expect \\&lt;forall&gt; to <br>\nlook like \\forall in LaTeX, while being able to invent new symbols as <br>\nrequired for your application.</p>\n<p>For the JVM platform, we already have a basic translation scheme to use <br>\nunicode as a poor-man's rendering mechanism for Isabelle text.  One could <br>\neven imagine an \"isabelle\" encoding for JVM that does the job seamlessly <br>\nwhen reading/writing files.</p>\n<p>Having standard conformant unicode code-points in memory is fine, but <br>\nactual display on the screen is still not fully settled.  One cannot <br>\nreally count on having the usual mathematical glyphs available on the <br>\nfonts being installed on a given system.  Until the Stix fonts come out in <br>\nmaybe 5 more years :-) we have our own homegrown unicode font, based on <br>\nTeX glyhps + Bitstream Vera (still ugly, but much less ugly than <br>\nEmacs/XSymbols).</p>\n<p>Input methods for mathematical symbols are yet another thing.  On jEdit it <br>\nis reasonable easy to use either \"abbreviations\" or context-sensitive <br>\n\"completion\".  E.g. you type something like ==&gt; and get the unicode <br>\nversion of \\&lt;Longrightarrow&gt; as expected.  You can also copy-paste these <br>\nthings then do a jEdit hypersearch over the file-system, for example.  <br>\n(This won't work with Emacs/XSymbol, of course.)</p>\n<p>If you know about more advanced input tools for mathematics for the Swing <br>\nplatform, I would be interested to hear about it.  Of course it needs to <br>\nbe free software.</p>\n<p>Makarius</p>",
        "id": 294070456,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660826972
    },
    {
        "content": "<p>From: Slawomir Kolodynski &lt;<a href=\"mailto:skokodyn@yahoo.com\">skokodyn@yahoo.com</a>&gt;<br>\nYou can consider JMathTeX ( <a href=\"http://jmathtex.sourceforge.net/index.html\">http://jmathtex.sourceforge.net/index.html</a> ). It is a GPL licensed library that can be used to display mathematics in Swing components. </p>\n<p>Slawekk</p>\n<p><a href=\"http://Formalmath.org\">Formalmath.org</a><br>\nLibrary of Formalized Mathematics for Isabelle/Isar (ZF Logic)</p>",
        "id": 294070469,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660826978
    }
]