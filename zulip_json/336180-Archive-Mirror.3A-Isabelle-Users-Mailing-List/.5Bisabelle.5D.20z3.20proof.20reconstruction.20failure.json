[
    {
        "content": "<p>From: Sascha Boehme &lt;<a href=\"mailto:boehmes@in.tum.de\">boehmes@in.tum.de</a>&gt;<br>\nHi Matthias,</p>\n<p>It seems that declaring rules as \"z3_rule\" hasn't been a feature<br>\nextensively tested so far.  It worked only overly restricted.  The<br>\nnext Isabelle release will be fixed in that respect.</p>\n<p>Cheers,<br>\nSascha</p>\n<p>Matthias Schmalz wrote:</p>",
        "id": 294139199,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660845261
    },
    {
        "content": "<p>From: Matthias Schmalz &lt;<a href=\"mailto:Matthias.Schmalz@inf.ethz.ch\">Matthias.Schmalz@inf.ethz.ch</a>&gt;<br>\nHello,</p>\n<p>when trying to proof the following (with z3):</p>\n<p>lemma \"x * y ≤ (0 :: int) ⟹ x ≤ 0 ∨ y ≤ 0\"<br>\nby smt</p>\n<p>I get a proof reconstruction failure:</p>\n<p>Z3 found a proof, but proof reconstruction failed at the following subgoal:<br>\n   assumptions:<br>\n     x * y ≤ 0<br>\n     ¬ y ≤ 0<br>\n     ¬ x ≤ 0<br>\n   proposition: False<br>\nAdding a rule to the lemma group \"z3_rule\" might solve this problem.</p>\n<p>I tried to add an appropriate lemma to the group z3_rule, but without <br>\nsuccess. Does anyone have an idea of how to make proof reconstruction <br>\nsucceed in this case?</p>\n<p>-Matthias</p>",
        "id": 294141974,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660846150
    },
    {
        "content": "<p>From: Sascha Boehme &lt;<a href=\"mailto:boehmes@in.tum.de\">boehmes@in.tum.de</a>&gt;<br>\nHello,</p>\n<p>This is the incompleteness of proof reconstruction for Z3 in Isabelle.<br>\nAlthough Z3 can find proofs for some nonlinear arithmetic problems, we<br>\ncurrently do not support proof reconstruction for such proofs and<br>\nconsequently fail on them.</p>\n<p>The error message indicates some means to \"complete\" proof<br>\nreconstruction in certain cases by proving intermediate steps in<br>\nadvance.  I wonder, however, which rule you proved here, since the Z3<br>\nproof reconstruction step that failed looks nearly identical to your<br>\noriginal goal.</p>\n<p>If you're willing to accept alternatives, here is one.  You can prove<br>\nthe lemma by Metis:</p>\n<p>lemma \"x * y ≤ (0 :: int) ⟹ x ≤ 0 ∨ y ≤ 0\"<br>\n    by (metis mult_le_0_iff)</p>\n<p>Cheers,<br>\nSascha</p>\n<p>Matthias Schmalz wrote:</p>",
        "id": 294141986,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660846156
    },
    {
        "content": "<p>From: Matthias Schmalz &lt;<a href=\"mailto:Matthias.Schmalz@inf.ethz.ch\">Matthias.Schmalz@inf.ethz.ch</a>&gt;<br>\nHi Sascha,</p>\n<p>thanks for explaining.<br>\nThis is a minimal example for illustrating the problem, and I do not <br>\nreally want to prove it with Z3. Yet, this kind of reconstruction <br>\nfailure arises with more complicated examples, where Z3 would be useful.<br>\nSo is there an easy way (e.g., by declaring a z3_rule) of making proof <br>\nreconstruction succeed in my example?</p>\n<p>-Matthias</p>",
        "id": 294142010,
        "sender_full_name": "Email Gateway",
        "timestamp": 1660846167
    }
]